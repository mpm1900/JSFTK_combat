{"version":3,"sources":["assets/img/forests/3.png","assets/img/forests/7.png","icons/svg/lorc/pentagram-rose.svg","icons/svg/lorc/cultist.svg","icons/svg/delapouite/coins.svg","icons/svg/lorc/broadsword.svg","assets/img/dungeon/4.png","icons/svg/lorc/battered-axe.svg","icons/svg/lorc/dodging.svg","icons/svg/lorc/all-for-one.svg","assets/img/forests/8.png","assets/img/forests/5.png","assets/img/dungeon/1.png","icons/svg/delapouite/mimic-chest.svg","icons/svg/lorc/sprint.svg","icons/svg/lorc/scythe.svg","icons/svg/lorc/ringing-bell.svg","icons/svg/lorc/bone-knife.svg","icons/svg/lorc/drink-me.svg","icons/svg/lorc/molotov.svg","icons/svg/delapouite/perspective-dice-six.svg","icons/svg/lorc/high-shot.svg","icons/svg/lorc/shieldcomb.svg","icons/svg/delapouite/armor-upgrade.svg","icons/svg/delapouite/armor-downgrade.svg","icons/svg/lorc/knapsack.svg","icons/svg/lorc/locked-chest.svg","icons/svg/lorc/anvil-impact.svg","assets/img/forests/1.png","icons/svg/lorc/hammer-drop.svg","assets/img/dungeon/3.png","assets/img/dungeon/2.png","icons/svg/delapouite/chest-armor.svg","icons/svg/delapouite/cross-shield.svg","icons/svg/lorc/leather-boot.svg","icons/svg/lorc/visored-helm.svg","icons/svg/delapouite/ring.svg","icons/svg/delapouite/heart-necklace.svg","icons/svg/lorc/knife-thrust.svg","icons/svg/delapouite/overlord-helm.svg","icons/svg/delapouite/golem-head.svg","icons/svg/lorc/wolf-head.svg","icons/svg/lorc/raven.svg","icons/svg/lorc/snake.svg","icons/svg/lorc/witch-flight.svg","icons/svg/skoll/troll.svg","icons/svg/lorc/werewolf.svg","icons/svg/lorc/boar-tusks.svg","icons/svg/lorc/unfriendly-fire.svg","icons/svg/lorc/haunting.svg","icons/svg/lorc/daemon-skull.svg","icons/svg/delapouite/carnivorous-plant.svg","icons/svg/lorc/eyestalk.svg","icons/svg/lorc/leeching-worm.svg","icons/svg/lorc/spectre.svg","icons/svg/lorc/diablo-skull.svg","icons/svg/lorc/harry-potter-skull.svg","icons/svg/delapouite/spider-eye.svg","icons/svg/delapouite/fairy.svg","icons/svg/lorc/grim-reaper.svg","icons/svg/delapouite/grasping-slug.svg","icons/svg/delapouite/shambling-mound.svg","icons/svg/lorc/infested-mass.svg","icons/svg/lorc/imp.svg","icons/svg/lorc/behold.svg","icons/svg/delapouite/brain-tentacle.svg","icons/svg/lorc/laurel-crown.svg","icons/svg/delapouite/heart-beats.svg","icons/svg/delapouite/biceps.svg","icons/svg/lorc/brain.svg","icons/svg/sbed/hand.svg","icons/svg/lorc/lyre.svg","icons/svg/lorc/clover.svg","icons/svg/lorc/robe.svg","icons/svg/lorc/scale-mail.svg","icons/svg/lorc/lightning-shield.svg","icons/svg/delapouite/robin-hood-hat.svg","icons/svg/lorc/pointy-hat.svg","icons/svg/lorc/battle-axe.svg","icons/svg/lorc/gavel.svg","icons/svg/lorc/heavy-arrow.svg","icons/svg/lorc/bowie-knife.svg","icons/svg/skoll/revolver.svg","icons/svg/lorc/wizard-staff.svg","icons/svg/lorc/croc-sword.svg","icons/svg/skoll/fist.svg","icons/svg/delapouite/herbs-bundle.svg","icons/svg/lorc/lotus-flower.svg","icons/svg/delapouite/medicine-pills.svg","icons/svg/delapouite/executioner-hood.svg","icons/svg/lorc/cowled.svg","icons/svg/delapouite/female-vampire.svg","icons/svg/delapouite/wizard-face.svg","icons/svg/delapouite/kenku-head.svg","icons/svg/kier-heyl/dwarf-helmet.svg","icons/svg/delapouite/pirate-captain.svg","icons/svg/delapouite/shield-impact.svg","icons/svg/lorc/energy-arrow.svg","icons/svg/lorc/fire-zone.svg","icons/svg/lorc/magic-swirl.svg","icons/svg/lorc/heavy-timer.svg","icons/svg/delapouite/extra-time.svg","icons/svg/sbed/lucifer-cannon.svg","icons/svg/delapouite/firewall.svg","icons/svg/lorc/flat-hammer.svg","icons/svg/lorc/plain-dagger.svg","icons/svg/lorc/pointy-sword.svg","icons/svg/lorc/axe-swing.svg","icons/svg/lorc/saber-slash.svg","icons/svg/lorc/wave-strike.svg","icons/svg/lorc/sparkling-sabre.svg","icons/svg/lorc/bordered-shield.svg","icons/svg/lorc/resonance.svg","icons/svg/lorc/gunshot.svg","icons/svg/delapouite/crosshair.svg","icons/svg/delapouite/bullet-impacts.svg","icons/svg/delapouite/backward-time.svg","icons/svg/lorc/snail.svg","icons/svg/lorc/double-shot.svg","icons/svg/sbed/health-normal.svg","icons/svg/lorc/embrassed-energy.svg","icons/svg/lorc/life-support.svg","icons/svg/lorc/punch.svg","icons/svg/lorc/ubisoft-sun.svg","icons/svg/lorc/star-swirl.svg","icons/svg/sbed/targeted.svg","icons/svg/delapouite/sticky-boot.svg","icons/svg/lorc/biohazard.svg","icons/svg/carl-olsen/flame.svg","icons/svg/lorc/bleeding-wound.svg","icons/svg/lorc/snowflake-2.svg","icons/svg/lorc/broken-shield.svg","icons/svg/lorc/power-lightning.svg","icons/svg/lorc/split-cross.svg","icons/svg/lorc/broken-bone.svg","icons/svg/delapouite/leather-armor.svg","icons/svg/lorc/crowned-skull.svg","icons/svg/lorc/crossed-swords.svg","icons/svg/lorc/death-zone.svg","icons/svg/lorc/divided-spiral.svg","state/util.ts","hooks/useActions.ts","game/Stats/constants.ts","util/undefAdd.ts","util/getRandom.ts","util/noneg.ts","game/Stats/util.ts","game/Status/constants.ts","game/Weapon/builders/damage.ts","game/Weapon/builders/goldValue.ts","game/Weapon/builders/rarity.ts","game/Weapon/builders/stats.ts","game/Weapon/builders/typeConfig.ts","game/Weapon/builders/index.ts","game/Skill/skills/index.ts","game/Skill/skills/axe.ts","game/Weapon/builders/objects/axe.ts","game/Skill/skills/bow.ts","game/Weapon/builders/objects/bow.ts","game/Skill/skills/catalyst.ts","game/Weapon/builders/objects/catalyst.ts","game/Skill/skills/chime.ts","game/Weapon/builders/objects/chime.ts","game/Skill/skills/scythe.ts","game/Weapon/builders/objects/scythe.ts","game/Weapon/builders/unique/test_weapon.ts","game/Skill/skills/blunt.ts","game/Weapon/builders/objects/hammer.ts","game/Skill/skills/dagger.ts","game/Weapon/builders/objects/dagger.ts","game/Skill/skills/greatsword.ts","game/Weapon/builders/objects/greatsword.ts","game/Skill/skills/pistol.ts","game/Weapon/builders/objects/pistol.ts","game/Skill/skills/sword.ts","game/Weapon/builders/objects/sword.ts","game/Weapon/builders/objects/index.ts","game/Armor/builders/index.ts","game/Skill/skills/armor.ts","game/Armor/builders/shields/level_0.ts","game/Armor/builders/constants.ts","game/Armor/builders/pendants/index.ts","game/Armor/builders/rings/index.ts","game/Armor/builders/shields/level_1.ts","game/Armor/builders/shields/level_2.ts","game/Armor/builders/sets/index.tsx","game/Encounter/floors/util.tsx","util/makeRandom.ts","game/Item/util.ts","game/Skill/skills/consumables.ts","game/Consumable/objects/godsbeard.ts","game/Character/enemies/forest_wolf.ts","game/Character/enemies/forest_witch.ts","game/Character/enemies/forest_troll.ts","game/Character/enemies/forest_beast.ts","game/Character/enemies/forest_boar.ts","game/Character/enemies/cultist_brute.ts","game/Character/enemies/cultist.ts","game/Character/enemies/cultist_scholar.ts","game/Character/enemies/flame_wisp.ts","game/Character/enemies/banshee.ts","game/Character/enemies/consecrated_guard.ts","game/Character/enemies/infected_eyestalk.ts","game/Character/enemies/tomb_spirit.ts","game/Encounter/floors/level1/floor-1-config.tsx","game/Character/enemies/forest_snake.ts","game/Character/enemies/forest_raven.ts","game/Character/enemies/infected_biter.ts","game/Character/enemies/infected_leech.ts","game/Character/elites/forest_golem.ts","game/Character/elites/mimic_floor_1.ts","game/Encounter/floors/level1/floor-1.tsx","game/Character/bosses/consecrated_beast.ts","game/Character/elites/mimic_floor_2.ts","game/Character/enemies/tomb_guardian.ts","game/Character/enemies/tomb_spider.ts","game/Encounter/floors/level2/floor-2a-config.tsx","game/Encounter/floors/level2/floor-2a.tsx","game/Encounter/floors/floor-3.tsx","game/Character/enemies/forest_fairy.ts","game/Character/enemies/forest_reaper.ts","game/Character/enemies/forest_slime.ts","game/Character/enemies/infected_golem.ts","game/Character/enemies/infected_mass.ts","game/Character/enemies/lightning_imp.ts","game/Encounter/floors/level2/floor-2b-config.tsx","game/Character/bosses/behold.ts","game/Encounter/floors/level2/floor-2b.tsx","game/Encounter/floors/index.tsx","game/Encounter/constants.ts","theme/index.ts","game/Character/constants.ts","game/Character/enemies/_builder.ts","game/Character/bosses/lich.ts","game/Character/bosses/forest_mind.ts","game/Weapon/builders/unique/boss_lich.ts","game/Weapon/builders/unique/boss_mind.ts","game/Weapon/constants.ts","game/Roll/util.ts","game/Armor/builders/static/level4/assassin.ts","game/Armor/builders/static/level4/bishop.ts","game/Armor/builders/static/level4/old_knight.ts","game/Armor/builders/static/level4/royal.ts","game/Armor/builders/static/level4/index.ts","game/Armor/builders/static/level3/fallen_raider.ts","game/Armor/builders/static/level3/necromancer.ts","game/Armor/builders/static/level3/noble.ts","game/Armor/builders/static/level3/rogue.ts","game/Armor/builders/static/level3/index.ts","game/Armor/builders/static/level2/antiquated.ts","game/Armor/builders/static/level2/bone.ts","game/Armor/builders/static/level2/hunter.ts","game/Armor/builders/static/level2/iron.ts","game/Armor/builders/static/level2/novice.ts","game/Armor/builders/static/level2/index.ts","game/Armor/builders/static/level1/adventure.ts","game/Armor/builders/static/level1/apprentice.ts","game/Armor/builders/static/level1/aristocrat.ts","game/Armor/builders/static/level1/chain_mail.ts","game/Armor/builders/static/level1/graveguard.ts","game/Armor/builders/static/level1/harrowed.ts","game/Armor/builders/static/level1/index.ts","game/Armor/builders/static/level0/corsair.ts","game/Armor/builders/static/level0/drifter.ts","game/Armor/builders/static/level0/executioner.ts","game/Armor/builders/static/level0/mercenary.ts","game/Armor/builders/static/level0/patrician.ts","game/Armor/builders/static/level0/ranger.ts","game/Armor/builders/static/level0/reaper.ts","game/Armor/builders/static/level0/student.ts","game/Armor/builders/static/level0/index.ts","game/Armor/builders/static/index.ts","game/Armor/constants.ts","game/Consumable/util.ts","game/Weapon/fists.ts","game/Consumable/objects/celestial_lotus.ts","game/Consumable/objects/poison_knife.ts","game/Consumable/objects/beast_drug.ts","game/Consumable/objects/curing_potion.ts","game/Consumable/objects/firebomb.ts","game/Item/constants.ts","game/Character/util.ts","game/Party/util.ts","game/Party/constants.ts","state/party/index.ts","game/Other/util.ts","game/Encounter/builders.ts","grid/util.ts","game/Encounter/util.ts","state/game2/index.ts","contexts/GameStateContext/index.tsx","contexts/PartyContext/index.tsx","contexts/ModalContext/reducer.ts","contexts/ModalContext/index.tsx","elements/flex.ts","elements/button.tsx","components/Icon/index.tsx","components/Hover/index.tsx","components/Tooltip/index.tsx","hooks/useOnClickOutside.ts","elements/box.tsx","icons/skills.ts","icons/status.ts","icons/maps.tsx","elements/badge.tsx","components/SkillChecks/index.tsx","elements/monospace.tsx","components/StatsPreview/index.tsx","game/Skill/constants.ts","game/Skill/util.ts","components/SkillPreview/index.tsx","components/ItemCard/index.tsx","components/CombatVictoryModal/pure.tsx","components/CombatVictoryModal/index.tsx","game/Queue/util.ts","game/Skill/committer.ts","contexts/CombatContext/index.tsx","game/AI/util.ts","components/RoundResultRenderer/Perfect.tsx","components/RoundResultRenderer/index.tsx","components/PartyActiveCharacter/StatBar.tsx","contexts/UIContext/index.tsx","components/PartyActiveCharacter/Items.tsx","components/PartyActiveCharacter/Name.tsx","components/CharacterIcon/index.tsx","components/PartyActiveCharacter/Image.tsx","components/PartyActiveCharacter/elements.tsx","components/PartyActiveCharacter/WeaponList.tsx","components/PartyActiveCharacter/Stats.tsx","components/PartyActiveCharacter/MenuSelect.tsx","components/PartyActiveCharacter/HoverArea.tsx","elements/shapes.tsx","components/PartyActiveCharacter/index.tsx","components/PartyActiveCharacter/ArmorList.tsx","components/EquipItemModal/index.tsx","components/CombatActions/index.tsx","components/Gauge/v2.tsx","components/NumberChange/index.tsx","components/Gauge/index.tsx","components/TagPreview/index.tsx","hooks/usePlayerCharacterNotifications.tsx","components/EnemyCharacter/Health.tsx","contexts/LocalToastContext/index.tsx","hooks/useElementShake.tsx","components/EnemyCharacter/index.tsx","components/DamagePreview/index.tsx","components/CombatParty/index.tsx","components/AppHeader/index.tsx","components/PartyResources/index.tsx","components/CombatQueue/index.tsx","contexts/CombatLogContext/util.tsx","contexts/CombatLogContext/index.tsx","components/CombatLog/index.tsx","domain/Combat.tsx","hooks/useCombatStart.tsx","routes/index.tsx","components/Shop/index.tsx","components/Shrine/index.tsx","components/BossRewards/index.tsx","components/Chest/index.tsx","components/Smith/CharacterSelector.tsx","elements/typography.tsx","components/Smith/UpgradeOptions.tsx","components/Smith/index.tsx","components/NonCombatEncounter/index.tsx","game/Encounter/text/index.ts","components/EncounterActions/Choice.tsx","components/EncounterActions/Shop.tsx","components/EncounterActions/Shrine.tsx","components/EncounterActions/Smith.tsx","components/EncounterActions/index.tsx","icons/static/Boss.tsx","icons/static/Combat.tsx","icons/static/Random.tsx","icons/static/Shine.tsx","icons/static/Shop.tsx","icons/static/Start.tsx","icons/static/Chest.tsx","icons/static/Elite.tsx","icons/static/Smith.tsx","components/Grid/hex.tsx","components/Grid/index.tsx","domain/Party.tsx","domain/Start.tsx","game/Consumable/constants.ts","components/PartyCharacterConsumables/index.tsx","components/PartyCharacter/Stats.tsx","components/PartyCharacter/Name.tsx","components/PartyCharacter/Actions.tsx","components/PartyCharacter/Health.tsx","components/PartyCharacter/index.tsx","components/PlayerParty/index.tsx","contexts/CombatContext/context.tsx","components/AppBg/index.tsx","App.tsx","serviceWorker.ts","index.tsx","state/index.ts"],"names":["module","exports","makeReducer","core","initialState","state","action","coreFn","type","useActions","actions","dispatch","useDispatch","useMemo","bindActionCreators","ZERO_STATS","vigor","strength","intelligence","dexterity","charisma","agility","luck","armor","resistance","evasion","maxHealthOffset","healthRegeneration","damageTakenModifier","damageTakenRangeModifiers","melee","ranged","damageReflection","attackDamageOffset","attackDamageModifier","criticalChance","criticalDamageModifier","damageModifiers","flying","undead","beast","queueConsolidationModifier","queueValueSet","undefined","goldModifier","maxInspirationOffset","consumableHealthGainOffset","minHealthOffset","BASE_C_STATS","CLASS_STATS","executioner","mercenary","ranger","reaper","student","patrician","corsair","drifter","enemy","DAMAGE_BONUS_KEYS","DEFENSE_BONUS_KEYS","HEALTH_FOCUS_BONUS_KEYS","STAT_BONUS_KEYS","STAT_KEY_LABELS","undefAdd","a","b","getRandom","items","Math","floor","random","length","noneg","value","combineStats","stats","reduce","result","STATUS_CONFIG","bleeding","name","description","canStack","isTemporary","duration","immunities","burning","frozen","poisoned","shocked","stunned","wet","rushed","interrupted","reset","evasive","resilient","protected","targeted","cure","blessed","GLOBAL_DAMAGE_OFFSETS","axe","hammer","sword","greatsword","bow","dagger","scythe","catalyst","chime","pistol","fist","WEAPON_DAMAGE_CONFIG","starting","rusted","tomb","buried","withering","glass","iron","steel","stainless","ancient","crystal","elemental","cursed","sharp","hardened","engraved","ethereal","exquisite","divine","arcane","celestial","mythic","unique","BASE_WEAPON_TYPES_GOLD","WEAPON_CLASS_GOLD_OFFSETS","WEAPON_CLASS_RARIES","DEFAULT_WEAPON_TYPE_STATS","DEFAULT_WEAPON_TYPE_CONFIG","stat","twoHand","range","damageType","createWeapon","weaponType","weaponClass","skills","goldValue","damageValue","rarity","defaultStats","id","v4","itemType","breakable","damage","createBreakableWeapon","createSkill","rolls","offset","rest","damageModifier","splashDamageModifier","targetType","healing","perfectSplash","perfectPierce","perfectStatus","CHOP","SWING","WITHERING_SWING","GLASS_SWING","AXE_SPIN","FLURRY","STUN","CLEAVE","SLICE","SLASH","EXECUTIONER_AXE","AXES","0","1","2","3","4","5","SHOT","WITHERING_SHOT","GLASS_SHOT","HEADSHOT","PIN_DOWN","WOUNDING_SHOT","RANGERS_BOW","BOWS","BLAST","GLASS_BLAST","ARCANE","NOVA","ENFLAME","ENGULF","PROTECT","TIME_JUMP","STUDENTS_CATALYST","CATALYSTS","RING","WITHERING_RING","GLASS_RING","REVERBERATE","SLOW","VANISH","RUSH","RESET","PATRICIANS_CHIME","CHIMES","THRUST","ARMOR_UP","EVADE_UP","SCYTHES","TEST_WEAPON","SMASH","WITHERING_SMASH","GLASS_SMASH","RIPPLE","EARTHQUAKE","CRUSH","HAMMERS","STRIKE","WITHERING_STRIKE","GLASS_STRIKE","LUNGE","STAB","DAGGERS","WIDE_SWING","GREATSWORDS","FIRE","SNIPE","FAN_FIRE","CORSAIR_PISTOL","PISTOLS","SWORDS","WEAPONS_BY_LEVEL","createArmor","Object","keys","allWeapons","level","parseInt","resource","upgrades","createFootwear","createHat","createHeavyArmor","createHelmet","createLightArmor","createMagicArmor","createMagicHat","createShield","createRing","createPendant","TAUNT","weaponStatOverride","BROKEN_SHIELD","PENDANTS_BY_LEVEL","RINGS_BY_LEVEL","SHIELDS_BY_LEVEL","ARMOR_BY_LEVEL","makeRandomFloorEncounter","characterList","enemyCount","Array","fill","map","_","buildFloorEnemeis","configs","encounterSizes","size","depth","enemies","filter","c","depths","includes","res","current","index","makeRandom","max","min","getRandomItem","HEAL","REMOVE_CURSES","POISON_KNIFE","cid","GODSBEARD","skill","consumableId","FOREST_WOLF","makeEnemy","Wolf","makeEnemyWeapon","makeEnemyReward","FOREST_WITCH","Witch","FOREST_TROLL","Troll","FOREST_BEAST","BeastMan","FOREST_BOAR","Boar","CULTIST_BRUTE","Cultist","CULTIST","CULTIST_SCHOLAR","FLAME_WISP","FireWhisp","stack","BANSHEE","Banshee","CONSECRATED_GUARD","Skull","INFECTED_EYESTALK","Icon","TOMB_SPIRIT","Spirit","Floor1EnemyConfigs","Bee","Raven","Floor1AltEnemyConfigs","Floor1EliteEnemyConfigs","Golem","Floor1EncounterSizes","6","7","8","9","Floor1EliteEncounterSizes","MIMIC_FLOOR_1","Mimic","FLOOR_1_ID","CONSECRATED_BEAST_ID","CONSECRATED_BEAST","Beast","MIMIC_FLOOR_2","TOMB_GUARDIAN","TOMB_SPIDER","Spider","Floor2AEnemyConfigs","Floor2AEncounterSizes","Floor2AEliteEncounterSizes","FLOOR_2A_ID","FLOOR_3A_ID","FOREST_FAIRY","FOREST_REAPER","FOREST_SLIME","INFECTED_GOLEM","INFECTED_MASS","LIGHTNING_IMP","Floor2BEncounterSizes","Floor2BEliteEncounterSizes","BEHOLD_ID","BEHOLD","FLOOR_2B_ID","FLOOR_CONFIGS_BY_ID","floorId","bosses","LICH","altBosses","FOREST_MIND","w","mimic","eliteEnemies","altEnemies","FloorConfig2A","FloorConfig2B","FLOOR_NAMES","ZERO_REWARD","gold","xp","status","armorDown","resDown","attackDown","armorUp","attackUp","resUp","justGold","justXp","justRandomItem","Theme","CHARACTER_XP_MAX","CHARACTER_CLASS_COLORS","BASE_CHARACTER","isCharacter","icon","partyId","experience","class","healthOffset","inspirationOffset","tags","weapon","consumables","possibleRewards","health","BASE_WEAPON","LICH_ID","Lich","FOREST_MIND_ID","LICH_SWORD","MINDSTEM_CATALYST","CLASS_WEAPONS","BOSS_ITEMS","resolveCheck","character","key","statValue","getBaseStatValue","roll","DiceRoll","total","AssassinHood","AssassinCloak","AssassinBoots","BishopMitre","BishopRobes","BishopShoes","OldKnightHelmet","OldKnightArmor","OldKnightBoots","RoyalHat","RoyalAttire","RoyalShoes","ARMOR_LEVEL_4","FallenRaiderHelmet","FallenRaiderArmor","FallenRaiderBoots","NecromancerCowl","NecromancerRobes","NecromancerWraps","NobleHat","NobleAttire","NobleShoes","RogueHood","RogueCloak","RogueBoots","ARMOR_LEVEL_3","AntiquatedHat","AntiquatedAttire","AntiquatedShoes","BoneHelmet","BoneArmor","BoneBoots","HunterHood","HunterCloak","HunterBoots","IronHelmet","IronArmor","IronBoots","NoviceHat","NoviceRobes","NoviceShoes","ARMOR_LEVEL_2","AdventureHood","AdventureCloak","AdventureBoots","ApprenticeHat","ApprenticeRobes","ApprenticeShoes","AristocratHat","AristocratAttire","AristocratShoes","ChainMailHelmet","ChainMailArmor","ChainMailBoots","GraveguardHelmet","GraveguardArmor","GraveguardBoots","HarrowedHood","HarrowedCloak","HarrowedBoots","ARMOR_LEVEL_1","CorsairHat","CorsairAttire","CorsairShoes","DrifterHat","DrifterShirt","DrifterShoes","ExecutionerHelmet","ExecutionerArmor","ExecutionerBoots","MercenaryHelmet","MercenaryArmor","MercenaryBoots","PatricianHat","PatricianAttire","PatricianShoes","RangerHood","RangerCloak","RangerBoots","ReaperHood","ReaperCloak","ReaperBoots","StudentHat","StudentRobes","StudentShoes","ARMOR_LEVEL_0","ALL_ARMOR","CLASS_ARMOR","considateConsumableListToStack","forEach","s","consumable","count","updateStackItem","FISTS","CELESTIAL_LOTUS","BEAST_DRUG","CURE","CURE_POTION","FIREBOMB","weaponDamageOverride","ITEM_RARITY_COLORS","common","uncommon","rare","epic","CLASS_STARTING_CONSUMABLES","CHARACTER_RESOURCES","checkForProcessedCharacter","processed","Error","makeCharacter","characterClass","processCharacter","isCapKey","capStats","r","getSkills","statusImmunities","baseVigor","startingHealth","maxHealth","maxInspiration","inspiration","rawStats","getDamageResistance","hasStatus","statusType","hasAnyStatus","statusTypes","some","hasImmunity","getReflectedDamage","target","rawDamage","commitDamage","ignoreResistance","pc","rawDamageValue","ceil","decrementStatusDurations","addMultipleStatus","types","durationOverride","statusConfig","existingStatus","find","findStatus","addStatus","checkStatus","equipWeapon","existingWeapon","getRewardsFromCharacter","checkedCharacter","failed","rewards","i","levelUp","isParty","obj","checkForProcessedParty","party","characters","findCharacterInParty","processParty","updateCharacter","characterId","updater","makeParty","isElite","sideIndex","config","makeBossParty","commitRewards","goldMultiplier","addExperience","xpToNextLevel","PLAYER_PARTY_ID","SET_GOLD","actionCreators","payload","item","updateParty","upsertCharacter","deleteCharacter","upsertItem","setGold","jack","jim","john","INITIAL_STATE","consolidateRewards","reward","buildRandomEncounter","hex","isShop","isValueEqual","MIN_HEX","getDepth","isStart","isSide","q","isCenter","CENTER_HEX","isEnd","FLOOR_SIZE","buildRandomEncounterType","encounter","makeEncounter","buildCombatEncounter","blocking","buildBossEncounter","buildRewardEncounter","buildShopEncounter","buildShrineEncounter","boss","isMimic","isOpened","costs","getItemCost","results","makeHex","addHex","makeEncounterArray","maxQ","maxR","shopIndex","ri","e","HEX_DIRECTIONS","completed","seen","makeFloor2","encounters","loading","itemId","setTimeout","chooseNext","nextFloor","removeItem","completeCurrent","openCurrent","updateCurrentFloor","floors","adjacentHexes","dir","getAdjacent","es","defaultValue","started","currentHex","currentFloor","currentEncounter","previousEncounter","GameStateContext","React","createContext","useGameStateContext","useContext","GameStateContextProvider","props","children","useSelector","game","useState","setStarted","f","JSON","stringify","setPreviousEncounter","useEffect","Provider","defaultContextValue","rawParty","activeCharacter","findCharacter","findRawCharacter","setActiveCharacter","equipItem","unequipItem","purchaseItem","cost","upgradeItem","sellItem","refreshParty","PartyContext","PartyContextProvider","activeCharacterId","setActiveCharacterId","existingArmor","equipArmor","unequipArmor","usePartyContext","isOpen","contents","callback","styles","OPEN","CLOSE","style","reducer","coreFunction","ModalContext","open","close","setBlocking","setPayload","setContents","setCallback","setStyles","useModalContext","getContextValue","Modal","setAppElement","ModalContextProvider","reducerValue","useReducer","context","onRequestClose","content","backgroundColor","color","width","margin","bottom","borderColor","modal","overlay","zIndex","FlexContainer","styled","display","flexDirection","$direction","flex","$full","justifyContent","$center","FullContainer","Button","cursor","background","boxShadow","textShadow","border","outline","padding","userSelect","RedButton","withStyle","fontWeight","borderTop","borderBottom","animationDirection","animationIterationCount","animationName","src","shadow","onClick","setLoading","svg","setSvg","fetch","then","text","className","height","dangerouslySetInnerHTML","__html","Hover","delay","internalHovering","setInternalHovering","isHovering","setIsHovering","guid","setGuid","useLayoutEffect","onMouseEnter","preventDefault","stopPropagation","onMouseLeave","Tooltip","direction","tagName","arrow","HoverToolTip","ClickToolTip","setIsOpen","ref","useRef","handler","listener","event","contains","document","addEventListener","removeEventListener","useOnClickOutside","p","v","BoxContainer","substyle","dark","tag","Element","boxSizing","SKILL_ICONS","Punch","Shot","Headshot","PinDown","Flurry","SpreadShot","Arcane","Nova","Blast","TimeJump","Enflame","Engulf","Ring","Reverberate","Smash","Strike","Swing","Chop","Thrust","Earthquake","Shockwave","Ripple","Crush","AxeSpin","Cleave","Slash","Lunge","Stab","Slice","Swipe","Fire","Snipe","FanFire","Stun","Reset","Taunt","Slow","Protect","Heal","Bless","PoisonKnife","Firebomb","CurePotion","Restore","Rush","Vanish","EvadeUp","ArmorUp","AttackUp","ArmorDown","STATUS_ICONS","Evasive","Stunned","Targeted","Protected","Poisoned","Burning","Bleeding","Frozen","Shocked","SpeedDown","ResistanceDown","Cursed","STAT_ICONS","Vigor","Strength","Brain","Hand","Masks","Agility","Clover","ARMOR_TYPE_ICONS","MagicArmor","ClothArmor","Armor","shield","Shield","ward","MagicShield","footwear","Footwear","hat","Hat","MagicHat","helmet","Helmet","pendant","Pendant","ring","WEAPON_TYPE_ICONS","Axe","Blunt","Bow","Dagger","Chime","Handgun","MagicStaff","Scythe","Sword","Greatsword","Fist","RESOURCE_ICONS","Weapon","offhand","body","head","feet","CONSUMABLE_ITEM_ICONS","Godsbeard","Lotus","BeastDrug","CONSUMABLE_ITEM_COLORS","CHARACTER_CLASS_ICONS","Executioner","Mercenary","Bard","Corsair","Hunter","Reaper","Scholar","Hobo","Div","transform","Badge","withWrapper","$style","position","$absolute","fontFamily","$size","alignItems","lineHeight","borderRadius","$color","top","$top","$bottom","right","$right","left","$left","transition","SkillChecks","perfect","every","check","label","SkillCheck","iconSize","crit","colors","getPerfectStatusColors","opacity","getColor","X","Monospace","defense_key_colors","getSign","n","StatsPreview","fontSize","textTransform","abs","PERFECT_DISPLAY_INFO","splash","pierce","heal","getTargetSkillResult","sourceResult","dodgeResult","dodgeSuccess","source","getRawDamage","totalDamage","reflectedDamage","loggedDamgge","getSkillResult","targets","inspirationUsed","rollResults","passedCount","criticalHitSuccess","rollDamageModifier","round","weaponRangeOverride","accuracySuccess","weaponDidBreak","splashDamage","addedStatus","getSourceSkillResult","targetResults","resolveSkillTarget","makeSkillTarget","getSkillDamage","getPerfectText","perfectKeys","base","getPerfectKeys","pre","SkillPreview","perfectChance","marginTop","minWidth","marginRight","marginBottom","getDamageColor","ItemTitle","$rarity","ItemSubtitle","ItemCard","showBuyButton","buyButtonDisabled","buyText","onBuyClick","isArmor","isWeapon","rarityColor","textAlign","borderWidth","whiteSpace","marginLeft","minHeight","flexWrap","Melee","Ranged","Breakable","disabled","getItem","CombatVictoryModalPure","title","showOther","onEquipClick","onNextClick","setItems","first","next","Gold","XP","CombatVictoryModal","consolidatedRewards","makeCombatQueue","sortedCharacters","sort","validateQueue","AGILITY_OFFSET","consolidateQueue","queue","Number","POSITIVE_INFINITY","getMin","shiftQueue","getFirst","commitQueueUpdates","pcs","shiftedQueue","partyUpdater","commitSkillResults","playerParty","enemyParty","targetResult","sourceParty","targetParty","localUpdate","selectedSkill","selectedTargets","roundResults","activeRound","isRunning","isRenderingResult","onSkillSelect","onTargetsSelect","start","commit","equipItemCombat","CombatContext","useCombatContext","CombatContextProvider","setEnemyParty","history","useHistory","setIsRunning","setIsRenderingResult","setQueue","resultCommitter","roundId","setRoundId","setRoundResults","setActiveRound","selectedTarget","setSelectedTarget","setSelectedSkill","completeRound","useCallback","targetedCharacters","t","getSkillTargetOptions","getAIAction","execEnemyTurn","getRolledRewards","push","consumableIndex","nextTarget","roundTarget","Perfect","show","useSpring","div","RoundResultRenderer","isModal","RoundResult","isDone","setIsDone","activeIndex","setActiveIndex","stream","Kefir","sequentially","onValue","onEnd","later","showPerfect","isPlayer","showTarget","getStatColor","StatBar","paddingTop","paddingBottom","playerCanEquipItem","openCharacterInventoryId","showSkillTooltips","hoverQueueCharacterId","onCharacterConsumableClick","setPlayerCanEquipItem","setOpenCharacterInventoryId","setOnCharacterConsumableClick","fn","setShowSkillTooltips","setHoverQueueCharacterId","UIContext","useUIContext","UIContextProvider","_setOnCharacterConsumableClick","ItemRow","$disabled","paddingLeft","Items","setActiveItem","onHover","canUnequip","Item","distance","Name","CharacterIcon","iconStyle","overflow","Image","Row","$active","ActionsRow","WeaponList","canEquip","onEquipItem","activeItemId","setActiveItemId","condenseListToStack","localeCompare","StatRow","withStyleDeep","Stats","k","Stat","ACTIVE_CHARACTER_MENU_KEYS","render","Weapons","MenuSelect","activeKey","onActiveKeyChange","option","paddingRight","HoverArea","activeItem","foundArmor","Hexagon","childStyle","mod","boxW","boxH","triH","triW","tHeight","borderRight","borderLeft","HexBadge","stroke","rotate","angle","HoverHexBadge","PartyActiveCharacter","activeMenuKey","setActiveMenuKey","activeOption","o","maxHeight","ArmorList","EquipItemModal","CombatActions","Fragment","Inventory","Gauge2","percentage","oldPercentage","setOldPercentage","from","to","friction","mass","tension","maxWidth","NumberChange","previousValue","setPreviousValue","clamp","HealthGauge","showNumbers","XPGauge","TagPreview","immunity","usePlayerCharacterNotifications","shake","previousHealth","setPreviousHealth","previousLevel","setPreviousLevel","healthDiff","lastRound","chResult","Health","Toast","animation","useTransition","enter","leave","LocalToastRp","springConfig","useElementShake","immediate","reverse","shakeStyles","exec","EnemyCharacter","isBoss","active","DamagePreview","raw","CombatParty","AppHeader","PartyResources","CombatQueue","sortedIds","getSortedIds","bigList","NEGATIVE_INFINITY","getMax","widthCoef","Span","SkillSpan","CombatLogContext","combatLog","clear","useCombatLogContext","CombatLogContextProvider","setCombatLog","deadLog","setDeadLog","NameSpan","isUserParty","isEnemyParty","NameSpanBuilder","log","line","dLog","latestRounds","baseRound","subTarget","splashDamageResistance","CombatLog","scrollRef","isExpanded","setIsExpanded","scrollIntoView","behavior","Combat","useCombatStart","makeRoute","path","Component","RouteController","CardList","tabs","query","toLowerCase","Shop","setQuery","activeTab","setActiveTab","tab","placeholder","onChange","overflowY","Shrine","setResults","BossRewards","chosenReward","setChosenReward","nextFloorId","BOSS_FLOOR_MAP","Chest","ChestIcon","CharacterSelector","HeadingSm","textDecoration","Text","UpgradeOptions","upgradeOptions","Smith","SmithIcon","NonCombatEncounter","ENCOUNTER_TEXTS","Choice","EncounterActions","Boss","d","fill-rule","Random","Start","Elite","Hex","adjacent","h","iconColor","getHexIconColor","getHexFill","cellStyle","console","getHexIcon","Color","darken","rgb","toString","Grid","hexagons","GridGenerator","triangle","activeHex","setActiveHex","dx","dy","stdDeviation","x","y","origin","spacing","flat","Unknown","Party","parties","rc","StartCharacterCard","CONSUMABLE_DESCRIPTIONS","PartyCharacterConsumables","onStackClick","filler","ConsumableBox","HEIGHT","PartyCharacterConsumable","PartyCharacterConsumableTooltip","getText","CharacterStat","statKey","ResourceE","Actions","inventoryOpen","inventoryStyle","Wrapper","animated","Halo","$targeted","$light","leftR","PartyCharacter","selected","showActions","onConsumableClick","targetIds","PlayerParty","onCharacterClick","showConfirmButton","LinkedCombatContext","combatParty","setCombatParty","AppBg","baseBg","bg","Forest1","Forest2","Forest3","Dungeon1","Forest4","Forest5","Dungeon2","Dungeon3","Dungeon4","getEncounterBg","backgroundSize","App","Boolean","window","location","hostname","match","engine","Styletron","store","createStore","combineReducers","compose","applyMiddleware","thunk","ReactDOM","StrictMode","debug","debugAfterHydration","basename","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,+B,uBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,4C,qBCA3CD,EAAOC,QAAU,IAA0B,qC,iBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,kBCA3CD,EAAOC,QAAU,IAA0B,+B,yBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,iBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,2BCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,kD,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,iBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,yC,sCCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,iBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,mECA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,gD,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,iBCA3CD,EAAOC,QAAU,IAA0B,0C,iBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAA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","file":"static/js/main.505ff734.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/3.4ed28368.png\";","module.exports = __webpack_public_path__ + \"static/media/7.d2e528ea.png\";","module.exports = __webpack_public_path__ + \"static/media/pentagram-rose.d7458af6.svg\";","module.exports = __webpack_public_path__ + \"static/media/cultist.998af3b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/coins.97dc8c40.svg\";","module.exports = __webpack_public_path__ + \"static/media/broadsword.47ecfebc.svg\";","module.exports = __webpack_public_path__ + \"static/media/4.56cbed86.png\";","module.exports = __webpack_public_path__ + \"static/media/battered-axe.819d2726.svg\";","module.exports = __webpack_public_path__ + \"static/media/dodging.3c689d6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/all-for-one.33b25b62.svg\";","module.exports = __webpack_public_path__ + \"static/media/8.d80166bd.png\";","module.exports = __webpack_public_path__ + \"static/media/5.129e4888.png\";","module.exports = __webpack_public_path__ + \"static/media/1.31fafbe8.png\";","module.exports = __webpack_public_path__ + \"static/media/mimic-chest.dc67da5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/sprint.968b443a.svg\";","module.exports = __webpack_public_path__ + \"static/media/scythe.f0a97d33.svg\";","module.exports = __webpack_public_path__ + \"static/media/ringing-bell.f8953cca.svg\";","module.exports = __webpack_public_path__ + \"static/media/bone-knife.8d6d549d.svg\";","module.exports = __webpack_public_path__ + \"static/media/drink-me.2ee1fbb7.svg\";","module.exports = __webpack_public_path__ + \"static/media/molotov.7ba33ac3.svg\";","module.exports = __webpack_public_path__ + \"static/media/perspective-dice-six.8b7e2589.svg\";","module.exports = __webpack_public_path__ + \"static/media/high-shot.eed9def8.svg\";","module.exports = __webpack_public_path__ + \"static/media/shieldcomb.802f20f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/armor-upgrade.c51f9198.svg\";","module.exports = __webpack_public_path__ + \"static/media/armor-downgrade.71dd2b83.svg\";","module.exports = __webpack_public_path__ + \"static/media/knapsack.62049a62.svg\";","module.exports = __webpack_public_path__ + \"static/media/locked-chest.4fef2a91.svg\";","module.exports = __webpack_public_path__ + \"static/media/anvil-impact.eb4dfd04.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.a7dcd7d0.png\";","module.exports = __webpack_public_path__ + \"static/media/hammer-drop.120a92c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/3.5b81afea.png\";","module.exports = __webpack_public_path__ + \"static/media/2.22bba3d5.png\";","module.exports = __webpack_public_path__ + \"static/media/chest-armor.f1f52a3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross-shield.6feb257e.svg\";","module.exports = __webpack_public_path__ + \"static/media/leather-boot.89b85474.svg\";","module.exports = __webpack_public_path__ + \"static/media/visored-helm.1f2ced7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/ring.5187be72.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-necklace.fad66171.svg\";","module.exports = __webpack_public_path__ + \"static/media/knife-thrust.1e29ef7c.svg\";","module.exports = __webpack_public_path__ + \"static/media/overlord-helm.03e5b513.svg\";","module.exports = __webpack_public_path__ + \"static/media/golem-head.48b0456c.svg\";","module.exports = __webpack_public_path__ + \"static/media/wolf-head.4e7bf362.svg\";","module.exports = __webpack_public_path__ + \"static/media/raven.581ee1b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/snake.03f8f0ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/witch-flight.4d7f9b27.svg\";","module.exports = __webpack_public_path__ + \"static/media/troll.8e45be35.svg\";","module.exports = __webpack_public_path__ + \"static/media/werewolf.fa211e2a.svg\";","module.exports = __webpack_public_path__ + \"static/media/boar-tusks.bb1e24d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/unfriendly-fire.8437b1a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/haunting.ecedf8b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/daemon-skull.ec5b5916.svg\";","module.exports = __webpack_public_path__ + \"static/media/carnivorous-plant.04471865.svg\";","module.exports = __webpack_public_path__ + \"static/media/eyestalk.d2c2b188.svg\";","module.exports = __webpack_public_path__ + \"static/media/leeching-worm.dd3f7bfe.svg\";","module.exports = __webpack_public_path__ + \"static/media/spectre.a7c36843.svg\";","module.exports = __webpack_public_path__ + \"static/media/diablo-skull.18710d12.svg\";","module.exports = __webpack_public_path__ + \"static/media/harry-potter-skull.c9854d9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/spider-eye.03f932c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/fairy.598d8aab.svg\";","module.exports = __webpack_public_path__ + \"static/media/grim-reaper.92ae0d84.svg\";","module.exports = __webpack_public_path__ + \"static/media/grasping-slug.0ebd9bb6.svg\";","module.exports = __webpack_public_path__ + \"static/media/shambling-mound.b5d93f2e.svg\";","module.exports = __webpack_public_path__ + \"static/media/infested-mass.e591bde1.svg\";","module.exports = __webpack_public_path__ + \"static/media/imp.f6f20bad.svg\";","module.exports = __webpack_public_path__ + \"static/media/behold.a9bdad8c.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain-tentacle.cfefca88.svg\";","module.exports = __webpack_public_path__ + \"static/media/laurel-crown.00b6e803.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-beats.6b1fff9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/biceps.e62c221f.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain.ce65603a.svg\";","module.exports = __webpack_public_path__ + \"static/media/hand.9a950e42.svg\";","module.exports = __webpack_public_path__ + \"static/media/lyre.b0409ce1.svg\";","module.exports = __webpack_public_path__ + \"static/media/clover.df6a0d57.svg\";","module.exports = __webpack_public_path__ + \"static/media/robe.5b61ecba.svg\";","module.exports = __webpack_public_path__ + \"static/media/scale-mail.cb5ff7d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/lightning-shield.85367254.svg\";","module.exports = __webpack_public_path__ + \"static/media/robin-hood-hat.6bab1449.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointy-hat.d042ac98.svg\";","module.exports = __webpack_public_path__ + \"static/media/battle-axe.47a5ba50.svg\";","module.exports = __webpack_public_path__ + \"static/media/gavel.e0256fff.svg\";","module.exports = __webpack_public_path__ + \"static/media/heavy-arrow.56b29a8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/bowie-knife.e7821736.svg\";","module.exports = __webpack_public_path__ + \"static/media/revolver.25251236.svg\";","module.exports = __webpack_public_path__ + \"static/media/wizard-staff.3e6091b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/croc-sword.dfa5ecf6.svg\";","module.exports = __webpack_public_path__ + \"static/media/fist.d1b25a44.svg\";","module.exports = __webpack_public_path__ + \"static/media/herbs-bundle.e02bcec1.svg\";","module.exports = __webpack_public_path__ + \"static/media/lotus-flower.4b207eda.svg\";","module.exports = __webpack_public_path__ + \"static/media/medicine-pills.ef75e681.svg\";","module.exports = __webpack_public_path__ + \"static/media/executioner-hood.6e796b5c.svg\";","module.exports = __webpack_public_path__ + \"static/media/cowled.d0cad9db.svg\";","module.exports = __webpack_public_path__ + \"static/media/female-vampire.27d5f882.svg\";","module.exports = __webpack_public_path__ + \"static/media/wizard-face.2a49683a.svg\";","module.exports = __webpack_public_path__ + \"static/media/kenku-head.3292e596.svg\";","module.exports = __webpack_public_path__ + \"static/media/dwarf-helmet.3915616c.svg\";","module.exports = __webpack_public_path__ + \"static/media/pirate-captain.daa0fd39.svg\";","module.exports = __webpack_public_path__ + \"static/media/shield-impact.54fdc5c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/energy-arrow.514fc56c.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire-zone.42e13657.svg\";","module.exports = __webpack_public_path__ + \"static/media/magic-swirl.854dc419.svg\";","module.exports = __webpack_public_path__ + \"static/media/heavy-timer.1072a406.svg\";","module.exports = __webpack_public_path__ + \"static/media/extra-time.4d418333.svg\";","module.exports = __webpack_public_path__ + \"static/media/lucifer-cannon.34d680ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/firewall.6efb9f12.svg\";","module.exports = __webpack_public_path__ + \"static/media/flat-hammer.dff14efb.svg\";","module.exports = __webpack_public_path__ + \"static/media/plain-dagger.0509dd2c.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointy-sword.bd82b38d.svg\";","module.exports = __webpack_public_path__ + \"static/media/axe-swing.6958cc19.svg\";","module.exports = __webpack_public_path__ + \"static/media/saber-slash.54b5f3f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/wave-strike.1fe6dbab.svg\";","module.exports = __webpack_public_path__ + \"static/media/sparkling-sabre.3a0fdc2b.svg\";","module.exports = __webpack_public_path__ + \"static/media/bordered-shield.56c12b47.svg\";","module.exports = __webpack_public_path__ + \"static/media/resonance.4c1d217b.svg\";","module.exports = __webpack_public_path__ + \"static/media/gunshot.cf3eceba.svg\";","module.exports = __webpack_public_path__ + \"static/media/crosshair.d2c9a9ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/bullet-impacts.00562b6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/backward-time.d0246d45.svg\";","module.exports = __webpack_public_path__ + \"static/media/snail.bbbe7b78.svg\";","module.exports = __webpack_public_path__ + \"static/media/double-shot.70211522.svg\";","module.exports = __webpack_public_path__ + \"static/media/health-normal.0da85e24.svg\";","module.exports = __webpack_public_path__ + \"static/media/embrassed-energy.58fa9df0.svg\";","module.exports = __webpack_public_path__ + \"static/media/life-support.c0c7c040.svg\";","module.exports = __webpack_public_path__ + \"static/media/punch.2811bb9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/ubisoft-sun.30335592.svg\";","module.exports = __webpack_public_path__ + \"static/media/star-swirl.3045bd1f.svg\";","module.exports = __webpack_public_path__ + \"static/media/targeted.b4ce8dd7.svg\";","module.exports = __webpack_public_path__ + \"static/media/sticky-boot.f097559f.svg\";","module.exports = __webpack_public_path__ + \"static/media/biohazard.cdfb567d.svg\";","module.exports = __webpack_public_path__ + \"static/media/flame.332be8c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/bleeding-wound.8d92779f.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowflake-2.a0b68bb3.svg\";","module.exports = __webpack_public_path__ + \"static/media/broken-shield.c26ddd72.svg\";","module.exports = __webpack_public_path__ + \"static/media/power-lightning.9ebddabb.svg\";","module.exports = __webpack_public_path__ + \"static/media/split-cross.fa0be1a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/broken-bone.d1c4182c.svg\";","module.exports = __webpack_public_path__ + \"static/media/leather-armor.f3d5462f.svg\";","module.exports = __webpack_public_path__ + \"static/media/crowned-skull.458d8f78.svg\";","module.exports = __webpack_public_path__ + \"static/media/crossed-swords.b7d2c27a.svg\";","module.exports = __webpack_public_path__ + \"static/media/death-zone.6db7c7ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/divided-spiral.a8e90e0d.svg\";","import { StateCoreT, StateReducerT } from './types'\r\n\r\nexport const makeReducer = (\r\n  core: StateCoreT,\r\n  initialState: any,\r\n): StateReducerT => {\r\n  return (state = initialState, action) => {\r\n    const coreFn = core[action.type]\r\n    if (coreFn) return coreFn(state, action)\r\n    return state\r\n  }\r\n}\r\n","import { useMemo } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nexport const useActions = (actions: any) => {\r\n  const dispatch = useDispatch()\r\n  return useMemo(() => bindActionCreators(actions, dispatch), [\r\n    dispatch,\r\n    actions,\r\n  ])\r\n}\r\n","import { tStats, tBaseStats } from './type'\r\nimport { tCharacterClass } from '../Character/type'\r\n\r\nexport const ZERO_STATS: tStats = {\r\n  vigor: 0,\r\n  strength: 0,\r\n  intelligence: 0,\r\n  dexterity: 0,\r\n  charisma: 0,\r\n  agility: 0,\r\n  luck: 0,\r\n\r\n  armor: 0,\r\n  resistance: 0,\r\n  evasion: 0,\r\n\r\n  maxHealthOffset: 0,\r\n  healthRegeneration: 0,\r\n  damageTakenModifier: 0,\r\n  damageTakenRangeModifiers: {\r\n    melee: 0,\r\n    ranged: 0,\r\n  },\r\n  damageReflection: {\r\n    melee: 0,\r\n    ranged: 0,\r\n  },\r\n\r\n  attackDamageOffset: 0,\r\n  attackDamageModifier: 0,\r\n  criticalChance: 0,\r\n  criticalDamageModifier: 0,\r\n  damageModifiers: {\r\n    flying: 0,\r\n    undead: 0,\r\n    beast: 0,\r\n  },\r\n\r\n  queueConsolidationModifier: 0,\r\n  queueValueSet: undefined,\r\n\r\n  goldModifier: 0,\r\n  maxInspirationOffset: 0,\r\n  consumableHealthGainOffset: 0,\r\n  minHealthOffset: 0,\r\n}\r\n\r\nexport const BASE_C_STATS: tStats = {\r\n  ...ZERO_STATS,\r\n  criticalDamageModifier: 1.2,\r\n  damageTakenModifier: 1,\r\n  attackDamageModifier: 1,\r\n  criticalChance: 5,\r\n  queueConsolidationModifier: 1,\r\n  consumableHealthGainOffset: 15,\r\n}\r\n\r\nexport const CLASS_STATS: Record<tCharacterClass, tStats> = {\r\n  executioner: {\r\n    ...BASE_C_STATS,\r\n    strength: 74,\r\n    vigor: 74,\r\n    intelligence: 44,\r\n    dexterity: 70,\r\n    charisma: 52,\r\n    agility: 58,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 0,\r\n    evasion: 8,\r\n  },\r\n  mercenary: {\r\n    ...BASE_C_STATS,\r\n    strength: 74,\r\n    vigor: 77,\r\n    intelligence: 41,\r\n    dexterity: 52,\r\n    charisma: 72,\r\n    agility: 56,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 0,\r\n    evasion: 7,\r\n  },\r\n  ranger: {\r\n    ...BASE_C_STATS,\r\n    strength: 52,\r\n    vigor: 66,\r\n    intelligence: 46,\r\n    dexterity: 74,\r\n    charisma: 64,\r\n    agility: 77,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 0,\r\n    evasion: 10,\r\n  },\r\n  reaper: {\r\n    ...BASE_C_STATS,\r\n    strength: 48,\r\n    vigor: 60,\r\n    intelligence: 42,\r\n    dexterity: 72,\r\n    charisma: 72,\r\n    agility: 74,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 0,\r\n    evasion: 11,\r\n  },\r\n  student: {\r\n    ...BASE_C_STATS,\r\n    strength: 45,\r\n    vigor: 60,\r\n    intelligence: 74,\r\n    dexterity: 66,\r\n    charisma: 70,\r\n    agility: 70,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 0,\r\n    evasion: 13,\r\n  },\r\n  patrician: {\r\n    ...BASE_C_STATS,\r\n    strength: 44,\r\n    vigor: 50,\r\n    intelligence: 70,\r\n    dexterity: 68,\r\n    charisma: 74,\r\n    agility: 68,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 0,\r\n    evasion: 11,\r\n  },\r\n  corsair: {\r\n    ...BASE_C_STATS,\r\n    strength: 68,\r\n    vigor: 71,\r\n    intelligence: 48,\r\n    dexterity: 54,\r\n    charisma: 73,\r\n    agility: 58,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 0,\r\n    evasion: 8,\r\n  },\r\n  drifter: {\r\n    ...BASE_C_STATS,\r\n    strength: 70,\r\n    vigor: 70,\r\n    intelligence: 70,\r\n    dexterity: 70,\r\n    charisma: 70,\r\n    agility: 70,\r\n    luck: 30,\r\n    armor: 0,\r\n    resistance: 0,\r\n    evasion: 13,\r\n  },\r\n  enemy: BASE_C_STATS,\r\n}\r\n\r\nexport const DAMAGE_BONUS_KEYS: (keyof tStats)[] = [\r\n  'goldModifier',\r\n  'attackDamageOffset',\r\n  'attackDamageModifier',\r\n  'criticalChance',\r\n  'criticalDamageModifier',\r\n]\r\nexport const DEFENSE_BONUS_KEYS: (keyof tStats)[] = [\r\n  'armor',\r\n  'resistance',\r\n  'evasion',\r\n  'healthRegeneration',\r\n  'damageReflection',\r\n]\r\nexport const HEALTH_FOCUS_BONUS_KEYS: (keyof tStats)[] = [\r\n  'maxHealthOffset',\r\n  'maxInspirationOffset',\r\n]\r\nexport const STAT_BONUS_KEYS: (keyof tBaseStats)[] = [\r\n  'vigor',\r\n  'strength',\r\n  'intelligence',\r\n  'dexterity',\r\n  'charisma',\r\n  'agility',\r\n  'luck',\r\n]\r\n\r\nexport const STAT_KEY_LABELS: Record<keyof tStats, string> = {\r\n  strength: ' Strength',\r\n  vigor: ' Vigor',\r\n  intelligence: ' Intelligence',\r\n  dexterity: ' Dexterity',\r\n  charisma: ' Charisma',\r\n  agility: ' Agility',\r\n  luck: ' Luck',\r\n  evasion: ' Evasion',\r\n  criticalChance: '% Crit Chance',\r\n  criticalDamageModifier: '% Crit Damage',\r\n\r\n  armor: ' Armor',\r\n  resistance: ' Resistance',\r\n\r\n  maxHealthOffset: ' Health',\r\n  healthRegeneration: ' Health Regen',\r\n  damageReflection: ' Damage Reflection',\r\n  damageTakenModifier: '% Recieved Damage',\r\n  damageTakenRangeModifiers: '% Recieved Damage from certain sources',\r\n\r\n  damageModifiers: ' Damage to certain Enemeies',\r\n\r\n  queueConsolidationModifier: ' Queue Consolidation Modifier',\r\n  queueValueSet: ' Queue Value Set',\r\n\r\n  attackDamageOffset: ' Raw Damage',\r\n  attackDamageModifier: '% Attack Damage',\r\n\r\n  goldModifier: '% Gold Recieved',\r\n  maxInspirationOffset: ' Max Inspiration',\r\n  minHealthOffset: ' Minumum Health',\r\n  consumableHealthGainOffset: ' HP from Consumables',\r\n}\r\n","export const undefAdd = (\r\n  a: number | undefined,\r\n  b: number | undefined,\r\n): number | undefined => {\r\n  if (a === undefined && b === undefined) return undefined\r\n  if (a === undefined && b !== undefined) return b\r\n  if (a !== undefined && b === undefined) return a\r\n  if (a !== undefined && b !== undefined) return a + b\r\n}\r\n","export const getRandom = <T>(items: T[]) =>\r\n  items[Math.floor(Math.random() * items.length)]\r\n","export const noneg = (value: number) => (value > 0 ? value : 0)\r\n","import { tStats } from './type'\r\nimport { ZERO_STATS } from './constants'\r\nimport { undefAdd } from '../../util/undefAdd'\r\nimport { noneg } from '../../util'\r\n\r\nexport const combineStats = (...stats: tStats[]) => {\r\n  return stats.reduce(\r\n    (result, stats) => ({\r\n      vigor: result.vigor + stats.vigor,\r\n      strength: result.strength + stats.strength,\r\n      intelligence: result.intelligence + stats.intelligence,\r\n      dexterity: result.dexterity + stats.dexterity,\r\n      charisma: result.charisma + stats.charisma,\r\n      agility: result.agility + stats.agility,\r\n      luck: result.luck + stats.luck,\r\n\r\n      armor: result.armor + stats.armor,\r\n      resistance: result.resistance + stats.resistance,\r\n      evasion: result.evasion + stats.evasion,\r\n\r\n      maxHealthOffset: result.maxHealthOffset + stats.maxHealthOffset,\r\n      healthRegeneration: result.healthRegeneration + stats.healthRegeneration,\r\n      damageTakenModifier:\r\n        result.damageTakenModifier + stats.damageTakenModifier,\r\n      damageTakenRangeModifiers: {\r\n        melee:\r\n          result.damageTakenRangeModifiers.melee +\r\n          stats.damageTakenRangeModifiers.melee,\r\n        ranged:\r\n          result.damageTakenRangeModifiers.ranged +\r\n          stats.damageTakenRangeModifiers.ranged,\r\n      },\r\n      damageReflection: {\r\n        melee: result.damageReflection.melee + stats.damageReflection.melee,\r\n        ranged: result.damageReflection.ranged + stats.damageReflection.ranged,\r\n      },\r\n\r\n      attackDamageOffset: result.attackDamageOffset + stats.attackDamageOffset,\r\n      attackDamageModifier:\r\n        result.attackDamageModifier + stats.attackDamageModifier,\r\n      criticalChance: result.criticalChance + stats.criticalChance,\r\n      criticalDamageModifier:\r\n        result.criticalDamageModifier + stats.criticalDamageModifier,\r\n      damageModifiers: {\r\n        flying: result.damageModifiers.flying + stats.damageModifiers.flying,\r\n        undead: result.damageModifiers.undead + stats.damageModifiers.undead,\r\n        beast: result.damageModifiers.beast + stats.damageModifiers.beast,\r\n      },\r\n\r\n      queueConsolidationModifier:\r\n        result.queueConsolidationModifier + stats.queueConsolidationModifier,\r\n      queueValueSet: undefAdd(result.queueValueSet, stats.queueValueSet),\r\n\r\n      goldModifier: result.goldModifier + stats.goldModifier,\r\n      maxInspirationOffset:\r\n        result.maxInspirationOffset + stats.maxInspirationOffset,\r\n      consumableHealthGainOffset:\r\n        result.consumableHealthGainOffset + stats.consumableHealthGainOffset,\r\n      minHealthOffset: result.minHealthOffset + stats.minHealthOffset,\r\n    }),\r\n    ZERO_STATS,\r\n  )\r\n}\r\n\r\nexport const multiplyStats = (stats: tStats, modifier: number): tStats => ({\r\n  vigor: stats.vigor * modifier,\r\n  strength: stats.strength * modifier,\r\n  intelligence: stats.intelligence * modifier,\r\n  dexterity: stats.dexterity * modifier,\r\n  charisma: stats.charisma * modifier,\r\n  agility: stats.agility * modifier,\r\n  luck: stats.luck * modifier,\r\n\r\n  armor: stats.armor * modifier,\r\n  resistance: stats.resistance * modifier,\r\n  evasion: stats.evasion * modifier,\r\n\r\n  maxHealthOffset: stats.maxHealthOffset * modifier,\r\n  healthRegeneration: stats.healthRegeneration * modifier,\r\n  damageTakenModifier: stats.damageTakenModifier * modifier,\r\n  damageTakenRangeModifiers: {\r\n    melee: stats.damageTakenRangeModifiers.melee * modifier,\r\n    ranged: stats.damageTakenRangeModifiers.ranged * modifier,\r\n  },\r\n  damageReflection: {\r\n    melee: stats.damageReflection.melee * modifier,\r\n    ranged: stats.damageReflection.ranged * modifier,\r\n  },\r\n\r\n  attackDamageOffset: stats.attackDamageOffset * modifier,\r\n  attackDamageModifier: stats.attackDamageModifier * modifier,\r\n  criticalChance: stats.criticalChance * modifier,\r\n  criticalDamageModifier: stats.criticalDamageModifier * modifier,\r\n  damageModifiers: {\r\n    flying: stats.damageModifiers.flying * modifier,\r\n    undead: stats.damageModifiers.undead * modifier,\r\n    beast: stats.damageModifiers.beast * modifier,\r\n  },\r\n\r\n  queueConsolidationModifier: stats.queueConsolidationModifier * modifier,\r\n  queueValueSet: stats.queueValueSet,\r\n\r\n  goldModifier: stats.goldModifier * modifier,\r\n  maxInspirationOffset: stats.maxInspirationOffset * modifier,\r\n  consumableHealthGainOffset: stats.consumableHealthGainOffset * modifier,\r\n  minHealthOffset: stats.minHealthOffset * modifier,\r\n})\r\n\r\nconst isCapKey = (key: keyof tStats) => {\r\n  const keys: (keyof tStats)[] = [\r\n    'vigor',\r\n    'strength',\r\n    'dexterity',\r\n    'intelligence',\r\n    'charisma',\r\n    'agility',\r\n    'luck',\r\n    'evasion',\r\n    'criticalChance',\r\n  ]\r\n  return keys.includes(key)\r\n}\r\n\r\nexport const capStats = (stats: tStats): tStats => {\r\n  return (Object.keys(stats) as (keyof tStats)[]).reduce((result, key) => {\r\n    if (isCapKey(key) && stats[key]) {\r\n      return {\r\n        ...result,\r\n        [key]: (stats[key] as number) > 95 ? 95 : stats[key],\r\n      }\r\n    }\r\n    return {\r\n      ...result,\r\n      armor: noneg(result.armor),\r\n      resistance: noneg(result.resistance),\r\n    }\r\n  }, stats)\r\n}\r\n","import { tStatusType, tStatusConfig } from './type'\r\nimport { ZERO_STATS } from '../Stats/constants'\r\n\r\nexport const STATUS_CONFIG: Record<tStatusType, tStatusConfig> = {\r\n  bleeding: {\r\n    name: 'Bleeding',\r\n    description: '-10 HP on your turn.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      healthRegeneration: -6,\r\n    },\r\n    immunities: [],\r\n  },\r\n  burning: {\r\n    name: 'Burning',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      healthRegeneration: -6,\r\n    },\r\n    immunities: [],\r\n  },\r\n  // TODO: Different cursed status' for different stats\r\n  'cursed-vigor': {\r\n    name: 'Cursed',\r\n    description: '-15 to Vigor',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      vigor: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-strength': {\r\n    name: 'Cursed',\r\n    description: '-15 to Strength',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      strength: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-dexterity': {\r\n    name: 'Cursed',\r\n    description: '-15 to Dexterity',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      dexterity: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-intelligence': {\r\n    name: 'Cursed',\r\n    description: '-15 to Intelligence',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      intelligence: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-charisma': {\r\n    name: 'Cursed',\r\n    description: '-15 to Charisma',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      charisma: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-agility': {\r\n    name: 'Cursed',\r\n    description: '-15 to Agility',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      agility: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-luck': {\r\n    name: 'Cursed',\r\n    description: '-15 to Luck',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      luck: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  frozen: {\r\n    name: 'Frozen',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      damageTakenModifier: 25,\r\n    },\r\n    immunities: [],\r\n  },\r\n  poisoned: {\r\n    name: 'Poisoned',\r\n    description: \"-5 HP on this character's turn and -5 to each stat.\",\r\n    canStack: true,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      vigor: -5,\r\n      strength: -5,\r\n      intelligence: -5,\r\n      dexterity: -5,\r\n      charisma: -5,\r\n      healthRegeneration: -3,\r\n    },\r\n    immunities: [],\r\n  },\r\n  // TODO: Shocked status\r\n  shocked: {\r\n    name: 'Shocked',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  stunned: {\r\n    name: 'Stunned',\r\n    description: 'This character will not progress on the battle timeline.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 2,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueConsolidationModifier: -1,\r\n    },\r\n    immunities: [],\r\n  },\r\n  // TODO: Wet Status\r\n  wet: {\r\n    name: 'Wet',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'armor-up': {\r\n    name: 'Armor Up',\r\n    description: '+5 Armor',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      armor: 5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'attack-up': {\r\n    name: 'Attack Up',\r\n    description: '+15 Attack Damage',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      attackDamageOffset: 15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'evade-up': {\r\n    name: 'Evade Up',\r\n    description: '+15 Evasion',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      evasion: 15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'resistance-up': {\r\n    name: 'Resistance Up',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      resistance: 5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'speed-up': {\r\n    name: 'Speed Up',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      agility: 15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'armor-down': {\r\n    name: 'Armor Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      armor: -5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'attack-down': {\r\n    name: 'Attack Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      attackDamageOffset: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'evade-down': {\r\n    name: 'Evade Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      evasion: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'resistance-down': {\r\n    name: 'Resistance Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      resistance: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'speed-down': {\r\n    name: 'Speed Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      agility: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  rushed: {\r\n    name: 'Rushed',\r\n    description: 'Bring to front of queue.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 0,\r\n    },\r\n    immunities: [],\r\n  },\r\n  interrupted: {\r\n    name: 'Interrupted',\r\n    description: 'Set back 70 unites.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 70,\r\n    },\r\n    immunities: [],\r\n  },\r\n  reset: {\r\n    name: 'Reset',\r\n    description: 'Set back 100 units.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 100,\r\n    },\r\n    immunities: [],\r\n  },\r\n  evasive: {\r\n    name: 'Evasive',\r\n    description: 'Non-perfect attacks will miss when targeting this character.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  resilient: {\r\n    name: 'Resilient',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  protected: {\r\n    name: 'Protected',\r\n    description: 'Negate the next bit of damage.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  targeted: {\r\n    name: 'Targeted',\r\n    description: 'All enemies will attack this player.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 6,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  cure: {\r\n    name: 'Cure',\r\n    description: 'Remove Poisoned, Bleeding, and Burning',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: ['poisoned', 'bleeding', 'burning', 'frozen', 'wet', 'shocked'],\r\n  },\r\n  blessed: {\r\n    name: 'Blessed',\r\n    description: 'Temporary Curse Immunity',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: ZERO_STATS,\r\n    immunities: [\r\n      'cursed-agility',\r\n      'cursed-charisma',\r\n      'cursed-dexterity',\r\n      'cursed-intelligence',\r\n      'cursed-luck',\r\n      'cursed-strength',\r\n      'cursed-vigor',\r\n    ],\r\n  },\r\n}\r\n","import { tWeaponClassDamageConfig, tWeaponTypeDamageConfig } from './type'\r\n\r\nexport const GLOBAL_DAMAGE_OFFSETS: tWeaponTypeDamageConfig = {\r\n  axe: 0,\r\n  hammer: 0,\r\n  sword: 0,\r\n  greatsword: 0,\r\n  bow: 0,\r\n  dagger: 0,\r\n  scythe: 0,\r\n  catalyst: 0,\r\n  chime: 0,\r\n  pistol: 0,\r\n  fist: 0,\r\n  enemy: 0,\r\n}\r\nexport const WEAPON_DAMAGE_CONFIG: tWeaponClassDamageConfig = {\r\n  starting: {\r\n    axe: 12,\r\n    hammer: 9,\r\n    sword: 7,\r\n    greatsword: 12,\r\n    bow: 6,\r\n    dagger: 6,\r\n    scythe: 8,\r\n    catalyst: 7,\r\n    chime: 7,\r\n    pistol: 6,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  // LEVEL 1 ccc ur\r\n  rusted: {\r\n    // higher damage than tomb, but worse skills\r\n    axe: 13,\r\n    hammer: 11,\r\n    sword: 10,\r\n    greatsword: 13,\r\n    bow: 12,\r\n    dagger: 7,\r\n    scythe: 9,\r\n    catalyst: 9,\r\n    chime: 9,\r\n    pistol: 7,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  tomb: {\r\n    axe: 15,\r\n    hammer: 12,\r\n    sword: 12,\r\n    greatsword: 15,\r\n    bow: 13,\r\n    dagger: 8,\r\n    scythe: 12,\r\n    catalyst: 12,\r\n    chime: 12,\r\n    pistol: 8,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  buried: {\r\n    axe: 16,\r\n    hammer: 13,\r\n    sword: 12,\r\n    greatsword: 16,\r\n    bow: 14,\r\n    dagger: 9,\r\n    scythe: 13,\r\n    catalyst: 13,\r\n    chime: 13,\r\n    pistol: 9,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  withering: {\r\n    axe: 18,\r\n    hammer: 15,\r\n    sword: 15,\r\n    greatsword: 18,\r\n    bow: 17,\r\n    dagger: 12,\r\n    scythe: 15,\r\n    catalyst: 16,\r\n    chime: 16,\r\n    pistol: 10,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  glass: {\r\n    axe: 22,\r\n    hammer: 18,\r\n    sword: 18,\r\n    greatsword: 22,\r\n    bow: 21,\r\n    dagger: 16,\r\n    scythe: 21,\r\n    catalyst: 21,\r\n    chime: 21,\r\n    pistol: 16,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 2 ccc\r\n  iron: {\r\n    axe: 19,\r\n    hammer: 16,\r\n    sword: 16,\r\n    greatsword: 20,\r\n    bow: 18,\r\n    dagger: 12,\r\n    scythe: 16,\r\n    catalyst: 16,\r\n    chime: 16,\r\n    pistol: 12,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  steel: {\r\n    axe: 20,\r\n    hammer: 17,\r\n    sword: 17,\r\n    greatsword: 20,\r\n    bow: 19,\r\n    dagger: 13,\r\n    scythe: 17,\r\n    catalyst: 17,\r\n    chime: 17,\r\n    pistol: 13,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  stainless: {\r\n    axe: 21,\r\n    hammer: 18,\r\n    sword: 18,\r\n    greatsword: 21,\r\n    bow: 20,\r\n    dagger: 14,\r\n    scythe: 18,\r\n    catalyst: 18,\r\n    chime: 18,\r\n    pistol: 14,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 3 ur rr\r\n  ancient: {\r\n    axe: 24,\r\n    hammer: 21,\r\n    sword: 21,\r\n    greatsword: 25,\r\n    bow: 23,\r\n    dagger: 17,\r\n    scythe: 21,\r\n    catalyst: 21,\r\n    chime: 21,\r\n    pistol: 17,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  crystal: {\r\n    axe: 26,\r\n    hammer: 23,\r\n    sword: 23,\r\n    greatsword: 27,\r\n    bow: 25,\r\n    dagger: 20,\r\n    scythe: 23,\r\n    catalyst: 23,\r\n    chime: 23,\r\n    pistol: 20,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  elemental: {\r\n    axe: 24,\r\n    hammer: 21,\r\n    sword: 21,\r\n    greatsword: 25,\r\n    bow: 23,\r\n    dagger: 17,\r\n    scythe: 21,\r\n    catalyst: 21,\r\n    chime: 21,\r\n    pistol: 17,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  cursed: {\r\n    axe: 25,\r\n    hammer: 22,\r\n    sword: 22,\r\n    greatsword: 26,\r\n    bow: 24,\r\n    dagger: 18,\r\n    scythe: 22,\r\n    catalyst: 22,\r\n    chime: 22,\r\n    pistol: 18,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 4 cuu r\r\n  sharp: {\r\n    axe: 28,\r\n    hammer: 25,\r\n    sword: 25,\r\n    greatsword: 29,\r\n    bow: 26,\r\n    dagger: 21,\r\n    scythe: 25,\r\n    catalyst: 26,\r\n    chime: 26,\r\n    pistol: 21,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  hardened: {\r\n    axe: 30,\r\n    hammer: 27,\r\n    sword: 27,\r\n    greatsword: 31,\r\n    bow: 28,\r\n    dagger: 23,\r\n    scythe: 27,\r\n    catalyst: 28,\r\n    chime: 28,\r\n    pistol: 23,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  engraved: {\r\n    axe: 31,\r\n    hammer: 28,\r\n    sword: 28,\r\n    greatsword: 32,\r\n    bow: 29,\r\n    dagger: 24,\r\n    scythe: 28,\r\n    catalyst: 29,\r\n    chime: 29,\r\n    pistol: 24,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  ethereal: {\r\n    axe: 34,\r\n    hammer: 32,\r\n    sword: 32,\r\n    greatsword: 35,\r\n    bow: 33,\r\n    dagger: 27,\r\n    scythe: 31,\r\n    catalyst: 32,\r\n    chime: 32,\r\n    pistol: 27,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 5 ur mm\r\n  exquisite: {\r\n    axe: 33,\r\n    hammer: 31,\r\n    sword: 31,\r\n    greatsword: 34,\r\n    bow: 32,\r\n    dagger: 26,\r\n    scythe: 30,\r\n    catalyst: 31,\r\n    chime: 31,\r\n    pistol: 26,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  divine: {\r\n    axe: 35,\r\n    hammer: 33,\r\n    sword: 33,\r\n    greatsword: 36,\r\n    bow: 34,\r\n    dagger: 28,\r\n    scythe: 32,\r\n    catalyst: 33,\r\n    chime: 33,\r\n    pistol: 28,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  arcane: {\r\n    axe: 36,\r\n    hammer: 33,\r\n    sword: 33,\r\n    greatsword: 37,\r\n    bow: 35,\r\n    dagger: 29,\r\n    scythe: 33,\r\n    catalyst: 34,\r\n    chime: 34,\r\n    pistol: 29,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  celestial: {\r\n    axe: 38,\r\n    hammer: 35,\r\n    sword: 35,\r\n    greatsword: 39,\r\n    bow: 37,\r\n    dagger: 31,\r\n    scythe: 35,\r\n    catalyst: 36,\r\n    chime: 36,\r\n    pistol: 31,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 6\r\n  mythic: {\r\n    axe: 40,\r\n    hammer: 37,\r\n    sword: 37,\r\n    greatsword: 41,\r\n    bow: 39,\r\n    dagger: 33,\r\n    scythe: 37,\r\n    catalyst: 38,\r\n    chime: 38,\r\n    pistol: 33,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  unique: {\r\n    axe: 40,\r\n    hammer: 37,\r\n    sword: 37,\r\n    greatsword: 41,\r\n    bow: 39,\r\n    dagger: 33,\r\n    scythe: 37,\r\n    catalyst: 38,\r\n    chime: 38,\r\n    pistol: 33,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n}\r\n","import { tWeaponType } from '../type'\r\nimport { tWeaponClass } from './type'\r\n\r\nexport const BASE_WEAPON_TYPES_GOLD: Record<tWeaponType, number> = {\r\n  axe: 30,\r\n  bow: 35,\r\n  catalyst: 30,\r\n  chime: 30,\r\n  dagger: 10,\r\n  greatsword: 40,\r\n  hammer: 25,\r\n  pistol: 15,\r\n  scythe: 35,\r\n  sword: 25,\r\n  fist: 0,\r\n  enemy: 0,\r\n}\r\n\r\nexport const WEAPON_CLASS_GOLD_OFFSETS: Record<tWeaponClass, number> = {\r\n  starting: -20,\r\n  rusted: 0,\r\n  tomb: 5,\r\n  buried: 30,\r\n  withering: 40,\r\n  glass: 60,\r\n\r\n  iron: 75,\r\n  steel: 80,\r\n  stainless: 85,\r\n\r\n  ancient: 100,\r\n  crystal: 150,\r\n  elemental: 155,\r\n  cursed: 155,\r\n\r\n  sharp: 200,\r\n  hardened: 225,\r\n  engraved: 250,\r\n  ethereal: 265,\r\n\r\n  exquisite: 300,\r\n  divine: 320,\r\n  arcane: 340,\r\n  celestial: 350,\r\n\r\n  mythic: 400,\r\n  unique: 400,\r\n}\r\n","import { tWeaponRarityConfig } from './type'\r\n\r\nexport const WEAPON_CLASS_RARIES: tWeaponRarityConfig = {\r\n  starting: 'common',\r\n  rusted: 'common',\r\n  tomb: 'common',\r\n  buried: 'common',\r\n  withering: 'uncommon',\r\n  glass: 'rare',\r\n  iron: 'common',\r\n  steel: 'common',\r\n  stainless: 'common',\r\n  ancient: 'common',\r\n  crystal: 'rare',\r\n  elemental: 'rare',\r\n  cursed: 'rare',\r\n  sharp: 'common',\r\n  hardened: 'uncommon',\r\n  engraved: 'uncommon',\r\n  ethereal: 'rare',\r\n  exquisite: 'uncommon',\r\n  divine: 'rare',\r\n  arcane: 'mythic',\r\n  celestial: 'mythic',\r\n  mythic: 'mythic',\r\n  unique: 'mythic',\r\n}\r\n","import { tWeaponStatsConfig } from './type'\r\n\r\nexport const DEFAULT_WEAPON_TYPE_STATS: tWeaponStatsConfig = {\r\n  axe: {},\r\n  hammer: {},\r\n  sword: {},\r\n  greatsword: {\r\n    agility: -2,\r\n  },\r\n  bow: {\r\n    damageModifiers: {\r\n      flying: 0.1,\r\n      undead: 0,\r\n      beast: 0,\r\n    },\r\n  },\r\n  dagger: {\r\n    agility: 2,\r\n    criticalChance: 10,\r\n  },\r\n  scythe: {\r\n    evasion: 2,\r\n    resistance: 1,\r\n  },\r\n  catalyst: {},\r\n  chime: {\r\n    damageModifiers: {\r\n      flying: 0,\r\n      undead: 0.02,\r\n      beast: 0,\r\n    },\r\n  },\r\n  pistol: {},\r\n  fist: {},\r\n  enemy: {},\r\n}\r\n","import { tWeaponTypeConfig } from './type'\r\n\r\nexport const DEFAULT_WEAPON_TYPE_CONFIG: tWeaponTypeConfig = {\r\n  axe: {\r\n    stat: 'strength',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  hammer: {\r\n    stat: 'strength',\r\n    twoHand: false,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  sword: {\r\n    stat: 'strength',\r\n    twoHand: false,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  greatsword: {\r\n    stat: 'strength',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  bow: {\r\n    stat: 'dexterity',\r\n    twoHand: true,\r\n    range: 'ranged',\r\n    damageType: 'physical',\r\n  },\r\n  dagger: {\r\n    stat: 'dexterity',\r\n    twoHand: false,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  scythe: {\r\n    stat: 'dexterity',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  catalyst: {\r\n    stat: 'intelligence',\r\n    twoHand: true,\r\n    range: 'ranged',\r\n    damageType: 'magic',\r\n  },\r\n  chime: {\r\n    stat: 'charisma',\r\n    twoHand: true,\r\n    range: 'ranged',\r\n    damageType: 'magic',\r\n  },\r\n  pistol: {\r\n    stat: 'charisma',\r\n    twoHand: false,\r\n    range: 'ranged',\r\n    damageType: 'physical',\r\n  },\r\n  fist: {\r\n    stat: 'vigor',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  enemy: {\r\n    stat: 'vigor',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { tSkill } from '../../Skill/type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { tStats } from '../../Stats/type'\r\nimport { tStatusType } from '../../Status/type'\r\nimport { tWeapon, tWeaponType } from '../type'\r\nimport { GLOBAL_DAMAGE_OFFSETS, WEAPON_DAMAGE_CONFIG } from './damage'\r\nimport { BASE_WEAPON_TYPES_GOLD, WEAPON_CLASS_GOLD_OFFSETS } from './goldValue'\r\nimport { WEAPON_CLASS_RARIES } from './rarity'\r\nimport { DEFAULT_WEAPON_TYPE_STATS } from './stats'\r\nimport { tWeaponClass } from './type'\r\nimport { DEFAULT_WEAPON_TYPE_CONFIG } from './typeConfig'\r\n\r\nexport const createWeapon = (\r\n  weaponType: tWeaponType,\r\n  weaponClass: tWeaponClass,\r\n  skills: tSkill[],\r\n  stats: Partial<tStats>,\r\n  immunities: tStatusType[] = [],\r\n  goldValue?: number,\r\n): tWeapon => {\r\n  const damageValue =\r\n    WEAPON_DAMAGE_CONFIG[weaponClass][weaponType] +\r\n    GLOBAL_DAMAGE_OFFSETS[weaponType]\r\n  const { stat, twoHand, range, damageType } = DEFAULT_WEAPON_TYPE_CONFIG[\r\n    weaponType\r\n  ]\r\n  const rarity = WEAPON_CLASS_RARIES[weaponClass]\r\n  const defaultStats = DEFAULT_WEAPON_TYPE_STATS[weaponType]\r\n  return {\r\n    id: v4(),\r\n    name: `${weaponClass} ${weaponType}`,\r\n    rarity,\r\n    itemType: 'weapon',\r\n    goldValue:\r\n      goldValue ||\r\n      BASE_WEAPON_TYPES_GOLD[weaponType] +\r\n        WEAPON_CLASS_GOLD_OFFSETS[weaponClass],\r\n    type: weaponType,\r\n    twoHand,\r\n    breakable: false,\r\n    damage: {\r\n      value: damageValue,\r\n      type: damageType,\r\n      range,\r\n    },\r\n    stat,\r\n    skills,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      ...defaultStats,\r\n      ...stats,\r\n    },\r\n    immunities,\r\n  }\r\n}\r\n\r\nexport const createBreakableWeapon = (\r\n  weaponType: tWeaponType,\r\n  weaponClass: tWeaponClass,\r\n  skills: tSkill[],\r\n  stats: Partial<tStats>,\r\n  immunities: tStatusType[] = [],\r\n  goldValue?: number,\r\n): tWeapon => {\r\n  return {\r\n    ...createWeapon(\r\n      weaponType,\r\n      weaponClass,\r\n      skills,\r\n      stats,\r\n      immunities,\r\n      goldValue,\r\n    ),\r\n    breakable: true,\r\n  }\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { tSkill } from '../type'\r\n\r\nexport const createSkill = (\r\n  name: string,\r\n  rolls: number,\r\n  offset: number,\r\n  rest: Partial<tSkill> = {},\r\n): tSkill => {\r\n  return {\r\n    id: v4(),\r\n    name,\r\n    damageModifier: 1,\r\n    splashDamageModifier: 0,\r\n    targetType: 'single',\r\n    damage: true,\r\n    healing: false,\r\n    rolls,\r\n    offset,\r\n    perfectSplash: false,\r\n    perfectPierce: false,\r\n    perfectStatus: [],\r\n    ...rest,\r\n  }\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const CHOP = createSkill('Chop', 3, 0)\r\nexport const SWING = createSkill('Swing', 4, 0)\r\nexport const WITHERING_SWING = createSkill('Swing', 2, 0)\r\nexport const GLASS_SWING = createSkill('Swing', 1, 0)\r\nexport const AXE_SPIN = createSkill('Axe Spin', 5, -10, {\r\n  perfectSplash: true,\r\n  splashDamageModifier: 0.5,\r\n})\r\nexport const FLURRY = createSkill('Swipe', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const CLEAVE = createSkill('Cleave', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const SLICE = createSkill('Slice', 4, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  AXE_SPIN,\r\n  CHOP,\r\n  CLEAVE,\r\n  FLURRY,\r\n  GLASS_SWING,\r\n  SLASH,\r\n  SLICE,\r\n  STUN,\r\n  SWING,\r\n  WITHERING_SWING,\r\n} from '../../../Skill/skills/axe'\r\nimport { tWeapon } from '../../type'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'axe'\r\nexport const EXECUTIONER_AXE = (): tWeapon => ({\r\n  ...createWeapon(type, 'starting', [CHOP, AXE_SPIN], {}),\r\n  name: `Executioner Axe`,\r\n})\r\n\r\nexport const RUSTED_AXE = () => createWeapon(type, 'rusted', [CHOP, SWING], {})\r\nexport const TOMB_AXE = () => createWeapon(type, 'tomb', [SWING, FLURRY], {})\r\nexport const BURRIED_AXE = () =>\r\n  createWeapon(type, 'buried', [CHOP, FLURRY, SLICE], {})\r\nexport const WITHERING_AXE = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_SWING], {})\r\nexport const GLASS_AXE = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_SWING], {})\r\n\r\nexport const IRON_AXE = () => createWeapon(type, 'iron', [CHOP, STUN], {})\r\nexport const STEEL_AXE = () =>\r\n  createWeapon(type, 'steel', [CHOP, SLICE, CLEAVE], {})\r\nexport const STAINLESS_AXE = () =>\r\n  createWeapon(type, 'stainless', [SLICE, CLEAVE, SLASH], {})\r\n\r\nexport const ANCIENT_AXE = () =>\r\n  createWeapon(type, 'ancient', [SWING, CLEAVE], {})\r\nexport const CRYSTAL_AXE = () =>\r\n  createWeapon(type, 'crystal', [GLASS_SWING], {})\r\nexport const ELEMENTAL_AXE = () => createWeapon(type, 'elemental', [CHOP], {})\r\nexport const CURSED_AXE = () => createWeapon(type, 'cursed', [CHOP], {})\r\n\r\nexport const SHARP_AXE = () =>\r\n  createWeapon(type, 'sharp', [SLICE, SLASH, AXE_SPIN], {})\r\nexport const HARDENED_AXE = () =>\r\n  createWeapon(type, 'hardened', [SLICE, SLASH, STUN], {})\r\nexport const ENGRAVED_AXE = () =>\r\n  createWeapon(type, 'engraved', [SLICE, SLASH, FLURRY], {})\r\nexport const ETHEREAL_AXE = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_SWING], {})\r\n\r\nexport const EXQUISITE_AXE = () =>\r\n  createWeapon(type, 'exquisite', [SLICE, SLASH, CLEAVE], {})\r\nexport const DIVINE_AXE = () =>\r\n  createWeapon(type, 'divine', [SLICE, SLICE, STUN], {})\r\nexport const ARCANE_AXE = () => createWeapon(type, 'arcane', [CHOP], {})\r\nexport const CELESTIAL_AXE = () =>\r\n  createBreakableWeapon(type, 'celestial', [GLASS_SWING], {})\r\n\r\nexport const AXES: tWeaponsByLevel = {\r\n  0: [EXECUTIONER_AXE],\r\n  1: [RUSTED_AXE, TOMB_AXE, BURRIED_AXE, WITHERING_AXE, GLASS_AXE],\r\n  2: [IRON_AXE, STEEL_AXE, STAINLESS_AXE],\r\n  3: [ANCIENT_AXE, CRYSTAL_AXE, ELEMENTAL_AXE, CURSED_AXE],\r\n  4: [SHARP_AXE, HARDENED_AXE, ENGRAVED_AXE, ETHEREAL_AXE],\r\n  5: [EXQUISITE_AXE, DIVINE_AXE, ARCANE_AXE, CELESTIAL_AXE],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const SHOT = createSkill('Shot', 3, 0)\r\nexport const WITHERING_SHOT = createSkill('Shot', 2, 0)\r\nexport const GLASS_SHOT = createSkill('Shot', 1, 0)\r\nexport const HEADSHOT = createSkill('Headshot', 3, -10, {\r\n  perfectPierce: true,\r\n})\r\nexport const FLURRY = createSkill('Flurry', 2, -5, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const PIN_DOWN = createSkill('Pin Down', 2, -10, {\r\n  perfectStatus: ['speed-down'],\r\n})\r\nexport const WOUNDING_SHOT = createSkill('Wounding Shot', 2, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  HEADSHOT,\r\n  SHOT,\r\n  GLASS_SHOT,\r\n  FLURRY,\r\n  PIN_DOWN,\r\n  WITHERING_SHOT,\r\n  STUN,\r\n  WOUNDING_SHOT,\r\n} from '../../../Skill/skills/bow'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'bow'\r\nexport const RANGERS_BOW = () => ({\r\n  ...createWeapon(type, 'starting', [SHOT, HEADSHOT], {}),\r\n  name: `Ranger Bow`,\r\n})\r\nexport const RUSTED_BOW = () =>\r\n  createWeapon(type, 'rusted', [SHOT, HEADSHOT], {})\r\nexport const TOMB_BOW = () =>\r\n  createWeapon(type, 'tomb', [SHOT, HEADSHOT, FLURRY], {})\r\nexport const BURRIED_BOW = () =>\r\n  createWeapon(type, 'buried', [SHOT, FLURRY, PIN_DOWN], {})\r\nexport const WITHERING_BOW = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_SHOT], {})\r\nexport const GLASS_BOW = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_SHOT], {})\r\n\r\nexport const IRON_BOW = () => createWeapon(type, 'iron', [SHOT, STUN], {})\r\nexport const STEEL_BOW = () =>\r\n  createWeapon(type, 'steel', [SHOT, HEADSHOT, WOUNDING_SHOT], {})\r\nexport const STAINLESS_BOW = () =>\r\n  createWeapon(type, 'stainless', [SHOT, FLURRY, PIN_DOWN], {})\r\n\r\nexport const ANCIENT_BOW = () =>\r\n  createWeapon(type, 'ancient', [SHOT, FLURRY, WOUNDING_SHOT], {})\r\nexport const CRYSTAL_BOW = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_SHOT], {})\r\nexport const ELEMENTAL_BOW = () => createWeapon(type, 'elemental', [SHOT], {})\r\nexport const CURSED_BOW = () => createWeapon(type, 'cursed', [SHOT], {})\r\n\r\nexport const SHARP_BOW = () =>\r\n  createWeapon(type, 'sharp', [SHOT, HEADSHOT, WOUNDING_SHOT], {})\r\nexport const HARDENED_BOW = () =>\r\n  createWeapon(type, 'hardened', [SHOT, FLURRY, PIN_DOWN], {})\r\nexport const ENGRAVED_BOW = () =>\r\n  createWeapon(type, 'engraved', [SHOT, HEADSHOT, STUN, WOUNDING_SHOT], {})\r\nexport const ETHEREAL_BOW = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_SHOT], {})\r\n\r\nexport const EXQUISITE_BOW = () =>\r\n  createWeapon(type, 'exquisite', [SHOT, HEADSHOT], {})\r\nexport const DIVINE_BOW = () =>\r\n  createWeapon(type, 'divine', [SHOT, HEADSHOT], {})\r\nexport const ARCANE_BOW = () => createWeapon(type, 'arcane', [SHOT], {})\r\nexport const CELESTIAL_BOW = () => createWeapon(type, 'celestial', [SHOT], {})\r\n\r\nexport const BOWS: tWeaponsByLevel = {\r\n  0: [RANGERS_BOW],\r\n  1: [RUSTED_BOW, TOMB_BOW, BURRIED_BOW, WITHERING_BOW, GLASS_BOW],\r\n  2: [IRON_BOW, STEEL_BOW, STAINLESS_BOW],\r\n  3: [ANCIENT_BOW, CRYSTAL_BOW, ELEMENTAL_BOW, CURSED_BOW],\r\n  4: [SHARP_BOW, HARDENED_BOW, ENGRAVED_BOW, ETHEREAL_BOW],\r\n  5: [EXQUISITE_BOW, DIVINE_BOW, ARCANE_BOW, CELESTIAL_BOW],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const BLAST = createSkill('Blast', 2, 0)\r\nexport const GLASS_BLAST = createSkill('Blast', 1, 0)\r\nexport const ARCANE = createSkill('Arcane', 3, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const NOVA = createSkill('Nova', 3, -5, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const ENFLAME = createSkill('Enflame', 4, 0, {\r\n  perfectStatus: ['burning'],\r\n})\r\nexport const ENGULF = createSkill('Engulf', 4, -10, {\r\n  damageModifier: 0.7,\r\n  perfectStatus: ['burning'],\r\n  targetType: 'group',\r\n})\r\nexport const FREEZE = createSkill('Freeze', 4, 0, {\r\n  perfectStatus: ['frozen'],\r\n})\r\nexport const SHOCK = createSkill('Shock', 4, 0, {\r\n  perfectStatus: ['shocked'],\r\n})\r\nexport const STUN = createSkill('Stun', 2, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const PROTECT = createSkill('Protect', 2, 0, {\r\n  damageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  perfectStatus: ['protected'],\r\n})\r\nexport const TIME_JUMP = createSkill('Time Jump', 3, -5, {\r\n  damageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  perfectStatus: ['rushed'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  ARCANE,\r\n  BLAST,\r\n  ENFLAME,\r\n  ENGULF,\r\n  GLASS_BLAST,\r\n  NOVA,\r\n  PROTECT,\r\n  STUN,\r\n  TIME_JUMP,\r\n} from '../../../Skill/skills/catalyst'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'catalyst'\r\nexport const STUDENTS_CATALYST = () => ({\r\n  ...createWeapon(type, 'starting', [ARCANE, NOVA], {}),\r\n  name: `Student Catalyst`,\r\n})\r\nexport const RUSTED_CATALYST = () =>\r\n  createWeapon(type, 'rusted', [BLAST, ARCANE], {})\r\nexport const TOMB_CATALYST = () =>\r\n  createWeapon(type, 'tomb', [BLAST, ARCANE, NOVA], {})\r\nexport const BURRIED_CATALYST = () =>\r\n  createWeapon(type, 'buried', [BLAST, ARCANE, PROTECT], {})\r\nexport const WITHERING_CATALYST = () =>\r\n  createBreakableWeapon(type, 'withering', [BLAST], {})\r\nexport const GLASS_CATALYST = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_BLAST], {})\r\n\r\nexport const IRON_CATALYST = () =>\r\n  createWeapon(type, 'iron', [ARCANE, NOVA, STUN], {})\r\nexport const STEEL_CATALYST = () =>\r\n  createWeapon(type, 'steel', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const STAINLESS_CATALYST = () =>\r\n  createWeapon(type, 'stainless', [BLAST, ARCANE, NOVA, PROTECT], {})\r\n\r\nexport const ANCIENT_CATALYST = () =>\r\n  createWeapon(type, 'ancient', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const CRYSTAL_CATALYST = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_BLAST], {})\r\nexport const ELEMENTAL_CATALYST = () =>\r\n  createWeapon(type, 'elemental', [ARCANE, ENFLAME, ENGULF], {})\r\nexport const CURSED_CATALYST = () => createWeapon(type, 'cursed', [ARCANE], {})\r\n\r\nexport const SHARP_CATALYST = () =>\r\n  createWeapon(type, 'sharp', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const HARDENED_CATALYST = () =>\r\n  createWeapon(type, 'hardened', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const ENGRAVED_CATALYST = () =>\r\n  createWeapon(type, 'engraved', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const ETHEREAL_CATALYST = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_BLAST], {})\r\n\r\nexport const EXQUISITE_CATALYST = () =>\r\n  createWeapon(type, 'exquisite', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const DIVINE_CATALYST = () =>\r\n  createWeapon(type, 'divine', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const ARCANE_CATALYST = () =>\r\n  createWeapon(type, 'arcane', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const CELESTIAL_CATALYST = () =>\r\n  createBreakableWeapon(\r\n    type,\r\n    'celestial',\r\n    [ARCANE, NOVA, PROTECT, TIME_JUMP],\r\n    {},\r\n  )\r\n\r\nexport const CATALYSTS: tWeaponsByLevel = {\r\n  0: [STUDENTS_CATALYST],\r\n  1: [\r\n    RUSTED_CATALYST,\r\n    TOMB_CATALYST,\r\n    BURRIED_CATALYST,\r\n    WITHERING_CATALYST,\r\n    GLASS_CATALYST,\r\n  ],\r\n  2: [IRON_CATALYST, STEEL_CATALYST, STAINLESS_CATALYST],\r\n  3: [ANCIENT_CATALYST, CRYSTAL_CATALYST, ELEMENTAL_CATALYST, CURSED_CATALYST],\r\n  4: [SHARP_CATALYST, HARDENED_CATALYST, ENGRAVED_CATALYST, ETHEREAL_CATALYST],\r\n  5: [EXQUISITE_CATALYST, DIVINE_CATALYST, ARCANE_CATALYST, CELESTIAL_CATALYST],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const RING = createSkill('Ring', 3, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const WITHERING_RING = createSkill('Ring', 2, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const GLASS_RING = createSkill('Ring', 1, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const REVERBERATE = createSkill('Reverberate', 4, -5, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 2, -5, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const SLOW = createSkill('Slow', 4, 0, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['speed-down'],\r\n})\r\nexport const VANISH = createSkill('Vanish', 2, 0, {\r\n  damageModifier: 0,\r\n  damage: false,\r\n  targetType: 'ally',\r\n  perfectStatus: ['evade-up'],\r\n})\r\nexport const RUSH = createSkill('Rush', 2, 0, {\r\n  damageModifier: 0,\r\n  damage: false,\r\n  targetType: 'ally',\r\n  perfectStatus: ['rushed'],\r\n})\r\nexport const RESET = createSkill('Reset', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['reset'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  GLASS_RING,\r\n  RESET,\r\n  REVERBERATE,\r\n  RING,\r\n  RUSH,\r\n  SLOW,\r\n  STUN,\r\n  VANISH,\r\n  WITHERING_RING,\r\n} from '../../../Skill/skills/chime'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'chime'\r\nexport const PATRICIANS_CHIME = () => ({\r\n  ...createWeapon(type, 'starting', [RING, STUN], {}),\r\n  name: `Patrician Chime`,\r\n})\r\nexport const RUSTED_CHIME = () =>\r\n  createWeapon(type, 'rusted', [RING, REVERBERATE], {})\r\nexport const TOMB_CHIME = () =>\r\n  createWeapon(type, 'tomb', [RING, SLOW, VANISH], {})\r\nexport const BURRIED_CHIME = () =>\r\n  createWeapon(type, 'buried', [RING, STUN, VANISH], {})\r\nexport const WITHERING_CHIME = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_RING], {})\r\nexport const GLASS_CHIME = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_RING], {})\r\n\r\nexport const IRON_CHIME = () =>\r\n  createWeapon(type, 'iron', [RING, REVERBERATE, STUN], {})\r\nexport const STEEL_CHIME = () =>\r\n  createWeapon(type, 'steel', [RING, RUSH, RESET], {})\r\nexport const STAINLESS_CHIME = () =>\r\n  createWeapon(type, 'stainless', [RING, REVERBERATE, RUSH, RESET], {})\r\n\r\nexport const ANCIENT_CHIME = () =>\r\n  createWeapon(type, 'ancient', [RING, REVERBERATE, STUN], {})\r\nexport const CRYSTAL_CHIME = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_RING], {})\r\nexport const ELEMENTAL_CHIME = () => createWeapon(type, 'elemental', [RING], {})\r\nexport const CURSED_CHIME = () => createWeapon(type, 'cursed', [RING], {})\r\n\r\nexport const SHARP_CHIME = () =>\r\n  createWeapon(type, 'sharp', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const HARDENED_CHIME = () =>\r\n  createWeapon(type, 'hardened', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const ENGRAVED_CHIME = () =>\r\n  createWeapon(type, 'engraved', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const ETHEREAL_CHIME = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_RING], {})\r\n\r\nexport const EXQUISITE_CHIME = () =>\r\n  createWeapon(type, 'exquisite', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const DIVINE_CHIME = () =>\r\n  createWeapon(type, 'divine', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const ARCANE_CHIME = () =>\r\n  createWeapon(type, 'arcane', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const CELESTIAL_CHIME = () =>\r\n  createBreakableWeapon(type, 'celestial', [RING, REVERBERATE, STUN, SLOW], {})\r\n\r\nexport const CHIMES: tWeaponsByLevel = {\r\n  0: [PATRICIANS_CHIME],\r\n  1: [RUSTED_CHIME, TOMB_CHIME, BURRIED_CHIME, WITHERING_CHIME, GLASS_CHIME],\r\n  2: [IRON_CHIME, STEEL_CHIME, STAINLESS_CHIME],\r\n  3: [ANCIENT_CHIME, CRYSTAL_CHIME, ELEMENTAL_CHIME, CURSED_CHIME],\r\n  4: [SHARP_CHIME, HARDENED_CHIME, ENGRAVED_CHIME, ETHEREAL_CHIME],\r\n  5: [EXQUISITE_CHIME, DIVINE_CHIME, ARCANE_CHIME, CELESTIAL_CHIME],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const THRUST = createSkill('Thrust', 3, 0)\r\nexport const SWING = createSkill('Swing', 4, 0)\r\nexport const WITHERING_SWING = createSkill('Swing', 2, 0)\r\nexport const GLASS_SWING = createSkill('Swing', 1, 0)\r\nexport const FLURRY = createSkill('Flurry', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const CLEAVE = createSkill('Cleave', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const SLICE = createSkill('Slice', 4, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\nexport const ARMOR_UP = createSkill('Armor Up', 2, 0, {\r\n  targetType: 'self',\r\n  perfectStatus: ['armor-up'],\r\n})\r\nexport const EVADE_UP = createSkill('Evade Up', 2, 0, {\r\n  targetType: 'self',\r\n  perfectStatus: ['evade-up'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  ARMOR_UP,\r\n  CLEAVE,\r\n  EVADE_UP,\r\n  FLURRY,\r\n  GLASS_SWING,\r\n  SLASH,\r\n  SLICE,\r\n  SWING,\r\n  THRUST,\r\n  WITHERING_SWING,\r\n} from '../../../Skill/skills/scythe'\r\nimport { tWeapon } from '../../type'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'scythe'\r\nexport const FARMER_SCYTHE = (): tWeapon => ({\r\n  ...createWeapon(type, 'starting', [SLICE], {}),\r\n  name: `Farmer Scythe`,\r\n})\r\nexport const RUSTED_SCYTHE = () => createWeapon(type, 'rusted', [THRUST], {})\r\nexport const TOMB_SCYTHE = () => createWeapon(type, 'tomb', [SWING, FLURRY], {})\r\nexport const BURRIED_SCYTHE = () =>\r\n  createWeapon(type, 'buried', [SWING, SLICE], {})\r\nexport const WITHERING_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_SWING], {})\r\nexport const GLASS_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_SWING], {})\r\n\r\nexport const IRON_SCYTHE = () =>\r\n  createWeapon(type, 'iron', [THRUST, ARMOR_UP, EVADE_UP], {})\r\nexport const STEEL_SCYTHE = () =>\r\n  createWeapon(type, 'steel', [THRUST, SLASH], {})\r\nexport const STAINLESS_SCYTHE = () =>\r\n  createWeapon(type, 'stainless', [THRUST, SLICE], {})\r\n\r\nexport const ANCIENT_SCYTHE = () =>\r\n  createWeapon(type, 'ancient', [SWING, CLEAVE, ARMOR_UP], {})\r\nexport const CRYSTAL_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_SWING], {})\r\nexport const ELEMENTAL_SCYTHE = () =>\r\n  createWeapon(type, 'elemental', [THRUST], {})\r\nexport const CURSED_SCYTHE = () => createWeapon(type, 'cursed', [THRUST], {})\r\n\r\nexport const SHARP_SCYTHE = () =>\r\n  createWeapon(type, 'sharp', [THRUST, SLICE, SLASH], {})\r\nexport const HARDENED_SCYTHE = () =>\r\n  createWeapon(type, 'hardened', [THRUST, FLURRY, ARMOR_UP, EVADE_UP], {})\r\nexport const ENGRAVED_SCYTHE = () =>\r\n  createWeapon(type, 'engraved', [THRUST, FLURRY, SLASH, CLEAVE], {})\r\nexport const ETHEREAL_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_SWING], {})\r\n\r\nexport const EXQUISITE_SCYTHE = () =>\r\n  createWeapon(type, 'exquisite', [THRUST, SLICE, SLASH], {})\r\nexport const DIVINE_SCYTHE = () =>\r\n  createWeapon(type, 'divine', [THRUST, SLICE, ARMOR_UP, EVADE_UP], {})\r\nexport const ARCANE_SCYTHE = () => createWeapon(type, 'arcane', [THRUST], {})\r\nexport const CELESTIAL_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'celestial', [GLASS_SWING], {})\r\n\r\nexport const SCYTHES: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [\r\n    RUSTED_SCYTHE,\r\n    TOMB_SCYTHE,\r\n    BURRIED_SCYTHE,\r\n    WITHERING_SCYTHE,\r\n    GLASS_SCYTHE,\r\n  ],\r\n  2: [IRON_SCYTHE, STEEL_SCYTHE, STAINLESS_SCYTHE],\r\n  3: [ANCIENT_SCYTHE, CRYSTAL_SCYTHE, ELEMENTAL_SCYTHE, CURSED_SCYTHE],\r\n  4: [SHARP_SCYTHE, HARDENED_SCYTHE, ENGRAVED_SCYTHE, ETHEREAL_SCYTHE],\r\n  5: [EXQUISITE_SCYTHE, DIVINE_SCYTHE, ARCANE_SCYTHE, CELESTIAL_SCYTHE],\r\n}\r\n","import { createWeapon } from '..'\r\nimport { CHOP } from '../../../Skill/skills/axe'\r\nimport { ARCANE, NOVA, PROTECT } from '../../../Skill/skills/catalyst'\r\nimport { tWeapon } from '../../type'\r\n\r\nexport const TEST_WEAPON = (): tWeapon => ({\r\n  ...createWeapon(\r\n    'greatsword',\r\n    'mythic',\r\n    [ARCANE, NOVA, CHOP, PROTECT],\r\n    {\r\n      strength: 100,\r\n      agility: 100,\r\n      charisma: -4,\r\n      damageModifiers: {\r\n        undead: 0.1,\r\n        beast: 0.05,\r\n        flying: 0.15,\r\n      },\r\n    },\r\n    ['burning'],\r\n  ),\r\n  name: `Test Weapon of Evil`,\r\n  // breakable: true,\r\n  damage: {\r\n    value: 100,\r\n    range: 'melee',\r\n    type: 'physical',\r\n  },\r\n})\r\n","import { createSkill } from '.'\r\n\r\nexport const SMASH = createSkill('Smash', 3, 0)\r\nexport const WITHERING_SMASH = createSkill('Smash', 2, 0)\r\nexport const GLASS_SMASH = createSkill('Smash', 1, 0)\r\nexport const RIPPLE = createSkill('Ripple', 4, -10, {\r\n  splashDamageModifier: 0.6,\r\n  perfectSplash: true,\r\n})\r\nexport const EARTHQUAKE = createSkill('Earthquake', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const CRUSH = createSkill('Crush', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const STAB = createSkill('Stab', 4, 0, {\r\n  perfectPierce: true,\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  CRUSH,\r\n  EARTHQUAKE,\r\n  GLASS_SMASH,\r\n  RIPPLE,\r\n  SMASH,\r\n  WITHERING_SMASH,\r\n  STUN,\r\n} from '../../../Skill/skills/blunt'\r\nimport { tWeapon } from '../../type'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'hammer'\r\nexport const MERCENARY_HAMMER = (): tWeapon => ({\r\n  ...createWeapon(type, 'starting', [SMASH, RIPPLE], {}),\r\n  name: `Mercenary Hammer`,\r\n})\r\nexport const RUSTED_HAMMER = () =>\r\n  createWeapon(type, 'rusted', [SMASH, RIPPLE], {})\r\nexport const TOMB_HAMMER = () =>\r\n  createWeapon(type, 'tomb', [SMASH, EARTHQUAKE], {})\r\nexport const BURRIED_HAMMER = () =>\r\n  createWeapon(type, 'buried', [SMASH, CRUSH], {})\r\nexport const WITHERING_HAMMER = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_SMASH], {})\r\nexport const GLASS_HAMMER = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_SMASH], {})\r\n\r\nexport const IRON_HAMMER = () => createWeapon(type, 'iron', [SMASH, STUN], {})\r\nexport const STEEL_HAMMER = () =>\r\n  createWeapon(type, 'steel', [SMASH, EARTHQUAKE, RIPPLE], {})\r\nexport const STAINLESS_HAMMER = () =>\r\n  createWeapon(type, 'stainless', [SMASH, CRUSH, RIPPLE], {})\r\n\r\nexport const ANCIENT_HAMMER = () =>\r\n  createWeapon(type, 'ancient', [SMASH, STUN], {})\r\nexport const CRYSTAL_HAMMER = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_SMASH], {})\r\nexport const ELEMENTAL_HAMMER = () =>\r\n  createWeapon(type, 'elemental', [SMASH], {})\r\nexport const CURSED_HAMMER = () => createWeapon(type, 'cursed', [SMASH], {})\r\n\r\nexport const SHARP_HAMMER = () =>\r\n  createWeapon(type, 'sharp', [SMASH, STUN, CRUSH], {})\r\nexport const HARDENED_HAMMER = () =>\r\n  createWeapon(type, 'hardened', [SMASH, CRUSH, EARTHQUAKE, RIPPLE], {})\r\nexport const ENGRAVED_HAMMER = () =>\r\n  createWeapon(type, 'engraved', [SMASH, CRUSH, EARTHQUAKE, RIPPLE], {})\r\nexport const ETHEREAL_HAMMER = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_SMASH], {})\r\n\r\nexport const EXQUISITE_HAMMER = () =>\r\n  createWeapon(type, 'exquisite', [SMASH], {})\r\nexport const DIVINE_HAMMER = () => createWeapon(type, 'divine', [SMASH], {})\r\nexport const ARCANE_HAMMER = () => createWeapon(type, 'arcane', [SMASH], {})\r\nexport const CELESTIAL_HAMMER = () =>\r\n  createBreakableWeapon(type, 'celestial', [SMASH], {})\r\n\r\nexport const HAMMERS: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [\r\n    RUSTED_HAMMER,\r\n    TOMB_HAMMER,\r\n    BURRIED_HAMMER,\r\n    WITHERING_HAMMER,\r\n    GLASS_HAMMER,\r\n  ],\r\n  2: [IRON_HAMMER, STEEL_HAMMER, STAINLESS_HAMMER],\r\n  3: [ANCIENT_HAMMER, CRYSTAL_HAMMER, ELEMENTAL_HAMMER, CURSED_HAMMER],\r\n  4: [SHARP_HAMMER, HARDENED_HAMMER, ENGRAVED_HAMMER, ETHEREAL_HAMMER],\r\n  5: [EXQUISITE_HAMMER, DIVINE_HAMMER, ARCANE_HAMMER, CELESTIAL_HAMMER],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const STRIKE = createSkill('Strike', 4, 0)\r\nexport const WITHERING_STRIKE = createSkill('Strike', 2, 0)\r\nexport const GLASS_STRIKE = createSkill('Strike', 1, 0)\r\nexport const SWING = createSkill('Swing', 5, 0)\r\nexport const FLURRY = createSkill('Flurry', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const LUNGE = createSkill('Lunge', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const STAB = createSkill('Stab', 2, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  GLASS_STRIKE,\r\n  LUNGE,\r\n  SLASH,\r\n  STAB,\r\n  STRIKE,\r\n  SWING,\r\n  WITHERING_STRIKE,\r\n} from '../../../Skill/skills/dagger'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'dagger'\r\nexport const RUSTED_DAGGER = () =>\r\n  createWeapon(type, 'rusted', [STRIKE, SWING], {})\r\nexport const TOMB_DAGGER = () => createWeapon(type, 'tomb', [SWING, LUNGE], {})\r\nexport const BURRIED_DAGGER = () =>\r\n  createWeapon(type, 'buried', [STRIKE, STAB], {})\r\nexport const WITHERING_DAGGER = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_STRIKE], {})\r\nexport const GLASS_DAGGER = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_STRIKE], {})\r\n\r\nexport const IRON_DAGGER = () =>\r\n  createWeapon(type, 'iron', [STRIKE, LUNGE, STAB], {})\r\nexport const STEEL_DAGGER = () =>\r\n  createWeapon(type, 'steel', [STRIKE, LUNGE, SLASH], {})\r\nexport const STAINLESS_DAGGER = () =>\r\n  createWeapon(type, 'stainless', [STRIKE, LUNGE, SLASH], {})\r\n\r\nexport const ANCIENT_DAGGER = () =>\r\n  createWeapon(type, 'ancient', [STRIKE, LUNGE, STAB], {})\r\nexport const CRYSTAL_DAGGER = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_STRIKE], {})\r\nexport const ELEMENTAL_DAGGER = () =>\r\n  createWeapon(type, 'elemental', [STRIKE, LUNGE, STAB], {})\r\nexport const CURSED_DAGGER = () =>\r\n  createWeapon(type, 'cursed', [STRIKE, LUNGE, SLASH], {})\r\n\r\nexport const SHARP_DAGGER = () =>\r\n  createWeapon(type, 'sharp', [STRIKE, LUNGE, STAB], {})\r\nexport const HARDENED_DAGGER = () =>\r\n  createWeapon(type, 'hardened', [STRIKE, LUNGE, SLASH], {})\r\nexport const ENGRAVED_DAGGER = () =>\r\n  createWeapon(type, 'engraved', [STRIKE, LUNGE, STAB], {})\r\nexport const ETHEREAL_DAGGER = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_STRIKE], {})\r\n\r\nexport const EXQUISITE_DAGGER = () =>\r\n  createWeapon(type, 'exquisite', [STRIKE, LUNGE, SLASH], {})\r\nexport const DIVINE_DAGGER = () =>\r\n  createWeapon(type, 'divine', [STRIKE, LUNGE, STAB], {})\r\nexport const ARCANE_DAGGER = () =>\r\n  createWeapon(type, 'arcane', [STRIKE, LUNGE, SLASH], {})\r\nexport const CELESTIAL_DAGGER = () =>\r\n  createBreakableWeapon(type, 'celestial', [STRIKE, LUNGE, STAB], {})\r\n\r\nexport const DAGGERS: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [\r\n    RUSTED_DAGGER,\r\n    TOMB_DAGGER,\r\n    BURRIED_DAGGER,\r\n    WITHERING_DAGGER,\r\n    GLASS_DAGGER,\r\n  ],\r\n  2: [IRON_DAGGER, STEEL_DAGGER, STAINLESS_DAGGER],\r\n  3: [ANCIENT_DAGGER, CRYSTAL_DAGGER, ELEMENTAL_DAGGER, CURSED_DAGGER],\r\n  4: [SHARP_DAGGER, HARDENED_DAGGER, ENGRAVED_DAGGER, ETHEREAL_DAGGER],\r\n  5: [EXQUISITE_DAGGER, DIVINE_DAGGER, ARCANE_DAGGER, CELESTIAL_DAGGER],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const STRIKE = createSkill('Strike', 3, 0)\r\nexport const WITHERING_STRIKE = createSkill('Strike', 2, 0)\r\nexport const GLASS_STRIKE = createSkill('Strike', 1, 0)\r\nexport const SWING = createSkill('Swing', 4, 0)\r\nexport const WIDE_SWING = createSkill('Wide Swing', 4, -5, {\r\n  damageModifier: 0.8,\r\n  splashDamageModifier: 0.8,\r\n  perfectSplash: true,\r\n})\r\nexport const FLURRY = createSkill('Swipe', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const LUNGE = createSkill('Lunge', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const SLICE = createSkill('Stab', 2, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  FLURRY,\r\n  STRIKE,\r\n  LUNGE,\r\n  WIDE_SWING,\r\n  GLASS_STRIKE,\r\n  WITHERING_STRIKE,\r\n  SLASH,\r\n  SLICE,\r\n  STUN,\r\n  SWING,\r\n} from '../../../Skill/skills/greatsword'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'greatsword'\r\nexport const RUSTED_GREATSWORD = () =>\r\n  createWeapon(type, 'rusted', [STRIKE], {})\r\nexport const TOMB_GREATSWORD = () =>\r\n  createWeapon(type, 'tomb', [SWING, FLURRY], {})\r\nexport const BURRIED_GREATSWORD = () =>\r\n  createWeapon(type, 'buried', [STRIKE, FLURRY, SLICE], {})\r\nexport const WITHERING_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_STRIKE], {})\r\nexport const GLASS_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_STRIKE], {})\r\n\r\nexport const IRON_GREATSWORD = () =>\r\n  createWeapon(type, 'iron', [STRIKE, STUN], {})\r\nexport const STEEL_GREATSWORD = () =>\r\n  createWeapon(type, 'steel', [STRIKE, SLICE, LUNGE], {})\r\nexport const STAINLESS_GREATSWORD = () =>\r\n  createWeapon(type, 'stainless', [SLICE, LUNGE, SLASH], {})\r\n\r\nexport const ANCIENT_GREATSWORD = () =>\r\n  createWeapon(type, 'ancient', [SWING, LUNGE, WIDE_SWING], {})\r\nexport const CRYSTAL_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_STRIKE], {})\r\nexport const ELEMENTAL_GREATSWORD = () =>\r\n  createWeapon(type, 'elemental', [STRIKE], {})\r\nexport const CURSED_GREATSWORD = () =>\r\n  createWeapon(type, 'cursed', [STRIKE], {})\r\n\r\nexport const SHARP_GREATSWORD = () =>\r\n  createWeapon(type, 'sharp', [SLICE, SLASH, WIDE_SWING], {})\r\nexport const HARDENED_GREATSWORD = () =>\r\n  createWeapon(type, 'hardened', [SLICE, SLICE, STUN], {})\r\nexport const ENGRAVED_GREATSWORD = () =>\r\n  createWeapon(type, 'engraved', [SLICE, SLASH, FLURRY], {})\r\nexport const ETHEREAL_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_STRIKE], {})\r\n\r\nexport const EXQUISITE_GREATSWORD = () =>\r\n  createWeapon(type, 'exquisite', [SLICE, SLASH, LUNGE], {})\r\nexport const DIVINE_GREATSWORD = () =>\r\n  createWeapon(type, 'divine', [SLICE, SLASH, LUNGE], {})\r\nexport const ARCANE_GREATSWORD = () =>\r\n  createWeapon(type, 'arcane', [STRIKE], {})\r\nexport const CELESTIAL_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'celestial', [GLASS_STRIKE], {})\r\n\r\nexport const GREATSWORDS: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [\r\n    RUSTED_GREATSWORD,\r\n    TOMB_GREATSWORD,\r\n    BURRIED_GREATSWORD,\r\n    WITHERING_GREATSWORD,\r\n    GLASS_GREATSWORD,\r\n  ],\r\n  2: [IRON_GREATSWORD, STEEL_GREATSWORD, STAINLESS_GREATSWORD],\r\n  3: [\r\n    ANCIENT_GREATSWORD,\r\n    CRYSTAL_GREATSWORD,\r\n    ELEMENTAL_GREATSWORD,\r\n    CURSED_GREATSWORD,\r\n  ],\r\n  4: [\r\n    SHARP_GREATSWORD,\r\n    HARDENED_GREATSWORD,\r\n    ENGRAVED_GREATSWORD,\r\n    ETHEREAL_GREATSWORD,\r\n  ],\r\n  5: [\r\n    EXQUISITE_GREATSWORD,\r\n    DIVINE_GREATSWORD,\r\n    ARCANE_GREATSWORD,\r\n    CELESTIAL_GREATSWORD,\r\n  ],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const FIRE = createSkill('Fire', 1, 0, {\r\n  perfectSplash: true,\r\n})\r\nexport const SNIPE = createSkill('Snipe', 2, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const FAN_FIRE = createSkill('Fan Fire', 1, 0, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport { FAN_FIRE, FIRE, SNIPE } from '../../../Skill/skills/pistol'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'pistol'\r\nexport const CORSAIR_PISTOL = () => ({\r\n  ...createWeapon(type, 'starting', [FIRE, SNIPE], {}),\r\n  name: `Corsair Pistol`,\r\n})\r\nexport const RUSTED_PISTOL = () =>\r\n  createWeapon(type, 'rusted', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const TOMB_PISTOL = () =>\r\n  createWeapon(type, 'tomb', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const BURRIED_PISTOL = () =>\r\n  createWeapon(type, 'buried', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const WITHERING_PISTOL = () =>\r\n  createBreakableWeapon(type, 'withering', [FIRE], {})\r\nexport const GLASS_PISTOL = () =>\r\n  createBreakableWeapon(type, 'glass', [FIRE], {})\r\n\r\nexport const IRON_PISTOL = () =>\r\n  createWeapon(type, 'iron', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const STEEL_PISTOL = () =>\r\n  createWeapon(type, 'steel', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const STAINLESS_PISTOL = () =>\r\n  createWeapon(type, 'stainless', [FIRE, SNIPE, FAN_FIRE], {})\r\n\r\nexport const ANCIENT_PISTOL = () =>\r\n  createWeapon(type, 'ancient', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const CRYSTAL_PISTOL = () =>\r\n  createBreakableWeapon(type, 'crystal', [FIRE], {})\r\nexport const ELEMENTAL_PISTOL = () =>\r\n  createWeapon(type, 'elemental', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const CURSED_PISTOL = () =>\r\n  createWeapon(type, 'cursed', [FIRE, SNIPE, FAN_FIRE], {})\r\n\r\nexport const SHARP_PISTOL = () =>\r\n  createWeapon(type, 'sharp', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const HARDENED_PISTOL = () =>\r\n  createWeapon(type, 'hardened', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const ENGRAVED_PISTOL = () =>\r\n  createWeapon(type, 'engraved', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const ETHEREAL_PISTOL = () =>\r\n  createBreakableWeapon(type, 'ethereal', [FIRE], {})\r\n\r\nexport const EXQUISITE_PISTOL = () =>\r\n  createWeapon(type, 'exquisite', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const DIVINE_PISTOL = () =>\r\n  createWeapon(type, 'divine', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const ARCANE_PISTOL = () =>\r\n  createWeapon(type, 'arcane', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const CELESTIAL_PISTOL = () =>\r\n  createBreakableWeapon(type, 'celestial', [FIRE], {})\r\n\r\nexport const PISTOLS: tWeaponsByLevel = {\r\n  0: [CORSAIR_PISTOL],\r\n  1: [\r\n    RUSTED_PISTOL,\r\n    TOMB_PISTOL,\r\n    BURRIED_PISTOL,\r\n    WITHERING_PISTOL,\r\n    GLASS_PISTOL,\r\n  ],\r\n  2: [IRON_PISTOL, STEEL_PISTOL, STAINLESS_PISTOL],\r\n  3: [ANCIENT_PISTOL, CRYSTAL_PISTOL, ELEMENTAL_PISTOL, CURSED_PISTOL],\r\n  4: [SHARP_PISTOL, HARDENED_PISTOL, ENGRAVED_PISTOL, ETHEREAL_PISTOL],\r\n  5: [EXQUISITE_PISTOL, DIVINE_PISTOL, ARCANE_PISTOL, CELESTIAL_PISTOL],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const STRIKE = createSkill('Strike', 2, 0)\r\nexport const WITHERING_STRIKE = createSkill('Strike', 2, 0)\r\nexport const GLASS_STRIKE = createSkill('Strike', 1, 0)\r\nexport const SWING = createSkill('Swing', 4, 0)\r\nexport const FLURRY = createSkill('Swipe', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const LUNGE = createSkill('Lunge', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const STAB = createSkill('Stab', 2, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  LUNGE,\r\n  FLURRY,\r\n  GLASS_STRIKE,\r\n  SLASH,\r\n  STAB,\r\n  SWING,\r\n  STRIKE,\r\n  WITHERING_STRIKE,\r\n} from '../../../Skill/skills/sword'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'sword'\r\nexport const RUSTED_SWORD = () => createWeapon(type, 'rusted', [STRIKE], {})\r\nexport const TOMB_SWORD = () => createWeapon(type, 'tomb', [SWING, FLURRY], {})\r\nexport const BURRIED_SWORD = () =>\r\n  createWeapon(type, 'buried', [SWING, STAB], {})\r\nexport const WITHERING_SWORD = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_STRIKE], {})\r\nexport const GLASS_SWORD = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_STRIKE], {})\r\n\r\nexport const IRON_SWORD = () => createWeapon(type, 'iron', [STRIKE, LUNGE], {})\r\nexport const STEEL_SWORD = () =>\r\n  createWeapon(type, 'steel', [STRIKE, SLASH], {})\r\nexport const STAINLESS_SWORD = () =>\r\n  createWeapon(type, 'stainless', [STRIKE, STAB], {})\r\n\r\nexport const ANCIENT_SWORD = () =>\r\n  createWeapon(type, 'ancient', [STRIKE, LUNGE], {})\r\nexport const CRYSTAL_SWORD = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_STRIKE], {})\r\nexport const ELEMENTAL_SWORD = () =>\r\n  createWeapon(type, 'elemental', [STRIKE], {})\r\nexport const CURSED_SWORD = () => createWeapon(type, 'cursed', [STRIKE], {})\r\n\r\nexport const SHARP_SWORD = () =>\r\n  createWeapon(type, 'sharp', [STRIKE, STAB, SLASH], {})\r\nexport const HARDENED_SWORD = () =>\r\n  createWeapon(type, 'hardened', [STRIKE, FLURRY, LUNGE], {})\r\nexport const ENGRAVED_SWORD = () =>\r\n  createWeapon(type, 'engraved', [STRIKE, FLURRY, SLASH, LUNGE], {})\r\nexport const ETHEREAL_SWORD = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_STRIKE], {})\r\n\r\nexport const EXQUISITE_SWORD = () =>\r\n  createWeapon(type, 'exquisite', [STRIKE, STAB, SLASH], {})\r\nexport const DIVINE_SWORD = () =>\r\n  createWeapon(type, 'divine', [STRIKE, STAB, SLASH], {})\r\nexport const ARCANE_SWORD = () => createWeapon(type, 'arcane', [STRIKE], {})\r\nexport const CELESTIAL_SWORD = () =>\r\n  createBreakableWeapon(type, 'celestial', [GLASS_STRIKE], {})\r\n\r\nexport const SWORDS: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [RUSTED_SWORD, TOMB_SWORD, BURRIED_SWORD, WITHERING_SWORD, GLASS_SWORD],\r\n  2: [IRON_SWORD, STEEL_SWORD, STAINLESS_SWORD],\r\n  3: [ANCIENT_SWORD, CRYSTAL_SWORD, ELEMENTAL_SWORD, CURSED_SWORD],\r\n  4: [SHARP_SWORD, HARDENED_SWORD, ENGRAVED_SWORD, ETHEREAL_SWORD],\r\n  5: [EXQUISITE_SWORD, DIVINE_SWORD, ARCANE_SWORD, CELESTIAL_SWORD],\r\n}\r\n","import { tWeapon } from '../../type'\r\nimport { tWeaponsByLevel } from '../type'\r\nimport { AXES } from './axe'\r\nimport { HAMMERS } from './hammer'\r\nimport { BOWS } from './bow'\r\nimport { CATALYSTS } from './catalyst'\r\nimport { CHIMES } from './chime'\r\nimport { DAGGERS } from './dagger'\r\nimport { GREATSWORDS } from './greatsword'\r\nimport { PISTOLS } from './pistol'\r\nimport { SCYTHES } from './scythe'\r\nimport { SWORDS } from './sword'\r\n\r\nexport const WEAPONS_BY_LEVEL: tWeaponsByLevel = {\r\n  0: [\r\n    ...AXES[0],\r\n    ...HAMMERS[0],\r\n    ...BOWS[0],\r\n    ...CATALYSTS[0],\r\n    ...CHIMES[0],\r\n    ...DAGGERS[0],\r\n    ...GREATSWORDS[0],\r\n    ...PISTOLS[0],\r\n    ...SCYTHES[0],\r\n    ...SWORDS[0],\r\n  ],\r\n  1: [\r\n    ...AXES[1],\r\n    ...HAMMERS[1],\r\n    ...BOWS[1],\r\n    ...CATALYSTS[1],\r\n    ...CHIMES[1],\r\n    ...DAGGERS[1],\r\n    ...GREATSWORDS[1],\r\n    ...PISTOLS[1],\r\n    ...SCYTHES[1],\r\n    ...SWORDS[1],\r\n  ],\r\n  2: [\r\n    ...AXES[2],\r\n    ...HAMMERS[2],\r\n    ...BOWS[2],\r\n    ...CATALYSTS[2],\r\n    ...CHIMES[2],\r\n    ...DAGGERS[2],\r\n    ...GREATSWORDS[2],\r\n    ...PISTOLS[2],\r\n    ...SCYTHES[2],\r\n    ...SWORDS[2],\r\n  ],\r\n  3: [\r\n    ...AXES[3],\r\n    ...HAMMERS[3],\r\n    ...BOWS[3],\r\n    ...CATALYSTS[3],\r\n    ...CHIMES[3],\r\n    ...DAGGERS[3],\r\n    ...GREATSWORDS[3],\r\n    ...PISTOLS[3],\r\n    ...SCYTHES[3],\r\n    ...SWORDS[3],\r\n  ],\r\n  4: [\r\n    ...AXES[4],\r\n    ...HAMMERS[4],\r\n    ...BOWS[4],\r\n    ...CATALYSTS[4],\r\n    ...CHIMES[4],\r\n    ...DAGGERS[4],\r\n    ...GREATSWORDS[4],\r\n    ...PISTOLS[4],\r\n    ...SCYTHES[4],\r\n    ...SWORDS[4],\r\n  ],\r\n  5: [\r\n    ...AXES[5],\r\n    ...HAMMERS[5],\r\n    ...BOWS[5],\r\n    ...CATALYSTS[5],\r\n    ...CHIMES[5],\r\n    ...DAGGERS[5],\r\n    ...GREATSWORDS[5],\r\n    ...PISTOLS[5],\r\n    ...SCYTHES[5],\r\n    ...SWORDS[5],\r\n  ],\r\n}\r\n\r\nexport const ALL_WEAPONS = Object.keys(WEAPONS_BY_LEVEL).reduce(\r\n  (allWeapons, level) => {\r\n    return [...allWeapons, ...WEAPONS_BY_LEVEL[parseInt(level, 10)]]\r\n  },\r\n  [] as (() => tWeapon)[],\r\n)\r\n","import { v4 } from 'uuid'\r\nimport { tItemRarity } from '../../Item/type'\r\nimport { tSkill } from '../../Skill/type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { tStats } from '../../Stats/type'\r\nimport { tStatusType } from '../../Status/type'\r\nimport { tArmor, tArmorResourceType, tArmorType } from '../type'\r\n\r\nexport const createArmor = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  resource: tArmorResourceType,\r\n  type: tArmorType,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n): tArmor => {\r\n  return {\r\n    id: v4(),\r\n    name,\r\n    rarity,\r\n    itemType: 'armor',\r\n    resource,\r\n    type,\r\n    stat: 'vigor',\r\n    goldValue,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      ...stats,\r\n    },\r\n    skills,\r\n    immunities,\r\n    level: 0,\r\n    upgrades: [],\r\n  }\r\n}\r\n\r\nexport const createFootwear = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'feet',\r\n    'footwear',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createHat = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(name, rarity, 'head', 'hat', goldValue, stats, skills, immunities)\r\n\r\nexport const createHeavyArmor = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'body',\r\n    'heavy-armor',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createHelmet = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'head',\r\n    'helmet',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createLightArmor = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'body',\r\n    'light-armor',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createMagicArmor = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'body',\r\n    'magic-armor',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createMagicHat = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'head',\r\n    'magic-hat',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createShield = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'offhand',\r\n    'shield',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createWard = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'offhand',\r\n    'ward',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createRing = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'ring',\r\n    'ring',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createPendant = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'pendant',\r\n    'pendant',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n","import { createSkill } from '.'\r\n\r\nexport const TAUNT = createSkill('Taunt', 2, 0, {\r\n  damageModifier: 0,\r\n  damage: false,\r\n  targetType: 'self',\r\n  weaponStatOverride: 'vigor',\r\n  perfectStatus: ['targeted'],\r\n})\r\n","import { createShield } from '..'\r\nimport { TAUNT } from '../../../Skill/skills/armor'\r\n\r\nexport const FOREST_BUCKLER = () =>\r\n  createShield('Forest Buckler', 'uncommon', 20, {\r\n    armor: 1,\r\n    evasion: 4,\r\n  })\r\n\r\nexport const LEATHER_BUCKLER = () =>\r\n  createShield('Leather Buckler', 'common', 10, {\r\n    evasion: 2,\r\n  })\r\n\r\nexport const STUDENT_WARD = () =>\r\n  createShield(\r\n    'Student Ward',\r\n    'uncommon',\r\n    20,\r\n    {\r\n      resistance: 2,\r\n    },\r\n    [TAUNT],\r\n  )\r\n\r\nexport const BROKEN_SHIELD = () =>\r\n  createShield(\r\n    'Broken Shield',\r\n    'common',\r\n    14,\r\n    {\r\n      armor: 1,\r\n    },\r\n    [TAUNT],\r\n  )\r\n\r\nexport const VILLAGER_SHIELD = () =>\r\n  createShield(\r\n    'Villager Shield',\r\n    'common',\r\n    20,\r\n    {\r\n      armor: 2,\r\n      resistance: 2,\r\n    },\r\n    [TAUNT],\r\n  )\r\n\r\nexport const WOODEN_WAR_SHIELD = () =>\r\n  createShield(\r\n    'Wooden War Shield',\r\n    'common',\r\n    20,\r\n    {\r\n      armor: 1,\r\n      resistance: 1,\r\n      agility: -5,\r\n    },\r\n    [TAUNT],\r\n    ['stunned'],\r\n  )\r\n","import { FOREST_PENDANT, IRON_CHARM, RANGER_CHARM } from './pendants'\r\nimport { DRAINED_RING, LUCKY_RING, RING_OF_FOCUS, SIMPLE_RING } from './rings'\r\nimport {\r\n  BROKEN_SHIELD,\r\n  FOREST_BUCKLER,\r\n  LEATHER_BUCKLER,\r\n  STUDENT_WARD,\r\n  VILLAGER_SHIELD,\r\n  WOODEN_WAR_SHIELD,\r\n} from './shields/level_0'\r\nimport {\r\n  APPRENTICE_WARD,\r\n  CULTIST_SHIELD,\r\n  IRON_BUCKLER,\r\n  IRON_WAR_SHIELD,\r\n  WOODEN_BUCKLER,\r\n  WOODEN_PLANK_SHIELD,\r\n} from './shields/level_1'\r\nimport {\r\n  CULTIST_WARD,\r\n  GRAVEGUARD_SHIELD,\r\n  HEAVY_IRON_SHIELD,\r\n  NOVICE_WARD,\r\n  OLD_FOREST_SHIELD,\r\n} from './shields/level_2'\r\n\r\nexport const PENDANTS_BY_LEVEL = {\r\n  0: [FOREST_PENDANT, RANGER_CHARM, IRON_CHARM],\r\n}\r\nexport const RINGS_BY_LEVEL = {\r\n  0: [LUCKY_RING, RING_OF_FOCUS, DRAINED_RING, SIMPLE_RING],\r\n}\r\nexport const SHIELDS_BY_LEVEL = {\r\n  0: [\r\n    FOREST_BUCKLER,\r\n    STUDENT_WARD,\r\n    VILLAGER_SHIELD,\r\n    WOODEN_WAR_SHIELD,\r\n    LEATHER_BUCKLER,\r\n    BROKEN_SHIELD,\r\n  ],\r\n  1: [\r\n    WOODEN_PLANK_SHIELD,\r\n    CULTIST_SHIELD,\r\n    WOODEN_BUCKLER,\r\n    IRON_BUCKLER,\r\n    APPRENTICE_WARD,\r\n    IRON_WAR_SHIELD,\r\n  ],\r\n  2: [\r\n    GRAVEGUARD_SHIELD,\r\n    OLD_FOREST_SHIELD,\r\n    HEAVY_IRON_SHIELD,\r\n    NOVICE_WARD,\r\n    CULTIST_WARD,\r\n  ],\r\n}\r\n","import { createPendant } from '..'\r\n\r\nexport const FOREST_PENDANT = () =>\r\n  createPendant('Forest Pendant', 'rare', 60, {\r\n    resistance: 1,\r\n    healthRegeneration: 3,\r\n  })\r\n\r\nexport const RANGER_CHARM = () =>\r\n  createPendant('Ranger Charm', 'common', 30, {\r\n    dexterity: 1,\r\n  })\r\n\r\nexport const IRON_CHARM = () =>\r\n  createPendant('Iron Charm', 'uncommon', 45, {\r\n    armor: 1,\r\n    strength: 1,\r\n    agility: -2,\r\n  })\r\n","import { createRing } from '..'\r\n\r\nexport const LUCKY_RING = () =>\r\n  createRing('Lucky Ring', 'uncommon', 50, { luck: 20 })\r\n\r\nexport const RING_OF_FOCUS = () =>\r\n  createRing('Ring of Focus', 'uncommon', 50, {\r\n    attackDamageOffset: 1,\r\n    criticalChance: 4,\r\n  })\r\n\r\nexport const DRAINED_RING = () =>\r\n  createRing('Drained Ring', 'uncommon', 40, {\r\n    resistance: 2,\r\n  })\r\n\r\nexport const SIMPLE_RING = () =>\r\n  createRing('Simple Ring', 'common', 30, {\r\n    armor: 1,\r\n  })\r\n","import { createShield } from '..'\r\nimport { TAUNT } from '../../../Skill/skills/armor'\r\n\r\nexport const WOODEN_PLANK_SHIELD = () =>\r\n  createShield(\r\n    'Wooden Plank Shield',\r\n    'common',\r\n    25,\r\n    {\r\n      armor: 4,\r\n      resistance: 2,\r\n    },\r\n    [TAUNT],\r\n  )\r\n\r\nexport const CULTIST_SHIELD = () =>\r\n  createShield(\r\n    'Cultist Shield',\r\n    'common',\r\n    25,\r\n    {\r\n      armor: 3,\r\n      resistance: 1,\r\n    },\r\n    [TAUNT],\r\n  )\r\n\r\nexport const WOODEN_BUCKLER = () =>\r\n  createShield('Wooden Buckler', 'common', 15, {\r\n    evasion: 3,\r\n  })\r\n\r\nexport const IRON_BUCKLER = () =>\r\n  createShield('Iron Buckler', 'common', 25, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    evasion: 5,\r\n  })\r\n\r\nexport const APPRENTICE_WARD = () =>\r\n  createShield(\r\n    'Apprentice Shield',\r\n    'common',\r\n    25,\r\n    {\r\n      armor: 2,\r\n      resistance: 3,\r\n    },\r\n    [TAUNT],\r\n  )\r\n\r\nexport const IRON_WAR_SHIELD = () =>\r\n  createShield(\r\n    'Iron War Shield',\r\n    'uncommon',\r\n    30,\r\n    {\r\n      armor: 2,\r\n      resistance: 2,\r\n      agility: -5,\r\n    },\r\n    [TAUNT],\r\n    ['stunned'],\r\n  )\r\n","import { createShield } from '..'\r\nimport { TAUNT } from '../../../Skill/skills/armor'\r\n\r\nexport const GRAVEGUARD_SHIELD = () =>\r\n  createShield(\r\n    'Graveguard Shield',\r\n    'uncommon',\r\n    40,\r\n    {\r\n      armor: 2,\r\n      resistance: 2,\r\n      attackDamageOffset: 2,\r\n    },\r\n    [TAUNT],\r\n  )\r\n\r\nexport const OLD_FOREST_SHIELD = () =>\r\n  createShield('Old Forest Shield', 'rare', 50, {\r\n    armor: 6,\r\n    strength: 5,\r\n    agility: -3,\r\n  })\r\n\r\nexport const HEAVY_IRON_SHIELD = () =>\r\n  createShield(\r\n    'Heavy Iron Shield',\r\n    'uncommon',\r\n    40,\r\n    {\r\n      armor: 5,\r\n      resistance: 5,\r\n      agility: -2,\r\n    },\r\n    [TAUNT],\r\n  )\r\n\r\nexport const NOVICE_WARD = () =>\r\n  createShield('Novice Ward', 'uncommon', 40, {\r\n    armor: 1,\r\n    resistance: 3,\r\n    damageReflection: {\r\n      melee: 0,\r\n      ranged: 6,\r\n    },\r\n  })\r\n\r\nexport const CULTIST_WARD = () =>\r\n  createShield('Cultist Ward', 'uncommon', 40, {\r\n    armor: 2,\r\n    resistance: 6,\r\n  })\r\n","import { tArmor } from '../../type'\r\nimport {\r\n  PENDANTS_BY_LEVEL,\r\n  RINGS_BY_LEVEL,\r\n  SHIELDS_BY_LEVEL,\r\n} from '../constants'\r\n\r\nexport const ARMOR_BY_LEVEL: Record<number, (() => tArmor)[]> = {\r\n  0: [...RINGS_BY_LEVEL[0], ...PENDANTS_BY_LEVEL[0], ...SHIELDS_BY_LEVEL[0]],\r\n  1: [...SHIELDS_BY_LEVEL[1]],\r\n  2: [...SHIELDS_BY_LEVEL[2]],\r\n  3: [],\r\n  4: [],\r\n}\r\n\r\nexport const ALL_ARMOR = () =>\r\n  Object.keys(ARMOR_BY_LEVEL).reduce((result, key) => {\r\n    return [...result, ...ARMOR_BY_LEVEL[parseInt(key)]]\r\n  }, [] as (() => tArmor)[])\r\n","import { config } from 'process'\r\nimport { getRandom } from '../../../util'\r\nimport { tCharacter } from '../../Character/type'\r\n\r\nexport const makeRandomFloorEncounter = (\r\n  characterList: (() => tCharacter)[],\r\n  enemyCount: number,\r\n): tCharacter[] => {\r\n  return Array(enemyCount)\r\n    .fill(null)\r\n    .map((_) => {\r\n      return getRandom(characterList)()\r\n    })\r\n}\r\n\r\nexport interface tFloorEnemyConfig {\r\n  enemy: () => tCharacter\r\n  depths: number[]\r\n}\r\n\r\nexport type tFloorEncounterSizes = Record<number, number>\r\n\r\nexport const buildFloorEnemeis = (\r\n  configs: tFloorEnemyConfig[],\r\n  encounterSizes: tFloorEncounterSizes,\r\n  size: number,\r\n) => {\r\n  const result = Array(size)\r\n    .fill(null)\r\n    .map((_, depth) => {\r\n      const enemies = configs\r\n        .filter((c) => c.depths.includes(depth))\r\n        .map((c) => c.enemy)\r\n      return makeRandomFloorEncounter(enemies, encounterSizes[depth])\r\n    })\r\n    .reduce((res, current, index) => {\r\n      return {\r\n        ...res,\r\n        [index]: [current],\r\n      }\r\n    }, {})\r\n\r\n  return result\r\n}\r\n","export const makeRandom = (max: number, min: number = 0) => {\r\n  const value = Math.floor(Math.random() * max) + min\r\n  return value\r\n}\r\n","import { getRandom } from '../../util'\r\nimport { makeRandom } from '../../util/makeRandom'\r\nimport { ARMOR_BY_LEVEL } from '../Armor/builders/sets'\r\nimport { tArmor } from '../Armor/type'\r\nimport { WEAPONS_BY_LEVEL } from '../Weapon/builders/objects'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { tItemType } from './type'\r\n\r\nexport const getRandomItem = (\r\n  level: number,\r\n  min: number = 0,\r\n): tWeapon | tArmor => {\r\n  const itemType: tItemType = makeRandom(100) > 15 ? 'weapon' : 'armor'\r\n  if (itemType === 'weapon') {\r\n    level = level === 0 ? 1 : level\r\n    let items = Array(level + 1)\r\n      .fill(null)\r\n      .reduce((result, _, index) => {\r\n        if (index === 0) return result\r\n        if (index < min) return result\r\n        return [...result, ...WEAPONS_BY_LEVEL[index]]\r\n      }, [] as (() => tWeapon)[]) as (() => tWeapon)[]\r\n\r\n    const random = getRandom(items)\r\n    return random()\r\n  } else {\r\n    let items = Array(level + 1)\r\n      .fill(null)\r\n      .reduce((result, _, index) => {\r\n        if (index < min) return result\r\n        return [...result, ...(ARMOR_BY_LEVEL[index] || [])]\r\n      }, [] as (() => tArmor)[]) as (() => tArmor)[]\r\n    const random = getRandom(items)\r\n    if (!random) return getRandomItem(level, min)\r\n    return random()\r\n  }\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const HEAL = createSkill('Heal', 0, 0, {\r\n  damageModifier: 0,\r\n  targetType: 'self',\r\n  damage: false,\r\n  healing: true,\r\n})\r\n\r\nexport const REMOVE_CURSES = createSkill('Remove Curses', 0, 0, {\r\n  targetType: 'self',\r\n  damage: false,\r\n  damageModifier: 0,\r\n  perfectStatus: ['blessed'],\r\n})\r\n\r\nexport const POISON_KNIFE = createSkill('Poison Knife', 0, 0, {\r\n  damage: false,\r\n  damageModifier: 0,\r\n  perfectStatus: ['poisoned'],\r\n})\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { HEAL } from '../../Skill/skills/consumables'\r\n\r\nconst cid = v4()\r\nexport const GODSBEARD = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Mellow Grass',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...HEAL,\r\n      consumableId: id,\r\n    },\r\n    goldValue: 50,\r\n  }\r\n}\r\n","import Wolf from '../../../icons/svg/lorc/wolf-head.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_WOLF = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Wolf',\r\n    Wolf,\r\n    1,\r\n    9,\r\n    makeEnemyWeapon('dexterity', 9, 'melee', 'physical', [\r\n      createSkill('Bite', 3, 0),\r\n      createSkill('Chomp', 4, 0, { perfectPierce: true }),\r\n    ]),\r\n    {\r\n      dexterity: 52,\r\n      agility: getRandom([55, 56, 57, 58, 59, 60, 61, 62, 63, 64]),\r\n      evasion: 10,\r\n    },\r\n    ['beast'],\r\n    [\r\n      makeEnemyReward(3, 3),\r\n      makeEnemyReward(3, 3),\r\n      makeEnemyReward(3, 6, [getRandomItem(0)]),\r\n    ],\r\n  )\r\n}\r\n","import Witch from '../../../icons/svg/lorc/witch-flight.svg'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { tStatusType } from '../../Status/type'\r\nimport { tCharacter } from '../type'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\n\r\nexport const FOREST_WITCH = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Witch',\r\n    Witch,\r\n    1,\r\n    9,\r\n    makeEnemyWeapon('intelligence', 9, 'ranged', 'magic', [\r\n      createSkill('Curse', 2, -10, {\r\n        damage: false,\r\n        damageModifier: 0,\r\n        perfectStatus: [\r\n          getRandom<tStatusType>([\r\n            'cursed-agility',\r\n            'cursed-charisma',\r\n            'cursed-dexterity',\r\n            'cursed-intelligence',\r\n            'cursed-luck',\r\n            'cursed-strength',\r\n          ]),\r\n        ],\r\n      }),\r\n      createSkill('Blast', 3, 0),\r\n    ]),\r\n    {\r\n      intelligence: 84,\r\n      agility: getRandom([60, 62, 64, 66, 68]),\r\n      resistance: 2,\r\n      evasion: 10,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(5, 10),\r\n      makeEnemyReward(5, 10),\r\n      makeEnemyReward(7, 15, [getRandomItem(1)]),\r\n    ],\r\n  )\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Troll from '../../../icons/svg/skoll/troll.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_TROLL = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Troll',\r\n    Troll,\r\n    2,\r\n    24,\r\n    makeEnemyWeapon('strength', 16, 'melee', 'physical', [\r\n      createSkill('Smash', 4, 0),\r\n      createSkill('Quake', 5, -15, {\r\n        damageModifier: 0.5,\r\n        targetType: 'group',\r\n        perfectStatus: ['stunned'],\r\n      }),\r\n    ]),\r\n    {\r\n      strength: 76,\r\n      agility: getRandom([59, 60, 61, 62, 63, 64]),\r\n      armor: 3,\r\n      resistance: 0,\r\n      evasion: 10,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(8, 15),\r\n      makeEnemyReward(9, 15, [getRandomItem(0)]),\r\n      makeEnemyReward(10, 15, [getRandomItem(1)]),\r\n    ],\r\n  )\r\n}\r\n","import BeastMan from '../../../icons/svg/lorc/werewolf.svg'\r\nimport { tCharacter } from '../type'\r\nimport { BASE_C_STATS } from '../../Stats/constants'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_BEAST = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Beast',\r\n    BeastMan,\r\n    1,\r\n    12,\r\n    makeEnemyWeapon('strength', 10, 'melee', 'physical', [\r\n      createSkill('Strike', 2, 0),\r\n      createSkill('Impale', 4, -5, { perfectStatus: ['bleeding'] }),\r\n    ]),\r\n    {\r\n      ...BASE_C_STATS,\r\n      strength: 52,\r\n      agility: getRandom([55, 56, 57, 58, 59, 60, 61]),\r\n      armor: 3,\r\n      evasion: 10,\r\n    },\r\n    ['beast'],\r\n    [\r\n      makeEnemyReward(6, 5),\r\n      makeEnemyReward(6, 10, [getRandomItem(0)]),\r\n      makeEnemyReward(6, 10, [getRandomItem(1)]),\r\n    ],\r\n  )\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Boar from '../../../icons/svg/lorc/boar-tusks.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_BOAR = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Boar',\r\n    Boar,\r\n    2,\r\n    27,\r\n    makeEnemyWeapon('strength', 16, 'melee', 'physical', [\r\n      createSkill('Ram', 4, 0),\r\n      createSkill('Impale', 4, -15, {\r\n        perfectPierce: true,\r\n      }),\r\n    ]),\r\n    {\r\n      strength: 76,\r\n      agility: getRandom([59, 60, 61, 62, 63, 64]),\r\n      armor: 0,\r\n      resistance: 0,\r\n      evasion: 17,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(10, 10, [getRandomItem(0)]),\r\n      makeEnemyReward(10, 15, [getRandomItem(1)]),\r\n      makeEnemyReward(10, 15, [getRandomItem(2, 2)]),\r\n    ],\r\n  )\r\n}\r\n","import Cultist from '../../../icons/svg/lorc/cultist.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const CULTIST_BRUTE = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Cultist Brute',\r\n    Cultist,\r\n    4,\r\n    26,\r\n    makeEnemyWeapon('strength', 14, 'melee', 'physical', [\r\n      createSkill('Slice', 3, 0),\r\n      createSkill('Slash', 4, -5, { perfectStatus: ['bleeding'] }),\r\n    ]),\r\n    {\r\n      strength: 72,\r\n      agility: getRandom([75, 76, 77, 78, 79, 80, 81, 82]),\r\n      armor: 4,\r\n      resistance: 2,\r\n      evasion: 13,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(10, 10),\r\n      makeEnemyReward(15, 11),\r\n      makeEnemyReward(20, 15, [getRandomItem(2)]),\r\n    ],\r\n  )\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Cultist from '../../../icons/svg/lorc/cultist.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const CULTIST = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Cultist',\r\n    Cultist,\r\n    2,\r\n    17,\r\n    makeEnemyWeapon('intelligence', 11, 'melee', 'magic', [\r\n      createSkill('Enflame', 4, -10, { perfectStatus: ['burning'] }),\r\n      createSkill('Arcane', 3, 0, { perfectPierce: true }),\r\n    ]),\r\n    {\r\n      intelligence: 75,\r\n      agility: getRandom([68, 69, 70, 71]),\r\n      armor: 1,\r\n      resistance: 4,\r\n      evasion: 15,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(10, 10),\r\n      makeEnemyReward(15, 11),\r\n      makeEnemyReward(20, 15, [getRandomItem(2)]),\r\n    ],\r\n  )\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Cultist from '../../../icons/svg/lorc/cultist.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const CULTIST_SCHOLAR = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Cultist Scholar',\r\n    Cultist,\r\n    5,\r\n    29,\r\n    makeEnemyWeapon('intelligence', 28, 'melee', 'magic', [\r\n      createSkill('Enflame', 4, -10, { perfectStatus: ['burning'] }),\r\n      createSkill('Arcane', 3, 0, { perfectPierce: true }),\r\n    ]),\r\n    {\r\n      intelligence: 80,\r\n      agility: getRandom([68, 69, 70, 71]),\r\n      armor: 3,\r\n      resistance: 8,\r\n      evasion: 17,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(70, 40),\r\n      makeEnemyReward(70, 40),\r\n      makeEnemyReward(90, 50, [getRandomItem(4, 3)]),\r\n    ],\r\n  )\r\n}\r\n","import { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport FireWhisp from '../../../icons/svg/lorc/unfriendly-fire.svg'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const FLAME_WISP = () =>\r\n  makeEnemy(\r\n    'Flame Wisp',\r\n    FireWhisp,\r\n    4,\r\n    19,\r\n    makeEnemyWeapon('intelligence', 30, 'ranged', 'magic', [\r\n      createSkill('Ember', 3, 0),\r\n      createSkill('Engulf', 3, -10, { perfectStatus: ['burning'] }),\r\n      createSkill('Fire Blast', 4, -10, {\r\n        perfectStatus: ['burning'],\r\n        targetType: 'group',\r\n      }),\r\n    ]),\r\n    {\r\n      intelligence: 75,\r\n      agility: getRandom([70, 71, 72, 73, 74, 75]),\r\n      evasion: 20,\r\n      resistance: 7,\r\n      armor: 7,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(80, 40, [getRandomItem(3, 3)]),\r\n      makeEnemyReward(100, 50, [getRandomItem(4, 3)]),\r\n    ],\r\n    ['burning'],\r\n    [\r\n      {\r\n        duration: -1,\r\n        type: 'evasive',\r\n        stats: ZERO_STATS,\r\n        stack: 0,\r\n        immunities: [],\r\n      },\r\n    ],\r\n  )\r\n","import { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport Banshee from '../../../icons/svg/lorc/haunting.svg'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\n\r\nexport const BANSHEE = () =>\r\n  makeEnemy(\r\n    'Banshee',\r\n    Banshee,\r\n    6,\r\n    32,\r\n    makeEnemyWeapon('intelligence', 32, 'ranged', 'magic', [\r\n      createSkill('Nova', 3, -5, {\r\n        damageModifier: 0.5,\r\n      }),\r\n      createSkill('Swipe', 3, 0, { perfectPierce: true }),\r\n      createSkill('Attack Down', 3, -15, {\r\n        damage: false,\r\n        damageModifier: 0,\r\n        perfectStatus: ['attack-down'],\r\n      }),\r\n    ]),\r\n    {\r\n      intelligence: 78,\r\n      strength: 70,\r\n      agility: getRandom([77, 78, 79, 80, 81, 82]),\r\n      evasion: 30,\r\n      resistance: 8,\r\n      armor: 1,\r\n    },\r\n    ['undead'],\r\n    [\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(80, 40, [getRandomItem(4, 3)]),\r\n      makeEnemyReward(100, 50, [getRandomItem(4, 4)]),\r\n    ],\r\n    ['burning', 'bleeding', 'poisoned', 'stunned'],\r\n  )\r\n","import { getRandom } from '../../../util'\r\nimport Skull from '../../../icons/svg/lorc/daemon-skull.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const CONSECRATED_GUARD = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Consecrated Guard',\r\n    Skull,\r\n    6,\r\n    48,\r\n    makeEnemyWeapon('strength', 34, 'melee', 'physical', [\r\n      createSkill('Beast Claw', 4, 0, { perfectStatus: ['attack-down'] }),\r\n      createSkill('Beast Bite', 3, -10, { perfectPierce: true }),\r\n    ]),\r\n    {\r\n      strength: 78,\r\n      agility: getRandom([69, 70, 71, 72, 73, 74]),\r\n      armor: 8,\r\n      resistance: 8,\r\n      evasion: 17,\r\n    },\r\n    ['undead'],\r\n    [\r\n      makeEnemyReward(100, 40),\r\n      makeEnemyReward(180, 40, [getRandomItem(3, 3)]),\r\n      makeEnemyReward(200, 50, [getRandomItem(4, 3)]),\r\n    ],\r\n  )\r\n}\r\n","import { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport Icon from '../../../icons/svg/lorc/eyestalk.svg'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { getRandom } from '../../../util'\r\nimport { tStatusType } from '../../Status/type'\r\nimport { getRandomItem } from '../../Item/util'\r\n\r\nexport const INFECTED_EYESTALK = () =>\r\n  makeEnemy(\r\n    'Infected Eyestalk',\r\n    Icon,\r\n    4,\r\n    28,\r\n    makeEnemyWeapon('intelligence', 18, 'ranged', 'magic', [\r\n      createSkill('Curse', 2, -10, {\r\n        perfectStatus: [\r\n          getRandom<tStatusType>([\r\n            'cursed-agility',\r\n            'cursed-charisma',\r\n            'cursed-dexterity',\r\n            'cursed-intelligence',\r\n            'cursed-luck',\r\n            'cursed-strength',\r\n          ]),\r\n        ],\r\n      }),\r\n      createSkill('Slam', 3, 0),\r\n    ]),\r\n    {\r\n      intelligence: 80,\r\n      agility: getRandom([65, 66, 67, 68, 69, 70]),\r\n      evasion: 23,\r\n      resistance: 5,\r\n      armor: 4,\r\n    },\r\n    ['undead'],\r\n    [\r\n      makeEnemyReward(50, 20),\r\n      makeEnemyReward(50, 20),\r\n      makeEnemyReward(50, 40, [getRandomItem(2, 2)]),\r\n      makeEnemyReward(50, 50, [getRandomItem(3, 3)]),\r\n    ],\r\n    ['stunned', 'bleeding', 'poisoned'],\r\n  )\r\n","import { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport Spirit from '../../../icons/svg/lorc/spectre.svg'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { getRandom } from '../../../util'\r\nimport { tStatusType } from '../../Status/type'\r\nimport { getRandomItem } from '../../Item/util'\r\n\r\nexport const TOMB_SPIRIT = () =>\r\n  makeEnemy(\r\n    'Tomb Spirit',\r\n    Spirit,\r\n    4,\r\n    26,\r\n    makeEnemyWeapon('intelligence', 18, 'ranged', 'magic', [\r\n      createSkill('Curse', 2, -10, {\r\n        perfectStatus: [\r\n          getRandom<tStatusType>([\r\n            'cursed-agility',\r\n            'cursed-charisma',\r\n            'cursed-dexterity',\r\n            'cursed-intelligence',\r\n            'cursed-luck',\r\n            'cursed-strength',\r\n          ]),\r\n        ],\r\n      }),\r\n      createSkill('Smite', 4, 0),\r\n    ]),\r\n    {\r\n      intelligence: 84,\r\n      agility: getRandom([75, 76, 77, 78, 79, 80]),\r\n      evasion: 23,\r\n      resistance: 6,\r\n    },\r\n    ['undead'],\r\n    [\r\n      makeEnemyReward(50, 20),\r\n      makeEnemyReward(50, 20),\r\n      makeEnemyReward(50, 40, [getRandomItem(2, 2)]),\r\n      makeEnemyReward(50, 50, [getRandomItem(3, 3)]),\r\n    ],\r\n    ['stunned', 'bleeding', 'poisoned'],\r\n  )\r\n","import { FOREST_GOLEM } from '../../../Character/elites/forest_golem'\r\nimport {\r\n  CULTIST,\r\n  CULTIST_BRUTE,\r\n  FOREST_BEAST,\r\n  FOREST_BOAR,\r\n  FOREST_RAVEN,\r\n  FOREST_SNAKE,\r\n  FOREST_TROLL,\r\n  FOREST_WITCH,\r\n  FOREST_WOLF,\r\n} from '../../../Character/enemies'\r\nimport { INFECTED_BITER } from '../../../Character/enemies/infected_biter'\r\nimport { INFECTED_EYESTALK } from '../../../Character/enemies/infected_eyestalk'\r\nimport { INFECTED_LEACH } from '../../../Character/enemies/infected_leech'\r\nimport { TOMB_SPIRIT } from '../../../Character/enemies/tomb_spirit'\r\nimport { tFloorEncounterSizes, tFloorEnemyConfig } from '../util'\r\n\r\nexport const Floor1EnemyConfigs: tFloorEnemyConfig[] = [\r\n  {\r\n    enemy: FOREST_WOLF,\r\n    depths: [0, 1, 2],\r\n  },\r\n  {\r\n    enemy: FOREST_BEAST,\r\n    depths: [0, 1, 2, 3],\r\n  },\r\n  {\r\n    enemy: FOREST_SNAKE,\r\n    depths: [0, 1, 2, 3, 4],\r\n  },\r\n  {\r\n    enemy: FOREST_WITCH,\r\n    depths: [1, 2, 3, 4, 5, 6, 7],\r\n  },\r\n  {\r\n    enemy: FOREST_RAVEN,\r\n    depths: [2, 3, 4, 5, 6],\r\n  },\r\n  {\r\n    enemy: FOREST_TROLL,\r\n    depths: [3, 4, 5, 6, 7],\r\n  },\r\n  {\r\n    enemy: FOREST_BOAR,\r\n    depths: [4, 5, 6, 7],\r\n  },\r\n  {\r\n    enemy: CULTIST,\r\n    depths: [3, 4, 5, 6, 7],\r\n  },\r\n  {\r\n    enemy: CULTIST_BRUTE,\r\n    depths: [4, 5, 6, 7],\r\n  },\r\n  {\r\n    enemy: TOMB_SPIRIT,\r\n    depths: [8, 9],\r\n  },\r\n]\r\n\r\nexport const Floor1AltEnemyConfigs: tFloorEnemyConfig[] = [\r\n  {\r\n    enemy: FOREST_WOLF,\r\n    depths: [0, 1, 2],\r\n  },\r\n  {\r\n    enemy: FOREST_BEAST,\r\n    depths: [0, 1, 2, 3],\r\n  },\r\n  {\r\n    enemy: INFECTED_BITER,\r\n    depths: [0, 1, 2, 3, 4, 5, 6],\r\n  },\r\n  {\r\n    enemy: FOREST_WITCH,\r\n    depths: [1, 2, 3, 4, 5, 6, 7],\r\n  },\r\n  {\r\n    enemy: INFECTED_LEACH,\r\n    depths: [2, 3, 4, 5, 6, 7],\r\n  },\r\n  {\r\n    enemy: FOREST_TROLL,\r\n    depths: [3, 4, 5, 6, 7],\r\n  },\r\n  {\r\n    enemy: FOREST_BOAR,\r\n    depths: [4, 5, 6, 7],\r\n  },\r\n  {\r\n    enemy: CULTIST,\r\n    depths: [3, 4, 5, 6, 7],\r\n  },\r\n  {\r\n    enemy: CULTIST_BRUTE,\r\n    depths: [4, 5, 6, 7],\r\n  },\r\n  {\r\n    enemy: INFECTED_EYESTALK,\r\n    depths: [8, 9],\r\n  },\r\n]\r\n\r\nexport const Floor1EliteEnemyConfigs: tFloorEnemyConfig[] = [\r\n  {\r\n    enemy: FOREST_GOLEM,\r\n    depths: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n  },\r\n]\r\n\r\nexport const Floor1EncounterSizes: tFloorEncounterSizes = {\r\n  0: 1,\r\n  1: 2,\r\n  2: 3,\r\n  3: 3,\r\n  4: 3,\r\n  5: 3,\r\n  6: 3,\r\n  7: 3,\r\n  8: 2,\r\n  9: 2,\r\n}\r\n\r\nexport const Floor1EliteEncounterSizes: tFloorEncounterSizes = {\r\n  0: 1,\r\n  1: 2,\r\n  2: 2,\r\n  3: 2,\r\n  4: 2,\r\n  5: 2,\r\n  6: 2,\r\n  7: 3,\r\n  8: 3,\r\n  9: 3,\r\n}\r\n","import Bee from '../../../icons/svg/lorc/snake.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_SNAKE = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Snake',\r\n    Bee,\r\n    1,\r\n    6,\r\n    makeEnemyWeapon('dexterity', 12, 'melee', 'physical', [\r\n      createSkill('Bite', 3, 0),\r\n      createSkill('Venomous Bite', 3, -10, { perfectStatus: ['poisoned'] }),\r\n    ]),\r\n    {\r\n      dexterity: 52,\r\n      agility: getRandom([78, 79, 80, 81, 82, 83]),\r\n      evasion: 17,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(5, 4),\r\n      makeEnemyReward(5, 8, [getRandomItem(0)]),\r\n      makeEnemyReward(5, 10, [getRandomItem(1)]),\r\n    ],\r\n  )\r\n}\r\n","import Raven from '../../../icons/svg/lorc/raven.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_RAVEN = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Raven',\r\n    Raven,\r\n    1,\r\n    10,\r\n    makeEnemyWeapon('dexterity', 6, 'melee', 'physical', [\r\n      createSkill('Peck', 2, 0),\r\n      createSkill('Caw', 2, -5, {\r\n        perfectStatus: ['resistance-down', 'armor-down'],\r\n      }),\r\n    ]),\r\n    {\r\n      dexterity: 56,\r\n      agility: getRandom([74, 75, 76, 77, 78]),\r\n      evasion: 10,\r\n    },\r\n    ['flying'],\r\n    [\r\n      makeEnemyReward(4, 5),\r\n      makeEnemyReward(5, 5, [getRandomItem(0)]),\r\n      makeEnemyReward(7, 7, [getRandomItem(1)]),\r\n    ],\r\n    [],\r\n    [\r\n      {\r\n        duration: -1,\r\n        type: 'evasive',\r\n        stats: ZERO_STATS,\r\n        stack: 0,\r\n        immunities: [],\r\n      },\r\n    ],\r\n  )\r\n}\r\n","import Icon from '../../../icons/svg/delapouite/carnivorous-plant.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const INFECTED_BITER = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Infected Biter',\r\n    Icon,\r\n    1,\r\n    19,\r\n    makeEnemyWeapon('strength', 15, 'melee', 'physical', [\r\n      createSkill('Bite', 3, 0),\r\n      createSkill('Poison Breath', 4, -10, {\r\n        targetType: 'group',\r\n        damage: false,\r\n        damageModifier: 0,\r\n        perfectStatus: ['poisoned'],\r\n      }),\r\n    ]),\r\n    {\r\n      strength: 60,\r\n      agility: getRandom([73, 74, 75, 76]),\r\n      evasion: 7,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(8, 8),\r\n      makeEnemyReward(8, 9, [getRandomItem(1)]),\r\n      makeEnemyReward(8, 10, [getRandomItem(1)]),\r\n    ],\r\n  )\r\n}\r\n","import Icon from '../../../icons/svg/lorc/leeching-worm.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const INFECTED_LEACH = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Infected Leech',\r\n    Icon,\r\n    1,\r\n    14,\r\n    makeEnemyWeapon('dexterity', 6, 'melee', 'physical', [\r\n      createSkill('Latch', 2, 0),\r\n      createSkill('Leech', 2, -5, {\r\n        perfectStatus: ['resistance-down', 'armor-down'],\r\n      }),\r\n    ]),\r\n    {\r\n      dexterity: 60,\r\n      agility: getRandom([74, 75, 76, 77, 78]),\r\n      evasion: 10,\r\n    },\r\n    ['flying'],\r\n    [\r\n      makeEnemyReward(4, 5),\r\n      makeEnemyReward(5, 5, [getRandomItem(0)]),\r\n      makeEnemyReward(7, 7, [getRandomItem(1)]),\r\n    ],\r\n    [],\r\n    [\r\n      {\r\n        duration: -1,\r\n        type: 'evasive',\r\n        stats: ZERO_STATS,\r\n        stack: 0,\r\n        immunities: [],\r\n      },\r\n    ],\r\n  )\r\n}\r\n","import {\r\n  makeEnemy,\r\n  makeEnemyReward,\r\n  makeEnemyWeapon,\r\n} from '../enemies/_builder'\r\nimport Golem from '../../../icons/svg/delapouite/golem-head.svg'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { GODSBEARD } from '../../Consumable/objects/godsbeard'\r\n\r\nexport const FOREST_GOLEM = () =>\r\n  makeEnemy(\r\n    'Forest Golem',\r\n    Golem,\r\n    4,\r\n    44,\r\n    makeEnemyWeapon('strength', 18, 'melee', 'magic', [\r\n      createSkill('Smash', 5, 0),\r\n      createSkill('Quake', 5, -10, {\r\n        damageModifier: 0.6,\r\n        targetType: 'group',\r\n        perfectStatus: ['stunned'],\r\n      }),\r\n    ]),\r\n    {\r\n      strength: 70,\r\n      agility: getRandom([65, 66, 67, 68, 69, 70]),\r\n      evasion: 7,\r\n      armor: 2,\r\n      resistance: 0,\r\n    },\r\n    [],\r\n    [makeEnemyReward(100, 30, [getRandomItem(3, 2), GODSBEARD()])],\r\n    ['bleeding', 'poisoned'],\r\n  )\r\n","import {\r\n  makeEnemy,\r\n  makeEnemyReward,\r\n  makeEnemyWeapon,\r\n} from '../enemies/_builder'\r\nimport Mimic from '../../../icons/svg/delapouite/mimic-chest.svg'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\n\r\nexport const MIMIC_FLOOR_1 = () =>\r\n  makeEnemy(\r\n    'Mimic',\r\n    Mimic,\r\n    4,\r\n    60,\r\n    makeEnemyWeapon('strength', 24, 'melee', 'magic', [\r\n      createSkill('Bite', 5, 0),\r\n    ]),\r\n    {\r\n      strength: 40,\r\n      agility: getRandom([65, 66, 67, 68, 69, 70]),\r\n      evasion: 7,\r\n      armor: 4,\r\n      resistance: 4,\r\n    },\r\n    [],\r\n    [makeEnemyReward(100, 20, [getRandomItem(3, 2)])],\r\n    ['bleeding', 'poisoned'],\r\n  )\r\n","import { tFloorConfig } from '../../type'\r\nimport { LICH, FOREST_MIND } from '../../../Character/bosses'\r\nimport { WEAPONS_BY_LEVEL } from '../../../Weapon/builders/objects'\r\nimport { ARMOR_BY_LEVEL } from '../../../Armor/builders/sets'\r\nimport { buildFloorEnemeis } from '../util'\r\nimport {\r\n  Floor1AltEnemyConfigs,\r\n  Floor1EliteEncounterSizes,\r\n  Floor1EliteEnemyConfigs,\r\n  Floor1EncounterSizes,\r\n  Floor1EnemyConfigs,\r\n} from './floor-1-config'\r\nimport { MIMIC_FLOOR_1 } from '../../../Character/elites/mimic_floor_1'\r\nimport { v4 } from 'uuid'\r\n\r\nconst FLOOR_1_WEAPONS = () => [\r\n  ...WEAPONS_BY_LEVEL[1],\r\n  ...WEAPONS_BY_LEVEL[2],\r\n  ...WEAPONS_BY_LEVEL[3],\r\n]\r\n\r\nconst FLOOR_1_ARMOR = () => [\r\n  ...ARMOR_BY_LEVEL[0],\r\n  ...ARMOR_BY_LEVEL[1],\r\n  ...ARMOR_BY_LEVEL[2],\r\n]\r\n\r\nexport const FLOOR_1_ID = v4()\r\nexport const FloorConfig1 = (size: number): tFloorConfig => ({\r\n  floorId: FLOOR_1_ID,\r\n  bosses: [LICH()],\r\n  altBosses: [FOREST_MIND()],\r\n  items: [\r\n    ...FLOOR_1_WEAPONS().map((w) => w()),\r\n    ...FLOOR_1_ARMOR().map((a) => a()),\r\n  ],\r\n  mimic: MIMIC_FLOOR_1,\r\n\r\n  eliteEnemies: buildFloorEnemeis(\r\n    Floor1EliteEnemyConfigs,\r\n    Floor1EliteEncounterSizes,\r\n    size,\r\n  ),\r\n  enemies: buildFloorEnemeis(Floor1EnemyConfigs, Floor1EncounterSizes, size),\r\n  altEnemies: buildFloorEnemeis(\r\n    Floor1AltEnemyConfigs,\r\n    Floor1EncounterSizes,\r\n    size,\r\n  ),\r\n})\r\n","import Beast from '../../../icons/svg/lorc/diablo-skull.svg'\r\nimport { tCharacter } from '../type'\r\nimport {\r\n  makeEnemy,\r\n  makeEnemyReward,\r\n  makeEnemyWeapon,\r\n} from '../enemies/_builder'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const CONSECRATED_BEAST_ID = v4()\r\nexport const CONSECRATED_BEAST = (): tCharacter => {\r\n  return {\r\n    ...makeEnemy(\r\n      'The Consecrated Beast',\r\n      Beast,\r\n      8,\r\n      112,\r\n      makeEnemyWeapon('strength', 38, 'melee', 'physical', [\r\n        createSkill('Swipe', 4, -5, {\r\n          perfectPierce: true,\r\n        }),\r\n        createSkill('Wide Swipe', 5, 0, {\r\n          damageModifier: 0.75,\r\n          targetType: 'group',\r\n          perfectStatus: ['bleeding'],\r\n        }),\r\n        createSkill('Howl', 4, -15, {\r\n          damageModifier: 0,\r\n          damage: false,\r\n          targetType: 'group',\r\n          perfectStatus: ['stunned'],\r\n        }),\r\n      ]),\r\n      {\r\n        strength: 85,\r\n        agility: 80,\r\n        luck: 50,\r\n        armor: 12,\r\n        resistance: 12,\r\n        evasion: 10,\r\n      },\r\n      ['undead'],\r\n      [\r\n        makeEnemyReward(200, 120, [\r\n          getRandomItem(5, 5),\r\n          getRandomItem(5, 5),\r\n          getRandomItem(5, 5),\r\n        ]),\r\n      ],\r\n      ['stunned', 'poisoned'],\r\n    ),\r\n    id: CONSECRATED_BEAST_ID,\r\n  }\r\n}\r\n","import {\r\n  makeEnemy,\r\n  makeEnemyReward,\r\n  makeEnemyWeapon,\r\n} from '../enemies/_builder'\r\nimport Mimic from '../../../icons/svg/delapouite/mimic-chest.svg'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\n\r\nexport const MIMIC_FLOOR_2 = () =>\r\n  makeEnemy(\r\n    'Mimic',\r\n    Mimic,\r\n    4,\r\n    100,\r\n    makeEnemyWeapon('strength', 38, 'melee', 'physical', [\r\n      createSkill('Bite', 5, 0),\r\n    ]),\r\n    {\r\n      strength: 40,\r\n      agility: getRandom([65, 66, 67, 68, 69, 70]),\r\n      evasion: 7,\r\n      armor: 6,\r\n      resistance: 6,\r\n    },\r\n    [],\r\n    [makeEnemyReward(200, 200, [getRandomItem(4, 4)])],\r\n    ['bleeding', 'poisoned'],\r\n  )\r\n","import { getRandom } from '../../../util'\r\nimport Skull from '../../../icons/svg/lorc/harry-potter-skull.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const TOMB_GUARDIAN = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Tomb Guardian',\r\n    Skull,\r\n    5,\r\n    36,\r\n    makeEnemyWeapon('strength', 28, 'melee', 'physical', [\r\n      createSkill('Smash', 4, 0),\r\n      createSkill('Stun', 3, -5, {\r\n        damage: false,\r\n        damageModifier: 0,\r\n        perfectStatus: ['stunned'],\r\n      }),\r\n      createSkill('Quake', 4, -15, {\r\n        damageModifier: 0.5,\r\n        targetType: 'group',\r\n        perfectStatus: ['stunned'],\r\n      }),\r\n    ]),\r\n    {\r\n      strength: 78,\r\n      agility: getRandom([59, 60, 61, 62, 63, 64]),\r\n      armor: 10,\r\n      resistance: 3,\r\n      evasion: 10,\r\n    },\r\n    ['undead'],\r\n    [\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(80, 40, [getRandomItem(3, 3)]),\r\n      makeEnemyReward(100, 50, [getRandomItem(4, 3)]),\r\n    ],\r\n  )\r\n}\r\n","import { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport Spider from '../../../icons/svg/delapouite/spider-eye.svg'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\n\r\nexport const TOMB_SPIDER = () =>\r\n  makeEnemy(\r\n    'Tomb Spider',\r\n    Spider,\r\n    4,\r\n    22,\r\n    makeEnemyWeapon('dexterity', 26, 'ranged', 'magic', [\r\n      createSkill('Bite', 3, 0),\r\n      createSkill('Venomous Bite', 3, -10, { perfectStatus: ['poisoned'] }),\r\n      createSkill('Blood Bite', 3, -5, { perfectStatus: ['bleeding'] }),\r\n    ]),\r\n    {\r\n      dexterity: 75,\r\n      agility: getRandom([70, 71, 72, 73, 74, 75]),\r\n      evasion: 20,\r\n      resistance: 5,\r\n      armor: 4,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(80, 40, [getRandomItem(3, 3)]),\r\n      makeEnemyReward(100, 50, [getRandomItem(4, 3)]),\r\n    ],\r\n    ['poisoned'],\r\n  )\r\n","import { LICH } from '../../../Character/bosses'\r\nimport { FOREST_GOLEM } from '../../../Character/elites/forest_golem'\r\nimport {\r\n  BANSHEE,\r\n  CONSECRATED_GUARD,\r\n  CULTIST_SCHOLAR,\r\n  FLAME_WISP,\r\n} from '../../../Character/enemies'\r\nimport { TOMB_GUARDIAN } from '../../../Character/enemies/tomb_guardian'\r\nimport { TOMB_SPIDER } from '../../../Character/enemies/tomb_spider'\r\nimport { TOMB_SPIRIT } from '../../../Character/enemies/tomb_spirit'\r\nimport { tFloorEncounterSizes, tFloorEnemyConfig } from '../util'\r\n\r\nexport const Floor2AEnemyConfigs = (): tFloorEnemyConfig[] => [\r\n  {\r\n    enemy: TOMB_SPIRIT,\r\n    depths: [0, 1, 2, 3, 4],\r\n  },\r\n  {\r\n    enemy: TOMB_SPIDER,\r\n    depths: [0, 1, 2, 3, 4],\r\n  },\r\n  {\r\n    enemy: CULTIST_SCHOLAR,\r\n    depths: [1, 2, 3, 4, 5, 6, 7],\r\n  },\r\n  {\r\n    enemy: FLAME_WISP,\r\n    depths: [2, 3, 4, 5, 6, 7],\r\n  },\r\n  {\r\n    enemy: TOMB_GUARDIAN,\r\n    depths: [3, 4, 5, 6, 7],\r\n  },\r\n  {\r\n    enemy: BANSHEE,\r\n    depths: [5, 6, 7],\r\n  },\r\n  {\r\n    enemy: CONSECRATED_GUARD,\r\n    depths: [8, 9],\r\n  },\r\n]\r\n\r\nexport const Floor2AAltEnemyConfigs = (): tFloorEnemyConfig[] => []\r\n\r\nexport const Floor2AEliteEnemyConfigs = (): tFloorEnemyConfig[] => [\r\n  {\r\n    enemy: LICH,\r\n    depths: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n  },\r\n]\r\n\r\nexport const Floor2AEncounterSizes: tFloorEncounterSizes = {\r\n  0: 3,\r\n  1: 3,\r\n  2: 3,\r\n  3: 3,\r\n  4: 3,\r\n  5: 3,\r\n  6: 3,\r\n  7: 3,\r\n  8: 2,\r\n  9: 2,\r\n}\r\n\r\nexport const Floor2AEliteEncounterSizes: tFloorEncounterSizes = {\r\n  0: 2,\r\n  1: 2,\r\n  2: 2,\r\n  3: 2,\r\n  4: 2,\r\n  5: 2,\r\n  6: 2,\r\n  7: 3,\r\n  8: 3,\r\n  9: 3,\r\n}\r\n","import { ARMOR_BY_LEVEL } from '../../../Armor/builders/sets'\r\nimport { CONSECRATED_BEAST } from '../../../Character/bosses/consecrated_beast'\r\nimport { WEAPONS_BY_LEVEL } from '../../../Weapon/builders/objects'\r\nimport { MIMIC_FLOOR_2 } from '../../../Character/elites/mimic_floor_2'\r\nimport { tFloorConfig } from '../../type'\r\nimport { buildFloorEnemeis } from '../util'\r\nimport {\r\n  Floor2AEnemyConfigs,\r\n  Floor2AEncounterSizes,\r\n  Floor2AEliteEnemyConfigs,\r\n  Floor2AEliteEncounterSizes,\r\n} from './floor-2a-config'\r\nimport { v4 } from 'uuid'\r\n\r\nconst FLOOR_2_WEAPONS = () => [\r\n  ...WEAPONS_BY_LEVEL[3],\r\n  ...WEAPONS_BY_LEVEL[4],\r\n  ...WEAPONS_BY_LEVEL[5],\r\n]\r\n\r\nconst FLOOR_2_ARMOR = () => [...ARMOR_BY_LEVEL[3], ...ARMOR_BY_LEVEL[4]]\r\n\r\nexport const FLOOR_2A_ID = v4()\r\nexport const FloorConfig2A = (size: number): tFloorConfig => ({\r\n  floorId: FLOOR_2A_ID,\r\n  bosses: [CONSECRATED_BEAST()],\r\n  altBosses: [CONSECRATED_BEAST()],\r\n  items: [\r\n    ...FLOOR_2_WEAPONS().map((w) => w()),\r\n    ...FLOOR_2_ARMOR().map((w) => w()),\r\n  ],\r\n  mimic: MIMIC_FLOOR_2,\r\n  altEnemies: buildFloorEnemeis(\r\n    Floor2AEnemyConfigs(),\r\n    Floor2AEncounterSizes,\r\n    size,\r\n  ),\r\n  eliteEnemies: buildFloorEnemeis(\r\n    Floor2AEliteEnemyConfigs(),\r\n    Floor2AEliteEncounterSizes,\r\n    size,\r\n  ),\r\n  enemies: buildFloorEnemeis(\r\n    Floor2AEnemyConfigs(),\r\n    Floor2AEncounterSizes,\r\n    size,\r\n  ),\r\n})\r\n","import { LICH } from '../../Character/bosses'\r\nimport { CONSECRATED_BEAST } from '../../Character/bosses/consecrated_beast'\r\nimport { CONSECRATED_GUARD } from '../../Character/enemies'\r\nimport { WEAPONS_BY_LEVEL } from '../../Weapon/builders/objects'\r\nimport { tFloorConfig } from '../type'\r\nimport { MIMIC_FLOOR_1 } from '../../Character/elites/mimic_floor_1'\r\nimport { makeRandomFloorEncounter } from './util'\r\nimport { v4 } from 'uuid'\r\n\r\nconst FLOOR_3_WEAPONS = () => [\r\n  ...WEAPONS_BY_LEVEL[3],\r\n  ...WEAPONS_BY_LEVEL[4],\r\n  ...WEAPONS_BY_LEVEL[5],\r\n]\r\n\r\nexport const FLOOR_3A_ID = v4()\r\nexport const FloorConfig3 = (): tFloorConfig => ({\r\n  floorId: FLOOR_3A_ID,\r\n  bosses: [],\r\n  altBosses: [],\r\n  items: [...FLOOR_3_WEAPONS().map((w) => w())],\r\n  mimic: MIMIC_FLOOR_1,\r\n  altEnemies: {},\r\n  eliteEnemies: {},\r\n  enemies: {\r\n    0: [[CONSECRATED_GUARD(), CONSECRATED_GUARD(), CONSECRATED_GUARD()]],\r\n    1: [makeRandomFloorEncounter([CONSECRATED_GUARD, LICH], 3)],\r\n  },\r\n})\r\n","import { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport Icon from '../../../icons/svg/delapouite/fairy.svg'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const FOREST_FAIRY = () =>\r\n  makeEnemy(\r\n    'Dark Forest Faerie',\r\n    Icon,\r\n    4,\r\n    20,\r\n    makeEnemyWeapon('intelligence', 28, 'ranged', 'magic', [\r\n      createSkill('Faerie Charm', 2, -5, {\r\n        damage: false,\r\n        damageModifier: 0,\r\n        perfectStatus: ['attack-down'],\r\n      }),\r\n      createSkill('Blast', 3, 0),\r\n      createSkill('Stun', 3, -10, {\r\n        damage: false,\r\n        damageModifier: 0,\r\n        perfectStatus: ['stunned'],\r\n        targetType: 'group',\r\n      }),\r\n    ]),\r\n    {\r\n      intelligence: 75,\r\n      agility: getRandom([75, 76, 77, 78, 79, 80]),\r\n      evasion: 20,\r\n      resistance: 9,\r\n      armor: 4,\r\n    },\r\n    ['flying'],\r\n    [\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(80, 40, [getRandomItem(3, 3)]),\r\n      makeEnemyReward(100, 50, [getRandomItem(4, 3)]),\r\n    ],\r\n    ['poisoned'],\r\n    [\r\n      {\r\n        duration: -1,\r\n        type: 'evasive',\r\n        stats: ZERO_STATS,\r\n        stack: 0,\r\n        immunities: [],\r\n      },\r\n    ],\r\n  )\r\n","import { getRandom } from '../../../util'\r\nimport Icon from '../../../icons/svg/lorc/grim-reaper.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { CLASS_STATS } from '../../Stats/constants'\r\nimport { tStatusType } from '../../Status/type'\r\n\r\nexport const FOREST_REAPER = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Dark Forest Reaper',\r\n    Icon,\r\n    6,\r\n    52,\r\n    makeEnemyWeapon('dexterity', 34, 'melee', 'physical', [\r\n      createSkill('Slash', 4, 0, {\r\n        perfectStatus: ['armor-down'],\r\n        perfectPierce: true,\r\n      }),\r\n      createSkill('Slice', 2, -15, {\r\n        perfectStatus: ['bleeding'],\r\n        perfectPierce: true,\r\n      }),\r\n      createSkill('Curse', 2, -10, {\r\n        damage: false,\r\n        damageModifier: 0,\r\n        perfectStatus: [\r\n          getRandom<tStatusType>([\r\n            'cursed-agility',\r\n            'cursed-charisma',\r\n            'cursed-dexterity',\r\n            'cursed-intelligence',\r\n            'cursed-luck',\r\n            'cursed-strength',\r\n          ]),\r\n        ],\r\n      }),\r\n    ]),\r\n    {\r\n      ...CLASS_STATS.reaper,\r\n      armor: 8,\r\n      resistance: 10,\r\n      evasion: 32,\r\n    },\r\n    ['undead'],\r\n    [\r\n      makeEnemyReward(100, 40),\r\n      makeEnemyReward(180, 40, [getRandomItem(3, 3)]),\r\n      makeEnemyReward(200, 50, [getRandomItem(4, 3)]),\r\n    ],\r\n  )\r\n}\r\n","import { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport Icon from '../../../icons/svg/delapouite/grasping-slug.svg'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\n\r\nexport const FOREST_SLIME = () =>\r\n  makeEnemy(\r\n    'Dark Forest Slime',\r\n    Icon,\r\n    4,\r\n    22,\r\n    makeEnemyWeapon('strength', 28, 'ranged', 'magic', [\r\n      createSkill('Toxic', 3, -10, { perfectStatus: ['poisoned'] }),\r\n      createSkill('Poison Mist', 4, -10, {\r\n        perfectStatus: ['poisoned'],\r\n        damageModifier: 0.2,\r\n        targetType: 'group',\r\n      }),\r\n      createSkill('Slime Smash', 5, -5, {\r\n        damageModifier: 1.4,\r\n        splashDamageModifier: 0.4,\r\n      }),\r\n    ]),\r\n    {\r\n      strength: 75,\r\n      agility: getRandom([60, 61, 62, 63, 64, 65]),\r\n      evasion: 20,\r\n      resistance: 5,\r\n      armor: 6,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(80, 40, [getRandomItem(3, 3)]),\r\n      makeEnemyReward(100, 50, [getRandomItem(4, 3)]),\r\n    ],\r\n    ['poisoned', 'bleeding'],\r\n  )\r\n","import { getRandom } from '../../../util'\r\nimport Icon from '../../../icons/svg/delapouite/shambling-mound.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const INFECTED_GOLEM = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Infected Golem',\r\n    Icon,\r\n    6,\r\n    53,\r\n    makeEnemyWeapon('strength', 28, 'melee', 'physical', [\r\n      createSkill('Smash', 5, 0),\r\n      createSkill('Quake', 5, -15, {\r\n        damageModifier: 0.6,\r\n        targetType: 'group',\r\n        perfectStatus: ['stunned'],\r\n      }),\r\n    ]),\r\n    {\r\n      strength: 80,\r\n      agility: getRandom([58, 59, 60, 61]),\r\n      armor: 0,\r\n      resistance: 0,\r\n      evasion: 3,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(70, 40),\r\n      makeEnemyReward(70, 40),\r\n      makeEnemyReward(90, 50, [getRandomItem(4, 3)]),\r\n    ],\r\n  )\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Icon from '../../../icons/svg/lorc/infested-mass.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const INFECTED_MASS = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Infected Mass',\r\n    Icon,\r\n    5,\r\n    36,\r\n    makeEnemyWeapon('strength', 28, 'melee', 'physical', [\r\n      createSkill('Smash', 4, 0),\r\n      createSkill('Poison Mist', 3, -5, {\r\n        damageModifier: 0.2,\r\n        perfectStatus: ['poisoned'],\r\n      }),\r\n      createSkill('Stunning Mist', 4, -15, {\r\n        damageModifier: 0.5,\r\n        targetType: 'group',\r\n        perfectStatus: ['stunned'],\r\n      }),\r\n    ]),\r\n    {\r\n      strength: 78,\r\n      agility: getRandom([59, 60, 61, 62, 63, 64]),\r\n      armor: 8,\r\n      resistance: 8,\r\n      evasion: 5,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(80, 40, [getRandomItem(3, 3)]),\r\n      makeEnemyReward(100, 50, [getRandomItem(4, 3)]),\r\n    ],\r\n    ['poisoned'],\r\n  )\r\n}\r\n","import { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport Icon from '../../../icons/svg/lorc/imp.svg'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\n\r\nexport const LIGHTNING_IMP = () =>\r\n  makeEnemy(\r\n    'Lightning Imp',\r\n    Icon,\r\n    4,\r\n    25,\r\n    makeEnemyWeapon('dexterity', 28, 'ranged', 'magic', [\r\n      createSkill('Shock', 3, -5, {\r\n        perfectStatus: ['shocked'],\r\n      }),\r\n      createSkill('Claw Swipe', 3, 0),\r\n    ]),\r\n    {\r\n      dexterity: 75,\r\n      agility: getRandom([75, 76, 77, 78, 79, 80]),\r\n      evasion: 37,\r\n      resistance: 6,\r\n      armor: 6,\r\n    },\r\n    ['flying'],\r\n    [\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(80, 40, [getRandomItem(3, 3)]),\r\n      makeEnemyReward(100, 50, [getRandomItem(4, 3)]),\r\n    ],\r\n  )\r\n","import { useEffect, useMemo } from 'react'\r\nimport { LICH } from '../../../Character/bosses'\r\nimport { FOREST_FAIRY } from '../../../Character/enemies/forest_fairy'\r\nimport { FOREST_REAPER } from '../../../Character/enemies/forest_reaper'\r\nimport { FOREST_SLIME } from '../../../Character/enemies/forest_slime'\r\nimport { INFECTED_EYESTALK } from '../../../Character/enemies/infected_eyestalk'\r\nimport { INFECTED_GOLEM } from '../../../Character/enemies/infected_golem'\r\nimport { INFECTED_MASS } from '../../../Character/enemies/infected_mass'\r\nimport { LIGHTNING_IMP } from '../../../Character/enemies/lightning_imp'\r\nimport { tFloorEncounterSizes, tFloorEnemyConfig } from '../util'\r\n\r\nexport const Floor2BEnemyConfigs = (): tFloorEnemyConfig[] => [\r\n  {\r\n    enemy: INFECTED_EYESTALK,\r\n    depths: [0, 1, 2, 3, 4, 5],\r\n  },\r\n  {\r\n    enemy: FOREST_SLIME,\r\n    depths: [0, 1, 2, 3, 4, 5, 6],\r\n  },\r\n  {\r\n    enemy: INFECTED_MASS,\r\n    depths: [2, 3, 4, 5, 6, 7],\r\n  },\r\n  {\r\n    enemy: INFECTED_GOLEM,\r\n    depths: [4, 5, 6, 7],\r\n  },\r\n  {\r\n    enemy: FOREST_FAIRY,\r\n    depths: [0, 1, 2, 3, 4, 5, 6],\r\n  },\r\n  {\r\n    enemy: LIGHTNING_IMP,\r\n    depths: [2, 3, 4, 5, 6, 7],\r\n  },\r\n  {\r\n    enemy: FOREST_REAPER,\r\n    depths: [8, 9],\r\n  },\r\n]\r\n\r\nexport const Floor2BAltEnemyConfigs = (): tFloorEnemyConfig[] => [\r\n  {\r\n    enemy: INFECTED_EYESTALK,\r\n    depths: [0, 1, 2, 3, 4, 5],\r\n  },\r\n  {\r\n    enemy: FOREST_SLIME,\r\n    depths: [0, 1, 2, 3, 4, 5, 6],\r\n  },\r\n  {\r\n    enemy: INFECTED_MASS,\r\n    depths: [2, 3, 4, 5, 6, 7],\r\n  },\r\n  {\r\n    enemy: INFECTED_GOLEM,\r\n    depths: [4, 5, 6, 7],\r\n  },\r\n  {\r\n    enemy: FOREST_FAIRY,\r\n    depths: [0, 1, 2, 3, 4, 5, 6],\r\n  },\r\n  {\r\n    enemy: LIGHTNING_IMP,\r\n    depths: [2, 3, 4, 5, 6, 7],\r\n  },\r\n  {\r\n    enemy: FOREST_REAPER,\r\n    depths: [8, 9],\r\n  },\r\n]\r\n\r\nexport const Floor2BEliteEnemyConfigs = (): tFloorEnemyConfig[] => [\r\n  {\r\n    enemy: LICH,\r\n    depths: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n  },\r\n]\r\n\r\nexport const Floor2BEncounterSizes: tFloorEncounterSizes = {\r\n  0: 3,\r\n  1: 3,\r\n  2: 3,\r\n  3: 3,\r\n  4: 3,\r\n  5: 3,\r\n  6: 3,\r\n  7: 3,\r\n  8: 2,\r\n  9: 2,\r\n}\r\n\r\nexport const Floor2BEliteEncounterSizes: tFloorEncounterSizes = {\r\n  0: 2,\r\n  1: 2,\r\n  2: 2,\r\n  3: 2,\r\n  4: 2,\r\n  5: 2,\r\n  6: 2,\r\n  7: 3,\r\n  8: 3,\r\n  9: 3,\r\n}\r\n","import Icon from '../../../icons/svg/lorc/behold.svg'\r\nimport { tCharacter } from '../type'\r\nimport {\r\n  makeEnemy,\r\n  makeEnemyReward,\r\n  makeEnemyWeapon,\r\n} from '../enemies/_builder'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const BEHOLD_ID = v4()\r\nexport const BEHOLD = (): tCharacter => {\r\n  return {\r\n    ...makeEnemy(\r\n      'Behold',\r\n      Icon,\r\n      9,\r\n      131,\r\n      makeEnemyWeapon('intelligence', 40, 'melee', 'physical', [\r\n        createSkill('Arcane', 4, -5, {\r\n          perfectPierce: true,\r\n        }),\r\n        createSkill('Blood Nova', 5, 0, {\r\n          damageModifier: 0.75,\r\n          targetType: 'group',\r\n          perfectStatus: ['bleeding'],\r\n        }),\r\n        createSkill('Posess', 4, -15, {\r\n          damageModifier: 0,\r\n          damage: false,\r\n          targetType: 'group',\r\n          perfectStatus: ['stunned'],\r\n        }),\r\n      ]),\r\n      {\r\n        intelligence: 85,\r\n        agility: 85,\r\n        armor: 12,\r\n        resistance: 18,\r\n        evasion: 16,\r\n      },\r\n      ['undead'],\r\n      [\r\n        makeEnemyReward(200, 120, [\r\n          getRandomItem(5, 5),\r\n          getRandomItem(5, 5),\r\n          getRandomItem(5, 5),\r\n        ]),\r\n      ],\r\n      ['stunned', 'poisoned', 'bleeding'],\r\n    ),\r\n    id: BEHOLD_ID,\r\n  }\r\n}\r\n","import { ARMOR_BY_LEVEL } from '../../../Armor/builders/sets'\r\nimport { WEAPONS_BY_LEVEL } from '../../../Weapon/builders/objects'\r\nimport { MIMIC_FLOOR_2 } from '../../../Character/elites/mimic_floor_2'\r\nimport { tFloorConfig } from '../../type'\r\nimport { buildFloorEnemeis } from '../util'\r\nimport {\r\n  Floor2BEnemyConfigs,\r\n  Floor2BEncounterSizes,\r\n  Floor2BEliteEnemyConfigs,\r\n  Floor2BEliteEncounterSizes,\r\n  Floor2BAltEnemyConfigs,\r\n} from './floor-2b-config'\r\nimport { v4 } from 'uuid'\r\nimport { BEHOLD } from '../../../Character/bosses/behold'\r\n\r\nconst FLOOR_2_WEAPONS = () => [\r\n  ...WEAPONS_BY_LEVEL[3],\r\n  ...WEAPONS_BY_LEVEL[4],\r\n  ...WEAPONS_BY_LEVEL[5],\r\n]\r\n\r\nconst FLOOR_2_ARMOR = () => [...ARMOR_BY_LEVEL[3], ...ARMOR_BY_LEVEL[4]]\r\n\r\nexport const FLOOR_2B_ID = v4()\r\nexport const FloorConfig2B = (size: number): tFloorConfig => ({\r\n  floorId: FLOOR_2B_ID,\r\n  bosses: [BEHOLD()],\r\n  altBosses: [BEHOLD()],\r\n  items: [\r\n    ...FLOOR_2_WEAPONS().map((w) => w()),\r\n    ...FLOOR_2_ARMOR().map((w) => w()),\r\n  ],\r\n  mimic: MIMIC_FLOOR_2,\r\n  altEnemies: buildFloorEnemeis(\r\n    Floor2BAltEnemyConfigs(),\r\n    Floor2BEncounterSizes,\r\n    size,\r\n  ),\r\n  eliteEnemies: buildFloorEnemeis(\r\n    Floor2BEliteEnemyConfigs(),\r\n    Floor2BEliteEncounterSizes,\r\n    size,\r\n  ),\r\n  enemies: buildFloorEnemeis(\r\n    Floor2BEnemyConfigs(),\r\n    Floor2BEncounterSizes,\r\n    size,\r\n  ),\r\n})\r\n","import { tFloorConfig } from '../type'\r\nimport { FloorConfig1, FLOOR_1_ID } from './level1/floor-1'\r\nimport { FloorConfig2A, FLOOR_2A_ID } from './level2/floor-2a'\r\nimport { FloorConfig3, FLOOR_3A_ID } from './floor-3'\r\nimport {\r\n  CONSECRATED_BEAST_ID,\r\n  FOREST_MIND_ID,\r\n  LICH_ID,\r\n} from '../../Character/bosses'\r\nimport { FloorConfig2B, FLOOR_2B_ID } from './level2/floor-2b'\r\nimport { BEHOLD_ID } from '../../Character/bosses/behold'\r\n\r\nexport const FLOOR_SIZE = 10\r\nexport const FLOOR_CONFIGS_BY_ID = (): Record<string, tFloorConfig> => ({\r\n  [FLOOR_1_ID]: FloorConfig1(FLOOR_SIZE),\r\n  [FLOOR_2A_ID]: FloorConfig2A(FLOOR_SIZE),\r\n  [FLOOR_2B_ID]: FloorConfig2B(FLOOR_SIZE),\r\n  [FLOOR_3A_ID]: FloorConfig3(),\r\n})\r\n\r\nexport const FLOOR_NAMES: Record<string, string> = {\r\n  [FLOOR_1_ID]: 'The Forgotten Woods',\r\n  [FLOOR_2A_ID]: 'The Consecrated Tomb',\r\n  [FLOOR_2B_ID]: 'Forest of the Formless One',\r\n  [FLOOR_3A_ID]: 'Realm of the Ancients',\r\n}\r\n\r\nexport const BOSS_FLOOR_MAP = (): Record<string, string> => ({\r\n  [LICH_ID]: FLOOR_2A_ID,\r\n  [FOREST_MIND_ID]: FLOOR_2B_ID,\r\n  [CONSECRATED_BEAST_ID]: FLOOR_3A_ID,\r\n  [BEHOLD_ID]: FLOOR_3A_ID,\r\n})\r\n","import { tEncounterReward, tCombatEncounter, tEncounter } from './type'\r\nimport { getRandom } from '../../util'\r\nimport { stringArr } from '../../util/stringArr'\r\nimport { FLOOR_CONFIGS_BY_ID } from './floors'\r\nimport Forest1 from '../../assets/img/forests/7.png'\r\nimport Forest2 from '../../assets/img/forests/8.png'\r\nimport Forest3 from '../../assets/img/forests/1.png'\r\nimport Forest4 from '../../assets/img/forests/3.png'\r\nimport Forest5 from '../../assets/img/forests/5.png'\r\nimport Dungeon1 from '../../assets/img/dungeon/3.png'\r\nimport Dungeon2 from '../../assets/img/dungeon/1.png'\r\nimport Dungeon3 from '../../assets/img/dungeon/4.png'\r\nimport Dungeon4 from '../../assets/img/dungeon/2.png'\r\nimport { FLOOR_1_ID } from './floors/level1/floor-1'\r\nimport { FLOOR_2A_ID } from './floors/level2/floor-2a'\r\nimport { FLOOR_3A_ID } from './floors/floor-3'\r\nimport { FLOOR_2B_ID } from './floors/level2/floor-2b'\r\n\r\nexport const ZERO_REWARD: tEncounterReward = {\r\n  gold: 0,\r\n  xp: 0,\r\n  items: [],\r\n  status: [],\r\n  immunities: [],\r\n}\r\n\r\nconst poisoned: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['poisoned'],\r\n}\r\nconst burning: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['burning'],\r\n}\r\nconst bleeding: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['bleeding'],\r\n}\r\nconst armorDown: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['armor-down'],\r\n}\r\nconst resDown: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['resistance-down'],\r\n}\r\nconst attackDown: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['armor-down'],\r\n}\r\n\r\nconst armorUp: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['armor-up'],\r\n}\r\nconst attackUp: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['attack-up'],\r\n}\r\nconst resUp: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['resistance-up'],\r\n}\r\n\r\nconst justGold = (gold: number) => ({\r\n  ...ZERO_REWARD,\r\n  gold,\r\n})\r\nconst justXp = (xp: number) => ({\r\n  ...ZERO_REWARD,\r\n  xp,\r\n})\r\nconst justRandomItem = (floorId: string = FLOOR_1_ID): tEncounterReward => ({\r\n  ...ZERO_REWARD,\r\n  items: [getRandom(FLOOR_CONFIGS_BY_ID()[floorId].items)],\r\n})\r\n\r\nexport const POSSIBLE_SHINE_REWARDS = (): tEncounterReward[][] => [\r\n  [poisoned, poisoned, ZERO_REWARD, armorUp],\r\n  [bleeding, ZERO_REWARD, ZERO_REWARD, ZERO_REWARD, justGold(50)],\r\n  [burning, burning, burning, ZERO_REWARD, justXp(25)],\r\n  [poisoned, poisoned, burning, ZERO_REWARD, justRandomItem()],\r\n  [attackDown, attackDown, ZERO_REWARD, ZERO_REWARD, justXp(25)],\r\n  [attackDown, armorDown, resDown, ZERO_REWARD, justXp(10), justRandomItem()],\r\n  [poisoned, attackDown, armorDown, resDown, justRandomItem()],\r\n  [poisoned, poisoned, attackDown, ZERO_REWARD, justGold(100)],\r\n  [burning, burning, burning, burning, justGold(10), justRandomItem()],\r\n  [poisoned, poisoned, burning, bleeding, justRandomItem(), justRandomItem()],\r\n  [\r\n    burning,\r\n    ZERO_REWARD,\r\n    ZERO_REWARD,\r\n    ZERO_REWARD,\r\n    ZERO_REWARD,\r\n    justRandomItem(),\r\n  ],\r\n  [\r\n    ZERO_REWARD,\r\n    ZERO_REWARD,\r\n    ZERO_REWARD,\r\n    ZERO_REWARD,\r\n    justXp(10),\r\n    justGold(50),\r\n  ],\r\n  [bleeding, resDown, armorDown, ZERO_REWARD, resUp, attackUp],\r\n  [poisoned, ZERO_REWARD, ZERO_REWARD, attackUp],\r\n  [poisoned, ZERO_REWARD, ZERO_REWARD, armorUp],\r\n  [burning, ZERO_REWARD, ZERO_REWARD, resUp],\r\n  [attackDown, armorDown, ZERO_REWARD, armorUp],\r\n  [attackDown, resDown, ZERO_REWARD, resUp],\r\n  [poisoned, attackDown, ZERO_REWARD, attackUp],\r\n  [poisoned, burning, bleeding, resUp, attackUp],\r\n]\r\n\r\nexport const getChoiceText = (\r\n  currentEncounter: tEncounter | undefined,\r\n  previousEncounter: tEncounter | undefined,\r\n): string => {\r\n  let text = ''\r\n  if (currentEncounter === undefined) {\r\n    text =\r\n      'As your party begins their journey, you travel down an empty road. You arrive at a split path, you must make a choice on which way to proceed.'\r\n  }\r\n  if (previousEncounter?.type === 'combat') {\r\n    text = getRandom([\r\n      `After the fierce battle against the ${stringArr(\r\n        (previousEncounter as tCombatEncounter).party.characters.map(\r\n          (c) => c.name,\r\n        ),\r\n      )}, your party again arrives at a choice:`,\r\n    ])\r\n  } else if (currentEncounter) {\r\n    text =\r\n      'After a brief rest, your party continues their journey to dispel the evil. You feel it around you as your travel deeper. However, there now seem to be two options before you:'\r\n  }\r\n  return text\r\n}\r\n\r\ninterface BgConfig {\r\n  bg: string\r\n  overlay: string\r\n}\r\ninterface RootBgConfig extends BgConfig {\r\n  completed?: BgConfig\r\n}\r\nexport const getEncounterBg = (\r\n  level: number,\r\n  floorId: string,\r\n): RootBgConfig => {\r\n  return ({\r\n    [FLOOR_1_ID]: [\r\n      {\r\n        // 0\r\n        bg: Forest1,\r\n        overlay: 'transparent',\r\n        completed: {\r\n          bg: Forest1,\r\n          overlay: 'rgba(20,0,50,0.4)',\r\n        },\r\n      },\r\n      {\r\n        // 1\r\n        bg: Forest1,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 2\r\n        bg: Forest1,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 3\r\n        bg: Forest1,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 4\r\n        bg: Forest1,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 5\r\n        bg: Forest2,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 6\r\n        bg: Forest2,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 7\r\n        bg: Forest2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 8\r\n        bg: Forest2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n        completed: {\r\n          bg: Forest3,\r\n          overlay: 'rgba(20,0,50,0.5)',\r\n        },\r\n      },\r\n      {\r\n        // 9\r\n        bg: Forest3,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n        completed: {\r\n          bg: Dungeon1,\r\n          overlay: 'transparent',\r\n        },\r\n      },\r\n      {\r\n        // 10\r\n        bg: Dungeon1,\r\n        overlay: 'transparent',\r\n      },\r\n    ],\r\n    [FLOOR_2B_ID]: [\r\n      {\r\n        // 0\r\n        bg: Forest3,\r\n        overlay: 'transparent',\r\n        completed: {\r\n          bg: Forest4,\r\n          overlay: 'rgba(20,0,50,0.4)',\r\n        },\r\n      },\r\n      {\r\n        // 1\r\n        bg: Forest4,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 2\r\n        bg: Forest4,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 3\r\n        bg: Forest4,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 4\r\n        bg: Forest4,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 5\r\n        bg: Forest4,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 6\r\n        bg: Forest4,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 7\r\n        bg: Forest4,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 8\r\n        bg: Forest4,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n        completed: {\r\n          bg: Forest5,\r\n          overlay: 'rgba(20,0,50,0.5)',\r\n        },\r\n      },\r\n      {\r\n        // 9\r\n        bg: Forest5,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n        completed: {\r\n          bg: Forest5,\r\n          overlay: 'transparent',\r\n        },\r\n      },\r\n      {\r\n        // 10\r\n        bg: Forest5,\r\n        overlay: 'transparent',\r\n      },\r\n    ],\r\n    [FLOOR_2A_ID]: [\r\n      {\r\n        // 0\r\n        bg: Dungeon2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 1\r\n        bg: Dungeon2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 2\r\n        bg: Dungeon2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 3\r\n        bg: Dungeon2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 4\r\n        bg: Dungeon3,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 5\r\n        bg: Dungeon3,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 6\r\n        bg: Dungeon3,\r\n        overlay: 'rgba(20,0,50,0.6)',\r\n      },\r\n      {\r\n        // 7\r\n        bg: Dungeon3,\r\n        overlay: 'rgba(20,0,50,0.7)',\r\n      },\r\n      {\r\n        // 8\r\n        bg: Dungeon3,\r\n        overlay: 'rgba(20,0,50,0.7)',\r\n      },\r\n      {\r\n        // 9\r\n        bg: Dungeon4,\r\n        overlay: 'rgba(20,0,50,0.2)',\r\n      },\r\n      {\r\n        // 10\r\n        bg: Dungeon4,\r\n        overlay: 'rgba(20,0,50,0.3)',\r\n      },\r\n    ],\r\n    [FLOOR_3A_ID]: [\r\n      {\r\n        // 0\r\n        bg: Forest1,\r\n        overlay: 'transparent',\r\n      },\r\n    ],\r\n  }[floorId] || [])[level]\r\n}\r\n","export const Theme = {\r\n  darkBgColor: 'rgba(0,7,18,0.9)',\r\n  darkBgColorSolid: 'rgba(0,7,18,1)',\r\n  mediumBgColor: 'rgb(34,34,39)',\r\n  otherGrey: 'rgb(51,51,58)',\r\n  otherGrey2: 'rgb(72,72,80)',\r\n  badgeBgColor: 'rgba(0,7,18,0.9)',\r\n  badgeBorderColor: 'rgba(140,150,160,1)',\r\n  lightBgColor: 'rgba(255,255,255,0.4)',\r\n  textColor: 'rgba(255,255,255,0.8)',\r\n  physicalColor: '#adcae6',\r\n  magicColor: 'plum',\r\n  evasionColor: 'rgb(133, 199, 133)',\r\n  playerPartyColor: '#adcae6',\r\n  enemyPartyColor: 'lightsalmon',\r\n  meleeRangeColor: 'rgba(255,255,255,0.8)',\r\n  rangedRangeColor: 'rgba(255,255,255,0.8)',\r\n  healthRedColor: 'rgb(151,75,75)',\r\n\r\n  paddingS: '4px',\r\n  padding: '8px',\r\n  paddingL: '16px',\r\n  paddingXL: '24px',\r\n\r\n  titleFont: 'New Rocker',\r\n}\r\n","import { tCharacter, tCharacterClass } from './type'\r\nimport { Theme } from '../../theme'\r\nimport { v4 } from 'uuid'\r\nimport { BASE_C_STATS } from '../Stats/constants'\r\n\r\nexport const CHARACTER_XP_MAX: Record<number, number> = {\r\n  [-1]: 0,\r\n  0: 25,\r\n  1: 45,\r\n  2: 85,\r\n  3: 135,\r\n  4: 215,\r\n  5: 295,\r\n  6: 425,\r\n  7: 675,\r\n  8: 925,\r\n  9: 1257,\r\n  10: 1925,\r\n  11: 1400,\r\n  12: 2200,\r\n}\r\n\r\nexport const CHARACTER_CLASS_COLORS: Record<tCharacterClass, string> = {\r\n  enemy: Theme.enemyPartyColor,\r\n  executioner: '#313d47',\r\n  mercenary: '#363147',\r\n  patrician: '#381c1c',\r\n  corsair: '#4a4732',\r\n  student: '#382838',\r\n  ranger: '#202e20',\r\n  reaper: 'rgb(22, 25, 33)',\r\n  drifter: '#111',\r\n}\r\n\r\nexport const BASE_CHARACTER = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: '',\r\n    isCharacter: true,\r\n    icon: '',\r\n    partyId: '',\r\n    level: 0,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: BASE_C_STATS,\r\n    weapon: undefined,\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    possibleRewards: [],\r\n  }\r\n}\r\n","import { tArmor } from '../../Armor/type'\r\nimport { tConsumable } from '../../Consumable/type'\r\nimport { tDamageRange, tDamageType } from '../../Damage/type'\r\nimport { ZERO_REWARD } from '../../Encounter/constants'\r\nimport { tEncounterReward } from '../../Encounter/type'\r\nimport { tSkill } from '../../Skill/type'\r\nimport { BASE_C_STATS } from '../../Stats/constants'\r\nimport { tBaseStats, tStats } from '../../Stats/type'\r\nimport { tStatus, tStatusType } from '../../Status/type'\r\nimport { BASE_WEAPON } from '../../Weapon/constants'\r\nimport { tWeapon } from '../../Weapon/type'\r\nimport { BASE_CHARACTER } from '../constants'\r\nimport { tCharacter, tCharacterTag } from '../type'\r\n\r\nexport const makeEnemy = (\r\n  name: string,\r\n  icon: string,\r\n  level: number,\r\n  health: number,\r\n  weapon: tWeapon,\r\n  stats: Partial<tStats>,\r\n  tags: tCharacterTag[],\r\n  possibleRewards: tEncounterReward[],\r\n  immunities: tStatusType[] = [],\r\n  status: tStatus[] = [],\r\n): tCharacter => {\r\n  const maxHealthOffset = health - 25 - level\r\n  return {\r\n    ...BASE_CHARACTER(),\r\n    name,\r\n    icon,\r\n    level,\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      ...stats,\r\n      maxHealthOffset,\r\n      vigor: 0,\r\n    },\r\n    tags,\r\n    weapon,\r\n    immunities,\r\n    status,\r\n    possibleRewards,\r\n  }\r\n}\r\n\r\nexport const makeEnemyWeapon = (\r\n  stat: keyof tBaseStats,\r\n  damage: number,\r\n  range: tDamageRange,\r\n  type: tDamageType,\r\n  skills: tSkill[],\r\n): tWeapon => {\r\n  return {\r\n    ...BASE_WEAPON(),\r\n    name: '',\r\n    stat,\r\n    damage: {\r\n      value: damage,\r\n      range,\r\n      type,\r\n    },\r\n    skills,\r\n  }\r\n}\r\n\r\nexport const makeEnemyReward = (\r\n  gold: number,\r\n  xp: number,\r\n  items: (tConsumable | tWeapon | tArmor)[] = [],\r\n): tEncounterReward => {\r\n  return {\r\n    ...ZERO_REWARD,\r\n    gold,\r\n    xp,\r\n    items,\r\n  }\r\n}\r\n","import Lich from '../../../icons/svg/delapouite/overlord-helm.svg'\r\nimport { tCharacter } from '../type'\r\nimport {\r\n  makeEnemy,\r\n  makeEnemyReward,\r\n  makeEnemyWeapon,\r\n} from '../enemies/_builder'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const LICH_ID = v4()\r\nexport const LICH = (): tCharacter => {\r\n  return {\r\n    ...makeEnemy(\r\n      'Lich',\r\n      Lich,\r\n      5,\r\n      67,\r\n      makeEnemyWeapon('strength', 34, 'melee', 'magic', [\r\n        createSkill('Drain', 4, 0, {\r\n          damageModifier: 0.5,\r\n          targetType: 'group',\r\n          perfectStatus: ['speed-down'],\r\n        }),\r\n        createSkill('Screech', 4, -5, {\r\n          damageModifier: 0,\r\n          damage: false,\r\n          targetType: 'group',\r\n          perfectStatus: ['stunned'],\r\n        }),\r\n        createSkill('Smite', 4, 0, {\r\n          perfectStatus: ['armor-down'],\r\n        }),\r\n      ]),\r\n      {\r\n        strength: 85,\r\n        intelligence: 75,\r\n        agility: 80,\r\n        luck: 50,\r\n        armor: 7,\r\n        resistance: 8,\r\n        evasion: 16,\r\n      },\r\n      ['undead'],\r\n      [\r\n        makeEnemyReward(200, 120, [\r\n          getRandomItem(3, 3),\r\n          getRandomItem(3, 3),\r\n          getRandomItem(3, 3),\r\n        ]),\r\n      ],\r\n      ['stunned', 'bleeding', 'poisoned'],\r\n    ),\r\n    id: LICH_ID,\r\n  }\r\n}\r\n","import Icon from '../../../icons/svg/delapouite/brain-tentacle.svg'\r\nimport { tCharacter } from '../type'\r\nimport {\r\n  makeEnemy,\r\n  makeEnemyReward,\r\n  makeEnemyWeapon,\r\n} from '../enemies/_builder'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const FOREST_MIND_ID = v4()\r\nexport const FOREST_MIND = (): tCharacter => {\r\n  return {\r\n    ...makeEnemy(\r\n      'The Infected Forest Mind',\r\n      Icon,\r\n      5,\r\n      75,\r\n      makeEnemyWeapon('intelligence', 34, 'ranged', 'magic', [\r\n        createSkill('Frenzy', 4, -5, {\r\n          damageModifier: 0.6,\r\n          targetType: 'group',\r\n          perfectStatus: ['speed-down', 'resistance-down'],\r\n        }),\r\n        createSkill('Entangle', 4, -5, {\r\n          damageModifier: 0.2,\r\n          targetType: 'group',\r\n          perfectStatus: ['stunned'],\r\n        }),\r\n        createSkill('Mind Blast', 4, 0, {\r\n          perfectPierce: true,\r\n        }),\r\n      ]),\r\n      {\r\n        intelligence: 75,\r\n        agility: 80,\r\n        luck: 50,\r\n        armor: 9,\r\n        resistance: 12,\r\n        evasion: 9,\r\n      },\r\n      ['flying'],\r\n      [\r\n        makeEnemyReward(200, 120, [\r\n          getRandomItem(3, 3),\r\n          getRandomItem(3, 3),\r\n          getRandomItem(3, 3),\r\n        ]),\r\n      ],\r\n      ['stunned', 'poisoned'],\r\n    ),\r\n    id: FOREST_MIND_ID,\r\n  }\r\n}\r\n","import { createWeapon } from '..'\r\nimport { createSkill } from '../../../Skill/skills'\r\nimport { tWeapon } from '../../type'\r\n\r\nexport const LICH_SWORD: tWeapon = {\r\n  ...createWeapon(\r\n    'sword',\r\n    'sharp',\r\n    [createSkill('Strike', 2, 0)],\r\n    {\r\n      strength: 3,\r\n      intelligence: 3,\r\n    },\r\n    [\r\n      'cursed-agility',\r\n      'cursed-charisma',\r\n      'cursed-dexterity',\r\n      'cursed-intelligence',\r\n      'cursed-luck',\r\n      'cursed-strength',\r\n      'cursed-vigor',\r\n    ],\r\n  ),\r\n  name: `Lich's Magic Sword`,\r\n  rarity: 'mythic',\r\n}\r\n","import { createWeapon } from '..'\r\nimport { createSkill } from '../../../Skill/skills'\r\nimport { PROTECT, TIME_JUMP } from '../../../Skill/skills/catalyst'\r\nimport { tWeapon } from '../../type'\r\n\r\nexport const MINDSTEM_CATALYST: tWeapon = {\r\n  ...createWeapon(\r\n    'catalyst',\r\n    'hardened',\r\n    [\r\n      createSkill('Arcane', 2, 0, { perfectPierce: true }),\r\n      createSkill('Stun', 2, -5, {\r\n        damageModifier: 0.5,\r\n        perfectStatus: ['stunned'],\r\n      }),\r\n      TIME_JUMP,\r\n      PROTECT,\r\n    ],\r\n    {\r\n      intelligence: 5,\r\n      attackDamageModifier: 4,\r\n      criticalChance: 5,\r\n    },\r\n    ['stunned'],\r\n  ),\r\n  name: `Mindstem Catalyst`,\r\n  rarity: 'mythic',\r\n}\r\n","import { tCharacterClass } from '../Character/type'\r\nimport { tWeapon } from './type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../Stats/constants'\r\nimport { EXECUTIONER_AXE, IRON_AXE } from './builders/objects/axe'\r\nimport { IRON_BOW, RANGERS_BOW } from './builders/objects/bow'\r\nimport { IRON_CATALYST, STUDENTS_CATALYST } from './builders/objects/catalyst'\r\nimport { IRON_CHIME, PATRICIANS_CHIME } from './builders/objects/chime'\r\nimport { FARMER_SCYTHE, IRON_SCYTHE } from './builders/objects/scythe'\r\nimport { TEST_WEAPON } from './builders/unique/test_weapon'\r\nimport { tArmor } from '../Armor/type'\r\nimport {\r\n  CONSECRATED_BEAST,\r\n  CONSECRATED_BEAST_ID,\r\n  FOREST_MIND_ID,\r\n  LICH,\r\n  LICH_ID,\r\n} from '../Character/bosses'\r\nimport { LICH_SWORD } from './builders/unique/boss_lich'\r\nimport { HEART_OF_THE_BEAST } from '../Armor/builders/uniques/heart_of_the_beast'\r\nimport { MERCENARY_HAMMER } from './builders/objects/hammer'\r\nimport { CORSAIR_PISTOL } from './builders/objects/pistol'\r\nimport { MINDSTEM_CATALYST } from './builders/unique/boss_mind'\r\n\r\nexport const CLASS_WEAPONS: Record<tCharacterClass, tWeapon | undefined> = {\r\n  executioner: EXECUTIONER_AXE(),\r\n  mercenary: MERCENARY_HAMMER(),\r\n  ranger: RANGERS_BOW(),\r\n  reaper: FARMER_SCYTHE(),\r\n  student: STUDENTS_CATALYST(),\r\n  patrician: PATRICIANS_CHIME(),\r\n  corsair: CORSAIR_PISTOL(),\r\n  drifter: undefined,\r\n  enemy: undefined,\r\n}\r\n\r\nexport const BASE_WEAPON = (): tWeapon => {\r\n  return {\r\n    id: v4(),\r\n    name: '',\r\n    itemType: 'weapon',\r\n    rarity: 'common',\r\n    type: 'fist',\r\n    stat: 'strength',\r\n    goldValue: 0,\r\n    twoHand: false,\r\n    breakable: false,\r\n    damage: {\r\n      value: 0,\r\n      range: 'melee',\r\n      type: 'physical',\r\n    },\r\n    stats: ZERO_STATS,\r\n    skills: [],\r\n    immunities: [],\r\n  }\r\n}\r\n\r\nexport const BOSS_ITEMS: Record<string, (tWeapon | tArmor)[]> = {\r\n  [LICH_ID]: [LICH_SWORD],\r\n  [FOREST_MIND_ID]: [MINDSTEM_CATALYST],\r\n  [CONSECRATED_BEAST_ID]: [TEST_WEAPON()],\r\n}\r\n","import { tProcessedCharacter } from '../Character/type'\r\nimport { tBaseStats } from '../Stats/type'\r\nimport { getBaseStatValue } from '../Character/util'\r\nimport { DiceRoll } from 'rpg-dice-roller'\r\n\r\nexport const resolveCheck = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n  offset: number = 0,\r\n): boolean => {\r\n  const statValue = getBaseStatValue(character, key, offset)\r\n  const roll = new DiceRoll('1d100')\r\n  return roll.total <= statValue\r\n}\r\n\r\nexport const getChecksProbability = (\r\n  character: tProcessedCharacter,\r\n  checks: { key: keyof tBaseStats; offset: number }[],\r\n): number => {\r\n  const statValues = checks.map(({ key, offset }) =>\r\n    getBaseStatValue(character, key, offset),\r\n  )\r\n  const result = statValues.reduce((p, c) => {\r\n    return p * (c / 100)\r\n  }, 1)\r\n  return result\r\n}\r\n","import { createFootwear, createHat, createLightArmor } from '../..'\r\nimport { tArmor } from '../../../type'\r\n\r\nexport const AssassinHood: tArmor = {\r\n  ...createHat('Assassin Hood', 'mythic', 500, {\r\n    resistance: 5,\r\n    evasion: 5,\r\n    dexterity: 3,\r\n  }),\r\n  level: 4,\r\n  upgrades: [],\r\n}\r\n\r\nexport const AssassinCloak: tArmor = {\r\n  ...createLightArmor('Assassin Cloak', 'mythic', 700, {\r\n    armor: 9,\r\n    resistance: 9,\r\n    evasion: 10,\r\n    dexterity: 7,\r\n    charisma: -5,\r\n  }),\r\n  level: 4,\r\n  upgrades: [],\r\n}\r\n\r\nexport const AssassinBoots: tArmor = {\r\n  ...createFootwear('Assassin Boots', 'mythic', 500, {\r\n    armor: 5,\r\n    evasion: 5,\r\n    dexterity: 5,\r\n    agility: 5,\r\n  }),\r\n  level: 4,\r\n  upgrades: [],\r\n}\r\n","import { createFootwear, createMagicArmor, createMagicHat } from '../..'\r\nimport { tArmor } from '../../../type'\r\n\r\nexport const BishopMitre: tArmor = {\r\n  ...createMagicHat('Bishop Mitre', 'mythic', 500, {\r\n    resistance: 10,\r\n    maxInspirationOffset: 1,\r\n    intelligence: 5,\r\n  }),\r\n  level: 4,\r\n  upgrades: [],\r\n}\r\n\r\nexport const BishopRobes: tArmor = {\r\n  ...createMagicArmor(\r\n    'Bishop Robes',\r\n    'mythic',\r\n    700,\r\n    {\r\n      armor: 4,\r\n      resistance: 15,\r\n      maxInspirationOffset: 1,\r\n      strength: -7,\r\n      intelligence: 5,\r\n    },\r\n    [],\r\n    [\r\n      'cursed-agility',\r\n      'cursed-charisma',\r\n      'cursed-dexterity',\r\n      'cursed-intelligence',\r\n      'cursed-luck',\r\n      'cursed-strength',\r\n      'cursed-vigor',\r\n    ],\r\n  ),\r\n  level: 4,\r\n  upgrades: [],\r\n}\r\n\r\nexport const BishopShoes: tArmor = {\r\n  ...createFootwear('Bishop Shoes', 'mythic', 500, {\r\n    armor: 4,\r\n    resistance: 6,\r\n    strength: -7,\r\n    intelligence: 4,\r\n  }),\r\n  level: 4,\r\n  upgrades: [],\r\n}\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '../..'\r\nimport { levelUp } from '../../../../Character/util'\r\nimport { tArmor } from '../../../type'\r\n\r\nexport const OldKnightHelmet: tArmor = {\r\n  ...createHelmet('Old Knight Helmet', 'mythic', 500, {\r\n    armor: 8,\r\n    resistance: 2,\r\n    strength: 5,\r\n    intelligence: -5,\r\n  }),\r\n  level: 4,\r\n  upgrades: [],\r\n}\r\n\r\nexport const OldKnightArmor: tArmor = {\r\n  ...createHeavyArmor(\r\n    'Old Knight Armor',\r\n    'mythic',\r\n    700,\r\n    {\r\n      armor: 13,\r\n      resistance: 3,\r\n      strength: 5,\r\n      intelligence: -5,\r\n    },\r\n    [],\r\n  ),\r\n  level: 4,\r\n  upgrades: [],\r\n}\r\n\r\nexport const OldKnightBoots: tArmor = {\r\n  ...createFootwear('Old Knight Boots', 'mythic', 100, {\r\n    armor: 7,\r\n    evasion: 4,\r\n    vigor: 6,\r\n    strength: 5,\r\n  }),\r\n  level: 4,\r\n  upgrades: [],\r\n}\r\n","import { createFootwear, createHat, createLightArmor } from '../..'\r\nimport { tArmor } from '../../../type'\r\n\r\nexport const RoyalHat: tArmor = {\r\n  ...createHat('Royal Hat', 'mythic', 500, {\r\n    armor: 3,\r\n    resistance: 5,\r\n    maxInspirationOffset: 1,\r\n    charisma: 5,\r\n    luck: 5,\r\n  }),\r\n  level: 3,\r\n  upgrades: [],\r\n}\r\n\r\nexport const RoyalAttire: tArmor = {\r\n  ...createLightArmor('Royal Outfit', 'mythic', 700, {\r\n    armor: 8,\r\n    resistance: 8,\r\n    dexterity: -5,\r\n    charisma: 5,\r\n    luck: 5,\r\n  }),\r\n  level: 3,\r\n  upgrades: [],\r\n}\r\n\r\nexport const RoyalShoes: tArmor = {\r\n  ...createFootwear('Royal Shoes', 'mythic', 500, {\r\n    armor: 3,\r\n    resistance: 4,\r\n    dexterity: -4,\r\n    charisma: 4,\r\n    luck: 4,\r\n  }),\r\n  level: 3,\r\n  upgrades: [],\r\n}\r\n","import { tArmor } from '../../../type'\r\nimport { RogueCloak } from '../level3'\r\nimport { AssassinHood, AssassinCloak, AssassinBoots } from './assassin'\r\nimport { BishopMitre, BishopRobes, BishopShoes } from './bishop'\r\nimport { OldKnightArmor, OldKnightBoots, OldKnightHelmet } from './old_knight'\r\nimport { RoyalAttire, RoyalHat, RoyalShoes } from './royal'\r\n\r\nexport * from './assassin'\r\nexport * from './bishop'\r\nexport * from './old_knight'\r\nexport * from './royal'\r\n\r\nexport const ARMOR_LEVEL_4: tArmor[] = [\r\n  AssassinHood,\r\n  AssassinCloak,\r\n  AssassinBoots,\r\n  BishopMitre,\r\n  BishopRobes,\r\n  BishopShoes,\r\n  OldKnightHelmet,\r\n  OldKnightArmor,\r\n  OldKnightBoots,\r\n  RoyalHat,\r\n  RoyalAttire,\r\n  RoyalShoes,\r\n]\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '../..'\r\nimport { tArmor } from '../../../type'\r\nimport { OldKnightArmor, OldKnightBoots, OldKnightHelmet } from '../level4'\r\n\r\nexport const FallenRaiderHelmet: tArmor = {\r\n  ...createHelmet('Fallen Raider Helmet', 'epic', 400, {\r\n    armor: 6,\r\n    resistance: 2,\r\n    strength: 3,\r\n    intelligence: -3,\r\n  }),\r\n  level: 3,\r\n  upgrades: [OldKnightHelmet.id],\r\n}\r\n\r\nexport const FallenRaiderArmor: tArmor = {\r\n  ...createHeavyArmor(\r\n    'Fallen Raider Armor',\r\n    'epic',\r\n    450,\r\n    {\r\n      armor: 10,\r\n      resistance: 2,\r\n      strength: 4,\r\n      intelligence: -4,\r\n    },\r\n    [],\r\n  ),\r\n  level: 3,\r\n  upgrades: [OldKnightArmor.id],\r\n}\r\n\r\nexport const FallenRaiderBoots: tArmor = {\r\n  ...createFootwear('Fallen Raider Boots', 'epic', 400, {\r\n    armor: 5,\r\n    evasion: 3,\r\n    vigor: 4,\r\n    strength: 3,\r\n  }),\r\n  level: 3,\r\n  upgrades: [OldKnightBoots.id],\r\n}\r\n","import { createFootwear, createMagicArmor, createMagicHat } from '../..'\r\nimport { tArmor } from '../../../type'\r\nimport { BishopMitre, BishopRobes, BishopShoes } from '../level4'\r\n\r\nexport const NecromancerCowl: tArmor = {\r\n  ...createMagicHat('Necromancer Cowl', 'epic', 400, {\r\n    resistance: 8,\r\n    intelligence: 4,\r\n    maxInspirationOffset: 1,\r\n  }),\r\n  level: 3,\r\n  upgrades: [BishopMitre.id],\r\n}\r\n\r\nexport const NecromancerRobes: tArmor = {\r\n  ...createMagicArmor(\r\n    'Necromancer Robes',\r\n    'epic',\r\n    450,\r\n    {\r\n      armor: 4,\r\n      resistance: 12,\r\n      maxInspirationOffset: 1,\r\n      strength: -5,\r\n      intelligence: 5,\r\n    },\r\n    [],\r\n    [\r\n      'cursed-agility',\r\n      'cursed-charisma',\r\n      'cursed-dexterity',\r\n      'cursed-intelligence',\r\n      'cursed-luck',\r\n      'cursed-strength',\r\n      'cursed-vigor',\r\n    ],\r\n  ),\r\n  level: 3,\r\n  upgrades: [BishopRobes.id],\r\n}\r\n\r\nexport const NecromancerWraps: tArmor = {\r\n  ...createFootwear('Necromancer Wraps', 'epic', 400, {\r\n    armor: 3,\r\n    evasion: 5,\r\n    strength: -4,\r\n    intelligence: 4,\r\n  }),\r\n  level: 3,\r\n  upgrades: [BishopShoes.id],\r\n}\r\n","import { createFootwear, createHat, createLightArmor } from '../..'\r\nimport { tArmor } from '../../../type'\r\nimport { RoyalAttire, RoyalHat, RoyalShoes } from '../level4'\r\n\r\nexport const NobleHat: tArmor = {\r\n  ...createHat('Noble Hat', 'epic', 400, {\r\n    armor: 3,\r\n    resistance: 5,\r\n    maxInspirationOffset: 1,\r\n    charisma: 5,\r\n    luck: 5,\r\n  }),\r\n  level: 3,\r\n  upgrades: [RoyalHat.id],\r\n}\r\n\r\nexport const NobleAttire: tArmor = {\r\n  ...createLightArmor('Noble Outfit', 'epic', 450, {\r\n    armor: 8,\r\n    resistance: 8,\r\n    dexterity: -5,\r\n    charisma: 5,\r\n    luck: 5,\r\n  }),\r\n  level: 3,\r\n  upgrades: [RoyalAttire.id],\r\n}\r\n\r\nexport const NobleShoes: tArmor = {\r\n  ...createFootwear('Noble Shoes', 'epic', 400, {\r\n    armor: 3,\r\n    resistance: 4,\r\n    dexterity: -4,\r\n    charisma: 4,\r\n    luck: 4,\r\n  }),\r\n  level: 3,\r\n  upgrades: [RoyalShoes.id],\r\n}\r\n","import { createFootwear, createHat, createLightArmor } from '../..'\r\nimport { tArmor } from '../../../type'\r\nimport { AssassinBoots, AssassinCloak, AssassinHood } from '../level4'\r\n\r\nexport const RogueHood: tArmor = {\r\n  ...createHat('Rogue Hood', 'epic', 400, {\r\n    armor: 1,\r\n    resistance: 3,\r\n    evasion: 3,\r\n  }),\r\n  level: 3,\r\n  upgrades: [AssassinHood.id],\r\n}\r\n\r\nexport const RogueCloak: tArmor = {\r\n  ...createLightArmor('Rogue Cloak', 'epic', 450, {\r\n    armor: 5,\r\n    resistance: 5,\r\n    evasion: 10,\r\n    dexterity: 5,\r\n    charisma: 5,\r\n  }),\r\n  level: 3,\r\n  upgrades: [AssassinCloak.id],\r\n}\r\n\r\nexport const RogueBoots: tArmor = {\r\n  ...createFootwear('Rogue Boots', 'epic', 400, {\r\n    armor: 3,\r\n    evasion: 3,\r\n    dexterity: 4,\r\n    agility: 4,\r\n  }),\r\n  level: 3,\r\n  upgrades: [AssassinBoots.id],\r\n}\r\n","import { tArmor } from '../../../type'\r\nimport {\r\n  FallenRaiderArmor,\r\n  FallenRaiderBoots,\r\n  FallenRaiderHelmet,\r\n} from './fallen_raider'\r\nimport {\r\n  NecromancerCowl,\r\n  NecromancerRobes,\r\n  NecromancerWraps,\r\n} from './necromancer'\r\nimport { NobleAttire, NobleHat, NobleShoes } from './noble'\r\nimport { RogueBoots, RogueCloak, RogueHood } from './rogue'\r\n\r\nexport * from './fallen_raider'\r\nexport * from './necromancer'\r\nexport * from './noble'\r\nexport * from './rogue'\r\n\r\nexport const ARMOR_LEVEL_3: tArmor[] = [\r\n  FallenRaiderHelmet,\r\n  FallenRaiderArmor,\r\n  FallenRaiderBoots,\r\n  NecromancerCowl,\r\n  NecromancerRobes,\r\n  NecromancerWraps,\r\n  NobleHat,\r\n  NobleAttire,\r\n  NobleShoes,\r\n  RogueHood,\r\n  RogueCloak,\r\n  RogueBoots,\r\n]\r\n","import { createFootwear, createHat, createLightArmor } from '../..'\r\nimport { tArmor } from '../../../type'\r\nimport { NobleAttire, NobleHat, NobleShoes } from '../level3'\r\n\r\nexport const AntiquatedHat: tArmor = {\r\n  ...createHat('Antiquated Hat', 'rare', 250, {\r\n    armor: 2,\r\n    resistance: 3,\r\n    maxInspirationOffset: 1,\r\n    charisma: 3,\r\n    luck: 3,\r\n  }),\r\n  level: 2,\r\n  upgrades: [NobleHat.id],\r\n}\r\n\r\nexport const AntiquatedAttire: tArmor = {\r\n  ...createLightArmor('Antiquated Attire', 'rare', 300, {\r\n    armor: 6,\r\n    resistance: 6,\r\n    dexterity: -4,\r\n    charisma: 4,\r\n    luck: 4,\r\n  }),\r\n  level: 2,\r\n  upgrades: [NobleAttire.id],\r\n}\r\n\r\nexport const AntiquatedShoes: tArmor = {\r\n  ...createFootwear('Antiquated Shoes', 'rare', 250, {\r\n    armor: 2,\r\n    resistance: 3,\r\n    dexterity: -4,\r\n    charisma: 3,\r\n    luck: 3,\r\n  }),\r\n  level: 2,\r\n  upgrades: [NobleShoes.id],\r\n}\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '../..'\r\nimport { tArmor } from '../../../type'\r\nimport {\r\n  FallenRaiderArmor,\r\n  FallenRaiderBoots,\r\n  FallenRaiderHelmet,\r\n} from '../level3'\r\n\r\nexport const BoneHelmet: tArmor = {\r\n  ...createHelmet('Bone Helmet', 'rare', 250, {\r\n    armor: 2,\r\n    resistance: 2,\r\n    healthRegeneration: 1,\r\n    attackDamageOffset: 3,\r\n    vigor: 3,\r\n  }),\r\n  level: 2,\r\n  upgrades: [FallenRaiderHelmet.id],\r\n}\r\n\r\nexport const BoneArmor: tArmor = {\r\n  ...createHeavyArmor(\r\n    'Bone Armor',\r\n    'rare',\r\n    300,\r\n    {\r\n      armor: 5,\r\n      resistance: 5,\r\n      maxHealthOffset: 5,\r\n      healthRegeneration: 2,\r\n      vigor: 5,\r\n    },\r\n    [],\r\n    ['frozen'],\r\n  ),\r\n  level: 2,\r\n  upgrades: [FallenRaiderArmor.id],\r\n}\r\n\r\nexport const BoneBoots: tArmor = {\r\n  ...createFootwear('Bone Boots', 'rare', 250, {\r\n    armor: 2,\r\n    resistance: 2,\r\n    healthRegeneration: 1,\r\n    vigor: 4,\r\n  }),\r\n  level: 2,\r\n  upgrades: [FallenRaiderBoots.id],\r\n}\r\n","import { createFootwear, createHat, createLightArmor } from '../..'\r\nimport { tArmor } from '../../../type'\r\nimport { RogueBoots, RogueCloak, RogueHood } from '../level3'\r\n\r\nexport const HunterHood: tArmor = {\r\n  ...createHat('Hunter Hood', 'rare', 250, {\r\n    resistance: 3,\r\n    evasion: 4,\r\n    dexterity: 3,\r\n  }),\r\n  level: 2,\r\n  upgrades: [RogueHood.id],\r\n}\r\n\r\nexport const HunterCloak: tArmor = {\r\n  ...createLightArmor('Hunter Cloak', 'rare', 300, {\r\n    armor: 5,\r\n    resistance: 5,\r\n    evasion: 7,\r\n    dexterity: 4,\r\n    charisma: -4,\r\n    agility: 2,\r\n  }),\r\n  level: 2,\r\n  upgrades: [RogueCloak.id],\r\n}\r\n\r\nexport const HunterBoots: tArmor = {\r\n  ...createFootwear('Hunter Boots', 'rare', 250, {\r\n    armor: 3,\r\n    evasion: 4,\r\n    dexterity: 3,\r\n    agility: 3,\r\n  }),\r\n  level: 2,\r\n  upgrades: [RogueBoots.id],\r\n}\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '../..'\r\nimport { tArmor } from '../../../type'\r\nimport {\r\n  FallenRaiderArmor,\r\n  FallenRaiderBoots,\r\n  FallenRaiderHelmet,\r\n} from '../level3'\r\n\r\nexport const IronHelmet: tArmor = {\r\n  ...createHelmet(\r\n    'Iron Helmet',\r\n    'rare',\r\n    250,\r\n    {\r\n      armor: 4,\r\n      strength: 2,\r\n      dexterity: -4,\r\n    },\r\n    [],\r\n    ['stunned'],\r\n  ),\r\n  level: 2,\r\n  upgrades: [FallenRaiderHelmet.id],\r\n}\r\n\r\nexport const IronArmor: tArmor = {\r\n  ...createHeavyArmor('Iron Armor', 'rare', 300, {\r\n    armor: 7,\r\n    resistance: 1,\r\n    strength: 3,\r\n    intelligence: -3,\r\n  }),\r\n  level: 2,\r\n  upgrades: [FallenRaiderArmor.id],\r\n}\r\n\r\nexport const IronBoots: tArmor = {\r\n  ...createFootwear('Iron Boots', 'rare', 250, {\r\n    armor: 2,\r\n    resistance: 2,\r\n    healthRegeneration: 1,\r\n    vigor: 4,\r\n  }),\r\n  level: 2,\r\n  upgrades: [FallenRaiderBoots.id],\r\n}\r\n","import { createFootwear, createMagicArmor, createMagicHat } from '../..'\r\nimport { tArmor } from '../../../type'\r\nimport { NecromancerCowl, NecromancerRobes, NecromancerWraps } from '../level3'\r\n\r\nexport const NoviceHat: tArmor = {\r\n  ...createMagicHat('Novice Hat', 'rare', 250, {\r\n    resistance: 6,\r\n    intelligence: 3,\r\n  }),\r\n  level: 2,\r\n  upgrades: [NecromancerCowl.id],\r\n}\r\n\r\nexport const NoviceRobes: tArmor = {\r\n  ...createMagicArmor(\r\n    'Novice Robes',\r\n    'rare',\r\n    300,\r\n    {\r\n      armor: 3,\r\n      resistance: 9,\r\n      maxInspirationOffset: 1,\r\n      strength: -4,\r\n      intelligence: 4,\r\n    },\r\n    [],\r\n    [\r\n      'cursed-agility',\r\n      'cursed-charisma',\r\n      'cursed-dexterity',\r\n      'cursed-intelligence',\r\n      'cursed-luck',\r\n      'cursed-strength',\r\n      'cursed-vigor',\r\n    ],\r\n  ),\r\n  level: 2,\r\n  upgrades: [NecromancerRobes.id],\r\n}\r\n\r\nexport const NoviceShoes: tArmor = {\r\n  ...createFootwear('Novice Shoes', 'rare', 250, {\r\n    armor: 2,\r\n    resistance: 4,\r\n    strength: -3,\r\n    intelligence: 3,\r\n  }),\r\n  level: 2,\r\n  upgrades: [NecromancerWraps.id],\r\n}\r\n","import { tArmor } from '../../../type'\r\nimport { AntiquatedAttire, AntiquatedHat, AntiquatedShoes } from './antiquated'\r\nimport { BoneArmor, BoneBoots, BoneHelmet } from './bone'\r\nimport { HunterCloak, HunterBoots, HunterHood } from './hunter'\r\nimport { IronArmor, IronBoots, IronHelmet } from './iron'\r\nimport { NoviceHat, NoviceRobes, NoviceShoes } from './novice'\r\n\r\nexport * from './antiquated'\r\nexport * from './bone'\r\nexport * from './hunter'\r\nexport * from './iron'\r\nexport * from './novice'\r\n\r\nexport const ARMOR_LEVEL_2: tArmor[] = [\r\n  AntiquatedHat,\r\n  AntiquatedAttire,\r\n  AntiquatedShoes,\r\n  BoneHelmet,\r\n  BoneArmor,\r\n  BoneBoots,\r\n  HunterHood,\r\n  HunterCloak,\r\n  HunterBoots,\r\n  IronHelmet,\r\n  IronArmor,\r\n  IronBoots,\r\n  NoviceHat,\r\n  NoviceRobes,\r\n  NoviceShoes,\r\n]\r\n","import { createFootwear, createHat, createLightArmor } from '../..'\r\nimport { tArmor } from '../../../type'\r\nimport { HunterHood, HunterCloak, HunterBoots } from '../level2'\r\n\r\nexport const AdventureHood: tArmor = {\r\n  ...createHat('Adventurer Hood', 'uncommon', 100, {\r\n    resistance: 2,\r\n    evasion: 3,\r\n    dexterity: 2,\r\n  }),\r\n  level: 1,\r\n  upgrades: [HunterHood.id],\r\n}\r\n\r\nexport const AdventureCloak: tArmor = {\r\n  ...createLightArmor('Adventurer Cloak', 'uncommon', 150, {\r\n    armor: 3,\r\n    resistance: 3,\r\n    evasion: 6,\r\n    dexterity: 3,\r\n    charisma: -4,\r\n  }),\r\n  level: 1,\r\n  upgrades: [HunterCloak.id],\r\n}\r\n\r\nexport const AdventureBoots: tArmor = {\r\n  ...createFootwear('Adventurer Boots', 'uncommon', 100, {\r\n    armor: 2,\r\n    evasion: 3,\r\n    dexterity: 2,\r\n    agility: 2,\r\n  }),\r\n  level: 1,\r\n  upgrades: [HunterBoots.id],\r\n}\r\n","import { createFootwear, createMagicArmor, createMagicHat } from '../..'\r\nimport { tArmor } from '../../../type'\r\nimport { NoviceHat, NoviceRobes, NoviceShoes } from '../level2/novice'\r\n\r\nexport const ApprenticeHat: tArmor = {\r\n  ...createMagicHat('Apprentice Cap', 'uncommon', 100, {\r\n    resistance: 4,\r\n    maxInspirationOffset: 1,\r\n    intelligence: 2,\r\n  }),\r\n  level: 1,\r\n  upgrades: [NoviceHat.id],\r\n}\r\n\r\nexport const ApprenticeRobes: tArmor = {\r\n  ...createMagicArmor(\r\n    'Apprentice Robe',\r\n    'uncommon',\r\n    150,\r\n    {\r\n      armor: 1,\r\n      resistance: 5,\r\n      maxInspirationOffset: 1,\r\n      strength: -3,\r\n      intelligence: 3,\r\n    },\r\n    [],\r\n    [\r\n      'cursed-agility',\r\n      'cursed-charisma',\r\n      'cursed-dexterity',\r\n      'cursed-intelligence',\r\n      'cursed-luck',\r\n      'cursed-strength',\r\n      'cursed-vigor',\r\n    ],\r\n  ),\r\n  level: 1,\r\n  upgrades: [NoviceRobes.id],\r\n}\r\n\r\nexport const ApprenticeShoes: tArmor = {\r\n  ...createFootwear('Apprentice Shoes', 'uncommon', 100, {\r\n    armor: 1,\r\n    resistance: 3,\r\n    strength: -2,\r\n    intelligence: 2,\r\n  }),\r\n  level: 1,\r\n  upgrades: [NoviceShoes.id],\r\n}\r\n","import { createFootwear, createHat, createLightArmor } from '../..'\r\nimport { tArmor } from '../../../type'\r\nimport { AntiquatedAttire, AntiquatedHat, AntiquatedShoes } from '../level2'\r\n\r\nexport const AristocratHat: tArmor = {\r\n  ...createHat('Aristocrat Hat', 'uncommon', 100, {\r\n    armor: 1,\r\n    resistance: 2,\r\n    maxInspirationOffset: 1,\r\n    charisma: 2,\r\n    luck: 2,\r\n  }),\r\n  level: 1,\r\n  upgrades: [AntiquatedHat.id],\r\n}\r\n\r\nexport const AristocratAttire: tArmor = {\r\n  ...createLightArmor('Aristocrat Attire', 'uncommon', 150, {\r\n    armor: 4,\r\n    resistance: 4,\r\n    charisma: 3,\r\n    luck: 3,\r\n  }),\r\n  level: 1,\r\n  upgrades: [AntiquatedAttire.id],\r\n}\r\n\r\nexport const AristocratShoes: tArmor = {\r\n  ...createFootwear('Aristocrat Shoes', 'uncommon', 100, {\r\n    armor: 1,\r\n    resistance: 2,\r\n    dexterity: -2,\r\n    charisma: 2,\r\n    luck: 2,\r\n  }),\r\n  level: 1,\r\n  upgrades: [AntiquatedShoes.id],\r\n}\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '../..'\r\nimport { tArmor } from '../../../type'\r\nimport {\r\n  BoneArmor,\r\n  BoneBoots,\r\n  BoneHelmet,\r\n  IronArmor,\r\n  IronBoots,\r\n  IronHelmet,\r\n} from '../level2'\r\n\r\nexport const ChainMailHelmet: tArmor = {\r\n  ...createHelmet('Chain Mail Helmet', 'uncommon', 100, {\r\n    armor: 2,\r\n    resistance: 2,\r\n    vigor: 1,\r\n    healthRegeneration: 1,\r\n  }),\r\n  level: 1,\r\n  upgrades: [IronHelmet.id, BoneHelmet.id],\r\n}\r\n\r\nexport const ChainMailArmor: tArmor = {\r\n  ...createHeavyArmor('Chain Mail Armor', 'uncommon', 150, {\r\n    armor: 6,\r\n    resistance: 1,\r\n    vigor: 2,\r\n    strength: 1,\r\n    healthRegeneration: 2,\r\n    agility: -2,\r\n  }),\r\n  level: 1,\r\n  upgrades: [IronArmor.id, BoneArmor.id],\r\n}\r\n\r\nexport const ChainMailBoots: tArmor = {\r\n  ...createFootwear('Chain Mail Boots', 'uncommon', 100, {\r\n    armor: 2,\r\n    resistance: 2,\r\n    vigor: 2,\r\n    agility: -2,\r\n  }),\r\n  level: 1,\r\n  upgrades: [IronBoots.id, BoneBoots.id],\r\n}\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '../..'\r\nimport { tArmor } from '../../../type'\r\nimport {\r\n  BoneArmor,\r\n  BoneBoots,\r\n  BoneHelmet,\r\n  IronArmor,\r\n  IronBoots,\r\n  IronHelmet,\r\n} from '../level2'\r\n\r\nexport const GraveguardHelmet: tArmor = {\r\n  ...createHelmet('Graveguard Helmet', 'uncommon', 100, {\r\n    armor: 2,\r\n    resistance: 1,\r\n    strength: 1,\r\n    intelligence: -1,\r\n  }),\r\n  level: 1,\r\n  upgrades: [IronHelmet.id, BoneHelmet.id],\r\n}\r\n\r\nexport const GraveguardArmor: tArmor = {\r\n  ...createHeavyArmor('Graveguard Armor', 'uncommon', 150, {\r\n    armor: 5,\r\n    resistance: 2,\r\n    strength: 3,\r\n    intelligence: -3,\r\n  }),\r\n  level: 1,\r\n  upgrades: [IronArmor.id, BoneArmor.id],\r\n}\r\n\r\nexport const GraveguardBoots: tArmor = {\r\n  ...createFootwear('Graveguard Boots', 'uncommon', 100, {\r\n    armor: 2,\r\n    resistance: 1,\r\n    strength: 1,\r\n    agility: 1,\r\n    intelligence: -1,\r\n  }),\r\n  level: 1,\r\n  upgrades: [IronBoots.id, BoneBoots.id],\r\n}\r\n","import { createFootwear, createHat, createLightArmor } from '../..'\r\nimport { tArmor } from '../../../type'\r\nimport { HunterBoots, HunterCloak, HunterHood } from '../level2'\r\n\r\nexport const HarrowedHood: tArmor = {\r\n  ...createHat('Harrowed Hood', 'uncommon', 100, {\r\n    armor: 1,\r\n    evasion: 3,\r\n    dexterity: 1,\r\n    criticalDamageModifier: 2,\r\n  }),\r\n  level: 1,\r\n  upgrades: [HunterHood.id],\r\n}\r\n\r\nexport const HarrowedCloak: tArmor = {\r\n  ...createLightArmor('Harrowed Cloak', 'uncommon', 150, {\r\n    armor: 2,\r\n    resistance: 3,\r\n    evasion: 3,\r\n    dexterity: 1,\r\n    criticalChance: 3,\r\n    criticalDamageModifier: 3,\r\n  }),\r\n  level: 1,\r\n  upgrades: [HunterCloak.id],\r\n}\r\n\r\nexport const HarrowedBoots: tArmor = {\r\n  ...createFootwear('Harrowed Boots', 'uncommon', 100, {\r\n    criticalChance: 2,\r\n    dexterity: 1,\r\n    agility: 2,\r\n  }),\r\n  level: 1,\r\n  upgrades: [HunterBoots.id],\r\n}\r\n","import { tArmor } from '../../../type'\r\nimport { AdventureBoots, AdventureCloak, AdventureHood } from './adventure'\r\nimport { ApprenticeHat, ApprenticeRobes, ApprenticeShoes } from './apprentice'\r\nimport { AristocratAttire, AristocratHat, AristocratShoes } from './aristocrat'\r\nimport { ChainMailArmor, ChainMailBoots, ChainMailHelmet } from './chain_mail'\r\nimport {\r\n  GraveguardArmor,\r\n  GraveguardBoots,\r\n  GraveguardHelmet,\r\n} from './graveguard'\r\nimport { HarrowedBoots, HarrowedCloak, HarrowedHood } from './harrowed'\r\n\r\nexport * from './adventure'\r\nexport * from './apprentice'\r\nexport * from './aristocrat'\r\nexport * from './chain_mail'\r\nexport * from './graveguard'\r\nexport * from './harrowed'\r\n\r\nexport const ARMOR_LEVEL_1: tArmor[] = [\r\n  AdventureHood,\r\n  AdventureCloak,\r\n  AdventureBoots,\r\n  ApprenticeHat,\r\n  ApprenticeRobes,\r\n  ApprenticeShoes,\r\n  AristocratHat,\r\n  AristocratAttire,\r\n  AristocratShoes,\r\n  ChainMailHelmet,\r\n  ChainMailArmor,\r\n  ChainMailBoots,\r\n  GraveguardHelmet,\r\n  GraveguardArmor,\r\n  GraveguardBoots,\r\n  HarrowedHood,\r\n  HarrowedCloak,\r\n  HarrowedBoots,\r\n]\r\n","import { createFootwear, createHat, createLightArmor } from '../..'\r\nimport { tArmor } from '../../../type'\r\nimport {\r\n  AristocratAttire,\r\n  AristocratHat,\r\n  AristocratShoes,\r\n  ChainMailArmor,\r\n  ChainMailBoots,\r\n  ChainMailHelmet,\r\n} from '../level1'\r\n\r\nexport const CorsairHat: tArmor = {\r\n  ...createHat('Corsair Hat', 'common', 0, {\r\n    resistance: 1,\r\n    charisma: 1,\r\n  }),\r\n  level: 0,\r\n  upgrades: [AristocratHat.id, ChainMailHelmet.id],\r\n}\r\n\r\nexport const CorsairAttire: tArmor = {\r\n  ...createLightArmor('Corsair Attire', 'common', 0, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    charisma: 1,\r\n  }),\r\n  level: 0,\r\n  upgrades: [AristocratAttire.id, ChainMailArmor.id],\r\n}\r\n\r\nexport const CorsairShoes: tArmor = {\r\n  ...createFootwear('Corsair Shoes', 'common', 0, {\r\n    charisma: 1,\r\n    vigor: 1,\r\n  }),\r\n  level: 0,\r\n  upgrades: [AristocratShoes.id, ChainMailBoots.id],\r\n}\r\n","import { createFootwear, createHat, createLightArmor } from '../..'\r\nimport { tArmor } from '../../../type'\r\nimport {\r\n  AdventureBoots,\r\n  AdventureCloak,\r\n  AdventureHood,\r\n  ApprenticeHat,\r\n  ApprenticeShoes,\r\n  AristocratAttire,\r\n  AristocratHat,\r\n  AristocratShoes,\r\n  GraveguardArmor,\r\n  GraveguardBoots,\r\n  GraveguardHelmet,\r\n} from '../level1'\r\n\r\nexport const DrifterHat: tArmor = {\r\n  ...createHat('Drifter Hat', 'common', 0, {\r\n    armor: 1,\r\n  }),\r\n  level: 0,\r\n  upgrades: [\r\n    GraveguardHelmet.id,\r\n    AdventureHood.id,\r\n    ApprenticeHat.id,\r\n    AristocratHat.id,\r\n  ],\r\n}\r\n\r\nexport const DrifterShirt: tArmor = {\r\n  ...createLightArmor('Drifter Shirt', 'common', 0, {\r\n    armor: 1,\r\n    resistance: 1,\r\n  }),\r\n  level: 0,\r\n  upgrades: [\r\n    GraveguardArmor.id,\r\n    AdventureCloak.id,\r\n    ApprenticeHat.id,\r\n    AristocratAttire.id,\r\n  ],\r\n}\r\n\r\nexport const DrifterShoes: tArmor = {\r\n  ...createFootwear('Drifter Shoes', 'common', 0, {\r\n    resistance: 1,\r\n  }),\r\n  level: 0,\r\n  upgrades: [\r\n    GraveguardBoots.id,\r\n    AdventureBoots.id,\r\n    ApprenticeShoes.id,\r\n    AristocratShoes.id,\r\n  ],\r\n}\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '../..'\r\nimport { tArmor } from '../../../type'\r\nimport {\r\n  ChainMailArmor,\r\n  ChainMailBoots,\r\n  ChainMailHelmet,\r\n  GraveguardArmor,\r\n  GraveguardBoots,\r\n  GraveguardHelmet,\r\n} from '../level1'\r\n\r\nexport const ExecutionerHelmet: tArmor = {\r\n  ...createHelmet('Executioner Helmet', 'common', 0, {\r\n    armor: 1,\r\n    strength: 1,\r\n  }),\r\n  level: 0,\r\n  upgrades: [GraveguardHelmet.id, ChainMailHelmet.id],\r\n}\r\n\r\nexport const ExecutionerArmor: tArmor = {\r\n  ...createHeavyArmor('Executioner Armor', 'common', 0, {\r\n    armor: 2,\r\n    strength: 2,\r\n    intelligence: -2,\r\n  }),\r\n  level: 0,\r\n  upgrades: [GraveguardArmor.id, ChainMailArmor.id],\r\n}\r\n\r\nexport const ExecutionerBoots: tArmor = {\r\n  ...createFootwear('Executioner Boots', 'common', 0, {\r\n    strength: 1,\r\n    vigor: 1,\r\n  }),\r\n  level: 0,\r\n  upgrades: [GraveguardBoots.id, ChainMailBoots.id],\r\n}\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '../..'\r\nimport { tArmor } from '../../../type'\r\nimport {\r\n  ChainMailArmor,\r\n  ChainMailBoots,\r\n  ChainMailHelmet,\r\n  GraveguardArmor,\r\n  GraveguardBoots,\r\n  GraveguardHelmet,\r\n} from '../level1'\r\n\r\nexport const MercenaryHelmet: tArmor = {\r\n  ...createHelmet('Mercenary Helmet', 'common', 0, {\r\n    armor: 1,\r\n    vigor: 1,\r\n  }),\r\n  level: 0,\r\n  upgrades: [GraveguardHelmet.id, ChainMailHelmet.id],\r\n}\r\n\r\nexport const MercenaryArmor: tArmor = {\r\n  ...createHeavyArmor('Mercenary Armor', 'common', 0, {\r\n    armor: 2,\r\n    vigor: 1,\r\n    strength: 1,\r\n  }),\r\n  level: 0,\r\n  upgrades: [GraveguardArmor.id, ChainMailArmor.id],\r\n}\r\n\r\nexport const MercenaryBoots: tArmor = {\r\n  ...createFootwear('Mercenary Boots', 'common', 0, {\r\n    strength: 1,\r\n    vigor: 1,\r\n  }),\r\n  level: 0,\r\n  upgrades: [GraveguardBoots.id, ChainMailBoots.id],\r\n}\r\n","import { createFootwear, createHat, createLightArmor } from '../..'\r\nimport { tArmor } from '../../../type'\r\nimport { AristocratAttire, AristocratHat, AristocratShoes } from '../level1'\r\n\r\nexport const PatricianHat: tArmor = {\r\n  ...createHat('Patrician Hat', 'common', 0, {\r\n    resistance: 1,\r\n    charisma: 1,\r\n  }),\r\n  level: 0,\r\n  upgrades: [AristocratHat.id],\r\n}\r\n\r\nexport const PatricianAttire: tArmor = {\r\n  ...createLightArmor('Patrician Attire', 'common', 0, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    charisma: 2,\r\n    luck: 2,\r\n  }),\r\n  level: 0,\r\n  upgrades: [AristocratAttire.id],\r\n}\r\n\r\nexport const PatricianShoes: tArmor = {\r\n  ...createFootwear('Patrician Shoes', 'common', 0, {\r\n    charisma: 1,\r\n    dexterity: -2,\r\n    luck: 1,\r\n  }),\r\n  level: 0,\r\n  upgrades: [AristocratShoes.id],\r\n}\r\n","import { createFootwear, createHat, createLightArmor } from '../..'\r\nimport { tArmor } from '../../../type'\r\nimport {\r\n  AdventureBoots,\r\n  AdventureCloak,\r\n  AdventureHood,\r\n} from '../level1/adventure'\r\n\r\nexport const RangerHood: tArmor = {\r\n  ...createHat('Ranger Hood', 'common', 0, {\r\n    resistance: 1,\r\n    evasion: 3,\r\n    dexterity: 1,\r\n  }),\r\n  level: 0,\r\n  upgrades: [AdventureHood.id],\r\n}\r\n\r\nexport const RangerCloak: tArmor = {\r\n  ...createLightArmor('Ranger Cloak', 'common', 30, {\r\n    armor: 2,\r\n    evasion: 5,\r\n    dexterity: 2,\r\n    charisma: -2,\r\n  }),\r\n  level: 0,\r\n  upgrades: [AdventureCloak.id],\r\n}\r\n\r\nexport const RangerBoots: tArmor = {\r\n  ...createFootwear('Ranger Boots', 'common', 15, {\r\n    evasion: 2,\r\n    dexterity: 1,\r\n    agility: 1,\r\n  }),\r\n  level: 0,\r\n  upgrades: [AdventureBoots.id],\r\n}\r\n","import { createFootwear, createHat, createLightArmor } from '../..'\r\nimport { tArmor } from '../../../type'\r\nimport {\r\n  AristocratAttire,\r\n  AristocratHat,\r\n  AristocratShoes,\r\n  HarrowedBoots,\r\n  HarrowedCloak,\r\n  HarrowedHood,\r\n} from '../level1'\r\nimport {\r\n  AdventureBoots,\r\n  AdventureCloak,\r\n  AdventureHood,\r\n} from '../level1/adventure'\r\n\r\nexport const ReaperHood: tArmor = {\r\n  ...createHat('Reaper Hood', 'common', 0, {\r\n    armor: 1,\r\n    evasion: 3,\r\n    dexterity: 1,\r\n  }),\r\n  level: 0,\r\n  upgrades: [HarrowedHood.id, AdventureHood.id, AristocratHat.id],\r\n}\r\n\r\nexport const ReaperCloak: tArmor = {\r\n  ...createLightArmor('Reaper Cloak', 'common', 30, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    evasion: 3,\r\n    dexterity: 1,\r\n    criticalChance: 1,\r\n  }),\r\n  level: 0,\r\n  upgrades: [HarrowedCloak.id, AdventureCloak.id, AristocratAttire.id],\r\n}\r\n\r\nexport const ReaperBoots: tArmor = {\r\n  ...createFootwear('Reaper Boots', 'common', 15, {\r\n    criticalChance: 1,\r\n    dexterity: 1,\r\n    agility: 1,\r\n  }),\r\n  level: 0,\r\n  upgrades: [HarrowedBoots.id, AdventureBoots.id, AristocratShoes.id],\r\n}\r\n","import { createFootwear, createMagicArmor, createMagicHat } from '../..'\r\nimport { tArmor } from '../../../type'\r\nimport {\r\n  ApprenticeHat,\r\n  ApprenticeRobes,\r\n  ApprenticeShoes,\r\n} from '../level1/apprentice'\r\n\r\nexport const StudentHat: tArmor = {\r\n  ...createMagicHat('Student Cap', 'common', 0, {\r\n    resistance: 1,\r\n    intelligence: 1,\r\n  }),\r\n  level: 0,\r\n  upgrades: [ApprenticeHat.id],\r\n}\r\n\r\nexport const StudentRobes: tArmor = {\r\n  ...createMagicArmor('Student Robes', 'common', 0, {\r\n    resistance: 2,\r\n    strength: -2,\r\n    intelligence: 2,\r\n  }),\r\n  level: 0,\r\n  upgrades: [ApprenticeRobes.id],\r\n}\r\n\r\nexport const StudentShoes: tArmor = {\r\n  ...createFootwear('Student Shoes', 'common', 0, {\r\n    intelligence: 1,\r\n    strength: -2,\r\n  }),\r\n  level: 0,\r\n  upgrades: [ApprenticeShoes.id],\r\n}\r\n","import { tArmor } from '../../../type'\r\nimport { CorsairAttire, CorsairHat, CorsairShoes } from './corsair'\r\nimport { DrifterHat, DrifterShirt, DrifterShoes } from './drifter'\r\nimport {\r\n  ExecutionerArmor,\r\n  ExecutionerBoots,\r\n  ExecutionerHelmet,\r\n} from './executioner'\r\nimport { MercenaryArmor, MercenaryBoots, MercenaryHelmet } from './mercenary'\r\nimport { PatricianAttire, PatricianHat, PatricianShoes } from './patrician'\r\nimport { RangerBoots, RangerCloak, RangerHood } from './ranger'\r\nimport { ReaperBoots, ReaperCloak, ReaperHood } from './reaper'\r\nimport { StudentHat, StudentRobes, StudentShoes } from './student'\r\n\r\nexport * from './corsair'\r\nexport * from './drifter'\r\nexport * from './executioner'\r\nexport * from './mercenary'\r\nexport * from './patrician'\r\nexport * from './ranger'\r\nexport * from './reaper'\r\nexport * from './student'\r\n\r\nexport const ARMOR_LEVEL_0: tArmor[] = [\r\n  CorsairHat,\r\n  CorsairAttire,\r\n  CorsairShoes,\r\n  DrifterHat,\r\n  DrifterShirt,\r\n  DrifterShoes,\r\n  ExecutionerHelmet,\r\n  ExecutionerArmor,\r\n  ExecutionerBoots,\r\n  MercenaryHelmet,\r\n  MercenaryArmor,\r\n  MercenaryBoots,\r\n  PatricianHat,\r\n  PatricianAttire,\r\n  PatricianShoes,\r\n  RangerHood,\r\n  RangerCloak,\r\n  RangerBoots,\r\n  ReaperHood,\r\n  ReaperCloak,\r\n  ReaperBoots,\r\n  StudentHat,\r\n  StudentRobes,\r\n  StudentShoes,\r\n]\r\n","import { tArmor } from '../../type'\r\nimport { ARMOR_LEVEL_0 } from './level0'\r\nimport { ARMOR_LEVEL_1 } from './level1'\r\nimport { ARMOR_LEVEL_2 } from './level2'\r\nimport { ARMOR_LEVEL_3 } from './level3'\r\nimport { ARMOR_LEVEL_4 } from './level4'\r\n\r\nexport * from './level0'\r\nexport * from './level1'\r\nexport * from './level2'\r\nexport * from './level3'\r\nexport * from './level4'\r\n\r\nexport const ALL_ARMOR: tArmor[] = [\r\n  ...ARMOR_LEVEL_0,\r\n  ...ARMOR_LEVEL_1,\r\n  ...ARMOR_LEVEL_2,\r\n  ...ARMOR_LEVEL_3,\r\n  ...ARMOR_LEVEL_4,\r\n]\r\n\r\nexport const ARMOR_BY_LEVEL: Record<number, tArmor[]> = {\r\n  0: ARMOR_LEVEL_0,\r\n  1: ARMOR_LEVEL_1,\r\n  2: ARMOR_LEVEL_2,\r\n  3: ARMOR_LEVEL_3,\r\n  4: ARMOR_LEVEL_4,\r\n}\r\n\r\nexport const getUpgradeOptions = (armor?: tArmor): tArmor[] => {\r\n  return armor ? ALL_ARMOR.filter((a) => armor.upgrades.includes(a.id)) : []\r\n}\r\n","import { tCharacterClass } from '../Character/type'\r\nimport { BROKEN_SHIELD } from './builders/shields/level_0'\r\nimport {\r\n  CorsairAttire,\r\n  CorsairHat,\r\n  CorsairShoes,\r\n  DrifterHat,\r\n  DrifterShirt,\r\n  DrifterShoes,\r\n  ExecutionerArmor,\r\n  ExecutionerBoots,\r\n  ExecutionerHelmet,\r\n  MercenaryArmor,\r\n  MercenaryBoots,\r\n  MercenaryHelmet,\r\n  PatricianAttire,\r\n  PatricianHat,\r\n  PatricianShoes,\r\n  RangerBoots,\r\n  RangerCloak,\r\n  RangerHood,\r\n  ReaperBoots,\r\n  ReaperCloak,\r\n  ReaperHood,\r\n  StudentHat,\r\n  StudentRobes,\r\n  StudentShoes,\r\n} from './builders/static'\r\nimport { tArmor } from './type'\r\n\r\nexport const CLASS_ARMOR: Record<tCharacterClass, tArmor[]> = {\r\n  executioner: [ExecutionerHelmet, ExecutionerArmor, ExecutionerBoots],\r\n  mercenary: [BROKEN_SHIELD(), MercenaryHelmet, MercenaryArmor, MercenaryBoots],\r\n  ranger: [RangerHood, RangerCloak, RangerBoots],\r\n  reaper: [ReaperHood, ReaperCloak, ReaperBoots],\r\n  student: [StudentHat, StudentRobes, StudentShoes],\r\n  patrician: [PatricianHat, PatricianAttire, PatricianShoes],\r\n  corsair: [BROKEN_SHIELD(), CorsairHat, CorsairAttire, CorsairShoes],\r\n  drifter: [DrifterHat, DrifterShirt, DrifterShoes],\r\n  enemy: [],\r\n}\r\n","import { tConsumable, tConsumableStack } from './type'\r\n\r\nexport const considateConsumableListToStack = (\r\n  consumables: tConsumable[],\r\n): tConsumableStack[] => {\r\n  let stack: tConsumableStack[] = []\r\n  const updateStackItem = (cid: string) =>\r\n    stack.map((s) =>\r\n      s.consumable.cid === cid ? { ...s, count: s.count + 1 } : s,\r\n    )\r\n  const containsId = (cid: string) =>\r\n    stack.map((s) => s.consumable.cid).includes(cid)\r\n  consumables.forEach((c) => {\r\n    if (containsId(c.cid)) {\r\n      stack = updateStackItem(c.cid)\r\n    } else {\r\n      stack = [...stack, { consumable: c, count: 1 }]\r\n    }\r\n  })\r\n  return stack\r\n}\r\n","import { tWeapon } from './type'\r\nimport { ZERO_STATS } from '../Stats/constants'\r\nimport { v4 } from 'uuid'\r\nimport { createSkill } from '../Skill/skills'\r\n\r\nexport const FISTS = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Fists`,\r\n  itemType: 'weapon',\r\n  type: 'hammer',\r\n  rarity: 'common',\r\n  stat: 'vigor',\r\n  twoHand: false,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'melee', value: 4 },\r\n  skills: [createSkill('Punch', 3, 0)],\r\n  immunities: [],\r\n  stats: ZERO_STATS,\r\n  goldValue: 0,\r\n})\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { REMOVE_CURSES } from '../../Skill/skills/consumables'\r\n\r\nconst cid = v4()\r\nexport const CELESTIAL_LOTUS = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Celestial Lotus',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...REMOVE_CURSES,\r\n      consumableId: id,\r\n    },\r\n    goldValue: 30,\r\n  }\r\n}\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { POISON_KNIFE as skill } from '../../Skill/skills/consumables'\r\n\r\nconst cid = v4()\r\nexport const POISON_KNIFE = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Poison Knife',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...skill,\r\n      consumableId: id,\r\n    },\r\n    goldValue: 50,\r\n  }\r\n}\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nconst cid = v4()\r\nexport const BEAST_DRUG = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Beast Drug',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...createSkill('Beast Drug', 0, 0, {\r\n        damage: false,\r\n        targetType: 'self',\r\n        perfectStatus: ['attack-up'],\r\n      }),\r\n      consumableId: id,\r\n    },\r\n    goldValue: 20,\r\n  }\r\n}\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const CURE = createSkill('Cure Potion', 0, 0, {\r\n  damageModifier: 0,\r\n  damage: false,\r\n  targetType: 'self',\r\n  perfectStatus: ['cure'],\r\n})\r\n\r\nconst cid = v4()\r\nexport const CURE_POTION = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Cure Potion',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...CURE,\r\n      consumableId: id,\r\n    },\r\n    goldValue: 20,\r\n  }\r\n}\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nconst cid = v4()\r\nexport const FIREBOMB = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Firebomb',\r\n    itemType: 'consumable',\r\n    rarity: 'rare',\r\n    skill: {\r\n      ...createSkill('Firebomb', 0, 0, {\r\n        weaponDamageOverride: 15,\r\n        perfectStatus: ['burning'],\r\n      }),\r\n      consumableId: id,\r\n    },\r\n    goldValue: 100,\r\n  }\r\n}\r\n","import { tItemRarity } from './type'\r\nimport { tCharacterClass } from '../Character/type'\r\nimport { tConsumable } from '../Consumable/type'\r\nimport { tArmorResourceType } from '../Armor/type'\r\nimport { GODSBEARD } from '../Consumable/objects/godsbeard'\r\nimport { CELESTIAL_LOTUS } from '../Consumable/objects/celestial_lotus'\r\nimport { POISON_KNIFE } from '../Consumable/objects/poison_knife'\r\nimport { BEAST_DRUG } from '../Consumable/objects/beast_drug'\r\nimport { CURE_POTION } from '../Consumable/objects/curing_potion'\r\nimport { FIREBOMB } from '../Consumable/objects/firebomb'\r\n\r\nexport const ITEM_RARITY_COLORS: Record<tItemRarity, string> = {\r\n  common: 'rgba(255, 255, 255,1)',\r\n  uncommon: '#5cb574',\r\n  rare: 'rgba(128,181,255,1)',\r\n  epic: 'rgba(213, 128, 255,1)',\r\n  mythic: 'rgb(255,160,122,1)',\r\n}\r\n\r\nexport const CLASS_STARTING_CONSUMABLES: Record<\r\n  tCharacterClass,\r\n  tConsumable[]\r\n> = {\r\n  executioner: [GODSBEARD(), BEAST_DRUG()],\r\n  mercenary: [GODSBEARD(), CURE_POTION()],\r\n  ranger: [GODSBEARD(), POISON_KNIFE()],\r\n  reaper: [GODSBEARD(), FIREBOMB()],\r\n  student: [GODSBEARD(), CELESTIAL_LOTUS()],\r\n  patrician: [GODSBEARD(), CURE_POTION()],\r\n  corsair: [GODSBEARD(), GODSBEARD()],\r\n  drifter: [GODSBEARD(), GODSBEARD()],\r\n  enemy: [],\r\n}\r\n\r\nexport const CHARACTER_RESOURCES: tArmorResourceType[] = [\r\n  'offhand',\r\n  'body',\r\n  'head',\r\n  'feet',\r\n  'pendant',\r\n  'ring',\r\n]\r\n","import { tCharacter, tProcessedCharacter, tCharacterClass } from './type'\r\nimport { tStats, tBaseStats } from '../Stats/type'\r\nimport { capStats, combineStats } from '../Stats/util'\r\nimport { tSkill } from '../Skill/type'\r\nimport { CLASS_STATS } from '../Stats/constants'\r\nimport { tStatusType } from '../Status/type'\r\nimport { STATUS_CONFIG } from '../Status/constants'\r\nimport { v4 } from 'uuid'\r\nimport { tDamage } from '../Damage/type'\r\nimport { noneg } from '../../util/noneg'\r\nimport { CLASS_WEAPONS } from '../Weapon/constants'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { tArmorResourceType, tArmor } from '../Armor/type'\r\nimport { resolveCheck } from '../Roll/util'\r\nimport { CLASS_ARMOR } from '../Armor/constants'\r\nimport { considateConsumableListToStack } from '../Consumable/util'\r\nimport { CHARACTER_XP_MAX } from './constants'\r\nimport { tEncounterReward } from '../Encounter/type'\r\nimport { FISTS } from '../Weapon/fists'\r\nimport { CLASS_STARTING_CONSUMABLES } from '../Item/constants'\r\nimport { makeRandom } from '../../util/makeRandom'\r\n\r\nexport const isCharacter = (obj: any): boolean =>\r\n  obj !== undefined && obj.isCharacter !== undefined\r\n\r\nexport const checkForProcessedCharacter = (character: tCharacter) => {\r\n  if ((character as tProcessedCharacter).processed) {\r\n    throw new Error('No Processed Characters Allowed')\r\n  }\r\n}\r\n\r\nexport const makeCharacter = (characterClass: tCharacterClass): tCharacter => {\r\n  return {\r\n    isCharacter: true,\r\n    id: v4(),\r\n    name: '',\r\n    partyId: '',\r\n    level: 0,\r\n    experience: 0,\r\n    class: characterClass,\r\n\r\n    stats: CLASS_STATS[characterClass],\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n\r\n    tags: [],\r\n\r\n    weapon: CLASS_WEAPONS[characterClass],\r\n    armor: CLASS_ARMOR[characterClass],\r\n    consumables: CLASS_STARTING_CONSUMABLES[characterClass],\r\n\r\n    status: [],\r\n    immunities: [],\r\n    possibleRewards: [],\r\n  }\r\n}\r\n\r\nexport const getSkills = (character: tCharacter): tSkill[] => {\r\n  return [\r\n    ...(character.weapon || FISTS()).skills,\r\n    ...character.armor.reduce((r, a) => [...r, ...a.skills], [] as tSkill[]),\r\n    ...considateConsumableListToStack(character.consumables).reduce(\r\n      (r, s) => [...r, s.consumable.skill],\r\n      [] as tSkill[],\r\n    ),\r\n  ]\r\n}\r\n\r\nexport const processCharacter = (\r\n  character: tCharacter,\r\n): tProcessedCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const stats: tStats = capStats(\r\n    combineStats(\r\n      character.stats,\r\n      (character.weapon || FISTS()).stats,\r\n      ...character.armor.map((a) => a.stats),\r\n      ...character.status.map((s) => s.stats),\r\n    ),\r\n  )\r\n  const skills = getSkills(character)\r\n  const statusImmunities = character.status.reduce(\r\n    (r, s) => [...r, ...s.immunities],\r\n    [] as tStatusType[],\r\n  )\r\n  const immunities = [\r\n    ...character.immunities,\r\n    ...(character?.weapon?.immunities || []),\r\n    ...character.armor.reduce(\r\n      (r, a) => [...r, ...a.immunities],\r\n      [] as tStatusType[],\r\n    ),\r\n    ...statusImmunities,\r\n  ]\r\n  const baseVigor = CLASS_STATS[character.class].vigor || character.stats.vigor\r\n  const startingHealth = 25 + Math.floor(0.1 * baseVigor)\r\n  const maxHealth =\r\n    Math.floor(\r\n      startingHealth + character.level + 0.1 * character.level * stats.vigor,\r\n    ) + stats.maxHealthOffset\r\n  const health = maxHealth - character.healthOffset\r\n  const maxInspiration = 3 + stats.maxInspirationOffset\r\n  const inspiration = maxInspiration + character.inspirationOffset\r\n\r\n  return {\r\n    processed: true,\r\n    ...character,\r\n\r\n    health,\r\n    maxHealth,\r\n    inspiration,\r\n    maxInspiration,\r\n\r\n    weapon: character.weapon || FISTS(),\r\n    stats,\r\n    immunities,\r\n    rawStats: character.stats,\r\n    skills,\r\n  }\r\n}\r\n\r\nexport const getBaseStatValue = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n  offset: number = 0,\r\n) => {\r\n  return character.stats[key] + offset\r\n}\r\n\r\nexport const getDamageResistance = (\r\n  character: tProcessedCharacter,\r\n  damage: tDamage,\r\n) => {\r\n  if (damage.type === 'physical') return character.stats.armor\r\n  if (damage.type === 'magic') return character.stats.resistance\r\n  return 0\r\n}\r\nexport const hasStatus = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.status.map((s) => s.type).includes(statusType)\r\n}\r\nexport const hasAnyStatus = (\r\n  character: tCharacter,\r\n  statusTypes: tStatusType[],\r\n) => {\r\n  return statusTypes.some((type) => hasStatus(character, type))\r\n}\r\nexport const findStatus = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.status.find((s) => s.type === statusType)\r\n}\r\nexport const hasImmunity = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.immunities.includes(statusType)\r\n}\r\nexport const getReflectedDamage = (target: tCharacter, rawDamage: tDamage) => {\r\n  return {\r\n    ...rawDamage,\r\n    value: target.stats.damageReflection[rawDamage.range],\r\n  }\r\n}\r\nexport const getRawDamage = (\r\n  source: tProcessedCharacter,\r\n  target: tProcessedCharacter,\r\n  rawDamage: tDamage,\r\n): tDamage => {\r\n  let damageModifier = 1\r\n  target.tags.forEach((tag) => {\r\n    if (source.stats.damageModifiers[tag]) {\r\n      damageModifier += source.stats.damageModifiers[tag]\r\n    }\r\n  })\r\n  return {\r\n    ...rawDamage,\r\n    value: rawDamage.value * damageModifier,\r\n  }\r\n}\r\n\r\nexport const commitDamage = (\r\n  character: tCharacter,\r\n  damage: tDamage,\r\n  ignoreResistance: boolean,\r\n): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const pc = processCharacter(character)\r\n  const resistance = ignoreResistance ? 0 : getDamageResistance(pc, damage)\r\n  const damageTakenModifier =\r\n    pc.stats.damageTakenModifier +\r\n    pc.stats.damageTakenRangeModifiers[damage.range]\r\n  const rawDamageValue = damage.value * damageTakenModifier\r\n  if (hasStatus(character, 'protected')) {\r\n    return {\r\n      ...character,\r\n      status: character.status.filter((s) => s.type !== 'protected'),\r\n    }\r\n  }\r\n  return {\r\n    ...character,\r\n    healthOffset: Math.ceil(\r\n      character.healthOffset + noneg(rawDamageValue - resistance),\r\n    ),\r\n  }\r\n}\r\n\r\nexport const decrementStatusDurations = (character: tCharacter): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    status: character.status\r\n      .map((status) => ({ ...status, duration: status.duration - 1 }))\r\n      .filter((status) => status.duration !== 0),\r\n  }\r\n}\r\nexport const addStatus = (\r\n  character: tCharacter,\r\n  type: tStatusType,\r\n  durationOverride?: number,\r\n): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const statusConfig = STATUS_CONFIG[type]\r\n  const existingStatus = findStatus(character, type)\r\n  if (hasImmunity(processCharacter(character), type)) {\r\n    return character\r\n  }\r\n  if (existingStatus && !statusConfig.canStack) {\r\n    return character\r\n  }\r\n  if (existingStatus && statusConfig.canStack) {\r\n    return {\r\n      ...character,\r\n      status: [\r\n        ...character.status.filter((s) => s.type !== type),\r\n        { ...existingStatus, stack: existingStatus.stack + 1 },\r\n      ],\r\n    }\r\n  }\r\n  return {\r\n    ...character,\r\n    status: [\r\n      ...character.status,\r\n      {\r\n        type,\r\n        stats: statusConfig.stats,\r\n        immunities: statusConfig.immunities,\r\n        duration: durationOverride || statusConfig.duration,\r\n        stack: 1,\r\n      },\r\n    ],\r\n  }\r\n}\r\n\r\nexport const addMultipleStatus = (\r\n  character: tCharacter,\r\n  types: tStatusType[],\r\n): tCharacter => {\r\n  return types.reduce((result, type) => {\r\n    return addStatus(result, type)\r\n  }, character)\r\n}\r\n\r\nexport const checkStatus = (character: tCharacter) => {\r\n  checkForProcessedCharacter(character)\r\n  let c = { ...character }\r\n  character.status.forEach((status) => {\r\n    if (hasImmunity(processCharacter(character), status.type)) {\r\n      c = {\r\n        ...c,\r\n        status: c.status.filter((c) => c.type !== status.type),\r\n      }\r\n    }\r\n  })\r\n  return c\r\n}\r\n\r\nexport const removeTemporaryStatus = (character: tCharacter): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    status: character.status.filter((s) => {\r\n      const config = STATUS_CONFIG[s.type]\r\n      return !config.isTemporary\r\n    }),\r\n  }\r\n}\r\n\r\nexport const equipArmor = (\r\n  character: tCharacter,\r\n  armor: tArmor,\r\n): { character: tCharacter; armor: tArmor | undefined } => {\r\n  checkForProcessedCharacter(character)\r\n  const existingArmor = character.armor.find(\r\n    (a) => a.resource === armor.resource,\r\n  )\r\n  return {\r\n    character: {\r\n      ...character,\r\n      armor: existingArmor\r\n        ? [...character.armor.filter((a) => a.id !== existingArmor.id), armor]\r\n        : [...character.armor, armor],\r\n    },\r\n    armor: existingArmor,\r\n  }\r\n}\r\n\r\nexport const unequipArmor = (\r\n  character: tCharacter,\r\n  resource: tArmorResourceType,\r\n): { character: tCharacter; armor: tArmor | undefined } => {\r\n  checkForProcessedCharacter(character)\r\n  const armor = character.armor.find((a) => a.resource === resource)\r\n  return {\r\n    character: {\r\n      ...character,\r\n      armor: character.armor.filter((a) => a.resource !== resource),\r\n    },\r\n    armor,\r\n  }\r\n}\r\n\r\nexport const equipWeapon = (\r\n  character: tCharacter,\r\n  weapon: tWeapon,\r\n): { character: tCharacter; weapon: tWeapon | undefined } => {\r\n  const existingWeapon = character.weapon\r\n  return {\r\n    character: {\r\n      ...character,\r\n      weapon,\r\n    },\r\n    weapon: existingWeapon,\r\n  }\r\n}\r\n\r\n// DO NOT USE\r\nexport const unequipWeapon = (\r\n  character: tCharacter,\r\n): { character: tCharacter; weapon: tWeapon | undefined } => {\r\n  const existingWeapon = character.weapon\r\n  return {\r\n    character: {\r\n      ...character,\r\n      // weapon: undefined\r\n    },\r\n    weapon: existingWeapon,\r\n  }\r\n}\r\n\r\nexport const getRewardsFromCharacter = (\r\n  character: tCharacter,\r\n  checkedCharacter?: tProcessedCharacter,\r\n): tEncounterReward[] => {\r\n  let index: number = 0\r\n  let failed = false\r\n  if (character.possibleRewards.length === 1)\r\n    return [character.possibleRewards[0]]\r\n  character.possibleRewards.forEach((rewards, i) => {\r\n    const luckReslt = checkedCharacter\r\n      ? resolveCheck(checkedCharacter, 'luck')\r\n      : makeRandom(100) > 50\r\n    if (luckReslt && !failed) {\r\n      index = i\r\n    } else {\r\n      failed = true\r\n    }\r\n  })\r\n  return character.possibleRewards[index]\r\n    ? [character.possibleRewards[index]]\r\n    : []\r\n}\r\n\r\nexport const addExperience = (\r\n  character: tCharacter,\r\n  xp: number,\r\n): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const xpToNextLevel = CHARACTER_XP_MAX[character.level]\r\n  const experience = character.experience + xp\r\n  if (experience > xpToNextLevel) {\r\n    return addExperience(\r\n      levelUp({\r\n        ...character,\r\n        experience,\r\n      }),\r\n      0,\r\n    )\r\n  }\r\n  return {\r\n    ...character,\r\n    experience,\r\n  }\r\n}\r\n\r\nexport const levelUp = (character: tCharacter): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const experience = character.experience - CHARACTER_XP_MAX[character.level]\r\n  const pc = processCharacter(character)\r\n  return {\r\n    ...character,\r\n    level: character.level + 1,\r\n    healthOffset: noneg(\r\n      Math.floor(character.healthOffset / 1.5) -\r\n        pc.stats.consumableHealthGainOffset,\r\n    ),\r\n    experience,\r\n    status: character.status.filter((s) => s.type !== 'poisoned'),\r\n  }\r\n}\r\n","import { tParty, tProcessedParty } from './type'\r\nimport {\r\n  checkForProcessedCharacter,\r\n  processCharacter,\r\n  getRewardsFromCharacter,\r\n  addExperience,\r\n  addMultipleStatus,\r\n} from '../Character/util'\r\nimport { tCharacter, tProcessedCharacter } from '../Character/type'\r\nimport { v4 } from 'uuid'\r\nimport { getRandom } from '../../util'\r\nimport { tEncounterReward } from '../Encounter/type'\r\nimport { tArmor } from '../Armor/type'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { tConsumable } from '../Consumable/type'\r\nimport { FLOOR_CONFIGS_BY_ID, FLOOR_SIZE } from '../Encounter/floors'\r\nimport { makeRandom } from '../../util/makeRandom'\r\n\r\nexport const isParty = (obj: any): boolean =>\r\n  obj !== undefined && obj.isParty !== undefined\r\n\r\nexport const checkForProcessedParty = (party: tParty) => {\r\n  if ((party as tProcessedParty).processed) {\r\n    throw new Error('No Processed Parties Allowed')\r\n  }\r\n  party.characters.forEach((character) => {\r\n    checkForProcessedCharacter(character)\r\n  })\r\n}\r\n\r\nexport const findCharacterInParty = <\r\n  T extends tParty = tParty,\r\n  R extends tCharacter = tCharacter\r\n>(\r\n  party: T,\r\n  id: string,\r\n): R | undefined => {\r\n  return (party.characters as R[]).find((c) => c.id === id)\r\n}\r\n\r\nexport const getOtherCharacters = (\r\n  party: tParty,\r\n  characterId: string,\r\n): tCharacter[] => party.characters.filter((c) => c.id !== characterId)\r\n\r\nexport const processParty = (party: tParty): tProcessedParty => {\r\n  checkForProcessedParty(party)\r\n  return {\r\n    ...party,\r\n    processed: true,\r\n    characters: party.characters.map((c) => ({\r\n      ...processCharacter(c),\r\n      partyId: party.id,\r\n    })),\r\n  }\r\n}\r\n\r\nexport const updateCharacter = (\r\n  party: tParty,\r\n  characterId: string,\r\n  updater: (character: tCharacter) => tCharacter,\r\n): tParty => {\r\n  checkForProcessedParty(party)\r\n  return {\r\n    ...party,\r\n    characters: party.characters.map((c) =>\r\n      c.id === characterId ? updater(c) : c,\r\n    ),\r\n  }\r\n}\r\n\r\nexport const makeParty = (\r\n  depth: number,\r\n  floorId: string,\r\n  isElite: boolean,\r\n  sideIndex: number,\r\n): tParty => {\r\n  const config = FLOOR_CONFIGS_BY_ID()[floorId]\r\n  const roll = makeRandom(FLOOR_SIZE, 1) - 1\r\n  const enemies = isElite\r\n    ? config.eliteEnemies\r\n    : sideIndex > roll\r\n    ? config.altEnemies\r\n    : config.enemies\r\n\r\n  return {\r\n    isParty: true,\r\n    id: v4(),\r\n    gold: 0,\r\n    items: [],\r\n    characters: getRandom(enemies[depth] || []),\r\n  }\r\n}\r\n\r\nexport const makeBossParty = (floorId: string, sideIndex: number): tParty => {\r\n  const config = FLOOR_CONFIGS_BY_ID()[floorId]\r\n  const roll = makeRandom(FLOOR_SIZE, 1)\r\n  const bosses = roll >= sideIndex ? config.bosses : config.altBosses\r\n  return {\r\n    isParty: true,\r\n    id: v4(),\r\n    gold: 0,\r\n    items: [],\r\n    characters: [getRandom(bosses)],\r\n  }\r\n}\r\n\r\nexport const getRolledRewards = (\r\n  party: tProcessedParty,\r\n  checkedCharacter: tProcessedCharacter,\r\n): tEncounterReward[] => {\r\n  return party.characters.reduce((r, character) => {\r\n    return [...r, ...getRewardsFromCharacter(character, checkedCharacter)]\r\n  }, [] as tEncounterReward[])\r\n}\r\n\r\nexport const commitRewards = (\r\n  party: tParty,\r\n  rewards: tEncounterReward,\r\n): tParty => {\r\n  checkForProcessedParty(party)\r\n  const goldMultiplier =\r\n    1 +\r\n    processParty(party).characters.reduce(\r\n      (r, c) => (r > c.stats.goldModifier ? r : c.stats.goldModifier),\r\n      0,\r\n    ) /\r\n      100\r\n  return {\r\n    ...party,\r\n    gold: party.gold + Math.floor(rewards.gold * goldMultiplier),\r\n    items: [\r\n      ...party.items,\r\n      ...(rewards.items.filter((i) => i.itemType !== 'consumable') as (\r\n        | tArmor\r\n        | tWeapon\r\n      )[]),\r\n    ],\r\n    characters: party.characters.map((c) =>\r\n      addMultipleStatus(\r\n        addExperience(\r\n          {\r\n            ...c,\r\n            consumables: [\r\n              ...c.consumables,\r\n              ...(rewards.items.filter(\r\n                (i) => i.itemType === 'consumable',\r\n              ) as tConsumable[]),\r\n            ],\r\n          },\r\n          rewards.xp,\r\n        ),\r\n        rewards.status,\r\n      ),\r\n    ),\r\n  }\r\n}\r\n","import { v4 } from 'uuid'\r\n\r\nexport const PLAYER_PARTY_ID = v4()\r\n","import { useSelector } from 'react-redux'\r\nimport { StateCoreT, StateActionT, StateT } from '../types'\r\nimport { Dispatch } from 'redux'\r\nimport { makeReducer } from '../util'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { checkForProcessedParty, updateCharacter } from '../../game/Party/util'\r\nimport { tCharacter } from '../../game/Character/type'\r\nimport { makeCharacter, addMultipleStatus } from '../../game/Character/util'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\n\r\nexport const UPDATE_PARTY = '@actions/parties/set-party'\r\nexport const UPSERT_CHARACTER = '@actions/parties/upsert-character'\r\nexport const DELETE_CHARACTER = '@actions/parties/delete-character'\r\nexport const UPSERT_ITEM = '@actions/parties/upsert-item'\r\nexport const SET_GOLD = '@actions/parties/set-gold'\r\n\r\nexport const actionCreators = {\r\n  updateParty: (party: tParty): StateActionT => {\r\n    return {\r\n      type: UPDATE_PARTY,\r\n      payload: {\r\n        party,\r\n      },\r\n    }\r\n  },\r\n  upsertCharacter: (character: tCharacter): StateActionT => {\r\n    return {\r\n      type: UPSERT_CHARACTER,\r\n      payload: {\r\n        character,\r\n      },\r\n    }\r\n  },\r\n  deleteCharacter: (characterId: string): StateActionT => {\r\n    return {\r\n      type: DELETE_CHARACTER,\r\n      payload: {\r\n        characterId,\r\n      },\r\n    }\r\n  },\r\n  upsertItem: (item: tArmor | tWeapon): StateActionT => {\r\n    return {\r\n      type: UPSERT_ITEM,\r\n      payload: {\r\n        item,\r\n      },\r\n    }\r\n  },\r\n  setGold: (gold: number): StateActionT => {\r\n    return {\r\n      type: SET_GOLD,\r\n      payload: {\r\n        gold,\r\n      },\r\n    }\r\n  },\r\n}\r\n\r\nexport const actions = {\r\n  updateParty: (party: tParty) => (dispatch: Dispatch) => {\r\n    checkForProcessedParty(party)\r\n    dispatch(actionCreators.updateParty(party))\r\n  },\r\n  upsertCharacter: (character: tCharacter) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.upsertCharacter(character))\r\n  },\r\n  deleteCharacter: (characterId: string) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.deleteCharacter(characterId))\r\n  },\r\n  upsertItem: (item: tArmor | tWeapon) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.upsertItem(item))\r\n  },\r\n  setGold: (gold: number) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.setGold(gold))\r\n  },\r\n}\r\n\r\nexport const core: StateCoreT<tParty> = {\r\n  [UPDATE_PARTY]: (state, action) => {\r\n    return {\r\n      ...action.payload.party,\r\n    }\r\n  },\r\n  [UPSERT_CHARACTER]: (state, action) => {\r\n    return updateCharacter(\r\n      state,\r\n      action.payload.character.id,\r\n      (c) => action.payload.character,\r\n    )\r\n  },\r\n  [DELETE_CHARACTER]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      characters: state.characters.filter(\r\n        (c) => c.id !== action.payload.characterId,\r\n      ),\r\n    }\r\n  },\r\n  [UPSERT_ITEM]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      items: [\r\n        ...state.items.filter((item) => item.id !== action.payload.item.id),\r\n        action.payload.item,\r\n      ],\r\n    }\r\n  },\r\n  [SET_GOLD]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      gold: action.payload.gold,\r\n    }\r\n  },\r\n}\r\nconst jack = { ...makeCharacter('executioner'), name: 'Jack' }\r\nconst jim = { ...makeCharacter('patrician'), name: 'Jim' }\r\nconst john = { ...makeCharacter('student'), name: 'Johnny' }\r\nexport const INITIAL_STATE: tParty = {\r\n  isParty: true,\r\n  id: PLAYER_PARTY_ID,\r\n  items: [],\r\n  gold: 200,\r\n  characters: [\r\n    addMultipleStatus(\r\n      {\r\n        ...jack,\r\n        // healthOffset: 30,\r\n      },\r\n      [\r\n        /*\r\n        'frozen',\r\n        'bleeding',\r\n        'burning',\r\n        'poisoned',\r\n        'stunned',\r\n        'speed-down',\r\n        'targeted',\r\n        'evasive',\r\n        'armor-down',\r\n        */\r\n      ],\r\n    ),\r\n    addMultipleStatus(\r\n      {\r\n        ...jim,\r\n        //healthOffset: 30\r\n      },\r\n      [],\r\n    ),\r\n    {\r\n      ...john,\r\n      //healthOffset: 30\r\n    },\r\n  ],\r\n}\r\nexport default makeReducer(core, INITIAL_STATE)\r\nexport const useParty = () => useSelector((state: StateT) => state.party)\r\nexport const usePartyActions = () =>\r\n  useActions(actions) as {\r\n    updateParty: (party: tParty) => void\r\n    upsertCharacter: (character: tCharacter) => void\r\n    deleteCharacter: (characterId: string) => void\r\n    upsertItem: (item: tArmor | tWeapon) => void\r\n    setGold: (gold: number) => void\r\n  }\r\n","import { tEncounterReward } from '../Encounter/type'\r\nimport { ZERO_REWARD } from '../Encounter/constants'\r\n\r\nexport const consolidateRewards = (\r\n  rewards: tEncounterReward[],\r\n): tEncounterReward => {\r\n  return rewards.reduce((res, reward) => {\r\n    return {\r\n      gold: res.gold + reward.gold,\r\n      xp: res.xp + reward.xp,\r\n      items: [...res.items, ...reward.items],\r\n      status: [...res.status, ...reward.status],\r\n      immunities: [...res.immunities, ...reward.immunities],\r\n    }\r\n  }, ZERO_REWARD)\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { HexT } from '../../grid/types'\r\nimport { CENTER_HEX, getDepth, isValueEqual, MIN_HEX } from '../../grid/util'\r\nimport { getRandom, noneg } from '../../util'\r\nimport { makeRandom } from '../../util/makeRandom'\r\nimport { getRewardsFromCharacter } from '../Character/util'\r\nimport { BEAST_DRUG } from '../Consumable/objects/beast_drug'\r\nimport { CELESTIAL_LOTUS } from '../Consumable/objects/celestial_lotus'\r\nimport { CURE_POTION } from '../Consumable/objects/curing_potion'\r\nimport { FIREBOMB } from '../Consumable/objects/firebomb'\r\nimport { GODSBEARD } from '../Consumable/objects/godsbeard'\r\nimport { POISON_KNIFE } from '../Consumable/objects/poison_knife'\r\nimport { consolidateRewards } from '../Other/util'\r\nimport { makeBossParty, makeParty } from '../Party/util'\r\nimport { tBaseStats } from '../Stats/type'\r\nimport { POSSIBLE_SHINE_REWARDS } from './constants'\r\nimport { FLOOR_CONFIGS_BY_ID, FLOOR_SIZE } from './floors'\r\nimport {\r\n  tBossEncounter,\r\n  tCombatEncounter,\r\n  tEncounter,\r\n  tEncounterType,\r\n  tRewardEncounter,\r\n  tShopEncounter,\r\n  tShrineEncounter,\r\n} from './type'\r\nimport { getItemCost, makeEncounter } from './util'\r\n\r\nexport const buildRandomEncounterType = (\r\n  hex: HexT,\r\n  depth: number,\r\n  isShop: boolean,\r\n): tEncounterType => {\r\n  const isStart = isValueEqual(hex, MIN_HEX(FLOOR_SIZE))\r\n  const isSide = hex.q === 0 || hex.q - 1 === depth\r\n  const isCenter = isValueEqual(hex, CENTER_HEX(FLOOR_SIZE))\r\n  const isEnd = depth === FLOOR_SIZE - 1\r\n  const roll = makeRandom(100, 1)\r\n  if (isStart) return 'smith'\r\n  if (isEnd) return 'boss'\r\n  if (isCenter) return 'reward'\r\n  if (isShop) return 'shop'\r\n  if (isSide) return 'combat'\r\n  if (roll >= 96) return 'reward'\r\n  if (roll >= 84) return 'shrine'\r\n  return 'combat'\r\n}\r\n\r\nexport const buildRandomEncounter = (\r\n  floorId: string,\r\n  hex: HexT,\r\n  isShop: boolean,\r\n): tEncounter | undefined => {\r\n  const isStart = isValueEqual(hex, MIN_HEX(FLOOR_SIZE))\r\n  const depth = getDepth(hex, FLOOR_SIZE)\r\n  const type = buildRandomEncounterType(hex, depth, isShop)\r\n  const isSide = hex.q === 0 || hex.q - 1 === depth\r\n  let encounter = makeEncounter(type)\r\n  if (type === 'combat') {\r\n    encounter = {\r\n      ...buildCombatEncounter(encounter, depth, floorId, hex),\r\n      blocking:\r\n        (!isSide || depth !== FLOOR_SIZE - 2) &&\r\n        depth !== 0 &&\r\n        makeRandom(100) > 90,\r\n    }\r\n  }\r\n  if (type === 'boss') {\r\n    encounter = buildBossEncounter(encounter, floorId, hex)\r\n  }\r\n  if (type === 'reward') {\r\n    encounter = buildRewardEncounter(encounter, floorId)\r\n  }\r\n  if (encounter.type === 'shop') {\r\n    encounter = buildShopEncounter(encounter, floorId)\r\n  }\r\n  if (encounter.type === 'shrine') {\r\n    encounter = buildShrineEncounter(encounter)\r\n  }\r\n\r\n  return encounter\r\n}\r\n\r\nexport const buildCombatEncounter = (\r\n  encounter: tEncounter,\r\n  depth: number,\r\n  floorId: string,\r\n  hex: HexT,\r\n): tCombatEncounter => {\r\n  const isSide = hex.q === 0 || hex.q - 1 === depth\r\n  const isElite = makeRandom(100) > 92 && !isSide\r\n  return {\r\n    ...encounter,\r\n    isElite,\r\n    party: makeParty(noneg(depth), floorId, isElite, hex.q),\r\n  }\r\n}\r\n\r\nexport const buildBossEncounter = (\r\n  encounter: tEncounter,\r\n  floorId: string,\r\n  hex: HexT,\r\n): tBossEncounter => {\r\n  return {\r\n    ...encounter,\r\n    boss: true,\r\n    isElite: false,\r\n    party: makeBossParty(floorId, hex.q),\r\n  }\r\n}\r\n\r\nexport const buildRewardEncounter = (\r\n  encounter: tEncounter,\r\n  floorId: string,\r\n): tRewardEncounter => {\r\n  const config = FLOOR_CONFIGS_BY_ID()[floorId]\r\n  return {\r\n    ...encounter,\r\n    isMimic: makeRandom(10) > 6,\r\n    // chunk this out by floor\r\n    reward: consolidateRewards(getRewardsFromCharacter(config.mimic())),\r\n    isOpened: false,\r\n    isElite: true,\r\n    party: {\r\n      ...makeParty(0, floorId, false, 0),\r\n      characters: [config.mimic()],\r\n    },\r\n  }\r\n}\r\n\r\nexport const buildShopEncounter = (\r\n  encounter: tEncounter,\r\n  floorId: string,\r\n): tShopEncounter => {\r\n  const config = FLOOR_CONFIGS_BY_ID()[floorId]\r\n  const items = [\r\n    GODSBEARD(),\r\n    CELESTIAL_LOTUS(),\r\n    CURE_POTION(),\r\n    FIREBOMB(),\r\n    POISON_KNIFE(),\r\n    BEAST_DRUG(),\r\n    ...config.items,\r\n  ]\r\n  return {\r\n    ...encounter,\r\n    items,\r\n    costs: items.reduce((r, i) => {\r\n      return {\r\n        ...r,\r\n        [i.id]: getItemCost(i),\r\n      }\r\n    }, {}),\r\n  }\r\n}\r\n\r\nexport const buildShrineEncounter = (\r\n  encounter: tEncounter,\r\n): tShrineEncounter => {\r\n  const stat: keyof tBaseStats = getRandom<keyof tBaseStats>([\r\n    'vigor',\r\n    'strength',\r\n    'dexterity',\r\n    'intelligence',\r\n    'charisma',\r\n    'luck',\r\n  ])\r\n  const rewards = getRandom(POSSIBLE_SHINE_REWARDS())\r\n  return {\r\n    ...encounter,\r\n    stat,\r\n    offset: 0,\r\n    rolls: rewards.length,\r\n    results: rewards,\r\n  }\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { buildRandomEncounter } from '../game/Encounter/builders'\r\nimport { noneg } from '../util'\r\nimport { makeRandom } from '../util/makeRandom'\r\nimport { EncounterArrayT, HexT } from './types'\r\n\r\nexport const makeHex = (q: number, r: number): HexT => ({\r\n  id: v4(),\r\n  q,\r\n  r,\r\n  s: q * -1 - r,\r\n})\r\n\r\nexport const ZERO_HEX = (): HexT => makeHex(0, 0)\r\nexport const MIN_HEX = (size: number): HexT => makeHex(0, size)\r\nexport const CENTER_HEX = (size: number): HexT => {\r\n  const q = Math.ceil(size / 2) - 2\r\n  const r = Math.ceil(size / 2) - 1\r\n  return makeHex(q, r)\r\n}\r\n\r\nexport const isEqual = (a: HexT, b: HexT) => a.id === b.id\r\nexport const isValueEqual = (a: HexT, b: HexT) =>\r\n  a.q === b.q && a.r === b.r && a.s === b.s\r\n\r\nexport const addHex = (a: HexT, b: HexT): HexT => ({\r\n  ...a,\r\n  q: a.q + b.q,\r\n  r: a.r + b.r,\r\n  s: a.s + b.s,\r\n})\r\n\r\nexport const multHex = (a: HexT, m: number) => ({\r\n  ...a,\r\n  q: a.q * m,\r\n  r: a.r * m,\r\n  s: a.s * m,\r\n})\r\n\r\nexport const getDepth = (hex: HexT, size: number): number => {\r\n  return noneg(size - hex.r - 1)\r\n}\r\n\r\nexport const makeEncounterArray = (\r\n  size: number,\r\n  floorId: string,\r\n): EncounterArrayT => {\r\n  let index = 0\r\n  const minQ = 0\r\n  const maxQ = size\r\n  const minR = 0\r\n  const maxR = size\r\n  const shopIndex = makeRandom(55, 1)\r\n  let result: EncounterArrayT = {}\r\n  for (let q = minQ; q <= maxQ; q++) {\r\n    result[q] = {}\r\n    for (let r = maxR; r >= minR; r--) {\r\n      const hex = makeHex(q, r)\r\n      const ri = maxR - r\r\n      result[q][r] = {}\r\n      if (q > ri) continue\r\n      const e = buildRandomEncounter(floorId, hex, index === shopIndex)\r\n      result[q][r][hex.s] = e\r\n      index++\r\n    }\r\n  }\r\n  return result\r\n}\r\n\r\nexport const HEX_DIRECTIONS: HexT[] = [\r\n  makeHex(1, 0),\r\n  makeHex(1, -1),\r\n  makeHex(0, -1),\r\n  makeHex(-1, 0),\r\n  makeHex(-1, 1),\r\n  makeHex(0, 1),\r\n]\r\nexport const isAdjacent = (current: HexT | undefined) => (\r\n  hex: HexT,\r\n): boolean => {\r\n  if (!current) return false\r\n  return HEX_DIRECTIONS.some((dir) => {\r\n    const h = addHex(hex, dir)\r\n    return isValueEqual(h, current)\r\n  })\r\n}\r\n\r\nexport const getAdjacent = (hex: HexT): HexT[] =>\r\n  HEX_DIRECTIONS.map((dir) => addHex(hex, dir))\r\n","import { v4 } from 'uuid'\r\nimport { tEncounterType, tFloor2 } from './type'\r\nimport { tArmor } from '../Armor/type'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { tConsumable } from '../Consumable/type'\r\nimport { makeEncounterArray } from '../../grid/util'\r\nimport { ZERO_REWARD } from './constants'\r\nimport { FLOOR_NAMES } from './floors'\r\n\r\nexport const getItemCost = (item: tArmor | tWeapon | tConsumable): number => {\r\n  return item.goldValue * 3\r\n}\r\n\r\nexport const makeEncounter = (type: tEncounterType) => ({\r\n  id: v4(),\r\n  name: '',\r\n  type,\r\n  reward: ZERO_REWARD,\r\n  completed: false,\r\n  seen: false,\r\n  blocking: false,\r\n})\r\n\r\nexport const makeFloor2 = (\r\n  id: string,\r\n  depth: number,\r\n  size: number,\r\n): tFloor2 => {\r\n  let name = FLOOR_NAMES[id]\r\n  return {\r\n    id,\r\n    name,\r\n    depth,\r\n    size: size,\r\n    encounters: makeEncounterArray(size, id),\r\n  }\r\n}\r\n","import { StateCoreT, StateT, StateActionT } from '../types'\r\nimport { makeReducer } from '../util'\r\nimport { useSelector } from 'react-redux'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport { Dispatch } from 'redux'\r\nimport {\r\n  tShopEncounter,\r\n  tFloor2,\r\n  tRewardEncounter,\r\n} from '../../game/Encounter/type'\r\nimport { makeFloor2 } from '../../game/Encounter/util'\r\nimport { HexT } from '../../grid/types'\r\nimport { getAdjacent, MIN_HEX } from '../../grid/util'\r\nimport { FLOOR_SIZE } from '../../game/Encounter/floors'\r\nimport { FLOOR_1_ID } from '../../game/Encounter/floors/level1/floor-1'\r\nimport { FLOOR_2A_ID } from '../../game/Encounter/floors/level2/floor-2a'\r\nimport { FLOOR_3A_ID } from '../../game/Encounter/floors/floor-3'\r\nimport { FLOOR_2B_ID } from '../../game/Encounter/floors/level2/floor-2b'\r\n\r\nexport interface GameStateT {\r\n  hex: HexT | undefined\r\n  floorId: string\r\n  floors: tFloor2[]\r\n  loading: boolean\r\n}\r\n\r\nexport const RESET = '@action/game/reset'\r\nexport const SET_LOADING = '@action/game/set-loading'\r\nexport const CHOOSE_NEXT = '@action/game/CHOOSE_NEXT'\r\nexport const COMPLETE_CURRENT = '@action/game/complete-current'\r\nexport const OPEN_CURRENT = '@action/game/open-current'\r\nexport const NEXT_FLOOR = '@action/game/next-floor'\r\nexport const REMOVE_ITEM = '@action/game/remove-item'\r\n\r\nexport const actionCreators = {\r\n  reset: (): StateActionT => ({\r\n    type: RESET,\r\n    payload: {},\r\n  }),\r\n  setLoading: (loading: boolean): StateActionT => ({\r\n    type: SET_LOADING,\r\n    payload: {\r\n      loading,\r\n    },\r\n  }),\r\n  chooseNext: (hex: HexT): StateActionT => ({\r\n    type: CHOOSE_NEXT,\r\n    payload: {\r\n      hex,\r\n    },\r\n  }),\r\n  nextFloor: (floorId: string): StateActionT => ({\r\n    type: NEXT_FLOOR,\r\n    payload: {\r\n      floorId,\r\n    },\r\n  }),\r\n  removeItem: (itemId: string): StateActionT => ({\r\n    type: REMOVE_ITEM,\r\n    payload: {\r\n      itemId,\r\n    },\r\n  }),\r\n  completeCurrent: (): StateActionT => ({\r\n    type: COMPLETE_CURRENT,\r\n    payload: {},\r\n  }),\r\n  openCurrent: (): StateActionT => ({\r\n    type: OPEN_CURRENT,\r\n    payload: {},\r\n  }),\r\n}\r\n\r\nexport const actions = {\r\n  reset: () => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.setLoading(true))\r\n    setTimeout(() => {\r\n      dispatch(actionCreators.reset())\r\n      dispatch(actionCreators.setLoading(false))\r\n    }, 200)\r\n  },\r\n  chooseNext: (hex: HexT) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.chooseNext(hex))\r\n  },\r\n  nextFloor: (floorId: string) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.nextFloor(floorId))\r\n  },\r\n  removeItem: (itemId: string) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.removeItem(itemId))\r\n  },\r\n  completeCurrent: () => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.completeCurrent())\r\n  },\r\n  openCurrent: () => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.openCurrent())\r\n  },\r\n}\r\n\r\nconst updateCurrentFloor = (\r\n  state: GameStateT,\r\n  updater: (floor: tFloor2) => tFloor2,\r\n): GameStateT => {\r\n  return {\r\n    ...state,\r\n    floors: state.floors.map((floor) =>\r\n      floor.id === state.floorId ? updater(floor) : floor,\r\n    ),\r\n  }\r\n}\r\n\r\nexport const core: StateCoreT<GameStateT> = {\r\n  [RESET]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      hex: undefined,\r\n      floorId: FLOOR_1_ID,\r\n      floors: [\r\n        makeFloor2(FLOOR_1_ID, 0, FLOOR_SIZE),\r\n        makeFloor2(FLOOR_2A_ID, 1, FLOOR_SIZE),\r\n        makeFloor2(FLOOR_2B_ID, 1, FLOOR_SIZE),\r\n        makeFloor2(FLOOR_3A_ID, 2, FLOOR_SIZE),\r\n      ],\r\n    }\r\n  },\r\n  [SET_LOADING]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      loading: action.payload.loading,\r\n    }\r\n  },\r\n  [CHOOSE_NEXT]: (state, action) => {\r\n    const hex: HexT = action.payload.hex\r\n    const adjacentHexes = getAdjacent(hex)\r\n    return {\r\n      ...state,\r\n      ...updateCurrentFloor(state, (floor) => {\r\n        let es = { ...floor.encounters }\r\n        adjacentHexes.forEach((hex) => {\r\n          const e = ((es[hex.q] || [])[hex.r] || [])[hex.s]\r\n          if (e) {\r\n            es[hex.q][hex.r][hex.s] = {\r\n              ...e,\r\n              seen: true,\r\n            }\r\n          }\r\n        })\r\n        return {\r\n          ...floor,\r\n          encounters: es,\r\n        }\r\n      }),\r\n      hex,\r\n    }\r\n  },\r\n  [NEXT_FLOOR]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      floorId: action.payload.floorId,\r\n      hex: MIN_HEX(FLOOR_SIZE),\r\n    }\r\n  },\r\n  [REMOVE_ITEM]: (state, action) => {\r\n    return updateCurrentFloor(state, (floor) => {\r\n      const encounters = floor.encounters\r\n      if (!state.hex) return floor\r\n      encounters[state.hex.q][state.hex.r][state.hex.s] = {\r\n        ...encounters[state.hex.q][state.hex.r][state.hex.s],\r\n        items: (encounters[state.hex.q][state.hex.r][\r\n          state.hex.s\r\n        ] as tShopEncounter).items.filter(\r\n          (i) => i.id !== action.payload.itemId,\r\n        ),\r\n      } as tShopEncounter\r\n      return {\r\n        ...floor,\r\n        encounters,\r\n      }\r\n    })\r\n  },\r\n  [COMPLETE_CURRENT]: (state, action) => {\r\n    return updateCurrentFloor(state, (floor) => {\r\n      const encounters = floor.encounters\r\n      if (!state.hex) return floor\r\n      let encounter = encounters[state.hex.q][state.hex.r][state.hex.s]\r\n      if (encounter) {\r\n        encounter = {\r\n          ...encounter,\r\n          completed: true,\r\n        }\r\n        encounters[state.hex.q][state.hex.r][state.hex.s] = encounter\r\n      }\r\n      return {\r\n        ...floor,\r\n        encounters,\r\n      }\r\n    })\r\n  },\r\n  [OPEN_CURRENT]: (state, action) => {\r\n    return updateCurrentFloor(state, (floor) => {\r\n      const encounters = floor.encounters\r\n      if (!state.hex) return floor\r\n      let encounter = encounters[state.hex.q][state.hex.r][state.hex.s]\r\n      if (encounter) {\r\n        encounter = {\r\n          ...encounter,\r\n          isOpened: true,\r\n        } as tRewardEncounter\r\n        encounters[state.hex.q][state.hex.r][state.hex.s] = encounter\r\n      }\r\n      return {\r\n        ...floor,\r\n        encounters,\r\n      }\r\n    })\r\n  },\r\n}\r\n\r\nexport const INITIAL_STATE: GameStateT = {\r\n  floorId: FLOOR_1_ID,\r\n  hex: MIN_HEX(FLOOR_SIZE),\r\n  floors: [\r\n    makeFloor2(FLOOR_1_ID, 0, FLOOR_SIZE),\r\n    makeFloor2(FLOOR_2A_ID, 1, FLOOR_SIZE),\r\n    makeFloor2(FLOOR_2B_ID, 1, FLOOR_SIZE),\r\n    makeFloor2(FLOOR_3A_ID, 2, FLOOR_SIZE),\r\n  ],\r\n  loading: false,\r\n}\r\n\r\nexport default makeReducer(core, INITIAL_STATE)\r\nexport const useGameState = (): GameStateT =>\r\n  useSelector((state: StateT) => state.game)\r\nexport const useGameStateActions = () =>\r\n  useActions(actions) as {\r\n    reset: () => void\r\n    chooseNext: (hex: HexT) => void\r\n    nextFloor: (floorId: string) => void\r\n    removeItem: (itemId: string) => void\r\n    completeCurrent: () => void\r\n    openCurrent: () => void\r\n  }\r\n","import React, { useContext, useEffect, useMemo, useState } from 'react'\r\nimport { useGameState, useGameStateActions } from '../../state/game2'\r\nimport { tEncounter, tFloor2 } from '../../game/Encounter/type'\r\nimport { EncounterArrayT, HexT } from '../../grid/types'\r\nimport { FLOOR_1_ID } from '../../game/Encounter/floors/level1/floor-1'\r\n\r\nexport interface GameStateContextT {\r\n  started: boolean\r\n  encounters: EncounterArrayT\r\n  floors: tFloor2[]\r\n  floorId: string\r\n  currentHex: HexT | undefined\r\n  currentFloor: tFloor2\r\n  currentEncounter: tEncounter | undefined\r\n  previousEncounter: tEncounter | undefined\r\n  loading: boolean\r\n  chooseNext: (hex: HexT) => void\r\n  nextFloor: (floorId: string) => void\r\n  reset: () => void\r\n  removeItem: (itemId: string) => void\r\n  completeCurrent: () => void\r\n  openCurrent: () => void\r\n}\r\n\r\nexport const defaultValue: GameStateContextT = {\r\n  started: false,\r\n  encounters: [],\r\n  floors: [],\r\n  floorId: FLOOR_1_ID,\r\n  currentHex: undefined,\r\n  currentFloor: {} as tFloor2,\r\n  currentEncounter: undefined,\r\n  previousEncounter: undefined,\r\n  loading: false,\r\n  chooseNext: (hex) => {},\r\n  nextFloor: (floorId) => {},\r\n  reset: () => {},\r\n  removeItem: (itemId) => {},\r\n  completeCurrent: () => {},\r\n  openCurrent: () => {},\r\n}\r\nexport const GameStateContext = React.createContext<GameStateContextT>(\r\n  defaultValue,\r\n)\r\nexport const useGameStateContext = () => useContext(GameStateContext)\r\n\r\nexport interface GameStateProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const GameStateContextProvider = (props: GameStateProviderPropsT) => {\r\n  const { children } = props\r\n  const { floors, floorId, hex, loading } = useGameState()\r\n  const [started, setStarted] = useState(false)\r\n  const currentFloor = useMemo(\r\n    () => floors.find((f) => f.id === floorId) as tFloor2,\r\n    [floors, floorId],\r\n  )\r\n  const encounters = currentFloor.encounters\r\n  const {\r\n    nextFloor,\r\n    chooseNext,\r\n    reset,\r\n    removeItem,\r\n    completeCurrent,\r\n    openCurrent,\r\n  } = useGameStateActions()\r\n  const currentEncounter = useMemo(() => {\r\n    if (!hex) return undefined\r\n    return encounters[hex.q][hex.r][hex.s]\r\n  }, [hex, JSON.stringify(encounters)])\r\n  const [previousEncounter, setPreviousEncounter] = useState<\r\n    tEncounter | undefined\r\n  >()\r\n\r\n  useEffect(() => {\r\n    if (currentEncounter && currentEncounter.completed) {\r\n      setPreviousEncounter(currentEncounter)\r\n    }\r\n  }, [currentEncounter])\r\n\r\n  useEffect(() => {\r\n    setStarted(true)\r\n  }, [])\r\n\r\n  return (\r\n    <GameStateContext.Provider\r\n      value={{\r\n        started,\r\n        encounters,\r\n        floors,\r\n        floorId,\r\n        currentHex: hex,\r\n        currentFloor,\r\n        currentEncounter,\r\n        previousEncounter,\r\n        loading,\r\n        reset,\r\n        chooseNext,\r\n        nextFloor,\r\n        removeItem,\r\n        completeCurrent,\r\n        openCurrent,\r\n      }}\r\n    >\r\n      {children}\r\n    </GameStateContext.Provider>\r\n  )\r\n}\r\n","import React, { useMemo, useContext, useState } from 'react'\r\nimport { usePartyActions, useParty } from '../../state/party'\r\nimport { tProcessedParty, tParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter, tCharacter } from '../../game/Character/type'\r\nimport {\r\n  processParty,\r\n  makeParty,\r\n  findCharacterInParty,\r\n} from '../../game/Party/util'\r\nimport {\r\n  checkForProcessedCharacter,\r\n  processCharacter,\r\n  makeCharacter,\r\n  equipArmor,\r\n  equipWeapon,\r\n  unequipArmor,\r\n} from '../../game/Character/util'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { useGameStateContext } from '../GameStateContext'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { FISTS } from '../../game/Weapon/fists'\r\nimport { FLOOR_1_ID } from '../../game/Encounter/floors/level1/floor-1'\r\n\r\nexport interface PartyContextT {\r\n  party: tProcessedParty\r\n  rawParty: tParty\r\n  activeCharacter: tProcessedCharacter\r\n  updateParty: (party: tParty) => void\r\n  upsertCharacter: (character: tCharacter) => void\r\n  deleteCharacter: (characterId: string) => void\r\n  findCharacter: (characterId: string) => tProcessedCharacter | undefined\r\n  findRawCharacter: (characterId: string) => tCharacter | undefined\r\n  setActiveCharacter: (character: tProcessedCharacter) => void\r\n  equipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n  unequipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n  purchaseItem: (item: tArmor | tWeapon | tConsumable, cost: number) => void\r\n  upgradeItem: (characterId: string, armor: tArmor) => void\r\n  sellItem: (itemId: string) => void\r\n  refreshParty: () => void\r\n}\r\nconst defaultContextValue: PartyContextT = {\r\n  rawParty: makeParty(0, FLOOR_1_ID, false, 0),\r\n  party: processParty(makeParty(0, FLOOR_1_ID, false, 0)),\r\n  activeCharacter: processCharacter(makeCharacter('executioner')),\r\n  updateParty: (party) => {},\r\n  upsertCharacter: (character) => {},\r\n  deleteCharacter: (characterId) => {},\r\n  findCharacter: (characterId) => undefined,\r\n  findRawCharacter: (characterId) => undefined,\r\n  setActiveCharacter: (character) => {},\r\n  equipItem: (characterId, item) => {},\r\n  unequipItem: (characterId, item) => {},\r\n  purchaseItem: (item, cost) => {},\r\n  upgradeItem: (characterId, armor) => {},\r\n  sellItem: (itemId) => {},\r\n  refreshParty: () => {},\r\n}\r\nexport const PartyContext = React.createContext<PartyContextT>(\r\n  defaultContextValue,\r\n)\r\n\r\nexport interface PartyContextProviderPropsT {\r\n  children: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const PartyContextProvider = (props: PartyContextProviderPropsT) => {\r\n  const { children } = props\r\n  const actions = usePartyActions()\r\n  const rawParty = useParty()\r\n  const { currentEncounter, removeItem } = useGameStateContext()\r\n  const party = useMemo(() => processParty(rawParty), [rawParty])\r\n  const [activeCharacterId, setActiveCharacterId] = useState<string>(\r\n    party.characters[0].id,\r\n  )\r\n  const activeCharacter = useMemo(() => {\r\n    return party.characters.find(\r\n      (c) => c.id === activeCharacterId,\r\n    ) as tProcessedCharacter\r\n  }, [activeCharacterId, party.characters])\r\n  const setActiveCharacter = (character: tProcessedCharacter) =>\r\n    setActiveCharacterId(character.id)\r\n  const updateParty = (party: tParty) => {\r\n    actions.updateParty(party)\r\n  }\r\n  const upsertCharacter = (character: tCharacter) => {\r\n    if (!character) return\r\n    checkForProcessedCharacter(character)\r\n    actions.upsertCharacter(character)\r\n  }\r\n  const deleteCharacter = (characterId: string) => {\r\n    actions.deleteCharacter(characterId)\r\n  }\r\n  const findCharacter = (characterId: string) => {\r\n    return findCharacterInParty<tProcessedParty, tProcessedCharacter>(\r\n      party,\r\n      characterId,\r\n    )\r\n  }\r\n  const findRawCharacter = (characterId: string) => {\r\n    return findCharacterInParty(rawParty, characterId)\r\n  }\r\n\r\n  const equipItem = (characterId: string, item: tWeapon | tArmor) => {\r\n    const character = findRawCharacter(characterId)\r\n    if (!character) return\r\n    if (item.itemType === 'armor') {\r\n      const armor = item as tArmor\r\n      if (armor.resource === 'offhand' && (character.weapon || FISTS()).twoHand)\r\n        return\r\n      const result = equipArmor(character, armor)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.armor ? [result.armor] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n    if (item.itemType === 'weapon') {\r\n      const weapon = item as tWeapon\r\n      if ((character.weapon || FISTS()).twoHand) {\r\n        if (character.armor.find((a) => a.resource === 'offhand')) {\r\n          return\r\n        }\r\n      }\r\n      const result = equipWeapon(character, weapon)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.weapon ? [result.weapon] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n  }\r\n  const unequipItem = (characterId: string, item: tWeapon | tArmor) => {\r\n    const character = findRawCharacter(characterId)\r\n    if (!character) return\r\n    if (item.itemType === 'armor') {\r\n      const armor = item as tArmor\r\n      const result = unequipArmor(character, armor.resource)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.armor ? [result.armor] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n    if (item.itemType === 'weapon') {\r\n      updateParty({\r\n        ...rawParty,\r\n        items: character.weapon\r\n          ? [...rawParty.items, character.weapon]\r\n          : rawParty.items,\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === characterId ? { ...c, weapon: undefined } : c,\r\n        ),\r\n      })\r\n    }\r\n  }\r\n  const purchaseItem = (item: tArmor | tWeapon | tConsumable, cost: number) => {\r\n    if (party.gold > cost && currentEncounter) {\r\n      if (item.itemType === 'armor' || item.itemType === 'weapon') {\r\n        actions.upsertItem(item as tArmor | tWeapon)\r\n      }\r\n      if (item.itemType === 'consumable') {\r\n        updateParty({\r\n          ...rawParty,\r\n          characters: rawParty.characters.map((c) => ({\r\n            ...c,\r\n            consumables: [...c.consumables, item as tConsumable],\r\n          })),\r\n        })\r\n      }\r\n      actions.setGold(party.gold - cost)\r\n      removeItem(item.id)\r\n    }\r\n  }\r\n  const sellItem = (itemId: string) => {\r\n    const item = rawParty.items.find((i) => i.id === itemId)\r\n    if (item) {\r\n      updateParty({\r\n        ...rawParty,\r\n        items: rawParty.items.filter((i) => i.id !== itemId),\r\n        gold: rawParty.gold + item.goldValue,\r\n      })\r\n    }\r\n  }\r\n  const refreshParty = () => {\r\n    updateParty({\r\n      ...rawParty,\r\n      characters: rawParty.characters.map((c) => ({\r\n        ...c,\r\n        healthOffset: 0,\r\n        status: [],\r\n      })),\r\n    })\r\n  }\r\n  const upgradeItem = (characterId: string, armor: tArmor) => {\r\n    const cost = armor.goldValue\r\n    if (party.gold < cost) return\r\n    updateParty({\r\n      ...rawParty,\r\n      gold: rawParty.gold - cost,\r\n      characters: rawParty.characters.map((c) =>\r\n        c.id === characterId\r\n          ? {\r\n              ...c,\r\n              armor: [\r\n                ...c.armor.filter((a) => a.resource !== armor.resource),\r\n                armor,\r\n              ],\r\n            }\r\n          : c,\r\n      ),\r\n    })\r\n  }\r\n\r\n  return (\r\n    <PartyContext.Provider\r\n      value={{\r\n        party,\r\n        rawParty,\r\n        activeCharacter,\r\n        updateParty,\r\n        upsertCharacter,\r\n        deleteCharacter,\r\n        findCharacter,\r\n        findRawCharacter,\r\n        setActiveCharacter,\r\n        equipItem,\r\n        unequipItem,\r\n        purchaseItem,\r\n        sellItem,\r\n        refreshParty,\r\n        upgradeItem,\r\n      }}\r\n    >\r\n      {children}\r\n    </PartyContext.Provider>\r\n  )\r\n}\r\n\r\nexport const usePartyContext = () => useContext(PartyContext)\r\n","import { ModalStylesT } from '.'\r\n\r\nexport interface ModalContextStateT {\r\n  isOpen: boolean\r\n  contents: JSX.Element | null\r\n  callback: ((payload?: any) => void) | null\r\n  payload: any | null\r\n  blocking: boolean\r\n  styles: ModalStylesT\r\n}\r\nexport const initialState: ModalContextStateT = {\r\n  isOpen: false,\r\n  contents: null,\r\n  callback: null,\r\n  payload: null,\r\n  blocking: false,\r\n  styles: {},\r\n}\r\n\r\nexport const OPEN = 'modalContext/OPEN'\r\nexport const CLOSE = 'modalContext/CLOSE'\r\nexport const SET_CONTENTS = 'modalContext/SET_CONTENTS'\r\nexport const SET_CALLBACK = 'modalContext/SET_CALLBACK'\r\nexport const SET_PAYLOAD = 'modalContext/SET_PAYLOAD'\r\nexport const SET_BLOCKING = 'modalContext/SET_BLOCKING'\r\nexport const SET_STYLE = 'modalContext/SET_STYLE'\r\n\r\nexport const actions = {\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => ({\r\n    type: OPEN,\r\n    contents,\r\n    styles,\r\n    blocking,\r\n    callback,\r\n  }),\r\n  close: () => ({ type: CLOSE }),\r\n  setPayload: (payload: any) => ({ type: SET_PAYLOAD, payload }),\r\n  setContents: (contents: JSX.Element | null) => ({\r\n    type: SET_CONTENTS,\r\n    contents,\r\n  }),\r\n  setCallback: (callback: (() => void) | null) => ({\r\n    type: SET_CALLBACK,\r\n    callback,\r\n  }),\r\n  setBlocking: (blocking: boolean) => ({ type: SET_BLOCKING, blocking }),\r\n  setStyles: (styles: ModalStylesT) => ({ type: SET_STYLE, styles }),\r\n}\r\n\r\nconst core: Record<\r\n  string,\r\n  (state: ModalContextStateT, action: any) => ModalContextStateT\r\n> = {\r\n  [OPEN]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    isOpen: true,\r\n    contents: action.contents ? action.contents : state.contents,\r\n    styles: action.styles ? action.styles : state.styles || {},\r\n    blocking: action.blocking || false,\r\n    callback: action.callback ? action.callback : state.callback,\r\n  }),\r\n  [CLOSE]: (state: ModalContextStateT) => ({\r\n    ...state,\r\n    isOpen: false,\r\n  }),\r\n  [SET_PAYLOAD]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    payload: action.payload,\r\n  }),\r\n  [SET_CONTENTS]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: null,\r\n    payload: null,\r\n    contents: action.contents,\r\n    blocking: false,\r\n    style: {},\r\n  }),\r\n  [SET_CALLBACK]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: action.callback,\r\n  }),\r\n  [SET_BLOCKING]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    blocking: action.blocking,\r\n  }),\r\n  [SET_STYLE]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    styles: action.styles,\r\n  }),\r\n}\r\n\r\nexport const reducer = (\r\n  state: ModalContextStateT = initialState,\r\n  action: any,\r\n) => {\r\n  const coreFunction = core[action.type]\r\n  return coreFunction ? coreFunction(state, action) : state\r\n}\r\n","import React, { useContext, useReducer, useMemo, CSSProperties } from 'react'\r\nimport Modal from 'react-modal'\r\nimport { actions, reducer, initialState, ModalContextStateT } from './reducer'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ModalContextT {\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => void\r\n  close: (payload?: any) => void\r\n  setPayload: (payload: any) => void\r\n  setBlocking: (blocking: boolean) => void\r\n  setContents: (contents: JSX.Element) => void\r\n  setCallback: (callback: (payload?: any) => void) => void\r\n  setStyles: (styles: ModalStylesT) => void\r\n}\r\nconst defaultContext: ModalContextT = {\r\n  open: () => null,\r\n  close: () => null,\r\n  setBlocking: () => null,\r\n  setPayload: () => null,\r\n  setContents: () => null,\r\n  setCallback: () => null,\r\n  setStyles: () => null,\r\n}\r\nexport const ModalContext = React.createContext<ModalContextT>(defaultContext)\r\nexport const useModalContext = () => useContext(ModalContext)\r\n\r\nexport interface ModalStylesT {\r\n  modal?: CSSProperties\r\n  overlay?: CSSProperties\r\n}\r\n\r\nconst getContextValue = (\r\n  state: ModalContextStateT,\r\n  dispatch: React.Dispatch<any>,\r\n) => ({\r\n  isOpen: state.isOpen,\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => {\r\n    dispatch(actions.open(contents, styles, blocking, callback))\r\n  },\r\n  close: (payload?: any) => {\r\n    if (state.callback) state.callback(payload || state.payload)\r\n    dispatch(actions.close())\r\n  },\r\n  setPayload: (payload: any) => dispatch(actions.setPayload(payload)),\r\n  setContents: (contents: JSX.Element) =>\r\n    dispatch(actions.setContents(contents)),\r\n  setCallback: (callback: (payload?: any) => void) =>\r\n    dispatch(actions.setCallback(callback)),\r\n  setBlocking: (blocking: boolean) => dispatch(actions.setBlocking(blocking)),\r\n  setStyles: (styles: ModalStylesT) => dispatch(actions.setStyles(styles)),\r\n})\r\nModal.setAppElement('#root')\r\nexport interface ModalContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const ModalContextProvider = (props: ModalContextProviderPropsT) => {\r\n  const { children } = props\r\n  const reducerValue = useReducer(reducer, initialState)\r\n  const [state] = reducerValue\r\n  const context = useMemo(() => getContextValue(...reducerValue), [\r\n    reducerValue,\r\n  ])\r\n\r\n  return (\r\n    <ModalContext.Provider value={context}>\r\n      {children}\r\n      <Modal\r\n        isOpen={state.isOpen}\r\n        onRequestClose={() => {\r\n          if (!state.blocking) context.close()\r\n        }}\r\n        style={{\r\n          content: {\r\n            backgroundColor: Theme.darkBgColor,\r\n            color: 'white',\r\n            width: 400,\r\n            margin: '0 auto',\r\n            bottom: 'unset',\r\n            borderColor: Theme.lightBgColor,\r\n            ...state.styles.modal,\r\n          },\r\n          overlay: {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n            zIndex: 900,\r\n            ...state.styles.overlay,\r\n          },\r\n        }}\r\n      >\r\n        {state.contents || <div />}\r\n      </Modal>\r\n    </ModalContext.Provider>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport interface FlexContainerPropsT {\r\n  $direction?: 'row' | 'column' | 'column-reverse'\r\n  $full?: boolean\r\n  $center?: boolean\r\n}\r\nexport const FlexContainer = styled('div', (props: FlexContainerPropsT) => ({\r\n  display: 'flex',\r\n  flexDirection: props.$direction || 'row',\r\n  flex: props.$full ? 1 : undefined,\r\n  justifyContent: props.$center ? 'center' : undefined,\r\n}))\r\nexport const FullContainer = styled('div', () => ({\r\n  flex: 1,\r\n}))\r\n","import React from 'react'\r\nimport { styled, withStyle } from 'styletron-react'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { Theme } from '../theme'\r\n\r\nexport interface ButtonPropsT {\r\n  $direction?: 'up' | 'down'\r\n}\r\nexport const Button = styled('button', (props: ButtonPropsT) => {\r\n  return {\r\n    cursor: 'pointer',\r\n    background: Theme.mediumBgColor,\r\n    boxShadow: 'inset 0px 0px 3px black',\r\n    textShadow: '0px 1px 3px black',\r\n    border: '1px solid rgba(255,255,255,0.2)',\r\n    color: 'rgba(255,255,255,1)',\r\n    ':hover': {\r\n      border: '1px solid rgba(255,255,255,0.4)',\r\n    },\r\n    ':active': {\r\n      outline: 'none',\r\n      border: '1px solid rgba(255,255,255,0.7)',\r\n    },\r\n    ':focus': {\r\n      outline: 'none',\r\n    },\r\n    ':disabled': {\r\n      background: Theme.otherGrey2,\r\n      cursor: 'not-allowed',\r\n    },\r\n    padding: '10px 30px',\r\n    userSelect: 'none',\r\n  }\r\n})\r\n\r\nexport const RedButton = withStyle(Button, (props: ButtonPropsT) => {\r\n  return {\r\n    // fontFamily: Theme.titleFont,\r\n    fontWeight: 'bold',\r\n    background:\r\n      'linear-gradient(0deg, rgba(157,30,30,1) 0%, rgba(110,23,23,1) 100%)',\r\n  }\r\n})\r\n\r\nexport const ConfirmButton = withStyle(Button, (props: ButtonPropsT) => {\r\n  const { $direction } = props\r\n  return {\r\n    // background: 'linear-gradient(0deg, rgba(157,0,0,1) 0%, rgba(110,0,0,1) 100%)',\r\n    // fontWeight: 'bold',\r\n    borderTop: $direction === 'down' ? 'none' : undefined,\r\n    borderBottom: $direction === 'up' ? 'none' : undefined,\r\n    padding: '10px 30px',\r\n    boxShadow: 'inset 0px 2px 8px black',\r\n    ':hover': {\r\n      borderTop: $direction === 'down' ? 'none' : undefined,\r\n      borderBottom: $direction === 'up' ? 'none' : undefined,\r\n    },\r\n    animationDirection: '1s',\r\n    animationIterationCount: 'infinite',\r\n    animationName: `\r\n      from: {\r\n        background: 'rgba(255,255,255,0.4)',\r\n      },\r\n\r\n      to: {\r\n        background: 'rgba(255,255,255,1)',\r\n      },\r\n    `,\r\n  }\r\n})\r\n\r\nexport const ConfirmButton2 = (props: any) => {\r\n  const styles = useSpring({\r\n    from: {\r\n      border: '1px solid rgba(255,255,255,0)',\r\n    },\r\n    to: async (next: any) => {\r\n      while (1) {\r\n        await next({\r\n          border: '1px solid rgba(255,255,255,0)',\r\n        })\r\n        await next({ border: '1px solid rgba(255,255,255,1)' })\r\n      }\r\n    },\r\n  })\r\n  return (\r\n    <animated.div style={styles}>\r\n      <ConfirmButton style={{ border: 'none' }}>{props.children}</ConfirmButton>\r\n    </animated.div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nexport interface IconPropsT {\r\n  src: string\r\n  size: number\r\n  fill?: string\r\n  style?: React.CSSProperties\r\n  shadow?: boolean\r\n  onClick?: () => void\r\n}\r\nexport const Icon = ({\r\n  src,\r\n  size,\r\n  style = {},\r\n  fill = 'white',\r\n  shadow,\r\n  onClick,\r\n}: IconPropsT) => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [svg, setSvg] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (src) {\r\n      fetch(src)\r\n        .then((res) => res.text())\r\n        .then((text) => setSvg(text))\r\n        .then(() => setLoading(false))\r\n    }\r\n  }, [src])\r\n\r\n  return !loading ? (\r\n    <div\r\n      className={`icon ${shadow ? 'shadow' : ''}`}\r\n      onClick={() => {\r\n        if (onClick) onClick()\r\n      }}\r\n      style={{ ...style, height: size, width: size, fill }}\r\n      dangerouslySetInnerHTML={{ __html: svg }}\r\n    />\r\n  ) : (\r\n    <div />\r\n  )\r\n}\r\n\r\nexport const RawIcon = (props: IconPropsT) => {\r\n  const { src, size, style = {}, fill = 'white', shadow, onClick } = props\r\n  const [loading, setLoading] = useState(true)\r\n  const [svg, setSvg] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (src) {\r\n      fetch(src)\r\n        .then((res) => res.text())\r\n        .then((text) => setSvg(text))\r\n        .then(() => setLoading(false))\r\n    }\r\n  }, [src])\r\n\r\n  return <>{loading ? svg : <svg />}</>\r\n}\r\n","import React, { useState, useLayoutEffect } from 'react'\r\nimport { v4 } from 'uuid'\r\n\r\nexport interface HoverChildrenT {\r\n  isHovering: boolean\r\n}\r\nexport interface HoverPropsT {\r\n  delay?: number\r\n  flex?: boolean\r\n  children: (props: HoverChildrenT) => JSX.Element\r\n}\r\nexport const Hover = (props: HoverPropsT) => {\r\n  const { delay = 500, flex, children } = props\r\n  const [internalHovering, setInternalHovering] = useState<boolean>(false)\r\n  const [isHovering, setIsHovering] = useState<boolean>(false)\r\n  const [guid, setGuid] = useState<string>(v4())\r\n  useLayoutEffect(() => {\r\n    const action = async () => {\r\n      if (internalHovering) {\r\n        setTimeout(() => {\r\n          setGuid(v4())\r\n        }, delay)\r\n      }\r\n    }\r\n    action()\r\n  }, [internalHovering])\r\n  useLayoutEffect(() => {\r\n    if (internalHovering) {\r\n      setIsHovering(true)\r\n    }\r\n  }, [guid])\r\n  const onMouseEnter = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(true)\r\n  }\r\n  const onMouseLeave = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(false)\r\n    setIsHovering(false)\r\n  }\r\n  return (\r\n    <div\r\n      style={{ display: flex ? 'flex' : 'block', flex: flex ? 1 : undefined }}\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n    >\r\n      {children({ isHovering })}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useRef } from 'react'\r\nimport BaseTooltip, { TooltipProps } from 'react-tooltip-lite'\r\nimport { Hover } from '../Hover'\r\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\r\n\r\nexport interface ClickToolTipChildrenT {\r\n  onClick: (value?: boolean) => void\r\n  ref: React.MutableRefObject<HTMLElement | undefined>\r\n}\r\ninterface PropsT extends TooltipProps {\r\n  children: JSX.Element | ((props: ClickToolTipChildrenT) => JSX.Element)\r\n  content: JSX.Element | ((props: ClickToolTipChildrenT) => JSX.Element)\r\n  flex?: boolean\r\n}\r\nexport const Tooltip = (props: PropsT) => {\r\n  const { ...rest } = props\r\n  return (\r\n    <BaseTooltip\r\n      direction='up'\r\n      tagName='div'\r\n      padding='0'\r\n      arrow={false}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nexport const HoverToolTip = (props: PropsT) => {\r\n  return (\r\n    <Hover flex={props.flex}>\r\n      {({ isHovering }) => <Tooltip {...props} isOpen={isHovering} />}\r\n    </Hover>\r\n  )\r\n}\r\n\r\nexport const ClickToolTip = (props: PropsT) => {\r\n  const { children, content, ...rest } = props\r\n  const [isOpen, setIsOpen] = useState<boolean>(false)\r\n  const ref = useRef<HTMLElement>()\r\n  useOnClickOutside(ref, () => {\r\n    setIsOpen(false)\r\n  })\r\n  if (typeof children !== 'function') return null\r\n  if (typeof content !== 'function') return null\r\n  const p = {\r\n    onClick: (value?: boolean) => {\r\n      setIsOpen((v) => (value !== undefined ? value : !v))\r\n    },\r\n    ref,\r\n  }\r\n  return (\r\n    <Tooltip content={content(p)} {...rest} isOpen={isOpen}>\r\n      {children(p)}\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport const useOnClickOutside = (\r\n  ref: React.MutableRefObject<HTMLElement | undefined>,\r\n  handler: Function,\r\n) => {\r\n  useEffect(() => {\r\n    const listener = (event: any) => {\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return\r\n      }\r\n\r\n      setTimeout(() => handler(event), 150)\r\n    }\r\n\r\n    document.addEventListener('mousedown', listener)\r\n    document.addEventListener('touchstart', listener)\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', listener)\r\n      document.removeEventListener('touchstart', listener)\r\n    }\r\n  }, [ref, handler])\r\n}\r\n","import React from 'react'\r\nimport { Hover } from '../components/Hover'\r\nimport { Theme } from '../theme'\r\n\r\nexport interface BoxContainerPropsT extends React.HTMLProps<HTMLDivElement> {\r\n  substyle?: React.CSSProperties\r\n  tag?: any\r\n  to?: string\r\n  dark?: boolean\r\n}\r\nexport const BoxContainer = (props: BoxContainerPropsT) => {\r\n  const {\r\n    style = {},\r\n    substyle = {},\r\n    children,\r\n    dark,\r\n    tag: Element = 'div',\r\n    ...rest\r\n  } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        border: '1px solid #000',\r\n        display: 'flex',\r\n        boxSizing: 'border-box',\r\n        ...style,\r\n      }}\r\n    >\r\n      <Element\r\n        style={{\r\n          border: substyle.border || `1px solid ${Theme.lightBgColor}`,\r\n          background: dark\r\n            ? Theme.darkBgColor\r\n            : `linear-gradient(0deg, ${Theme.mediumBgColor} 0%, rgba(42,42,44) 100%)`,\r\n          padding: 10,\r\n          color: '#ccc',\r\n          flex: 1,\r\n          boxShadow: 'inset 0px 0px 2px black',\r\n          ...substyle,\r\n        }}\r\n        {...rest}\r\n      >\r\n        {children}\r\n      </Element>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const SmallBox = (props: BoxContainerPropsT) => (\r\n  <BoxContainer\r\n    {...props}\r\n    style={{\r\n      height: 40,\r\n      width: 40,\r\n      ...props.style,\r\n    }}\r\n    substyle={{\r\n      display: 'flex',\r\n      padding: 0,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      background: Theme.darkBgColor,\r\n      ...props.substyle,\r\n    }}\r\n  >\r\n    {props.children}\r\n  </BoxContainer>\r\n)\r\n\r\nexport const BoxButton = (props: BoxContainerPropsT) => {\r\n  return (\r\n    <Hover delay={0}>\r\n      {({ isHovering }) => (\r\n        <BoxContainer\r\n          {...props}\r\n          tag='button'\r\n          style={{\r\n            margin: 0,\r\n            ...(props.style || {}),\r\n          }}\r\n          substyle={{\r\n            borderColor:\r\n              isHovering && !props.disabled ? '#999' : Theme.lightBgColor,\r\n            padding: '4px',\r\n            cursor: props.disabled ? 'default' : 'pointer',\r\n            background: props.disabled ? '#444' : Theme.darkBgColor,\r\n            boxShadow: props.disabled ? 'none' : undefined,\r\n            ...(props.substyle || {}),\r\n          }}\r\n        />\r\n      )}\r\n    </Hover>\r\n  )\r\n}\r\n","import Shot from './svg/lorc/high-shot.svg'\r\nimport Headshot from './svg/delapouite/shield-impact.svg'\r\nimport PinDown from './svg/lorc/energy-arrow.svg'\r\n\r\nimport Arcane from './svg/lorc/fire-zone.svg'\r\nimport Blast from './svg/lorc/magic-swirl.svg'\r\nimport Nova from './svg/lorc/heavy-timer.svg'\r\nimport TimeJump from './svg/delapouite/extra-time.svg'\r\nimport Enflame from './svg/sbed/lucifer-cannon.svg'\r\nimport Engulf from './svg/delapouite/firewall.svg'\r\n\r\nimport Smash from './svg/lorc/flat-hammer.svg'\r\nimport Shockwave from './svg/lorc/hammer-drop.svg'\r\nimport Thrust from './svg/lorc/scythe.svg'\r\nimport Chop from './svg/lorc/battered-axe.svg'\r\nimport Strike from './svg/lorc/plain-dagger.svg'\r\nimport Stab from './svg/lorc/knife-thrust.svg'\r\nimport Cleave from './svg/lorc/pointy-sword.svg'\r\nimport AxeSpin from './svg/lorc/axe-swing.svg'\r\nimport Slice from './svg/lorc/saber-slash.svg'\r\nimport Lunge from './svg/lorc/wave-strike.svg'\r\nimport Slash from './svg/lorc/sparkling-sabre.svg'\r\n\r\nimport Taunt from './svg/lorc/bordered-shield.svg'\r\n\r\nimport Ring from './svg/lorc/ringing-bell.svg'\r\nimport Reverberate from './svg/lorc/resonance.svg'\r\nimport Protect from './svg/lorc/shieldcomb.svg'\r\nimport Rush from './svg/lorc/sprint.svg'\r\n\r\nimport Fire from './svg/lorc/gunshot.svg'\r\nimport Snipe from './svg/delapouite/crosshair.svg'\r\nimport FanFire from './svg/delapouite/bullet-impacts.svg'\r\n\r\nimport Reset from './svg/delapouite/backward-time.svg'\r\nimport Slow from './svg/lorc/snail.svg'\r\nimport SpreadShot from './svg/lorc/double-shot.svg'\r\n\r\nimport Heal from './svg/sbed/health-normal.svg'\r\nimport Bless from './svg/lorc/embrassed-energy.svg'\r\nimport PoisonKnife from './svg/lorc/bone-knife.svg'\r\nimport Firebomb from './svg/lorc/molotov.svg'\r\n\r\nimport Restore from './svg/lorc/life-support.svg'\r\nimport EvadeUp from './svg/lorc/dodging.svg'\r\n\r\nimport ArmorUp from './svg/delapouite/armor-upgrade.svg'\r\nimport ArmorDown from './svg/delapouite/armor-downgrade.svg'\r\nimport Punch from './svg/lorc/punch.svg'\r\n\r\nimport Stun from './svg/lorc/ubisoft-sun.svg'\r\n\r\nimport AttackUp from './svg/lorc/all-for-one.svg'\r\nimport CurePotion from './svg/lorc/drink-me.svg'\r\n\r\nexport const SKILL_ICONS: Record<string, string> = {\r\n  Punch: Punch,\r\n\r\n  Shot: Shot,\r\n  Headshot: Headshot,\r\n  'Pin Down': PinDown,\r\n  Flurry: SpreadShot,\r\n\r\n  Arcane: Arcane,\r\n  Nova: Nova,\r\n  Blast: Blast,\r\n  'Time Jump': TimeJump,\r\n  Enflame: Enflame,\r\n  Engulf: Engulf,\r\n\r\n  Ring: Ring,\r\n  Reverberate: Reverberate,\r\n\r\n  Smash: Smash,\r\n  Strike: Strike,\r\n  Swing: Chop,\r\n  Chop: Chop,\r\n  Thrust: Thrust,\r\n  Earthquake: Shockwave,\r\n  Ripple: Shockwave,\r\n  Crush: Shockwave,\r\n  'Axe Spin': AxeSpin,\r\n  Cleave: Cleave,\r\n  Slash: Slash,\r\n  Lunge: Lunge,\r\n  Stab: Stab,\r\n  Slice: Stab,\r\n  Swipe: Slice,\r\n\r\n  Fire: Fire,\r\n  Snipe: Snipe,\r\n  'Fan Fire': FanFire,\r\n\r\n  Stun: Stun,\r\n  Reset: Reset,\r\n  Taunt: Taunt,\r\n  Slow: Slow,\r\n  Protect: Protect,\r\n\r\n  Heal: Heal,\r\n  'Remove Curses': Bless,\r\n  'Poison Knife': PoisonKnife,\r\n  Firebomb: Firebomb,\r\n  'Cure Potion': CurePotion,\r\n  Restore: Restore,\r\n  Rush: Rush,\r\n  Vanish: EvadeUp,\r\n  'Evade Up': EvadeUp,\r\n  'Armor Up': ArmorUp,\r\n  'Attack Up': AttackUp,\r\n  'Armor Down': ArmorDown,\r\n  'Beast Drug': AttackUp,\r\n}\r\n","import Stunned from './svg/lorc/star-swirl.svg'\r\nimport Targeted from './svg/sbed/targeted.svg'\r\nimport Evasive from './svg/lorc/dodging.svg'\r\nimport SpeedDown from './svg/delapouite/sticky-boot.svg'\r\nimport Poisoned from './svg/lorc/biohazard.svg'\r\nimport Burning from './svg/carl-olsen/flame.svg'\r\nimport Bleeding from './svg/lorc/bleeding-wound.svg'\r\nimport Frozen from './svg/lorc/snowflake-2.svg'\r\nimport ArmorDown from './svg/delapouite/armor-downgrade.svg'\r\nimport ArmorUp from './svg/delapouite/armor-upgrade.svg'\r\nimport ResistanceDown from './svg/lorc/broken-shield.svg'\r\nimport Cursed from './svg/lorc/pentagram-rose.svg'\r\nimport Protected from './svg/lorc/shieldcomb.svg'\r\nimport AttackUp from './svg/lorc/all-for-one.svg'\r\nimport Shocked from './svg/lorc/power-lightning.svg'\r\nimport { tStatusType } from '../game/Status/type'\r\n\r\nexport const STATUS_ICONS: Partial<Record<tStatusType, string>> = {\r\n  evasive: Evasive,\r\n  stunned: Stunned,\r\n  targeted: Targeted,\r\n  protected: Protected,\r\n  poisoned: Poisoned,\r\n  burning: Burning,\r\n  bleeding: Bleeding,\r\n  frozen: Frozen,\r\n  shocked: Shocked,\r\n\r\n  'attack-up': AttackUp,\r\n  'armor-up': ArmorUp,\r\n\r\n  'speed-down': SpeedDown,\r\n  'armor-down': ArmorDown,\r\n  'resistance-down': ResistanceDown,\r\n\r\n  'cursed-agility': Cursed,\r\n  'cursed-charisma': Cursed,\r\n  'cursed-dexterity': Cursed,\r\n  'cursed-intelligence': Cursed,\r\n  'cursed-luck': Cursed,\r\n  'cursed-strength': Cursed,\r\n  'cursed-vigor': Cursed,\r\n}\r\n","import Vigor from './svg/delapouite/heart-beats.svg'\r\nimport Strength from './svg/delapouite/biceps.svg'\r\nimport Brain from './svg/lorc/brain.svg'\r\nimport Hand from './svg/sbed/hand.svg'\r\nimport Masks from './svg/lorc/lyre.svg'\r\nimport Agility from './svg/lorc/sprint.svg'\r\nimport Clover from './svg/lorc/clover.svg'\r\n\r\nimport MagicArmor from './svg/lorc/robe.svg'\r\nimport ClothArmor from './svg/lorc/scale-mail.svg'\r\nimport Armor from './svg/delapouite/chest-armor.svg'\r\nimport Shield from './svg/delapouite/cross-shield.svg'\r\nimport MagicShield from './svg/lorc/lightning-shield.svg'\r\nimport Footwear from './svg/lorc/leather-boot.svg'\r\nimport Hat from './svg/delapouite/robin-hood-hat.svg'\r\nimport MagicHat from './svg/lorc/pointy-hat.svg'\r\nimport Helmet from './svg/lorc/visored-helm.svg'\r\nimport Weapon from './svg/lorc/broadsword.svg'\r\nimport Ring from './svg/delapouite/ring.svg'\r\nimport Pendant from './svg/delapouite/heart-necklace.svg'\r\n\r\nimport Axe from './svg/lorc/battle-axe.svg'\r\nimport Blunt from './svg/lorc/gavel.svg'\r\nimport Bow from './svg/lorc/heavy-arrow.svg'\r\nimport Dagger from './svg/lorc/bowie-knife.svg'\r\nimport Handgun from './svg/skoll/revolver.svg'\r\nimport MagicStaff from './svg/lorc/wizard-staff.svg'\r\nimport Sword from './svg/lorc/broadsword.svg'\r\nimport Scythe from './svg/lorc/scythe.svg'\r\nimport Chime from './svg/lorc/ringing-bell.svg'\r\nimport Greatsword from './svg/lorc/croc-sword.svg'\r\nimport Fist from './svg/skoll/fist.svg'\r\n\r\nimport Godsbeard from './svg/delapouite/herbs-bundle.svg'\r\nimport Lotus from './svg/lorc/lotus-flower.svg'\r\nimport PoisonKnife from './svg/lorc/bone-knife.svg'\r\nimport BeastDrug from './svg/delapouite/medicine-pills.svg'\r\nimport CurePotion from './svg/lorc/drink-me.svg'\r\nimport Firebomb from './svg/lorc/molotov.svg'\r\nimport { tBaseStats } from '../game/Stats/type'\r\nimport { GODSBEARD } from '../game/Consumable/objects/godsbeard'\r\nimport { tArmorResourceType, tArmorType } from '../game/Armor/type'\r\nimport { tWeaponType } from '../game/Weapon/type'\r\nimport { tCharacterClass } from '../game/Character/type'\r\n\r\nimport Executioner from './svg/delapouite/executioner-hood.svg'\r\nimport Hunter from './svg/lorc/cowled.svg'\r\nimport Bard from './svg/delapouite/female-vampire.svg'\r\nimport Scholar from './svg/delapouite/wizard-face.svg'\r\nimport Hobo from './svg/delapouite/perspective-dice-six.svg'\r\nimport Reaper from './svg/delapouite/kenku-head.svg'\r\nimport Mercenary from './svg/kier-heyl/dwarf-helmet.svg'\r\nimport Corsair from './svg/delapouite/pirate-captain.svg'\r\nimport { CELESTIAL_LOTUS } from '../game/Consumable/objects/celestial_lotus'\r\nimport { POISON_KNIFE } from '../game/Consumable/objects/poison_knife'\r\nimport { BEAST_DRUG } from '../game/Consumable/objects/beast_drug'\r\nimport { CURE_POTION } from '../game/Consumable/objects/curing_potion'\r\nimport { FIREBOMB } from '../game/Consumable/objects/firebomb'\r\n\r\nexport { SKILL_ICONS } from './skills'\r\nexport { STATUS_ICONS } from './status'\r\n\r\nexport const STAT_ICONS: Record<keyof tBaseStats, string> = {\r\n  vigor: Vigor,\r\n  strength: Strength,\r\n  intelligence: Brain,\r\n  dexterity: Hand,\r\n  charisma: Masks,\r\n  agility: Agility,\r\n  luck: Clover,\r\n  evasion: '',\r\n  criticalChance: '',\r\n}\r\n\r\nexport const ARMOR_TYPE_ICONS: Record<tArmorType, string> = {\r\n  'magic-armor': MagicArmor,\r\n  'light-armor': ClothArmor,\r\n  'heavy-armor': Armor,\r\n  shield: Shield,\r\n  ward: MagicShield,\r\n  footwear: Footwear,\r\n  hat: Hat,\r\n  'magic-hat': MagicHat,\r\n  helmet: Helmet,\r\n  pendant: Pendant,\r\n  ring: Ring,\r\n}\r\n\r\nexport const WEAPON_TYPE_ICONS: Record<tWeaponType, string> = {\r\n  enemy: '',\r\n  axe: Axe,\r\n  hammer: Blunt,\r\n  bow: Bow,\r\n  dagger: Dagger,\r\n  chime: Chime,\r\n  pistol: Handgun,\r\n  catalyst: MagicStaff,\r\n  scythe: Scythe,\r\n  sword: Sword,\r\n  greatsword: Greatsword,\r\n  fist: Fist,\r\n}\r\n\r\nexport const RESOURCE_ICONS: Record<tArmorResourceType | 'weapon', string> = {\r\n  weapon: Weapon,\r\n  offhand: Shield,\r\n  body: Armor,\r\n  head: Helmet,\r\n  feet: Footwear,\r\n  pendant: Pendant,\r\n  ring: Ring,\r\n}\r\n\r\nexport const CONSUMABLE_ITEM_ICONS: Record<string, string> = {\r\n  [GODSBEARD().cid]: Godsbeard,\r\n  [CELESTIAL_LOTUS().cid]: Lotus,\r\n  [POISON_KNIFE().cid]: PoisonKnife,\r\n  [BEAST_DRUG().cid]: BeastDrug,\r\n  [CURE_POTION().cid]: CurePotion,\r\n  [FIREBOMB().cid]: Firebomb,\r\n}\r\nexport const CONSUMABLE_ITEM_COLORS: Record<string, string> = {\r\n  [GODSBEARD().cid]: '#84a397',\r\n  [CELESTIAL_LOTUS().cid]: '#7a80a1',\r\n  [POISON_KNIFE().cid]: '#9c6c9e',\r\n  [BEAST_DRUG().cid]: '#b07171',\r\n  [CURE_POTION().cid]: '#8a8248',\r\n  [FIREBOMB().cid]: '#ab8272',\r\n}\r\n\r\nexport const CHARACTER_CLASS_ICONS: Record<tCharacterClass, string> = {\r\n  enemy: '',\r\n  executioner: Executioner,\r\n  mercenary: Mercenary,\r\n  patrician: Bard,\r\n  corsair: Corsair,\r\n  ranger: Hunter,\r\n  reaper: Reaper,\r\n  student: Scholar,\r\n  drifter: Hobo,\r\n}\r\n","import React from 'react'\r\nimport { styled, withWrapper } from 'styletron-react'\r\nimport { HoverToolTip } from '../components/Tooltip'\r\nimport { Theme } from '../theme'\r\n\r\nconst Div = styled('div', {\r\n  transform: 'rotateY(0deg) rotate(-45deg)',\r\n})\r\nexport const Badge = withWrapper(Div, (Element) => (props: any) => {\r\n  const { onClick, $style, ...rest } = props\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      style={{\r\n        position: props.$absolute === false ? 'relative' : 'absolute',\r\n        background: Theme.darkBgColorSolid,\r\n        padding: '4px',\r\n        fontFamily: 'New Rocker',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        boxShadow: '1px 1px 3px black',\r\n        height: props.$size || '20px',\r\n        width: props.$size || '20px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        lineHeight: '20px',\r\n        borderRadius: '30%',\r\n        transform: 'rotateY(0deg) rotate(45deg)',\r\n        textShadow: '1px 1px 3px black',\r\n        color: props.$color || 'white',\r\n        cursor: 'pointer',\r\n        top: props.$top,\r\n        userSelect: 'none',\r\n        bottom: props.$bottom,\r\n        right: props.$right,\r\n        left: props.$left,\r\n        transition: 'all 0.2s',\r\n        zIndex: 4,\r\n        ...($style || {}),\r\n      }}\r\n    >\r\n      <Element {...rest} />\r\n    </div>\r\n  )\r\n})\r\n\r\nexport interface HoverBadgePropsT {\r\n  children: JSX.Element\r\n  content: JSX.Element\r\n  badgeProps: any\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n}\r\nexport const HoverBadge = (props: HoverBadgePropsT) => {\r\n  const { children, content, badgeProps, direction } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        top: badgeProps.$top,\r\n        bottom: badgeProps.$bottom,\r\n        left: badgeProps.$left,\r\n        right: badgeProps.$right,\r\n      }}\r\n    >\r\n      <HoverToolTip\r\n        distance={2}\r\n        direction={direction || 'right'}\r\n        content={content || <div />}\r\n      >\r\n        <Badge\r\n          $absolute={false}\r\n          $size={badgeProps.$size}\r\n          $color={badgeProps.$color}\r\n          $style={badgeProps.style}\r\n        >\r\n          {children}\r\n        </Badge>\r\n      </HoverToolTip>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Badge } from '../../elements/badge'\r\nimport { CheckKVT } from '../RoundResultRenderer'\r\nimport X from '../../icons/svg/lorc/split-cross.svg'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tBaseStats } from '../../game/Stats/type'\r\nimport { tStatusType } from '../../game/Status/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface SkillChecksPropsT {\r\n  stat: keyof tBaseStats\r\n  skill?: tSkill\r\n  rolls?: number\r\n  results?: boolean[]\r\n}\r\nexport const SkillChecks = (props: SkillChecksPropsT) => {\r\n  const { stat, skill, rolls, results = [] } = props\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        justifyContent: 'center',\r\n        padding: '0px 0 24px 0',\r\n      }}\r\n    >\r\n      {Array(skill?.rolls || rolls || 0)\r\n        .fill(null)\r\n        .map((_, i) => (\r\n          <SkillCheck\r\n            key={i}\r\n            skill={skill}\r\n            perfect={\r\n              results.every((r) => r === true) && results.length === rolls\r\n            }\r\n            check={{ label: stat, result: results[i] }}\r\n          />\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface SkillCheckT {\r\n  check: CheckKVT\r\n  size?: number\r\n  iconSize?: number\r\n  padding?: number\r\n  perfect?: boolean\r\n  crit?: boolean\r\n  skill?: tSkill\r\n}\r\nexport const SkillCheck = (props: SkillCheckT) => {\r\n  const {\r\n    check,\r\n    size = 36,\r\n    iconSize,\r\n    padding = 12,\r\n    perfect = false,\r\n    skill,\r\n    crit,\r\n  } = props\r\n  const colors = getPerfectStatusColors(skill?.perfectStatus || [], crit)\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: `0px ${padding}px`,\r\n        opacity: check.result === undefined ? 0.75 : 1,\r\n      }}\r\n    >\r\n      <Badge\r\n        $absolute={false}\r\n        $size={size}\r\n        $style={{\r\n          borderColor: perfect ? colors.border : undefined,\r\n          background: perfect ? colors.background : Theme.darkBgColorSolid,\r\n        }}\r\n      >\r\n        <Icon\r\n          src={STAT_ICONS[check.label as keyof tBaseStats]}\r\n          fill={perfect ? colors.fill : getColor(check.result)}\r\n          size={iconSize || size - 4}\r\n        />\r\n        {check.result === false && (\r\n          <Icon\r\n            src={X}\r\n            shadow\r\n            fill={'lightcoral'}\r\n            size={size - 4}\r\n            style={{ position: 'absolute', top: 0 }}\r\n          />\r\n        )}\r\n      </Badge>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst getColor = (result: boolean | undefined) => {\r\n  if (result === true) return 'white'\r\n  if (result === false) return 'rgba(255,255,255,0.3)'\r\n  return 'rgba(255,255,255,0.3)'\r\n}\r\ninterface SCColorsT {\r\n  border: string\r\n  background: string\r\n  fill: string\r\n}\r\nexport const getPerfectStatusColors = (\r\n  status: tStatusType[],\r\n  crit: boolean = false,\r\n): SCColorsT => {\r\n  if (crit) {\r\n    return {\r\n      border: '#white',\r\n      background: '#00134a',\r\n      fill: '#d9e3ff',\r\n    }\r\n  }\r\n  if (status.includes('burning')) {\r\n    return {\r\n      border: '#ff9100',\r\n      background: '#5c2c00',\r\n      fill: '#d48a46',\r\n    }\r\n  }\r\n  if (status.includes('poisoned')) {\r\n    return {\r\n      border: '#00870f',\r\n      background: '#001202',\r\n      fill: '#888f88',\r\n    }\r\n  }\r\n  if (status.includes('bleeding')) {\r\n    return {\r\n      border: '#ff0000',\r\n      background: '#120000',\r\n      fill: '#d19999',\r\n    }\r\n  }\r\n  if (status.includes('cursed-vigor')) {\r\n    return {\r\n      border: '#6400a3',\r\n      background: '#10001a',\r\n      fill: '#b093c2',\r\n    }\r\n  }\r\n  if (status.includes('frozen')) {\r\n    return {\r\n      border: '#009ac4',\r\n      background: '#00161c',\r\n      fill: '#a5c8d1',\r\n    }\r\n  }\r\n\r\n  return {\r\n    border: '#ffd400',\r\n    background: '#261d00',\r\n    fill: '#ede5be',\r\n  }\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport const Monospace = styled('span', () => ({\r\n  fontFamily: 'Inconsolata, monospace',\r\n  fontWeight: 600,\r\n}))\r\nexport const Monodiv = styled('div', () => ({\r\n  fontFamily: 'Inconsolata, monospace',\r\n  fontWeight: 600,\r\n}))\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tStats } from '../../game/Stats/type'\r\nimport {\r\n  DEFENSE_BONUS_KEYS,\r\n  STAT_KEY_LABELS,\r\n  DAMAGE_BONUS_KEYS,\r\n  STAT_BONUS_KEYS,\r\n  HEALTH_FOCUS_BONUS_KEYS,\r\n} from '../../game/Stats/constants'\r\nimport { tCharacterTag } from '../../game/Character/type'\r\nimport { Theme } from '../../theme'\r\nimport { Monospace } from '../../elements/monospace'\r\n\r\nexport interface StatsPreviewPropsT {\r\n  stats: tStats\r\n}\r\n\r\nconst defense_key_colors: any = {\r\n  armor: Theme.physicalColor,\r\n  resistance: Theme.magicColor,\r\n  evasion: Theme.evasionColor,\r\n}\r\n\r\nexport const getSign = (n: number | undefined) => (n && n > 0 ? '+' : '-')\r\n\r\nexport const StatsPreview = (props: StatsPreviewPropsT) => {\r\n  const { stats } = props\r\n  return (\r\n    <FlexContainer $direction='column' style={{ fontSize: 14 }}>\r\n      {DEFENSE_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span\r\n              key={key}\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: defense_key_colors[key],\r\n              }}\r\n            >\r\n              {typeof stats[key] === 'number' && (\r\n                <Monospace>\r\n                  {getSign(stats[key] as number)}\r\n                  {Math.abs(stats[key] as number)}\r\n                </Monospace>\r\n              )}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {STAT_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] > 0 && (\r\n            <span\r\n              key={key}\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: Theme.evasionColor,\r\n              }}\r\n            >\r\n              <Monospace>\r\n                {getSign(stats[key] as number)}\r\n                {Math.abs(stats[key] as number)}\r\n              </Monospace>\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {DAMAGE_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span key={key} style={{ textTransform: 'capitalize' }}>\r\n              <Monospace>\r\n                {getSign(stats[key] as number)}\r\n                {Math.abs(stats[key] as number)}\r\n              </Monospace>\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {HEALTH_FOCUS_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span key={key} style={{ textTransform: 'capitalize' }}>\r\n              <Monospace>\r\n                {getSign(stats[key] as number)}\r\n                {Math.abs(stats[key] as number)}\r\n              </Monospace>\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {STAT_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] < 0 && (\r\n            <span\r\n              key={key}\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: 'lightcoral',\r\n              }}\r\n            >\r\n              <Monospace>\r\n                {getSign(stats[key] as number)}\r\n                {Math.abs(stats[key] as number)}\r\n              </Monospace>\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {(Object.keys(stats.damageModifiers) as tCharacterTag[])\r\n        .filter((tag) => stats.damageModifiers[tag] > 0)\r\n        .map((tag) => (\r\n          <span key={tag}>\r\n            +{Math.floor(stats.damageModifiers[tag] * 100)}% damage against{' '}\r\n            {tag}\r\n          </span>\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { tStatusType } from '../Status/type'\r\n\r\nexport type tPerfectKey = tStatusType | 'splash' | 'pierce' | 'heal'\r\nexport const PERFECT_DISPLAY_INFO: Partial<Record<tPerfectKey, string>> = {\r\n  splash: 'Splash Damage',\r\n  pierce: 'Ignore Resistances',\r\n  bleeding: 'Bleed',\r\n  burning: 'Burn',\r\n  frozen: 'Freeze',\r\n  poisoned: 'Poison',\r\n  targeted: 'Taunt Enemies',\r\n  stunned: 'Stun',\r\n  evasive: 'Become Evasive',\r\n  heal: 'Heal',\r\n  protected: 'Protect',\r\n  'attack-up': 'Attack Up',\r\n  'speed-down': 'Speed Down',\r\n  rushed: 'Rush Character',\r\n  reset: 'Reset Character',\r\n  cure: 'Cure Character',\r\n  blessed: 'Remove Curses',\r\n  'evade-up': 'Evade Up',\r\n}\r\n","import { tProcessedCharacter } from '../Character/type'\r\nimport {\r\n  tSkill,\r\n  tSourceSkillResult,\r\n  tTargetSkillResult,\r\n  tSkillResult,\r\n  tSkillTarget,\r\n  tSkillTargetType,\r\n} from './type'\r\nimport { resolveCheck } from '../Roll/util'\r\nimport {\r\n  getRawDamage,\r\n  getReflectedDamage,\r\n  isCharacter,\r\n  hasStatus,\r\n  getDamageResistance,\r\n} from '../Character/util'\r\nimport { tProcessedParty } from '../Party/type'\r\nimport { isParty } from '../Party/util'\r\nimport { tDamage } from '../Damage/type'\r\nimport { tPerfectKey, PERFECT_DISPLAY_INFO } from './constants'\r\nimport { noneg } from '../../util'\r\n\r\nexport const getSourceSkillResult = (\r\n  source: tProcessedCharacter,\r\n  skill: tSkill,\r\n  inspirationUsed: number = 0,\r\n): tSourceSkillResult => {\r\n  const rollResults = Array(skill.rolls)\r\n    .fill(null)\r\n    .map((_, i) =>\r\n      hasStatus(source, 'shocked') && i === 0\r\n        ? false\r\n        : i < inspirationUsed\r\n        ? true\r\n        : resolveCheck(\r\n            source,\r\n            skill.weaponStatOverride || source.weapon.stat,\r\n            skill.offset,\r\n          ),\r\n    )\r\n  const passedCount = rollResults.filter((r) => r).length\r\n  const perfect = passedCount === skill.rolls\r\n  const criticalHitSuccess = resolveCheck(source, 'criticalChance')\r\n  const rollDamageModifier = skill.rolls > 0 ? passedCount / skill.rolls : 1\r\n  const damageModifier =\r\n    ((100 + source.stats.attackDamageModifier) / 100) * skill.damageModifier\r\n  const rawDamage = {\r\n    ...source.weapon.damage,\r\n    value: Math.round(\r\n      ((skill.weaponDamageOverride || source.weapon.damage.value) +\r\n        source.stats.attackDamageOffset) *\r\n        damageModifier *\r\n        rollDamageModifier *\r\n        (perfect && criticalHitSuccess\r\n          ? source.stats.criticalDamageModifier\r\n          : 1),\r\n    ),\r\n    range: skill.weaponRangeOverride || source.weapon.damage.range,\r\n  }\r\n  return {\r\n    source,\r\n    skill,\r\n    inspirationUsed: inspirationUsed || 0,\r\n    rollResults,\r\n    passedCount,\r\n    perfect,\r\n    accuracySuccess:\r\n      skill.damage && skill.rolls > 0 ? passedCount > 0 : perfect,\r\n    criticalHitSuccess: perfect && criticalHitSuccess,\r\n    weaponDidBreak:\r\n      rollResults.every((r) => r === false) && source.weapon.breakable,\r\n    rawDamage,\r\n    splashDamage: {\r\n      ...source.weapon.damage,\r\n      value:\r\n        perfect && skill.perfectSplash\r\n          ? Math.round(rawDamage.value * skill.splashDamageModifier)\r\n          : 0,\r\n      range: skill.weaponRangeOverride || source.weapon.damage.range,\r\n    },\r\n    ignoreResistance: perfect && skill.perfectPierce,\r\n    addedStatus: perfect ? skill.perfectStatus : [],\r\n  }\r\n}\r\n\r\nexport const getTargetSkillResult = (\r\n  target: tProcessedCharacter,\r\n  sourceResult: tSourceSkillResult,\r\n): tTargetSkillResult => {\r\n  const dodgeResult = resolveCheck(target, 'evasion')\r\n  const dodgeSuccess = hasStatus(target, 'evasive')\r\n    ? !sourceResult.perfect\r\n    : !sourceResult.perfect && dodgeResult\r\n  const damage = getRawDamage(\r\n    sourceResult.source,\r\n    target,\r\n    sourceResult.rawDamage,\r\n  )\r\n  return {\r\n    ...sourceResult,\r\n    target,\r\n    dodgeSuccess,\r\n    totalDamage: {\r\n      ...damage,\r\n      value: dodgeSuccess ? 0 : damage.value,\r\n    },\r\n    reflectedDamage: getReflectedDamage(target, damage),\r\n    loggedDamgge: {\r\n      ...damage,\r\n      value: dodgeSuccess\r\n        ? 0\r\n        : noneg(damage.value - getDamageResistance(target, damage)),\r\n    },\r\n  }\r\n}\r\n\r\nexport const getSkillResult = (\r\n  source: tProcessedCharacter,\r\n  targets: tProcessedCharacter[],\r\n  skill: tSkill,\r\n): tSkillResult => {\r\n  const sourceResult = getSourceSkillResult(source, skill)\r\n  return {\r\n    sourceResult,\r\n    targetResults: targets.map((target) =>\r\n      getTargetSkillResult(target, sourceResult),\r\n    ),\r\n  }\r\n}\r\n\r\nexport const resolveSkillTarget = (\r\n  target: tSkillTarget,\r\n): tProcessedCharacter[] => {\r\n  switch (target.type) {\r\n    case 'single':\r\n      return target.character ? [target.character] : []\r\n    case 'ally':\r\n      return target.character ? [target.character] : []\r\n    case 'self':\r\n      return target.character ? [target.character] : []\r\n    case 'party':\r\n      return target.party?.characters || []\r\n    case 'group':\r\n      return target.party?.characters || []\r\n    default:\r\n      return []\r\n  }\r\n}\r\n\r\nexport const makeSkillTarget = (\r\n  type: tSkillTargetType,\r\n  target: tProcessedCharacter | tProcessedParty,\r\n): tSkillTarget => {\r\n  return {\r\n    type,\r\n    character: isCharacter(target)\r\n      ? (target as tProcessedCharacter)\r\n      : undefined,\r\n    party: isParty(target) ? (target as tProcessedParty) : undefined,\r\n  }\r\n}\r\n\r\nexport const getSkillTargetOptions = (\r\n  source: tProcessedCharacter,\r\n  sourceParty: tProcessedParty,\r\n  targetParty: tProcessedParty,\r\n  skill: tSkill,\r\n): tProcessedCharacter[] | tProcessedParty[] => {\r\n  switch (skill.targetType) {\r\n    case 'single':\r\n      return targetParty.characters.filter((c) => c.health > 0)\r\n    case 'ally':\r\n      return sourceParty.characters.filter((c) => c.health > 0)\r\n    case 'group':\r\n      return [targetParty]\r\n    case 'party':\r\n      return [sourceParty]\r\n    case 'self':\r\n      return [source]\r\n    default:\r\n      return []\r\n  }\r\n}\r\n\r\nexport const getSkillDamage = (\r\n  skill: tSkill,\r\n  source: tProcessedCharacter,\r\n): tDamage => {\r\n  return {\r\n    ...source.weapon.damage,\r\n    value:\r\n      ((skill.weaponDamageOverride || source.weapon.damage.value) +\r\n        source.stats.attackDamageOffset) *\r\n      (skill.damageModifier + source.stats.attackDamageModifier / 100),\r\n  }\r\n}\r\n\r\nexport const getPerfectKeys = (skill: tSkill): tPerfectKey[] => {\r\n  let base: tPerfectKey[] = [...skill.perfectStatus]\r\n  if (skill.perfectSplash) base = [...base, 'splash']\r\n  if (skill.perfectPierce) base = [...base, 'pierce']\r\n  if (skill.healing) base = [...base, 'heal']\r\n  return base\r\n}\r\n\r\nexport const getPerfectText = (\r\n  skill: tSkill,\r\n  character: tProcessedCharacter,\r\n): string => {\r\n  const perfectKeys = getPerfectKeys(skill)\r\n  const rawDamage = getSkillDamage(skill, character)\r\n\r\n  return perfectKeys.reduce((res, key, i) => {\r\n    let pre = `${res}${i > 0 ? ',' : ''}`\r\n    const text = PERFECT_DISPLAY_INFO[key]\r\n    switch (key) {\r\n      case 'splash':\r\n        return `${pre} ${Math.floor(skill.splashDamageModifier * 100)}% ${text}`\r\n      case 'heal':\r\n        return `${pre} ${text} ${character.stats.consumableHealthGainOffset} HP`\r\n      default:\r\n        return `${pre} ${text}`\r\n    }\r\n  }, '')\r\n}\r\n","import React from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { getSkillDamage, getPerfectText } from '../../game/Skill/util'\r\nimport { getChecksProbability } from '../../game/Roll/util'\r\nimport { Theme } from '../../theme'\r\nimport { Icon } from '../Icon'\r\nimport { SKILL_ICONS } from '../../icons/maps'\r\n\r\nexport interface SkillPreviewPropsT {\r\n  skill: tSkill\r\n  source: tProcessedCharacter\r\n  targets?: tProcessedCharacter[]\r\n}\r\nexport const SkillPreview = (props: SkillPreviewPropsT) => {\r\n  const { skill, source } = props\r\n  const perfectChance = getChecksProbability(\r\n    source,\r\n    Array(skill.rolls)\r\n      .fill(null)\r\n      .map((_, i) => ({ key: source.weapon.stat, offset: skill.offset })),\r\n  )\r\n  const stat = skill.weaponStatOverride || source.weapon.stat\r\n  const damage = getSkillDamage(skill, source)\r\n  const perfectKeys = getPerfectText(skill, source)\r\n  return (\r\n    <BoxContainer\r\n      style={{ marginTop: 30, position: 'relative', minWidth: 300 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <FlexContainer $direction='column' style={{ alignItems: 'center' }}>\r\n        <FlexContainer style={{ marginTop: -27 }}>\r\n          <FullContainer />\r\n          <BoxContainer\r\n            substyle={{\r\n              padding: '4px 12px',\r\n              fontSize: 18,\r\n              background: Theme.otherGrey,\r\n              fontFamily: Theme.titleFont,\r\n              textShadow: '1px 1px 3px black',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Icon\r\n              src={SKILL_ICONS[skill.name]}\r\n              size={16}\r\n              style={{ marginRight: 8 }}\r\n            />\r\n            {skill.name}\r\n          </BoxContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n        <span\r\n          style={{\r\n            color: 'rgba(255,255,255,0.4)',\r\n            marginTop: 8,\r\n            marginBottom: 20,\r\n          }}\r\n        >\r\n          Perfect ({Math.floor(perfectChance * 100)}%){' '}\r\n          {perfectKeys.length > 0 && '='} {perfectKeys}\r\n        </span>\r\n        <FlexContainer $full style={{ width: '100%', marginBottom: 8 }}>\r\n          {damage.value > 0 && skill.damage && (\r\n            <FlexContainer\r\n              $full\r\n              $direction='column'\r\n              style={{ alignItems: 'center', marginRight: 10 }}\r\n            >\r\n              <span\r\n                style={{\r\n                  color: damage.type === 'physical' ? 'lightblue' : 'plum',\r\n                  fontFamily: 'New Rocker',\r\n                  fontSize: 32,\r\n                }}\r\n              >\r\n                {`${Math.floor(damage.value)}`}\r\n              </span>\r\n              <span style={{ color: 'rgba(255,255,255,0.2)' }}>Max DMG</span>\r\n            </FlexContainer>\r\n          )}\r\n          {skill.rolls > 0 && (\r\n            <FlexContainer\r\n              $full\r\n              $direction='column'\r\n              style={{ alignItems: 'center' }}\r\n            >\r\n              <span\r\n                style={{\r\n                  fontFamily: 'New Rocker',\r\n                  fontSize: 32,\r\n                }}\r\n              >\r\n                {source.stats[stat] + skill.offset}%\r\n              </span>\r\n              <span style={{ color: 'rgba(255,255,255,0.2)' }}>\r\n                Per Check ACC\r\n              </span>\r\n            </FlexContainer>\r\n          )}\r\n        </FlexContainer>\r\n        {skill.consumableId && (\r\n          <div\r\n            style={{\r\n              color: Theme.healthRedColor,\r\n              fontSize: 12,\r\n              fontWeight: 'bolder',\r\n              marginBottom: 8,\r\n            }}\r\n          >\r\n            consumable\r\n          </div>\r\n        )}\r\n        <FlexContainer style={{ marginBottom: -18 }}>\r\n          <FullContainer />\r\n          <BoxContainer\r\n            substyle={{\r\n              padding: '2px 8px',\r\n              background: Theme.otherGrey,\r\n              textShadow: '1px 1px 3px black',\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            {skill.targetType} target\r\n          </BoxContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { styled } from 'styletron-react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { tItemRarity } from '../../game/Item/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { ARMOR_TYPE_ICONS, WEAPON_TYPE_ICONS } from '../../icons/maps'\r\nimport { Theme } from '../../theme'\r\nimport { Icon } from '../Icon'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { StatsPreview } from '../StatsPreview'\r\nimport Ranged from '../../icons/svg/lorc/high-shot.svg'\r\nimport Melee from '../../icons/svg/lorc/battered-axe.svg'\r\nimport Breakable from '../../icons/svg/lorc/broken-bone.svg'\r\nimport { Button } from '../../elements/button'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { SkillPreview } from '../SkillPreview'\r\nimport { makeCharacter, processCharacter } from '../../game/Character/util'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\n\r\nexport const getDamageColor = (weapon: tWeapon) => {\r\n  if (weapon.damage.type === 'physical') return 'lightblue'\r\n  if (weapon.damage.type === 'magic') return 'plum'\r\n  return 'white'\r\n}\r\n\r\nexport interface ItemCardPropsT {\r\n  item: tArmor | tWeapon | tConsumable\r\n  character: tProcessedCharacter\r\n  showBuyButton?: boolean\r\n  buyButtonDisabled?: boolean\r\n  cost?: number\r\n  buyText?: string | JSX.Element\r\n  onBuyClick?: () => void\r\n}\r\n\r\ninterface ItemTitlePropsT {\r\n  $rarity: tItemRarity\r\n}\r\nconst ItemTitle = styled('span', (props: ItemTitlePropsT) => {\r\n  const { $rarity } = props\r\n  return {\r\n    color: ITEM_RARITY_COLORS[$rarity],\r\n    fontFamily: Theme.titleFont,\r\n    fontSize: '18px',\r\n    textShadow: '1px 1px 3px black',\r\n    textTransform: 'capitalize',\r\n  }\r\n})\r\nconst ItemSubtitle = styled('div', {\r\n  color: 'rgba(255,255,255,0.3)',\r\n  display: 'flex',\r\n  width: '100%',\r\n  justifyContent: 'space-between',\r\n  textTransform: 'capitalize',\r\n  fontSize: '13px',\r\n})\r\n\r\nexport const ItemCard = (props: ItemCardPropsT) => {\r\n  const {\r\n    item,\r\n    character,\r\n    cost,\r\n    showBuyButton,\r\n    buyButtonDisabled = false,\r\n    buyText,\r\n    onBuyClick,\r\n  } = props\r\n  const isArmor = item.itemType === 'armor'\r\n  const isWeapon = item.itemType === 'weapon'\r\n  const isConsumable = item.itemType === 'consumable'\r\n  const rarityColor = ITEM_RARITY_COLORS[item.rarity]\r\n  const weapon = item as tWeapon\r\n  const armor = item as tArmor\r\n  const consumable = item as tConsumable\r\n  const skill = weapon.skills\r\n    ? weapon.skills[0]\r\n    : armor.skills\r\n    ? armor.skills[0]\r\n    : undefined\r\n  const skills = consumable.skill\r\n    ? [consumable.skill]\r\n    : weapon.skills\r\n    ? weapon.skills\r\n    : armor.skills\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ border: '1px solid black', width: 240, textAlign: 'left' }}\r\n    >\r\n      <BoxContainer\r\n        style={{\r\n          borderWidth: 2,\r\n          borderColor: rarityColor,\r\n        }}\r\n        substyle={{\r\n          border: `1px solid ${Theme.darkBgColorSolid}`,\r\n          background: Theme.otherGrey,\r\n          padding: 0,\r\n          boxShadow: 'none',\r\n        }}\r\n      >\r\n        <FlexContainer $full $direction='column'>\r\n          <FlexContainer\r\n            style={{\r\n              height: 56,\r\n              whiteSpace: 'nowrap',\r\n              alignItems: 'center',\r\n              background: Theme.mediumBgColor,\r\n              padding: '0px 16px 0 8px',\r\n              boxShadow: '0px 2px 3px black',\r\n              marginBottom: 8,\r\n              marginTop: -2,\r\n              marginRight: -1,\r\n              marginLeft: -1,\r\n            }}\r\n          >\r\n            {isWeapon && (\r\n              <Icon\r\n                src={WEAPON_TYPE_ICONS[weapon.type]}\r\n                fill={rarityColor}\r\n                size={32}\r\n                style={{ marginRight: 10 }}\r\n                shadow\r\n              />\r\n            )}\r\n            {isArmor && (\r\n              <Icon\r\n                src={ARMOR_TYPE_ICONS[armor.type]}\r\n                fill={rarityColor}\r\n                size={32}\r\n                style={{ marginRight: 10 }}\r\n                shadow\r\n              />\r\n            )}\r\n            <FlexContainer $direction='column' $full>\r\n              <ItemTitle $rarity={item.rarity}>{item.name}</ItemTitle>\r\n              <ItemSubtitle>\r\n                <span>\r\n                  {item.rarity} {weapon.type}\r\n                </span>\r\n                <span>{weapon.twoHand && '2-hand'}</span>\r\n              </ItemSubtitle>\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n          <FlexContainer $direction='column' style={{ padding: 4 }}>\r\n            {skill && (\r\n              <FlexContainer style={{ marginBottom: 8, padding: 4 }}>\r\n                <FullContainer />\r\n                {Array(skill.rolls)\r\n                  .fill(null)\r\n                  .map((_, i) => (\r\n                    <SkillCheck\r\n                      key={i}\r\n                      check={{ label: weapon.stat, result: true }}\r\n                      size={18}\r\n                      iconSize={18}\r\n                      padding={4}\r\n                      skill={skill}\r\n                    />\r\n                  ))}\r\n                <FullContainer />\r\n              </FlexContainer>\r\n            )}\r\n            <BoxContainer\r\n              dark\r\n              substyle={{\r\n                minHeight: 120,\r\n                textAlign: 'left',\r\n              }}\r\n            >\r\n              <FlexContainer>\r\n                <FlexContainer $full $direction='column'>\r\n                  {weapon.damage && (\r\n                    <FlexContainer\r\n                      style={{\r\n                        height: 28,\r\n                        marginBottom: 4,\r\n                        alignItems: 'flex-end',\r\n                      }}\r\n                    >\r\n                      <span\r\n                        style={{\r\n                          color: getDamageColor(weapon),\r\n                          fontWeight: 'bolder',\r\n                          marginRight: 8,\r\n                          fontSize: 32,\r\n                          lineHeight: '28px',\r\n                        }}\r\n                      >\r\n                        {weapon.damage.value}\r\n                      </span>\r\n                      <span\r\n                        style={{\r\n                          textTransform: 'capitalize',\r\n                          color: 'rgba(255,255,255,0.3)',\r\n                        }}\r\n                      >\r\n                        {weapon.damage.type} Damage\r\n                      </span>\r\n                    </FlexContainer>\r\n                  )}\r\n                  {skills && (\r\n                    <FlexContainer\r\n                      style={{\r\n                        color: 'plum',\r\n                        fontSize: 16,\r\n                        marginBottom: 4,\r\n                        whiteSpace: 'nowrap',\r\n                        flexWrap: 'wrap',\r\n                      }}\r\n                    >\r\n                      {skills.map((skill, i) => (\r\n                        <HoverToolTip\r\n                          key={i}\r\n                          content={\r\n                            <SkillPreview skill={skill} source={character} />\r\n                          }\r\n                        >\r\n                          <div style={{ marginRight: 4, cursor: 'pointer' }}>\r\n                            {skill.name}\r\n                            {i < skills.length - 1 ? ', ' : ''}\r\n                          </div>\r\n                        </HoverToolTip>\r\n                      ))}\r\n                    </FlexContainer>\r\n                  )}\r\n                  <div style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n                    {weapon.stats && <StatsPreview stats={weapon.stats} />}\r\n                    {weapon.immunities && (\r\n                      <FlexContainer\r\n                        $direction='column'\r\n                        style={{ fontSize: 14 }}\r\n                      >\r\n                        {weapon.immunities.some((s) => s.includes('cursed')) &&\r\n                          'Cursed Immunity'}\r\n                        {weapon.immunities\r\n                          .filter((s) => !s.includes('cursed'))\r\n                          .map((status) => (\r\n                            <span\r\n                              style={{\r\n                                textTransform: 'capitalize',\r\n                                fontSize: 14,\r\n                              }}\r\n                            >\r\n                              {status} immunity\r\n                            </span>\r\n                          ))}\r\n                      </FlexContainer>\r\n                    )}\r\n                  </div>\r\n                </FlexContainer>\r\n                {isWeapon && (\r\n                  <FlexContainer\r\n                    $direction='column'\r\n                    style={{ alignItems: 'center' }}\r\n                  >\r\n                    <Icon\r\n                      src={weapon.damage.range === 'melee' ? Melee : Ranged}\r\n                      size={16}\r\n                      fill='rgba(255,255,255,0.3)'\r\n                      style={{ marginBottom: 4 }}\r\n                    />\r\n\r\n                    {weapon.breakable && (\r\n                      <Icon src={Breakable} size={16} fill='gold' />\r\n                    )}\r\n                  </FlexContainer>\r\n                )}\r\n              </FlexContainer>\r\n            </BoxContainer>\r\n            {showBuyButton && (\r\n              <FlexContainer style={{ justifyContent: 'center', marginTop: 4 }}>\r\n                <Button\r\n                  onClick={onBuyClick}\r\n                  disabled={buyButtonDisabled}\r\n                  style={{ padding: '8px 16px', width: '100%' }}\r\n                >\r\n                  {buyText || `Buy (${cost || 0})`}\r\n                </Button>\r\n              </FlexContainer>\r\n            )}\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </BoxContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport Gold from '../../icons/svg/delapouite/coins.svg'\r\nimport XP from '../../icons/svg/lorc/laurel-crown.svg'\r\nimport { Icon } from '../Icon'\r\nimport { tEncounterReward } from '../../game/Encounter/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { ItemCard } from '../ItemCard'\r\nimport { Theme } from '../../theme'\r\n\r\nconst getItem = (\r\n  character: tProcessedCharacter,\r\n  item: tWeapon | tArmor,\r\n): tWeapon | tArmor | undefined => {\r\n  if (item.itemType === 'weapon') {\r\n    return character.weapon\r\n  } else {\r\n    const armor = item as tArmor\r\n    return character.armor.find((a) => a.resource === armor.resource)\r\n  }\r\n}\r\n\r\nexport interface CombatVictoryModalPropsT {\r\n  rewards: tEncounterReward\r\n  title: string\r\n  showOther?: boolean\r\n  onEquipClick: (characterId: string, item: tWeapon | tArmor) => void\r\n  onNextClick: () => void\r\n}\r\n\r\nexport const CombatVictoryModalPure = (props: CombatVictoryModalPropsT) => {\r\n  const { rewards, title, showOther = true, onEquipClick, onNextClick } = props\r\n  const { party } = usePartyContext()\r\n  const [items, setItems] = useState(rewards.items)\r\n  const first = items[0]\r\n\r\n  const next = () => {\r\n    if (\r\n      (items.length === 1 && rewards.items.length > 0) ||\r\n      rewards.items.length === 0\r\n    ) {\r\n      onNextClick()\r\n    } else {\r\n      setItems((i) => {\r\n        const [first, ...rest] = i\r\n        return rest\r\n      })\r\n    }\r\n  }\r\n\r\n  const equip = (characterId: string) => {\r\n    if (first) {\r\n      onEquipClick(characterId, first as tArmor | tWeapon)\r\n      next()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ textAlign: 'center', minHeight: 420 }}\r\n    >\r\n      <h1 style={{ fontFamily: Theme.titleFont, textAlign: 'center' }}>\r\n        {title}\r\n      </h1>\r\n      <FlexContainer $direction='column' style={{ color: 'white' }}>\r\n        {showOther && (\r\n          <>\r\n            <FlexContainer style={{ marginBottom: 16 }}>\r\n              <FlexContainer>\r\n                <Icon src={Gold} size={18} style={{ marginRight: 8 }} />\r\n                <span>{rewards.gold} Gold</span>\r\n              </FlexContainer>\r\n              <FullContainer />\r\n              <FlexContainer>\r\n                <Icon src={XP} size={18} style={{ marginRight: 8 }} />\r\n                <span>{rewards.xp} XP</span>\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          </>\r\n        )}\r\n        {first && (\r\n          <FlexContainer $direction='column'>\r\n            <FlexContainer style={{ marginBottom: 16 }}>\r\n              <FullContainer />\r\n              <FlexContainer $direction='column'>\r\n                <ItemCard item={first} character={party.characters[0]} />\r\n                <span\r\n                  style={{\r\n                    marginTop: 8,\r\n                    color: 'rgba(255,255,255,0.3)',\r\n                    fontWeight: 'bold',\r\n                    fontSize: 12,\r\n                  }}\r\n                >\r\n                  1 of {items.length}\r\n                </span>\r\n              </FlexContainer>\r\n              <FullContainer />\r\n            </FlexContainer>\r\n            {(first.itemType === 'armor' || first.itemType === 'weapon') && (\r\n              <FlexContainer\r\n                style={{ marginBottom: 8, justifyContent: 'center' }}\r\n              >\r\n                {party.characters.map((character) => (\r\n                  <HoverToolTip\r\n                    key={character.id}\r\n                    direction='down'\r\n                    content={\r\n                      <>\r\n                        {getItem(character, first as tWeapon | tArmor) && (\r\n                          <ItemCard\r\n                            character={party.characters[0]}\r\n                            item={\r\n                              getItem(character, first as tWeapon | tArmor) as\r\n                                | tWeapon\r\n                                | tArmor\r\n                            }\r\n                          />\r\n                        )}\r\n                      </>\r\n                    }\r\n                  >\r\n                    <Button\r\n                      style={{ padding: 8 }}\r\n                      onClick={() => equip(character.id)}\r\n                    >\r\n                      Equip to {character.name}\r\n                    </Button>\r\n                  </HoverToolTip>\r\n                ))}\r\n              </FlexContainer>\r\n            )}\r\n          </FlexContainer>\r\n        )}\r\n      </FlexContainer>\r\n      <FullContainer />\r\n      <Button\r\n        onClick={() => {\r\n          next()\r\n        }}\r\n      >\r\n        {items.length === 0 ? 'Close' : 'Next'}\r\n      </Button>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useMemo, useEffect } from 'react'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { consolidateRewards } from '../../game/Other/util'\r\nimport { commitRewards } from '../../game/Party/util'\r\nimport { tEncounterReward } from '../../game/Encounter/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { CombatVictoryModalPure } from './pure'\r\n\r\nexport interface CombatVictoryModalPropsT {\r\n  rewards: tEncounterReward[]\r\n}\r\n\r\nexport const CombatVictoryModal = (props: CombatVictoryModalPropsT) => {\r\n  const { rewards } = props\r\n  const { rawParty, party, updateParty, equipItem } = usePartyContext()\r\n  const { completeCurrent } = useGameStateContext()\r\n  const { close } = useModalContext()\r\n  const consolidatedRewards = useMemo(() => consolidateRewards(rewards), [\r\n    rewards,\r\n  ])\r\n\r\n  const next = () => {\r\n    close()\r\n    completeCurrent()\r\n  }\r\n  const equip = (characterId: string, item: tArmor | tWeapon) => {\r\n    equipItem(characterId, item)\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateParty(commitRewards(rawParty, consolidatedRewards))\r\n  }, [])\r\n\r\n  return (\r\n    <CombatVictoryModalPure\r\n      rewards={consolidatedRewards}\r\n      title='You Win!'\r\n      onEquipClick={equip}\r\n      onNextClick={next}\r\n    />\r\n  )\r\n}\r\n","import { tQueue } from './type'\r\nimport { tProcessedCharacter, tCharacter } from '../Character/type'\r\nimport { processCharacter } from '../Character/util'\r\n\r\nconst AGILITY_OFFSET = 120\r\n\r\nexport const makeCombatQueue = (characters: tProcessedCharacter[]): tQueue => {\r\n  const sortedCharacters = characters.sort(\r\n    (a, b) => b.stats.agility - a.stats.agility,\r\n  )\r\n  return validateQueue(\r\n    sortedCharacters.reduce(\r\n      (r, c, i) => ({\r\n        ...r,\r\n        [c.id]: AGILITY_OFFSET / 2 - c.stats.agility,\r\n      }),\r\n      {},\r\n    ),\r\n    characters,\r\n  )\r\n}\r\n\r\nexport const getMax = (queue: tQueue): number => {\r\n  return Object.keys(queue).reduce((r: number, id: string) => {\r\n    if (r < queue[id]) return queue[id]\r\n    return r\r\n  }, Number.NEGATIVE_INFINITY)\r\n}\r\n\r\nexport const getMin = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): number => {\r\n  if (characters.length === 0) throw new Error('track this call down')\r\n  return Object.keys(queue).reduce((min: number, id: string) => {\r\n    if (queue[id] < min) {\r\n      const c = characters.find((c) => c.id === id) as tProcessedCharacter\r\n      if (c.stats.queueConsolidationModifier > 0) {\r\n        return queue[id]\r\n      } else {\r\n        return min\r\n      }\r\n    }\r\n    return min\r\n  }, Number.POSITIVE_INFINITY)\r\n}\r\n\r\nexport const consolidateQueue = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  let min = getMin(queue, characters)\r\n  return Object.keys(queue).reduce((r, id) => {\r\n    const character = characters.find((c) => c.id === id) as tCharacter\r\n    const offset = character.stats.queueConsolidationModifier * min\r\n    return {\r\n      ...r,\r\n      [id]: queue[id] - offset,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const shiftQueue = (\r\n  queue: tQueue,\r\n  character: tProcessedCharacter,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  const ret = consolidateQueue(\r\n    {\r\n      ...queue,\r\n      [character.id]: AGILITY_OFFSET - character.stats.agility,\r\n    },\r\n    characters,\r\n  )\r\n  return ret\r\n}\r\n\r\nexport const getFirst = (queue: tQueue): string => {\r\n  let min = Number.POSITIVE_INFINITY\r\n  let key = Object.keys(queue)[0]\r\n  Object.keys(queue).forEach((id) => {\r\n    if (min > queue[id]) {\r\n      min = queue[id]\r\n      key = id\r\n    }\r\n  })\r\n  return key\r\n}\r\n\r\nexport const validateQueue = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  return consolidateQueue(\r\n    characters.reduce((r, c) => {\r\n      return c.health <= 0 ? r : { ...r, [c.id]: queue[c.id] }\r\n    }, {}),\r\n    characters,\r\n  )\r\n}\r\n\r\nexport const getSortedIds = (queue: tQueue): string[] => {\r\n  return Object.keys(queue).sort((a, b) => queue[a] - queue[b])\r\n}\r\n\r\nexport const commitQueueUpdates = (\r\n  queue: tQueue,\r\n  source: tProcessedCharacter,\r\n  characters: tCharacter[],\r\n): tQueue => {\r\n  const pcs = characters.map((c) => processCharacter(c))\r\n  const shiftedQueue = shiftQueue(queue, source, pcs)\r\n  const ret = validateQueue(\r\n    Object.keys(shiftedQueue).reduce((q, id) => {\r\n      const character = pcs.find((c) => c.id === id)\r\n      return {\r\n        ...q,\r\n        [id]:\r\n          character?.stats?.queueValueSet !== undefined\r\n            ? character?.stats?.queueValueSet\r\n            : shiftedQueue[id],\r\n      }\r\n    }, {}),\r\n    pcs,\r\n  )\r\n  return ret\r\n}\r\n","import { tParty } from '../Party/type'\r\nimport { tCharacter } from '../Character/type'\r\nimport { updateCharacter, getOtherCharacters } from '../Party/util'\r\nimport { tQueue } from '../Queue/type'\r\nimport { tSkillResult, tSkillCommiterResult } from './type'\r\nimport {\r\n  commitDamage,\r\n  addMultipleStatus,\r\n  decrementStatusDurations,\r\n  processCharacter,\r\n  checkStatus,\r\n} from '../Character/util'\r\nimport { noneg } from '../../util/noneg'\r\nimport { commitQueueUpdates } from '../Queue/util'\r\nimport { PLAYER_PARTY_ID } from '../Party/constants'\r\n\r\nconst partyUpdater = (\r\n  party: tParty,\r\n  characterId: string,\r\n  updater: (c: tCharacter) => tCharacter,\r\n): tParty => {\r\n  return updateCharacter(party, characterId, updater)\r\n}\r\n\r\nexport const commitSkillResults = (\r\n  playerParty: tParty,\r\n  enemyParty: tParty,\r\n  queue: tQueue,\r\n) => (result: tSkillResult): tSkillCommiterResult => {\r\n  const { source } = result.sourceResult\r\n  result.targetResults.forEach((targetResult, index) => {\r\n    const { target } = targetResult\r\n    let sourceParty = [playerParty, enemyParty].find(\r\n      (p) => p.id === source.partyId,\r\n    ) as tParty\r\n    let targetParty = [playerParty, enemyParty].find(\r\n      (p) => p.id === target.partyId,\r\n    ) as tParty\r\n    const localUpdate = (\r\n      p: tParty,\r\n      id: string,\r\n      updater: (c: tCharacter) => tCharacter,\r\n    ) => {\r\n      if (p.id === sourceParty.id) {\r\n        sourceParty = partyUpdater(p, id, updater)\r\n        return\r\n      }\r\n      if (p.id === targetParty.id) {\r\n        targetParty = partyUpdater(p, id, updater)\r\n        return\r\n      }\r\n      throw new Error('bad party id')\r\n    }\r\n\r\n    if (index === 0) {\r\n      if (targetResult.weaponDidBreak) {\r\n        localUpdate(sourceParty, source.id, (c) => {\r\n          return {\r\n            ...c,\r\n            weapon: undefined,\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    // commit main damage\r\n    localUpdate(targetParty, target.id, (c) => {\r\n      return commitDamage(\r\n        c,\r\n        targetResult.totalDamage,\r\n        targetResult.ignoreResistance,\r\n      )\r\n    })\r\n\r\n    // commit main status\r\n    localUpdate(targetParty, target.id, (c) => {\r\n      return addMultipleStatus(c, targetResult.addedStatus)\r\n    })\r\n\r\n    // comit main heal\r\n    if (targetResult.skill.healing) {\r\n      localUpdate(targetParty, target.id, (c) => {\r\n        return {\r\n          ...c,\r\n          healthOffset: c.healthOffset - c.stats.consumableHealthGainOffset,\r\n        }\r\n      })\r\n    }\r\n\r\n    // commit splash damage\r\n    if (targetResult.splashDamage.value > 0) {\r\n      getOtherCharacters(targetParty, target.id).forEach((character) => {\r\n        localUpdate(targetParty, character.id, (c) => {\r\n          return commitDamage(c, targetResult.splashDamage, false)\r\n        })\r\n      })\r\n    }\r\n\r\n    // commit reflected damage\r\n    if (targetResult.reflectedDamage.value > 0) {\r\n      localUpdate(sourceParty, source.id, (c) => {\r\n        return commitDamage(c, targetResult.reflectedDamage, false)\r\n      })\r\n    }\r\n\r\n    // commet end-of-round actions\r\n    if (index === result.targetResults.length - 1) {\r\n      // source health regen\r\n      localUpdate(sourceParty, source.id, (c) => {\r\n        const pc = processCharacter(checkStatus(c))\r\n        return {\r\n          ...c,\r\n          healthOffset: noneg(c.healthOffset - pc.stats.healthRegeneration),\r\n          consumables: c.consumables.filter(\r\n            (i) => i.id !== targetResult.skill.consumableId,\r\n          ),\r\n        }\r\n      })\r\n    }\r\n\r\n    if (sourceParty.id === PLAYER_PARTY_ID) {\r\n      playerParty = sourceParty\r\n    } else {\r\n      enemyParty = sourceParty\r\n    }\r\n    if (targetParty.id === PLAYER_PARTY_ID) {\r\n      if (sourceParty.id !== targetParty.id) {\r\n        playerParty = targetParty\r\n      }\r\n    } else {\r\n      enemyParty = targetParty\r\n    }\r\n  })\r\n\r\n  return {\r\n    playerParty: {\r\n      ...playerParty,\r\n      characters: playerParty.characters.map((c) =>\r\n        decrementStatusDurations(checkStatus(c)),\r\n      ),\r\n    },\r\n    enemyParty: {\r\n      ...enemyParty,\r\n      characters: enemyParty.characters.map((c) =>\r\n        decrementStatusDurations(checkStatus(c)),\r\n      ),\r\n    },\r\n    queue: commitQueueUpdates(queue, source, [\r\n      ...playerParty.characters,\r\n      ...enemyParty.characters,\r\n    ]),\r\n  }\r\n}\r\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n} from 'react'\r\nimport { usePartyContext } from '../PartyContext'\r\nimport { v4 } from 'uuid'\r\nimport { useHistory } from 'react-router'\r\nimport { useModalContext } from '../ModalContext'\r\nimport { CombatVictoryModal } from '../../components/CombatVictoryModal'\r\nimport { tProcessedParty, tParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tSkill, tSkillResult, tSkillTarget } from '../../game/Skill/type'\r\nimport { tQueue } from '../../game/Queue/type'\r\nimport {\r\n  processParty,\r\n  makeParty,\r\n  getRolledRewards,\r\n} from '../../game/Party/util'\r\nimport {\r\n  processCharacter,\r\n  makeCharacter,\r\n  removeTemporaryStatus,\r\n} from '../../game/Character/util'\r\nimport { makeCombatQueue, getFirst, shiftQueue } from '../../game/Queue/util'\r\nimport {\r\n  makeSkillTarget,\r\n  resolveSkillTarget,\r\n  getSkillResult,\r\n} from '../../game/Skill/util'\r\nimport { commitSkillResults } from '../../game/Skill/committer'\r\nimport { getAIAction } from '../../game/AI/util'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { Theme } from '../../theme'\r\nimport { FLOOR_1_ID } from '../../game/Encounter/floors/level1/floor-1'\r\n\r\nexport interface CombatContextT {\r\n  party: tProcessedParty\r\n  enemyParty: tProcessedParty\r\n  activeCharacter: tProcessedCharacter\r\n  characters: tProcessedCharacter[]\r\n  queue: tQueue\r\n  selectedSkill: tSkill | undefined\r\n  selectedTargets: tProcessedCharacter[]\r\n  roundResults: tSkillResult[]\r\n  activeRound: tSkillResult | undefined\r\n  isRunning: boolean\r\n  isRenderingResult: boolean\r\n  onSkillSelect: (skill: tSkill, consumableIndex?: number) => void\r\n  onTargetsSelect: (target: tProcessedCharacter | tProcessedParty) => void\r\n  reset: () => void\r\n  start: () => void\r\n  next: (nextTarget?: tProcessedCharacter | tProcessedParty) => void\r\n  commit: () => void\r\n  equipItemCombat: (characterId: string, item?: tArmor | tWeapon) => void\r\n}\r\nconst defaultValue: CombatContextT = {\r\n  party: processParty(makeParty(0, FLOOR_1_ID, false, 0)),\r\n  enemyParty: processParty(makeParty(0, FLOOR_1_ID, false, 0)),\r\n  activeCharacter: processCharacter(makeCharacter('executioner')),\r\n  characters: [],\r\n  queue: {},\r\n  selectedSkill: undefined,\r\n  selectedTargets: [],\r\n  roundResults: [],\r\n  activeRound: undefined,\r\n  isRunning: false,\r\n  isRenderingResult: false,\r\n  onSkillSelect: (skill: tSkill) => {},\r\n  onTargetsSelect: (target: tProcessedCharacter | tProcessedParty) => {},\r\n  reset: () => {},\r\n  start: () => {},\r\n  next: () => {},\r\n  commit: () => {},\r\n  equipItemCombat: (characterId, item) => {},\r\n}\r\nexport const CombatContext = createContext<CombatContextT>(defaultValue)\r\nexport const useCombatContext = () => useContext(CombatContext)\r\n\r\nexport interface CombatContextProviderPropsT {\r\n  children: JSX.Element\r\n  enemyParty: tParty\r\n  setEnemyParty: (party: tParty) => void\r\n}\r\nexport const CombatContextProvider = (props: CombatContextProviderPropsT) => {\r\n  const { children, setEnemyParty } = props\r\n  const { party, rawParty, updateParty, equipItem } = usePartyContext()\r\n  const { open } = useModalContext()\r\n  const history = useHistory()\r\n  const enemyParty = useMemo(() => {\r\n    return processParty(props.enemyParty)\r\n  }, [props.enemyParty])\r\n  const [isRunning, setIsRunning] = useState<boolean>(false)\r\n  const [isRenderingResult, setIsRenderingResult] = useState<boolean>(false)\r\n  const characters = useMemo(\r\n    () => [...party.characters, ...enemyParty.characters],\r\n    [party, enemyParty],\r\n  )\r\n  const [queue, setQueue] = useState<tQueue>(\r\n    makeCombatQueue([...party.characters, ...enemyParty.characters]),\r\n  )\r\n  const resultCommitter = useMemo(\r\n    () => commitSkillResults(rawParty, props.enemyParty, queue),\r\n    [rawParty, props.enemyParty, queue],\r\n  )\r\n  const [roundId, setRoundId] = useState<string>(v4())\r\n  const [roundResults, setRoundResults] = useState<tSkillResult[]>([])\r\n  const [activeRound, setActiveRound] = useState<tSkillResult | undefined>()\r\n  const [selectedTarget, setSelectedTarget] = useState<\r\n    tSkillTarget | undefined\r\n  >()\r\n  const [selectedSkill, setSelectedSkill] = useState<tSkill | undefined>()\r\n  const activeCharacter = useMemo(\r\n    () =>\r\n      characters.find(\r\n        (c) => c.health > 0 && c.id === getFirst(queue),\r\n      ) as tProcessedCharacter,\r\n    [queue, characters],\r\n  )\r\n\r\n  const start = () => {\r\n    setIsRunning(true)\r\n    setQueue(makeCombatQueue([...party.characters, ...enemyParty.characters]))\r\n    setRoundId(v4())\r\n    setActiveRound(undefined)\r\n    setIsRenderingResult(false)\r\n  }\r\n\r\n  const reset = () => {\r\n    setIsRunning(false)\r\n    setActiveRound(undefined)\r\n    setSelectedSkill(undefined)\r\n    setSelectedTarget(undefined)\r\n    setIsRenderingResult(false)\r\n    setRoundResults([])\r\n    setQueue({})\r\n  }\r\n\r\n  const equipItemCombat = (characterId: string, item?: tArmor | tWeapon) => {\r\n    if (item) {\r\n      equipItem(activeCharacter.id, item)\r\n    }\r\n    setQueue((q) =>\r\n      shiftQueue(q, activeCharacter, [\r\n        ...party.characters,\r\n        ...enemyParty.characters,\r\n      ]),\r\n    )\r\n    completeRound()\r\n  }\r\n\r\n  const next = (nextTarget?: tProcessedCharacter | tProcessedParty) => {\r\n    if (selectedSkill) {\r\n      const roundTarget = nextTarget\r\n        ? makeSkillTarget(selectedSkill.targetType, nextTarget)\r\n        : selectedTarget\r\n      if (!selectedSkill || !roundTarget) return\r\n      const results = getSkillResult(\r\n        activeCharacter,\r\n        resolveSkillTarget(roundTarget).filter((c) => c.health > 0),\r\n        selectedSkill,\r\n      )\r\n      setActiveRound(results)\r\n      setSelectedSkill(undefined)\r\n      setSelectedTarget(undefined)\r\n      setIsRenderingResult(true)\r\n    }\r\n  }\r\n\r\n  const onSkillSelect = (skill: tSkill, consumableIndex?: number) => {\r\n    setSelectedSkill(skill)\r\n    if (skill.targetType !== selectedSkill?.targetType) {\r\n      setSelectedTarget(undefined)\r\n    }\r\n  }\r\n\r\n  const onTargetsSelect = (target: tProcessedCharacter | tProcessedParty) => {\r\n    if (!selectedSkill) return\r\n    setSelectedTarget(makeSkillTarget(selectedSkill.targetType, target))\r\n  }\r\n\r\n  const completeRound = () => {\r\n    setRoundId(v4())\r\n    setActiveRound(undefined)\r\n    setIsRenderingResult(false)\r\n  }\r\n\r\n  const commit = useCallback(() => {\r\n    if (!activeRound) return\r\n    const result = resultCommitter(activeRound)\r\n    setRoundResults((r) => [...r, activeRound])\r\n    setEnemyParty(result.enemyParty)\r\n    updateParty(result.playerParty)\r\n    setQueue(result.queue)\r\n\r\n    completeRound()\r\n  }, [activeRound, queue])\r\n\r\n  const execEnemyTurn = (skill: tSkill, target: tSkillTarget) => {\r\n    const result = getSkillResult(\r\n      activeCharacter,\r\n      resolveSkillTarget(target),\r\n      skill,\r\n    )\r\n    setActiveRound(result)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activeCharacter && isRunning) {\r\n      if (activeCharacter.partyId === enemyParty.id) {\r\n        const { skill, target } = getAIAction(\r\n          activeCharacter,\r\n          party,\r\n          enemyParty,\r\n        )\r\n        execEnemyTurn(skill, makeSkillTarget(skill.targetType, target))\r\n      } else {\r\n        setSelectedSkill(activeCharacter.skills[0])\r\n      }\r\n    }\r\n  }, [roundId])\r\n\r\n  useEffect(() => {\r\n    if (!isRunning) return\r\n    if (enemyParty.characters.every((c) => c.health <= 0)) {\r\n      setIsRunning(false)\r\n      const rewards = getRolledRewards(\r\n        enemyParty,\r\n        party.characters.reduce((p, c) =>\r\n          p.stats.luck > c.stats.luck ? p : c,\r\n        ),\r\n      )\r\n      updateParty({\r\n        ...rawParty,\r\n        characters: rawParty.characters.map((c) => removeTemporaryStatus(c)),\r\n      })\r\n      open(<CombatVictoryModal rewards={rewards} />, {}, true)\r\n      return\r\n    }\r\n    if (party.characters.every((c) => c.health <= 0)) {\r\n      setIsRunning(false)\r\n      open(\r\n        <div>\r\n          <h1 style={{ fontFamily: Theme.titleFont, textAlign: 'center' }}>\r\n            You Lose\r\n          </h1>\r\n        </div>,\r\n      )\r\n      history.push('/')\r\n      return\r\n    }\r\n  }, [party, enemyParty])\r\n\r\n  return (\r\n    <CombatContext.Provider\r\n      value={{\r\n        party,\r\n        enemyParty,\r\n        characters,\r\n        queue,\r\n        activeCharacter,\r\n        activeRound,\r\n        selectedSkill,\r\n        selectedTargets: selectedTarget\r\n          ? resolveSkillTarget(selectedTarget)\r\n          : [],\r\n        roundResults,\r\n        isRunning,\r\n        isRenderingResult,\r\n        onSkillSelect,\r\n        onTargetsSelect,\r\n        start,\r\n        next,\r\n        commit,\r\n        reset,\r\n        equipItemCombat,\r\n      }}\r\n    >\r\n      {children}\r\n    </CombatContext.Provider>\r\n  )\r\n}\r\n","import { tSkill } from '../Skill/type'\r\nimport { tProcessedCharacter } from '../Character/type'\r\nimport { tProcessedParty } from '../Party/type'\r\nimport { getRandom } from '../../util'\r\nimport { getSkillTargetOptions } from '../Skill/util'\r\n\r\nexport interface tAIAction {\r\n  skill: tSkill\r\n  target: tProcessedCharacter | tProcessedParty\r\n}\r\nexport const getAIAction = (\r\n  source: tProcessedCharacter,\r\n  playerParty: tProcessedParty,\r\n  enemyParty: tProcessedParty,\r\n): tAIAction => {\r\n  const skill = getRandom(source.skills)\r\n  const targetedCharacters = playerParty.characters.filter(\r\n    (c) => c.status.map((t) => t.type).includes('targeted') && c.health > 0,\r\n  )\r\n  const target =\r\n    skill.targetType === 'single'\r\n      ? targetedCharacters.length > 0\r\n        ? getRandom(targetedCharacters)\r\n        : getRandom(playerParty.characters.filter((c) => c.health > 0))\r\n      : getRandom<tProcessedParty | tProcessedCharacter>(\r\n          getSkillTargetOptions(source, enemyParty, playerParty, skill),\r\n        )\r\n\r\n  return { skill, target }\r\n}\r\n","import React from 'react'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface PerfectPropsT {\r\n  show: boolean | undefined\r\n  partyId: string\r\n}\r\nexport const Perfect = (props: PerfectPropsT) => {\r\n  const { show, partyId } = props\r\n  const style = useSpring({ opacity: show ? 1 : 0 })\r\n  return show ? (\r\n    <animated.div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: 16,\r\n        fontSize: 42,\r\n        color: partyId === PLAYER_PARTY_ID ? 'rgba(255,255,255,1)' : '#c95738',\r\n        textShadow: '4px 4px 4px black',\r\n        fontFamily: Theme.titleFont,\r\n        ...style,\r\n      }}\r\n    >\r\n      Perfect!\r\n    </animated.div>\r\n  ) : null\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport Kefir from 'kefir'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport Color from 'color'\r\nimport { Perfect } from './Perfect'\r\nimport { Theme } from '../../theme'\r\nimport { CHARACTER_CLASS_COLORS } from '../../game/Character/constants'\r\n\r\nexport interface RoundResultRendererPropsT {\r\n  isModal?: boolean\r\n}\r\nexport const RoundResultRenderer = (props: RoundResultRendererPropsT) => {\r\n  const { isModal = true } = props\r\n  const { activeRound, isRunning, commit } = useCombatContext()\r\n  const { open, close } = useModalContext()\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (activeRound && !isOpen && isRunning) {\r\n      setIsOpen(true)\r\n      if (isModal) {\r\n        open(\r\n          <RoundResult\r\n            close={() => {\r\n              close(true)\r\n              setIsOpen(false)\r\n              commit()\r\n            }}\r\n          />,\r\n          {\r\n            overlay: {\r\n              background: 'transparent',\r\n            },\r\n          },\r\n          true,\r\n        )\r\n      }\r\n    }\r\n  }, [isRunning, isModal, isOpen, activeRound, open, close, commit])\r\n\r\n  if (!isModal && activeRound && isRunning) {\r\n    return (\r\n      <FlexContainer style={{ height: 290 }}>\r\n        <RoundResult\r\n          close={() => {\r\n            setIsOpen(false)\r\n            commit()\r\n          }}\r\n        />\r\n      </FlexContainer>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport interface RoundResultPropsT {\r\n  close: () => void\r\n}\r\nexport interface CheckKVT {\r\n  label: string\r\n  result: boolean | undefined\r\n}\r\nexport const RoundResult = (props: RoundResultPropsT) => {\r\n  const { close } = props\r\n  const { activeRound } = useCombatContext()\r\n  const [isDone, setIsDone] = useState(false)\r\n  const round = activeRound?.sourceResult\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n  const [roundResults, setRoundResults] = useState<CheckKVT[]>(\r\n    !round\r\n      ? []\r\n      : round.rollResults.map((result, i) => ({\r\n          label: round.skill.weaponStatOverride || round.source.weapon.stat,\r\n          result: undefined,\r\n        })),\r\n  )\r\n\r\n  const updateRoundResult = (value: CheckKVT, index: number) => {\r\n    setActiveIndex(index)\r\n    setRoundResults((r) => r.map((r, i) => (i === index ? value : r)))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!round) return\r\n    const stream = Kefir.sequentially(\r\n      200,\r\n      roundResults.map((r, i) => ({ ...r, index: i })),\r\n    )\r\n    stream.onValue((result) => {\r\n      updateRoundResult(\r\n        {\r\n          label: result.label,\r\n          result: round.rollResults[result.index],\r\n        },\r\n        result.index,\r\n      )\r\n    })\r\n    stream.onEnd(() => {\r\n      Kefir.later(round.perfect ? 1200 : 900, undefined).onValue(() => {\r\n        setIsDone(true)\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (isDone) {\r\n      close()\r\n    }\r\n  }, [isDone, close])\r\n\r\n  const showPerfect = activeIndex === roundResults.length - 1 && round?.perfect\r\n  const isPlayer = (partyId: string) => partyId === PLAYER_PARTY_ID\r\n  const targetResult = activeRound?.targetResults[0]\r\n  const showTarget =\r\n    round && targetResult && targetResult.target.id !== round.source.id\r\n  if (!round) return null\r\n  return (\r\n    <FlexContainer $direction='column' style={{ textAlign: 'center' }}>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        {roundResults.map((result, i) => (\r\n          <SkillCheck\r\n            key={i}\r\n            check={result}\r\n            perfect={showPerfect}\r\n            skill={round.skill}\r\n            crit={round.criticalHitSuccess}\r\n          />\r\n        ))}\r\n      </FlexContainer>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        <div\r\n          style={{\r\n            marginTop: 24,\r\n            fontSize: 32,\r\n            padding: '16px 32px',\r\n            color: 'rgba(255,255,255,0.8)',\r\n            textShadow: '1px 1px 1px black',\r\n          }}\r\n        >\r\n          <strong\r\n            style={{\r\n              fontWeight: 'bold',\r\n              color: isPlayer(round.source.partyId)\r\n                ? 'white'\r\n                : Theme.enemyPartyColor,\r\n            }}\r\n          >\r\n            {round.source.name}\r\n          </strong>{' '}\r\n          uses{' '}\r\n          <span style={{ color: 'rgba(255,255,255,0.9)', fontWeight: 'bold' }}>\r\n            {round.skill.name}\r\n          </span>\r\n          {showTarget && (\r\n            <span>\r\n              {' on '}\r\n              <strong\r\n                style={{\r\n                  fontWeight: 'bold',\r\n                  color: isPlayer(targetResult?.target.partyId || '')\r\n                    ? 'white'\r\n                    : Theme.enemyPartyColor,\r\n                }}\r\n              >\r\n                {targetResult?.target.name}\r\n              </strong>\r\n            </span>\r\n          )}\r\n        </div>\r\n      </FlexContainer>\r\n      <Perfect show={showPerfect} partyId={round.source.partyId} />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { tStats } from '../../game/Stats/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { STAT_BONUS_KEYS } from '../../game/Stats/constants'\r\n\r\nconst getStatColor = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tStats,\r\n): string => {\r\n  const a = character.stats[key]\r\n  const b = character.rawStats[key]\r\n  if (a === undefined || b === undefined) return 'rgba(255,255,255,0.6)'\r\n  if (a > b) return 'lightgreen'\r\n  if (b > a) return 'lightcoral'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n\r\nexport interface StatBarPropsT {\r\n  character: tProcessedCharacter\r\n}\r\nexport const StatBar = (props: StatBarPropsT) => {\r\n  const { character } = props\r\n\r\n  return (\r\n    <BoxContainer>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-between',\r\n          width: 360,\r\n          paddingTop: 10,\r\n          paddingBottom: 6,\r\n        }}\r\n      >\r\n        {STAT_BONUS_KEYS.map((key) => (\r\n          <FlexContainer\r\n            key={key}\r\n            style={{\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Icon\r\n              src={STAT_ICONS[key] || ''}\r\n              size={20}\r\n              fill={getStatColor(character, key)}\r\n              style={{ marginRight: 4 }}\r\n            />\r\n            <span style={{ color: getStatColor(character, key) }}>\r\n              {character.stats[key]}\r\n            </span>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\n\r\nexport interface UIContextT {\r\n  playerCanEquipItem: boolean\r\n  openCharacterInventoryId: string | undefined\r\n  showSkillTooltips: boolean\r\n  hoverQueueCharacterId: string | undefined\r\n  onCharacterConsumableClick: (\r\n    c: tProcessedCharacter,\r\n    index: number,\r\n    item: tConsumable,\r\n  ) => void\r\n  setPlayerCanEquipItem: (v: boolean) => void\r\n  setOpenCharacterInventoryId: (id: string | undefined) => void\r\n  setOnCharacterConsumableClick: (\r\n    fn: (c: tProcessedCharacter, index: number, item: tConsumable) => void,\r\n  ) => void\r\n  setShowSkillTooltips: (v: boolean) => void\r\n  setHoverQueueCharacterId: (id: string | undefined) => void\r\n}\r\n\r\nconst defaultValue: UIContextT = {\r\n  playerCanEquipItem: false,\r\n  openCharacterInventoryId: undefined,\r\n  showSkillTooltips: false,\r\n  hoverQueueCharacterId: undefined,\r\n  onCharacterConsumableClick: (c, i, item) => {},\r\n  setPlayerCanEquipItem: (v) => {},\r\n  setOpenCharacterInventoryId: (id) => {},\r\n  setOnCharacterConsumableClick: (fn) => {},\r\n  setShowSkillTooltips: (v) => {},\r\n  setHoverQueueCharacterId: (id) => {},\r\n}\r\n\r\nexport const UIContext = React.createContext<UIContextT>(defaultValue)\r\nexport const useUIContext = () => useContext(UIContext)\r\n\r\nexport interface UIContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const UIContextProvider = (props: UIContextProviderPropsT) => {\r\n  const { children } = props\r\n  const [playerCanEquipItem, setPlayerCanEquipItem] = useState(false)\r\n  const [showSkillTooltips, setShowSkillTooltips] = useState(true)\r\n  const [openCharacterInventoryId, setOpenCharacterInventoryId] = useState<\r\n    string | undefined\r\n  >()\r\n  const [hoverQueueCharacterId, setHoverQueueCharacterId] = useState<\r\n    string | undefined\r\n  >()\r\n  const [onCharacterConsumableClick, _setOnCharacterConsumableClick] = useState<\r\n    (c: tProcessedCharacter, i: number, item: tConsumable) => void\r\n  >((c, i, item) => {})\r\n\r\n  const setOnCharacterConsumableClick = (\r\n    fn: (c: tProcessedCharacter, index: number, item: tConsumable) => void,\r\n  ) => {\r\n    _setOnCharacterConsumableClick(() => fn)\r\n  }\r\n  return (\r\n    <UIContext.Provider\r\n      value={{\r\n        playerCanEquipItem,\r\n        openCharacterInventoryId,\r\n        showSkillTooltips,\r\n        hoverQueueCharacterId,\r\n        onCharacterConsumableClick,\r\n        setPlayerCanEquipItem,\r\n        setOpenCharacterInventoryId,\r\n        setOnCharacterConsumableClick,\r\n        setShowSkillTooltips,\r\n        setHoverQueueCharacterId,\r\n      }}\r\n    >\r\n      {children}\r\n    </UIContext.Provider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { RESOURCE_ICONS, WEAPON_TYPE_ICONS } from '../../icons/maps'\r\nimport { styled } from 'styletron-react'\r\nimport { ClickToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Button } from '../../elements/button'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tArmor, tArmorResourceType } from '../../game/Armor/type'\r\nimport {\r\n  CHARACTER_RESOURCES,\r\n  ITEM_RARITY_COLORS,\r\n} from '../../game/Item/constants'\r\nimport { Theme } from '../../theme'\r\n\r\nconst ItemRow = styled(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    marginBottom: '4px',\r\n    textShadow: '1px 1px 1px black',\r\n    background: props.$disabled\r\n      ? 'rgba(255,255,255,0.05)'\r\n      : 'linear-gradient(90deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 100%)',\r\n    paddingLeft: '8px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    textTransform: 'capitalize',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n  }\r\n})\r\n\r\nexport interface ItemPropsT {\r\n  character: tProcessedCharacter\r\n  setActiveItem: (item: tWeapon | tArmor | undefined) => void\r\n}\r\nexport const Items = (props: ItemPropsT) => {\r\n  const { character, setActiveItem } = props\r\n  const { playerCanEquipItem } = useUIContext()\r\n  return (\r\n    <FlexContainer $full $direction='column'>\r\n      <Item\r\n        disabled={false}\r\n        character={character}\r\n        resource={'weapon'}\r\n        onHover={setActiveItem}\r\n        canUnequip={playerCanEquipItem}\r\n      />\r\n      {CHARACTER_RESOURCES.map((res) => {\r\n        const disabled = res === 'offhand' && character.weapon.twoHand\r\n        return (\r\n          <Item\r\n            key={res}\r\n            disabled={disabled}\r\n            character={character}\r\n            resource={res}\r\n            onHover={setActiveItem}\r\n            canUnequip={playerCanEquipItem}\r\n          />\r\n        )\r\n      })}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface ItemProps {\r\n  character: tProcessedCharacter\r\n  resource: tArmorResourceType | 'weapon'\r\n  canUnequip?: boolean\r\n  disabled?: boolean\r\n  onHover: (item: tArmor | tWeapon | undefined) => void\r\n}\r\nexport const Item = (props: ItemProps) => {\r\n  const {\r\n    character,\r\n    resource,\r\n    canUnequip = true,\r\n    disabled = false,\r\n    onHover,\r\n  } = props\r\n  const { unequipItem } = usePartyContext()\r\n  const item =\r\n    resource === 'weapon'\r\n      ? character.weapon\r\n      : character.armor.find((a) => a.resource === resource)\r\n  return (\r\n    <ClickToolTip\r\n      direction='down'\r\n      distance={-2}\r\n      content={() => (\r\n        <>\r\n          {canUnequip && (\r\n            <BoxContainer\r\n              substyle={{\r\n                padding: 4,\r\n                width: 190,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                background: Theme.otherGrey,\r\n              }}\r\n            >\r\n              <Button\r\n                style={{ padding: '4px 8px' }}\r\n                onClick={() => {\r\n                  if (item) {\r\n                    unequipItem(character.id, item)\r\n                  }\r\n                }}\r\n              >\r\n                Unequip\r\n              </Button>\r\n              <Button style={{ padding: '4px 8px' }}>Cancel</Button>\r\n            </BoxContainer>\r\n          )}\r\n        </>\r\n      )}\r\n    >\r\n      {({ onClick, ref }) => (\r\n        <ItemRow\r\n          ref={ref}\r\n          $disabled={disabled}\r\n          onMouseEnter={() => onHover(item)}\r\n          onClick={() => {\r\n            if (item) onClick()\r\n          }}\r\n          style={{\r\n            color: ITEM_RARITY_COLORS[item?.rarity || 'common'],\r\n          }}\r\n        >\r\n          <Icon\r\n            src={\r\n              resource === 'weapon'\r\n                ? WEAPON_TYPE_ICONS[(item as tWeapon)?.type || 'fist']\r\n                : RESOURCE_ICONS[resource] || ''\r\n            }\r\n            size={16}\r\n            fill={\r\n              disabled\r\n                ? 'rgba(255,255,255,0.3)'\r\n                : ITEM_RARITY_COLORS[item?.rarity || 'common']\r\n            }\r\n            style={{ marginRight: 6 }}\r\n          />\r\n          {item?.name}\r\n        </ItemRow>\r\n      )}\r\n    </ClickToolTip>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface NamePropsT {\r\n  name: string\r\n}\r\n\r\nexport const Name = (props: NamePropsT) => {\r\n  const { name } = props\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        width: '100%',\r\n        height: 40,\r\n        marginBottom: -20,\r\n        marginTop: -20,\r\n      }}\r\n    >\r\n      <FullContainer />\r\n      <BoxContainer\r\n        style={{ zIndex: 2 }}\r\n        substyle={{ background: Theme.darkBgColor }}\r\n      >\r\n        {name}\r\n      </BoxContainer>\r\n      <FullContainer />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { CHARACTER_CLASS_COLORS } from '../../game/Character/constants'\r\nimport { tCharacter } from '../../game/Character/type'\r\nimport { Icon } from '../Icon'\r\nimport { CHARACTER_CLASS_ICONS } from '../../icons/maps'\r\n\r\nexport interface CharacterIconPropsT {\r\n  character: tCharacter\r\n  size: number\r\n  height?: number\r\n  width?: number\r\n  index?: number\r\n  style?: CSSProperties\r\n  iconStyle?: CSSProperties\r\n}\r\nexport const CharacterIcon = (props: CharacterIconPropsT) => {\r\n  const { character, size, height, width, index, style, iconStyle } = props\r\n\r\n  return (\r\n    <FlexContainer\r\n      $center\r\n      style={{\r\n        background: CHARACTER_CLASS_COLORS[character.class],\r\n        border: '2px solid rgba(255,255,255,0.8)',\r\n        height: height || size - 10,\r\n        width: width || size - 7,\r\n        alignItems: 'center',\r\n        overflow: 'hidden',\r\n        ...(style || {}),\r\n      }}\r\n    >\r\n      <Icon\r\n        src={character.icon || CHARACTER_CLASS_ICONS[character.class]}\r\n        shadow\r\n        fill={'white'}\r\n        size={size - 7}\r\n        style={{\r\n          zIndex: index || 1,\r\n          position: 'relative',\r\n          ...(iconStyle || {}),\r\n        }}\r\n      />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { CharacterIcon } from '../CharacterIcon'\r\n\r\nexport interface ImagePropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Image = (props: ImagePropsT) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n      <div>\r\n        <FlexContainer style={{ marginRight: 20, marginBottom: 10 }}>\r\n          <CharacterIcon character={character} size={142} />\r\n        </FlexContainer>\r\n      </div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { FlexContainer } from '../../elements/flex'\r\nimport { withStyle } from 'styletron-react'\r\nimport { Theme } from '../../theme'\r\n\r\nexport const Row = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    textShadow: '1px 1px 1px black',\r\n    background: props.$active ? 'rgba(255,255,255,0.2)' : undefined,\r\n    paddingLeft: '8px',\r\n    paddingTop: '2px',\r\n    paddingBottom: '2px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    cursor: 'pointer',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n    textTransform: 'capitalize',\r\n  }\r\n})\r\nexport const ActionsRow = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    padding: '4px',\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    borderTop: '1px solid black',\r\n    borderBottom: '1px solid black',\r\n    background: Theme.otherGrey,\r\n  }\r\n})\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { condenseListToStack } from '.'\r\nimport { WEAPON_TYPE_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Row, ActionsRow } from './elements'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\n\r\nexport interface WeaponListPropsT {\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n  setActiveItem: (item: tWeapon | tArmor) => void\r\n  onEquipItem?: (characterId: string, item: tWeapon | tArmor) => void\r\n}\r\n\r\nexport const WeaponList = (props: WeaponListPropsT) => {\r\n  const { character, canEquip, setActiveItem, onEquipItem } = props\r\n  const { party, sellItem, equipItem } = usePartyContext()\r\n  const [activeItemId, setActiveItemId] = useState<string | undefined>()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {condenseListToStack(\r\n        party.items\r\n          .filter((i) => i.itemType === 'weapon')\r\n          .map((i) => i as tArmor)\r\n          .sort((a, b) => a.name.localeCompare(b.name)),\r\n      ).map(({ item, count }) => {\r\n        const weapon = item as tWeapon\r\n        return (\r\n          <FlexContainer $direction='column' key={weapon.id}>\r\n            <Row\r\n              $active={weapon.id === activeItemId}\r\n              onMouseEnter={() => setActiveItem(weapon)}\r\n              onClick={(e: MouseEvent) => {\r\n                e.stopPropagation()\r\n                e.preventDefault()\r\n                setActiveItemId(weapon.id)\r\n              }}\r\n            >\r\n              <div style={{ width: 24 }}>\r\n                <Icon\r\n                  src={WEAPON_TYPE_ICONS[weapon.type || 'fist']}\r\n                  size={16}\r\n                  fill={ITEM_RARITY_COLORS[weapon.rarity]}\r\n                  style={{ marginRight: 6 }}\r\n                />\r\n              </div>\r\n              <span style={{ color: ITEM_RARITY_COLORS[weapon.rarity] }}>\r\n                {count} {weapon.name}\r\n              </span>\r\n            </Row>\r\n            {canEquip && activeItemId === weapon.id && (\r\n              <ActionsRow>\r\n                <Button\r\n                  style={{ padding: '4px 8px', marginRight: 10 }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    if (onEquipItem) {\r\n                      onEquipItem(character.id, weapon)\r\n                    } else {\r\n                      equipItem(character.id, weapon)\r\n                    }\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Equip\r\n                </Button>\r\n                <FullContainer />\r\n                <Button\r\n                  style={{ padding: '4px 8px', marginRight: 10 }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    sellItem(item.id)\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Sell Item ({item.goldValue})\r\n                </Button>\r\n                <Button\r\n                  style={{ padding: '4px 8px' }}\r\n                  onClick={() => {\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </ActionsRow>\r\n            )}\r\n          </FlexContainer>\r\n        )\r\n      })}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { styled, withStyleDeep } from 'styletron-react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tCharacterTag, tProcessedCharacter } from '../../game/Character/type'\r\nimport { tStats } from '../../game/Stats/type'\r\n\r\nexport const StatRow = withStyleDeep(FlexContainer, (props: any) => ({\r\n  flexDirection: 'column',\r\n  flex: props.$full ? 1 : undefined,\r\n  textTransform: 'capitalize',\r\n  whiteSpace: 'nowrap',\r\n}))\r\n\r\nexport interface StatsPropsT {\r\n  character: tProcessedCharacter\r\n}\r\nexport const Stats = (props: StatsPropsT) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer style={{ padding: 8 }}>\r\n      <FlexContainer $full $direction='column' style={{ marginRight: 16 }}>\r\n        <Stat character={character} stat={'strength'} />\r\n        <Stat character={character} stat={'dexterity'} />\r\n        <Stat character={character} stat={'intelligence'} />\r\n        <Stat character={character} stat={'charisma'} />\r\n        <Stat character={character} stat={'vigor'} />\r\n        <Stat character={character} stat={'agility'} />\r\n        <Stat character={character} stat={'luck'} />\r\n        <Stat character={character} stat={'evasion'} />\r\n        <Stat character={character} stat={'armor'} />\r\n        <Stat\r\n          character={character}\r\n          stat={'resistance'}\r\n          label='Magic Resistance'\r\n        />\r\n\r\n        <Stat\r\n          character={character}\r\n          stat={'criticalChance'}\r\n          label='Critical Chance'\r\n        />\r\n\r\n        <Stat\r\n          character={character}\r\n          stat={'healthRegeneration'}\r\n          label={'Health Regeneration'}\r\n        />\r\n        <Stat\r\n          character={character}\r\n          stat={'goldModifier'}\r\n          label={'% More Gold'}\r\n        />\r\n      </FlexContainer>\r\n      <FlexContainer $full $direction='column'>\r\n        {Object.keys(character.stats.damageModifiers)\r\n          .filter(\r\n            (k) => character.stats.damageModifiers[k as tCharacterTag] !== 0,\r\n          )\r\n          .map((key) => (\r\n            <FlexContainer $full>\r\n              <StatRow $full>\r\n                +{character.stats.damageModifiers[key as tCharacterTag] * 100}\r\n                {'% '}\r\n                vs {key}\r\n              </StatRow>\r\n            </FlexContainer>\r\n          ))}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\ninterface StatPropsT {\r\n  character: tProcessedCharacter\r\n  stat: keyof tStats\r\n  label?: string\r\n}\r\nconst Stat = (props: StatPropsT) => {\r\n  const { stat, label, character } = props\r\n  return (\r\n    <FlexContainer $full>\r\n      <StatRow $full>{label || stat}</StatRow>\r\n      <StatRow>{character.stats[stat]}</StatRow>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport Weapons from '../../icons/svg/lorc/broadsword.svg'\r\nimport Armor from '../../icons/svg/delapouite/leather-armor.svg'\r\nimport { ArmorList } from './ArmorList'\r\nimport { WeaponList } from './WeaponList'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { Theme } from '../../theme'\r\nimport { Stats } from './Stats'\r\n\r\nexport interface MenuOptionT {\r\n  key: string\r\n  icon: string\r\n  count: (\r\n    character: tProcessedCharacter,\r\n    party: tProcessedParty,\r\n  ) => number | undefined\r\n  render: (\r\n    character: tProcessedCharacter,\r\n    canEquip: boolean,\r\n    setActiveItem: (item: tWeapon | tArmor) => void,\r\n  ) => JSX.Element\r\n}\r\nexport const ACTIVE_CHARACTER_MENU_KEYS: MenuOptionT[] = [\r\n  {\r\n    key: 'all',\r\n    icon: '',\r\n    count: (c, p) => p.items.length,\r\n    render: (character, canEquip, setActiveItem) => (\r\n      <FlexContainer $direction='column'>\r\n        <WeaponList\r\n          character={character}\r\n          canEquip={canEquip}\r\n          setActiveItem={setActiveItem}\r\n        />\r\n        <ArmorList\r\n          character={character}\r\n          canEquip={canEquip}\r\n          setActiveItem={setActiveItem}\r\n        />\r\n      </FlexContainer>\r\n    ),\r\n  },\r\n  {\r\n    key: 'weapons',\r\n    icon: Weapons,\r\n    count: (c, p) => p.items.filter((i) => i.itemType === 'weapon').length,\r\n    render: (character, canEquip, setActiveItem) => (\r\n      <WeaponList\r\n        character={character}\r\n        canEquip={canEquip}\r\n        setActiveItem={setActiveItem}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    key: 'armor',\r\n    icon: Armor,\r\n    count: (c, p) => p.items.filter((i) => i.itemType === 'armor').length,\r\n    render: (character, canEquip, setActiveItem) => (\r\n      <ArmorList\r\n        character={character}\r\n        canEquip={canEquip}\r\n        setActiveItem={setActiveItem}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    key: 'stats',\r\n    icon: '',\r\n    count: (c, p) => undefined,\r\n    render: (character) => <Stats character={character} />,\r\n  },\r\n]\r\n\r\nexport interface MenuSelectPropsT {\r\n  character: tProcessedCharacter\r\n  party: tProcessedParty\r\n  activeKey: string\r\n  onActiveKeyChange: (key: string) => void\r\n}\r\n\r\nexport const MenuSelect = (props: MenuSelectPropsT) => {\r\n  const { character, party, activeKey, onActiveKeyChange } = props\r\n\r\n  return (\r\n    <FlexContainer style={{ justifyContent: 'center', marginTop: 8 }}>\r\n      {ACTIVE_CHARACTER_MENU_KEYS.map((option) => (\r\n        <Button\r\n          key={option.key}\r\n          style={{\r\n            padding: '4px 8px',\r\n            fontSize: 12,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            borderBottom: 0,\r\n            background:\r\n              option.key === activeKey ? Theme.lightBgColor : undefined,\r\n          }}\r\n          onClick={() => {\r\n            onActiveKeyChange(option.key)\r\n          }}\r\n        >\r\n          <FullContainer\r\n            style={{\r\n              marginRight: option.count(character, party) === undefined ? 0 : 8,\r\n              textTransform: 'capitalize',\r\n            }}\r\n          >\r\n            {option.key}\r\n          </FullContainer>\r\n          <FullContainer style={{ paddingRight: 2 }}>\r\n            {option.count(character, party)}\r\n          </FullContainer>\r\n        </Button>\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { ItemCard } from '../ItemCard'\r\n\r\nexport interface HoverAreaPropsT {\r\n  character: tProcessedCharacter\r\n  activeItem: tWeapon | tArmor\r\n}\r\n\r\nexport const HoverArea = (props: HoverAreaPropsT) => {\r\n  const { character, activeItem } = props\r\n  const foundArmor = character.armor.find(\r\n    (a) => a.resource === (activeItem as tArmor).resource,\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {activeItem.itemType === 'armor' && (\r\n        <FlexContainer>\r\n          {foundArmor && <ItemCard item={foundArmor} character={character} />}\r\n          {foundArmor?.id !== activeItem.id && (\r\n            <ItemCard item={activeItem} character={character} />\r\n          )}\r\n        </FlexContainer>\r\n      )}\r\n      {activeItem.itemType === 'weapon' && (\r\n        <FlexContainer>\r\n          <ItemCard item={character.weapon} character={character} />\r\n          {character.weapon.id !== activeItem.id && (\r\n            <ItemCard item={activeItem} character={character} />\r\n          )}\r\n        </FlexContainer>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { FlexContainer } from './flex'\r\nimport { Theme } from '../theme'\r\nimport { HoverToolTip } from '../components/Tooltip'\r\n\r\nexport interface HexagonPropsT {\r\n  color: string\r\n  size: number\r\n  style?: CSSProperties\r\n  children?: JSX.Element | string | number\r\n  childStyle?: CSSProperties\r\n}\r\nexport const Hexagon = (props: HexagonPropsT) => {\r\n  const { color, size, children, childStyle } = props\r\n  const mod = size / 100\r\n  const boxW = mod * 100\r\n  const boxH = mod * 57.74\r\n  const triH = mod * 28.8774\r\n  const triW = mod * 50\r\n  const tHeight = boxH + 2 * triH\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <div\r\n        style={{\r\n          width: 0,\r\n          borderBottom: `${triH}px solid ${color}`,\r\n          borderRight: `${triW}px solid transparent`,\r\n          borderLeft: `${triW}px solid transparent`,\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          width: `${boxW}px`,\r\n          height: `${boxH}px`,\r\n          background: color,\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          width: 0,\r\n          borderTop: `${triH}px solid ${color}`,\r\n          borderRight: `${triW}px solid transparent`,\r\n          borderLeft: `${triW}px solid transparent`,\r\n        }}\r\n      />\r\n      <FlexContainer\r\n        $direction='column'\r\n        style={{\r\n          width: `${boxW}px`,\r\n          height: `${tHeight}px`,\r\n          position: 'absolute',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          ...(childStyle || {}),\r\n        }}\r\n      >\r\n        {children}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface HexBadgePropsT extends HexagonPropsT {\r\n  rotate?: boolean\r\n  stroke?: number\r\n  borderColor?: string\r\n  onClick?: () => void\r\n}\r\nexport const HexBadge = (props: HexBadgePropsT) => {\r\n  const {\r\n    color,\r\n    borderColor,\r\n    size,\r\n    style,\r\n    children,\r\n    childStyle,\r\n    onClick,\r\n    stroke = 1,\r\n    rotate = false,\r\n  } = props\r\n  const angle = rotate ? 30 : 0\r\n  return (\r\n    <div\r\n      style={{\r\n        transform: `rotateY(0deg) rotate(-${angle}deg)`,\r\n        ...(style || {}),\r\n      }}\r\n      onClick={onClick}\r\n    >\r\n      <Hexagon size={size} color={Theme.darkBgColorSolid}>\r\n        <Hexagon\r\n          size={size - stroke * 2}\r\n          color={borderColor || Theme.lightBgColor}\r\n        >\r\n          <Hexagon size={size - stroke * 2 - 2} color={Theme.darkBgColorSolid}>\r\n            <Hexagon\r\n              size={size - stroke * 4 - 2}\r\n              color={color}\r\n              childStyle={{\r\n                fontFamily: Theme.titleFont,\r\n                color: 'white',\r\n                fontSize: `${size - 16}px`,\r\n                paddingTop: 2,\r\n                transform: `rotateY(0deg) rotate(${angle}deg)`,\r\n                ...(childStyle || {}),\r\n              }}\r\n            >\r\n              {children}\r\n            </Hexagon>\r\n          </Hexagon>\r\n        </Hexagon>\r\n      </Hexagon>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport interface HoverBadgePropsT {\r\n  children: JSX.Element | string | number\r\n  content: JSX.Element\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n  style?: CSSProperties\r\n  childStyle?: CSSProperties\r\n  size?: number\r\n  rotate?: boolean\r\n  stroke?: number\r\n  borderColor?: string\r\n  position?: {\r\n    top?: number\r\n    bottom?: number\r\n    left?: number\r\n    right?: number\r\n  }\r\n}\r\nexport const HoverHexBadge = (props: HoverBadgePropsT) => {\r\n  const {\r\n    children,\r\n    content,\r\n    direction,\r\n    style,\r\n    childStyle,\r\n    size,\r\n    rotate,\r\n    stroke,\r\n    position,\r\n    borderColor,\r\n  } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        position: position ? 'absolute' : 'relative',\r\n        top: position?.top,\r\n        bottom: position?.bottom,\r\n        left: position?.left,\r\n        right: position?.right,\r\n        zIndex: 4,\r\n      }}\r\n    >\r\n      <HoverToolTip\r\n        distance={2}\r\n        direction={direction || 'right'}\r\n        content={content || <div />}\r\n      >\r\n        <HexBadge\r\n          style={style}\r\n          rotate={rotate}\r\n          stroke={stroke}\r\n          borderColor={borderColor}\r\n          childStyle={{ ...childStyle, textShadow: '1px 1px 3px black' }}\r\n          size={size || 20}\r\n          color={Theme.badgeBgColor}\r\n        >\r\n          {children}\r\n        </HexBadge>\r\n      </HoverToolTip>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { StatBar } from './StatBar'\r\nimport { Items } from './Items'\r\nimport { Name } from './Name'\r\nimport { Image } from './Image'\r\nimport { MenuSelect, ACTIVE_CHARACTER_MENU_KEYS } from './MenuSelect'\r\nimport { HoverArea } from './HoverArea'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { Theme } from '../../theme'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { HexBadge } from '../../elements/shapes'\r\n\r\nexport interface PartyActiveCharacterPropsT {\r\n  character: tProcessedCharacter\r\n  party: tProcessedParty\r\n  canEquip: boolean\r\n  onRequestClose: () => void\r\n}\r\n\r\nexport interface ItemStackT<T> {\r\n  count: number\r\n  item: T\r\n}\r\n\r\ntype ItemT = tConsumable | tArmor | tWeapon\r\nexport const condenseListToStack = (items: ItemT[]): ItemStackT<ItemT>[] => {\r\n  let stack: ItemStackT<ItemT>[] = []\r\n  items.forEach((i) => {\r\n    if (stack.map((s) => s.item.name).includes(i.name)) {\r\n      stack = stack.map((s) =>\r\n        s.item.name === i.name ? { ...s, count: s.count + 1 } : s,\r\n      )\r\n    } else {\r\n      stack = [...stack, { item: i, count: 1 }]\r\n    }\r\n  })\r\n  return stack\r\n}\r\n\r\nexport const PartyActiveCharacter = (props: PartyActiveCharacterPropsT) => {\r\n  const { character, party, canEquip, onRequestClose } = props\r\n  const [activeMenuKey, setActiveMenuKey] = useState('all')\r\n  const [activeItem, setActiveItem] = useState<tArmor | tWeapon | undefined>()\r\n  const activeOption = ACTIVE_CHARACTER_MENU_KEYS.find(\r\n    (o) => o.key === activeMenuKey,\r\n  )\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        justifyContent: 'flex-end',\r\n      }}\r\n    >\r\n      <HexBadge\r\n        color={Theme.healthRedColor}\r\n        size={32}\r\n        onClick={onRequestClose}\r\n        style={{\r\n          position: 'absolute',\r\n          top: -14,\r\n          right: -9,\r\n          cursor: 'pointer',\r\n          userSelect: 'none',\r\n          textShadow: '1px 1px 3px black',\r\n        }}\r\n        childStyle={{\r\n          paddingTop: 1,\r\n        }}\r\n      >\r\n        X\r\n      </HexBadge>\r\n      <FlexContainer\r\n        style={{\r\n          maxHeight: 502,\r\n          padding: 10,\r\n          position: 'absolute',\r\n          left: '-6px',\r\n          width: 486,\r\n          justifyContent: 'flex-end',\r\n          zIndex: 1,\r\n        }}\r\n      >\r\n        {activeItem && (\r\n          <HoverArea character={character} activeItem={activeItem} />\r\n        )}\r\n      </FlexContainer>\r\n      <FlexContainer\r\n        $direction='column'\r\n        style={{ background: Theme.darkBgColor, border: '2px solid black' }}\r\n      >\r\n        <FlexContainer $direction='column'>\r\n          <Name name={character.name} />\r\n          <StatBar character={character} />\r\n          <BoxContainer\r\n            substyle={{\r\n              background: Theme.darkBgColor,\r\n              padding: '16px 0 0px 0',\r\n            }}\r\n          >\r\n            <FlexContainer>\r\n              <Items character={character} setActiveItem={setActiveItem} />\r\n              <Image character={character} />\r\n            </FlexContainer>\r\n            <MenuSelect\r\n              character={character}\r\n              party={party}\r\n              activeKey={activeMenuKey}\r\n              onActiveKeyChange={setActiveMenuKey}\r\n            />\r\n          </BoxContainer>\r\n          <BoxContainer\r\n            substyle={{\r\n              background: Theme.darkBgColor,\r\n              padding: '4px 0',\r\n              height: 200,\r\n              overflow: 'auto',\r\n            }}\r\n          >\r\n            {activeOption &&\r\n              activeOption.render(character, canEquip, setActiveItem)}\r\n          </BoxContainer>\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { ARMOR_TYPE_ICONS } from '../../icons/maps'\r\nimport { Button } from '../../elements/button'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { condenseListToStack } from '.'\r\nimport { Row, ActionsRow } from './elements'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\n\r\nexport interface ArmorListPropsT {\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n  setActiveItem: (item: tWeapon | tArmor) => void\r\n  onEquipItem?: (characterId: string, item: tWeapon | tArmor) => void\r\n}\r\n\r\nexport const ArmorList = (props: ArmorListPropsT) => {\r\n  const { character, canEquip, setActiveItem, onEquipItem } = props\r\n  const { party, sellItem, equipItem } = usePartyContext()\r\n  const [activeItemId, setActiveItemId] = useState<string | undefined>()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {condenseListToStack(\r\n        party.items\r\n          .filter((i) => i.itemType === 'armor')\r\n          .map((i) => i as tArmor)\r\n          .sort((a, b) => a.name.localeCompare(b.name)),\r\n      ).map(({ item, count }) => {\r\n        const armor = item as tArmor\r\n        return (\r\n          <FlexContainer key={armor.id} $direction='column'>\r\n            <Row\r\n              $active={item.id === activeItemId}\r\n              onMouseEnter={() => setActiveItem(armor)}\r\n              onClick={(e: MouseEvent) => {\r\n                e.stopPropagation()\r\n                e.preventDefault()\r\n                setActiveItemId(armor.id)\r\n              }}\r\n            >\r\n              <div style={{ width: 24 }}>\r\n                <Icon\r\n                  src={ARMOR_TYPE_ICONS[armor.type]}\r\n                  size={16}\r\n                  style={{ marginRight: 10 }}\r\n                  fill={ITEM_RARITY_COLORS[armor.rarity]}\r\n                  shadow\r\n                />\r\n              </div>\r\n              <span style={{ color: ITEM_RARITY_COLORS[armor.rarity] }}>\r\n                {count} {armor.name}\r\n              </span>\r\n            </Row>\r\n            {canEquip && activeItemId === armor.id && (\r\n              <ActionsRow>\r\n                <Button\r\n                  style={{ padding: '4px 8px', marginRight: 10 }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    if (onEquipItem) {\r\n                      onEquipItem(character.id, armor)\r\n                    } else {\r\n                      equipItem(character.id, armor)\r\n                    }\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Equip\r\n                </Button>\r\n                <FullContainer />\r\n                <Button\r\n                  style={{ padding: '4px 8px', marginRight: 10 }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    sellItem(item.id)\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Sell Item ({item.goldValue})\r\n                </Button>\r\n                <Button\r\n                  style={{ padding: '4px 8px' }}\r\n                  onClick={() => {\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </ActionsRow>\r\n            )}\r\n          </FlexContainer>\r\n        )\r\n      })}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Theme } from '../../theme'\r\nimport { ArmorList } from '../PartyActiveCharacter/ArmorList'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { WeaponList } from '../PartyActiveCharacter/WeaponList'\r\n\r\nexport interface EquipItemModalPropsT {\r\n  equipItemCombat: (characterId: string, item: tWeapon | tArmor) => void\r\n}\r\n\r\nexport const EquipItemModal = (props: EquipItemModalPropsT) => {\r\n  const { equipItemCombat } = props\r\n  const { activeCharacter } = useCombatContext()\r\n  const { close } = useModalContext()\r\n  const onEquipItem = (characterId: string, item: tWeapon | tArmor) => {\r\n    equipItemCombat(characterId, item)\r\n    close()\r\n  }\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ maxHeight: 300, overflow: 'auto' }}\r\n    >\r\n      <h3 style={{ margin: 0, marginBottom: 32, fontFamily: Theme.titleFont }}>\r\n        Choose an Item\r\n      </h3>\r\n      <WeaponList\r\n        character={activeCharacter}\r\n        setActiveItem={() => {}}\r\n        canEquip={true}\r\n        onEquipItem={onEquipItem}\r\n      />\r\n      <ArmorList\r\n        character={activeCharacter}\r\n        setActiveItem={() => {}}\r\n        canEquip={true}\r\n        onEquipItem={onEquipItem}\r\n      />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { Button } from '../../elements/button'\r\nimport { SkillPreview } from '../SkillPreview'\r\nimport { SkillChecks } from '../SkillChecks'\r\nimport { SKILL_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Hover } from '../Hover'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { Theme } from '../../theme'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { EquipItemModal } from '../EquipItemModal'\r\nimport Inventory from '../../icons/svg/lorc/knapsack.svg'\r\nimport { HEAL, REMOVE_CURSES } from '../../game/Skill/skills/consumables'\r\nimport { hasAnyStatus } from '../../game/Character/util'\r\nimport { CURE_POTION } from '../../game/Consumable/objects/curing_potion'\r\n\r\nexport const CombatActions = () => {\r\n  const {\r\n    party,\r\n    activeCharacter,\r\n    selectedSkill,\r\n    selectedTargets,\r\n    onSkillSelect,\r\n    equipItemCombat,\r\n  } = useCombatContext()\r\n  const { open } = useModalContext()\r\n\r\n  if (!activeCharacter || activeCharacter.partyId !== PLAYER_PARTY_ID)\r\n    return null\r\n\r\n  const stat = selectedSkill?.weaponStatOverride || activeCharacter.weapon.stat\r\n  const skills = activeCharacter.skills.filter((skill) => {\r\n    if (activeCharacter.healthOffset === 0 && skill.id === HEAL.id) {\r\n      return false\r\n    }\r\n    if (\r\n      !hasAnyStatus(activeCharacter, [\r\n        'cursed-agility',\r\n        'cursed-charisma',\r\n        'cursed-dexterity',\r\n        'cursed-intelligence',\r\n        'cursed-luck',\r\n        'cursed-strength',\r\n        'cursed-vigor',\r\n      ]) &&\r\n      skill.id === REMOVE_CURSES.id\r\n    ) {\r\n      return false\r\n    }\r\n    if (\r\n      !hasAnyStatus(activeCharacter, [\r\n        'bleeding',\r\n        'burning',\r\n        'frozen',\r\n        'poisoned',\r\n      ]) &&\r\n      skill.id === CURE_POTION().skill.id\r\n    ) {\r\n      return false\r\n    }\r\n    return true\r\n  })\r\n  return (\r\n    <FlexContainer $direction='column' style={{ minWidth: 340 }}>\r\n      {selectedSkill && <SkillChecks stat={stat} skill={selectedSkill} />}\r\n      <FlexContainer $center style={{ minHeight: 42 }}>\r\n        {skills.map((skill) => (\r\n          <React.Fragment key={skill.id}>\r\n            {SKILL_ICONS[skill.name] ? (\r\n              <Hover delay={0}>\r\n                {({ isHovering }) => (\r\n                  <Icon\r\n                    src={SKILL_ICONS[skill.name]}\r\n                    size={42}\r\n                    shadow={true}\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      padding: '0 12px',\r\n                    }}\r\n                    onClick={() => {\r\n                      onSkillSelect(skill)\r\n                    }}\r\n                    fill={\r\n                      skill.id === selectedSkill?.id\r\n                        ? 'lightsalmon'\r\n                        : isHovering\r\n                        ? 'white'\r\n                        : 'rgba(255,255,255,0.8)'\r\n                    }\r\n                  />\r\n                )}\r\n              </Hover>\r\n            ) : (\r\n              <Button\r\n                key={skill.id}\r\n                onClick={() => onSkillSelect(skill)}\r\n                style={{\r\n                  background: Theme.darkBgColor,\r\n                  borderColor:\r\n                    selectedSkill && skill.id === selectedSkill.id\r\n                      ? 'white'\r\n                      : undefined,\r\n                }}\r\n              >\r\n                {skill.name}\r\n              </Button>\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n        {party.items.length > 0 && (\r\n          <Hover delay={0}>\r\n            {({ isHovering }) => (\r\n              <Icon\r\n                src={Inventory}\r\n                size={42}\r\n                shadow={true}\r\n                style={{\r\n                  cursor: 'pointer',\r\n                  padding: '0 12px',\r\n                }}\r\n                onClick={() =>\r\n                  open(<EquipItemModal equipItemCombat={equipItemCombat} />)\r\n                }\r\n                fill={isHovering ? 'white' : 'rgba(255,255,255,0.8)'}\r\n              />\r\n            )}\r\n          </Hover>\r\n        )}\r\n      </FlexContainer>\r\n      {selectedSkill && (\r\n        <SkillPreview\r\n          skill={selectedSkill}\r\n          source={activeCharacter}\r\n          targets={selectedTargets}\r\n        />\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { GaugePropsT } from '.'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { FullContainer } from '../../elements/flex'\r\n\r\nexport const Gauge2 = (props: GaugePropsT) => {\r\n  const { name = '', value, color, height = 30, children, style } = props\r\n  const max = props.max < 1 ? 1 : props.max\r\n  const p = (value / max) * 100\r\n  const percentage = p > 100 ? 100 : p\r\n  const [oldPercentage, setOldPercentage] = useState(percentage)\r\n  useEffect(() => {\r\n    setOldPercentage(percentage)\r\n  }, [percentage])\r\n  return (\r\n    <BoxContainer\r\n      style={{ borderLeft: 'none', ...(style || {}) }}\r\n      substyle={{\r\n        padding: 0,\r\n        background: 'rgba(80,80,85,1)',\r\n        height: height - 2,\r\n        position: 'relative',\r\n        border: 'none',\r\n      }}\r\n    >\r\n      <Spring\r\n        from={{ value: oldPercentage || 0 }}\r\n        to={{ value: percentage }}\r\n        config={{ friction: 200, mass: 4, tension: 600 }}\r\n      >\r\n        {(p) => (\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              left: 0,\r\n              boxSizing: 'border-box',\r\n              height: height - 2,\r\n              maxWidth: `${p.value}%`,\r\n              minWidth: `${p.value}%`,\r\n              boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n              backgroundColor: 'rgba(255,255,255,0.5)',\r\n            }}\r\n          ></div>\r\n        )}\r\n      </Spring>\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          left: 0,\r\n          boxSizing: 'border-box',\r\n          height: height - 2,\r\n          maxWidth: `${percentage}%`,\r\n          minWidth: `${percentage}%`,\r\n          boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n          textShadow: '1px 1px 3px black',\r\n          backgroundColor: color,\r\n        }}\r\n      ></div>\r\n      <FullContainer\r\n        style={{\r\n          position: 'absolute',\r\n          height,\r\n          lineHeight: `${height - 2}px`,\r\n          right: 4,\r\n          top: 0,\r\n          fontSize: 12,\r\n          overflow: 'hidden',\r\n          textShadow: '0px 0px 3px black',\r\n          color: 'rgba(255,255,255,0.8)',\r\n        }}\r\n      >\r\n        <div>{children}</div>\r\n      </FullContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Spring } from 'react-spring/renderprops'\r\n\r\nexport interface NumberChangePropsT {\r\n  value: number\r\n}\r\nexport const NumberChange = (props: NumberChangePropsT) => {\r\n  const { value } = props\r\n  const [previousValue, setPreviousValue] = useState(value)\r\n  useEffect(() => {\r\n    setPreviousValue(value)\r\n  }, [value])\r\n  return (\r\n    <Spring\r\n      from={{ n: previousValue || 0 }}\r\n      to={{ n: value }}\r\n      config={{ friction: 70, mass: 50, tension: 1500, clamp: true }}\r\n    >\r\n      {(p) => Math.floor(p.n)}\r\n    </Spring>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FullContainer } from '../../elements/flex'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { Monodiv } from '../../elements/monospace'\r\nimport { noneg } from '../../util'\r\nimport { usePrevious } from '../../hooks/usePrevious'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { CHARACTER_XP_MAX } from '../../game/Character/constants'\r\nimport { Gauge2 } from './v2'\r\nimport { Theme } from '../../theme'\r\nimport { NumberChange } from '../NumberChange'\r\n\r\nexport interface GaugePropsT {\r\n  name?: string\r\n  color: string\r\n  height?: number\r\n  max: number\r\n  value: number\r\n  style?: CSSProperties\r\n  children?: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const Gauge = (props: GaugePropsT) => {\r\n  const { name = '', value, color, height = 30, children, style } = props\r\n  const max = props.max < 1 ? 1 : props.max\r\n  const p = (value / max) * 100\r\n  const percentage = p > 100 ? 100 : p\r\n  const oldPercentage = usePrevious(percentage)\r\n  return (\r\n    <HoverToolTip\r\n      direction='right'\r\n      content={<BoxContainer>{`${name} (${value} / ${max})`}</BoxContainer>}\r\n    >\r\n      <BoxContainer\r\n        style={{\r\n          borderLeft: 'none',\r\n          background: Theme.darkBgColorSolid,\r\n          ...(style || {}),\r\n        }}\r\n        substyle={{\r\n          padding: 0,\r\n          background: 'rgba(255,255,255,0.2)',\r\n          height: height - 2,\r\n          position: 'relative',\r\n          border: 'none',\r\n        }}\r\n      >\r\n        <Spring\r\n          from={{ value: oldPercentage || 0 }}\r\n          to={{ value: percentage }}\r\n          config={{ friction: 70, mass: 5, tension: 300 }}\r\n        >\r\n          {(p) => (\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                left: 0,\r\n                boxSizing: 'border-box',\r\n                height: height - 2,\r\n                maxWidth: `${p.value}%`,\r\n                minWidth: `${p.value}%`,\r\n                boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n                textShadow: '1px 1px 1px black',\r\n                backgroundColor: color,\r\n                color: 'white',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n            ></div>\r\n          )}\r\n        </Spring>\r\n        <FullContainer\r\n          style={{\r\n            position: 'absolute',\r\n            height,\r\n            lineHeight: `${height - 2}px`,\r\n            right: 4,\r\n            top: 0,\r\n            fontSize: 10,\r\n            fontWeight: 'bold',\r\n            overflow: 'hidden',\r\n            textShadow: '0px 0px 3px black',\r\n          }}\r\n        >\r\n          <Monodiv>{children}</Monodiv>\r\n        </FullContainer>\r\n      </BoxContainer>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface HealthGaugePropsT {\r\n  character: tProcessedCharacter\r\n  height?: number\r\n  style?: CSSProperties\r\n  showNumbers?: boolean\r\n}\r\nexport const HealthGauge = (props: HealthGaugePropsT) => {\r\n  const { character, height = 16, style, showNumbers = true } = props\r\n  const health = noneg(character.health)\r\n  return (\r\n    <Gauge2\r\n      name='Health'\r\n      color={Theme.healthRedColor}\r\n      max={character.maxHealth}\r\n      value={health}\r\n      height={height}\r\n      style={style}\r\n    >\r\n      {showNumbers && (\r\n        <span>\r\n          <NumberChange value={health} />/\r\n          <NumberChange value={character.maxHealth} />\r\n        </span>\r\n      )}\r\n    </Gauge2>\r\n  )\r\n}\r\nexport interface XPGaugePropsT {\r\n  character: tProcessedCharacter\r\n  style?: CSSProperties\r\n  showNumber?: boolean\r\n}\r\nexport const XPGauge = (props: HealthGaugePropsT) => {\r\n  const { character, style } = props\r\n  const value = character.experience\r\n  const max = CHARACTER_XP_MAX[character.level]\r\n  return (\r\n    <Gauge2\r\n      name='XP'\r\n      color='#5e8575'\r\n      max={max}\r\n      value={value}\r\n      height={16}\r\n      style={style}\r\n    >\r\n      {value}/{max}\r\n    </Gauge2>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Tooltip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STATUS_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { tStatus } from '../../game/Status/type'\r\nimport { STATUS_CONFIG } from '../../game/Status/constants'\r\n\r\nexport interface TagPreviewPropsT {\r\n  status: tStatus\r\n  immunity?: boolean\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n}\r\nexport const TagPreview = (props: TagPreviewPropsT) => {\r\n  const { status, direction, immunity } = props\r\n  const statusConfig = STATUS_CONFIG[status.type]\r\n  return (\r\n    <Tooltip\r\n      direction={direction || 'bottom'}\r\n      content={\r\n        <BoxContainer style={{ maxWidth: 200 }}>\r\n          <FlexContainer $direction='column'>\r\n            <strong style={{ marginBottom: statusConfig.description ? 8 : 0 }}>\r\n              {status.type} {immunity && 'immunity'}{' '}\r\n              {status.duration > 0 ? `(${status.duration})` : ''}\r\n            </strong>\r\n            {statusConfig.description && (\r\n              <>{!immunity && <span>{statusConfig.description}</span>}</>\r\n            )}\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n      }\r\n    >\r\n      <Icon\r\n        shadow\r\n        src={STATUS_ICONS[status.type] || ''}\r\n        size={20}\r\n        fill={immunity ? 'white' : 'Violet'}\r\n        style={{ marginLeft: 4 }}\r\n      />\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { tProcessedCharacter } from '../game/Character/type'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { Theme } from '../theme'\r\nimport { hasImmunity } from '../game/Character/util'\r\n\r\nexport const usePlayerCharacterNotifications = (\r\n  character: tProcessedCharacter,\r\n  push: (c: JSX.Element, type?: string) => void,\r\n  shake: () => void,\r\n) => {\r\n  const health = character.health\r\n  const level = character.level\r\n  const { roundResults } = useCombatContext()\r\n  const [previousHealth, setPreviousHealth] = useState(health)\r\n  const [previousLevel, setPreviousLevel] = useState(level)\r\n  useEffect(() => {\r\n    const healthDiff = previousHealth - health\r\n    if (healthDiff > 0) {\r\n      push(\r\n        <span style={{ fontFamily: Theme.titleFont, fontSize: 36 }}>\r\n          - {healthDiff}\r\n        </span>,\r\n      )\r\n      shake()\r\n    }\r\n    if (healthDiff < 0) {\r\n      push(\r\n        <span style={{ fontFamily: Theme.titleFont, fontSize: 36 }}>\r\n          + {Math.abs(healthDiff)}\r\n        </span>,\r\n        'good',\r\n      )\r\n    }\r\n    if (level > previousLevel) {\r\n      push(\r\n        <span style={{ fontFamily: Theme.titleFont, fontSize: 36 }}>\r\n          Level Up!\r\n        </span>,\r\n        'good',\r\n      )\r\n    }\r\n    setPreviousLevel(level)\r\n    setPreviousHealth(health)\r\n  }, [health, level])\r\n\r\n  useEffect(() => {\r\n    const lastRound = roundResults[roundResults.length - 1]\r\n    if (lastRound) {\r\n      if (\r\n        lastRound.sourceResult.weaponDidBreak &&\r\n        lastRound.sourceResult.source.id === character.id\r\n      ) {\r\n        push(\r\n          <span style={{ fontFamily: Theme.titleFont, fontSize: 48 }}>\r\n            Weapon Break!\r\n          </span>,\r\n        )\r\n      }\r\n      const chResult = lastRound.targetResults.find(\r\n        (r) => r.target.id === character.id,\r\n      )\r\n      if (chResult) {\r\n        if (chResult.dodgeSuccess && chResult.accuracySuccess) {\r\n          push(\r\n            <span style={{ fontFamily: Theme.titleFont }}>Dodged!</span>,\r\n            'base',\r\n          )\r\n        }\r\n        if (\r\n          !chResult.dodgeSuccess &&\r\n          chResult.accuracySuccess &&\r\n          chResult.skill.damage &&\r\n          chResult.loggedDamgge.value <= 0\r\n        ) {\r\n          push(\r\n            <span style={{ fontFamily: Theme.titleFont }}>Blocked!</span>,\r\n            'base',\r\n          )\r\n        }\r\n        if (chResult.addedStatus.length > 0) {\r\n          chResult.addedStatus.forEach((status) => {\r\n            if (hasImmunity(character, status)) {\r\n              push(\r\n                <span style={{ fontFamily: Theme.titleFont }}>Immune</span>,\r\n                'base',\r\n              )\r\n            } else {\r\n              push(\r\n                <span\r\n                  style={{\r\n                    textTransform: 'capitalize',\r\n                    fontFamily: Theme.titleFont,\r\n                  }}\r\n                >\r\n                  {status}\r\n                </span>,\r\n                'base',\r\n              )\r\n            }\r\n          })\r\n        }\r\n        if (chResult.perfect && chResult.skill.perfectPierce) {\r\n          push(\r\n            <span style={{ fontFamily: Theme.titleFont }}>Pierced!</span>,\r\n            'base',\r\n          )\r\n        }\r\n        if (chResult.criticalHitSuccess && chResult.skill.damage) {\r\n          push(\r\n            <span style={{ fontFamily: Theme.titleFont }}>Critical!</span>,\r\n            'base',\r\n          )\r\n        }\r\n      }\r\n      if (\r\n        lastRound.sourceResult.source.id === character.id &&\r\n        !lastRound.sourceResult.accuracySuccess\r\n      ) {\r\n        push(\r\n          <span style={{ fontFamily: Theme.titleFont }}>Missed!</span>,\r\n          'base',\r\n        )\r\n      }\r\n    }\r\n  }, [roundResults])\r\n}\r\n","import React from 'react'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { animated } from 'react-spring/renderprops'\r\nimport { noneg } from '../../util'\r\nimport { usePlayerCharacterNotifications } from '../../hooks/usePlayerCharacterNotifications'\r\nimport { Theme } from '../../theme'\r\nimport { NumberChange } from '../NumberChange'\r\n\r\nexport interface HealthPropsT {\r\n  character: tProcessedCharacter\r\n  push: (content: JSX.Element, type?: string) => void\r\n  shake?: () => void\r\n}\r\nexport const Health = (props: HealthPropsT) => {\r\n  const { character, push, shake } = props\r\n  const health = noneg(character.health)\r\n  usePlayerCharacterNotifications(character, push, shake || (() => {}))\r\n\r\n  return (\r\n    <animated.div\r\n      style={{\r\n        fontSize: 64,\r\n        height: 64,\r\n        width: 60,\r\n        textShadow: '1px 1px 10px black',\r\n        color: Theme.healthRedColor,\r\n        fontFamily: 'New Rocker',\r\n        userSelect: 'none',\r\n      }}\r\n    >\r\n      <NumberChange value={health} />\r\n    </animated.div>\r\n  )\r\n}\r\n","import React, { useContext, useState, useEffect, CSSProperties } from 'react'\r\nimport { animated, useTransition } from 'react-spring'\r\nimport { FullContainer } from '../../elements/flex'\r\nimport { v4 } from 'uuid'\r\n\r\nexport interface LocalToastContextT {\r\n  push: (content: JSX.Element) => void\r\n}\r\nexport const defaultValue: LocalToastContextT = {\r\n  push: (content) => {},\r\n}\r\nexport const LocalToastContext = React.createContext<LocalToastContextT>(\r\n  defaultValue,\r\n)\r\nexport const useLocalToast = () => useContext(LocalToastContext)\r\n\r\nexport interface LocalToastProviderProps {\r\n  children: JSX.Element\r\n}\r\nexport const LocalToastProvider = (props: LocalToastProviderProps) => {\r\n  const { children } = props\r\n  const [queue, setQueue] = useState<\r\n    {\r\n      id: string\r\n      content: JSX.Element\r\n    }[]\r\n  >([])\r\n\r\n  useEffect(() => {\r\n    const i = setInterval(() => {\r\n      setQueue((q) => {\r\n        const [f, ...rest] = q\r\n        return rest || []\r\n      })\r\n    }, 3000)\r\n    return () => {\r\n      clearInterval(i)\r\n    }\r\n  }, [])\r\n\r\n  const push = (c: JSX.Element, type?: string) => {\r\n    setQueue((q) => [\r\n      ...q,\r\n      {\r\n        id: v4(),\r\n        content: c,\r\n        type,\r\n      },\r\n    ])\r\n  }\r\n\r\n  return (\r\n    <LocalToastContext.Provider value={{ push }}>\r\n      <>\r\n        <div style={{ position: 'relative' }}>\r\n          <Toast queue={queue} />\r\n        </div>\r\n        {children}\r\n      </>\r\n    </LocalToastContext.Provider>\r\n  )\r\n}\r\n\r\ninterface ToastQT {\r\n  id: string\r\n  type?: string\r\n  content: JSX.Element\r\n}\r\nexport interface ToastPropsT {\r\n  queue: ToastQT[]\r\n  style?: CSSProperties\r\n}\r\nexport const Toast = (props: ToastPropsT) => {\r\n  const { queue, style } = props\r\n  const hasChildren = queue.length > 0\r\n  const animation = useTransition(queue, (q) => q.id, {\r\n    from: {\r\n      transform: 'translate3d(0,40px,0)',\r\n      maxWidth: 0,\r\n      maxHeight: 0,\r\n      opacity: 0,\r\n    },\r\n    enter: {\r\n      transform: 'translate3d(0,0px,0)',\r\n      maxWidth: 180,\r\n      maxHeight: 40,\r\n      opacity: 1,\r\n    },\r\n    leave: {\r\n      transform: 'translate3d(0,-80px,0)',\r\n      maxWidth: 0,\r\n      maxHeight: 0,\r\n      opacity: 0,\r\n    },\r\n  })\r\n\r\n  return (\r\n    <animated.div\r\n      style={{\r\n        position: 'absolute',\r\n        width: '100%',\r\n        display: 'flex',\r\n        height: 0,\r\n        top: -24,\r\n        zIndex: 3,\r\n        ...(style || {}),\r\n      }}\r\n    >\r\n      {animation.map((item) => (\r\n        <animated.div\r\n          key={item.key}\r\n          style={{\r\n            display: 'flex',\r\n            ...item.props,\r\n          }}\r\n        >\r\n          <FullContainer />\r\n          <div\r\n            style={{\r\n              marginBottom: 4,\r\n              marginRight: 4,\r\n              fontSize: 20,\r\n              padding: 2,\r\n              lineHeight: '20px',\r\n              whiteSpace: 'nowrap',\r\n              background:\r\n                'radial-gradient(circle, rgba(0,0,0,0.3) 0%, rgba(0,0,0,0) 100%)',\r\n              ...color(item.item.type),\r\n            }}\r\n          >\r\n            {item.item.content}\r\n          </div>\r\n          <FullContainer />\r\n        </animated.div>\r\n      ))}\r\n    </animated.div>\r\n  )\r\n}\r\n\r\nexport interface LocalToastRpPropsT {\r\n  children: (props: LocalToastContextT) => JSX.Element\r\n  style?: CSSProperties\r\n}\r\nexport const LocalToastRp = (props: LocalToastRpPropsT) => {\r\n  const { children, style } = props\r\n  const [queue, setQueue] = useState<ToastQT[]>([])\r\n\r\n  const push = (c: JSX.Element, type?: string) => {\r\n    setQueue((q) => [\r\n      ...q,\r\n      {\r\n        id: v4(),\r\n        content: c,\r\n        type,\r\n      },\r\n    ])\r\n    setTimeout(() => {\r\n      setQueue((q) => {\r\n        const [f, ...rest] = q\r\n        return rest || []\r\n      })\r\n    }, 4000)\r\n  }\r\n  return (\r\n    <>\r\n      <div style={{ position: 'relative' }}>\r\n        <Toast queue={queue} style={style} />\r\n      </div>\r\n      {children({ push })}\r\n    </>\r\n  )\r\n}\r\n\r\nconst color = (type: string | undefined) => {\r\n  switch (type) {\r\n    case 'good':\r\n      return {\r\n        color: '#aae6bf',\r\n        textShadow: '0px 3px 1px rgba(0,0,0,0.5)',\r\n      }\r\n    case 'base':\r\n      return {\r\n        color: 'rgba(255,255,255,0.8)',\r\n        textShadow: '0px 3px 1px rgba(0,0,0,0.5)',\r\n      }\r\n    default:\r\n      return {\r\n        // color: 'rgba(219, 114, 114, 0.8)',\r\n        // color: 'red',\r\n        color: 'rgba(255,158,158,0.8)',\r\n        textShadow: '0px 3px 1px rgba(0,0,0,1)',\r\n      }\r\n  }\r\n}\r\n","import { useSpring } from 'react-spring'\r\n\r\nconst springConfig = {\r\n  mass: 1,\r\n  tension: 1000,\r\n  friction: 15,\r\n}\r\nconst from = () => ({\r\n  transform: `rotate(0deg)`,\r\n})\r\nconst to = () => ({\r\n  transform: `rotate(3deg)`,\r\n})\r\n\r\nexport const useElementShake = () => {\r\n  const [shakeStyles, dispatch] = useSpring(() => ({\r\n    to: async (next: Function) => {\r\n      await next(to())\r\n    },\r\n\r\n    config: springConfig,\r\n    from: from(),\r\n    immediate: true,\r\n    reset: true,\r\n    reverse: true,\r\n  }))\r\n\r\n  const exec = () => {\r\n    dispatch({\r\n      ...to(),\r\n      config: springConfig,\r\n      from: from(),\r\n      immediate: false,\r\n      reset: true,\r\n      reverse: true,\r\n    } as any)\r\n  }\r\n\r\n  return { styles: shakeStyles, exec }\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { HealthGauge } from '../Gauge'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { TagPreview } from '../TagPreview'\r\nimport { Icon } from '../Icon'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Health } from './Health'\r\nimport { LocalToastRp } from '../../contexts/LocalToastContext'\r\nimport { ZERO_STATS } from '../../game/Stats/constants'\r\nimport { Theme } from '../../theme'\r\nimport { HoverHexBadge } from '../../elements/shapes'\r\nimport { animated } from 'react-spring'\r\nimport { useElementShake } from '../../hooks/useElementShake'\r\n\r\nexport interface EnemyCharacterPropsT {\r\n  character: tProcessedCharacter\r\n  activeCharacter: tProcessedCharacter\r\n  hoverable?: boolean\r\n  selected?: boolean\r\n  isHovering?: boolean\r\n  isBoss?: boolean\r\n  onClick?: () => void\r\n}\r\nexport const EnemyCharacter = (props: EnemyCharacterPropsT) => {\r\n  const {\r\n    character,\r\n    activeCharacter,\r\n    isBoss = false,\r\n    isHovering,\r\n    onClick,\r\n  } = props\r\n  const active = activeCharacter?.id === character?.id\r\n  const { styles, exec } = useElementShake()\r\n  return (\r\n    <animated.div style={{ ...styles, position: 'relative', zIndex: 2 }}>\r\n      <animated.div\r\n        onClick={() => (onClick && character.health > 0 ? onClick() : null)}\r\n        style={{\r\n          borderWidth: 2,\r\n          width: isBoss ? 600 : 320,\r\n          position: 'relative',\r\n          cursor: onClick ? 'pointer' : 'default',\r\n          color: 'rgba(255,255,255,0.8)',\r\n          opacity: character.health <= 0 ? 0.5 : 1,\r\n          transition: 'all 0.4s',\r\n          transform: active ? 'scale(1.05)' : 'scale(0.95)',\r\n        }}\r\n      >\r\n        <FlexContainer style={{ alignItems: 'center' }}>\r\n          <FlexContainer style={{ zIndex: 4, position: 'relative' }}>\r\n            <Icon\r\n              src={character.icon || ''}\r\n              shadow\r\n              fill={\r\n                (activeCharacter && character.id === activeCharacter.id) ||\r\n                isHovering\r\n                  ? 'lightsalmon'\r\n                  : 'white'\r\n              }\r\n              size={64}\r\n              style={{ zIndex: 1, position: 'relative', marginRight: -24 }}\r\n            />\r\n          </FlexContainer>\r\n          <FlexContainer $full $direction='column'>\r\n            <FlexContainer\r\n              style={{\r\n                justifyContent: 'flex-end',\r\n              }}\r\n            >\r\n              <span\r\n                style={{\r\n                  padding: '2px 4px',\r\n                  textAlign: 'right',\r\n                  fontSize: 18,\r\n                  lineHeight: '18px',\r\n                  background: 'rgba(0,0,0,0.4)',\r\n                  textShadow: '1px 1px 2px black',\r\n                  fontFamily: Theme.titleFont,\r\n                  color: isBoss\r\n                    ? 'red'\r\n                    : isHovering\r\n                    ? 'lightsalmon'\r\n                    : 'rgba(255,255,255,0.8)',\r\n                }}\r\n              >\r\n                {character.name}\r\n              </span>\r\n            </FlexContainer>\r\n            <div style={{ boxShadow: '0px 4px 15px rgba(0,0,0,1)', zIndex: 3 }}>\r\n              <HealthGauge\r\n                character={character}\r\n                height={20}\r\n                showNumbers={false}\r\n              />\r\n            </div>\r\n            <HoverHexBadge\r\n              direction='down'\r\n              content={<BoxContainer>Enemy Level</BoxContainer>}\r\n              position={{\r\n                left: -6,\r\n                bottom: -12,\r\n              }}\r\n              size={32}\r\n              childStyle={{\r\n                color: 'lightcoral',\r\n                paddingTop: 1,\r\n              }}\r\n            >\r\n              {character.level}\r\n            </HoverHexBadge>\r\n            <FlexContainer\r\n              style={{\r\n                position: 'absolute',\r\n                bottom: '-12px',\r\n                left: '40px',\r\n              }}\r\n            >\r\n              {character.status.map((status, i) => (\r\n                <TagPreview key={i} status={status} />\r\n              ))}\r\n              {character.immunities.map((status, i) => (\r\n                <TagPreview\r\n                  key={i}\r\n                  immunity={true}\r\n                  status={{\r\n                    type: status,\r\n                    immunities: [],\r\n                    stack: 0,\r\n                    stats: ZERO_STATS,\r\n                    duration: -1,\r\n                  }}\r\n                />\r\n              ))}\r\n            </FlexContainer>\r\n            <FlexContainer\r\n              style={{\r\n                position: 'absolute',\r\n                bottom: '-22px',\r\n                left: 'calc(100% - 58px)',\r\n                alignItems: 'center',\r\n                justifyContent: 'flex-start',\r\n              }}\r\n            >\r\n              {character.stats.armor > 0 && (\r\n                <HoverHexBadge\r\n                  direction='down'\r\n                  content={<BoxContainer>Armor</BoxContainer>}\r\n                  size={28}\r\n                  childStyle={{\r\n                    color: Theme.physicalColor,\r\n                    paddingTop: 1,\r\n                  }}\r\n                >\r\n                  <span>{character.stats.armor}</span>\r\n                </HoverHexBadge>\r\n              )}\r\n              {character.stats.resistance > 0 && (\r\n                <HoverHexBadge\r\n                  direction='down'\r\n                  content={<BoxContainer>Magic Resistance</BoxContainer>}\r\n                  size={28}\r\n                  childStyle={{\r\n                    color: Theme.magicColor,\r\n                    paddingTop: 1,\r\n                  }}\r\n                >\r\n                  <span>{character.stats.resistance}</span>\r\n                </HoverHexBadge>\r\n              )}\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n          <LocalToastRp\r\n            style={{ top: -24, right: -30, flexDirection: 'column' }}\r\n          >\r\n            {({ push }) => (\r\n              <Health character={character} push={push} shake={exec} />\r\n            )}\r\n          </LocalToastRp>\r\n        </FlexContainer>\r\n      </animated.div>\r\n    </animated.div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { getDamageResistance } from '../../game/Character/util'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { Theme } from '../../theme'\r\nimport { noneg } from '../../util'\r\n\r\nexport interface DamagePreviewPropsT {\r\n  skill: tSkill\r\n  source: tProcessedCharacter\r\n  target: tProcessedCharacter\r\n}\r\n\r\nexport const DamagePreview = (props: DamagePreviewPropsT) => {\r\n  const { skill, source, target } = props\r\n  const damageModifier =\r\n    source.stats.attackDamageModifier * skill.damageModifier\r\n  const raw = Math.round(\r\n    ((skill.weaponDamageOverride || source.weapon.damage.value) +\r\n      source.stats.attackDamageOffset) *\r\n      damageModifier,\r\n  )\r\n  const min = noneg(\r\n    Math.round(\r\n      raw / skill.rolls - getDamageResistance(target, source.weapon.damage),\r\n    ),\r\n  )\r\n  const max = noneg(\r\n    Math.round(raw - getDamageResistance(target, source.weapon.damage)),\r\n  )\r\n\r\n  return (\r\n    <BoxContainer substyle={{ background: Theme.darkBgColor }}>\r\n      <strong>\r\n        Damage: ({min}-{max})\r\n      </strong>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { RedButton } from '../../elements/button'\r\nimport { EnemyCharacter } from '../EnemyCharacter'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { DamagePreview } from '../DamagePreview'\r\n\r\nexport interface CombatPartyPropsT {\r\n  party: tProcessedParty\r\n}\r\nexport const CombatParty = (props: CombatPartyPropsT) => {\r\n  const { party } = props\r\n  const { activeCharacter, selectedSkill, next } = useCombatContext()\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { setShowSkillTooltips, hoverQueueCharacterId } = useUIContext()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          padding: '0 120px',\r\n          height: 112,\r\n          cursor: selectedSkill?.targetType === 'group' ? 'pointer' : 'default',\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <div key={c.id}>\r\n            <EnemyCharacter\r\n              activeCharacter={activeCharacter}\r\n              character={c}\r\n              isBoss={currentEncounter?.type === 'boss'}\r\n              isHovering={hoverQueueCharacterId === c.id}\r\n            />\r\n\r\n            <div style={{ height: 48 }}>\r\n              {selectedSkill &&\r\n                selectedSkill.targetType === 'single' &&\r\n                c.health > 0 &&\r\n                activeCharacter.partyId === PLAYER_PARTY_ID && (\r\n                  <FlexContainer\r\n                    $center\r\n                    style={{\r\n                      marginTop: -11,\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        boxShadow: '0px 2px 5px black',\r\n                        marginTop: -2,\r\n                        height: 36,\r\n                      }}\r\n                    >\r\n                      <HoverToolTip\r\n                        direction='down'\r\n                        content={\r\n                          <DamagePreview\r\n                            skill={selectedSkill}\r\n                            source={activeCharacter}\r\n                            target={c}\r\n                          />\r\n                        }\r\n                      >\r\n                        <RedButton\r\n                          onClick={() => {\r\n                            next(c)\r\n                            setShowSkillTooltips(false)\r\n                          }}\r\n                          $direction='down'\r\n                        >\r\n                          Attack\r\n                        </RedButton>\r\n                      </HoverToolTip>\r\n                    </div>\r\n                  </FlexContainer>\r\n                )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && selectedSkill.targetType === 'group' && (\r\n        <FlexContainer $center style={{ marginTop: -48 }}>\r\n          <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n            <RedButton\r\n              onClick={() => {\r\n                next(party)\r\n                setShowSkillTooltips(false)\r\n              }}\r\n            >\r\n              Attack Group\r\n            </RedButton>\r\n          </div>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface AppHeaderPropsT {\r\n  children?: JSX.Element\r\n  left?: JSX.Element\r\n  right?: JSX.Element\r\n}\r\n\r\nexport const AppHeader = (props: AppHeaderPropsT) => {\r\n  const { children, left, right } = props\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        $center\r\n        style={{\r\n          background: Theme.darkBgColorSolid,\r\n          height: 52,\r\n          borderBottom: '2px solid rgba(255,255,255,0.3)',\r\n          boxShadow: '1px 1px 1px black',\r\n        }}\r\n      >\r\n        <FlexContainer $full>{left}</FlexContainer>\r\n        <FlexContainer $full>{children}</FlexContainer>\r\n        <FlexContainer $full>{right}</FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport Gold from '../../icons/svg/delapouite/coins.svg'\r\nimport { Icon } from '../Icon'\r\nimport { NumberChange } from '../NumberChange'\r\n\r\nexport const PartyResources = () => {\r\n  const { party } = usePartyContext()\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{ alignItems: 'center', paddingRight: 20, color: '#ded9a6' }}\r\n    >\r\n      <Icon src={Gold} size={18} style={{ marginRight: 8 }} fill='#ded9a6' />\r\n      <NumberChange value={party.gold} />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { AppHeader } from '../AppHeader'\r\nimport { PartyResources } from '../PartyResources'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { tQueue } from '../../game/Queue/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { getMax, getFirst, getSortedIds } from '../../game/Queue/util'\r\nimport { Theme } from '../../theme'\r\nimport { CharacterIcon } from '../CharacterIcon'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\n\r\nconst size = 40\r\nexport interface CombatQueuePropsT {\r\n  queue: tQueue\r\n  characters: tProcessedCharacter[]\r\n}\r\nexport const CombatQueue = (props: CombatQueuePropsT) => {\r\n  const { queue, characters } = props\r\n  const { isRunning } = useCombatContext()\r\n  const history = useHistory()\r\n  const { setHoverQueueCharacterId } = useUIContext()\r\n  const first = characters.find(\r\n    (c) => c.id === getFirst(queue),\r\n  ) as tProcessedCharacter\r\n  const sortedIds = getSortedIds(queue)\r\n  const bigList = [\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n  ]\r\n  const count = Math.floor((800 - 52) / size)\r\n  const [f, ...list] = Array(count)\r\n    .fill(null)\r\n    .map((_, i) => bigList[i])\r\n    .map((id) => characters.find((c) => c.id === id))\r\n    .filter((c) => c !== undefined)\r\n  const max = getMax(queue)\r\n  const min = 25\r\n  const widthCoef = max > min ? 100 / max : 100 / min\r\n  return (\r\n    <AppHeader\r\n      left={\r\n        <Button onClick={() => history.push('/')} style={{ borderBottom: 0 }}>\r\n          Restart\r\n        </Button>\r\n      }\r\n      right={\r\n        <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n          <PartyResources />\r\n        </FlexContainer>\r\n      }\r\n    >\r\n      <>\r\n        {first && isRunning && (\r\n          <FlexContainer\r\n            style={{\r\n              width: 800,\r\n              flexDirection: 'row-reverse',\r\n              boxShadow: '0px 0px 3px black',\r\n              borderLeft: '1px solid rgba(255,255,255,0.3)',\r\n              background: Theme.mediumBgColor,\r\n            }}\r\n          >\r\n            <FlexContainer\r\n              style={{ position: 'relative', marginLeft: size, zIndex: 7 }}\r\n            >\r\n              <CharacterIcon\r\n                character={first}\r\n                size={64}\r\n                width={64}\r\n                height={64}\r\n                style={{ borderTop: 'none' }}\r\n              />\r\n              <FlexContainer\r\n                $direction='column'\r\n                style={{\r\n                  position: 'absolute',\r\n                  background: 'rgba(255,255,255,0.8)',\r\n                  color: Theme.darkBgColor,\r\n                  zIndex: 2,\r\n                  width: 120,\r\n                  top: 16,\r\n                  paddingLeft: 4,\r\n                  right: '-124px',\r\n                }}\r\n              >\r\n                {first && <span>{first.name}'s Turn</span>}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n            <FlexContainer $full $direction='column'>\r\n              <FullContainer />\r\n              <FlexContainer $full style={{ position: 'relative' }}>\r\n                {characters\r\n                  .filter((c) => c.id !== first?.id && c.health > 0)\r\n                  .map((c, i) => (\r\n                    <div\r\n                      key={`${c?.id}-${i}`}\r\n                      style={{\r\n                        height: size - 10,\r\n                        width: size - 7,\r\n                        position: 'absolute',\r\n                        bottom: '2px',\r\n                        right: `calc(${queue[c.id] * widthCoef}% - ${\r\n                          size - 6\r\n                        }px)`,\r\n                        transition: 'all 0.3s',\r\n                        zIndex: i,\r\n                      }}\r\n                      onMouseEnter={() => setHoverQueueCharacterId(c.id)}\r\n                      onMouseLeave={() => setHoverQueueCharacterId(undefined)}\r\n                    >\r\n                      <CharacterIcon\r\n                        character={c}\r\n                        size={size}\r\n                        width={size}\r\n                        index={i}\r\n                        style={{ borderBottom: 'none' }}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        )}\r\n      </>\r\n    </AppHeader>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { tCharacter } from '../../game/Character/type'\r\n\r\nexport const Span = (color: string, text: JSX.Element | string) => (\r\n  <span style={{ color, fontWeight: 'bold' }}>{text}</span>\r\n)\r\nexport const SkillSpan = (skill: tSkill) => Span('plum', skill.name)\r\n\r\nexport const NameSpanBuilder = (party: tParty, enemyParty: tParty) => (\r\n  character: tCharacter,\r\n) => {\r\n  const isUserParty = character.partyId === party.id\r\n  const isEnemyParty = character.partyId === enemyParty.id\r\n  const color = isUserParty\r\n    ? 'lightgreen'\r\n    : isEnemyParty\r\n    ? 'lightsalmon'\r\n    : 'white'\r\n\r\n  return Span(color, character.name)\r\n}\r\n","import React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport { useCombatContext } from '../CombatContext'\r\nimport { Monospace } from '../../elements/monospace'\r\nimport { NameSpanBuilder, SkillSpan, Span } from './util'\r\nimport { getDamageResistance } from '../../game/Character/util'\r\nimport { STATUS_CONFIG } from '../../game/Status/constants'\r\n\r\nexport interface CombatLogContextT {\r\n  combatLog: JSX.Element[]\r\n  clear: () => void\r\n}\r\nconst defualtValue: CombatLogContextT = {\r\n  combatLog: [],\r\n  clear: () => {},\r\n}\r\nexport const CombatLogContext = createContext<CombatLogContextT>(defualtValue)\r\nexport const useCombatLogContext = () => useContext(CombatLogContext)\r\n\r\ntype DeadLogT = Record<string, boolean | undefined>\r\n\r\nexport interface CombatLogContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const CombatLogContextProvider = (\r\n  props: CombatLogContextProviderPropsT,\r\n) => {\r\n  const { children } = props\r\n  const { activeRound, roundResults, enemyParty, party } = useCombatContext()\r\n  const [combatLog, setCombatLog] = useState<JSX.Element[]>([])\r\n  const clear = () => setCombatLog([])\r\n  const [deadLog, setDeadLog] = useState<DeadLogT>({})\r\n  const NameSpan = NameSpanBuilder(party, enemyParty)\r\n  const log = (line: JSX.Element) =>\r\n    setCombatLog((log) => [\r\n      ...log,\r\n      <Monospace style={{ display: 'inline-block', fontWeight: 'normal' }}>\r\n        {line}\r\n      </Monospace>,\r\n    ])\r\n\r\n  useEffect(() => {\r\n    const characters = [...enemyParty.characters, ...party.characters]\r\n    setTimeout(() => {\r\n      characters.forEach((character) => {\r\n        if (character.health <= 0 && !deadLog[character.id]) {\r\n          setDeadLog((dLog) => ({ ...dLog, [character.id]: true }))\r\n          log(<span>{Span('lightcoral', `${character.name} died.`)}</span>)\r\n        }\r\n      })\r\n    }, 5)\r\n  }, [enemyParty, party])\r\n\r\n  useEffect(() => {\r\n    if (activeRound && activeRound) {\r\n      log(\r\n        <span>\r\n          {NameSpan(activeRound.sourceResult.source)} uses{' '}\r\n          {SkillSpan(activeRound.sourceResult.skill)}.\r\n        </span>,\r\n      )\r\n    }\r\n  }, [activeRound])\r\n\r\n  useEffect(() => {\r\n    if (roundResults.length === 0) return\r\n    const latestRounds = roundResults[roundResults.length - 1]\r\n    const baseRound = latestRounds.sourceResult\r\n    if (!baseRound) return\r\n\r\n    if (baseRound.skill.damage && baseRound.passedCount === 0) {\r\n      log(<span>{baseRound.source.name}'s attack missed.</span>)\r\n    }\r\n    if (!baseRound.skill.damage && !baseRound.perfect) {\r\n      log(<span>{SkillSpan(baseRound.skill)} failed.</span>)\r\n    }\r\n    if (baseRound.criticalHitSuccess) {\r\n      log(<span>{Span('gold', 'Critical Hit!')}</span>)\r\n    }\r\n    if (baseRound.perfect && baseRound.rollResults.length > 0) {\r\n      log(<span>{Span('gold', 'Perfect!')}</span>)\r\n    }\r\n    latestRounds.targetResults.forEach((round) => {\r\n      const targetParty = party.id === round.source.partyId ? enemyParty : party\r\n      if (round.passedCount > 0) {\r\n        if (round.dodgeSuccess) {\r\n          log(<span>{NameSpan(round.target)} dodged the attack.</span>)\r\n        } else if (round.totalDamage.value > 0) {\r\n          log(\r\n            <span>\r\n              {SkillSpan(round.skill)} deals{' '}\r\n              {Span('white', `${round.loggedDamgge.value} damage`)} to{' '}\r\n              {NameSpan(round.target)}.\r\n            </span>,\r\n          )\r\n        } else if (round.skill.damage) {\r\n          log(\r\n            <span>\r\n              {SkillSpan(round.skill)} did no damage to {NameSpan(round.target)}\r\n              .\r\n            </span>,\r\n          )\r\n        }\r\n        if (round.splashDamage.value > 0) {\r\n          targetParty.characters\r\n            .filter((c) => c.id !== round.target.id && c.health > 0)\r\n            .forEach((subTarget) => {\r\n              const splashDamageResistance = getDamageResistance(\r\n                subTarget,\r\n                round.splashDamage,\r\n              )\r\n              log(\r\n                <span>\r\n                  {SkillSpan(round.skill)} deals{' '}\r\n                  {Span(\r\n                    'white',\r\n                    `${\r\n                      round.splashDamage.value - splashDamageResistance\r\n                    } splash damage`,\r\n                  )}{' '}\r\n                  to {NameSpan(subTarget)}.\r\n                </span>,\r\n              )\r\n            })\r\n        }\r\n\r\n        if (round.reflectedDamage.value > 0) {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} reflected{' '}\r\n              {Span('white', `${round.reflectedDamage.value} damage`)}\r\n            </span>,\r\n          )\r\n        }\r\n\r\n        /* TODO\r\n        if (round.healing > 0) {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} gained{' '}\r\n              {Span('white', `${round.healing} HP`)} from{' '}\r\n              {SkillSpan(round.skill)}\r\n            </span>,\r\n          )\r\n        }\r\n        */\r\n\r\n        round.addedStatus.forEach((status) => {\r\n          const statusConfig = STATUS_CONFIG[status]\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} became {status}\r\n              {statusConfig.duration > 0\r\n                ? ` (${statusConfig.duration} turns)`\r\n                : ''}\r\n              .\r\n            </span>,\r\n          )\r\n        })\r\n      }\r\n    })\r\n  }, [roundResults.length])\r\n\r\n  return (\r\n    <CombatLogContext.Provider value={{ combatLog, clear }}>\r\n      {children}\r\n    </CombatLogContext.Provider>\r\n  )\r\n}\r\n","import React, { useRef, useEffect, useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { useCombatLogContext } from '../../contexts/CombatLogContext'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport { Button } from '../../elements/button'\r\nimport { Theme } from '../../theme'\r\n\r\nexport const CombatLog = () => {\r\n  const { combatLog } = useCombatLogContext()\r\n  const scrollRef = useRef<HTMLDivElement>(null)\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n  useEffect(() => {\r\n    if (scrollRef.current && isExpanded) {\r\n      scrollRef.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n  }, [combatLog])\r\n  const style = useSpring({\r\n    minHeight: isExpanded ? 263 : 0,\r\n    maxHeight: isExpanded ? 263 : 0,\r\n  })\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{\r\n        minWidth: 300,\r\n        overflow: 'auto',\r\n        background: Theme.darkBgColor,\r\n        fontSize: 12,\r\n        color: 'rgba(255,255,255,0.8)',\r\n      }}\r\n    >\r\n      <FlexContainer\r\n        style={{\r\n          background: Theme.darkBgColor,\r\n          padding: 8,\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <FullContainer>Combat Log</FullContainer>\r\n        <Button\r\n          onClick={() => setIsExpanded((v) => !v)}\r\n          style={{ padding: '2px 8px' }}\r\n        >\r\n          {isExpanded ? '_' : '+'}\r\n        </Button>\r\n      </FlexContainer>\r\n      <animated.div\r\n        style={{\r\n          overflow: 'auto',\r\n          ...style,\r\n        }}\r\n      >\r\n        <FlexContainer $direction='column' style={{ padding: 8 }}>\r\n          {combatLog.map((line, i) => (\r\n            <span key={i}>{line}</span>\r\n          ))}\r\n        </FlexContainer>\r\n        <div ref={scrollRef} />\r\n      </animated.div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { FlexContainer, FullContainer } from '../elements/flex'\r\nimport { RoundResultRenderer } from '../components/RoundResultRenderer'\r\nimport { CombatActions } from '../components/CombatActions'\r\nimport { CombatParty } from '../components/CombatParty'\r\nimport { CombatQueue } from '../components/CombatQueue'\r\nimport { CombatLog } from '../components/CombatLog'\r\nimport { useUIContext } from '../contexts/UIContext'\r\nimport { useCombatStart } from '../hooks/useCombatStart'\r\nimport { useCombatLogContext } from '../contexts/CombatLogContext'\r\n\r\nexport const Combat = () => {\r\n  const {\r\n    enemyParty,\r\n    activeCharacter,\r\n    characters,\r\n    queue,\r\n    isRunning,\r\n    isRenderingResult,\r\n    onSkillSelect,\r\n  } = useCombatContext()\r\n\r\n  const { setOnCharacterConsumableClick } = useUIContext()\r\n  const { clear } = useCombatLogContext()\r\n  useCombatStart()\r\n  useEffect(() => {\r\n    setOnCharacterConsumableClick((c, index, item) => {\r\n      if (!c) return\r\n      if (c.id === activeCharacter.id) {\r\n        onSkillSelect(item.skill, index)\r\n      }\r\n    })\r\n  }, [onSkillSelect, activeCharacter])\r\n  useEffect(() => {\r\n    clear()\r\n  }, [])\r\n\r\n  return (\r\n    <FlexContainer $full style={{ height: '100%' }}>\r\n      <FlexContainer $full $direction='column'>\r\n        <CombatQueue queue={queue} characters={characters} />\r\n        <FlexContainer\r\n          $direction='column'\r\n          $full\r\n          style={{ padding: '30px 10px 0 10px' }}\r\n        >\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{ marginBottom: 24, minHeight: 112 }}\r\n          >\r\n            <CombatParty party={enemyParty} />\r\n          </FlexContainer>\r\n          <FlexContainer $full>\r\n            {isRunning && activeCharacter && (\r\n              <>\r\n                <FullContainer />\r\n                <FlexContainer $direction='column'>\r\n                  <FullContainer />\r\n                  <div style={{ marginTop: 24 }}>\r\n                    {!isRenderingResult && <CombatActions />}\r\n                    <RoundResultRenderer isModal={false} />\r\n                  </div>\r\n                  <FullContainer />\r\n                </FlexContainer>\r\n                <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n                  <FlexContainer $direction='column'>\r\n                    <CombatLog />\r\n                  </FlexContainer>\r\n                </FlexContainer>\r\n              </>\r\n            )}\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useModalContext } from '../contexts/ModalContext'\r\nimport { useCombatLogContext } from '../contexts/CombatLogContext'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { FlexContainer } from '../elements/flex'\r\nimport { Icon } from '../components/Icon'\r\nimport { Theme } from '../theme'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\n\r\nexport const useCombatStart = (delay: number = 1000) => {\r\n  const { open, close } = useModalContext()\r\n  const { clear } = useCombatLogContext()\r\n  const { started } = useGameStateContext()\r\n  const { enemyParty, start, reset } = useCombatContext()\r\n  useEffect(() => {\r\n    clear()\r\n    if (started) {\r\n      open(\r\n        <div style={{ textAlign: 'center' }}>\r\n          <h1 style={{ fontFamily: Theme.titleFont, userSelect: 'none' }}>\r\n            Combat Start!\r\n          </h1>\r\n          <FlexContainer\r\n            style={{\r\n              justifyContent: 'space-around',\r\n              marginTop: 32,\r\n              marginBottom: 40,\r\n            }}\r\n          >\r\n            {enemyParty.characters.map((c) => (\r\n              <FlexContainer\r\n                key={c.id}\r\n                style={{\r\n                  background: '#c27a5d',\r\n                  border: '2px solid rgba(255,255,255,0.8)',\r\n                  height: 60,\r\n                  width: 60,\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                }}\r\n              >\r\n                <Icon\r\n                  src={c.icon || ''}\r\n                  shadow\r\n                  fill={'white'}\r\n                  size={60}\r\n                  style={{ zIndex: 1, position: 'relative' }}\r\n                />\r\n              </FlexContainer>\r\n            ))}\r\n          </FlexContainer>\r\n        </div>,\r\n        {},\r\n        true,\r\n      )\r\n      setTimeout(() => {\r\n        close()\r\n        start()\r\n      }, 1500)\r\n    }\r\n    return () => {\r\n      reset()\r\n      clear()\r\n    }\r\n  }, [])\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Route, useHistory, useLocation } from 'react-router-dom'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport { useModalContext } from '../contexts/ModalContext'\r\nimport { FLOOR_3A_ID } from '../game/Encounter/floors/floor-3'\r\nimport { tRewardEncounter } from '../game/Encounter/type'\r\nimport { Theme } from '../theme'\r\n\r\nexport const makeRoute = (path: string, Component: React.FC) => (\r\n  <Route path={`${path}`}>\r\n    <Component />\r\n  </Route>\r\n)\r\n\r\nexport const RouteController = () => {\r\n  const { currentEncounter, floorId, floors, started } = useGameStateContext()\r\n  const history = useHistory()\r\n  const { open } = useModalContext()\r\n  useEffect(() => {\r\n    if (!started) {\r\n      history.push('/')\r\n    }\r\n    if (floorId === FLOOR_3A_ID) {\r\n      open(\r\n        <div style={{ textAlign: 'center', fontFamily: Theme.titleFont }}>\r\n          <h1>You've Defeated the Lich! You did it!</h1>\r\n        </div>,\r\n      )\r\n      history.push('/')\r\n    } else if (\r\n      currentEncounter &&\r\n      !currentEncounter.completed &&\r\n      (currentEncounter.type === 'combat' ||\r\n        currentEncounter.type === 'boss' ||\r\n        (currentEncounter.type === 'reward' &&\r\n          (currentEncounter as tRewardEncounter).isMimic &&\r\n          (currentEncounter as tRewardEncounter).isOpened))\r\n    ) {\r\n      history.push('/combat')\r\n    } else if (started && currentEncounter && currentEncounter.completed) {\r\n      history.push('/party')\r\n    }\r\n  }, [currentEncounter, started])\r\n  return null\r\n}\r\n","import React, { useState, CSSProperties } from 'react'\r\nimport { withStyle } from 'styletron-react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Button } from '../../elements/button'\r\nimport { tShopEncounter } from '../../game/Encounter/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { Theme } from '../../theme'\r\nimport { ItemCard } from '../ItemCard'\r\nimport {\r\n  equipWeapon,\r\n  makeCharacter,\r\n  processCharacter,\r\n} from '../../game/Character/util'\r\nconst c = makeCharacter('drifter')\r\nconst p = processCharacter\r\nconst CardList = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  }\r\n})\r\n\r\ninterface ShopTabT {\r\n  key: string\r\n  label: string\r\n  render: (\r\n    encounter: tShopEncounter,\r\n    purchaseItem: (item: tArmor | tWeapon | tConsumable, cost: number) => void,\r\n    query: string,\r\n  ) => JSX.Element\r\n}\r\nconst tabs: ShopTabT[] = [\r\n  {\r\n    key: 'all',\r\n    label: 'All',\r\n    render: (encounter: tShopEncounter, purchaseItem, query) => (\r\n      <FlexContainer $direction='column'>\r\n        <h3>Consumables</h3>\r\n        <CardList>\r\n          {encounter.items\r\n            .filter(\r\n              (i) =>\r\n                i.itemType === 'consumable' &&\r\n                (query\r\n                  ? JSON.stringify(i)\r\n                      .toLowerCase()\r\n                      .includes(query.toLowerCase())\r\n                  : true),\r\n            )\r\n            .map((a) => (\r\n              <ItemCard\r\n                character={p(c)}\r\n                item={a as tConsumable}\r\n                showBuyButton={true}\r\n                cost={encounter.costs[a.id]}\r\n                onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n              />\r\n            ))}\r\n        </CardList>\r\n        <h3>Weapons</h3>\r\n        <CardList>\r\n          {encounter.items\r\n            .filter(\r\n              (i) =>\r\n                i.itemType === 'weapon' &&\r\n                (query\r\n                  ? JSON.stringify(i)\r\n                      .toLowerCase()\r\n                      .includes(query.toLowerCase())\r\n                  : true),\r\n            )\r\n            .map((w) => (\r\n              <ItemCard\r\n                item={w}\r\n                character={p(equipWeapon(c, w as tWeapon).character)}\r\n                showBuyButton={true}\r\n                cost={encounter.costs[w.id]}\r\n                onBuyClick={() => purchaseItem(w, encounter.costs[w.id])}\r\n              />\r\n            ))}\r\n        </CardList>\r\n        <h3>Armor</h3>\r\n        <CardList>\r\n          {encounter.items\r\n            .filter(\r\n              (i) =>\r\n                i.itemType === 'armor' &&\r\n                (query\r\n                  ? JSON.stringify(i)\r\n                      .toLowerCase()\r\n                      .includes(query.toLowerCase())\r\n                  : true),\r\n            )\r\n            .map((a) => (\r\n              <ItemCard\r\n                item={a}\r\n                character={p(c)}\r\n                showBuyButton={true}\r\n                cost={encounter.costs[a.id]}\r\n                onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n              />\r\n            ))}\r\n        </CardList>\r\n      </FlexContainer>\r\n    ),\r\n  },\r\n  {\r\n    key: 'weapons',\r\n    label: 'Weaons',\r\n    render: (encounter: tShopEncounter, purchaseItem, query) => (\r\n      <CardList>\r\n        {encounter.items\r\n          .filter(\r\n            (i) =>\r\n              i.itemType === 'weapon' &&\r\n              (query\r\n                ? JSON.stringify(i).toLowerCase().includes(query.toLowerCase())\r\n                : true),\r\n          )\r\n          .map((w) => (\r\n            <ItemCard\r\n              item={w}\r\n              character={p(equipWeapon(c, w as tWeapon).character)}\r\n              showBuyButton={true}\r\n              cost={encounter.costs[w.id]}\r\n              onBuyClick={() => purchaseItem(w, encounter.costs[w.id])}\r\n            />\r\n          ))}\r\n      </CardList>\r\n    ),\r\n  },\r\n  {\r\n    key: 'armor',\r\n    label: 'Armor',\r\n    render: (encounter: tShopEncounter, purchaseItem, query) => (\r\n      <CardList>\r\n        {encounter.items\r\n          .filter(\r\n            (i) =>\r\n              i.itemType === 'armor' &&\r\n              (query\r\n                ? JSON.stringify(i).toLowerCase().includes(query.toLowerCase())\r\n                : true),\r\n          )\r\n          .map((a) => (\r\n            <ItemCard\r\n              item={a}\r\n              character={p(c)}\r\n              showBuyButton={true}\r\n              cost={encounter.costs[a.id]}\r\n              onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n            />\r\n          ))}\r\n      </CardList>\r\n    ),\r\n  },\r\n  {\r\n    key: 'consumables',\r\n    label: 'Consumables',\r\n    render: (encounter: tShopEncounter, purchaseItem) => (\r\n      <CardList>\r\n        {encounter.items\r\n          .filter((i) => i.itemType === 'consumable')\r\n          .map((a) => (\r\n            <ItemCard\r\n              item={a}\r\n              character={p(c)}\r\n              showBuyButton={true}\r\n              cost={encounter.costs[a.id]}\r\n              onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n            />\r\n          ))}\r\n      </CardList>\r\n    ),\r\n  },\r\n]\r\n\r\nexport interface ShopPropsT {}\r\nexport const Shop = (props: ShopPropsT) => {\r\n  const {} = props\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { purchaseItem } = usePartyContext()\r\n  const [query, setQuery] = useState('')\r\n  const [activeTab, setActiveTab] = useState(\r\n    tabs.find((t) => t.key === 'all') as ShopTabT,\r\n  )\r\n  const active = (tab: ShopTabT): CSSProperties =>\r\n    tab.key === activeTab.key\r\n      ? {\r\n          borderColor: 'white',\r\n        }\r\n      : {}\r\n  return (\r\n    <BoxContainer\r\n      style={{ margin: '20px 20px 20px 0', flex: 1, minWidth: 762 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <FlexContainer style={{ alignItems: 'center' }}>\r\n        <FullContainer>\r\n          <h1 style={{ margin: 0, fontFamily: Theme.titleFont }}>\r\n            Black Market\r\n          </h1>\r\n        </FullContainer>\r\n        <input\r\n          placeholder='Search Items'\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          style={{\r\n            background: Theme.mediumBgColor,\r\n            border: '1px solid rgba(255,255,255,0.4)',\r\n            padding: 10,\r\n            color: 'white',\r\n            marginRight: 16,\r\n          }}\r\n        />\r\n        <FlexContainer>\r\n          {tabs.map((tab) => (\r\n            <Button\r\n              key={tab.label}\r\n              style={active(tab)}\r\n              onClick={() => setActiveTab(tab)}\r\n            >\r\n              {tab.label}\r\n            </Button>\r\n          ))}\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n      <FlexContainer\r\n        $direction='column'\r\n        $full\r\n        style={{\r\n          overflow: 'auto',\r\n          marginTop: 10,\r\n          height: 'calc(100vh - 374px)',\r\n          overflowY: 'auto',\r\n        }}\r\n      >\r\n        {activeTab.render(\r\n          currentEncounter as tShopEncounter,\r\n          purchaseItem,\r\n          query,\r\n        )}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Kefir from 'kefir'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { tShrineEncounter } from '../../game/Encounter/type'\r\nimport { SkillChecks } from '../SkillChecks'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { resolveCheck } from '../../game/Roll/util'\r\nimport { ZERO_REWARD } from '../../game/Encounter/constants'\r\nimport { commitRewards } from '../../game/Party/util'\r\nimport { Theme } from '../../theme'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { CombatVictoryModalPure } from '../CombatVictoryModal/pure'\r\n\r\nexport interface ShrinePropsT {}\r\nexport const Shrine = (props: ShrinePropsT) => {\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { open, close } = useModalContext()\r\n  const { party, rawParty, updateParty, equipItem } = usePartyContext()\r\n  const encounter = currentEncounter as tShrineEncounter\r\n  const [results, setResults] = useState<boolean[]>([])\r\n  const onClick = (c: tProcessedCharacter) => {\r\n    const stream = Kefir.sequentially(\r\n      200,\r\n      Array(encounter.rolls - 1)\r\n        .fill(0)\r\n        .map((_, i) => ({\r\n          index: i,\r\n          result: resolveCheck(c, encounter.stat),\r\n        })),\r\n    )\r\n    stream.onValue((value) => {\r\n      setResults((r) => [...r, value.result])\r\n    })\r\n    stream.onEnd(() => {})\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (results.length === encounter.rolls - 1) {\r\n      const rewards =\r\n        encounter.results[results.filter((r) => r === true).length]\r\n      if (!rewards) {\r\n        return\r\n      }\r\n      if (rewards.items.length > 0) {\r\n        open(\r\n          <CombatVictoryModalPure\r\n            title='You got an item!'\r\n            showOther={false}\r\n            rewards={rewards}\r\n            onNextClick={close}\r\n            onEquipClick={equipItem}\r\n          />,\r\n        )\r\n      }\r\n      updateParty(commitRewards(rawParty, rewards))\r\n    }\r\n  }, [results])\r\n\r\n  return (\r\n    <BoxContainer\r\n      style={{ margin: '20px 20px 20px 0', flex: 1 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <FlexContainer>\r\n        <FlexContainer $direction='column'>\r\n          <h1\r\n            style={{\r\n              margin: '0 0 24px 0',\r\n              textTransform: 'capitalize',\r\n              fontFamily: Theme.titleFont,\r\n            }}\r\n          >\r\n            {encounter.stat} Shrine\r\n          </h1>\r\n          <div style={{ maxWidth: 300, marginBottom: 48 }}>\r\n            Shines are optional encounters that test one character in your\r\n            party's stats. Be careful, as if you fail, you may get a negative\r\n            outcome!\r\n          </div>\r\n          <FlexContainer>\r\n            <FlexContainer $direction='column'>\r\n              <SkillChecks\r\n                stat={encounter.stat}\r\n                rolls={encounter.rolls - 1}\r\n                results={results}\r\n              />\r\n              <FlexContainer style={{ justifyContent: 'center' }}>\r\n                {party.characters.map((c) => (\r\n                  <Button\r\n                    onClick={() => onClick(c)}\r\n                    disabled={results.length > 0}\r\n                  >\r\n                    {c.name} ({c.stats[encounter.stat]})\r\n                  </Button>\r\n                ))}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n        <FlexContainer\r\n          $direction='column'\r\n          $full\r\n          style={{ padding: '86px 16px 0 16px' }}\r\n        >\r\n          {encounter.results.map((reward, index) => (\r\n            <FlexContainer\r\n              style={{\r\n                padding: 8,\r\n                alignItems: 'center',\r\n                marginBottom: 4,\r\n                background:\r\n                  results.length === encounter.rolls - 1 &&\r\n                  index === results.filter((r) => r === true).length\r\n                    ? 'rgba(144, 238, 144, 0.3)'\r\n                    : 'linear-gradient(90deg, rgba(255,255,255,0.3) 0%, rgba(255,255,255,0) 100%)',\r\n              }}\r\n            >\r\n              <span style={{ fontSize: 24 }}>{index}</span>\r\n              <span\r\n                style={{\r\n                  display: 'inline-block',\r\n                  marginLeft: 8,\r\n                  textTransform: 'capitalize',\r\n                }}\r\n              >\r\n                {reward.gold > 0 && ` ${reward.gold} Gold`}\r\n                {reward.xp > 0 && ` +${reward.xp} Experience`}\r\n                {reward.status.length > 0 && ` ${reward.status}`}\r\n                {reward.items.length > 0 && ` Random Item`}\r\n                {JSON.stringify(reward) === JSON.stringify(ZERO_REWARD) &&\r\n                  ' No Effect'}\r\n              </span>\r\n            </FlexContainer>\r\n          ))}\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { RedButton } from '../../elements/button'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { BOSS_FLOOR_MAP } from '../../game/Encounter/floors'\r\nimport { tBossEncounter } from '../../game/Encounter/type'\r\nimport { BOSS_ITEMS } from '../../game/Weapon/constants'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { Theme } from '../../theme'\r\nimport { ItemCard } from '../ItemCard'\r\n\r\nexport const BossRewards = () => {\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { nextFloor } = useGameStateContext()\r\n  const { updateParty, rawParty, party } = usePartyContext()\r\n  const [chosenReward, setChosenReward] = useState<\r\n    tArmor | tWeapon | undefined\r\n  >()\r\n\r\n  useEffect(() => {\r\n    if (currentEncounter && currentEncounter.completed) {\r\n      updateParty({\r\n        ...rawParty,\r\n        characters: rawParty.characters.map((c) => ({\r\n          ...c,\r\n          healthOffset: 0,\r\n        })),\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  if (!currentEncounter) return null\r\n  const boss = (currentEncounter as tBossEncounter).party.characters[0]\r\n  const nextFloorId = BOSS_FLOOR_MAP()[\r\n    (currentEncounter as tBossEncounter).party.characters[0].id\r\n  ]\r\n\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{\r\n        padding: 16,\r\n        background: Theme.darkBgColor,\r\n        marginRight: 16,\r\n        marginTop: 16,\r\n      }}\r\n    >\r\n      <h1\r\n        style={{\r\n          marginTop: 8,\r\n          fontFamily: Theme.titleFont,\r\n          textAlign: 'center',\r\n          color: 'white',\r\n        }}\r\n      >\r\n        Choose your reward\r\n      </h1>\r\n      <FlexContainer $center>\r\n        {(BOSS_ITEMS[boss.id] || []).map((item) => (\r\n          <ItemCard\r\n            key={item.id}\r\n            item={item}\r\n            character={party.characters[0]}\r\n            showBuyButton={!chosenReward || chosenReward.id !== item.id}\r\n            buyText={'Choose This Item'}\r\n            onBuyClick={() => setChosenReward(item)}\r\n          />\r\n        ))}\r\n      </FlexContainer>\r\n      {chosenReward && (\r\n        <FlexContainer $center style={{ marginTop: 24 }}>\r\n          <RedButton\r\n            onClick={() => {\r\n              updateParty({\r\n                ...rawParty,\r\n                items: [...rawParty.items, chosenReward],\r\n              })\r\n              nextFloor(nextFloorId)\r\n            }}\r\n          >\r\n            Next Floor\r\n          </RedButton>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Button } from '../../elements/button'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Theme } from '../../theme'\r\nimport { Icon } from '../Icon'\r\nimport ChestIcon from '../../icons/svg/lorc/locked-chest.svg'\r\nimport { tRewardEncounter } from '../../game/Encounter/type'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { commitRewards } from '../../game/Party/util'\r\nimport { CombatVictoryModalPure } from '../CombatVictoryModal/pure'\r\n\r\nexport const Chest = () => {\r\n  const {\r\n    openCurrent,\r\n    completeCurrent,\r\n    currentEncounter,\r\n  } = useGameStateContext()\r\n  const { open, close } = useModalContext()\r\n  const { rawParty, updateParty, equipItem } = usePartyContext()\r\n  useEffect(() => {\r\n    if (\r\n      (currentEncounter as tRewardEncounter).isOpened &&\r\n      !(currentEncounter as tRewardEncounter).isMimic &&\r\n      currentEncounter?.reward\r\n    ) {\r\n      updateParty(commitRewards(rawParty, currentEncounter?.reward))\r\n      open(\r\n        <CombatVictoryModalPure\r\n          title='Rewards!'\r\n          rewards={currentEncounter.reward}\r\n          onNextClick={() => {\r\n            completeCurrent()\r\n            close()\r\n          }}\r\n          onEquipClick={equipItem}\r\n        />,\r\n      )\r\n    }\r\n  }, [(currentEncounter as tRewardEncounter | undefined)?.isOpened])\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{\r\n        margin: '20px 20px 20px 0',\r\n        padding: 16,\r\n        background: Theme.darkBgColor,\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <h1\r\n        style={{\r\n          marginTop: 0,\r\n          color: 'white',\r\n          fontFamily: Theme.titleFont,\r\n          fontWeight: 'normal',\r\n          textAlign: 'center',\r\n        }}\r\n      >\r\n        You found treasure!\r\n      </h1>\r\n      <Icon size={200} src={ChestIcon} style={{ marginBottom: 24 }} />\r\n      <Button onClick={() => openCurrent()}>Open</Button>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { HexBadge } from '../../elements/shapes'\r\nimport { CHARACTER_CLASS_COLORS } from '../../game/Character/constants'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { CHARACTER_CLASS_ICONS } from '../../icons/maps'\r\nimport { Theme } from '../../theme'\r\nimport { Icon } from '../Icon'\r\nimport { ItemCard } from '../ItemCard'\r\nimport { HoverToolTip } from '../Tooltip'\r\n\r\nexport interface CharacterSelectorPropsT {\r\n  character: tProcessedCharacter\r\n  active: boolean\r\n  onClick: () => void\r\n}\r\nexport const CharacterSelector = (props: CharacterSelectorPropsT) => {\r\n  const { character, active, onClick } = props\r\n  const head = character.armor.find((a) => a.resource === 'head')\r\n  const body = character.armor.find((a) => a.resource === 'body')\r\n  const feet = character.armor.find((a) => a.resource === 'feet')\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        cursor: 'pointer',\r\n        alignItems: 'center',\r\n        userSelect: 'none',\r\n      }}\r\n      onClick={onClick}\r\n    >\r\n      <HexBadge\r\n        size={84}\r\n        stroke={3}\r\n        color={CHARACTER_CLASS_COLORS[character.class]}\r\n        style={{\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          zIndex: 3,\r\n        }}\r\n        childStyle={{\r\n          marginTop: -18,\r\n        }}\r\n      >\r\n        <Icon\r\n          src={CHARACTER_CLASS_ICONS[character.class]}\r\n          size={48}\r\n          shadow\r\n          fill={active ? 'white' : 'rgba(255,255,255,0.5)'}\r\n        />\r\n      </HexBadge>\r\n      <BoxContainer\r\n        style={{\r\n          height: 76,\r\n          marginLeft: -32,\r\n          borderWidth: 3,\r\n          transition: 'all 0.4,',\r\n          boxShadow: active ? '0px 5px 10px rgba(0,0,0,0.9)' : undefined,\r\n        }}\r\n        substyle={{\r\n          background: active ? Theme.otherGrey2 : Theme.mediumBgColor,\r\n          transition: 'all 0.3s',\r\n          paddingLeft: 32,\r\n          paddingTop: 0,\r\n          paddingBottom: 0,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          justifyContent: 'center',\r\n          textShadow: '1px 1px 3px black',\r\n          fontSize: 14,\r\n        }}\r\n      >\r\n        {head && (\r\n          <HoverToolTip\r\n            content={<ItemCard item={head} character={character} />}\r\n          >\r\n            <div style={{ color: ITEM_RARITY_COLORS[head.rarity] }}>\r\n              {head.name} ({head.level})\r\n            </div>\r\n          </HoverToolTip>\r\n        )}\r\n\r\n        {body && (\r\n          <HoverToolTip\r\n            content={<ItemCard item={body} character={character} />}\r\n          >\r\n            <div style={{ color: ITEM_RARITY_COLORS[body.rarity] }}>\r\n              {body?.name} ({body?.level})\r\n            </div>\r\n          </HoverToolTip>\r\n        )}\r\n        {feet && (\r\n          <HoverToolTip\r\n            content={<ItemCard item={feet} character={character} />}\r\n          >\r\n            <div style={{ color: ITEM_RARITY_COLORS[feet.rarity] }}>\r\n              {feet.name} ({feet.level})\r\n            </div>\r\n          </HoverToolTip>\r\n        )}\r\n      </BoxContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\nimport { Theme } from '../theme'\r\n\r\nexport const FakeLink = styled('span', (props: any) => {\r\n  return {\r\n    whiteSpace: 'nowrap',\r\n    ':hover': {\r\n      textDecoration: 'underline',\r\n      cursor: 'pointer',\r\n    },\r\n  }\r\n})\r\n\r\nexport const HeadingSm = styled('span', (props: any) => {\r\n  return {\r\n    fontFamily: Theme.titleFont,\r\n    color: 'white',\r\n    fontSize: '20px',\r\n    display: 'inline-block',\r\n    marginBottom: '16px',\r\n  }\r\n})\r\n\r\nexport const Text = styled('span', (props: any) => {\r\n  return {\r\n    color: 'rgba(255,255,255,0.75)',\r\n    lineHeight: '1.4',\r\n    marginBottom: 16,\r\n  }\r\n})\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { HeadingSm } from '../../elements/typography'\r\nimport { getUpgradeOptions } from '../../game/Armor/builders/static'\r\nimport { tArmor, tArmorResourceType } from '../../game/Armor/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { RESOURCE_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { ItemCard } from '../ItemCard'\r\nimport { HoverToolTip } from '../Tooltip'\r\n\r\nexport interface UpgradeOptionsT {\r\n  character: tProcessedCharacter\r\n  resource: tArmorResourceType\r\n  gold: number\r\n  upgradeItem: (cid: string, a: tArmor) => void\r\n}\r\nexport const UpgradeOptions = (props: UpgradeOptionsT) => {\r\n  const { character, resource, gold, upgradeItem } = props\r\n  const item = character.armor.find((a) => a.resource === resource)\r\n  const upgradeOptions = getUpgradeOptions(item)\r\n  if (!item) return null\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {upgradeOptions.length > 0 ? (\r\n        upgradeOptions.map((a) => (\r\n          <ItemCard\r\n            key={a.id}\r\n            item={a}\r\n            character={character}\r\n            showBuyButton\r\n            buyButtonDisabled={gold < a.goldValue}\r\n            buyText={\r\n              <HoverToolTip\r\n                direction='down'\r\n                distance={20}\r\n                content={<ItemCard character={character} item={item} />}\r\n              >\r\n                <div>{`Upgrade (${a.goldValue})`}</div>\r\n              </HoverToolTip>\r\n            }\r\n            onBuyClick={() => upgradeItem(character.id, a)}\r\n          />\r\n        ))\r\n      ) : (\r\n        <FlexContainer\r\n          $direction='column'\r\n          $full\r\n          style={{\r\n            padding: 8,\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            width: 232,\r\n          }}\r\n        >\r\n          <Icon\r\n            src={RESOURCE_ICONS[resource]}\r\n            size={48}\r\n            shadow\r\n            fill={ITEM_RARITY_COLORS[item.rarity]}\r\n            style={{ marginBottom: 16 }}\r\n          />\r\n          <HeadingSm\r\n            style={{\r\n              color: ITEM_RARITY_COLORS[item.rarity],\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            Maximum Upgrade Achieved\r\n          </HeadingSm>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Theme } from '../../theme'\r\nimport { Icon } from '../Icon'\r\nimport { CharacterSelector } from './CharacterSelector'\r\nimport { UpgradeOptions } from './UpgradeOptions'\r\nimport SmithIcon from '../../icons/svg/lorc/anvil-impact.svg'\r\n\r\nexport interface SmithPropsT {}\r\n\r\nexport const Smith = (props: SmithPropsT) => {\r\n  const { party, upgradeItem } = usePartyContext()\r\n  const [activeCharacterId, setActiveCharacterId] = useState(\r\n    party.characters[0].id,\r\n  )\r\n  const activeCharacter = party.characters.find(\r\n    (c) => c.id === activeCharacterId,\r\n  ) as tProcessedCharacter\r\n  return (\r\n    <FullContainer>\r\n      <BoxContainer\r\n        style={{ margin: '24px 24px 0 0', borderWidth: 2 }}\r\n        substyle={{\r\n          boxShadow: '0px 0px 10px black',\r\n          padding: 0,\r\n          borderColor: Theme.otherGrey2,\r\n        }}\r\n      >\r\n        <FlexContainer\r\n          style={{\r\n            background: Theme.otherGrey2,\r\n            height: 32,\r\n            fontSize: 18,\r\n            fontFamily: Theme.titleFont,\r\n            alignItems: 'center',\r\n            paddingLeft: 8,\r\n            marginTop: -1,\r\n            marginRight: -1,\r\n            marginLeft: -1,\r\n            textShadow: '1px 1px 3px black',\r\n          }}\r\n        >\r\n          <Icon\r\n            src={SmithIcon}\r\n            size={24}\r\n            shadow\r\n            style={{ marginRight: 8, marginTop: -2 }}\r\n          />\r\n          Armor Workshop (Upgrades)\r\n        </FlexContainer>\r\n        <FlexContainer $direction='column'>\r\n          <FlexContainer\r\n            style={{\r\n              justifyContent: 'space-around',\r\n              background: Theme.otherGrey,\r\n              boxShadow: 'inset 0px 3px 5px black',\r\n              padding: '4px 0',\r\n            }}\r\n          >\r\n            {party.characters.map((c) => (\r\n              <CharacterSelector\r\n                character={c}\r\n                active={activeCharacter.id === c.id}\r\n                onClick={() => setActiveCharacterId(c.id)}\r\n              />\r\n            ))}\r\n          </FlexContainer>\r\n          <FlexContainer\r\n            style={{\r\n              justifyContent: 'center',\r\n              maxHeight: 'calc(100vh - 467px)',\r\n              padding: 16,\r\n              boxShadow: 'inset 0px 0px 20px black',\r\n              overflow: 'auto',\r\n              background: Theme.mediumBgColor,\r\n            }}\r\n          >\r\n            <UpgradeOptions\r\n              character={activeCharacter}\r\n              resource='head'\r\n              gold={party.gold}\r\n              upgradeItem={upgradeItem}\r\n            />\r\n            <UpgradeOptions\r\n              character={activeCharacter}\r\n              resource='body'\r\n              gold={party.gold}\r\n              upgradeItem={upgradeItem}\r\n            />\r\n            <UpgradeOptions\r\n              character={activeCharacter}\r\n              resource='feet'\r\n              gold={party.gold}\r\n              upgradeItem={upgradeItem}\r\n            />\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </BoxContainer>\r\n    </FullContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Shop } from '../Shop'\r\nimport { Shrine } from '../Shrine'\r\nimport { BossRewards } from '../BossRewards'\r\nimport { Chest } from '../Chest'\r\nimport { Smith } from '../Smith'\r\n\r\nexport const NonCombatEncounter = () => {\r\n  const { currentEncounter } = useGameStateContext()\r\n  return (\r\n    <FlexContainer $direction='column' $full style={{ marginLeft: '60px' }}>\r\n      {currentEncounter && currentEncounter.type === 'shop' && <Shop />}\r\n      {currentEncounter && currentEncounter.type === 'shrine' && <Shrine />}\r\n      {currentEncounter &&\r\n        currentEncounter.type === 'boss' &&\r\n        currentEncounter.completed && <BossRewards />}\r\n      {currentEncounter && currentEncounter.type === 'reward' && <Chest />}\r\n      {currentEncounter && currentEncounter.type === 'smith' && <Smith />}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { FLOOR_3A_ID } from '../floors/floor-3'\r\nimport { FLOOR_1_ID } from '../floors/level1/floor-1'\r\nimport { FLOOR_2A_ID } from '../floors/level2/floor-2a'\r\nimport { FLOOR_2B_ID } from '../floors/level2/floor-2b'\r\nimport { tEncounter } from '../type'\r\n\r\nexport const ENCOUNTER_TEXTS: Record<\r\n  string,\r\n  Record<string, (pe?: tEncounter) => string>\r\n> = {\r\n  [FLOOR_1_ID]: {\r\n    0: () =>\r\n      'As your party begins their journey, you travel down an empty road. You arrive at a split path, you must make a choice on which way to proceed.',\r\n    1: () =>\r\n      `You notice a that the forest has been covered in a thick darkness. You feel a force pulling you deeper into the forest.`,\r\n  },\r\n  [FLOOR_2A_ID]: {},\r\n  [FLOOR_2B_ID]: {},\r\n  [FLOOR_3A_ID]: {},\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { HeadingSm, Text } from '../../elements/typography'\r\nimport { ENCOUNTER_TEXTS } from '../../game/Encounter/text'\r\nimport { getDepth } from '../../grid/util'\r\nimport { FLOOR_1_ID } from '../../game/Encounter/floors/level1/floor-1'\r\n\r\nexport interface ChoicePropsT {}\r\n\r\nexport const Choice = (props: ChoicePropsT) => {\r\n  const {\r\n    floorId,\r\n    currentEncounter,\r\n    currentFloor,\r\n    currentHex,\r\n  } = useGameStateContext()\r\n  const depth =\r\n    currentEncounter && currentHex\r\n      ? getDepth(currentHex, currentFloor.size) + 1\r\n      : 0\r\n  const text = ENCOUNTER_TEXTS[floorId][depth]\r\n  return (\r\n    <FlexContainer $direction='column' style={{ paddingTop: 24 }}>\r\n      <HeadingSm\r\n        style={{\r\n          textAlign: 'center',\r\n        }}\r\n      >\r\n        Your Journey{' '}\r\n        {currentEncounter === undefined && floorId === FLOOR_1_ID\r\n          ? 'Begins'\r\n          : 'Continues'}\r\n        .\r\n      </HeadingSm>\r\n      <Text\r\n        style={{\r\n          marginBottom: 24,\r\n          padding: 8,\r\n        }}\r\n      >\r\n        {text && text()}\r\n      </Text>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Button } from '../../elements/button'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Text } from '../../elements/typography'\r\nimport { tShopEncounter } from '../../game/Encounter/type'\r\n\r\nexport interface ShopPropsT {\r\n  currentEncounter: tShopEncounter\r\n}\r\nexport const Shop = (props: ShopPropsT) => {\r\n  const { currentEncounter } = props\r\n  const { completeCurrent } = useGameStateContext()\r\n  return (\r\n    <FlexContainer $direction='column' style={{ justifyContent: 'center' }}>\r\n      {currentEncounter.type === 'shop' && (\r\n        <>\r\n          <h3\r\n            style={{\r\n              margin: '0 0 16px 0',\r\n              color: 'white',\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            You found a shop!\r\n          </h3>\r\n          <Text\r\n            style={{\r\n              padding: 8,\r\n              marginBottom: 24,\r\n            }}\r\n          >\r\n            Amidst your journey, you discover a merchant, a traveling salemen\r\n            with all manor of wares to assist in your adventure.\r\n          </Text>\r\n        </>\r\n      )}\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        <Button onClick={() => completeCurrent()}>Leave Shop</Button>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Button } from '../../elements/button'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tShrineEncounter } from '../../game/Encounter/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ShrinePropsT {\r\n  currentEncounter: tShrineEncounter\r\n}\r\n\r\nexport const Shrine = (props: ShrinePropsT) => {\r\n  const { completeCurrent } = useGameStateContext()\r\n  return (\r\n    <FlexContainer $direction='column' style={{ justifyContent: 'center' }}>\r\n      <h3\r\n        style={{\r\n          fontFamily: Theme.titleFont,\r\n          fontWeight: 'normal',\r\n          textAlign: 'center',\r\n        }}\r\n      >\r\n        You've discoved a secret shrine.\r\n      </h3>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        <Button onClick={() => completeCurrent()}>Leave Shrine</Button>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Button } from '../../elements/button'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { HeadingSm, Text } from '../../elements/typography'\r\nimport { tEncounter, tShrineEncounter } from '../../game/Encounter/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface SmithPropsT {\r\n  currentEncounter: tEncounter\r\n}\r\n\r\nexport const Smith = (props: SmithPropsT) => {\r\n  const { completeCurrent } = useGameStateContext()\r\n  return (\r\n    <FlexContainer $direction='column' style={{ paddingTop: 24 }}>\r\n      <HeadingSm\r\n        style={{\r\n          textAlign: 'center',\r\n        }}\r\n      >\r\n        Armor Workshop\r\n      </HeadingSm>\r\n      <Text\r\n        style={{\r\n          marginBottom: 24,\r\n          padding: 8,\r\n        }}\r\n      >\r\n        Here you can upgrade your party's armor, for a cost.\r\n      </Text>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        <Button onClick={() => completeCurrent()}>Leave Workshop</Button>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Choice } from './Choice'\r\nimport { Shop } from './Shop'\r\nimport { tShopEncounter, tShrineEncounter } from '../../game/Encounter/type'\r\nimport { Shrine } from './Shrine'\r\nimport { Smith } from './Smith'\r\n\r\nexport const EncounterActions = () => {\r\n  const { currentEncounter } = useGameStateContext()\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{\r\n        background:\r\n          'linear-gradient(0deg, rgba(0,7,12,0) 0%, rgba(0,7,12,0.68) 10%, rgba(0,7,18,1) 35%)',\r\n        marginRight: '60px',\r\n        padding: '16px 8px',\r\n        width: 300,\r\n        color: 'rgba(255,255,255,0.8)',\r\n      }}\r\n    >\r\n      {currentEncounter ? (\r\n        <>\r\n          {currentEncounter.completed ? (\r\n            <Choice />\r\n          ) : (\r\n            <>\r\n              {currentEncounter.type === 'shop' && (\r\n                <Shop currentEncounter={currentEncounter as tShopEncounter} />\r\n              )}\r\n              {currentEncounter.type === 'shrine' && (\r\n                <Shrine\r\n                  currentEncounter={currentEncounter as tShrineEncounter}\r\n                />\r\n              )}\r\n              {currentEncounter.type === 'smith' && (\r\n                <Smith currentEncounter={currentEncounter} />\r\n              )}\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <Choice />\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StaticIconProps } from '.'\r\n\r\nexport const Boss = (props: StaticIconProps) => {\r\n  const { fill = 'white' } = props\r\n  return (\r\n    <g\r\n      style={{\r\n        transform: 'scale(0.01)',\r\n        zIndex: 2,\r\n        filter: 'drop-shadow(3px 3px 2px rgba(0, 0, 0, 0.7)',\r\n      }}\r\n    >\r\n      <g style={{ transform: 'translate(-253px, -220px)' }}>\r\n        <path\r\n          height='24px'\r\n          width='24px'\r\n          d='M92.406 13.02l-.164 156.353c3.064.507 6.208 1.38 9.39 2.627 36.496 14.306 74.214 22.435 111.864 25.473l43.402-60.416 42.317 58.906c36.808-4.127 72.566-12.502 105.967-24.09 3.754-1.302 7.368-2.18 10.818-2.6l1.523-156.252-75.82 95.552-34.084-95.55-53.724 103.74-53.722-103.74-35.442 95.55-72.32-95.55h-.006zm164.492 156.07l-28.636 39.86 28.634 39.86 28.637-39.86-28.635-39.86zM86.762 187.55c-2.173-.08-3.84.274-5.012.762-2.345.977-3.173 2.19-3.496 4.196-.645 4.01 2.825 14.35 23.03 21.36 41.7 14.468 84.262 23.748 126.778 26.833l-17.75-24.704c-38.773-3.285-77.69-11.775-115.5-26.596-3.197-1.253-5.877-1.77-8.05-1.85zm333.275.19c-2.156.052-5.048.512-8.728 1.79-33.582 11.65-69.487 20.215-106.523 24.646l-19.264 26.818c40.427-2.602 80.433-11.287 119.22-26.96 15.913-6.43 21.46-17.81 21.36-22.362-.052-2.276-.278-2.566-1.753-3.274-.738-.353-2.157-.71-4.313-.658zm-18.117 47.438c-42.5 15.87-86.26 23.856-130.262 25.117l-14.76 20.547-14.878-20.71c-44.985-1.745-89.98-10.23-133.905-24.306-12.78 28.51-18.94 61.14-19.603 93.44 37.52 17.497 62.135 39.817 75.556 64.63C177 417.8 179.282 443.62 174.184 467.98c7.72 5.007 16.126 9.144 24.98 12.432l5.557-47.89 18.563 2.154-5.935 51.156c9.57 2.21 19.443 3.53 29.377 3.982v-54.67h18.69v54.49c9.903-.638 19.705-2.128 29.155-4.484l-5.857-50.474 18.564-2.155 5.436 46.852c8.747-3.422 17.004-7.643 24.506-12.69-5.758-24.413-3.77-49.666 9.01-72.988 13.28-24.234 37.718-46 74.803-64.29-.62-33.526-6.687-66.122-19.113-94.23zm-266.733 47.006c34.602.23 68.407 12.236 101.358 36.867-46.604 33.147-129.794 34.372-108.29-36.755 2.315-.09 4.626-.127 6.933-.11zm242.825 0c2.307-.016 4.617.022 6.93.11 21.506 71.128-61.684 69.903-108.288 36.757 32.95-24.63 66.756-36.637 101.358-36.866zM255.164 332.14c11.77 21.725 19.193 43.452 25.367 65.178h-50.737c4.57-21.726 13.77-43.45 25.37-65.18z'\r\n          fill={fill}\r\n          style={{ filter: 'url(#shadow)' }}\r\n        />\r\n      </g>\r\n    </g>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StaticIconProps } from '.'\r\n\r\nexport const Combat = (props: StaticIconProps) => {\r\n  const { fill = '#fff' } = props\r\n  return (\r\n    <g style={{ transform: 'scale(0.01)', zIndex: 2 }}>\r\n      <g style={{ transform: 'translate(-265px, -240px)' }}>\r\n        <path\r\n          d='M19.75 14.438c59.538 112.29 142.51 202.35 232.28 292.718l3.626 3.75.063-.062c21.827 21.93 44.04 43.923 66.405 66.25-18.856 14.813-38.974 28.2-59.938 40.312l28.532 28.53 68.717-68.717c42.337 27.636 76.286 63.646 104.094 105.81l28.064-28.06c-42.47-27.493-79.74-60.206-106.03-103.876l68.936-68.938-28.53-28.53c-11.115 21.853-24.413 42.015-39.47 60.593-43.852-43.8-86.462-85.842-130.125-125.47-.224-.203-.432-.422-.656-.625C183.624 122.75 108.515 63.91 19.75 14.437zm471.875 0c-83.038 46.28-154.122 100.78-221.97 161.156l22.814 21.562 56.81-56.812 13.22 13.187-56.438 56.44 24.594 23.186c61.802-66.92 117.6-136.92 160.97-218.72zm-329.53 125.906l200.56 200.53c-4.36 4.443-8.84 8.793-13.405 13.032L148.875 153.53l13.22-13.186zm-76.69 113.28l-28.5 28.532 68.907 68.906c-26.29 43.673-63.53 76.414-106 103.907l28.063 28.06c27.807-42.164 61.758-78.174 104.094-105.81l68.718 68.717 28.53-28.53c-20.962-12.113-41.08-25.5-59.937-40.313 17.865-17.83 35.61-35.433 53.157-52.97l-24.843-25.655-55.47 55.467c-4.565-4.238-9.014-8.62-13.374-13.062l55.844-55.844-24.53-25.374c-18.28 17.856-36.602 36.06-55.158 54.594-15.068-18.587-28.38-38.758-39.5-60.625z'\r\n          fill={fill}\r\n          style={{ filter: 'url(#shadow)' }}\r\n          fill-rule='evenodd'\r\n        />\r\n      </g>\r\n    </g>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StaticIconProps } from '.'\r\n\r\nexport const Random = (props: StaticIconProps) => {\r\n  const { fill = '#fff' } = props\r\n  return (\r\n    <g style={{ transform: 'scale(0.01)', zIndex: 2 }}>\r\n      <g style={{ transform: 'translate(-253px, -232px)' }}>\r\n        <path\r\n          d='M255.703 44.764c-6.176 0-12.353 1.384-17.137 4.152l-152.752 88.36c-9.57 5.535-9.57 14.29 0 19.826l152.752 88.359c9.57 5.536 24.703 5.536 34.272 0l152.754-88.36c9.57-5.534 9.57-14.289 0-19.824L272.838 48.916c-4.785-2.77-10.96-4.152-17.135-4.152zM238.695 87.27l22.838 14.273c-6.747 1.007-12.586 2.28-17.515 3.818-4.985 1.504-9.272 3.334-12.864 5.489-7.721 4.633-11.09 9.897-10.105 15.793.93 5.86 6.223 12.247 15.875 19.16.26-3.467 1.457-6.652 3.59-9.553 2.077-2.936 5.159-5.629 9.244-8.08 10.28-6.168 22.259-8.83 35.935-7.98 13.722.821 26.568 4.973 38.537 12.455 13.239 8.274 20.334 17.024 21.284 26.251.894 9.194-4.584 17.346-16.436 24.458-13.064 7.838-28.593 10.533-46.588 8.085-18.004-2.508-36.964-9.986-56.877-22.431-20.41-12.756-32.258-25.276-35.547-37.56-3.299-12.347 2.348-22.895 16.938-31.65 4.624-2.774 9.554-5.192 14.79-7.253 5.238-2.061 10.871-3.82 16.901-5.275zm38.678 53.23c-4.169-.007-7.972 1.02-11.406 3.08-4.534 2.72-6.125 5.906-4.774 9.555 1.341 3.587 5.624 7.64 12.85 12.156 7.226 4.516 13.78 7.237 19.666 8.166 5.875.867 11.081-.059 15.615-2.78 4.58-2.747 6.198-5.915 4.858-9.503-1.351-3.65-5.64-7.732-12.866-12.248-7.226-4.516-13.777-7.207-19.652-8.074a27.826 27.826 0 0 0-4.291-.352zm158.494 33.314c-1.938.074-4.218.858-6.955 2.413l-146.935 84.847c-9.57 5.527-17.14 18.638-17.14 29.69v157.699c0 11.05 7.57 15.419 17.14 9.89l146.937-84.843c9.57-5.527 17.137-18.636 17.137-29.688v-157.7c-2.497-8.048-5.23-12.495-10.184-12.308zm-359.763.48c-6.227 0-10.033 5.325-10.155 11.825v157.697c0 11.052 7.57 24.163 17.14 29.69l146.93 84.848c9.57 5.526 17.141 1.156 17.141-9.895v-157.7c0-11.051-7.57-24.159-17.14-29.687L83.09 176.225c-2.567-1.338-4.911-1.93-6.986-1.93zm40.095 52.226l68.114 40.869v25.287l-46.262-27.758v20.64a43.279 43.279 0 0 1 6.262 2.151c2.135.864 4.341 1.98 6.619 3.346 12.953 7.772 23.037 17.902 30.25 30.39 7.212 12.43 10.818 25.912 10.818 40.448 0 14.416-3.938 23.342-11.814 26.777-7.83 3.464-18.72 1.01-32.67-7.36-6.026-3.615-12.005-7.948-17.936-12.996-5.884-4.96-11.744-10.68-17.58-17.16v-27.076c5.789 7.643 11.27 14.06 16.441 19.248 5.22 5.217 10.13 9.205 14.733 11.967 6.643 3.986 11.862 5.092 15.658 3.318 3.843-1.804 5.766-6.19 5.766-13.16 0-7.03-1.923-13.723-5.766-20.08-3.796-6.328-9.015-11.485-15.658-15.47a56.585 56.585 0 0 0-12.598-5.594c-4.46-1.426-9.252-2.335-14.377-2.729V226.52zm270.047 5.732v85.809L400 309.809v25.414l-13.754 8.252v24.777l-23.502 14.102v-24.778L320 383.223v-30.06l38.611-104.331 27.635-16.58zm-23.502 42.978l-27.248 73.28 27.248-16.348V275.23z'\r\n          fill={fill}\r\n          style={{ filter: 'url(#shadow)' }}\r\n        />\r\n      </g>\r\n    </g>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StaticIconProps } from '.'\r\n\r\nexport const Shrine = (props: StaticIconProps) => {\r\n  const { fill = '#fff' } = props\r\n  return (\r\n    <g style={{ transform: 'scale(0.01)', zIndex: 2 }}>\r\n      <g style={{ transform: 'translate(-253px, -232px)' }}>\r\n        <path\r\n          d='M246.406 21.406c-14.586.572-28.81 2.492-42.594 5.594l9.5 35.438c10.742-2.328 21.784-3.8 33.094-4.313v-36.72zm18.688 0v36.72c11.26.532 22.273 2.01 32.97 4.343l9.53-35.532c-13.753-3.082-27.95-4.97-42.5-5.532zm60.562 10.313l-9.53 35.593c10.674 3.416 20.973 7.725 30.78 12.812l18.47-31.97c-12.604-6.63-25.893-12.154-39.72-16.436zm-139.875.06c-13.773 4.28-27.004 9.798-39.56 16.407l18.343 31.75c9.796-5.057 20.06-9.327 30.718-12.718l-9.5-35.44zM381.5 57.5l-18.47 32c9.345 6.022 18.162 12.792 26.345 20.25l26.156-26.156c-10.5-9.696-21.89-18.423-34.03-26.094zm-251.47.063c-12.167 7.697-23.573 16.455-34.093 26.187l25.876 25.875c8.233-7.492 17.125-14.273 26.53-20.313l-18.312-31.75zM255.626 75.97c-99.678 0-180.656 81.01-180.656 180.686 0 99.65 80.977 180.656 180.655 180.656 99.677 0 180.688-80.98 180.688-180.656 0-45.944-17.214-87.905-45.532-119.812-1.284-1.8-2.583-3.594-3.936-5.344l-.563.438c-32.917-34.474-79.306-55.97-130.655-55.97zm0 18.686c47.59 0 90.35 20.44 119.97 53.03 13.164 18.447 22.208 39.743 25.842 62 10.112 61.704-26.617 129.948-91.062 139.533-41.483 6.182-87.313-18.815-93.03-61.94-1.765-13.308 1.52-27.713 8.686-38.78 7.17-11.067 17.735-18.72 31.44-20.28 7.977-.908 16.773 1.222 23.342 5.593 6.57 4.37 10.854 10.442 11.594 18.437v.03c.094.995.085 2.022 0 3.064-3.712-3.68-8.798-5.938-14.437-5.938-11.344 0-20.564 9.19-20.564 20.53 0 11.344 9.22 20.533 20.563 20.533 3.624 0 7.01-.946 9.967-2.595 7.022-2.2 12.792-6.888 16.625-12.47 5-7.275 7.294-16.084 6.47-24.874-1.3-14.016-9.433-25.333-19.876-32.28-10.442-6.947-23.257-10.05-35.812-8.625-19.64 2.238-35.302 13.744-45 28.72-9.698 14.973-13.907 33.487-11.53 51.405 7.274 54.863 63.562 85.533 114.31 77.97 54.573-8.117 91.783-50.963 104.157-100.75-5.308 84.757-75.54 151.686-161.655 151.686-89.58 0-161.97-72.445-161.97-162 0-89.583 72.39-162 161.97-162zm173.094 2.156L402.56 122.97c7.467 8.202 14.288 17.005 20.313 26.374l32-18.47c-7.685-12.147-16.443-23.556-26.156-34.06zm-345.97.157c-9.647 10.453-18.36 21.797-26 33.874l31.656 18.28c6.015-9.322 12.775-18.114 20.22-26.28L82.75 96.97zm-35.375 50.06c-6.64 12.616-12.183 25.91-16.47 39.75l35.25 9.44c3.43-10.743 7.755-21.076 12.876-30.94l-31.655-18.25zm416.875 0l-32.063 18.5c5.08 9.818 9.376 20.097 12.782 30.782l35.75-9.562c-4.285-13.826-9.838-27.117-16.47-39.72zM26.125 204.813c-3.075 13.723-4.964 27.89-5.53 42.407H57c.53-11.257 2.016-22.28 4.344-32.97l-35.22-9.438zm459.375 0l-35.72 9.563c2.313 10.652 3.787 21.632 4.314 32.844h36.937c-.566-14.518-2.455-28.685-5.53-42.407zM20.594 265.906c.566 14.585 2.466 28.81 5.562 42.594l35.188-9.406C59 288.328 57.52 277.244 57 265.906H20.594zm433.5 0c-.517 11.294-1.986 22.336-4.313 33.063l35.69 9.56c3.1-13.79 4.995-28.03 5.56-42.624h-36.936zm-9.125 51.125c-3.386 10.626-7.648 20.86-12.69 30.626l32 18.47c6.6-12.55 12.103-25.772 16.376-39.532l-35.687-9.563zm-378.814.095l-35.22 9.438c4.277 13.774 9.832 27.003 16.44 39.562l31.562-18.22c-5.082-9.812-9.373-20.1-12.782-30.78zm356.813 46.72c-6.05 9.426-12.87 18.31-20.376 26.56l26.062 26.064c9.76-10.55 18.567-21.983 26.28-34.19l-31.967-18.436zm-334.69.25L56.688 382.31c7.672 12.136 16.43 23.503 26.126 34l25.812-25.812c-7.483-8.21-14.307-17.027-20.344-26.406zm301.126 39.53c-8.177 7.454-17.007 14.198-26.344 20.22l18.407 31.905c12.124-7.66 23.476-16.413 33.967-26.094l-26.03-26.03zm-267.594.094l-25.78 25.78c10.514 9.72 21.903 18.5 34.062 26.188l18.25-31.625c-9.412-6.044-18.294-12.846-26.53-20.344zm225.125 29.53c-9.812 5.092-20.13 9.363-30.812 12.78l9.5 35.47c13.816-4.278 27.093-9.815 39.688-16.438l-18.375-31.812zm-182.406.188l-18.25 31.625c12.54 6.595 25.75 12.103 39.5 16.375l9.47-35.313c-10.655-3.392-20.926-7.63-30.72-12.688zm133.564 17.437c-10.706 2.337-21.728 3.81-33 4.344v36.592c14.54-.562 28.724-2.453 42.47-5.53l-9.47-35.407zm-84.78.063l-9.47 35.28c13.773 3.1 27.988 5.023 42.562 5.594V455.25c-11.31-.512-22.353-1.985-33.094-4.313z'\r\n          fill={fill}\r\n          style={{ filter: 'url(#shadow)' }}\r\n        />\r\n      </g>\r\n    </g>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StaticIconProps } from '.'\r\n\r\nexport const Shop = (props: StaticIconProps) => {\r\n  const { fill = 'white' } = props\r\n  return (\r\n    <g style={{ transform: 'scale(0.01)', zIndex: 2 }}>\r\n      <g style={{ transform: 'translate(-253px, -253px)' }}>\r\n        <path\r\n          fill={fill}\r\n          style={{ filter: 'url(#shadow)' }}\r\n          d='M136 25c-16.457 0-31.287 3.45-41.23 8.422C84.826 38.394 81 44.027 81 48c0 3.973 3.826 9.606 13.77 14.578C104.713 67.55 119.543 71 136 71c16.457 0 31.287-3.45 41.23-8.422C187.174 57.606 191 51.973 191 48c0-3.973-3.826-9.606-13.77-14.578C167.287 28.45 152.457 25 136 25zm160 32c-16.457 0-31.287 3.45-41.23 8.422C244.826 70.394 241 76.027 241 80c0 3.973 3.826 9.606 13.77 14.578C264.713 99.55 279.543 103 296 103c4.55 0 8.967-.27 13.2-.758 4.32-5.534 10.53-10.092 17.52-13.588 7.064-3.53 15.262-6.227 24.24-7.98.025-.23.04-.455.04-.674 0-3.973-3.826-9.606-13.77-14.578C327.287 60.45 312.457 57 296 57zM81 75.445V80c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87C189.716 85.574 191 82.515 191 80v-4.555c-1.832 1.158-3.74 2.243-5.72 3.233C172.06 85.288 154.89 89 136 89s-36.06-3.712-49.28-10.322c-1.98-.99-3.888-2.075-5.72-3.233zM376 96.33c-16.457 0-31.287 3.452-41.23 8.424-9.944 4.972-13.77 10.603-13.77 14.576 0 3.973 3.826 9.606 13.77 14.578 9.943 4.972 24.773 8.422 41.23 8.422 16.457 0 31.287-3.45 41.23-8.422 9.944-4.972 13.77-10.605 13.77-14.578 0-3.973-3.826-9.604-13.77-14.576-9.943-4.972-24.773-8.424-41.23-8.424zm-135 11.115v2.313c2.9 1.073 5.67 2.26 8.28 3.564 9.037 4.52 16.8 10.794 20.81 18.69 10.174 2.46 21.72 3.366 32.91 2.718v-13.917c-2.305.116-4.636.187-7 .187-18.89 0-36.06-3.712-49.28-10.322-1.98-.99-3.888-2.075-5.72-3.233zm-160 .024V112c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 6.83 1.972 14.433 3.186 22.216 3.654 1.988-5.227 5.6-9.806 10.19-13.712-12.785.277-25.663-1.26-37.4-4.65-7.796-2.25-14.69-5.2-20.503-8.89zM200 121c-16.457 0-31.287 3.45-41.23 8.422C148.826 134.394 145 140.027 145 144c0 3.973 3.826 9.606 13.77 14.578C168.713 163.55 183.543 167 200 167c16.457 0 31.287-3.45 41.23-8.422C251.174 153.606 255 147.973 255 144c0-3.973-3.826-9.606-13.77-14.578C231.287 124.45 216.457 121 200 121zM81 139.47V144c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 6.328 1.826 13.32 2.993 20.503 3.53V152.75c-8.772-.594-17.406-2.057-25.496-4.393-7.797-2.25-14.69-5.203-20.504-8.89zm240 7.305v4.555c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.285 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.585 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.555c-1.832 1.158-3.74 2.243-5.72 3.233-13.22 6.61-30.39 10.322-49.28 10.322s-36.06-3.712-49.28-10.322c-1.98-.99-3.888-2.075-5.72-3.233zm-48 4.246v13.65c9.435 1.962 19.865 2.647 30 2.06v-13.878c-10.064.53-20.263-.08-30-1.83zm-128 20.425V176c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.555c-1.832 1.158-3.74 2.243-5.72 3.233C236.06 181.288 218.89 185 200 185s-36.06-3.712-49.28-10.322c-1.98-.99-3.888-2.075-5.72-3.233zm-64 .024V176c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 6.328 1.826 13.32 2.993 20.503 3.53V184.75c-8.772-.594-17.406-2.057-25.496-4.393-7.797-2.25-14.69-5.203-20.504-8.89zm240 7.33v4.53c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.285 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.585 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.688-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.202-20.504-8.89zm-48 4.22v13.65c9.435 1.962 19.865 2.647 30 2.06v-13.878c-10.064.53-20.263-.08-30-1.83zM81 203.47V208c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 6.328 1.826 13.32 2.993 20.503 3.53V216.75c-8.772-.594-17.406-2.057-25.496-4.393-7.797-2.25-14.69-5.203-20.504-8.89zm64 0V208c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm176 7.33v4.53c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.285 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.585 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.688-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.202-20.504-8.89zm-48 4.22v13.65c9.435 1.962 19.865 2.647 30 2.06v-13.878c-10.064.53-20.263-.08-30-1.83zm-128 20.45v2.288c2.9 1.073 5.67 2.26 8.28 3.564 9.038 4.52 16.802 10.795 20.812 18.692 17.338 4.196 38.678 3.883 55.412-.948 8.954-2.585 15.845-6.245 20.03-9.87 4.183-3.622 5.466-6.68 5.466-9.196v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm176 7.33v4.53c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.285 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.585 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.688-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.202-20.504-8.89zm-48 4.22v13.65c9.435 1.962 19.865 2.647 30 2.06v-13.878c-10.064.53-20.263-.08-30-1.83zM104 249c-16.457 0-31.287 3.45-41.23 8.422C52.826 262.394 49 268.027 49 272c0 3.973 3.826 9.606 13.77 14.578C72.713 291.55 87.543 295 104 295c16.457 0 31.287-3.45 41.23-8.422C155.174 281.606 159 275.973 159 272c0-3.973-3.826-9.606-13.77-14.578C135.287 252.45 120.457 249 104 249zm151 18.47c-5.813 3.687-12.707 6.64-20.504 8.89-17.97 5.187-38.608 6.05-57.496 2.642v13.664c16.775 3.494 36.694 2.964 52.504-1.6 8.954-2.585 15.845-6.245 20.03-9.87 4.183-3.622 5.466-6.68 5.466-9.196v-4.53zm66 7.33v4.53c0 2.515 1.283 5.574 5.467 9.197 4.045 3.503 10.64 7.03 19.162 9.598 3.74-3.428 8.228-6.37 13.09-8.803 1.152-.575 2.344-1.12 3.553-1.652-7.14-.744-14.137-2.066-20.77-3.98-7.796-2.25-14.69-5.202-20.503-8.89zm110 0c-2.84 1.8-5.938 3.422-9.27 4.876 3.1.31 6.13.734 9.082 1.252.12-.553.188-1.09.188-1.598v-4.53zm-158 4.22v13.62c6.997 1.482 14.783 2.36 23 2.36 2.374 0 4.705-.087 7-.227v-13.92c-10.064.53-20.263-.082-30-1.832zM408 297c-16.457 0-31.287 3.45-41.23 8.422C356.826 310.394 353 316.027 353 320c0 3.973 3.826 9.606 13.77 14.578C376.713 339.55 391.543 343 408 343c16.457 0 31.287-3.45 41.23-8.422C459.174 329.606 463 323.973 463 320c0-3.973-3.826-9.606-13.77-14.578C439.287 300.45 424.457 297 408 297zm-359 2.445V304c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.555c-1.832 1.158-3.74 2.243-5.72 3.233C140.06 309.288 122.89 313 104 313s-36.06-3.712-49.28-10.322c-1.98-.99-3.888-2.075-5.72-3.233zm206 .024c-5.813 3.687-12.707 6.64-20.504 8.89-17.97 5.187-38.608 6.05-57.496 2.642v13.664c16.775 3.494 36.694 2.964 52.504-1.6 8.954-2.585 15.845-6.245 20.03-9.87 4.183-3.622 5.466-6.68 5.466-9.196v-4.53zm66 7.33v4.53c0 3.973 3.826 9.606 13.77 14.578.074.037.155.073.23.11V313.56c-5.168-1.89-9.862-4.135-14-6.76zM49 331.47V336c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zM177 343v13.648c4.885 1.032 10.16 1.767 15.697 2.114 1.985-5.246 5.602-9.84 10.207-13.756-8.726.19-17.487-.487-25.904-2.006zM264 345c-16.457 0-31.287 3.45-41.23 8.422C212.826 358.394 209 364.027 209 368c0 3.973 3.826 9.606 13.77 14.578C232.713 387.55 247.543 391 264 391c16.457 0 31.287-3.45 41.23-8.422C315.174 377.606 319 371.973 319 368c0-3.973-3.826-9.606-13.77-14.578C295.287 348.45 280.457 345 264 345zm89 2.445V352c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.555c-1.832 1.158-3.74 2.243-5.72 3.233C444.06 357.288 426.89 361 408 361s-36.06-3.712-49.28-10.322c-1.98-.99-3.888-2.075-5.72-3.233zM49 363.47V368c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm304 16V384c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm-144 15.975V400c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.555c-1.832 1.158-3.74 2.243-5.72 3.233C300.06 405.288 282.89 409 264 409s-36.06-3.712-49.28-10.322c-1.98-.99-3.888-2.075-5.72-3.233zm-160 .024V400c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm304 16V416c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm-304 16V432c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm160 0V432c0 3.973 3.826 9.606 13.77 14.578C232.713 451.55 247.543 455 264 455c16.457 0 31.287-3.45 41.23-8.422C315.174 441.606 319 435.973 319 432v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm144 16V448c0 3.973 3.826 9.606 13.77 14.578C376.713 467.55 391.543 471 408 471c16.457 0 31.287-3.45 41.23-8.422C459.174 457.606 463 451.973 463 448v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm-304 16V464c0 3.973 3.826 9.606 13.77 14.578C72.713 483.55 87.543 487 104 487c16.457 0 31.287-3.45 41.23-8.422C155.174 473.606 159 467.973 159 464v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89z'\r\n        />\r\n      </g>\r\n    </g>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StaticIconProps } from '.'\r\n\r\nexport const Start = (props: StaticIconProps) => {\r\n  const { fill = 'white' } = props\r\n  return (\r\n    <g\r\n      style={{\r\n        transform: 'scale(0.01)',\r\n        zIndex: 2,\r\n        filter: 'drop-shadow(3px 3px 2px rgba(0, 0, 0, 0.7)',\r\n      }}\r\n    >\r\n      <g style={{ transform: 'translate(-277px, -281px)' }}>\r\n        <path\r\n          d='M281.53 23.438c48.44 71.504-18.447 145.556-63.655 58.968 27.295 144.502-65.22 166.347-74.75 74.75-73.554 65.057-59.358 147.17-20.438 210.75l45.844-26.344c-12.004-18.318-17.995-42.502-15.31-66.218 25.688 39.43 106.855 10.088 97.124-59.938 10.695 32.074 37.802 28.97 65.78-20.5C278.07 297.622 337.95 364.248 378.032 333.5c1.47 11.97-2.95 25.657-10.592 38.063l46.968 12.53c55.122-47.503 79.71-135.97-3.812-175.53 39.08 60.478-13.1 105.064-60.72 41.468-38.546-72.133 82.366-113.394-68.343-226.593zM173.876 48.124c-64.128 32.333-14.642 60.51-14.03 92.344 44.122-38.935-3.722-53.508 14.03-92.345zm74.47 269.094L75 416.874c2.71 18.39 8.98 34.417 18.813 48.5l92-44.063-78.688 59.875c3.39 3.38 7.033 6.62 10.938 9.75L192.78 448c-.023-.738-.06-1.475-.06-2.22 0-37.22 30.495-67.56 67.81-67.56 10.53 0 20.527 2.413 29.44 6.717-2.323-13.414-7.28-27.104-14.72-39.28l-94.938 40.124 82.47-56.467c-4.34-4.55-9.166-8.64-14.438-12.094zm58.874 57.624c1.61 7.148 2.6 14.315 2.967 21.312l.22 3.938c11.13 12.042 17.937 28.09 17.937 45.687 0 7.795-1.356 15.276-3.813 22.25l91.345 24.376c4.642-6.327 8.588-12.768 11.844-19.375l-63.158-24.686 70.125 6.844c.866-2.948 1.61-5.923 2.22-8.938l-97.063-34.22L439 427.5c.156-5.772-.103-11.67-.813-17.72L307.22 374.845zm-46.69 22.062c-27.26 0-49.124 21.8-49.124 48.875 0 27.078 21.864 48.876 49.125 48.876 27.263 0 49.126-21.798 49.126-48.875 0-27.075-21.863-48.874-49.125-48.874zm-4.936 11.78c43.778.002 58.435 71.595 0 71.595 26.622-23.113 29.81-46.888 0-71.592zm.187 9.845c-21.616 17.916-19.304 35.177 0 51.94-42.375 0-31.745-51.94 0-51.94z'\r\n          fill={fill}\r\n          style={{ filter: 'url(#shadow)' }}\r\n        />\r\n      </g>\r\n    </g>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StaticIconProps } from '.'\r\n\r\nexport const Chest = (props: StaticIconProps) => {\r\n  const { fill = '#fff' } = props\r\n  return (\r\n    <g style={{ transform: 'scale(0.01)', zIndex: 2 }}>\r\n      <g style={{ transform: 'translate(-253px, -232px)' }}>\r\n        <path\r\n          d='M146.857 20.842c-12.535-.036-24.268 2.86-37.285 9.424h.004C61.356 54.6 19.966 120.734 17.982 175.91l41.848 14.236c4.33-61.89 47.057-128.37 101.527-155.86h.002c4.423-2.23 8.822-4.162 13.185-5.8l-22.26-7.45c-1.83-.123-3.637-.19-5.428-.194zm59.34 20.19c-10.478-.09-22.832 3.093-36.424 9.943l.004-.004c-48.23 24.34-89.625 90.513-91.548 145.436l156.485 53.24c3.865-62.22 46.797-129.372 101.613-157.035h.002l.002-.003c4.303-2.168 8.584-4.056 12.832-5.666l-134.54-45.036c-2.652-.542-5.458-.847-8.427-.873zm174.97 58.323c-10.476-.09-22.83 3.092-36.42 9.94l-.005.002c-48.577 24.518-90.225 91.473-91.586 146.623l46.205 15.72c3.914-62.188 46.825-129.274 101.607-156.92 4.522-2.283 9.04-4.258 13.53-5.91l-26.544-8.884c-2.164-.35-4.423-.55-6.785-.57zm63.554 22.014c-10.267.093-22.094 3.353-35.333 10.034-47.158 23.8-87.777 87.587-91.362 141.75l174.55-73.726c-.404-39.01-10.754-61.304-24.415-71.082-2.347-1.68-4.867-3.057-7.55-4.137l-.01.034-4.735-1.584c-3.48-.887-7.195-1.327-11.144-1.29zM17.9 195.622l-.035 187.484L59.46 397.58V209.764L17.9 195.624zM78.15 216.12v187.962l156.282 54.37V269.288l-29.053-9.886v119.43l-101.054-34.082V225.025L78.15 216.12zm414.22 3.683L318.433 293.27v189.236l173.935-73.504v-189.2zm-369.354 11.582v99.947l63.675 21.477v-99.763l-63.674-21.662zm31.306 28.797c9.705 0 17.573 7.867 17.573 17.572 0 6.34-3.37 11.88-8.407 14.97v28.53h-18.69v-28.746c-4.838-3.13-8.048-8.562-8.048-14.754 0-9.705 7.867-17.572 17.572-17.572zm98.797 15.464v189.307l46.626 16.22V291.51l-46.627-15.864z'\r\n          fill={fill}\r\n          style={{ filter: 'url(#shadow)' }}\r\n        />\r\n      </g>\r\n    </g>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StaticIconProps } from '.'\r\n\r\nexport const Elite = (props: StaticIconProps) => {\r\n  const { fill = '#fff' } = props\r\n  return (\r\n    <g style={{ transform: 'scale(0.01)', zIndex: 2 }}>\r\n      <g style={{ transform: 'translate(-253px, -232px)' }}>\r\n        <path\r\n          d='M254.566 20.055c-59.624 0-99.147 26.426-125.21 65.767-25.084 37.862-36.733 88.14-37.583 136.746 35.068 17.25 55.994 35.297 65.088 54.416 8.03 16.882 4.974 34.41-5.042 47.96 22.02 19.97 59.516 32.352 98.135 32.972 38.86.624 77.95-10.4 102.942-33.174-5.034-5.972-8.774-12.36-10.582-19.37-2.54-9.836-.836-20.485 4.687-30.134 10.514-18.37 33.286-34.804 70.354-52.71-.878-46.03-12.275-96.24-37.225-134.714-25.985-40.068-65.52-67.76-125.564-67.76zm-75.748 125.982c46.19 10.87 94.98 10.703 145.752.205-25.867 37.59-123.918 37.62-145.752-.205zm-20.312 13.53c7.698 30.39 30.63 47.76 73.336 45.984l-1.112 33.59c-39.39 20.126-72.635 1.99-103.71-19.048h-.002c-4.848-30.567-.204-54.706 31.488-60.526zm186.69 0c31.69 5.82 36.333 29.958 31.486 60.525h-.002c-31.076 21.04-64.32 39.174-103.71 19.047l-1.11-33.59c42.707 1.776 65.637-15.594 73.335-45.984zM250.97 252.19c12.102 21.818 21.704 43.634 26.47 65.45-13.016 9.698-36.32 11.107-52.938 0 6.443-21.816 14.19-43.632 26.47-65.45zM100.405 353.108c-50.152 13.628-82.55 33.813-82.55 56.204 0 41.018 106.523 74.352 237.697 74.352s237.698-33.334 237.698-74.35c0-22.312-32.12-42.58-81.965-56.205 17.23 8.88 27.518 19.25 27.518 30.444 0 32.13-82.31 58.546-183.247 58.546-100.937 0-182.662-26.418-182.662-58.545 0-11.253 10.112-21.534 27.518-30.443h-.004zm62.54 2.637l-14.903 23.41c6.624 5.312 14.328 9.978 22.855 13.955l10.898-28.796c-6.58-2.48-12.888-5.336-18.848-8.57zm177.605.53c-5.772 3.14-11.804 5.894-18.038 8.28l10.703 28.477c8.005-3.6 15.612-7.817 22.666-12.676l-15.33-24.08zm-140.905 13.673L188.3 399.924c9.524 3.093 19.698 5.462 30.253 7.064l3.87-32.513c-7.754-1.09-15.377-2.6-22.778-4.528zm105.04.287c-7.468 1.95-15.113 3.434-22.85 4.48l3.823 32.126c10.274-1.605 20.384-3.967 30.112-7.11l-11.086-29.496zm-63.654 6.045l-3.893 32.712c9.87.637 19.92.623 29.947-.07l-3.873-32.535c-4.52.206-9.045.287-13.558.215-2.878-.047-5.752-.167-8.62-.323z'\r\n          fill={fill}\r\n          style={{ filter: 'url(#shadow)' }}\r\n        />\r\n      </g>\r\n    </g>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StaticIconProps } from '.'\r\n\r\nexport const Smith = (props: StaticIconProps) => {\r\n  const { fill = '#fff' } = props\r\n  return (\r\n    <g style={{ transform: 'scale(0.01)', zIndex: 2 }}>\r\n      <g style={{ transform: 'translate(-283px, -297px)' }}>\r\n        <path\r\n          d='M413.375 69.906L336.937 191.47l-8.25-32.69-30.218 88.97 62.655-29.375.22 29.438 127.03-50.938-70.813-1.97 47.782-68.686-73.47 39.25 21.5-95.564zM210.22 102.094l-32 14.406 16.874 55.656-177.813 80.03 12.564 27.876L207.656 200l30.406 49.47 49.313-22.19-21.344-70.343-55.81-54.843zM197.593 266.78v20.345h-88.906c15.994 38.807 51.225 65.43 88.906 74.28v32.97h58.562c-12.118 30.528-33.505 55.684-58.47 77.594H172.22v18.686H456.56V471.97h-27.406c-28.734-21.895-50.055-47.018-61.625-77.595h63.658v-29.188c19.748-6.995 39.5-19.51 59.25-36.687-19.812-17.523-39.23-27.25-59.25-31.938v-29.78H197.594z'\r\n          fill={fill}\r\n          style={{ filter: 'url(#shadow)' }}\r\n        />\r\n      </g>\r\n    </g>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Color from 'color'\r\nimport { Hexagon } from 'react-hexgrid'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { HexT } from '../../grid/types'\r\nimport { getDepth, isAdjacent, isValueEqual, MIN_HEX } from '../../grid/util'\r\nimport { Boss } from '../../icons/static/Boss'\r\nimport { Combat } from '../../icons/static/Combat'\r\nimport { Random } from '../../icons/static/Random'\r\nimport { Shrine } from '../../icons/static/Shine'\r\nimport { Shop } from '../../icons/static/Shop'\r\nimport { Start } from '../../icons/static/Start'\r\nimport { Theme } from '../../theme'\r\nimport { Chest } from '../../icons/static/Chest'\r\nimport { tCombatEncounter, tEncounter } from '../../game/Encounter/type'\r\nimport { Elite } from '../../icons/static/Elite'\r\nimport { FLOOR_SIZE } from '../../game/Encounter/floors'\r\nimport { Smith } from '../../icons/static/Smith'\r\n\r\nexport interface HexPropsT {\r\n  hex: HexT\r\n  size: number\r\n  onMouseEnter?: () => void\r\n  onMouseLeave?: () => void\r\n}\r\nexport const Hex = (props: HexPropsT) => {\r\n  const { hex, size, onMouseEnter, onMouseLeave } = props\r\n  const { currentHex, chooseNext, encounters } = useGameStateContext()\r\n  const [isHovering, setIsHovering] = useState(false)\r\n  const encounter = encounters[hex.q][hex.r][hex.s]\r\n  const active = currentHex ? isValueEqual(hex, currentHex) : false\r\n  const adjacent = currentHex\r\n    ? isAdjacent(currentHex)(hex)\r\n    : isValueEqual(MIN_HEX(FLOOR_SIZE), hex)\r\n  const depth = getDepth(hex, size)\r\n  const iconColor = getHexIconColor(encounter, active, adjacent, isHovering)\r\n  const fill = getHexFill(encounter, active, adjacent)\r\n  return (\r\n    <Hexagon\r\n      q={hex.q}\r\n      r={hex.r}\r\n      s={hex.s}\r\n      cellStyle={{\r\n        fontSize: '7px',\r\n        stroke: 'black',\r\n        fill,\r\n        cursor: adjacent ? 'pointer' : 'default',\r\n      }}\r\n      onClick={(c: any, h: any) => {\r\n        if (adjacent && encounter && !encounter.blocking) {\r\n          console.log(encounter)\r\n          chooseNext(hex)\r\n        }\r\n      }}\r\n      onMouseEnter={() => {\r\n        if (adjacent) setIsHovering(true)\r\n        onMouseEnter && onMouseEnter()\r\n      }}\r\n      onMouseLeave={() => {\r\n        setIsHovering(false)\r\n        onMouseLeave && onMouseLeave()\r\n      }}\r\n    >\r\n      <g style={{ cursor: adjacent ? 'pointer' : 'default' }}>\r\n        {getHexIcon(encounter, depth, size, active, adjacent, iconColor)}\r\n      </g>\r\n    </Hexagon>\r\n  )\r\n}\r\n\r\nexport const getHexFill = (\r\n  encounter: tEncounter | undefined,\r\n  active: boolean,\r\n  adjacent: boolean,\r\n) => {\r\n  if (encounter && encounter.blocking) {\r\n    return 'black'\r\n  }\r\n  if (active) {\r\n    return '#b0891c'\r\n  }\r\n  if (!encounter || encounter.completed) {\r\n    return 'green'\r\n  }\r\n\r\n  if (adjacent) {\r\n    return Color(Theme.physicalColor).darken(0.5).rgb().toString()\r\n  }\r\n  return Theme.otherGrey\r\n}\r\n\r\nexport const getHexIconColor = (\r\n  encounter: tEncounter | undefined,\r\n  active: boolean,\r\n  adjacent: boolean,\r\n  isHovering: boolean,\r\n): string => {\r\n  if (!encounter || encounter.completed) {\r\n    return 'white'\r\n  }\r\n  if (encounter.type === 'boss') {\r\n    return Theme.healthRedColor\r\n  }\r\n  if (active || isHovering) {\r\n    return 'white'\r\n  }\r\n  if (adjacent || encounter.seen) {\r\n    return 'rgba(255,255,255,0.6)'\r\n  }\r\n  return 'rgba(255,255,255,0.2)'\r\n}\r\n\r\nexport const getHexIcon = (\r\n  encounter: tEncounter | undefined,\r\n  depth: number,\r\n  size: number,\r\n  active: boolean,\r\n  adjacent: boolean,\r\n  fill: string,\r\n): JSX.Element | null => {\r\n  if (!encounter) return <Start fill={fill} />\r\n  if (encounter.blocking) return null\r\n  if (depth === size - 1) return <Boss fill={fill} />\r\n  if (adjacent || active || encounter.completed || encounter.seen) {\r\n    if (encounter.type === 'shop') {\r\n      return <Shop fill={fill} />\r\n    }\r\n    if (encounter.type === 'reward') {\r\n      return <Chest fill={fill} />\r\n    }\r\n    if (encounter.type === 'shrine') {\r\n      return <Shrine fill={fill} />\r\n    }\r\n    if (encounter.type === 'smith') {\r\n      return <Smith fill={fill} />\r\n    }\r\n    if (encounter.type === 'combat') {\r\n      if ((encounter as tCombatEncounter).isElite) {\r\n        return <Elite fill={fill} />\r\n      }\r\n      return <Combat fill={fill} />\r\n    }\r\n  }\r\n  return <Random fill={fill} />\r\n}\r\n","import React, { useMemo, useState } from 'react'\r\nimport Color from 'color'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Theme } from '../../theme'\r\nimport { HexGrid, Layout, GridGenerator } from 'react-hexgrid'\r\nimport { HexT } from '../../grid/types'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Hex } from './hex'\r\nimport { Text } from '../../elements/typography'\r\nimport { HexBadge } from '../../elements/shapes'\r\nimport { Icon } from '../Icon'\r\nimport Unknown from '../../icons/svg/delapouite/perspective-dice-six.svg'\r\nimport Shop from '../../icons/svg/delapouite/coins.svg'\r\nimport Boss from '../../icons/svg/lorc/crowned-skull.svg'\r\nimport Start from '../../icons/svg/lorc/anvil-impact.svg'\r\nimport Combat from '../../icons/svg/lorc/crossed-swords.svg'\r\nimport Elite from '../../icons/svg/lorc/death-zone.svg'\r\nimport Chest from '../../icons/svg/lorc/locked-chest.svg'\r\nimport Shrine from '../../icons/svg/lorc/divided-spiral.svg'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Button } from '../../elements/button'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport { getDepth } from '../../grid/util'\r\nimport { FLOOR_SIZE } from '../../game/Encounter/floors'\r\n\r\nexport const Grid = () => {\r\n  const { currentFloor } = useGameStateContext()\r\n  const hexagons = useMemo(() => GridGenerator.triangle(currentFloor.size), [])\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n  const [activeHex, setActiveHex] = useState<HexT | undefined>()\r\n  const style = useSpring({\r\n    minHeight: isExpanded ? 440 : 0,\r\n    maxHeight: isExpanded ? 440 : 0,\r\n  })\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      style={{\r\n        color: 'white',\r\n        fontSize: '3px',\r\n        justifyContent: 'center',\r\n      }}\r\n    >\r\n      <FlexContainer\r\n        $full\r\n        style={{ alignItems: 'center', justifyContent: 'center' }}\r\n      >\r\n        <div className='shadow' style={{ width: 594, height: 510 }}>\r\n          <HexGrid>\r\n            <defs>\r\n              <filter id='shadow' width='200%' height='200%'>\r\n                <feDropShadow dx={30} dy={30} stdDeviation={50} />\r\n              </filter>\r\n            </defs>\r\n            <Layout\r\n              size={{ x: 4.5, y: 4.5 }}\r\n              origin={{ x: -57, y: -40 }}\r\n              spacing={1.02}\r\n              flat={false}\r\n            >\r\n              {hexagons\r\n                .filter(\r\n                  (hex: HexT) =>\r\n                    hex.r !== 0 ||\r\n                    hex.s === 0 ||\r\n                    hex.s === currentFloor.size * -1,\r\n                )\r\n                .map((hex: HexT, i: number) => (\r\n                  <Hex\r\n                    key={i}\r\n                    hex={hex}\r\n                    size={currentFloor.size}\r\n                    onMouseEnter={() => setActiveHex(hex)}\r\n                    onMouseLeave={() => setActiveHex(undefined)}\r\n                  />\r\n                ))}\r\n            </Layout>\r\n          </HexGrid>\r\n        </div>\r\n      </FlexContainer>\r\n      <div>\r\n        <BoxContainer\r\n          style={{\r\n            fontSize: 12,\r\n            maxWidth: 270,\r\n            background: Theme.darkBgColor,\r\n            margin: '16px 16px 16px 36px',\r\n            borderWidth: 2,\r\n          }}\r\n          substyle={{\r\n            background: Theme.mediumBgColor,\r\n            padding: 0,\r\n            textShadow: '1px 1px 8px black',\r\n            boxShadow: 'inset 0px 0px 5px black',\r\n          }}\r\n        >\r\n          <FlexContainer\r\n            style={{\r\n              fontFamily: Theme.titleFont,\r\n              fontWeight: 'normal',\r\n              marginTop: 0,\r\n              paddingLeft: 8,\r\n              background: Theme.otherGrey2,\r\n              height: 26,\r\n              alignItems: 'center',\r\n              boxShadow: '0px 4px 5px black',\r\n              margin: '-1px -1px 0 -1px',\r\n            }}\r\n          >\r\n            <FullContainer>Floor Map</FullContainer>\r\n            <Button\r\n              onClick={() => setIsExpanded((v) => !v)}\r\n              style={{ padding: '2px 8px', marginRight: 4 }}\r\n            >\r\n              {isExpanded ? '_' : '+'}\r\n            </Button>\r\n          </FlexContainer>\r\n          <animated.div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              overflow: 'hidden',\r\n              ...style,\r\n            }}\r\n          >\r\n            <div style={{ padding: 8 }}>\r\n              <Text style={{ paddingTop: 8 }}>\r\n                {activeHex\r\n                  ? `${activeHex.q}, ${activeHex.r}, ${activeHex.s} (${getDepth(\r\n                      activeHex,\r\n                      FLOOR_SIZE,\r\n                    )})`\r\n                  : 'hover to see location'}\r\n              </Text>\r\n              <Text style={{ marginBottom: 16, display: 'block' }}>\r\n                This is the floor map. Here you can see the cleared encounters\r\n                (green) and the encounters you can travel to (blue). Click a\r\n                blue hex to advance.\r\n              </Text>\r\n              <BoxContainer substyle={{ background: Theme.darkBgColor }}>\r\n                <FlexContainer style={{ alignItems: 'center', height: 32 }}>\r\n                  <HexBadge\r\n                    color='green'\r\n                    size={28}\r\n                    stroke={3}\r\n                    style={{ marginRight: 8 }}\r\n                  />\r\n                  Cleared Encounters\r\n                </FlexContainer>\r\n                <FlexContainer style={{ alignItems: 'center', height: 32 }}>\r\n                  <HexBadge\r\n                    color={Color(Theme.physicalColor)\r\n                      .darken(0.5)\r\n                      .rgb()\r\n                      .toString()}\r\n                    size={28}\r\n                    stroke={3}\r\n                    style={{ marginRight: 8 }}\r\n                  />\r\n                  Adjacent Encounters\r\n                </FlexContainer>\r\n                <FlexContainer style={{ alignItems: 'center', height: 32 }}>\r\n                  <Icon src={Start} size={24} style={{ marginRight: 12 }} />\r\n                  Armor Workshop\r\n                </FlexContainer>\r\n                <FlexContainer style={{ alignItems: 'center', height: 32 }}>\r\n                  <Icon\r\n                    src={Shop}\r\n                    size={24}\r\n                    style={{ marginRight: 12 }}\r\n                    shadow\r\n                  />\r\n                  Shop\r\n                </FlexContainer>\r\n                <FlexContainer style={{ alignItems: 'center', height: 32 }}>\r\n                  <Icon\r\n                    src={Shrine}\r\n                    size={24}\r\n                    style={{ marginRight: 12 }}\r\n                    shadow\r\n                  />\r\n                  Shrine\r\n                </FlexContainer>\r\n                <FlexContainer style={{ alignItems: 'center', height: 32 }}>\r\n                  <Icon\r\n                    src={Chest}\r\n                    size={24}\r\n                    style={{ marginRight: 12 }}\r\n                    shadow\r\n                  />\r\n                  Chest\r\n                </FlexContainer>\r\n                <FlexContainer style={{ alignItems: 'center', height: 32 }}>\r\n                  <Icon\r\n                    src={Unknown}\r\n                    size={24}\r\n                    style={{ marginRight: 12 }}\r\n                    shadow\r\n                  />\r\n                  Random Encounter\r\n                </FlexContainer>\r\n\r\n                <FlexContainer style={{ alignItems: 'center', height: 32 }}>\r\n                  <Icon\r\n                    src={Combat}\r\n                    size={24}\r\n                    style={{ marginRight: 12 }}\r\n                    shadow\r\n                  />\r\n                  Combat\r\n                </FlexContainer>\r\n                <FlexContainer style={{ alignItems: 'center', height: 32 }}>\r\n                  <Icon\r\n                    src={Elite}\r\n                    size={24}\r\n                    style={{ marginRight: 12 }}\r\n                    shadow\r\n                  />\r\n                  Elite Combat\r\n                </FlexContainer>\r\n                <FlexContainer style={{ alignItems: 'center', height: 32 }}>\r\n                  <Icon\r\n                    src={Boss}\r\n                    size={24}\r\n                    style={{ marginRight: 12 }}\r\n                    shadow\r\n                  />\r\n                  Boss\r\n                </FlexContainer>\r\n                <FullContainer />\r\n              </BoxContainer>\r\n            </div>\r\n          </animated.div>\r\n        </BoxContainer>\r\n      </div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { usePartyContext } from '../contexts/PartyContext'\r\nimport { FlexContainer, FullContainer } from '../elements/flex'\r\nimport { Button } from '../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { AppHeader } from '../components/AppHeader'\r\nimport { PartyResources } from '../components/PartyResources'\r\nimport { useUIContext } from '../contexts/UIContext'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport { getSkillResult } from '../game/Skill/util'\r\nimport { commitSkillResults } from '../game/Skill/committer'\r\nimport { NonCombatEncounter } from '../components/NonCombatEncounter'\r\nimport { EncounterActions } from '../components/EncounterActions'\r\nimport { HeadingSm } from '../elements/typography'\r\nimport { Grid } from '../components/Grid'\r\n\r\nexport const Party = () => {\r\n  const { party, rawParty, updateParty } = usePartyContext()\r\n  const { currentFloor, currentEncounter } = useGameStateContext()\r\n  const history = useHistory()\r\n  const {\r\n    setPlayerCanEquipItem,\r\n    setOnCharacterConsumableClick,\r\n  } = useUIContext()\r\n\r\n  useEffect(() => {\r\n    setPlayerCanEquipItem(true)\r\n    setOnCharacterConsumableClick((character, consumableIndex) => {\r\n      if (!character) return\r\n      const consumable = character.consumables[consumableIndex]\r\n      const targets =\r\n        consumable.skill.targetType === 'self'\r\n          ? [character]\r\n          : consumable.skill.targetType === 'party'\r\n          ? party.characters\r\n          : []\r\n      const result = getSkillResult(character, targets, consumable.skill)\r\n      const parties = commitSkillResults(rawParty, rawParty, {})(result)\r\n      updateParty(parties.playerParty)\r\n    })\r\n    return () => {\r\n      setPlayerCanEquipItem(false)\r\n      setOnCharacterConsumableClick((c, i, item) => {})\r\n    }\r\n  }, [party, rawParty, updateParty])\r\n\r\n  return (\r\n    <FlexContainer $full $direction='column' style={{ height: '100%' }}>\r\n      <AppHeader\r\n        left={\r\n          <>\r\n            <Button\r\n              onClick={() => history.push('/')}\r\n              style={{ borderBottom: 0 }}\r\n            >\r\n              Restart\r\n            </Button>\r\n\r\n            <FullContainer />\r\n          </>\r\n        }\r\n        right={\r\n          <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n            <PartyResources />\r\n          </FlexContainer>\r\n        }\r\n      >\r\n        <FlexContainer\r\n          $full\r\n          style={{\r\n            color: 'white',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <HeadingSm style={{ margin: 0 }}>{currentFloor.name}</HeadingSm>\r\n        </FlexContainer>\r\n      </AppHeader>\r\n      <FlexContainer $full $direction='column'>\r\n        <FlexContainer $full>\r\n          {(currentEncounter && !currentEncounter.completed) ||\r\n          (currentEncounter && currentEncounter.type === 'boss') ? (\r\n            <NonCombatEncounter />\r\n          ) : (\r\n            <Grid />\r\n          )}\r\n          <EncounterActions />\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { FullContainer, FlexContainer } from '../elements/flex'\r\nimport { BoxContainer } from '../elements/box'\r\nimport { usePartyContext } from '../contexts/PartyContext'\r\nimport { RedButton } from '../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { INITIAL_STATE } from '../state/party'\r\nimport { Monospace } from '../elements/monospace'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport {\r\n  tProcessedCharacter,\r\n  tCharacter,\r\n  tCharacterClass,\r\n} from '../game/Character/type'\r\nimport { makeCharacter } from '../game/Character/util'\r\nimport { STAT_BONUS_KEYS } from '../game/Stats/constants'\r\nimport { Theme } from '../theme'\r\nimport { AppHeader } from '../components/AppHeader'\r\nimport { HeadingSm, Text } from '../elements/typography'\r\nimport { Gauge2 } from '../components/Gauge/v2'\r\nimport { TEST_WEAPON } from '../game/Weapon/builders/unique/test_weapon'\r\nimport { noneg } from '../util'\r\nimport { useModalContext } from '../contexts/ModalContext'\r\n\r\nexport const Start = () => {\r\n  const {\r\n    party,\r\n    rawParty,\r\n    updateParty,\r\n    upsertCharacter,\r\n    findRawCharacter,\r\n  } = usePartyContext()\r\n  const history = useHistory()\r\n  const { open, close } = useModalContext()\r\n  const { reset, loading } = useGameStateContext()\r\n  useEffect(() => {\r\n    updateParty(INITIAL_STATE)\r\n    reset()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      open(\r\n        <FlexContainer $direction='column'>\r\n          <h1 style={{ fontFamily: Theme.titleFont, textAlign: 'center' }}>\r\n            Loading...\r\n          </h1>\r\n          <Text style={{ textAlign: 'center' }}>\r\n            This might take a few seconds.\r\n          </Text>\r\n        </FlexContainer>,\r\n        {},\r\n        true,\r\n      )\r\n    } else {\r\n      close()\r\n    }\r\n  }, [loading])\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{ height: '100%', overflow: 'hidden' }}\r\n    >\r\n      <AppHeader\r\n        left={\r\n          <Monospace\r\n            style={{\r\n              fontWeight: 'normal',\r\n              color: 'rgba(255,255,255,0.5)',\r\n              fontSize: 12,\r\n            }}\r\n            onClick={() => {\r\n              updateParty({\r\n                ...rawParty,\r\n                gold: 20000,\r\n                characters: rawParty.characters.map((c) => ({\r\n                  ...c,\r\n                  weapon: TEST_WEAPON(),\r\n                })),\r\n              })\r\n            }}\r\n          >\r\n            alpha-0.0.7.10\r\n          </Monospace>\r\n        }\r\n      >\r\n        <span\r\n          style={{ color: 'white', lineHeight: '52px', whiteSpace: 'nowrap' }}\r\n        >\r\n          I am looking for help with: item, and enemy, and world design! If you\r\n          would like to help, shoot me a message\r\n        </span>\r\n      </AppHeader>\r\n      <FullContainer />\r\n      <FlexContainer $full>\r\n        <FullContainer />\r\n        <BoxContainer\r\n          style={{\r\n            maxWidth: 340,\r\n            marginRight: 8,\r\n          }}\r\n          substyle={{\r\n            padding: 16,\r\n            background: Theme.darkBgColor,\r\n            lineHeight: 1.4,\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          <HeadingSm\r\n            style={{\r\n              marginTop: 8,\r\n            }}\r\n          >\r\n            About this game\r\n          </HeadingSm>\r\n          <p>\r\n            Each character class has different stats and starting items. Your\r\n            stats determine your character's chances of succeeding in various\r\n            checks during combat.\r\n          </p>\r\n          <p>\r\n            For example, if your character has 76 Strength, then each Strength\r\n            check has a 76% chance of succeeding.\r\n          </p>\r\n          <p>\r\n            So if an attack has 4 Strength checks at 76% each, then that attack\r\n            has a 33% chance of being \"perfect.\" Some attacks will have special\r\n            bonus actions when they are \"perfect.\" Such as splash damage, or\r\n            status effects.\r\n          </p>\r\n          <p>\r\n            More power attacks may require more checks or use negative-offset\r\n            stat values\r\n          </p>\r\n        </BoxContainer>\r\n        <BoxContainer>\r\n          <h1\r\n            style={{\r\n              marginTop: 8,\r\n              textAlign: 'center',\r\n              fontFamily: Theme.titleFont,\r\n              textShadow: '1px 3px 3px black',\r\n              color: 'rgba(255,255,255,1)',\r\n            }}\r\n          >\r\n            Choose your Party!\r\n          </h1>\r\n          <FlexContainer>\r\n            {party.characters.map((character) => (\r\n              <FlexContainer\r\n                key={character.id}\r\n                $direction='column'\r\n                style={{ padding: 4 }}\r\n              >\r\n                <StartCharacterCard\r\n                  character={character}\r\n                  onChange={(characterId, updater) => {\r\n                    const rc = findRawCharacter(characterId)\r\n                    if (rc) {\r\n                      upsertCharacter(updater(rc))\r\n                    }\r\n                  }}\r\n                />\r\n              </FlexContainer>\r\n            ))}\r\n          </FlexContainer>\r\n          <FlexContainer>\r\n            <FullContainer />\r\n            <RedButton\r\n              style={{ margin: '16px 0 12px 0' }}\r\n              onClick={() => {\r\n                history.push('/party')\r\n              }}\r\n            >\r\n              Begin Adventure\r\n            </RedButton>\r\n            <FullContainer />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        <FullContainer />\r\n      </FlexContainer>\r\n      <FullContainer />\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface StartCharacterCardPropsT {\r\n  character: tProcessedCharacter\r\n  onChange: (\r\n    characterId: string,\r\n    updater: (c: tCharacter) => tCharacter,\r\n  ) => void\r\n}\r\nexport const StartCharacterCard = (props: StartCharacterCardPropsT) => {\r\n  const { character, onChange } = props\r\n  return (\r\n    <FlexContainer $direction='column' style={{ width: 200 }}>\r\n      <input\r\n        style={{\r\n          background: Theme.mediumBgColor,\r\n          border: '1px solid rgba(255,255,255,0.4)',\r\n          padding: 8,\r\n          color: 'white',\r\n          marginBottom: 8,\r\n        }}\r\n        value={character.name}\r\n        onChange={(e) => {\r\n          onChange(character.id, (c) => ({\r\n            ...c,\r\n            name: e.target.value,\r\n          }))\r\n        }}\r\n      />\r\n      <select\r\n        style={{\r\n          background: Theme.mediumBgColor,\r\n          border: '1px solid rgba(255,255,255,0.4)',\r\n          padding: 8,\r\n          color: 'white',\r\n          marginBottom: 8,\r\n        }}\r\n        value={character.class}\r\n        onChange={(e) => {\r\n          onChange(character.id, (c) => ({\r\n            ...makeCharacter(e.target.value as tCharacterClass),\r\n            id: character.id,\r\n            name: character.name,\r\n          }))\r\n        }}\r\n      >\r\n        <option value='executioner'>Executioner</option>\r\n        <option value='mercenary'>Mercenary</option>\r\n        <option value='ranger'>Ranger</option>\r\n        <option value='reaper'>Reaper</option>\r\n        <option value='student'>Student</option>\r\n        <option value='patrician'>Patrician</option>\r\n        <option value='corsair'>Corsair</option>\r\n        <option value='drifter'>Drifter</option>\r\n      </select>\r\n      <FlexContainer $direction='column' style={{ padding: 8 }}>\r\n        {STAT_BONUS_KEYS.map((key) => (\r\n          <FlexContainer key={key} style={{ height: 20 }}>\r\n            <div\r\n              style={{\r\n                width: 80,\r\n                fontSize: 12,\r\n                textTransform: 'capitalize',\r\n                marginRight: 4,\r\n              }}\r\n            >\r\n              {key}\r\n            </div>\r\n            <FullContainer>\r\n              <Gauge2\r\n                max={40}\r\n                value={noneg(character.stats[key] - 40)}\r\n                color='rgba(255,255,255,0.6)'\r\n                height={15}\r\n              />\r\n            </FullContainer>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { tProcessedCharacter } from '../Character/type'\r\nimport { CELESTIAL_LOTUS } from './objects/celestial_lotus'\r\nimport { GODSBEARD } from './objects/godsbeard'\r\nimport { POISON_KNIFE } from './objects/poison_knife'\r\nimport { BEAST_DRUG } from './objects/beast_drug'\r\nimport { CURE_POTION } from './objects/curing_potion'\r\nimport { FIREBOMB } from './objects/firebomb'\r\n\r\nexport const CONSUMABLE_DESCRIPTIONS: Record<\r\n  string,\r\n  (character: tProcessedCharacter) => string\r\n> = {\r\n  [GODSBEARD().cid]: (c) => `Heal for ${c.stats.consumableHealthGainOffset} HP`,\r\n  [CELESTIAL_LOTUS().cid]: () => 'Remove all Curses',\r\n  [POISON_KNIFE().cid]: () => `Inflict Poison`,\r\n  [BEAST_DRUG().cid]: () => `+15 Attack Damage`,\r\n  [CURE_POTION().cid]: () => `Cure Buring, Bleeding, Frozen and Poison`,\r\n  [FIREBOMB().cid]: () => `Deal 15 Damage and inflict Burning`,\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { CONSUMABLE_ITEM_ICONS, CONSUMABLE_ITEM_COLORS } from '../../icons/maps'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { considateConsumableListToStack } from '../../game/Consumable/util'\r\nimport { Theme } from '../../theme'\r\nimport { REMOVE_CURSES } from '../../game/Skill/skills/consumables'\r\nimport { hasAnyStatus } from '../../game/Character/util'\r\nimport { CONSUMABLE_DESCRIPTIONS } from '../../game/Consumable/constants'\r\n\r\nconst HEIGHT = 64\r\nexport interface PartyCharacterConsumablesPropsT {\r\n  character: tProcessedCharacter\r\n  consumables: tConsumable[]\r\n  onClick?: (consumable: tConsumable, index: number) => void\r\n}\r\nexport const PartyCharacterConsumables = (\r\n  props: PartyCharacterConsumablesPropsT,\r\n) => {\r\n  const { character, consumables, onClick } = props\r\n  const stack = useMemo(() => considateConsumableListToStack(consumables), [\r\n    consumables,\r\n  ])\r\n  const onStackClick = (consumable: tConsumable) => {\r\n    let index = undefined\r\n    consumables.forEach((c, i) => {\r\n      if (c.id === consumable.id) index = i\r\n    })\r\n    if (consumable.skill.healing && !(character.healthOffset === 0))\r\n      return onClick && onClick(consumable, index || 0)\r\n    if (\r\n      consumable.skill.id === REMOVE_CURSES.id &&\r\n      hasAnyStatus(character, [\r\n        'cursed-vigor',\r\n        'cursed-strength',\r\n        'cursed-luck',\r\n        'cursed-intelligence',\r\n        'cursed-dexterity',\r\n        'cursed-charisma',\r\n        'cursed-agility',\r\n      ])\r\n    ) {\r\n      return onClick && onClick(consumable, index || 0)\r\n    }\r\n\r\n    if (\r\n      consumable.skill.name === 'Cure Potion' &&\r\n      hasAnyStatus(character, ['poisoned', 'bleeding', 'burning', 'frozen'])\r\n    ) {\r\n      return onClick && onClick(consumable, index || 0)\r\n    }\r\n  }\r\n  const filler = Array(10 - stack.length).fill(null)\r\n\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ flexWrap: 'wrap', height: HEIGHT }}\r\n    >\r\n      {stack.map((s) => (\r\n        <PartyCharacterConsumable\r\n          key={s.consumable.id}\r\n          character={character}\r\n          consumable={s.consumable}\r\n          count={s.count}\r\n          onClick={onStackClick}\r\n        />\r\n      ))}\r\n      {filler.map((f, i) => (\r\n        <ConsumableBox key={i} />\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\ninterface ConsumableBoxPropsT {\r\n  children?: JSX.Element\r\n  onClick?: () => void\r\n}\r\nconst ConsumableBox = (props: ConsumableBoxPropsT) => {\r\n  const { children, onClick } = props\r\n  return (\r\n    <FlexContainer\r\n      onClick={() => onClick && onClick()}\r\n      style={{\r\n        height: HEIGHT / 2,\r\n        width: HEIGHT / 2,\r\n        boxSizing: 'border-box',\r\n        border: '1px solid rgba(0,0,0,0.5)',\r\n        background: Theme.otherGrey,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        cursor: onClick ? 'pointer' : 'default',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      {children}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface PartyCharacterConsumablePropsT {\r\n  consumable: tConsumable\r\n  character: tProcessedCharacter\r\n  count: number\r\n  onClick?: (consumable: tConsumable) => void\r\n}\r\nexport const PartyCharacterConsumable = (\r\n  props: PartyCharacterConsumablePropsT,\r\n) => {\r\n  const { character, consumable, count, onClick } = props\r\n  return (\r\n    <HoverToolTip\r\n      content={\r\n        <PartyCharacterConsumableTooltip\r\n          character={character}\r\n          consumable={consumable}\r\n        />\r\n      }\r\n    >\r\n      <ConsumableBox onClick={() => onClick && onClick(consumable)}>\r\n        <>\r\n          <Icon\r\n            src={CONSUMABLE_ITEM_ICONS[consumable.cid]}\r\n            fill={CONSUMABLE_ITEM_COLORS[consumable.cid]}\r\n            size={24}\r\n            shadow\r\n          />\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              textShadow: '-1px 1px 1px black',\r\n              bottom: -2,\r\n              zIndex: 2,\r\n              right: 1,\r\n            }}\r\n          >\r\n            {count}\r\n          </div>\r\n        </>\r\n      </ConsumableBox>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface PartyCharacterConsumableTooltipProps {\r\n  character: tProcessedCharacter\r\n  consumable: tConsumable\r\n}\r\nexport const PartyCharacterConsumableTooltip = (\r\n  props: PartyCharacterConsumableTooltipProps,\r\n) => {\r\n  const { character, consumable } = props\r\n  const getText = CONSUMABLE_DESCRIPTIONS[consumable.cid]\r\n  return (\r\n    <BoxContainer\r\n      style={{ maxWidth: 200 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <strong>{consumable.name}</strong>\r\n      {getText && <div>{getText(character)}</div>}\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { styled } from 'styletron-react'\r\nimport { Icon } from '../Icon'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tBaseStats } from '../../game/Stats/type'\r\nimport { Theme } from '../../theme'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { NumberChange } from '../NumberChange'\r\n\r\ninterface CharacterStatPropsT {\r\n  statKey: keyof tBaseStats\r\n  character: tProcessedCharacter\r\n}\r\nconst CharacterStat = (props: CharacterStatPropsT) => {\r\n  const { statKey, character } = props\r\n  return (\r\n    <HoverToolTip\r\n      flex\r\n      content={\r\n        <BoxContainer\r\n          substyle={{\r\n            textTransform: 'capitalize',\r\n            background: Theme.darkBgColor,\r\n          }}\r\n        >\r\n          {statKey}\r\n        </BoxContainer>\r\n      }\r\n    >\r\n      <ResourceE $color={getStatColor(character, statKey)}>\r\n        <Icon\r\n          src={STAT_ICONS[statKey] || ''}\r\n          fill={getStatColor(character, statKey)}\r\n          size={14}\r\n          style={{ marginRight: 3, marginTop: 0 }}\r\n        />\r\n        <NumberChange value={character.stats[statKey]} />\r\n      </ResourceE>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface StatsProps {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Stats = (props: StatsProps) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      style={{ paddingTop: 4, background: Theme.darkBgColor, paddingLeft: 42 }}\r\n    >\r\n      <CharacterStat statKey='vigor' character={character} />\r\n      <CharacterStat statKey='strength' character={character} />\r\n      <CharacterStat statKey='dexterity' character={character} />\r\n      <CharacterStat statKey='intelligence' character={character} />\r\n      <CharacterStat statKey='charisma' character={character} />\r\n      <CharacterStat statKey='agility' character={character} />\r\n      <CharacterStat statKey='luck' character={character} />\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nconst ResourceE = styled('div', (props: any) => ({\r\n  height: 15,\r\n  color: props.$color,\r\n  fontSize: '15px',\r\n  padding: '0px 4px',\r\n  lineHeight: '14px',\r\n  flex: 1,\r\n  textAlign: 'center',\r\n  background: Theme.darkBgColor,\r\n  display: 'flex',\r\n}))\r\n\r\nconst getStatColor = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n): string => {\r\n  const a = character.stats[key]\r\n  const b = character.rawStats[key]\r\n  if (a >= 95) return 'gold'\r\n  if (a > b) return Theme.evasionColor\r\n  if (b > a) return 'lightcoral'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { FISTS } from '../../game/Weapon/fists'\r\nimport { Theme } from '../../theme'\r\nexport interface NamePropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Name = (props: NamePropsT) => {\r\n  const { character } = props\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        background: Theme.otherGrey2,\r\n        overflow: 'visible',\r\n        position: 'relative',\r\n        marginTop: -3,\r\n        marginRight: -3,\r\n        marginLeft: -3,\r\n        zIndex: 2,\r\n      }}\r\n    >\r\n      <FlexContainer\r\n        $full\r\n        style={{\r\n          position: 'relative',\r\n\r\n          paddingLeft: 52,\r\n          paddingRight: 8,\r\n          background:\r\n            'linear-gradient(30deg, rgba(0,0,0,1) 0%, rgba(0,0,0,0) 20%)',\r\n          height: 24,\r\n          alignItems: 'center',\r\n          borderBottom: '1px solid rgba(255,255,255,0.1)',\r\n          boxShadow: '-5px 0 10px black',\r\n          zIndex: 2,\r\n        }}\r\n      >\r\n        <FullContainer\r\n          style={{\r\n            fontFamily: Theme.titleFont,\r\n            textShadow: '1px 1px 3px black',\r\n            flex: 1,\r\n            fontSize: 20,\r\n          }}\r\n        >\r\n          {character.name}\r\n        </FullContainer>\r\n        <div\r\n          style={{\r\n            fontSize: 12,\r\n            color: 'rgba(255,255,255,0.3)',\r\n          }}\r\n        >\r\n          {character.weapon.name !== 'Fists' ? (\r\n            character.class\r\n          ) : (\r\n            <span\r\n              style={{\r\n                color: 'red',\r\n                display: 'inline-block',\r\n                paddingTop: 4,\r\n                textTransform: 'uppercase',\r\n                textShadow: '1px 1px 3px black',\r\n              }}\r\n            >\r\n              No Weapon Equiped\r\n            </span>\r\n          )}\r\n        </div>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Inventory from '../../icons/svg/lorc/knapsack.svg'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Tooltip } from '../Tooltip'\r\nimport { PartyActiveCharacter } from '../PartyActiveCharacter'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { Hover } from '../Hover'\r\nimport { Icon } from '../Icon'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ActionsPropsT {\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n}\r\n\r\nexport const Actions = (props: ActionsPropsT) => {\r\n  const { character, canEquip } = props\r\n  const { party } = usePartyContext()\r\n  const {\r\n    openCharacterInventoryId,\r\n    setOpenCharacterInventoryId,\r\n  } = useUIContext()\r\n  const inventoryOpen = character.id === openCharacterInventoryId\r\n  const inventoryStyle = useSpring({\r\n    opacity: inventoryOpen ? 1 : 0,\r\n    config: { tension: 500 },\r\n  })\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{ justifyContent: 'center', boxShadow: 'inset 0px 0px 3px black' }}\r\n    >\r\n      <FlexContainer\r\n        $full\r\n        style={{ alignItems: 'center', justifyContent: 'center' }}\r\n      >\r\n        <Tooltip\r\n          isOpen={inventoryOpen}\r\n          direction='up'\r\n          distance={60}\r\n          background={Theme.darkBgColor}\r\n          arrow\r\n          content={\r\n            <animated.div\r\n              style={{ minWidth: 887, minHeight: 473, ...inventoryStyle }}\r\n            >\r\n              {inventoryOpen && (\r\n                <PartyActiveCharacter\r\n                  character={character}\r\n                  party={party}\r\n                  canEquip={canEquip}\r\n                  onRequestClose={() => {\r\n                    setOpenCharacterInventoryId(undefined)\r\n                  }}\r\n                />\r\n              )}\r\n            </animated.div>\r\n          }\r\n        >\r\n          <Hover delay={0}>\r\n            {({ isHovering }) => (\r\n              <Icon\r\n                src={Inventory}\r\n                fill={\r\n                  isHovering ? 'rgba(255,255,255,1)' : 'rgba(255,255,255,0.7)'\r\n                }\r\n                size={18}\r\n                shadow\r\n                onClick={() => {\r\n                  if (character.id === openCharacterInventoryId) {\r\n                    return setOpenCharacterInventoryId(undefined)\r\n                  }\r\n                  setOpenCharacterInventoryId(character.id)\r\n                }}\r\n                style={{ padding: 6, cursor: 'pointer' }}\r\n              />\r\n            )}\r\n          </Hover>\r\n        </Tooltip>\r\n      </FlexContainer>\r\n      {/*<FlexContainer\r\n        $full\r\n        style={{ alignItems: 'center', justifyContent: 'center' }}\r\n      >\r\n        <Icon\r\n          src={Details}\r\n          fill={'rgba(255,255,255,0.7)'}\r\n          size={18}\r\n          shadow\r\n          style={{ padding: 6, cursor: 'pointer' }}\r\n        />\r\n      </FlexContainer>*/}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { noneg } from '../../util'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Theme } from '../../theme'\r\nimport { NumberChange } from '../NumberChange'\r\n\r\nexport interface HealthPropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Health = (props: HealthPropsT) => {\r\n  const { character } = props\r\n  const health = noneg(character.health)\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'relative',\r\n        zIndex: 3,\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          marginLeft: 44,\r\n          fontSize: 56,\r\n          height: 64,\r\n          minWidth: 86,\r\n          lineHeight: '72px',\r\n          color: Theme.healthRedColor,\r\n          fontFamily: 'New Rocker',\r\n          display: 'flex',\r\n          textAlign: 'center',\r\n          textShadow: '1px 1px 3px black',\r\n          justifyContent: 'center',\r\n          boxShadow: 'inset 0px 0px 3px black',\r\n        }}\r\n      >\r\n        <NumberChange value={health} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { XPGauge, HealthGauge } from '../Gauge'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { styled } from 'styletron-react'\r\nimport { TagPreview } from '../TagPreview'\r\nimport { PartyCharacterConsumables } from '../PartyCharacterConsumables'\r\nimport { Stats } from './Stats'\r\nimport { Name } from './Name'\r\nimport { Actions } from './Actions'\r\nimport { Health } from './Health'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { usePlayerCharacterNotifications } from '../../hooks/usePlayerCharacterNotifications'\r\nimport { Icon } from '../Icon'\r\nimport { CHARACTER_CLASS_ICONS } from '../../icons/maps'\r\nimport { CHARACTER_CLASS_COLORS } from '../../game/Character/constants'\r\nimport { Theme } from '../../theme'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { ZERO_STATS } from '../../game/Stats/constants'\r\nimport { HoverHexBadge, HexBadge } from '../../elements/shapes'\r\nimport { animated } from 'react-spring'\r\nimport { useElementShake } from '../../hooks/useElementShake'\r\nimport { NumberChange } from '../NumberChange'\r\n\r\nexport interface PartyCharacterProps {\r\n  character: tProcessedCharacter\r\n  selected?: boolean\r\n  showActions?: boolean\r\n  onClick?: () => void\r\n  onConsumableClick?: (consumable: tConsumable, index: number) => void\r\n  push: (contents: JSX.Element, type?: string) => void\r\n}\r\nconst Wrapper = styled(animated.div, (props: any) => {\r\n  const { $active } = props\r\n  return {\r\n    margin: 10,\r\n    display: 'flex',\r\n    position: 'relative',\r\n    transform: $active ? 'scale(1.05)' : 'scale(1)',\r\n    transition: 'all 0.4s',\r\n    userSelect: 'none',\r\n  }\r\n})\r\n\r\nconst Halo = styled('div', (props: any) => {\r\n  const { $active, $targeted, $light } = props\r\n  const left = $light ? -20 : 0\r\n  const leftR = $light ? -10 : 0\r\n  return {\r\n    boxShadow: $active\r\n      ? `${left}px 0px 20px ${$light ? 'rgba(255,255,255,0.4)' : 'white'}`\r\n      : $targeted\r\n      ? `${leftR}px 0px 20px #ff6224  `\r\n      : 'none',\r\n  }\r\n})\r\n\r\nexport const PartyCharacter = (props: PartyCharacterProps) => {\r\n  const {\r\n    character,\r\n    selected,\r\n    showActions = true,\r\n    onConsumableClick,\r\n    push,\r\n  } = props\r\n  const { playerCanEquipItem } = useUIContext()\r\n  const { activeRound } = useCombatContext()\r\n  const targetIds = activeRound?.targetResults.map((r) => r.target.id)\r\n  const active = selected\r\n  const targeted = targetIds?.includes(character.id)\r\n  const { styles, exec } = useElementShake()\r\n  usePlayerCharacterNotifications(character, push, exec)\r\n  return (\r\n    <animated.div style={styles}>\r\n      <Wrapper\r\n        $active={active}\r\n        style={{\r\n          opacity: character.health <= 0 ? 0.5 : 1,\r\n        }}\r\n      >\r\n        <HexBadge\r\n          size={110}\r\n          stroke={3}\r\n          color={CHARACTER_CLASS_COLORS[character.class] || Theme.darkBgColor}\r\n          style={{\r\n            padding: 8,\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            transition: 'all 0.3s',\r\n            marginRight: -58,\r\n            marginTop: -11,\r\n            zIndex: 3,\r\n          }}\r\n          childStyle={{\r\n            marginTop: -20,\r\n          }}\r\n        >\r\n          <Icon\r\n            src={CHARACTER_CLASS_ICONS[character.class]}\r\n            size={72}\r\n            shadow\r\n            style={{ marginRight: -4 }}\r\n            fill={selected ? 'white' : 'rgba(255,255,255,0.5)'}\r\n          />\r\n        </HexBadge>\r\n        <Halo $active={active} $targeted={targeted}>\r\n          <BoxContainer\r\n            style={{\r\n              borderWidth: 2,\r\n              transition: 'all 1s',\r\n            }}\r\n            substyle={{\r\n              padding: 0,\r\n              minWidth: 312,\r\n              background: Theme.darkBgColorSolid,\r\n            }}\r\n          >\r\n            <FlexContainer style={{ border: '2px solid black' }}>\r\n              <FlexContainer $full $direction='column'>\r\n                <Name character={character} />\r\n                <FlexContainer style={{ background: Theme.mediumBgColor }}>\r\n                  <Health character={character} />\r\n                  <FlexContainer $full style={{ maxWidth: 160, minWidth: 160 }}>\r\n                    <PartyCharacterConsumables\r\n                      character={character}\r\n                      consumables={character.consumables}\r\n                      onClick={onConsumableClick}\r\n                    />\r\n                  </FlexContainer>\r\n                  <FlexContainer $full $direction='column'>\r\n                    {showActions && (\r\n                      <Actions\r\n                        character={character}\r\n                        canEquip={playerCanEquipItem}\r\n                      />\r\n                    )}\r\n                  </FlexContainer>\r\n                </FlexContainer>\r\n                <FullContainer />\r\n                <FlexContainer $direction='column' style={{ paddingLeft: 38 }}>\r\n                  <HealthGauge\r\n                    character={character}\r\n                    style={{ borderRight: 'none' }}\r\n                  />\r\n                  <XPGauge\r\n                    character={character}\r\n                    style={{ borderRight: 'none' }}\r\n                  />\r\n                </FlexContainer>\r\n                <HoverHexBadge\r\n                  position={{ bottom: 14, left: 90 }}\r\n                  size={45}\r\n                  rotate\r\n                  stroke={2}\r\n                  childStyle={{ paddingTop: 1 }}\r\n                  content={<BoxContainer dark>Character Level</BoxContainer>}\r\n                >\r\n                  <span\r\n                    style={{\r\n                      color: 'rgba(98, 128, 116,1)',\r\n                      fontSize: 24,\r\n                      lineHeight: '28px',\r\n                    }}\r\n                  >\r\n                    {character.level}\r\n                  </span>\r\n                </HoverHexBadge>\r\n                <Stats character={character} />\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          </BoxContainer>\r\n        </Halo>\r\n        <FlexContainer\r\n          style={{\r\n            position: 'absolute',\r\n            top: '-24px',\r\n            right: '4px',\r\n          }}\r\n        >\r\n          <>\r\n            {character.status.map((status) => (\r\n              <TagPreview key={status.type} direction='up' status={status} />\r\n            ))}\r\n            {character.immunities.map((status, i) => (\r\n              <TagPreview\r\n                key={i}\r\n                immunity={true}\r\n                status={{\r\n                  type: status,\r\n                  immunities: [],\r\n                  stack: 0,\r\n                  stats: ZERO_STATS,\r\n                  duration: -1,\r\n                }}\r\n              />\r\n            ))}\r\n          </>\r\n        </FlexContainer>\r\n        <HoverHexBadge\r\n          position={{\r\n            bottom: 61,\r\n            left: -3,\r\n          }}\r\n          rotate\r\n          stroke={2}\r\n          size={32}\r\n          childStyle={{\r\n            color: Theme.physicalColor,\r\n            fontSize: 18,\r\n            paddingTop: 1,\r\n          }}\r\n          content={<BoxContainer dark>Armor</BoxContainer>}\r\n        >\r\n          <NumberChange value={character.stats.armor} />\r\n        </HoverHexBadge>\r\n        <HoverHexBadge\r\n          position={{\r\n            bottom: 31,\r\n            left: -3,\r\n          }}\r\n          rotate\r\n          stroke={2}\r\n          size={32}\r\n          childStyle={{\r\n            color: Theme.magicColor,\r\n            fontSize: 18,\r\n            paddingTop: 1,\r\n          }}\r\n          content={<BoxContainer dark>Magic Resistance</BoxContainer>}\r\n        >\r\n          <NumberChange value={character.stats.resistance} />\r\n        </HoverHexBadge>\r\n        <HoverHexBadge\r\n          position={{\r\n            bottom: 16,\r\n            left: 24,\r\n          }}\r\n          rotate\r\n          stroke={2}\r\n          size={32}\r\n          childStyle={{\r\n            color: Theme.evasionColor,\r\n            fontSize: 18,\r\n            paddingTop: 1,\r\n          }}\r\n          content={<BoxContainer dark>Evasion</BoxContainer>}\r\n        >\r\n          <NumberChange value={character.stats.evasion} />\r\n        </HoverHexBadge>\r\n        <HoverHexBadge\r\n          direction='up'\r\n          rotate={true}\r\n          content={<BoxContainer dark>Weapon Damage</BoxContainer>}\r\n          position={{\r\n            bottom: -7,\r\n            left: 52,\r\n          }}\r\n          stroke={2}\r\n          size={45}\r\n          childStyle={{\r\n            color:\r\n              character.weapon.damage.value <= 4\r\n                ? 'red'\r\n                : character.weapon.damage.type === 'physical'\r\n                ? Theme.physicalColor\r\n                : Theme.magicColor,\r\n            fontSize: 24,\r\n            paddingTop: 1,\r\n          }}\r\n        >\r\n          <NumberChange\r\n            value={\r\n              (character.weapon.damage.value +\r\n                character.stats.attackDamageOffset) *\r\n              ((character.stats.attackDamageModifier + 100) / 100)\r\n            }\r\n          />\r\n        </HoverHexBadge>\r\n      </Wrapper>\r\n    </animated.div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { PartyCharacter } from '../PartyCharacter'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { RedButton } from '../../elements/button'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { LocalToastRp } from '../../contexts/LocalToastContext'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\n\r\nexport interface PlayerPartyPropsT {\r\n  onCharacterClick?: (character: tProcessedCharacter) => void\r\n}\r\nexport const PlayerParty = (props: PlayerPartyPropsT) => {\r\n  const { onCharacterClick } = props\r\n  const {\r\n    activeCharacter,\r\n    selectedSkill,\r\n    isRunning,\r\n    next,\r\n    onSkillSelect,\r\n  } = useCombatContext()\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { party } = usePartyContext()\r\n  const { onCharacterConsumableClick } = useUIContext()\r\n\r\n  const showConfirmButton = (c: tProcessedCharacter) =>\r\n    selectedSkill &&\r\n    activeCharacter &&\r\n    c.health > 0 &&\r\n    ((selectedSkill.targetType === 'self' && c.id === activeCharacter.id) ||\r\n      selectedSkill.targetType === 'ally')\r\n\r\n  return (\r\n    <FlexContainer $direction='column' style={{ marginBottom: 30 }}>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          alignItems: 'flex-end',\r\n          cursor: selectedSkill?.targetType === 'party' ? 'pointer' : 'default',\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <FlexContainer\r\n            $direction='column'\r\n            key={c.id}\r\n            style={{ height: 177, justifyContent: 'flex-end' }}\r\n          >\r\n            {showConfirmButton(c) && (\r\n              <FlexContainer style={{ justifyContent: 'center' }}>\r\n                <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n                  <RedButton onClick={() => next(c)} $direction='up'>\r\n                    {c.id === activeCharacter.id\r\n                      ? 'Target Self'\r\n                      : 'Target Ally'}\r\n                  </RedButton>\r\n                </div>\r\n              </FlexContainer>\r\n            )}\r\n            <LocalToastRp>\r\n              {({ push }) => (\r\n                <PartyCharacter\r\n                  push={push}\r\n                  selected={\r\n                    isRunning &&\r\n                    currentEncounter &&\r\n                    currentEncounter.type !== 'shop' &&\r\n                    activeCharacter &&\r\n                    c &&\r\n                    c.id === activeCharacter.id\r\n                  }\r\n                  character={c}\r\n                  onClick={() => onCharacterClick && onCharacterClick(c)}\r\n                  onConsumableClick={(consumable, index) => {\r\n                    try {\r\n                      if (!c || !consumable || index === undefined) return\r\n                      if (onCharacterConsumableClick) {\r\n                        onCharacterConsumableClick(c, index, consumable)\r\n                      }\r\n                      if (c && c.id === activeCharacter.id) {\r\n                        onSkillSelect(consumable.skill, index)\r\n                      }\r\n                    } catch (e) {}\r\n                  }}\r\n                />\r\n              )}\r\n            </LocalToastRp>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && selectedSkill.targetType === 'party' && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n            <RedButton onClick={() => next(party)}>Target Party</RedButton>\r\n          </div>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useGameStateContext } from '../GameStateContext'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { makeParty } from '../../game/Party/util'\r\nimport { tCombatEncounter } from '../../game/Encounter/type'\r\nimport { CombatContextProvider } from '.'\r\n\r\nexport interface LinkedCombatContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const LinkedCombatContext = (\r\n  props: LinkedCombatContextProviderPropsT,\r\n) => {\r\n  const { children } = props\r\n  const { currentEncounter, floorId } = useGameStateContext()\r\n  const [combatParty, setCombatParty] = useState<tParty>(\r\n    makeParty(0, floorId, false, 0),\r\n  )\r\n  useEffect(() => {\r\n    if (currentEncounter && (currentEncounter as tCombatEncounter).party)\r\n      setCombatParty((currentEncounter as tCombatEncounter).party)\r\n  }, [currentEncounter])\r\n\r\n  return (\r\n    <CombatContextProvider\r\n      enemyParty={combatParty}\r\n      setEnemyParty={setCombatParty}\r\n    >\r\n      {children}\r\n    </CombatContextProvider>\r\n  )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { getEncounterBg } from '../../game/Encounter/constants'\r\nimport { getDepth, MIN_HEX } from '../../grid/util'\r\n\r\nexport interface AppBgPropsT {\r\n  children: JSX.Element | JSX.Element[]\r\n}\r\nexport const AppBg = (props: AppBgPropsT) => {\r\n  const { children } = props\r\n  const { currentFloor, currentHex, currentEncounter } = useGameStateContext()\r\n\r\n  const baseBg = useMemo(() => {\r\n    return getEncounterBg(\r\n      getDepth(currentHex || MIN_HEX(currentFloor.size), currentFloor.size),\r\n      currentFloor.id,\r\n    )\r\n  }, [currentFloor, currentHex])\r\n  const bg = currentEncounter?.completed ? baseBg.completed || baseBg : baseBg\r\n\r\n  /*\r\n  const deadCount = party.characters.filter((c) => c.health <= 0).length\r\n  const deadDiff = party.characters.length - deadCount\r\n  const filter = `grayscale(${\r\n    ((party.characters.length - deadDiff) / party.characters.length) * 100\r\n  }%)`\r\n  */\r\n\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        background: `url(${bg.bg}) center center fixed no-repeat`,\r\n        backgroundSize: 'cover',\r\n        transition: 'all 2s',\r\n        //filter,\r\n      }}\r\n    >\r\n      <FlexContainer\r\n        $full\r\n        $direction='column'\r\n        style={{\r\n          background: bg.overlay,\r\n          transition: 'all 2s',\r\n        }}\r\n      >\r\n        {children}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Switch } from 'react-router-dom'\r\nimport { Combat } from './domain/Combat'\r\nimport { CombatLogContextProvider } from './contexts/CombatLogContext'\r\nimport { ModalContextProvider } from './contexts/ModalContext'\r\nimport { makeRoute, RouteController } from './routes'\r\nimport { Party } from './domain/Party'\r\nimport { Start } from './domain/Start'\r\nimport { UIContextProvider } from './contexts/UIContext'\r\nimport { PlayerParty } from './components/PlayerParty'\r\nimport { FullContainer } from './elements/flex'\r\nimport { LinkedCombatContext } from './contexts/CombatContext/context'\r\nimport { AppBg } from './components/AppBg'\r\n\r\nexport const App = () => {\r\n  return (\r\n    <ModalContextProvider>\r\n      <LinkedCombatContext>\r\n        <UIContextProvider>\r\n          <CombatLogContextProvider>\r\n            <AppBg>\r\n              <RouteController />\r\n              <FullContainer style={{ height: 'calc(100vh - 207px)' }}>\r\n                <Switch>\r\n                  {makeRoute('/party', Party)}\r\n                  {makeRoute('/combat', Combat)}\r\n                  {makeRoute('/', Start)}\r\n                </Switch>\r\n              </FullContainer>\r\n              <PlayerParty />\r\n            </AppBg>\r\n          </CombatLogContextProvider>\r\n        </UIContextProvider>\r\n      </LinkedCombatContext>\r\n    </ModalContextProvider>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './index.css'\n\nimport { Provider as StyletronProvider, DebugEngine } from 'styletron-react'\nimport { Client as Styletron } from 'styletron-engine-atomic'\nimport { Provider as ReduxProvider } from 'react-redux'\nimport { HashRouter as Router } from 'react-router-dom'\nimport { makeStore } from './state'\nimport { PartyContextProvider } from './contexts/PartyContext'\nimport { GameStateContextProvider } from './contexts/GameStateContext'\n\nconst debug = process.env.NODE_ENV === 'production' ? void 0 : new DebugEngine()\nconst engine: Styletron = new Styletron()\nconst store = makeStore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n        <GameStateContextProvider>\n          <PartyContextProvider>\n            <Router basename='/JSFTK_combat/'>\n              <App />\n            </Router>\n          </PartyContextProvider>\n        </GameStateContextProvider>\n      </StyletronProvider>\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport party from './party'\r\nimport game from './game2'\r\n\r\nexport const makeStore = () =>\r\n  createStore(combineReducers({ party, game }), compose(applyMiddleware(thunk)))\r\n"],"sourceRoot":""}