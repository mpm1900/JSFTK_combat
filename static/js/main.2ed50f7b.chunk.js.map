{"version":3,"sources":["icons/svg/delapouite/coins.svg","icons/svg/lorc/broadsword.svg","assets/img/forests/7.png","icons/svg/lorc/dodging.svg","assets/img/forests/8.png","icons/svg/lorc/laurel-crown.svg","icons/svg/lorc/ringing-bell.svg","icons/svg/delapouite/perspective-dice-six.svg","icons/svg/lorc/knapsack.svg","icons/svg/lorc/sprint.svg","icons/svg/lorc/hammer-drop.svg","icons/svg/lorc/shieldcomb.svg","icons/svg/lorc/axe-in-stump.svg","icons/svg/lorc/saber-slash.svg","icons/svg/delapouite/chest-armor.svg","icons/svg/delapouite/viking-shield.svg","icons/svg/lorc/leather-boot.svg","icons/svg/lorc/visored-helm.svg","icons/svg/lorc/scythe.svg","icons/svg/delapouite/bandit.svg","assets/img/forests/1.png","assets/img/dungeon/3.png","icons/svg/delapouite/orc-head.svg","icons/svg/lorc/bee.svg","icons/svg/delapouite/kenku-head.svg","icons/svg/lorc/cultist.svg","icons/svg/lorc/wolf-head.svg","icons/svg/lorc/raven.svg","icons/svg/delapouite/overlord-helm.svg","icons/svg/delapouite/heart-beats.svg","icons/svg/delapouite/biceps.svg","icons/svg/lorc/brain.svg","icons/svg/delapouite/eye-target.svg","icons/svg/lorc/juggler.svg","icons/svg/lorc/clover.svg","icons/svg/lorc/star-swirl.svg","icons/svg/sbed/targeted.svg","icons/svg/delapouite/sticky-boot.svg","icons/svg/lorc/biohazard.svg","icons/svg/carl-olsen/flame.svg","icons/svg/lorc/bleeding-wound.svg","icons/svg/lorc/snowflake-2.svg","icons/svg/lorc/broken-shield.svg","icons/svg/lorc/high-shot.svg","icons/svg/delapouite/shield-impact.svg","icons/svg/lorc/fire-zone.svg","icons/svg/lorc/heavy-timer.svg","icons/svg/lorc/ubisoft-sun.svg","icons/svg/lorc/flat-hammer.svg","icons/svg/lorc/bordered-shield.svg","icons/svg/lorc/resonance.svg","icons/svg/lorc/energy-arrow.svg","icons/svg/delapouite/backward-time.svg","icons/svg/lorc/snail.svg","icons/svg/lorc/double-shot.svg","icons/svg/delapouite/extra-time.svg","icons/svg/sbed/health-normal.svg","icons/svg/lorc/wave-strike.svg","icons/svg/lorc/life-support.svg","icons/svg/lorc/plain-dagger.svg","icons/svg/lorc/knife-thrust.svg","icons/svg/lorc/pointy-sword.svg","icons/svg/lorc/axe-swing.svg","icons/svg/delapouite/vibrating-shield.svg","icons/svg/lorc/robe.svg","icons/svg/lorc/scale-mail.svg","icons/svg/lorc/lightning-shield.svg","icons/svg/delapouite/robin-hood-hat.svg","icons/svg/lorc/pointy-hat.svg","icons/svg/lorc/battle-axe.svg","icons/svg/lorc/gavel.svg","icons/svg/lorc/heavy-arrow.svg","icons/svg/lorc/bowie-knife.svg","icons/svg/skoll/revolver.svg","icons/svg/lorc/wizard-staff.svg","icons/svg/lorc/croc-sword.svg","icons/svg/skoll/fist.svg","icons/svg/delapouite/herbs-bundle.svg","icons/svg/delapouite/executioner-hood.svg","icons/svg/lorc/cowled.svg","icons/svg/delapouite/female-vampire.svg","icons/svg/delapouite/wizard-face.svg","icons/svg/lorc/split-cross.svg","icons/svg/lorc/hand.svg","icons/svg/delapouite/arrow-wings.svg","icons/svg/lorc/battered-axe.svg","icons/svg/delapouite/leather-armor.svg","icons/svg/lorc/crossed-swords.svg","icons/svg/lorc/divided-spiral.svg","icons/svg/lorc/crowned-skull.svg","state/util.ts","hooks/useActions.ts","game/Stats/constants.ts","util/undefAdd.ts","game/Stats/util.ts","game/Status/constants.ts","util/noneg.ts","game/Weapon/builders/damage.ts","game/Weapon/builders/goldValue.ts","game/Weapon/builders/rarity.ts","game/Weapon/builders/stats.ts","game/Weapon/builders/typeConfig.ts","game/Weapon/builders/index.ts","game/Skill/skills/index.ts","game/Skill/skills/axe.ts","game/Weapon/builders/objects/axe.ts","game/Skill/skills/bow.ts","game/Weapon/builders/objects/bow.ts","game/Skill/skills/catalyst.ts","game/Weapon/builders/objects/catalyst.ts","game/Skill/skills/chime.ts","game/Weapon/builders/objects/chime.ts","game/Weapon/constants.ts","game/Roll/util.ts","game/Armor/constants.ts","game/Consumable/util.ts","theme/index.ts","game/Character/constants.ts","game/Weapon/fists.ts","game/Skill/skills/armor.ts","game/Consumable/objects/godsbeard.ts","game/Item/constants.ts","game/Character/util.ts","util/getRandom.ts","game/Skill/enemy/stab.ts","game/Encounter/constants.ts","game/Armor/builders/index.ts","game/Armor/builders/sets/index.tsx","game/Armor/builders/sets/ranger.ts","game/Armor/builders/sets/patrician.ts","game/Armor/builders/sets/executioner.ts","game/Armor/builders/sets/student.ts","game/Armor/builders/sets/tomb.ts","game/Armor/builders/sets/adventure.ts","game/Armor/builders/sets/aristocrat.ts","game/Armor/builders/sets/graveguard.ts","game/Armor/builders/sets/apprentice.ts","game/Armor/builders/sets/hunter.ts","game/Armor/builders/sets/antiquated.ts","game/Armor/builders/sets/iron.ts","game/Armor/builders/sets/bone.ts","game/Armor/builders/sets/novice.ts","game/Skill/skills/blunt.ts","game/Weapon/builders/objects/hammer.ts","game/Skill/skills/dagger.ts","game/Weapon/builders/objects/dagger.ts","game/Skill/skills/greatsword.ts","game/Weapon/builders/objects/greatsword.ts","game/Skill/skills/pistol.ts","game/Weapon/builders/objects/pistol.ts","game/Skill/skills/scythe.ts","game/Weapon/builders/objects/scythe.ts","game/Skill/skills/sword.ts","game/Weapon/builders/objects/sword.ts","game/Weapon/builders/objects/index.ts","game/Item/util.ts","game/Character/enemies/bandit.ts","game/Skill/enemy/impale.ts","game/Character/enemies/beastman.ts","game/Skill/enemy/sting.ts","game/Character/enemies/bee.ts","game/Character/enemies/cultist_brute.ts","game/Skill/enemy/torch.ts","game/Skill/enemy/arcane.ts","game/Character/enemies/cultist.ts","game/Skill/enemy/bite.ts","game/Character/enemies/timberwolf.ts","game/Skill/enemy/peck.ts","game/Skill/enemy/caw.ts","game/Character/enemies/forest_raven.ts","game/Skill/enemy/lich_drain.ts","game/Skill/enemy/lich_screech.ts","game/Skill/enemy/lich_mass_screech.ts","game/Skill/enemy/lich_smite.ts","game/Character/bosses/lich.ts","game/Encounter/floors/index.tsx","game/Encounter/floors/floor-1.tsx","game/Encounter/floors/floor-2.tsx","game/Party/util.ts","game/Party/constants.ts","state/party/index.ts","game/Encounter/util.ts","state/game/index.ts","contexts/GameStateContext/index.tsx","contexts/PartyContext/index.tsx","contexts/ModalContext/reducer.ts","contexts/ModalContext/index.tsx","elements/flex.ts","elements/button.tsx","components/Icon/index.tsx","components/Hover/index.tsx","elements/box.tsx","components/StatsPreview/index.tsx","icons/maps.tsx","components/Tooltip/index.tsx","hooks/useOnClickOutside.ts","elements/badge.tsx","components/SkillChecks/index.tsx","components/ArmorPreview/index.tsx","elements/typography.tsx","game/Skill/constants.ts","game/Skill/util.ts","components/SkillPreview/index.tsx","components/WeaponPreview/index.tsx","components/ConsumablePreview/index.tsx","components/ItemPreview/index.tsx","elements/monospace.tsx","contexts/CombatLogContext/util.tsx","contexts/CombatLogContext/index.tsx","components/CombatVictoryModal/index.tsx","game/Other/util.ts","game/Queue/util.ts","game/Skill/committer.ts","contexts/CombatContext/index.tsx","game/AI/util.ts","components/RoundResultRenderer/Perfect.tsx","components/RoundResultRenderer/index.tsx","components/PartyActiveCharacter/StatBar.tsx","contexts/UIContext/index.tsx","components/PartyActiveCharacter/Items.tsx","components/PartyActiveCharacter/Name.tsx","components/CharacterIcon/index.tsx","components/PartyActiveCharacter/Image.tsx","components/PartyActiveCharacter/elements.tsx","components/PartyActiveCharacter/WeaponList.tsx","components/PartyActiveCharacter/MenuSelect.tsx","components/PartyActiveCharacter/HoverArea.tsx","elements/shapes.tsx","components/PartyActiveCharacter/index.tsx","components/PartyActiveCharacter/ArmorList.tsx","components/EquipItemModal/index.tsx","components/CombatActions/index.tsx","components/Gauge/v2.tsx","components/Gauge/index.tsx","hooks/usePrevious.ts","components/TagPreview/index.tsx","hooks/usePlayerCharacterNotifications.tsx","components/EnemyCharacter/Health.tsx","contexts/LocalToastContext/index.tsx","components/EnemyCharacter/index.tsx","components/CombatParty/index.tsx","components/AppHeader/index.tsx","components/PartyResources/index.tsx","components/CombatQueue/index.tsx","components/CombatLog/index.tsx","domain/Combat.tsx","hooks/useCombatStart.tsx","routes/index.tsx","components/Shop/index.tsx","components/Shrine/index.tsx","components/EncounterHistory/index.tsx","components/BossRewards/index.tsx","components/NonCombatEncounter/index.tsx","components/EncounterActions/Choice.tsx","util/stringArr.ts","components/EncounterActions/Shop.tsx","components/EncounterActions/Reward.tsx","components/EncounterActions/Shrine.tsx","components/EncounterActions/index.tsx","domain/Party.tsx","domain/Start.tsx","components/PartyCharacterConsumables/index.tsx","components/PartyCharacter/Stats.tsx","components/PartyCharacter/Name.tsx","components/PartyCharacter/Actions.tsx","components/PartyCharacter/Health.tsx","components/PartyCharacter/index.tsx","components/PlayerParty/index.tsx","contexts/CombatContext/context.tsx","components/AppBg/index.tsx","App.tsx","serviceWorker.ts","index.tsx","state/index.ts"],"names":["module","exports","makeReducer","core","initialState","state","action","coreFn","type","useActions","actions","dispatch","useDispatch","useMemo","bindActionCreators","ZERO_STATS","vigor","strength","intelligence","dexterity","charisma","agility","luck","armor","resistance","evasion","maxHealthOffset","healthRegeneration","damageTakenModifier","damageTakenRangeModifiers","melee","ranged","damageReflection","attackDamageOffset","attackDamageModifier","criticalChance","damageModifiers","flying","undead","queueConsolidationModifier","queueValueSet","undefined","goldModifier","maxInspirationOffset","consumableHealthGainOffset","minHealthOffset","BASE_C_STATS","CLASS_STATS","executioner","ranger","student","patrician","drifter","enemy","DAMAGE_BONUS_KEYS","DEFENSE_BONUS_KEYS","HEALTH_FOCUS_BONUS_KEYS","STAT_BONUS_KEYS","STAT_KEY_LABELS","undefAdd","a","b","combineStats","stats","reduce","result","STATUS_CONFIG","bleeding","name","description","canStack","isTemporary","duration","immunities","burning","frozen","poisoned","shocked","stunned","wet","rushed","interrupted","reset","evasive","resilient","protected","targeted","cure","noneg","value","WEAPON_DAMAGE_CONFIG","starting","axe","hammer","sword","greatsword","bow","dagger","scythe","catalyst","chime","pistol","fist","rusted","tomb","burried","withering","glass","iron","steel","stainless","ancient","crystal","elemental","cursed","sharp","hardened","engraved","ethereal","exquisite","divine","arcane","celestial","mythic","unique","BASE_WEAPON_TYPES_GOLD","WEAPON_CLASS_GOLD_OFFSETS","WEAPON_CLASS_RARIES","DEFAULT_WEAPON_TYPE_STATS","DEFAULT_WEAPON_TYPE_CONFIG","stat","twoHand","range","damageType","createWeapon","weaponType","weaponClass","skills","goldValue","damageValue","rarity","defaultStats","id","v4","itemType","breakable","damage","createBreakableWeapon","createSkill","rolls","offset","rest","damageModifier","splashDamageModifier","targetType","healing","perfectSplash","perfectPierce","perfectStatus","CHOP","SWING","WITHERING_SWING","GLASS_SWING","AXE_SPIN","FLURRY","STUN","CLEAVE","SLICE","SLASH","EXECUTIONER_AXE","AXES","0","1","2","3","4","5","SHOT","WITHERING_SHOT","GLASS_SHOT","HEADSHOT","PIN_DOWN","WOUNDING_SHOT","RANGERS_BOW","BOWS","BLAST","GLASS_BLAST","ARCANE","NOVA","ENFLAME","ENGULF","PROTECT","TIME_JUMP","STUDENTS_CATALYST","CATALYSTS","RING","WITHERING_RING","GLASS_RING","REVERBERATE","SLOW","VANISH","RUSH","RESET","PATRICIANS_CHIME","CHIMES","CLASS_WEAPONS","BASE_WEAPON","resolveCheck","character","key","statValue","getBaseStatValue","roll","DiceRoll","total","CLASS_ARMOR","considateConsumableListToStack","consumables","stack","forEach","c","cid","map","s","consumable","includes","count","updateStackItem","Theme","CHARACTER_XP_MAX","CHARACTER_CLASS_COLORS","BASE_CHARACTER","isCharacter","icon","partyId","level","experience","class","healthOffset","inspirationOffset","tags","weapon","status","possibleRewards","FISTS","HEAL","weaponStatOverride","GODSBEARD","skill","consumableId","ITEM_RARITY_COLORS","common","uncommon","rare","CLASS_STARTING_CONSUMABLES","CHARACTER_RESOURCES","checkForProcessedCharacter","processed","Error","makeCharacter","characterClass","processCharacter","r","getSkills","statusImmunities","baseVigor","startingHealth","Math","floor","maxHealth","health","maxInspiration","inspiration","rawStats","getDamageResistance","hasStatus","statusType","hasImmunity","getReflectedDamage","target","rawDamage","commitDamage","ignoreResistance","pc","rawDamageValue","filter","ceil","decrementStatusDurations","addMultipleStatus","types","durationOverride","statusConfig","existingStatus","find","findStatus","addStatus","levelUp","getRandom","items","random","length","STAB","ZERO_REWARD","gold","xp","armorDown","resDown","attackDown","armorUp","attackUp","resUp","justGold","justXp","justRandomItem","FLOOR_CONFIGS_BY_INDEX","createArmor","resource","createFootwear","createHat","createHeavyArmor","createHelmet","createLightArmor","createMagicArmor","createMagicHat","ARMOR_BY_LEVEL","SMASH","WITHERING_SMASH","GLASS_SMASH","RIPPLE","EARTHQUAKE","CRUSH","HAMMERS","STRIKE","WITHERING_STRIKE","GLASS_STRIKE","LUNGE","DAGGERS","WIDE_SWING","GREATSWORDS","FIRE","SNIPE","FAN_FIRE","PISTOLS","THRUST","ARMOR_UP","EVADE_UP","SCYTHES","SWORDS","WEAPONS","getRandomItem","Object","keys","allWeapons","parseInt","Array","fill","_","index","BANDIT","Bandit","IMPALE","FOREST_BEAST","BeastMan","STING","INFECTIOUS_STING","BEE","Bee","CULTIST_BRUTE","Icon","TORCH","CULTIST","Cultist","BITE","TIMBERWOLF","Wolf","PECK","CAW","FOREST_RAVEN","Raven","LICH_DRAIN","LICH_SCREECH","statusDurationOverride","LICH_MASS_SCREECH","LICH_SMITE","LICH","Lich","bosses","w","enemies","isParty","obj","checkForProcessedParty","party","characters","findCharacterInParty","processParty","updateCharacter","characterId","updater","makeParty","floorConfig","makeBossParty","config","getRolledRewards","checkedCharacter","rewards","i","getRewardsFromCharacter","commitRewards","goldMultiplier","addExperience","xpToNextLevel","PLAYER_PARTY_ID","SET_GOLD","actionCreators","payload","item","updateParty","upsertCharacter","deleteCharacter","upsertItem","setGold","jack","jim","john","INITIAL_STATE","makeRandomEncounter","depth","max","encounterType","makeEncounterType","encounter","choiceId","reward","boss","costs","getItemCost","results","makeEncounterList","left","right","makeFloor","encounterCount","encounters","image","encounterId","itemId","chooseCurrent","nextLevel","nextFloor","removeItem","updateCurrentFloor","floors","e","choice","defaultValue","currentChoice","currentEncounter","previousChoice","GameStateContext","React","createContext","useGameStateContext","useContext","GameStateContextProvider","props","children","useSelector","game","Provider","defaultContextValue","rawParty","activeCharacter","findCharacter","findRawCharacter","setActiveCharacter","equipItem","unequipItem","purchaseItem","cost","sellItem","PartyContext","PartyContextProvider","useState","activeCharacterId","setActiveCharacterId","existingArmor","equipArmor","existingWeapon","equipWeapon","unequipArmor","usePartyContext","isOpen","contents","callback","blocking","styles","OPEN","CLOSE","style","reducer","coreFunction","ModalContext","open","close","setBlocking","setPayload","setContents","setCallback","setStyles","useModalContext","getContextValue","Modal","setAppElement","ModalContextProvider","reducerValue","useReducer","context","onRequestClose","content","backgroundColor","color","width","margin","bottom","borderColor","modal","overlay","zIndex","FlexContainer","styled","display","flexDirection","$direction","flex","$full","FullContainer","Button","cursor","background","boxShadow","textShadow","border","outline","padding","userSelect","RedButton","withStyle","borderTop","borderBottom","animationDirection","animationIterationCount","animationName","src","size","shadow","onClick","loading","setLoading","svg","setSvg","useEffect","fetch","then","res","text","className","height","dangerouslySetInnerHTML","__html","Hover","delay","internalHovering","setInternalHovering","isHovering","setIsHovering","guid","setGuid","useLayoutEffect","setTimeout","onMouseEnter","preventDefault","stopPropagation","onMouseLeave","BoxContainer","substyle","tag","Element","boxSizing","defense_key_colors","StatsPreview","fontSize","textTransform","STAT_ICONS","Vigor","Strength","Brain","Awareness","Juggler","Agility","Clover","STATUS_ICONS","Dazed","Targeted","Evasive","Protect","SpeedDown","Poisoned","Burning","Bleeding","Snowflake","ArmorDown","SKILL_ICONS","Shot","Headshot","PinDown","Flurry","SpreadShot","Arcane","Nova","Ring","Reverberate","Smash","Strike","Swing","Chop","Thrust","Scythe","Earthquake","Shockwave","Ripple","AxeSpin","Cleave","Lunge","Stab","Slice","Swipe","Stun","Reset","Taunt","Slow","TimeJump","Heal","Restore","Rush","Vanish","Dodging","ArmorUp","ARMOR_TYPE_ICONS","MagicArmor","ClothArmor","Armor","shield","Shield","ward","MagicShield","footwear","Footwear","hat","Hat","MagicHat","helmet","Helmet","charm","ring","WEAPON_TYPE_ICONS","Axe","Blunt","Bow","Dagger","Chime","Handgun","MagicStaff","Sword","Greatsword","Fist","RESOURCE_ICONS","Weapon","offhand","body","head","feet","CONSUMABLE_ITEM_ICONS","Godsbeard","CONSUMABLE_ITEM_COLORS","CHARACTER_CLASS_ICONS","Executioner","Bard","Hunter","Scholar","Hobo","Tooltip","direction","tagName","arrow","HoverToolTip","ClickToolTip","setIsOpen","ref","useRef","handler","listener","event","current","contains","document","addEventListener","removeEventListener","useOnClickOutside","p","v","Div","transform","Badge","withWrapper","$style","position","$absolute","fontFamily","$size","alignItems","justifyContent","lineHeight","borderRadius","$color","top","$top","$bottom","$right","$left","transition","SkillChecks","console","log","minHeight","perfect","every","check","label","SkillCheck","crit","colors","getPerfectStatusColors","opacity","getColor","X","ArmorPreview","showEquipButton","showBuyButton","onEquipClick","onBuyClick","rarityColor","from","Color","darken","rgb","toString","to","gradient","minWidth","marginBottom","marginRight","fontWeight","marginLeft","textAlign","marginTop","FakeLink","whiteSpace","textDecoration","PERFECT_DISPLAY_INFO","splash","pierce","heal","getTargetSkillResult","sourceResult","dodgeResult","dodgeSuccess","source","getRawDamage","totalDamage","reflectedDamage","loggedDamgge","getSkillResult","targets","rollResults","passedCount","criticalHitSuccess","rollDamageModifier","round","weaponRangeOverride","accuracySuccess","weaponDidBreak","splashDamage","addedStatus","getSourceSkillResult","targetResults","resolveSkillTarget","makeSkillTarget","getSkillDamage","getPerfectText","perfectKeys","base","getPerfectKeys","pre","SkillPreview","perfectChance","getDamageColor","WeaponPreview","basicAttack","Melee","Ranged","Hands","flexWrap","Fragment","paddingLeft","ConsumablePreview","ItemPreivew","Monospace","Monodiv","Span","SkillSpan","CombatLogContext","combatLog","clear","useCombatLogContext","CombatLogContextProvider","useCombatContext","activeRound","roundResults","enemyParty","setCombatLog","deadLog","setDeadLog","NameSpan","isUserParty","isEnemyParty","NameSpanBuilder","line","dLog","latestRounds","baseRound","targetParty","subTarget","splashDamageResistance","CombatVictoryModal","consolidatedRewards","consolidateRewards","setItems","first","Gold","XP","makeCombatQueue","sortedCharacters","sort","validateQueue","AGILITY_OFFSET","consolidateQueue","queue","min","Number","POSITIVE_INFINITY","getMin","shiftQueue","getFirst","commitQueueUpdates","pcs","shiftedQueue","q","partyUpdater","commitSkillResults","playerParty","targetResult","sourceParty","localUpdate","selectedSkill","selectedTargets","selectedConsumableIndex","isRunning","isRenderingResult","onSkillSelect","onTargetsSelect","onConsumableSelect","consumableIndex","start","next","commit","equipItemCombat","CombatContext","CombatContextProvider","setEnemyParty","onRequestNewParty","history","useHistory","setIsRunning","setIsRenderingResult","setQueue","resultCommitter","roundId","setRoundId","setRoundResults","setActiveRound","selectedTarget","setSelectedTarget","setSelectedSkill","setSelectedConsumableIndex","completeRound","useCallback","targetedCharacters","t","getSkillTargetOptions","getAIAction","execEnemyTurn","alert","push","nextTarget","roundTarget","Perfect","show","useSpring","div","RoundResultRenderer","isModal","RoundResult","isDone","setIsDone","activeIndex","setActiveIndex","stream","Kefir","sequentially","onValue","onEnd","later","showPerfect","isPlayer","showTarget","lighten","hex","getStatColor","StatBar","paddingTop","paddingBottom","playerCanEquipItem","openCharacterInventoryId","showSkillTooltips","onCharacterConsumableClick","setPlayerCanEquipItem","setOpenCharacterInventoryId","setOnCharacterConsumableClick","fn","setShowSkillTooltips","UIContext","useUIContext","UIContextProvider","_setOnCharacterConsumableClick","ItemRow","$disabled","Items","setActiveItem","disabled","onHover","canUnequip","Item","distance","Name","CharacterIcon","iconStyle","overflow","Image","Row","$active","ActionsRow","WeaponList","canEquip","onEquipItem","activeItemId","setActiveItemId","condenseListToStack","localeCompare","ACTIVE_CHARACTER_MENU_KEYS","Weapons","render","MenuSelect","activeKey","onActiveKeyChange","option","paddingRight","HoverArea","activeItem","foundArmor","Hexagon","childStyle","mod","boxW","boxH","triH","triW","tHeight","borderRight","borderLeft","HexBadge","rotate","angle","HoverHexBadge","PartyActiveCharacter","activeMenuKey","setActiveMenuKey","activeOption","o","maxHeight","ArmorList","EquipItemModal","CombatActions","Inventory","Gauge2","percentage","oldPercentage","setOldPercentage","friction","mass","tension","maxWidth","Gauge","usePrevious","HealthGauge","showNumbers","XPGauge","TagPreview","immunity","usePlayerCharacterNotifications","previousHealth","setPreviousHealth","previousLevel","setPreviousLevel","healthDiff","abs","lastRound","chResult","Health","hp","clamp","hpp","Toast","animation","useTransition","enter","leave","LocalToastRp","EnemyCharacter","$selected","isBoss","active","borderWidth","CombatParty","AppHeader","PartyResources","CombatQueue","sortedIds","getSortedIds","bigList","NEGATIVE_INFINITY","getMax","widthCoef","CombatLog","scrollRef","isExpanded","setIsExpanded","scrollIntoView","behavior","Combat","useCombatStart","makeRoute","path","Component","RouteController","CardList","tabs","Shop","activeTab","setActiveTab","tab","overflowY","Shrine","setResults","JSON","stringify","EncounterHistory","chosenEncounters","getIcon","Boss","Reward","Unknown","f","fi","BossRewards","NonCombatEncounter","Choice","arr","previousEncounter","l","getChoiceText","EncounterActions","Party","parties","Start","onChange","rc","StartCharacterCard","PartyCharacterConsumables","onStackClick","filler","ConsumableBox","HEIGHT","PartyCharacterConsumable","PartyCharacterConsumableTooltip","CharacterStat","statKey","ResourceE","Stats","Actions","inventoryOpen","inventoryStyle","storedHealth","setStoredHealth","Wrapper","$targeted","Halo","$light","leftR","PartyCharacter","selected","showActions","onConsumableClick","targetIds","PlayerParty","onCharacterClick","showConfirmButton","LinkedCombatContext","combatParty","setCombatParty","AppBg","bg","Forest1","Forest2","Forest3","Dungeon1","getEncounterBg","backgroundSize","CombatDomain","GlobalCharacters","App","Boolean","window","location","hostname","match","engine","Styletron","store","createStore","combineReducers","compose","applyMiddleware","thunk","ReactDOM","StrictMode","debug","debugAfterHydration","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,kBCA3CD,EAAOC,QAAU,IAA0B,+B,wBCA3CD,EAAOC,QAAU,IAA0B,qC,iBCA3CD,EAAOC,QAAU,IAA0B,+B,4BCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,kD,gBCA3CD,EAAOC,QAAU,IAA0B,sC,sCCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,oECA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,iBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IA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","file":"static/js/main.2ed50f7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/coins.97dc8c40.svg\";","module.exports = __webpack_public_path__ + \"static/media/broadsword.47ecfebc.svg\";","module.exports = __webpack_public_path__ + \"static/media/7.d2e528ea.png\";","module.exports = __webpack_public_path__ + \"static/media/dodging.3c689d6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/8.d80166bd.png\";","module.exports = __webpack_public_path__ + \"static/media/laurel-crown.00b6e803.svg\";","module.exports = __webpack_public_path__ + \"static/media/ringing-bell.f8953cca.svg\";","module.exports = __webpack_public_path__ + \"static/media/perspective-dice-six.8b7e2589.svg\";","module.exports = __webpack_public_path__ + \"static/media/knapsack.62049a62.svg\";","module.exports = __webpack_public_path__ + \"static/media/sprint.968b443a.svg\";","module.exports = __webpack_public_path__ + \"static/media/hammer-drop.120a92c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/shieldcomb.802f20f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/axe-in-stump.cd8a3e4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/saber-slash.54b5f3f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/chest-armor.f1f52a3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/viking-shield.a61f8230.svg\";","module.exports = __webpack_public_path__ + \"static/media/leather-boot.89b85474.svg\";","module.exports = __webpack_public_path__ + \"static/media/visored-helm.1f2ced7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/scythe.f0a97d33.svg\";","module.exports = __webpack_public_path__ + \"static/media/bandit.f798765b.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.a7dcd7d0.png\";","module.exports = __webpack_public_path__ + \"static/media/3.5b81afea.png\";","module.exports = __webpack_public_path__ + \"static/media/orc-head.ff410513.svg\";","module.exports = __webpack_public_path__ + \"static/media/bee.7b0a0467.svg\";","module.exports = __webpack_public_path__ + \"static/media/kenku-head.3292e596.svg\";","module.exports = __webpack_public_path__ + \"static/media/cultist.998af3b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/wolf-head.4e7bf362.svg\";","module.exports = __webpack_public_path__ + \"static/media/raven.581ee1b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/overlord-helm.03e5b513.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-beats.6b1fff9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/biceps.e62c221f.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain.ce65603a.svg\";","module.exports = __webpack_public_path__ + \"static/media/eye-target.4c5ae680.svg\";","module.exports = __webpack_public_path__ + \"static/media/juggler.1188c0be.svg\";","module.exports = __webpack_public_path__ + \"static/media/clover.df6a0d57.svg\";","module.exports = __webpack_public_path__ + \"static/media/star-swirl.3045bd1f.svg\";","module.exports = __webpack_public_path__ + \"static/media/targeted.b4ce8dd7.svg\";","module.exports = __webpack_public_path__ + \"static/media/sticky-boot.f097559f.svg\";","module.exports = __webpack_public_path__ + \"static/media/biohazard.cdfb567d.svg\";","module.exports = __webpack_public_path__ + \"static/media/flame.332be8c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/bleeding-wound.8d92779f.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowflake-2.a0b68bb3.svg\";","module.exports = __webpack_public_path__ + \"static/media/broken-shield.c26ddd72.svg\";","module.exports = __webpack_public_path__ + \"static/media/high-shot.eed9def8.svg\";","module.exports = __webpack_public_path__ + \"static/media/shield-impact.54fdc5c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire-zone.42e13657.svg\";","module.exports = __webpack_public_path__ + \"static/media/heavy-timer.1072a406.svg\";","module.exports = __webpack_public_path__ + \"static/media/ubisoft-sun.30335592.svg\";","module.exports = __webpack_public_path__ + \"static/media/flat-hammer.dff14efb.svg\";","module.exports = __webpack_public_path__ + \"static/media/bordered-shield.56c12b47.svg\";","module.exports = __webpack_public_path__ + \"static/media/resonance.4c1d217b.svg\";","module.exports = __webpack_public_path__ + \"static/media/energy-arrow.514fc56c.svg\";","module.exports = __webpack_public_path__ + \"static/media/backward-time.d0246d45.svg\";","module.exports = __webpack_public_path__ + \"static/media/snail.bbbe7b78.svg\";","module.exports = __webpack_public_path__ + \"static/media/double-shot.70211522.svg\";","module.exports = __webpack_public_path__ + \"static/media/extra-time.4d418333.svg\";","module.exports = __webpack_public_path__ + \"static/media/health-normal.0da85e24.svg\";","module.exports = __webpack_public_path__ + \"static/media/wave-strike.1fe6dbab.svg\";","module.exports = __webpack_public_path__ + \"static/media/life-support.c0c7c040.svg\";","module.exports = __webpack_public_path__ + \"static/media/plain-dagger.0509dd2c.svg\";","module.exports = __webpack_public_path__ + \"static/media/knife-thrust.1e29ef7c.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointy-sword.bd82b38d.svg\";","module.exports = __webpack_public_path__ + \"static/media/axe-swing.6958cc19.svg\";","module.exports = __webpack_public_path__ + \"static/media/vibrating-shield.14198b16.svg\";","module.exports = __webpack_public_path__ + \"static/media/robe.5b61ecba.svg\";","module.exports = __webpack_public_path__ + \"static/media/scale-mail.cb5ff7d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/lightning-shield.85367254.svg\";","module.exports = __webpack_public_path__ + \"static/media/robin-hood-hat.6bab1449.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointy-hat.d042ac98.svg\";","module.exports = __webpack_public_path__ + \"static/media/battle-axe.47a5ba50.svg\";","module.exports = __webpack_public_path__ + \"static/media/gavel.e0256fff.svg\";","module.exports = __webpack_public_path__ + \"static/media/heavy-arrow.56b29a8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/bowie-knife.e7821736.svg\";","module.exports = __webpack_public_path__ + \"static/media/revolver.25251236.svg\";","module.exports = __webpack_public_path__ + \"static/media/wizard-staff.3e6091b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/croc-sword.dfa5ecf6.svg\";","module.exports = __webpack_public_path__ + \"static/media/fist.d1b25a44.svg\";","module.exports = __webpack_public_path__ + \"static/media/herbs-bundle.e02bcec1.svg\";","module.exports = __webpack_public_path__ + \"static/media/executioner-hood.6e796b5c.svg\";","module.exports = __webpack_public_path__ + \"static/media/cowled.d0cad9db.svg\";","module.exports = __webpack_public_path__ + \"static/media/female-vampire.27d5f882.svg\";","module.exports = __webpack_public_path__ + \"static/media/wizard-face.2a49683a.svg\";","module.exports = __webpack_public_path__ + \"static/media/split-cross.fa0be1a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/hand.7bd9b12d.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-wings.bb52c66a.svg\";","module.exports = __webpack_public_path__ + \"static/media/battered-axe.819d2726.svg\";","module.exports = __webpack_public_path__ + \"static/media/leather-armor.f3d5462f.svg\";","module.exports = __webpack_public_path__ + \"static/media/crossed-swords.b7d2c27a.svg\";","module.exports = __webpack_public_path__ + \"static/media/divided-spiral.a8e90e0d.svg\";","module.exports = __webpack_public_path__ + \"static/media/crowned-skull.458d8f78.svg\";","import { StateCoreT, StateReducerT } from './types'\r\n\r\nexport const makeReducer = (\r\n  core: StateCoreT,\r\n  initialState: any,\r\n): StateReducerT => {\r\n  return (state = initialState, action) => {\r\n    const coreFn = core[action.type]\r\n    if (coreFn) return coreFn(state, action)\r\n    return state\r\n  }\r\n}\r\n","import { useMemo } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nexport const useActions = (actions: any) => {\r\n  const dispatch = useDispatch()\r\n  return useMemo(() => bindActionCreators(actions, dispatch), [\r\n    dispatch,\r\n    actions,\r\n  ])\r\n}\r\n","import { tStats, tBaseStats } from './type'\r\nimport { tCharacterClass } from '../Character/type'\r\n\r\nexport const ZERO_STATS: tStats = {\r\n  vigor: 0,\r\n  strength: 0,\r\n  intelligence: 0,\r\n  dexterity: 0,\r\n  charisma: 0,\r\n  agility: 0,\r\n  luck: 0,\r\n\r\n  armor: 0,\r\n  resistance: 0,\r\n  evasion: 0,\r\n\r\n  maxHealthOffset: 0,\r\n  healthRegeneration: 0,\r\n  damageTakenModifier: 0,\r\n  damageTakenRangeModifiers: {\r\n    melee: 0,\r\n    ranged: 0,\r\n  },\r\n  damageReflection: {\r\n    melee: 0,\r\n    ranged: 0,\r\n  },\r\n\r\n  attackDamageOffset: 0,\r\n  attackDamageModifier: 0,\r\n  criticalChance: 0,\r\n  damageModifiers: {\r\n    flying: 0,\r\n    undead: 0,\r\n  },\r\n\r\n  queueConsolidationModifier: 0,\r\n  queueValueSet: undefined,\r\n\r\n  goldModifier: 0,\r\n  maxInspirationOffset: 0,\r\n  consumableHealthGainOffset: 0,\r\n  minHealthOffset: 0,\r\n}\r\n\r\nexport const BASE_C_STATS: tStats = {\r\n  ...ZERO_STATS,\r\n  damageTakenModifier: 1,\r\n  attackDamageModifier: 1,\r\n  criticalChance: 5,\r\n  queueConsolidationModifier: 1,\r\n  consumableHealthGainOffset: 15,\r\n}\r\n\r\nexport const CLASS_STATS: Record<tCharacterClass, tStats> = {\r\n  executioner: {\r\n    ...BASE_C_STATS,\r\n    strength: 76,\r\n    vigor: 80,\r\n    intelligence: 40,\r\n    dexterity: 52,\r\n    charisma: 72,\r\n    agility: 56,\r\n    luck: 50,\r\n    armor: 2,\r\n    resistance: 0,\r\n    evasion: 7,\r\n  },\r\n  ranger: {\r\n    ...BASE_C_STATS,\r\n    strength: 52,\r\n    vigor: 66,\r\n    intelligence: 46,\r\n    dexterity: 78,\r\n    charisma: 64,\r\n    agility: 78,\r\n    luck: 50,\r\n    armor: 1,\r\n    resistance: 0,\r\n    evasion: 20,\r\n  },\r\n  student: {\r\n    ...BASE_C_STATS,\r\n    strength: 42,\r\n    vigor: 60,\r\n    intelligence: 78,\r\n    dexterity: 66,\r\n    charisma: 70,\r\n    agility: 70,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 1,\r\n    evasion: 13,\r\n  },\r\n  patrician: {\r\n    ...BASE_C_STATS,\r\n    strength: 44,\r\n    vigor: 50,\r\n    intelligence: 70,\r\n    dexterity: 68,\r\n    charisma: 78,\r\n    agility: 68,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 1,\r\n    evasion: 11,\r\n  },\r\n  drifter: {\r\n    ...BASE_C_STATS,\r\n    strength: 70,\r\n    vigor: 70,\r\n    intelligence: 70,\r\n    dexterity: 70,\r\n    charisma: 70,\r\n    agility: 70,\r\n    luck: 30,\r\n    armor: 1,\r\n    resistance: 1,\r\n    evasion: 13,\r\n  },\r\n  enemy: BASE_C_STATS,\r\n}\r\n\r\nexport const DAMAGE_BONUS_KEYS: (keyof tStats)[] = [\r\n  'goldModifier',\r\n  'attackDamageOffset',\r\n  'attackDamageModifier',\r\n  'criticalChance',\r\n]\r\nexport const DEFENSE_BONUS_KEYS: (keyof tStats)[] = [\r\n  'armor',\r\n  'resistance',\r\n  'evasion',\r\n  'healthRegeneration',\r\n  'damageReflection',\r\n]\r\nexport const HEALTH_FOCUS_BONUS_KEYS: (keyof tStats)[] = [\r\n  'maxHealthOffset',\r\n  'maxInspirationOffset',\r\n]\r\nexport const STAT_BONUS_KEYS: (keyof tBaseStats)[] = [\r\n  'vigor',\r\n  'strength',\r\n  'intelligence',\r\n  'dexterity',\r\n  'charisma',\r\n  'agility',\r\n  'luck',\r\n]\r\n\r\nexport const STAT_KEY_LABELS: Record<keyof tStats, string> = {\r\n  strength: ' Strength',\r\n  vigor: ' Vigor',\r\n  intelligence: ' Intelligence',\r\n  dexterity: ' Dexterity',\r\n  charisma: ' Charisma',\r\n  agility: ' Agility',\r\n  luck: ' Luck',\r\n  evasion: ' Evasion',\r\n  criticalChance: '% Crit Chance',\r\n\r\n  armor: ' Armor',\r\n  resistance: ' Resistance',\r\n\r\n  maxHealthOffset: ' Health',\r\n  healthRegeneration: ' Health Regen',\r\n  damageReflection: ' Damage Reflection',\r\n  damageTakenModifier: '% Recieved Damage',\r\n  damageTakenRangeModifiers: '% Recieved Damage from certain sources',\r\n\r\n  damageModifiers: ' Damage to certain Enemeies',\r\n\r\n  queueConsolidationModifier: ' Queue Consolidation Modifier',\r\n  queueValueSet: ' Queue Value Set',\r\n\r\n  attackDamageOffset: ' Raw Damage',\r\n  attackDamageModifier: '% Attack Damage',\r\n\r\n  goldModifier: '% Gold Recieved',\r\n  maxInspirationOffset: ' Max Inspiration',\r\n  minHealthOffset: ' Minumum Health',\r\n  consumableHealthGainOffset: ' HP from Consumables',\r\n}\r\n","export const undefAdd = (\r\n  a: number | undefined,\r\n  b: number | undefined,\r\n): number | undefined => {\r\n  if (a === undefined && b === undefined) return undefined\r\n  if (a === undefined && b !== undefined) return b\r\n  if (a !== undefined && b === undefined) return a\r\n  if (a !== undefined && b !== undefined) return a + b\r\n}\r\n","import { tStats } from './type'\r\nimport { ZERO_STATS } from './constants'\r\nimport { undefAdd } from '../../util/undefAdd'\r\n\r\nexport const combineStats = (...stats: tStats[]) => {\r\n  return stats.reduce(\r\n    (result, stats) => ({\r\n      vigor: result.vigor + stats.vigor,\r\n      strength: result.strength + stats.strength,\r\n      intelligence: result.intelligence + stats.intelligence,\r\n      dexterity: result.dexterity + stats.dexterity,\r\n      charisma: result.charisma + stats.charisma,\r\n      agility: result.agility + stats.agility,\r\n      luck: result.luck + stats.luck,\r\n\r\n      armor: result.armor + stats.armor,\r\n      resistance: result.resistance + stats.resistance,\r\n      evasion: result.evasion + stats.evasion,\r\n\r\n      maxHealthOffset: result.maxHealthOffset + stats.maxHealthOffset,\r\n      healthRegeneration: result.healthRegeneration + stats.healthRegeneration,\r\n      damageTakenModifier:\r\n        result.damageTakenModifier + stats.damageTakenModifier,\r\n      damageTakenRangeModifiers: {\r\n        melee:\r\n          result.damageTakenRangeModifiers.melee +\r\n          stats.damageTakenRangeModifiers.melee,\r\n        ranged:\r\n          result.damageTakenRangeModifiers.ranged +\r\n          stats.damageTakenRangeModifiers.ranged,\r\n      },\r\n      damageReflection: {\r\n        melee: result.damageReflection.melee + stats.damageReflection.melee,\r\n        ranged: result.damageReflection.ranged + stats.damageReflection.ranged,\r\n      },\r\n\r\n      attackDamageOffset: result.attackDamageOffset + stats.attackDamageOffset,\r\n      attackDamageModifier:\r\n        result.attackDamageModifier + stats.attackDamageModifier,\r\n      criticalChance: result.criticalChance + stats.criticalChance,\r\n      damageModifiers: {\r\n        flying: result.damageModifiers.flying + stats.damageModifiers.flying,\r\n        undead: result.damageModifiers.undead + stats.damageModifiers.undead,\r\n      },\r\n\r\n      queueConsolidationModifier:\r\n        result.queueConsolidationModifier + stats.queueConsolidationModifier,\r\n      queueValueSet: undefAdd(result.queueValueSet, stats.queueValueSet),\r\n\r\n      goldModifier: result.goldModifier + stats.goldModifier,\r\n      maxInspirationOffset:\r\n        result.maxInspirationOffset + stats.maxInspirationOffset,\r\n      consumableHealthGainOffset:\r\n        result.consumableHealthGainOffset + stats.consumableHealthGainOffset,\r\n      minHealthOffset: result.minHealthOffset + stats.minHealthOffset,\r\n    }),\r\n    ZERO_STATS,\r\n  )\r\n}\r\n\r\nexport const multiplyStats = (stats: tStats, modifier: number): tStats => ({\r\n  vigor: stats.vigor * modifier,\r\n  strength: stats.strength * modifier,\r\n  intelligence: stats.intelligence * modifier,\r\n  dexterity: stats.dexterity * modifier,\r\n  charisma: stats.charisma * modifier,\r\n  agility: stats.agility * modifier,\r\n  luck: stats.luck * modifier,\r\n\r\n  armor: stats.armor * modifier,\r\n  resistance: stats.resistance * modifier,\r\n  evasion: stats.evasion * modifier,\r\n\r\n  maxHealthOffset: stats.maxHealthOffset * modifier,\r\n  healthRegeneration: stats.healthRegeneration * modifier,\r\n  damageTakenModifier: stats.damageTakenModifier * modifier,\r\n  damageTakenRangeModifiers: {\r\n    melee: stats.damageTakenRangeModifiers.melee * modifier,\r\n    ranged: stats.damageTakenRangeModifiers.ranged * modifier,\r\n  },\r\n  damageReflection: {\r\n    melee: stats.damageReflection.melee * modifier,\r\n    ranged: stats.damageReflection.ranged * modifier,\r\n  },\r\n\r\n  attackDamageOffset: stats.attackDamageOffset * modifier,\r\n  attackDamageModifier: stats.attackDamageModifier * modifier,\r\n  criticalChance: stats.criticalChance * modifier,\r\n  damageModifiers: {\r\n    flying: stats.damageModifiers.flying * modifier,\r\n    undead: stats.damageModifiers.undead * modifier,\r\n  },\r\n\r\n  queueConsolidationModifier: stats.queueConsolidationModifier * modifier,\r\n  queueValueSet: stats.queueValueSet,\r\n\r\n  goldModifier: stats.goldModifier * modifier,\r\n  maxInspirationOffset: stats.maxInspirationOffset * modifier,\r\n  consumableHealthGainOffset: stats.consumableHealthGainOffset * modifier,\r\n  minHealthOffset: stats.minHealthOffset * modifier,\r\n})\r\n","import { tStatusType, tStatusConfig } from './type'\r\nimport { ZERO_STATS } from '../Stats/constants'\r\n\r\nexport const STATUS_CONFIG: Record<tStatusType, tStatusConfig> = {\r\n  bleeding: {\r\n    name: 'Bleeding',\r\n    description: '-10 HP on your turn.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      healthRegeneration: -6,\r\n    },\r\n    immunities: [],\r\n  },\r\n  burning: {\r\n    name: 'Burning',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      healthRegeneration: -6,\r\n    },\r\n    immunities: [],\r\n  },\r\n  // TODO: Different cursed status' for different stats\r\n  'cursed-vigor': {\r\n    name: 'Cursed',\r\n    description: '-15 to Vigor',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      vigor: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-strength': {\r\n    name: 'Cursed',\r\n    description: '-15 to Strength',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      strength: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-dexterity': {\r\n    name: 'Cursed',\r\n    description: '-15 to Strength',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      dexterity: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-intelligence': {\r\n    name: 'Cursed',\r\n    description: '-15 to Strength',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      intelligence: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-charisma': {\r\n    name: 'Cursed',\r\n    description: '-15 to Strength',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      charisma: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-agility': {\r\n    name: 'Cursed',\r\n    description: '-15 to Strength',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      agility: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-luck': {\r\n    name: 'Cursed',\r\n    description: '-15 to Strength',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      luck: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  frozen: {\r\n    name: 'Frozen',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      damageTakenModifier: 25,\r\n    },\r\n    immunities: [],\r\n  },\r\n  poisoned: {\r\n    name: 'Poisoned',\r\n    description: \"-5 HP on this character's turn and -5 to each stat.\",\r\n    canStack: true,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      vigor: -5,\r\n      strength: -5,\r\n      intelligence: -5,\r\n      dexterity: -5,\r\n      charisma: -5,\r\n      healthRegeneration: -3,\r\n    },\r\n    immunities: [],\r\n  },\r\n  // TODO: Shocked status\r\n  shocked: {\r\n    name: 'Shocked',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  stunned: {\r\n    name: 'Stunned',\r\n    description: 'This character will not progress on the battle timeline.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 2,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueConsolidationModifier: -1,\r\n    },\r\n    immunities: [],\r\n  },\r\n  // TODO: Wet Status\r\n  wet: {\r\n    name: 'Wet',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'armor-up': {\r\n    name: 'Armor Up',\r\n    description: '+5 Armor',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      armor: 5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'attack-up': {\r\n    name: 'Attack Up',\r\n    description: '+5 Attack Damage',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      attackDamageOffset: 5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'evade-up': {\r\n    name: 'Evade Up',\r\n    description: '+15 Evasion',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      evasion: 15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'resistance-up': {\r\n    name: 'Resistance Up',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      resistance: 5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'speed-up': {\r\n    name: 'Speed Up',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      agility: 15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'armor-down': {\r\n    name: 'Armor Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      armor: -5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'attack-down': {\r\n    name: 'Attack Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      attackDamageOffset: -5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'evade-down': {\r\n    name: 'Evade Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      evasion: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'resistance-down': {\r\n    name: 'Resistance Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      resistance: -5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'speed-down': {\r\n    name: 'Speed Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      agility: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  rushed: {\r\n    name: 'Rushed',\r\n    description: 'Bring to front of queue.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 0,\r\n    },\r\n    immunities: [],\r\n  },\r\n  interrupted: {\r\n    name: 'Interrupted',\r\n    description: 'Set back 70 unites.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 70,\r\n    },\r\n    immunities: [],\r\n  },\r\n  reset: {\r\n    name: 'Reset',\r\n    description: 'Set back 100 units.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 100,\r\n    },\r\n    immunities: [],\r\n  },\r\n  evasive: {\r\n    name: 'Evasive',\r\n    description: 'Non-perfect attacks will miss when targeting this character.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  resilient: {\r\n    name: 'Resilient',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  protected: {\r\n    name: 'Protected',\r\n    description: 'Negate the next bit of damage.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  targeted: {\r\n    name: 'Targeted',\r\n    description: 'All enemies will attack this player.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 6,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  cure: {\r\n    name: 'Cure',\r\n    description: 'remove Poisoned, Bleeding, and Burning',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: ['poisoned', 'bleeding', 'burning', 'frozen', 'wet', 'shocked'],\r\n  },\r\n}\r\n","export const noneg = (value: number) => (value > 0 ? value : 0)\r\n","import { tWeaponClassDamageConfig, tWeaponTypeDamageConfig } from './type'\r\n\r\nexport const GLOBAL_DAMAGE_OFFSETS: tWeaponTypeDamageConfig = {\r\n  axe: 0,\r\n  hammer: 0,\r\n  sword: 0,\r\n  greatsword: 0,\r\n  bow: 0,\r\n  dagger: 0,\r\n  scythe: 0,\r\n  catalyst: 0,\r\n  chime: 0,\r\n  pistol: 0,\r\n  fist: 0,\r\n  enemy: 0,\r\n}\r\nexport const WEAPON_DAMAGE_CONFIG: tWeaponClassDamageConfig = {\r\n  starting: {\r\n    axe: 12,\r\n    hammer: 10,\r\n    sword: 8,\r\n    greatsword: 13,\r\n    bow: 6,\r\n    dagger: 5,\r\n    scythe: 8,\r\n    catalyst: 6,\r\n    chime: 6,\r\n    pistol: 5,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  // LEVEL 1 ccc ur\r\n  rusted: {\r\n    // higher damage than tomb, but worse skills\r\n    axe: 14,\r\n    hammer: 12,\r\n    sword: 11,\r\n    greatsword: 15,\r\n    bow: 14,\r\n    dagger: 7,\r\n    scythe: 12,\r\n    catalyst: 9,\r\n    chime: 9,\r\n    pistol: 7,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  tomb: {\r\n    axe: 15,\r\n    hammer: 12,\r\n    sword: 12,\r\n    greatsword: 16,\r\n    bow: 14,\r\n    dagger: 8,\r\n    scythe: 13,\r\n    catalyst: 12,\r\n    chime: 12,\r\n    pistol: 8,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  burried: {\r\n    axe: 16,\r\n    hammer: 13,\r\n    sword: 13,\r\n    greatsword: 17,\r\n    bow: 15,\r\n    dagger: 9,\r\n    scythe: 13,\r\n    catalyst: 13,\r\n    chime: 13,\r\n    pistol: 9,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  withering: {\r\n    axe: 18,\r\n    hammer: 15,\r\n    sword: 15,\r\n    greatsword: 19,\r\n    bow: 17,\r\n    dagger: 12,\r\n    scythe: 15,\r\n    catalyst: 16,\r\n    chime: 16,\r\n    pistol: 10,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  glass: {\r\n    axe: 22,\r\n    hammer: 18,\r\n    sword: 18,\r\n    greatsword: 23,\r\n    bow: 21,\r\n    dagger: 16,\r\n    scythe: 21,\r\n    catalyst: 21,\r\n    chime: 21,\r\n    pistol: 16,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 2 ccc\r\n  iron: {\r\n    axe: 19,\r\n    hammer: 16,\r\n    sword: 16,\r\n    greatsword: 20,\r\n    bow: 18,\r\n    dagger: 12,\r\n    scythe: 16,\r\n    catalyst: 16,\r\n    chime: 16,\r\n    pistol: 12,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  steel: {\r\n    axe: 20,\r\n    hammer: 17,\r\n    sword: 17,\r\n    greatsword: 21,\r\n    bow: 19,\r\n    dagger: 13,\r\n    scythe: 17,\r\n    catalyst: 17,\r\n    chime: 17,\r\n    pistol: 13,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  stainless: {\r\n    axe: 21,\r\n    hammer: 18,\r\n    sword: 18,\r\n    greatsword: 22,\r\n    bow: 20,\r\n    dagger: 14,\r\n    scythe: 18,\r\n    catalyst: 18,\r\n    chime: 18,\r\n    pistol: 14,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 3 ur rr\r\n  ancient: {\r\n    axe: 24,\r\n    hammer: 21,\r\n    sword: 21,\r\n    greatsword: 25,\r\n    bow: 23,\r\n    dagger: 17,\r\n    scythe: 21,\r\n    catalyst: 21,\r\n    chime: 21,\r\n    pistol: 17,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  crystal: {\r\n    axe: 26,\r\n    hammer: 23,\r\n    sword: 23,\r\n    greatsword: 27,\r\n    bow: 25,\r\n    dagger: 20,\r\n    scythe: 23,\r\n    catalyst: 23,\r\n    chime: 23,\r\n    pistol: 20,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  elemental: {\r\n    axe: 24,\r\n    hammer: 21,\r\n    sword: 21,\r\n    greatsword: 25,\r\n    bow: 23,\r\n    dagger: 17,\r\n    scythe: 21,\r\n    catalyst: 21,\r\n    chime: 21,\r\n    pistol: 17,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  cursed: {\r\n    axe: 25,\r\n    hammer: 22,\r\n    sword: 22,\r\n    greatsword: 26,\r\n    bow: 24,\r\n    dagger: 18,\r\n    scythe: 22,\r\n    catalyst: 22,\r\n    chime: 22,\r\n    pistol: 18,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 4 cuu r\r\n  sharp: {\r\n    axe: 28,\r\n    hammer: 25,\r\n    sword: 25,\r\n    greatsword: 29,\r\n    bow: 26,\r\n    dagger: 21,\r\n    scythe: 25,\r\n    catalyst: 26,\r\n    chime: 26,\r\n    pistol: 21,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  hardened: {\r\n    axe: 30,\r\n    hammer: 27,\r\n    sword: 27,\r\n    greatsword: 31,\r\n    bow: 28,\r\n    dagger: 23,\r\n    scythe: 27,\r\n    catalyst: 28,\r\n    chime: 28,\r\n    pistol: 23,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  engraved: {\r\n    axe: 31,\r\n    hammer: 28,\r\n    sword: 28,\r\n    greatsword: 32,\r\n    bow: 29,\r\n    dagger: 24,\r\n    scythe: 28,\r\n    catalyst: 29,\r\n    chime: 29,\r\n    pistol: 24,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  ethereal: {\r\n    axe: 34,\r\n    hammer: 32,\r\n    sword: 32,\r\n    greatsword: 35,\r\n    bow: 33,\r\n    dagger: 27,\r\n    scythe: 31,\r\n    catalyst: 32,\r\n    chime: 32,\r\n    pistol: 27,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 5 ur mm\r\n  exquisite: {\r\n    axe: 33,\r\n    hammer: 31,\r\n    sword: 31,\r\n    greatsword: 34,\r\n    bow: 32,\r\n    dagger: 26,\r\n    scythe: 30,\r\n    catalyst: 31,\r\n    chime: 31,\r\n    pistol: 26,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  divine: {\r\n    axe: 35,\r\n    hammer: 33,\r\n    sword: 33,\r\n    greatsword: 36,\r\n    bow: 34,\r\n    dagger: 28,\r\n    scythe: 32,\r\n    catalyst: 33,\r\n    chime: 33,\r\n    pistol: 28,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  arcane: {\r\n    axe: 36,\r\n    hammer: 33,\r\n    sword: 33,\r\n    greatsword: 37,\r\n    bow: 35,\r\n    dagger: 29,\r\n    scythe: 33,\r\n    catalyst: 34,\r\n    chime: 34,\r\n    pistol: 29,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  celestial: {\r\n    axe: 38,\r\n    hammer: 35,\r\n    sword: 35,\r\n    greatsword: 39,\r\n    bow: 37,\r\n    dagger: 31,\r\n    scythe: 35,\r\n    catalyst: 36,\r\n    chime: 36,\r\n    pistol: 31,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 6\r\n  mythic: {\r\n    axe: 40,\r\n    hammer: 37,\r\n    sword: 37,\r\n    greatsword: 41,\r\n    bow: 39,\r\n    dagger: 33,\r\n    scythe: 37,\r\n    catalyst: 38,\r\n    chime: 38,\r\n    pistol: 33,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  unique: {\r\n    axe: 40,\r\n    hammer: 37,\r\n    sword: 37,\r\n    greatsword: 41,\r\n    bow: 39,\r\n    dagger: 33,\r\n    scythe: 37,\r\n    catalyst: 38,\r\n    chime: 38,\r\n    pistol: 33,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n}\r\n","import { tWeaponType } from '../type'\r\nimport { tWeaponClass } from './type'\r\n\r\nexport const BASE_WEAPON_TYPES_GOLD: Record<tWeaponType, number> = {\r\n  axe: 30,\r\n  bow: 30,\r\n  catalyst: 30,\r\n  chime: 30,\r\n  dagger: 10,\r\n  greatsword: 35,\r\n  hammer: 25,\r\n  pistol: 15,\r\n  scythe: 30,\r\n  sword: 25,\r\n  fist: 0,\r\n  enemy: 0,\r\n}\r\n\r\nexport const WEAPON_CLASS_GOLD_OFFSETS: Record<tWeaponClass, number> = {\r\n  starting: -20,\r\n  rusted: 0,\r\n  tomb: 5,\r\n  burried: 10,\r\n  withering: 30,\r\n  glass: 40,\r\n\r\n  iron: 25,\r\n  steel: 30,\r\n  stainless: 35,\r\n\r\n  ancient: 40,\r\n  crystal: 50,\r\n  elemental: 55,\r\n  cursed: 55,\r\n\r\n  sharp: 50,\r\n  hardened: 55,\r\n  engraved: 60,\r\n  ethereal: 65,\r\n\r\n  exquisite: 80,\r\n  divine: 90,\r\n  arcane: 100,\r\n  celestial: 120,\r\n\r\n  mythic: 150,\r\n  unique: 150,\r\n}\r\n","import { tWeaponRarityConfig } from './type'\r\n\r\nexport const WEAPON_CLASS_RARIES: tWeaponRarityConfig = {\r\n  starting: 'common',\r\n  rusted: 'common',\r\n  tomb: 'common',\r\n  burried: 'common',\r\n  withering: 'uncommon',\r\n  glass: 'rare',\r\n  iron: 'common',\r\n  steel: 'common',\r\n  stainless: 'common',\r\n  ancient: 'common',\r\n  crystal: 'rare',\r\n  elemental: 'rare',\r\n  cursed: 'rare',\r\n  sharp: 'common',\r\n  hardened: 'uncommon',\r\n  engraved: 'uncommon',\r\n  ethereal: 'rare',\r\n  exquisite: 'uncommon',\r\n  divine: 'rare',\r\n  arcane: 'mythic',\r\n  celestial: 'mythic',\r\n  mythic: 'mythic',\r\n  unique: 'mythic',\r\n}\r\n","import { tWeaponStatsConfig } from './type'\r\n\r\nexport const DEFAULT_WEAPON_TYPE_STATS: tWeaponStatsConfig = {\r\n  axe: {},\r\n  hammer: {},\r\n  sword: {},\r\n  greatsword: {},\r\n  bow: {},\r\n  dagger: {},\r\n  scythe: {},\r\n  catalyst: {},\r\n  chime: {},\r\n  pistol: {},\r\n  fist: {},\r\n  enemy: {},\r\n}\r\n","import { tWeaponTypeConfig } from './type'\r\n\r\nexport const DEFAULT_WEAPON_TYPE_CONFIG: tWeaponTypeConfig = {\r\n  axe: {\r\n    stat: 'strength',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  hammer: {\r\n    stat: 'strength',\r\n    twoHand: false,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  sword: {\r\n    stat: 'strength',\r\n    twoHand: false,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  greatsword: {\r\n    stat: 'strength',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  bow: {\r\n    stat: 'dexterity',\r\n    twoHand: true,\r\n    range: 'ranged',\r\n    damageType: 'physical',\r\n  },\r\n  dagger: {\r\n    stat: 'dexterity',\r\n    twoHand: false,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  scythe: {\r\n    stat: 'dexterity',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  catalyst: {\r\n    stat: 'intelligence',\r\n    twoHand: true,\r\n    range: 'ranged',\r\n    damageType: 'magic',\r\n  },\r\n  chime: {\r\n    stat: 'charisma',\r\n    twoHand: true,\r\n    range: 'ranged',\r\n    damageType: 'magic',\r\n  },\r\n  pistol: {\r\n    stat: 'charisma',\r\n    twoHand: false,\r\n    range: 'ranged',\r\n    damageType: 'physical',\r\n  },\r\n  fist: {\r\n    stat: 'vigor',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  enemy: {\r\n    stat: 'vigor',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { tSkill } from '../../Skill/type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { tStats } from '../../Stats/type'\r\nimport { tStatusType } from '../../Status/type'\r\nimport { tWeapon, tWeaponType } from '../type'\r\nimport { WEAPON_DAMAGE_CONFIG } from './damage'\r\nimport { BASE_WEAPON_TYPES_GOLD, WEAPON_CLASS_GOLD_OFFSETS } from './goldValue'\r\nimport { WEAPON_CLASS_RARIES } from './rarity'\r\nimport { DEFAULT_WEAPON_TYPE_STATS } from './stats'\r\nimport { tWeaponClass } from './type'\r\nimport { DEFAULT_WEAPON_TYPE_CONFIG } from './typeConfig'\r\n\r\nexport const createWeapon = (\r\n  weaponType: tWeaponType,\r\n  weaponClass: tWeaponClass,\r\n  skills: tSkill[],\r\n  stats: Partial<tStats>,\r\n  immunities: tStatusType[] = [],\r\n  goldValue?: number,\r\n): tWeapon => {\r\n  const damageValue = WEAPON_DAMAGE_CONFIG[weaponClass][weaponType]\r\n  const { stat, twoHand, range, damageType } = DEFAULT_WEAPON_TYPE_CONFIG[\r\n    weaponType\r\n  ]\r\n  const rarity = WEAPON_CLASS_RARIES[weaponClass]\r\n  const defaultStats = DEFAULT_WEAPON_TYPE_STATS[weaponType]\r\n  return {\r\n    id: v4(),\r\n    name: `${weaponClass} ${weaponType}`,\r\n    rarity,\r\n    itemType: 'weapon',\r\n    goldValue:\r\n      goldValue ||\r\n      BASE_WEAPON_TYPES_GOLD[weaponType] +\r\n        WEAPON_CLASS_GOLD_OFFSETS[weaponClass],\r\n    type: weaponType,\r\n    twoHand,\r\n    breakable: false,\r\n    damage: {\r\n      value: damageValue,\r\n      type: damageType,\r\n      range,\r\n    },\r\n    stat,\r\n    skills,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      ...defaultStats,\r\n      ...stats,\r\n    },\r\n    immunities,\r\n  }\r\n}\r\n\r\nexport const createBreakableWeapon = (\r\n  weaponType: tWeaponType,\r\n  weaponClass: tWeaponClass,\r\n  skills: tSkill[],\r\n  stats: Partial<tStats>,\r\n  immunities: tStatusType[] = [],\r\n  goldValue?: number,\r\n): tWeapon => {\r\n  return {\r\n    ...createWeapon(\r\n      weaponType,\r\n      weaponClass,\r\n      skills,\r\n      stats,\r\n      immunities,\r\n      goldValue,\r\n    ),\r\n    breakable: true,\r\n  }\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { tSkill } from '../type'\r\n\r\nexport const createSkill = (\r\n  name: string,\r\n  rolls: number,\r\n  offset: number,\r\n  rest: Partial<tSkill> = {},\r\n): tSkill => {\r\n  return {\r\n    id: v4(),\r\n    name,\r\n    damageModifier: 1,\r\n    splashDamageModifier: 0,\r\n    targetType: 'single',\r\n    damage: true,\r\n    healing: false,\r\n    rolls,\r\n    offset,\r\n    perfectSplash: false,\r\n    perfectPierce: false,\r\n    perfectStatus: [],\r\n    ...rest,\r\n  }\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const CHOP = createSkill('Chop', 3, 0)\r\nexport const SWING = createSkill('Swing', 4, 0)\r\nexport const WITHERING_SWING = createSkill('Swing', 2, 0)\r\nexport const GLASS_SWING = createSkill('Swing', 1, 0)\r\nexport const AXE_SPIN = createSkill('Axe Spin', 5, -10, {\r\n  perfectSplash: true,\r\n  splashDamageModifier: 0.5,\r\n})\r\nexport const FLURRY = createSkill('Swipe', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const CLEAVE = createSkill('Cleave', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const SLICE = createSkill('Slice', 4, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  AXE_SPIN,\r\n  CHOP,\r\n  CLEAVE,\r\n  FLURRY,\r\n  GLASS_SWING,\r\n  SLASH,\r\n  SLICE,\r\n  STUN,\r\n  SWING,\r\n  WITHERING_SWING,\r\n} from '../../../Skill/skills/axe'\r\nimport { tWeapon } from '../../type'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'axe'\r\nexport const EXECUTIONER_AXE = (): tWeapon => ({\r\n  ...createWeapon(type, 'starting', [CHOP, AXE_SPIN], {}),\r\n  name: `Executioner Axe`,\r\n})\r\n\r\nexport const RUSTED_AXE = () => createWeapon(type, 'rusted', [CHOP, SWING], {})\r\nexport const TOMB_AXE = () => createWeapon(type, 'tomb', [SWING, FLURRY], {})\r\nexport const BURRIED_AXE = () =>\r\n  createWeapon(type, 'burried', [CHOP, FLURRY, SLICE], {})\r\nexport const WITHERING_AXE = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_SWING], {})\r\nexport const GLASS_AXE = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_SWING], {})\r\n\r\nexport const IRON_AXE = () => createWeapon(type, 'iron', [CHOP, STUN], {})\r\nexport const STEEL_AXE = () =>\r\n  createWeapon(type, 'steel', [CHOP, SLICE, CLEAVE], {})\r\nexport const STAINLESS_AXE = () =>\r\n  createWeapon(type, 'stainless', [SLICE, CLEAVE, SLASH], {})\r\n\r\nexport const ANCIENT_AXE = () =>\r\n  createWeapon(type, 'ancient', [SWING, CLEAVE], {})\r\nexport const CRYSTAL_AXE = () =>\r\n  createWeapon(type, 'crystal', [GLASS_SWING], {})\r\nexport const ELEMENTAL_AXE = () => createWeapon(type, 'elemental', [CHOP], {})\r\nexport const CURSED_AXE = () => createWeapon(type, 'cursed', [CHOP], {})\r\n\r\nexport const SHARP_AXE = () =>\r\n  createWeapon(type, 'sharp', [SLICE, SLASH, AXE_SPIN], {})\r\nexport const HARDENED_AXE = () =>\r\n  createWeapon(type, 'hardened', [SLICE, SLASH, STUN], {})\r\nexport const ENGRAVED_AXE = () =>\r\n  createWeapon(type, 'engraved', [SLICE, SLASH, FLURRY], {})\r\nexport const ETHEREAL_AXE = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_SWING], {})\r\n\r\nexport const EXQUISITE_AXE = () =>\r\n  createWeapon(type, 'exquisite', [SLICE, SLASH, CLEAVE], {})\r\nexport const DIVINE_AXE = () =>\r\n  createWeapon(type, 'divine', [SLICE, SLICE, STUN], {})\r\nexport const ARCANE_AXE = () => createWeapon(type, 'arcane', [CHOP], {})\r\nexport const CELESTIAL_AXE = () =>\r\n  createBreakableWeapon(type, 'celestial', [GLASS_SWING], {})\r\n\r\nexport const AXES: tWeaponsByLevel = {\r\n  0: [EXECUTIONER_AXE],\r\n  1: [RUSTED_AXE, TOMB_AXE, BURRIED_AXE, WITHERING_AXE, GLASS_AXE],\r\n  2: [IRON_AXE, STEEL_AXE, STAINLESS_AXE],\r\n  3: [ANCIENT_AXE, CRYSTAL_AXE, ELEMENTAL_AXE, CURSED_AXE],\r\n  4: [SHARP_AXE, HARDENED_AXE, ENGRAVED_AXE, ETHEREAL_AXE],\r\n  5: [EXQUISITE_AXE, DIVINE_AXE, ARCANE_AXE, CELESTIAL_AXE],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const SHOT = createSkill('Shot', 3, 0)\r\nexport const WITHERING_SHOT = createSkill('Shot', 2, 0)\r\nexport const GLASS_SHOT = createSkill('Shot', 1, 0)\r\nexport const HEADSHOT = createSkill('Headshot', 3, -10, {\r\n  perfectPierce: true,\r\n})\r\nexport const FLURRY = createSkill('Flurry', 2, -5, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const PIN_DOWN = createSkill('Pin Down', 2, -10, {\r\n  perfectStatus: ['speed-down'],\r\n})\r\nexport const WOUNDING_SHOT = createSkill('Wounding Shot', 2, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  HEADSHOT,\r\n  SHOT,\r\n  GLASS_SHOT,\r\n  FLURRY,\r\n  PIN_DOWN,\r\n  WITHERING_SHOT,\r\n  STUN,\r\n  WOUNDING_SHOT,\r\n} from '../../../Skill/skills/bow'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'bow'\r\nexport const RANGERS_BOW = () => ({\r\n  ...createWeapon(type, 'starting', [SHOT, HEADSHOT], {}),\r\n  name: `Ranger Bow`,\r\n})\r\nexport const RUSTED_BOW = () =>\r\n  createWeapon(type, 'rusted', [SHOT, HEADSHOT], {})\r\nexport const TOMB_BOW = () =>\r\n  createWeapon(type, 'tomb', [SHOT, HEADSHOT, FLURRY], {})\r\nexport const BURRIED_BOW = () =>\r\n  createWeapon(type, 'burried', [SHOT, FLURRY, PIN_DOWN], {})\r\nexport const WITHERING_BOW = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_SHOT], {})\r\nexport const GLASS_BOW = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_SHOT], {})\r\n\r\nexport const IRON_BOW = () => createWeapon(type, 'iron', [SHOT, STUN], {})\r\nexport const STEEL_BOW = () =>\r\n  createWeapon(type, 'steel', [SHOT, HEADSHOT, WOUNDING_SHOT], {})\r\nexport const STAINLESS_BOW = () =>\r\n  createWeapon(type, 'stainless', [SHOT, FLURRY, PIN_DOWN], {})\r\n\r\nexport const ANCIENT_BOW = () =>\r\n  createWeapon(type, 'ancient', [SHOT, FLURRY, WOUNDING_SHOT], {})\r\nexport const CRYSTAL_BOW = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_SHOT], {})\r\nexport const ELEMENTAL_BOW = () => createWeapon(type, 'elemental', [SHOT], {})\r\nexport const CURSED_BOW = () => createWeapon(type, 'cursed', [SHOT], {})\r\n\r\nexport const SHARP_BOW = () =>\r\n  createWeapon(type, 'sharp', [SHOT, HEADSHOT, WOUNDING_SHOT], {})\r\nexport const HARDENED_BOW = () =>\r\n  createWeapon(type, 'hardened', [SHOT, FLURRY, PIN_DOWN], {})\r\nexport const ENGRAVED_BOW = () =>\r\n  createWeapon(type, 'engraved', [SHOT, HEADSHOT, STUN, WOUNDING_SHOT], {})\r\nexport const ETHEREAL_BOW = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_SHOT], {})\r\n\r\nexport const EXQUISITE_BOW = () =>\r\n  createWeapon(type, 'exquisite', [SHOT, HEADSHOT], {})\r\nexport const DIVINE_BOW = () =>\r\n  createWeapon(type, 'divine', [SHOT, HEADSHOT], {})\r\nexport const ARCANE_BOW = () => createWeapon(type, 'arcane', [SHOT], {})\r\nexport const CELESTIAL_BOW = () => createWeapon(type, 'celestial', [SHOT], {})\r\n\r\nexport const BOWS: tWeaponsByLevel = {\r\n  0: [RANGERS_BOW],\r\n  1: [RUSTED_BOW, TOMB_BOW, BURRIED_BOW, WITHERING_BOW, GLASS_BOW],\r\n  2: [IRON_BOW, STEEL_BOW, STAINLESS_BOW],\r\n  3: [ANCIENT_BOW, CRYSTAL_BOW, ELEMENTAL_BOW, CURSED_BOW],\r\n  4: [SHARP_BOW, HARDENED_BOW, ENGRAVED_BOW, ETHEREAL_BOW],\r\n  5: [EXQUISITE_BOW, DIVINE_BOW, ARCANE_BOW, CELESTIAL_BOW],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const BLAST = createSkill('Blast', 2, 0)\r\nexport const GLASS_BLAST = createSkill('Blast', 1, 0)\r\nexport const ARCANE = createSkill('Arcane', 3, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const NOVA = createSkill('Nova', 3, -5, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const ENFLAME = createSkill('Enflame', 4, 0, {\r\n  perfectStatus: ['burning'],\r\n})\r\nexport const ENGULF = createSkill('Engulf', 4, -10, {\r\n  perfectStatus: ['burning'],\r\n  targetType: 'group',\r\n})\r\nexport const FREEZE = createSkill('Freeze', 4, 0, {\r\n  perfectStatus: ['frozen'],\r\n})\r\nexport const SHOCK = createSkill('Shock', 4, 0, {\r\n  perfectStatus: ['shocked'],\r\n})\r\nexport const STUN = createSkill('Stun', 2, 0, {\r\n  damageModifier: 0.5,\r\n  damage: false,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const PROTECT = createSkill('Protect', 2, 0, {\r\n  damageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  perfectStatus: ['protected'],\r\n})\r\nexport const TIME_JUMP = createSkill('Time Jump', 3, -5, {\r\n  damageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  perfectStatus: ['rushed'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  ARCANE,\r\n  BLAST,\r\n  ENFLAME,\r\n  ENGULF,\r\n  GLASS_BLAST,\r\n  NOVA,\r\n  PROTECT,\r\n  STUN,\r\n  TIME_JUMP,\r\n} from '../../../Skill/skills/catalyst'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'catalyst'\r\nexport const STUDENTS_CATALYST = () => ({\r\n  ...createWeapon(type, 'starting', [ARCANE, NOVA], {}),\r\n  name: `Student Catalyst`,\r\n})\r\nexport const RUSTED_CATALYST = () =>\r\n  createWeapon(type, 'rusted', [BLAST, ARCANE], {})\r\nexport const TOMB_CATALYST = () =>\r\n  createWeapon(type, 'tomb', [BLAST, ARCANE, NOVA], {})\r\nexport const BURRIED_CATALYST = () =>\r\n  createWeapon(type, 'burried', [BLAST, ARCANE, PROTECT], {})\r\nexport const WITHERING_CATALYST = () =>\r\n  createBreakableWeapon(type, 'withering', [BLAST], {})\r\nexport const GLASS_CATALYST = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_BLAST], {})\r\n\r\nexport const IRON_CATALYST = () =>\r\n  createWeapon(type, 'iron', [ARCANE, NOVA, STUN], {})\r\nexport const STEEL_CATALYST = () =>\r\n  createWeapon(type, 'steel', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const STAINLESS_CATALYST = () =>\r\n  createWeapon(type, 'stainless', [BLAST, ARCANE, NOVA, PROTECT], {})\r\n\r\nexport const ANCIENT_CATALYST = () =>\r\n  createWeapon(type, 'ancient', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const CRYSTAL_CATALYST = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_BLAST], {})\r\nexport const ELEMENTAL_CATALYST = () =>\r\n  createWeapon(type, 'elemental', [ARCANE, ENFLAME, ENGULF], {})\r\nexport const CURSED_CATALYST = () => createWeapon(type, 'cursed', [ARCANE], {})\r\n\r\nexport const SHARP_CATALYST = () => createWeapon(type, 'sharp', [], {})\r\nexport const HARDENED_CATALYST = () =>\r\n  createWeapon(type, 'hardened', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const ENGRAVED_CATALYST = () =>\r\n  createWeapon(type, 'engraved', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const ETHEREAL_CATALYST = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_BLAST], {})\r\n\r\nexport const EXQUISITE_CATALYST = () =>\r\n  createWeapon(type, 'exquisite', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const DIVINE_CATALYST = () =>\r\n  createWeapon(type, 'divine', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const ARCANE_CATALYST = () =>\r\n  createWeapon(type, 'arcane', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const CELESTIAL_CATALYST = () =>\r\n  createBreakableWeapon(\r\n    type,\r\n    'celestial',\r\n    [ARCANE, NOVA, PROTECT, TIME_JUMP],\r\n    {},\r\n  )\r\n\r\nexport const CATALYSTS: tWeaponsByLevel = {\r\n  0: [STUDENTS_CATALYST],\r\n  1: [\r\n    RUSTED_CATALYST,\r\n    TOMB_CATALYST,\r\n    BURRIED_CATALYST,\r\n    WITHERING_CATALYST,\r\n    GLASS_CATALYST,\r\n  ],\r\n  2: [IRON_CATALYST, STEEL_CATALYST, STAINLESS_CATALYST],\r\n  3: [ANCIENT_CATALYST, CRYSTAL_CATALYST, ELEMENTAL_CATALYST, CURSED_CATALYST],\r\n  4: [SHARP_CATALYST, HARDENED_CATALYST, ENGRAVED_CATALYST, ETHEREAL_CATALYST],\r\n  5: [EXQUISITE_CATALYST, DIVINE_CATALYST, ARCANE_CATALYST, CELESTIAL_CATALYST],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const RING = createSkill('Ring', 3, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const WITHERING_RING = createSkill('Ring', 2, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const GLASS_RING = createSkill('Ring', 1, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const REVERBERATE = createSkill('Reverberate', 4, -5, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 2, -5, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const SLOW = createSkill('Slow', 4, 0, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['speed-down'],\r\n})\r\nexport const VANISH = createSkill('Vanish', 2, 0, {\r\n  damageModifier: 0,\r\n  damage: false,\r\n  targetType: 'ally',\r\n  perfectStatus: ['evade-up'],\r\n})\r\nexport const RUSH = createSkill('Rush', 2, 0, {\r\n  damageModifier: 0,\r\n  damage: false,\r\n  targetType: 'ally',\r\n  perfectStatus: ['rushed'],\r\n})\r\nexport const RESET = createSkill('Reset', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['reset'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  GLASS_RING,\r\n  RESET,\r\n  REVERBERATE,\r\n  RING,\r\n  RUSH,\r\n  SLOW,\r\n  STUN,\r\n  VANISH,\r\n  WITHERING_RING,\r\n} from '../../../Skill/skills/chime'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'chime'\r\nexport const PATRICIANS_CHIME = () => ({\r\n  ...createWeapon(type, 'starting', [RING, STUN], {}),\r\n  name: `Patrician Chime`,\r\n})\r\nexport const RUSTED_CHIME = () =>\r\n  createWeapon(type, 'rusted', [RING, REVERBERATE], {})\r\nexport const TOMB_CHIME = () =>\r\n  createWeapon(type, 'tomb', [RING, SLOW, VANISH], {})\r\nexport const BURRIED_CHIME = () =>\r\n  createWeapon(type, 'burried', [RING, STUN, VANISH], {})\r\nexport const WITHERING_CHIME = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_RING], {})\r\nexport const GLASS_CHIME = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_RING], {})\r\n\r\nexport const IRON_CHIME = () =>\r\n  createWeapon(type, 'iron', [RING, REVERBERATE, STUN], {})\r\nexport const STEEL_CHIME = () =>\r\n  createWeapon(type, 'steel', [RING, RUSH, RESET], {})\r\nexport const STAINLESS_CHIME = () =>\r\n  createWeapon(type, 'stainless', [RING, REVERBERATE, RUSH, RESET], {})\r\n\r\nexport const ANCIENT_CHIME = () =>\r\n  createWeapon(type, 'ancient', [RING, REVERBERATE, STUN], {})\r\nexport const CRYSTAL_CHIME = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_RING], {})\r\nexport const ELEMENTAL_CHIME = () => createWeapon(type, 'elemental', [RING], {})\r\nexport const CURSED_CHIME = () => createWeapon(type, 'cursed', [RING], {})\r\n\r\nexport const SHARP_CHIME = () =>\r\n  createWeapon(type, 'sharp', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const HARDENED_CHIME = () =>\r\n  createWeapon(type, 'hardened', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const ENGRAVED_CHIME = () =>\r\n  createWeapon(type, 'engraved', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const ETHEREAL_CHIME = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_RING], {})\r\n\r\nexport const EXQUISITE_CHIME = () =>\r\n  createWeapon(type, 'exquisite', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const DIVINE_CHIME = () =>\r\n  createWeapon(type, 'divine', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const ARCANE_CHIME = () =>\r\n  createWeapon(type, 'arcane', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const CELESTIAL_CHIME = () =>\r\n  createBreakableWeapon(type, 'celestial', [RING, REVERBERATE, STUN, SLOW], {})\r\n\r\nexport const CHIMES: tWeaponsByLevel = {\r\n  0: [PATRICIANS_CHIME],\r\n  1: [RUSTED_CHIME, TOMB_CHIME, BURRIED_CHIME, WITHERING_CHIME, GLASS_CHIME],\r\n  2: [IRON_CHIME, STEEL_CHIME, STAINLESS_CHIME],\r\n  3: [ANCIENT_CHIME, CRYSTAL_CHIME, ELEMENTAL_CHIME, CURSED_CHIME],\r\n  4: [SHARP_CHIME, HARDENED_CHIME, ENGRAVED_CHIME, ETHEREAL_CHIME],\r\n  5: [EXQUISITE_CHIME, DIVINE_CHIME, ARCANE_CHIME, CELESTIAL_CHIME],\r\n}\r\n","import { tCharacterClass } from '../Character/type'\r\nimport { tWeapon } from './type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../Stats/constants'\r\nimport { EXECUTIONER_AXE } from './builders/objects/axe'\r\nimport { RANGERS_BOW } from './builders/objects/bow'\r\nimport { STUDENTS_CATALYST } from './builders/objects/catalyst'\r\nimport { PATRICIANS_CHIME } from './builders/objects/chime'\r\n\r\nexport const CLASS_WEAPONS: Record<tCharacterClass, tWeapon | undefined> = {\r\n  executioner: EXECUTIONER_AXE(),\r\n  ranger: RANGERS_BOW(),\r\n  student: STUDENTS_CATALYST(),\r\n  patrician: PATRICIANS_CHIME(),\r\n  drifter: undefined,\r\n  enemy: undefined,\r\n}\r\n\r\nexport const BASE_WEAPON = (): tWeapon => {\r\n  return {\r\n    id: v4(),\r\n    name: '',\r\n    itemType: 'weapon',\r\n    rarity: 'common',\r\n    type: 'fist',\r\n    stat: 'strength',\r\n    goldValue: 0,\r\n    twoHand: false,\r\n    breakable: false,\r\n    damage: {\r\n      value: 0,\r\n      range: 'melee',\r\n      type: 'physical',\r\n    },\r\n    stats: ZERO_STATS,\r\n    skills: [],\r\n    immunities: [],\r\n  }\r\n}\r\n","import { tProcessedCharacter } from '../Character/type'\r\nimport { tBaseStats } from '../Stats/type'\r\nimport { getBaseStatValue } from '../Character/util'\r\nimport { DiceRoll } from 'rpg-dice-roller'\r\n\r\nexport const resolveCheck = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n  offset: number = 0,\r\n): boolean => {\r\n  const statValue = getBaseStatValue(character, key, offset)\r\n  const roll = new DiceRoll('1d100')\r\n  return roll.total <= statValue\r\n}\r\n\r\nexport const getChecksProbability = (\r\n  character: tProcessedCharacter,\r\n  checks: { key: keyof tBaseStats; offset: number }[],\r\n): number => {\r\n  const statValues = checks.map(({ key, offset }) =>\r\n    getBaseStatValue(character, key, offset),\r\n  )\r\n  const result = statValues.reduce((p, c) => {\r\n    return p * (c / 100)\r\n  }, 1)\r\n  return result\r\n}\r\n","import { tCharacterClass } from '../Character/type'\r\nimport { tArmor } from './type'\r\n\r\nexport const CLASS_ARMOR: Record<tCharacterClass, tArmor[]> = {\r\n  executioner: [],\r\n  ranger: [],\r\n  student: [],\r\n  patrician: [],\r\n  drifter: [],\r\n  enemy: [],\r\n}\r\n","import { tConsumable, tConsumableStack } from './type'\r\n\r\nexport const considateConsumableListToStack = (\r\n  consumables: tConsumable[],\r\n): tConsumableStack[] => {\r\n  let stack: tConsumableStack[] = []\r\n  const updateStackItem = (cid: string) =>\r\n    stack.map((s) =>\r\n      s.consumable.cid === cid ? { ...s, count: s.count + 1 } : s,\r\n    )\r\n  const containsId = (cid: string) =>\r\n    stack.map((s) => s.consumable.cid).includes(cid)\r\n  consumables.forEach((c) => {\r\n    if (containsId(c.cid)) {\r\n      stack = updateStackItem(c.cid)\r\n    } else {\r\n      stack = [...stack, { consumable: c, count: 1 }]\r\n    }\r\n  })\r\n  return stack\r\n}\r\n","export const Theme = {\r\n  darkBgColor: 'rgba(0,7,18,0.9)',\r\n  darkBgColorSolid: 'rgba(0,7,18,1)',\r\n  mediumBgColor: 'rgb(34,34,39)',\r\n  otherGrey: 'rgb(51,51,58)',\r\n  otherGrey2: 'rgb(72,72,80)',\r\n  badgeBgColor: 'rgb(15,15,20)',\r\n  badgeBorderColor: 'rgba(140,150,160,1)',\r\n  lightBgColor: 'rgba(255,255,255,0.4)',\r\n  textColor: 'rgba(255,255,255,0.8)',\r\n  physicalColor: 'lightblue',\r\n  magicColor: 'plum',\r\n  evasionColor: 'rgb(133, 199, 133)',\r\n  playerPartyColor: 'lightblue',\r\n  enemyPartyColor: 'lightsalmon',\r\n  meleeRangeColor: 'rgba(255,255,255,0.8)',\r\n  rangedRangeColor: 'rgba(255,255,255,0.8)',\r\n  healthRedColor: 'rgb(151,75,75)',\r\n\r\n  paddingS: '4px',\r\n  padding: '8px',\r\n  paddingL: '16px',\r\n  paddingXL: '24px',\r\n\r\n  titleFont: 'New Rocker',\r\n}\r\n","import { tCharacter, tCharacterClass } from './type'\r\nimport { Theme } from '../../theme'\r\nimport { v4 } from 'uuid'\r\nimport { BASE_C_STATS } from '../Stats/constants'\r\n\r\nexport const CHARACTER_XP_MAX: Record<number, number> = {\r\n  [-1]: 0,\r\n  0: 25,\r\n  1: 45,\r\n  2: 85,\r\n  3: 135,\r\n  4: 215,\r\n  5: 295,\r\n  6: 425,\r\n  7: 675,\r\n  8: 925,\r\n  9: 1257,\r\n  10: 1925,\r\n  11: 1400,\r\n  12: 2200,\r\n}\r\n\r\nexport const CHARACTER_CLASS_COLORS: Record<tCharacterClass, string> = {\r\n  enemy: Theme.enemyPartyColor,\r\n  executioner: '#3c4652',\r\n  patrician: '#472321',\r\n  student: '#665166',\r\n  ranger: '#334233',\r\n  drifter: '#111',\r\n}\r\n\r\nexport const BASE_CHARACTER = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: '',\r\n    isCharacter: true,\r\n    icon: '',\r\n    partyId: '',\r\n    level: 0,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: BASE_C_STATS,\r\n    weapon: undefined,\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    possibleRewards: [],\r\n  }\r\n}\r\n","import { tWeapon } from './type'\r\nimport { ZERO_STATS } from '../Stats/constants'\r\nimport { v4 } from 'uuid'\r\nimport { createSkill } from '../Skill/skills'\r\n\r\nexport const FISTS = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Fists`,\r\n  itemType: 'weapon',\r\n  type: 'hammer',\r\n  rarity: 'common',\r\n  stat: 'vigor',\r\n  twoHand: false,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'melee', value: 4 },\r\n  skills: [createSkill('Punch', 3, 0)],\r\n  immunities: [],\r\n  stats: ZERO_STATS,\r\n  goldValue: 0,\r\n})\r\n","import { createSkill } from '.'\r\n\r\nexport const TAUNT = createSkill('Taunt', 2, 0, {\r\n  damageModifier: 0,\r\n  damage: false,\r\n  targetType: 'self',\r\n  weaponStatOverride: 'vigor',\r\n  perfectStatus: ['targeted'],\r\n})\r\n\r\nexport const HEAL = createSkill('Heal', 0, 0, {\r\n  damageModifier: 0,\r\n  targetType: 'self',\r\n  damage: false,\r\n  healing: true,\r\n})\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { HEAL } from '../../Skill/skills/armor'\r\n\r\nconst cid = v4()\r\nexport const GODSBEARD = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Godsbeard',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...HEAL,\r\n      consumableId: id,\r\n    },\r\n    goldValue: 40,\r\n  }\r\n}\r\n","import { tItemRarity } from './type'\r\nimport { tCharacterClass } from '../Character/type'\r\nimport { tConsumable } from '../Consumable/type'\r\nimport { tArmorResourceType } from '../Armor/type'\r\nimport { GODSBEARD } from '../Consumable/objects/godsbeard'\r\n\r\nexport const ITEM_RARITY_COLORS: Record<tItemRarity, string> = {\r\n  common: 'rgba(255, 255, 255,1)',\r\n  uncommon: 'rgba(173,216,230,1)',\r\n  rare: 'rgba(221,160,221,1)',\r\n  mythic: 'rgb(255,160,122,1)',\r\n}\r\n\r\nexport const CLASS_STARTING_CONSUMABLES: Record<\r\n  tCharacterClass,\r\n  tConsumable[]\r\n> = {\r\n  executioner: [GODSBEARD()],\r\n  ranger: [GODSBEARD()],\r\n  student: [GODSBEARD()],\r\n  patrician: [GODSBEARD()],\r\n  drifter: [],\r\n  enemy: [],\r\n}\r\n\r\nexport const CHARACTER_RESOURCES: tArmorResourceType[] = [\r\n  'offhand',\r\n  'body',\r\n  'head',\r\n  'feet',\r\n]\r\n","import { tCharacter, tProcessedCharacter, tCharacterClass } from './type'\r\nimport { tStats, tBaseStats } from '../Stats/type'\r\nimport { combineStats } from '../Stats/util'\r\nimport { tSkill } from '../Skill/type'\r\nimport { CLASS_STATS } from '../Stats/constants'\r\nimport { tStatusType } from '../Status/type'\r\nimport { STATUS_CONFIG } from '../Status/constants'\r\nimport { v4 } from 'uuid'\r\nimport { tDamage } from '../Damage/type'\r\nimport { noneg } from '../../util/noneg'\r\nimport { CLASS_WEAPONS } from '../Weapon/constants'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { tArmorResourceType, tArmor } from '../Armor/type'\r\nimport { resolveCheck } from '../Roll/util'\r\nimport { CLASS_ARMOR } from '../Armor/constants'\r\nimport { considateConsumableListToStack } from '../Consumable/util'\r\nimport { CHARACTER_XP_MAX } from './constants'\r\nimport { tEncounterReward } from '../Encounter/type'\r\nimport { FISTS } from '../Weapon/fists'\r\nimport { CLASS_STARTING_CONSUMABLES } from '../Item/constants'\r\n\r\nexport const isCharacter = (obj: any): boolean =>\r\n  obj !== undefined && obj.isCharacter !== undefined\r\n\r\nexport const checkForProcessedCharacter = (character: tCharacter) => {\r\n  if ((character as tProcessedCharacter).processed) {\r\n    throw new Error('No Processed Characters Allowed')\r\n  }\r\n}\r\n\r\nexport const makeCharacter = (characterClass: tCharacterClass): tCharacter => {\r\n  return {\r\n    isCharacter: true,\r\n    id: v4(),\r\n    name: '',\r\n    partyId: '',\r\n    level: 0,\r\n    experience: 0,\r\n    class: characterClass,\r\n\r\n    stats: CLASS_STATS[characterClass],\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n\r\n    tags: [],\r\n\r\n    weapon: CLASS_WEAPONS[characterClass],\r\n    armor: CLASS_ARMOR[characterClass],\r\n    consumables: CLASS_STARTING_CONSUMABLES[characterClass],\r\n\r\n    status: [],\r\n    immunities: [],\r\n    possibleRewards: [],\r\n  }\r\n}\r\n\r\nexport const getSkills = (character: tCharacter): tSkill[] => {\r\n  return [\r\n    ...(character.weapon || FISTS()).skills,\r\n    ...character.armor.reduce((r, a) => [...r, ...a.skills], [] as tSkill[]),\r\n    ...considateConsumableListToStack(character.consumables).reduce(\r\n      (r, s) => [...r, s.consumable.skill],\r\n      [] as tSkill[],\r\n    ),\r\n  ]\r\n}\r\n\r\nexport const processCharacter = (\r\n  character: tCharacter,\r\n): tProcessedCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const stats: tStats = combineStats(\r\n    character.stats,\r\n    (character.weapon || FISTS()).stats,\r\n    ...character.armor.map((a) => a.stats),\r\n    ...character.status.map((s) => s.stats),\r\n  )\r\n  const skills = getSkills(character)\r\n  const statusImmunities = character.status.reduce(\r\n    (r, s) => [...r, ...s.immunities],\r\n    [] as tStatusType[],\r\n  )\r\n  const immunities = [\r\n    ...character.immunities,\r\n    ...(character?.weapon?.immunities || []),\r\n    ...character.armor.reduce(\r\n      (r, a) => [...r, ...a.immunities],\r\n      [] as tStatusType[],\r\n    ),\r\n    ...statusImmunities,\r\n  ]\r\n  const baseVigor = CLASS_STATS[character.class].vigor || character.stats.vigor\r\n  const startingHealth = 25 + Math.floor(0.1 * baseVigor)\r\n  const maxHealth =\r\n    Math.floor(\r\n      startingHealth + character.level + 0.1 * character.level * stats.vigor,\r\n    ) + stats.maxHealthOffset\r\n  const health = maxHealth - character.healthOffset\r\n  const maxInspiration = 3 + stats.maxInspirationOffset\r\n  const inspiration = maxInspiration + character.inspirationOffset\r\n\r\n  return {\r\n    processed: true,\r\n    ...character,\r\n\r\n    health,\r\n    maxHealth,\r\n    inspiration,\r\n    maxInspiration,\r\n\r\n    weapon: character.weapon || FISTS(),\r\n    stats,\r\n    immunities,\r\n    rawStats: character.stats,\r\n    skills,\r\n  }\r\n}\r\n\r\nexport const getBaseStatValue = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n  offset: number = 0,\r\n) => {\r\n  return character.stats[key] + offset\r\n}\r\n\r\nexport const getDamageResistance = (\r\n  character: tProcessedCharacter,\r\n  damage: tDamage,\r\n) => {\r\n  if (damage.type === 'physical') return character.stats.armor\r\n  if (damage.type === 'magic') return character.stats.resistance\r\n  return 0\r\n}\r\nexport const hasStatus = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.status.map((s) => s.type).includes(statusType)\r\n}\r\nexport const findStatus = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.status.find((s) => s.type === statusType)\r\n}\r\nexport const hasImmunity = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.immunities.includes(statusType)\r\n}\r\nexport const getReflectedDamage = (target: tCharacter, rawDamage: tDamage) => {\r\n  return {\r\n    ...rawDamage,\r\n    value: target.stats.damageReflection[rawDamage.range],\r\n  }\r\n}\r\nexport const getRawDamage = (\r\n  source: tProcessedCharacter,\r\n  target: tProcessedCharacter,\r\n  rawDamage: tDamage,\r\n): tDamage => {\r\n  let damageModifier = 1\r\n  target.tags.forEach((tag) => {\r\n    if (source.stats.damageModifiers[tag]) {\r\n      damageModifier += source.stats.damageModifiers[tag]\r\n    }\r\n  })\r\n  return {\r\n    ...rawDamage,\r\n    value: rawDamage.value * damageModifier,\r\n  }\r\n}\r\n\r\nexport const commitDamage = (\r\n  character: tCharacter,\r\n  damage: tDamage,\r\n  ignoreResistance: boolean,\r\n): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const pc = processCharacter(character)\r\n  const resistance = ignoreResistance ? 0 : getDamageResistance(pc, damage)\r\n  const damageTakenModifier =\r\n    pc.stats.damageTakenModifier +\r\n    pc.stats.damageTakenRangeModifiers[damage.range]\r\n  const rawDamageValue = damage.value * damageTakenModifier\r\n  if (hasStatus(character, 'protected')) {\r\n    return {\r\n      ...character,\r\n      status: character.status.filter((s) => s.type !== 'protected'),\r\n    }\r\n  }\r\n  return {\r\n    ...character,\r\n    healthOffset: Math.ceil(\r\n      character.healthOffset + noneg(rawDamageValue - resistance),\r\n    ),\r\n  }\r\n}\r\n\r\nexport const decrementStatusDurations = (character: tCharacter): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    status: character.status\r\n      .map((status) => ({ ...status, duration: status.duration - 1 }))\r\n      .filter((status) => status.duration !== 0),\r\n  }\r\n}\r\nexport const addStatus = (\r\n  character: tCharacter,\r\n  type: tStatusType,\r\n  durationOverride?: number,\r\n): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const statusConfig = STATUS_CONFIG[type]\r\n  const existingStatus = findStatus(character, type)\r\n  if (hasImmunity(character, type)) {\r\n    return character\r\n  }\r\n  if (existingStatus && !statusConfig.canStack) {\r\n    return character\r\n  }\r\n  if (existingStatus && statusConfig.canStack) {\r\n    return {\r\n      ...character,\r\n      status: [\r\n        ...character.status.filter((s) => s.type !== type),\r\n        { ...existingStatus, stack: existingStatus.stack + 1 },\r\n      ],\r\n    }\r\n  }\r\n  return {\r\n    ...character,\r\n    status: [\r\n      ...character.status,\r\n      {\r\n        type,\r\n        stats: statusConfig.stats,\r\n        immunities: statusConfig.immunities,\r\n        duration: durationOverride || statusConfig.duration,\r\n        stack: 1,\r\n      },\r\n    ],\r\n  }\r\n}\r\n\r\nexport const addMultipleStatus = (\r\n  character: tCharacter,\r\n  types: tStatusType[],\r\n): tCharacter => {\r\n  return types.reduce((result, type) => {\r\n    return addStatus(result, type)\r\n  }, character)\r\n}\r\n\r\nexport const checkStatus = (character: tCharacter) => {\r\n  checkForProcessedCharacter(character)\r\n  let c = { ...character }\r\n  character.status.forEach((status) => {\r\n    if (hasImmunity(character, status.type)) {\r\n      c = {\r\n        ...c,\r\n        status: c.status.filter((c) => c.type !== status.type),\r\n      }\r\n    }\r\n  })\r\n  return c\r\n}\r\n\r\nexport const removeTemporaryStatus = (character: tCharacter): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    status: character.status.filter((s) => {\r\n      const config = STATUS_CONFIG[s.type]\r\n      return !config.isTemporary\r\n    }),\r\n  }\r\n}\r\n\r\nexport const equipArmor = (\r\n  character: tCharacter,\r\n  armor: tArmor,\r\n): { character: tCharacter; armor: tArmor | undefined } => {\r\n  checkForProcessedCharacter(character)\r\n  const existingArmor = character.armor.find(\r\n    (a) => a.resource === armor.resource,\r\n  )\r\n  return {\r\n    character: {\r\n      ...character,\r\n      armor: existingArmor\r\n        ? [...character.armor.filter((a) => a.id !== existingArmor.id), armor]\r\n        : [...character.armor, armor],\r\n    },\r\n    armor: existingArmor,\r\n  }\r\n}\r\n\r\nexport const unequipArmor = (\r\n  character: tCharacter,\r\n  resource: tArmorResourceType,\r\n): { character: tCharacter; armor: tArmor | undefined } => {\r\n  checkForProcessedCharacter(character)\r\n  const armor = character.armor.find((a) => a.resource === resource)\r\n  return {\r\n    character: {\r\n      ...character,\r\n      armor: character.armor.filter((a) => a.resource !== resource),\r\n    },\r\n    armor,\r\n  }\r\n}\r\n\r\nexport const equipWeapon = (\r\n  character: tCharacter,\r\n  weapon: tWeapon,\r\n): { character: tCharacter; weapon: tWeapon | undefined } => {\r\n  const existingWeapon = character.weapon\r\n  return {\r\n    character: {\r\n      ...character,\r\n      weapon,\r\n    },\r\n    weapon: existingWeapon,\r\n  }\r\n}\r\n\r\n// DO NOT USE\r\nexport const unequipWeapon = (\r\n  character: tCharacter,\r\n): { character: tCharacter; weapon: tWeapon | undefined } => {\r\n  const existingWeapon = character.weapon\r\n  return {\r\n    character: {\r\n      ...character,\r\n      // weapon: undefined\r\n    },\r\n    weapon: existingWeapon,\r\n  }\r\n}\r\n\r\nexport const getRewardsFromCharacter = (\r\n  character: tProcessedCharacter,\r\n  checkedCharacter: tProcessedCharacter,\r\n): tEncounterReward[] => {\r\n  let index: number | undefined = undefined\r\n  character.possibleRewards.forEach((rewards, i) => {\r\n    const luckReslt = resolveCheck(checkedCharacter, 'luck')\r\n    if (luckReslt) {\r\n      index = i\r\n    }\r\n  })\r\n  if (index !== undefined) {\r\n    return character.possibleRewards[index]\r\n      ? [character.possibleRewards[index]]\r\n      : []\r\n  }\r\n  return []\r\n}\r\n\r\nexport const addExperience = (\r\n  character: tCharacter,\r\n  xp: number,\r\n): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const xpToNextLevel = CHARACTER_XP_MAX[character.level]\r\n  const experience = character.experience + xp\r\n  if (experience > xpToNextLevel) {\r\n    return addExperience(\r\n      levelUp({\r\n        ...character,\r\n        experience,\r\n      }),\r\n      0,\r\n    )\r\n  }\r\n  return {\r\n    ...character,\r\n    experience,\r\n  }\r\n}\r\n\r\nexport const levelUp = (character: tCharacter): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const experience = character.experience - CHARACTER_XP_MAX[character.level]\r\n  return {\r\n    ...character,\r\n    level: character.level + 1,\r\n    healthOffset: Math.floor(character.healthOffset / 2),\r\n    experience,\r\n    status: character.status.filter((s) => s.type !== 'poisoned'),\r\n  }\r\n}\r\n","export const getRandom = <T>(items: T[]) =>\r\n  items[Math.floor(Math.random() * items.length)]\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const STAB: tSkill = {\r\n  id: v4(),\r\n  name: 'Stab',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: ['bleeding'],\r\n}\r\n","import { tEncounterReward, tEncounterChoice, tCombatEncounter } from './type'\r\nimport { getRandom } from '../../util'\r\nimport { stringArr } from '../../util/stringArr'\r\nimport { FLOOR_CONFIGS_BY_INDEX } from './floors'\r\nimport Forest1 from '../../assets/img/forests/7.png'\r\nimport Forest2 from '../../assets/img/forests/8.png'\r\nimport Forest3 from '../../assets/img/forests/1.png'\r\nimport Dungeon1 from '../../assets/img/dungeon/3.png'\r\n\r\nexport const ZERO_REWARD: tEncounterReward = {\r\n  gold: 0,\r\n  xp: 0,\r\n  items: [],\r\n  status: [],\r\n  immunities: [],\r\n}\r\n\r\nconst poisoned: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['poisoned'],\r\n}\r\nconst burning: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['burning'],\r\n}\r\nconst bleeding: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['bleeding'],\r\n}\r\nconst armorDown: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['armor-down'],\r\n}\r\nconst resDown: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['resistance-down'],\r\n}\r\nconst attackDown: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['armor-down'],\r\n}\r\n\r\nconst armorUp: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['armor-up'],\r\n}\r\nconst attackUp: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['attack-up'],\r\n}\r\nconst resUp: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['resistance-up'],\r\n}\r\n\r\nconst justGold = (gold: number) => ({\r\n  ...ZERO_REWARD,\r\n  gold,\r\n})\r\nconst justXp = (xp: number) => ({\r\n  ...ZERO_REWARD,\r\n  xp,\r\n})\r\nconst justRandomItem = (floor: number = 0): tEncounterReward => ({\r\n  ...ZERO_REWARD,\r\n  items: [getRandom(FLOOR_CONFIGS_BY_INDEX[floor].items)],\r\n})\r\n\r\nexport const POSSIBLE_SHINE_REWARDS = (): tEncounterReward[][] => [\r\n  [poisoned, ZERO_REWARD, armorUp],\r\n  [ZERO_REWARD, ZERO_REWARD, ZERO_REWARD, justGold(50)],\r\n  [burning, burning, ZERO_REWARD, justXp(25)],\r\n  [poisoned, burning, ZERO_REWARD, justRandomItem()],\r\n  [attackDown, ZERO_REWARD, ZERO_REWARD, justXp(25)],\r\n  [armorDown, resDown, ZERO_REWARD, justXp(10), justRandomItem()],\r\n  [attackDown, armorDown, resDown, justRandomItem()],\r\n  [poisoned, attackDown, ZERO_REWARD, justGold(100)],\r\n  [burning, burning, burning, justGold(10), justRandomItem()],\r\n  [poisoned, burning, bleeding, justRandomItem(), justRandomItem()],\r\n  [ZERO_REWARD, ZERO_REWARD, ZERO_REWARD, ZERO_REWARD, justRandomItem()],\r\n  [ZERO_REWARD, ZERO_REWARD, ZERO_REWARD, justXp(10), justGold(50)],\r\n  [resDown, armorDown, ZERO_REWARD, resUp, attackUp],\r\n  [ZERO_REWARD, ZERO_REWARD, attackUp],\r\n  [ZERO_REWARD, ZERO_REWARD, armorUp],\r\n  [ZERO_REWARD, ZERO_REWARD, resUp],\r\n  [armorDown, ZERO_REWARD, armorUp],\r\n  [resDown, ZERO_REWARD, resUp],\r\n  [attackDown, ZERO_REWARD, attackUp],\r\n  [poisoned, bleeding, resUp, attackUp],\r\n]\r\n\r\nexport const getChoiceText = (\r\n  currentChoice: tEncounterChoice | undefined,\r\n  previousChoice: tEncounterChoice | undefined,\r\n): string => {\r\n  let text = ''\r\n  const previousEncounter = previousChoice\r\n    ? previousChoice[previousChoice.value || 'left']\r\n    : undefined\r\n  if (previousChoice === undefined) {\r\n    text =\r\n      'As your party begins their journey, you travel down an empty road. You arrive at a split path, you must make a choice on which way to proceed.'\r\n  }\r\n  if (previousEncounter?.type === 'combat') {\r\n    text = getRandom([\r\n      `After the fierce battle against the ${stringArr(\r\n        (previousEncounter as tCombatEncounter).party.characters.map(\r\n          (c) => c.name,\r\n        ),\r\n      )}, your party again arrives at a choice:`,\r\n    ])\r\n  } else if (previousChoice) {\r\n    text =\r\n      'After a brief rest, your party continues their journey to dispel the evil. You feel it around you as your travel deeper. However, there now seem to be two options before you:'\r\n  }\r\n  if (currentChoice?.depth === 11) {\r\n    text =\r\n      'Your party has traveled far, but it is now time for the final fight.'\r\n  }\r\n  return text\r\n}\r\n\r\nexport const getEncounterBg = (\r\n  level: number,\r\n  floor: number,\r\n): { bg: string; overlay: string } => {\r\n  return [\r\n    [\r\n      {\r\n        // 0\r\n        bg: Forest1,\r\n        overlay: 'transparent',\r\n      },\r\n      {\r\n        // 1\r\n        bg: Forest1,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 2\r\n        bg: Forest1,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 3\r\n        bg: Forest1,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 4\r\n        bg: Forest1,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 5\r\n        bg: Forest2,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 6\r\n        bg: Forest2,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 7\r\n        bg: Forest2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 8\r\n        bg: Forest2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 9\r\n        bg: Forest3,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 10\r\n        bg: Dungeon1,\r\n        overlay: 'transparent',\r\n      },\r\n    ],\r\n  ][floor][level]\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { tItemRarity } from '../../Item/type'\r\nimport { tSkill } from '../../Skill/type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { tStats } from '../../Stats/type'\r\nimport { tStatusType } from '../../Status/type'\r\nimport { tArmor, tArmorResourceType, tArmorType } from '../type'\r\n\r\nexport const createArmor = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  resource: tArmorResourceType,\r\n  type: tArmorType,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n): tArmor => {\r\n  return {\r\n    id: v4(),\r\n    name,\r\n    rarity,\r\n    itemType: 'armor',\r\n    resource,\r\n    type,\r\n    stat: 'vigor',\r\n    goldValue,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      ...stats,\r\n    },\r\n    skills,\r\n    immunities,\r\n  }\r\n}\r\n\r\nexport const createFootwear = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'feet',\r\n    'footwear',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createHat = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(name, rarity, 'head', 'hat', goldValue, stats, skills, immunities)\r\n\r\nexport const createHeavyArmor = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'body',\r\n    'heavy-armor',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createHelmet = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'head',\r\n    'helmet',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createLightArmor = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'body',\r\n    'light-armor',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createMagicArmor = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'body',\r\n    'magic-armor',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createMagicHat = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'head',\r\n    'magic-hat',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createShield = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'offhand',\r\n    'shield',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createWard = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'offhand',\r\n    'ward',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n","import { tArmor } from '../../type'\r\nimport {\r\n  ADVENTURER_BOOTS,\r\n  ADVENTURER_CLOAK,\r\n  ADVENTURER_HOOD,\r\n} from './adventure'\r\nimport {\r\n  ANTIQUATED_ATTIRE,\r\n  ANTIQUATED_HAT,\r\n  ANTIQUATED_SHOES,\r\n} from './antiquated'\r\nimport { APPRENTICE_CAP, APPRENTICE_ROBE, APPRENTICE_SHOES } from './apprentice'\r\nimport {\r\n  ARISTOCRAT_ATTIRE,\r\n  ARISTOCRAT_HAT,\r\n  ARISTOCRAT_SHOES,\r\n} from './aristocrat'\r\nimport { BONE_ARMOR, BONE_BOOTS, BONE_HELMET } from './bone'\r\nimport {\r\n  EXECUTIONER_ARMOR,\r\n  EXECUTIONER_BOOTS,\r\n  EXECUTIONER_HELMET,\r\n} from './executioner'\r\nimport {\r\n  GRAVEGUARD_ARMOR,\r\n  GRAVEGUARD_BOOTS,\r\n  GRAVEGUARD_HELMET,\r\n} from './graveguard'\r\nimport { HUNTER_BOOTS, HUNTER_CLOAK, HUNTER_HOOD } from './hunter'\r\nimport { IRON_ARMOR, IRON_BOOTS, IRON_HELMET } from './iron'\r\nimport { NOVICE_HAT, NOVICE_ROBES, NOVICE_SHOES } from './novice'\r\nimport { PATRICIAN_ATTIRE, PATRICIAN_HAT, PATRICIAN_SHOES } from './patrician'\r\nimport { RANGER_BOOTS, RANGER_CLOAK, RANGER_HOOD } from './ranger'\r\nimport { STUDENT_BOOTS, STUDENT_CAP, STUDENT_ROBES } from './student'\r\nimport { TOMB_ARMOR, TOMB_BOOTS, TOMB_HELMET } from './tomb'\r\n\r\nexport const ARMOR_BY_LEVEL: Record<number, (() => tArmor)[]> = {\r\n  0: [\r\n    RANGER_HOOD,\r\n    RANGER_CLOAK,\r\n    RANGER_BOOTS,\r\n    PATRICIAN_HAT,\r\n    PATRICIAN_ATTIRE,\r\n    PATRICIAN_SHOES,\r\n    EXECUTIONER_HELMET,\r\n    EXECUTIONER_ARMOR,\r\n    EXECUTIONER_BOOTS,\r\n    STUDENT_CAP,\r\n    STUDENT_ROBES,\r\n    STUDENT_BOOTS,\r\n    TOMB_HELMET,\r\n    TOMB_ARMOR,\r\n    TOMB_BOOTS,\r\n  ],\r\n  1: [\r\n    ADVENTURER_HOOD,\r\n    ADVENTURER_CLOAK,\r\n    ADVENTURER_BOOTS,\r\n    ARISTOCRAT_HAT,\r\n    ARISTOCRAT_ATTIRE,\r\n    ARISTOCRAT_SHOES,\r\n    GRAVEGUARD_HELMET,\r\n    GRAVEGUARD_ARMOR,\r\n    GRAVEGUARD_BOOTS,\r\n    APPRENTICE_CAP,\r\n    APPRENTICE_ROBE,\r\n    APPRENTICE_SHOES,\r\n  ],\r\n  2: [\r\n    HUNTER_HOOD,\r\n    HUNTER_CLOAK,\r\n    HUNTER_BOOTS,\r\n    ANTIQUATED_HAT,\r\n    ANTIQUATED_ATTIRE,\r\n    ANTIQUATED_SHOES,\r\n    IRON_HELMET,\r\n    IRON_ARMOR,\r\n    IRON_BOOTS,\r\n    BONE_HELMET,\r\n    BONE_ARMOR,\r\n    BONE_BOOTS,\r\n    NOVICE_HAT,\r\n    NOVICE_ROBES,\r\n    NOVICE_SHOES,\r\n  ],\r\n}\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const RANGER_HOOD = () =>\r\n  createHat('Ranger Hood', 'common', 5, {\r\n    resistance: 1,\r\n    evasion: 3,\r\n    dexterity: 1,\r\n  })\r\nexport const RANGER_CLOAK = () =>\r\n  createLightArmor('Ranger Cloak', 'common', 10, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    evasion: 5,\r\n    dexterity: 2,\r\n    charisma: -2,\r\n  })\r\nexport const RANGER_BOOTS = () =>\r\n  createFootwear('Ranger Boots', 'common', 5, {\r\n    armor: 1,\r\n    evasion: 2,\r\n    dexterity: 1,\r\n    agility: 1,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const PATRICIAN_HAT = () =>\r\n  createHat('Patrician Hat', 'common', 5, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    charisma: 1,\r\n  })\r\n\r\nexport const PATRICIAN_ATTIRE = () =>\r\n  createLightArmor('Patrician Attire', 'common', 15, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    charisma: 2,\r\n    luck: 2,\r\n  })\r\n\r\nexport const PATRICIAN_SHOES = () =>\r\n  createFootwear('Patrician Shoes', 'common', 7, {\r\n    armor: 1,\r\n    resistance: 2,\r\n    charisma: 1,\r\n    dexterity: -2,\r\n    luck: 1,\r\n  })\r\n","import { createFootwear, createHat, createHeavyArmor } from '..'\r\n\r\nexport const EXECUTIONER_HELMET = () =>\r\n  createHat('Executioner Helmet', 'common', 5, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    vigor: 1,\r\n  })\r\n\r\nexport const EXECUTIONER_ARMOR = () =>\r\n  createHeavyArmor('Executioner Armor', 'common', 10, {\r\n    armor: 3,\r\n    resistance: 2,\r\n    strength: 2,\r\n    intelligence: -2,\r\n  })\r\n\r\nexport const EXECUTIONER_BOOTS = () =>\r\n  createFootwear('Executioner Boots', 'common', 5, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    strength: 1,\r\n    vigor: 1,\r\n  })\r\n","import { createFootwear, createMagicArmor, createMagicHat } from '..'\r\n\r\nexport const STUDENT_CAP = () =>\r\n  createMagicHat('Student Cap', 'common', 5, {\r\n    resistance: 2,\r\n    intelligence: 1,\r\n  })\r\n\r\nexport const STUDENT_ROBES = () =>\r\n  createMagicArmor('Student Robes', 'common', 10, {\r\n    armor: 1,\r\n    resistance: 3,\r\n    strength: -2,\r\n    intelligence: 2,\r\n  })\r\n\r\nexport const STUDENT_BOOTS = () =>\r\n  createFootwear('Student Boots', 'common', 5, {\r\n    resistance: 2,\r\n    intelligence: 1,\r\n    strength: -2,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const TOMB_HELMET = () =>\r\n  createHelmet('Tomb Helment', 'common', 10, {\r\n    armor: 3,\r\n    resistance: 3,\r\n  })\r\n\r\nexport const TOMB_ARMOR = () =>\r\n  createHeavyArmor('Tomb Armor', 'common', 30, {\r\n    armor: 7,\r\n    resistance: 5,\r\n  })\r\n\r\nexport const TOMB_BOOTS = () =>\r\n  createFootwear('Tomb Boots', 'common', 10, {\r\n    armor: 3,\r\n    resistance: 2,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const ADVENTURER_HOOD = () =>\r\n  createHat('Adventurer Hood', 'common', 10, {\r\n    resistance: 2,\r\n    evasion: 3,\r\n    dexterity: 2,\r\n  })\r\n\r\nexport const ADVENTURER_CLOAK = () =>\r\n  createLightArmor('Adventurer Cloak', 'uncommon', 40, {\r\n    armor: 3,\r\n    resistance: 3,\r\n    evasion: 6,\r\n    dexterity: 3,\r\n    charisma: -4,\r\n  })\r\n\r\nexport const ADVENTURER_BOOTS = () =>\r\n  createFootwear('Adventurer Boots', 'common', 10, {\r\n    armor: 2,\r\n    evasion: 3,\r\n    dexterity: 2,\r\n    agility: 2,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const ARISTOCRAT_HAT = () =>\r\n  createHat('Aristocrat Hat', 'common', 10, {\r\n    armor: 1,\r\n    resistance: 2,\r\n    maxInspirationOffset: 1,\r\n    charisma: 2,\r\n    luck: 2,\r\n  })\r\n\r\nexport const ARISTOCRAT_ATTIRE = () =>\r\n  createLightArmor('Aristocrat Attire', 'uncommon', 40, {\r\n    armor: 4,\r\n    resistance: 4,\r\n    charisma: 3,\r\n    luck: 3,\r\n  })\r\n\r\nexport const ARISTOCRAT_SHOES = () =>\r\n  createFootwear('Aristocrat Shoes', 'common', 10, {\r\n    armor: 1,\r\n    resistance: 2,\r\n    dexterity: -2,\r\n    charisma: 2,\r\n    luck: 2,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const GRAVEGUARD_HELMET = () =>\r\n  createHelmet('Graveguard Helmet', 'common', 10, {\r\n    armor: 2,\r\n    resistance: 1,\r\n    healthRegeneration: 1,\r\n  })\r\n\r\nexport const GRAVEGUARD_ARMOR = () =>\r\n  createHeavyArmor('Graveguard Armor', 'uncommon', 30, {\r\n    armor: 6,\r\n    resistance: 1,\r\n    strength: 2,\r\n    vigor: 2,\r\n  })\r\n\r\nexport const GRAVEGUARD_BOOTS = () =>\r\n  createFootwear('Graveguard Boots', 'common', 10, {\r\n    armor: 2,\r\n    resistance: 1,\r\n    vigor: 2,\r\n  })\r\n","import { createFootwear, createMagicArmor, createMagicHat } from '..'\r\n\r\nexport const APPRENTICE_CAP = () =>\r\n  createMagicHat('Apprentice Cap', 'common', 10, {\r\n    resistance: 4,\r\n    maxInspirationOffset: 1,\r\n    intelligence: 2,\r\n  }) // confuse immunity\r\n\r\nexport const APPRENTICE_ROBE = () =>\r\n  createMagicArmor(\r\n    'Apprentice Robe',\r\n    'uncommon',\r\n    40,\r\n    {\r\n      armor: 2,\r\n      resistance: 6,\r\n      maxInspirationOffset: 1,\r\n      strength: -3,\r\n      intelligence: 3,\r\n    },\r\n    [],\r\n    [\r\n      'cursed-agility',\r\n      'cursed-charisma',\r\n      'cursed-dexterity',\r\n      'cursed-intelligence',\r\n      'cursed-luck',\r\n      'cursed-strength',\r\n      'cursed-vigor',\r\n    ],\r\n  )\r\n\r\nexport const APPRENTICE_SHOES = () =>\r\n  createFootwear('Apprentice Shoes', 'common', 10, {\r\n    armor: 1,\r\n    resistance: 3,\r\n    strength: -2,\r\n    intelligence: 2,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const HUNTER_HOOD = () =>\r\n  createHat('Hunter Hood', 'common', 15, {\r\n    resistance: 3,\r\n    evasion: 4,\r\n    dexterity: 3,\r\n  })\r\n\r\nexport const HUNTER_CLOAK = () =>\r\n  createLightArmor('Hunter Cloak', 'uncommon', 50, {\r\n    armor: 5,\r\n    resistance: 5,\r\n    evasion: 7,\r\n    dexterity: 4,\r\n    charisma: -4,\r\n    agility: 2,\r\n  })\r\n\r\nexport const HUNTER_BOOTS = () =>\r\n  createFootwear('Hunter Boots', 'common', 15, {\r\n    armor: 3,\r\n    evasion: 4,\r\n    dexterity: 3,\r\n    agility: 3,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const ANTIQUATED_HAT = () =>\r\n  createHat('Antiquated Hat', 'common', 15, {\r\n    armor: 2,\r\n    resistance: 3,\r\n    maxInspirationOffset: 1,\r\n    charisma: 3,\r\n    luck: 3,\r\n  })\r\n\r\nexport const ANTIQUATED_ATTIRE = () =>\r\n  createLightArmor('Antiquated Attire', 'uncommon', 50, {\r\n    armor: 6,\r\n    resistance: 6,\r\n    dexterity: -4,\r\n    charisma: 4,\r\n    luck: 4,\r\n  })\r\n\r\nexport const ANTIQUATED_SHOES = () =>\r\n  createFootwear('Antiquated Shoes', 'common', 15, {\r\n    armor: 2,\r\n    resistance: 3,\r\n    dexterity: -4,\r\n    charisma: 3,\r\n    luck: 3,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const IRON_HELMET = () =>\r\n  createHelmet(\r\n    'Iron Helmet',\r\n    'common',\r\n    15,\r\n    {\r\n      armor: 4,\r\n      strength: 2,\r\n      dexterity: -4,\r\n    },\r\n    [],\r\n    ['stunned'],\r\n  )\r\n\r\nexport const IRON_ARMOR = () =>\r\n  createHeavyArmor('Iron Armor', 'uncommon', 50, {\r\n    armor: 7,\r\n    resistance: 1,\r\n    strength: 3,\r\n    intelligence: -3,\r\n  })\r\n\r\nexport const IRON_BOOTS = () =>\r\n  createFootwear('Iron Boots', 'common', 15, {\r\n    armor: 2,\r\n    resistance: 2,\r\n    healthRegeneration: 1,\r\n    vigor: 4,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const BONE_HELMET = () =>\r\n  createHelmet('Bone Helmet', 'common', 15, {\r\n    armor: 2,\r\n    resistance: 2,\r\n    healthRegeneration: 1,\r\n    vigor: 3,\r\n  }) // bonus damage\r\n\r\nexport const BONE_ARMOR = () =>\r\n  createHeavyArmor(\r\n    'Bone Armor',\r\n    'uncommon',\r\n    50,\r\n    {\r\n      armor: 5,\r\n      resistance: 5,\r\n      maxHealthOffset: 5,\r\n      healthRegeneration: 2,\r\n      vigor: 5,\r\n    },\r\n    [],\r\n    ['frozen'],\r\n  )\r\n\r\nexport const BONE_BOOTS = () =>\r\n  createFootwear('Bone Boots', 'common', 15, {\r\n    armor: 2,\r\n    resistance: 2,\r\n    healthRegeneration: 1,\r\n    vigor: 4,\r\n  })\r\n","import { createFootwear, createMagicArmor, createMagicHat } from '..'\r\n\r\nexport const NOVICE_HAT = () =>\r\n  createMagicHat('Novice Hat', 'common', 15, {\r\n    resistance: 6,\r\n    intelligence: 3,\r\n  }) // confuse immunity\r\n\r\nexport const NOVICE_ROBES = () =>\r\n  createMagicArmor('Novice Robes', 'uncommon', 50, {\r\n    armor: 3,\r\n    resistance: 9,\r\n    maxInspirationOffset: 1,\r\n    strength: -4,\r\n    intelligence: 4,\r\n  })\r\n\r\nexport const NOVICE_SHOES = () =>\r\n  createFootwear('Novice Shoes', 'common', 15, {\r\n    armor: 2,\r\n    resistance: 4,\r\n    strength: -3,\r\n    intelligence: 3,\r\n  })\r\n","import { createSkill } from '.'\r\n\r\nexport const SMASH = createSkill('Smash', 3, 0)\r\nexport const WITHERING_SMASH = createSkill('Smash', 2, 0)\r\nexport const GLASS_SMASH = createSkill('Smash', 1, 0)\r\nexport const RIPPLE = createSkill('Ripple', 4, -10, {\r\n  perfectSplash: true,\r\n})\r\nexport const EARTHQUAKE = createSkill('Earthquake', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const CRUSH = createSkill('Crush', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const STAB = createSkill('Stab', 4, 0, {\r\n  perfectPierce: true,\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport { STAB } from '../../../Skill/enemy/stab'\r\nimport {\r\n  CRUSH,\r\n  EARTHQUAKE,\r\n  GLASS_SMASH,\r\n  RIPPLE,\r\n  SMASH,\r\n  WITHERING_SMASH,\r\n  STUN,\r\n} from '../../../Skill/skills/blunt'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'hammer'\r\nexport const RUSTED_HAMMER = () =>\r\n  createWeapon(type, 'rusted', [SMASH, RIPPLE], {})\r\nexport const TOMB_HAMMER = () =>\r\n  createWeapon(type, 'tomb', [SMASH, EARTHQUAKE], {})\r\nexport const BURRIED_HAMMER = () =>\r\n  createWeapon(type, 'burried', [SMASH, STAB], {})\r\nexport const WITHERING_HAMMER = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_SMASH], {})\r\nexport const GLASS_HAMMER = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_SMASH], {})\r\n\r\nexport const IRON_HAMMER = () => createWeapon(type, 'iron', [SMASH, STUN], {})\r\nexport const STEEL_HAMMER = () =>\r\n  createWeapon(type, 'steel', [SMASH, EARTHQUAKE, RIPPLE], {})\r\nexport const STAINLESS_HAMMER = () =>\r\n  createWeapon(type, 'stainless', [SMASH, CRUSH, RIPPLE], {})\r\n\r\nexport const ANCIENT_HAMMER = () =>\r\n  createWeapon(type, 'ancient', [SMASH, STUN], {})\r\nexport const CRYSTAL_HAMMER = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_SMASH], {})\r\nexport const ELEMENTAL_HAMMER = () =>\r\n  createWeapon(type, 'elemental', [SMASH], {})\r\nexport const CURSED_HAMMER = () => createWeapon(type, 'cursed', [SMASH], {})\r\n\r\nexport const SHARP_HAMMER = () =>\r\n  createWeapon(type, 'sharp', [SMASH, STUN, CRUSH], {})\r\nexport const HARDENED_HAMMER = () =>\r\n  createWeapon(type, 'hardened', [SMASH, CRUSH, EARTHQUAKE, RIPPLE], {})\r\nexport const ENGRAVED_HAMMER = () => createWeapon(type, 'engraved', [], {})\r\nexport const ETHEREAL_HAMMER = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_SMASH], {})\r\n\r\nexport const EXQUISITE_HAMMER = () =>\r\n  createWeapon(type, 'exquisite', [SMASH], {})\r\nexport const DIVINE_HAMMER = () => createWeapon(type, 'divine', [SMASH], {})\r\nexport const ARCANE_HAMMER = () => createWeapon(type, 'arcane', [SMASH], {})\r\nexport const CELESTIAL_HAMMER = () =>\r\n  createBreakableWeapon(type, 'celestial', [SMASH], {})\r\n\r\nexport const HAMMERS: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [\r\n    RUSTED_HAMMER,\r\n    TOMB_HAMMER,\r\n    BURRIED_HAMMER,\r\n    WITHERING_HAMMER,\r\n    GLASS_HAMMER,\r\n  ],\r\n  2: [IRON_HAMMER, STEEL_HAMMER, STAINLESS_HAMMER],\r\n  3: [ANCIENT_HAMMER, CRYSTAL_HAMMER, ELEMENTAL_HAMMER, CURSED_HAMMER],\r\n  4: [SHARP_HAMMER, HARDENED_HAMMER, ENGRAVED_HAMMER, ETHEREAL_HAMMER],\r\n  5: [EXQUISITE_HAMMER, DIVINE_HAMMER, ARCANE_HAMMER, CELESTIAL_HAMMER],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const STRIKE = createSkill('Strike', 4, 0)\r\nexport const WITHERING_STRIKE = createSkill('Strike', 2, 0)\r\nexport const GLASS_STRIKE = createSkill('Strike', 1, 0)\r\nexport const SWING = createSkill('Swing', 5, 0)\r\nexport const FLURRY = createSkill('Flurry', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const LUNGE = createSkill('Lunge', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const STAB = createSkill('Stab', 2, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  GLASS_STRIKE,\r\n  LUNGE,\r\n  SLASH,\r\n  STAB,\r\n  STRIKE,\r\n  SWING,\r\n  WITHERING_STRIKE,\r\n} from '../../../Skill/skills/dagger'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'dagger'\r\nexport const RUSTED_DAGGER = () =>\r\n  createWeapon(type, 'rusted', [STRIKE, SWING], {})\r\nexport const TOMB_DAGGER = () => createWeapon(type, 'tomb', [SWING, LUNGE], {})\r\nexport const BURRIED_DAGGER = () =>\r\n  createWeapon(type, 'burried', [STRIKE, STAB], {})\r\nexport const WITHERING_DAGGER = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_STRIKE], {})\r\nexport const GLASS_DAGGER = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_STRIKE], {})\r\n\r\nexport const IRON_DAGGER = () =>\r\n  createWeapon(type, 'iron', [STRIKE, LUNGE, STAB], {})\r\nexport const STEEL_DAGGER = () =>\r\n  createWeapon(type, 'steel', [STRIKE, LUNGE, SLASH], {})\r\nexport const STAINLESS_DAGGER = () =>\r\n  createWeapon(type, 'stainless', [STRIKE, LUNGE, SLASH], {})\r\n\r\nexport const ANCIENT_DAGGER = () =>\r\n  createWeapon(type, 'ancient', [STRIKE, LUNGE, STAB], {})\r\nexport const CRYSTAL_DAGGER = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_STRIKE], {})\r\nexport const ELEMENTAL_DAGGER = () =>\r\n  createWeapon(type, 'elemental', [STRIKE, LUNGE, STAB], {})\r\nexport const CURSED_DAGGER = () =>\r\n  createWeapon(type, 'cursed', [STRIKE, LUNGE, SLASH], {})\r\n\r\nexport const SHARP_DAGGER = () =>\r\n  createWeapon(type, 'sharp', [STRIKE, LUNGE, STAB], {})\r\nexport const HARDENED_DAGGER = () =>\r\n  createWeapon(type, 'hardened', [STRIKE, LUNGE, SLASH], {})\r\nexport const ENGRAVED_DAGGER = () =>\r\n  createWeapon(type, 'engraved', [STRIKE, LUNGE, STAB], {})\r\nexport const ETHEREAL_DAGGER = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_STRIKE], {})\r\n\r\nexport const EXQUISITE_DAGGER = () =>\r\n  createWeapon(type, 'exquisite', [STRIKE, LUNGE, SLASH], {})\r\nexport const DIVINE_DAGGER = () =>\r\n  createWeapon(type, 'divine', [STRIKE, LUNGE, STAB], {})\r\nexport const ARCANE_DAGGER = () =>\r\n  createWeapon(type, 'arcane', [STRIKE, LUNGE, SLASH], {})\r\nexport const CELESTIAL_DAGGER = () =>\r\n  createBreakableWeapon(type, 'celestial', [STRIKE, LUNGE, STAB], {})\r\n\r\nexport const DAGGERS: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [\r\n    RUSTED_DAGGER,\r\n    TOMB_DAGGER,\r\n    BURRIED_DAGGER,\r\n    WITHERING_DAGGER,\r\n    GLASS_DAGGER,\r\n  ],\r\n  2: [IRON_DAGGER, STEEL_DAGGER, STAINLESS_DAGGER],\r\n  3: [ANCIENT_DAGGER, CRYSTAL_DAGGER, ELEMENTAL_DAGGER, CURSED_DAGGER],\r\n  4: [SHARP_DAGGER, HARDENED_DAGGER, ENGRAVED_DAGGER, ETHEREAL_DAGGER],\r\n  5: [EXQUISITE_DAGGER, DIVINE_DAGGER, ARCANE_DAGGER, CELESTIAL_DAGGER],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const STRIKE = createSkill('Strike', 3, 0)\r\nexport const WITHERING_STRIKE = createSkill('Strike', 2, 0)\r\nexport const GLASS_STRIKE = createSkill('Strike', 1, 0)\r\nexport const SWING = createSkill('Swing', 4, 0)\r\nexport const WIDE_SWING = createSkill('Wide Swing', 4, -5, {\r\n  damageModifier: 0.8,\r\n  splashDamageModifier: 0.8,\r\n  perfectSplash: true,\r\n})\r\nexport const FLURRY = createSkill('Swipe', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const LUNGE = createSkill('Lunge', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const SLICE = createSkill('Stab', 2, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  FLURRY,\r\n  STRIKE,\r\n  LUNGE,\r\n  WIDE_SWING,\r\n  GLASS_STRIKE,\r\n  WITHERING_STRIKE,\r\n  SLASH,\r\n  SLICE,\r\n  STUN,\r\n  SWING,\r\n} from '../../../Skill/skills/greatsword'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'greatsword'\r\nexport const RUSTED_GREATSWORD = () =>\r\n  createWeapon(type, 'rusted', [STRIKE], {})\r\nexport const TOMB_GREATSWORD = () =>\r\n  createWeapon(type, 'tomb', [SWING, FLURRY], {})\r\nexport const BURRIED_GREATSWORD = () =>\r\n  createWeapon(type, 'burried', [STRIKE, FLURRY, SLICE], {})\r\nexport const WITHERING_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_STRIKE], {})\r\nexport const GLASS_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_STRIKE], {})\r\n\r\nexport const IRON_GREATSWORD = () =>\r\n  createWeapon(type, 'iron', [STRIKE, STUN], {})\r\nexport const STEEL_GREATSWORD = () =>\r\n  createWeapon(type, 'steel', [STRIKE, SLICE, LUNGE], {})\r\nexport const STAINLESS_GREATSWORD = () =>\r\n  createWeapon(type, 'stainless', [SLICE, LUNGE, SLASH], {})\r\n\r\nexport const ANCIENT_GREATSWORD = () =>\r\n  createWeapon(type, 'ancient', [SWING, LUNGE, WIDE_SWING], {})\r\nexport const CRYSTAL_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_STRIKE], {})\r\nexport const ELEMENTAL_GREATSWORD = () =>\r\n  createWeapon(type, 'elemental', [STRIKE], {})\r\nexport const CURSED_GREATSWORD = () =>\r\n  createWeapon(type, 'cursed', [STRIKE], {})\r\n\r\nexport const SHARP_GREATSWORD = () =>\r\n  createWeapon(type, 'sharp', [SLICE, SLASH, WIDE_SWING], {})\r\nexport const HARDENED_GREATSWORD = () =>\r\n  createWeapon(type, 'hardened', [SLICE, SLICE, STUN], {})\r\nexport const ENGRAVED_GREATSWORD = () =>\r\n  createWeapon(type, 'engraved', [SLICE, SLASH, FLURRY], {})\r\nexport const ETHEREAL_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_STRIKE], {})\r\n\r\nexport const EXQUISITE_GREATSWORD = () =>\r\n  createWeapon(type, 'exquisite', [SLICE, SLASH, LUNGE], {})\r\nexport const DIVINE_GREATSWORD = () => createWeapon(type, 'divine', [], {})\r\nexport const ARCANE_GREATSWORD = () =>\r\n  createWeapon(type, 'arcane', [STRIKE], {})\r\nexport const CELESTIAL_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'celestial', [GLASS_STRIKE], {})\r\n\r\nexport const GREATSWORDS: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [\r\n    RUSTED_GREATSWORD,\r\n    TOMB_GREATSWORD,\r\n    BURRIED_GREATSWORD,\r\n    WITHERING_GREATSWORD,\r\n    GLASS_GREATSWORD,\r\n  ],\r\n  2: [IRON_GREATSWORD, STEEL_GREATSWORD, STAINLESS_GREATSWORD],\r\n  3: [\r\n    ANCIENT_GREATSWORD,\r\n    CRYSTAL_GREATSWORD,\r\n    ELEMENTAL_GREATSWORD,\r\n    CURSED_GREATSWORD,\r\n  ],\r\n  4: [\r\n    SHARP_GREATSWORD,\r\n    HARDENED_GREATSWORD,\r\n    ENGRAVED_GREATSWORD,\r\n    ETHEREAL_GREATSWORD,\r\n  ],\r\n  5: [\r\n    EXQUISITE_GREATSWORD,\r\n    DIVINE_GREATSWORD,\r\n    ARCANE_GREATSWORD,\r\n    CELESTIAL_GREATSWORD,\r\n  ],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const FIRE = createSkill('Fire', 1, 0, {\r\n  perfectSplash: true,\r\n})\r\nexport const SNIPE = createSkill('Snipe', 2, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const FAN_FIRE = createSkill('Fan Fire', 1, 0, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport { FAN_FIRE, FIRE, SNIPE } from '../../../Skill/skills/pistol'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'pistol'\r\nexport const PATRICIANS_PISTOL = () => ({\r\n  ...createWeapon(type, 'starting', [], {}),\r\n  name: `Patrician Pistol`,\r\n})\r\nexport const RUSTED_PISTOL = () =>\r\n  createWeapon(type, 'rusted', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const TOMB_PISTOL = () =>\r\n  createWeapon(type, 'tomb', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const BURRIED_PISTOL = () =>\r\n  createWeapon(type, 'burried', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const WITHERING_PISTOL = () =>\r\n  createBreakableWeapon(type, 'withering', [FIRE], {})\r\nexport const GLASS_PISTOL = () =>\r\n  createBreakableWeapon(type, 'glass', [FIRE], {})\r\n\r\nexport const IRON_PISTOL = () =>\r\n  createWeapon(type, 'iron', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const STEEL_PISTOL = () =>\r\n  createWeapon(type, 'steel', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const STAINLESS_PISTOL = () =>\r\n  createWeapon(type, 'stainless', [FIRE, SNIPE, FAN_FIRE], {})\r\n\r\nexport const ANCIENT_PISTOL = () =>\r\n  createWeapon(type, 'ancient', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const CRYSTAL_PISTOL = () =>\r\n  createBreakableWeapon(type, 'crystal', [FIRE], {})\r\nexport const ELEMENTAL_PISTOL = () =>\r\n  createWeapon(type, 'elemental', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const CURSED_PISTOL = () =>\r\n  createWeapon(type, 'cursed', [FIRE, SNIPE, FAN_FIRE], {})\r\n\r\nexport const SHARP_PISTOL = () =>\r\n  createWeapon(type, 'sharp', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const HARDENED_PISTOL = () =>\r\n  createWeapon(type, 'hardened', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const ENGRAVED_PISTOL = () =>\r\n  createWeapon(type, 'engraved', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const ETHEREAL_PISTOL = () =>\r\n  createBreakableWeapon(type, 'ethereal', [FIRE], {})\r\n\r\nexport const EXQUISITE_PISTOL = () =>\r\n  createWeapon(type, 'exquisite', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const DIVINE_PISTOL = () =>\r\n  createWeapon(type, 'divine', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const ARCANE_PISTOL = () =>\r\n  createWeapon(type, 'arcane', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const CELESTIAL_PISTOL = () =>\r\n  createBreakableWeapon(type, 'celestial', [FIRE], {})\r\n\r\nexport const PISTOLS: tWeaponsByLevel = {\r\n  0: [PATRICIANS_PISTOL],\r\n  1: [\r\n    RUSTED_PISTOL,\r\n    TOMB_PISTOL,\r\n    BURRIED_PISTOL,\r\n    WITHERING_PISTOL,\r\n    GLASS_PISTOL,\r\n  ],\r\n  2: [IRON_PISTOL, STEEL_PISTOL, STAINLESS_PISTOL],\r\n  3: [ANCIENT_PISTOL, CRYSTAL_PISTOL, ELEMENTAL_PISTOL, CURSED_PISTOL],\r\n  4: [SHARP_PISTOL, HARDENED_PISTOL, ENGRAVED_PISTOL, ETHEREAL_PISTOL],\r\n  5: [EXQUISITE_PISTOL, DIVINE_PISTOL, ARCANE_PISTOL, CELESTIAL_PISTOL],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const THRUST = createSkill('Thrust', 3, 0)\r\nexport const SWING = createSkill('Swing', 4, 0)\r\nexport const WITHERING_SWING = createSkill('Swing', 2, 0)\r\nexport const GLASS_SWING = createSkill('Swing', 1, 0)\r\nexport const FLURRY = createSkill('Flurry', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const CLEAVE = createSkill('Cleave', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const SLICE = createSkill('Slice', 4, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\nexport const ARMOR_UP = createSkill('Armor Up', 2, 0, {\r\n  targetType: 'self',\r\n  perfectStatus: ['armor-up'],\r\n})\r\nexport const EVADE_UP = createSkill('Evade Up', 2, 0, {\r\n  targetType: 'self',\r\n  perfectStatus: ['evade-up'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  ARMOR_UP,\r\n  CLEAVE,\r\n  EVADE_UP,\r\n  FLURRY,\r\n  GLASS_SWING,\r\n  SLASH,\r\n  SLICE,\r\n  SWING,\r\n  THRUST,\r\n  WITHERING_SWING,\r\n} from '../../../Skill/skills/scythe'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'scythe'\r\nexport const RUSTED_SCYTHE = () => createWeapon(type, 'rusted', [THRUST], {})\r\nexport const TOMB_SCYTHE = () => createWeapon(type, 'tomb', [SWING, FLURRY], {})\r\nexport const BURRIED_SCYTHE = () =>\r\n  createWeapon(type, 'burried', [SWING, SLICE], {})\r\nexport const WITHERING_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_SWING], {})\r\nexport const GLASS_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_SWING], {})\r\n\r\nexport const IRON_SCYTHE = () =>\r\n  createWeapon(type, 'iron', [THRUST, ARMOR_UP, EVADE_UP], {})\r\nexport const STEEL_SCYTHE = () =>\r\n  createWeapon(type, 'steel', [THRUST, SLASH], {})\r\nexport const STAINLESS_SCYTHE = () =>\r\n  createWeapon(type, 'stainless', [THRUST, SLICE], {})\r\n\r\nexport const ANCIENT_SCYTHE = () =>\r\n  createWeapon(type, 'ancient', [SWING, CLEAVE, ARMOR_UP], {})\r\nexport const CRYSTAL_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_SWING], {})\r\nexport const ELEMENTAL_SCYTHE = () =>\r\n  createWeapon(type, 'elemental', [THRUST], {})\r\nexport const CURSED_SCYTHE = () => createWeapon(type, 'cursed', [THRUST], {})\r\n\r\nexport const SHARP_SCYTHE = () =>\r\n  createWeapon(type, 'sharp', [THRUST, SLICE, SLASH], {})\r\nexport const HARDENED_SCYTHE = () =>\r\n  createWeapon(type, 'hardened', [THRUST, FLURRY, ARMOR_UP, EVADE_UP], {})\r\nexport const ENGRAVED_SCYTHE = () =>\r\n  createWeapon(type, 'engraved', [THRUST, FLURRY, SLASH, CLEAVE], {})\r\nexport const ETHEREAL_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_SWING], {})\r\n\r\nexport const EXQUISITE_SCYTHE = () =>\r\n  createWeapon(type, 'exquisite', [THRUST, SLICE, SLASH], {})\r\nexport const DIVINE_SCYTHE = () =>\r\n  createWeapon(type, 'divine', [THRUST, SLICE, ARMOR_UP, EVADE_UP], {})\r\nexport const ARCANE_SCYTHE = () => createWeapon(type, 'arcane', [THRUST], {})\r\nexport const CELESTIAL_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'celestial', [GLASS_SWING], {})\r\n\r\nexport const SCYTHES: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [\r\n    RUSTED_SCYTHE,\r\n    TOMB_SCYTHE,\r\n    BURRIED_SCYTHE,\r\n    WITHERING_SCYTHE,\r\n    GLASS_SCYTHE,\r\n  ],\r\n  2: [IRON_SCYTHE, STEEL_SCYTHE, STAINLESS_SCYTHE],\r\n  3: [ANCIENT_SCYTHE, CRYSTAL_SCYTHE, ELEMENTAL_SCYTHE, CURSED_SCYTHE],\r\n  4: [SHARP_SCYTHE, HARDENED_SCYTHE, ENGRAVED_SCYTHE, ETHEREAL_SCYTHE],\r\n  5: [EXQUISITE_SCYTHE, DIVINE_SCYTHE, ARCANE_SCYTHE, CELESTIAL_SCYTHE],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const STRIKE = createSkill('Strike', 2, 0)\r\nexport const WITHERING_STRIKE = createSkill('Strike', 2, 0)\r\nexport const GLASS_STRIKE = createSkill('Strike', 1, 0)\r\nexport const SWING = createSkill('Swing', 4, 0)\r\nexport const FLURRY = createSkill('Swipe', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const LUNGE = createSkill('Lunge', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const STAB = createSkill('Stab', 2, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  LUNGE,\r\n  FLURRY,\r\n  GLASS_STRIKE,\r\n  SLASH,\r\n  STAB,\r\n  SWING,\r\n  STRIKE,\r\n  WITHERING_STRIKE,\r\n} from '../../../Skill/skills/sword'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'sword'\r\nexport const RUSTED_SWORD = () => createWeapon(type, 'rusted', [STRIKE], {})\r\nexport const TOMB_SWORD = () => createWeapon(type, 'tomb', [SWING, FLURRY], {})\r\nexport const BURRIED_SWORD = () =>\r\n  createWeapon(type, 'burried', [SWING, STAB], {})\r\nexport const WITHERING_SWORD = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_STRIKE], {})\r\nexport const GLASS_SWORD = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_STRIKE], {})\r\n\r\nexport const IRON_SWORD = () => createWeapon(type, 'iron', [STRIKE, LUNGE], {})\r\nexport const STEEL_SWORD = () =>\r\n  createWeapon(type, 'steel', [STRIKE, SLASH], {})\r\nexport const STAINLESS_SWORD = () =>\r\n  createWeapon(type, 'stainless', [STRIKE, STAB], {})\r\n\r\nexport const ANCIENT_SWORD = () =>\r\n  createWeapon(type, 'ancient', [STRIKE, LUNGE], {})\r\nexport const CRYSTAL_SWORD = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_STRIKE], {})\r\nexport const ELEMENTAL_SWORD = () =>\r\n  createWeapon(type, 'elemental', [STRIKE], {})\r\nexport const CURSED_SWORD = () => createWeapon(type, 'cursed', [STRIKE], {})\r\n\r\nexport const SHARP_SWORD = () =>\r\n  createWeapon(type, 'sharp', [STRIKE, STAB, SLASH], {})\r\nexport const HARDENED_SWORD = () =>\r\n  createWeapon(type, 'hardened', [STRIKE, FLURRY, LUNGE], {})\r\nexport const ENGRAVED_SWORD = () =>\r\n  createWeapon(type, 'engraved', [STRIKE, FLURRY, SLASH, LUNGE], {})\r\nexport const ETHEREAL_SWORD = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_STRIKE], {})\r\n\r\nexport const EXQUISITE_SWORD = () =>\r\n  createWeapon(type, 'exquisite', [STRIKE, STAB, SLASH], {})\r\nexport const DIVINE_SWORD = () =>\r\n  createWeapon(type, 'divine', [STRIKE, STAB, SLASH], {})\r\nexport const ARCANE_SWORD = () => createWeapon(type, 'arcane', [STRIKE], {})\r\nexport const CELESTIAL_SWORD = () =>\r\n  createBreakableWeapon(type, 'celestial', [GLASS_STRIKE], {})\r\n\r\nexport const SWORDS: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [RUSTED_SWORD, TOMB_SWORD, BURRIED_SWORD, WITHERING_SWORD, GLASS_SWORD],\r\n  2: [IRON_SWORD, STEEL_SWORD, STAINLESS_SWORD],\r\n  3: [ANCIENT_SWORD, CRYSTAL_SWORD, ELEMENTAL_SWORD, CURSED_SWORD],\r\n  4: [SHARP_SWORD, HARDENED_SWORD, ENGRAVED_SWORD, ETHEREAL_SWORD],\r\n  5: [EXQUISITE_SWORD, DIVINE_SWORD, ARCANE_SWORD, CELESTIAL_SWORD],\r\n}\r\n","import { tWeapon } from '../../type'\r\nimport { tWeaponsByLevel } from '../type'\r\nimport { AXES } from './axe'\r\nimport { HAMMERS } from './hammer'\r\nimport { BOWS } from './bow'\r\nimport { CATALYSTS } from './catalyst'\r\nimport { CHIMES } from './chime'\r\nimport { DAGGERS } from './dagger'\r\nimport { GREATSWORDS } from './greatsword'\r\nimport { PISTOLS } from './pistol'\r\nimport { SCYTHES } from './scythe'\r\nimport { SWORDS } from './sword'\r\n\r\nexport const WEAPONS: tWeaponsByLevel = {\r\n  0: [\r\n    ...AXES[0],\r\n    ...HAMMERS[0],\r\n    ...BOWS[0],\r\n    ...CATALYSTS[0],\r\n    ...CHIMES[0],\r\n    ...DAGGERS[0],\r\n    ...GREATSWORDS[0],\r\n    ...PISTOLS[0],\r\n    ...SCYTHES[0],\r\n    ...SWORDS[0],\r\n  ],\r\n  1: [\r\n    ...AXES[1],\r\n    ...HAMMERS[1],\r\n    ...BOWS[1],\r\n    ...CATALYSTS[1],\r\n    ...CHIMES[1],\r\n    ...DAGGERS[1],\r\n    ...GREATSWORDS[1],\r\n    ...PISTOLS[1],\r\n    ...SCYTHES[1],\r\n    ...SWORDS[1],\r\n  ],\r\n  2: [\r\n    ...AXES[2],\r\n    ...HAMMERS[2],\r\n    ...BOWS[2],\r\n    ...CATALYSTS[2],\r\n    ...CHIMES[2],\r\n    ...DAGGERS[2],\r\n    ...GREATSWORDS[2],\r\n    ...PISTOLS[2],\r\n    ...SCYTHES[2],\r\n    ...SWORDS[2],\r\n  ],\r\n  3: [\r\n    ...AXES[3],\r\n    ...HAMMERS[3],\r\n    ...BOWS[3],\r\n    ...CATALYSTS[3],\r\n    ...CHIMES[3],\r\n    ...DAGGERS[3],\r\n    ...GREATSWORDS[3],\r\n    ...PISTOLS[3],\r\n    ...SCYTHES[3],\r\n    ...SWORDS[3],\r\n  ],\r\n  4: [\r\n    ...AXES[4],\r\n    ...HAMMERS[4],\r\n    ...BOWS[4],\r\n    ...CATALYSTS[4],\r\n    ...CHIMES[4],\r\n    ...DAGGERS[4],\r\n    ...GREATSWORDS[4],\r\n    ...PISTOLS[4],\r\n    ...SCYTHES[4],\r\n    ...SWORDS[4],\r\n  ],\r\n  5: [\r\n    ...AXES[5],\r\n    ...HAMMERS[5],\r\n    ...BOWS[5],\r\n    ...CATALYSTS[5],\r\n    ...CHIMES[5],\r\n    ...DAGGERS[5],\r\n    ...GREATSWORDS[5],\r\n    ...PISTOLS[5],\r\n    ...SCYTHES[5],\r\n    ...SWORDS[5],\r\n  ],\r\n}\r\n\r\nexport const ALL_WEAPONS = Object.keys(WEAPONS).reduce((allWeapons, level) => {\r\n  return [...allWeapons, ...WEAPONS[parseInt(level, 10)]]\r\n}, [] as (() => tWeapon)[])\r\n","import { getRandom } from '../../util'\r\nimport { ARMOR_BY_LEVEL } from '../Armor/builders/sets'\r\nimport { tArmor } from '../Armor/type'\r\nimport { WEAPONS } from '../Weapon/builders/objects'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { tItemType } from './type'\r\n\r\nexport const getRandomItem = (level: number): tWeapon | tArmor => {\r\n  const itemType: tItemType = getRandom(['weapon', 'armor'])\r\n  if (itemType === 'weapon') {\r\n    level = level === 0 ? 1 : level\r\n    let items = Array(level + 1)\r\n      .fill(null)\r\n      .reduce((result, _, index) => {\r\n        if (index === 0) return result\r\n        return [...result, ...WEAPONS[index]]\r\n      }, [] as (() => tWeapon)[]) as (() => tWeapon)[]\r\n\r\n    return getRandom(items)()\r\n  } else {\r\n    let items = Array(level + 1)\r\n      .fill(null)\r\n      .reduce((result, _, index) => {\r\n        return [...result, ...ARMOR_BY_LEVEL[index]]\r\n      }, [] as (() => tArmor)[]) as (() => tArmor)[]\r\n    return getRandom(items)()\r\n  }\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Bandit from '../../../icons/svg/delapouite/bandit.svg'\r\nimport { tCharacter } from '../type'\r\nimport { BASE_C_STATS } from '../../Stats/constants'\r\nimport { STAB } from '../../Skill/enemy/stab'\r\nimport { ZERO_REWARD } from '../../Encounter/constants'\r\nimport { BASE_CHARACTER } from '../constants'\r\nimport { BASE_WEAPON } from '../../Weapon/constants'\r\nimport { getRandomItem } from '../../Item/util'\r\n\r\nexport const BANDIT = (): tCharacter => {\r\n  return {\r\n    ...BASE_CHARACTER(),\r\n    name: 'Bandit',\r\n    icon: Bandit,\r\n    level: 2,\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      strength: 76,\r\n      vigor: 50,\r\n      intelligence: 40,\r\n      dexterity: 52,\r\n      charisma: 72,\r\n      agility: getRandom([59, 60, 61, 62, 63, 64]),\r\n      luck: 50,\r\n      armor: 4,\r\n      resistance: 0,\r\n      evasion: 10,\r\n      maxHealthOffset: -20,\r\n    },\r\n    weapon: {\r\n      ...BASE_WEAPON(),\r\n      name: 'Buccaneer Dagger',\r\n      type: 'enemy',\r\n      stat: 'strength',\r\n      damage: {\r\n        value: 12,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      skills: [STAB],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 4,\r\n        xp: 5,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 4,\r\n        xp: 5,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 8,\r\n        xp: 10,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 8,\r\n        xp: 10,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 20,\r\n        xp: 15,\r\n        items: [getRandomItem(1)],\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 80,\r\n        xp: 15,\r\n        items: [getRandomItem(1)],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const IMPALE: tSkill = {\r\n  id: v4(),\r\n  name: 'Impale',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 5,\r\n  offset: -5,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: ['bleeding'],\r\n}\r\n","import BeastMan from '../../../icons/svg/delapouite/orc-head.svg'\r\nimport { tCharacter } from '../type'\r\nimport { BASE_C_STATS } from '../../Stats/constants'\r\nimport { IMPALE } from '../../Skill/enemy/impale'\r\nimport { getRandom } from '../../../util'\r\nimport { ZERO_REWARD } from '../../Encounter/constants'\r\nimport { BASE_CHARACTER } from '../constants'\r\nimport { BASE_WEAPON } from '../../Weapon/constants'\r\nimport { getRandomItem } from '../../Item/util'\r\n\r\nexport const FOREST_BEAST = (): tCharacter => {\r\n  return {\r\n    ...BASE_CHARACTER(),\r\n    name: 'Forest Beast',\r\n    icon: BeastMan,\r\n    level: 1,\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      vigor: -80,\r\n      strength: 52,\r\n      intelligence: 40,\r\n      dexterity: 52,\r\n      charisma: 30,\r\n      agility: getRandom([55, 56, 57, 58, 59, 60, 61]),\r\n      luck: 50,\r\n      armor: 3,\r\n      resistance: 0,\r\n      evasion: 10,\r\n    },\r\n    weapon: {\r\n      ...BASE_WEAPON(),\r\n      name: 'Beastman Spear',\r\n      type: 'enemy',\r\n      stat: 'strength',\r\n      damage: {\r\n        value: 8,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      skills: [IMPALE],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 6,\r\n        xp: 5,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 7,\r\n        xp: 7,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 7,\r\n        xp: 7,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 10,\r\n        xp: 8,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 10,\r\n        xp: 8,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 20,\r\n        xp: 10,\r\n        items: [getRandomItem(1)],\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 20,\r\n        xp: 10,\r\n        items: [getRandomItem(1)],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const STING: tSkill = {\r\n  id: v4(),\r\n  name: 'Sting',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n\r\nexport const INFECTIOUS_STING: tSkill = {\r\n  id: v4(),\r\n  name: 'Infectious Sting',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: -10,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['poisoned'],\r\n}\r\n","import Bee from '../../../icons/svg/lorc/bee.svg'\r\nimport { tCharacter } from '../type'\r\nimport { BASE_C_STATS } from '../../Stats/constants'\r\nimport { STING, INFECTIOUS_STING } from '../../Skill/enemy/sting'\r\nimport { getRandom } from '../../../util'\r\nimport { GODSBEARD } from '../../Consumable/objects/godsbeard'\r\nimport { ZERO_REWARD } from '../../Encounter/constants'\r\nimport { BASE_CHARACTER } from '../constants'\r\nimport { BASE_WEAPON } from '../../Weapon/constants'\r\nimport { getRandomItem } from '../../Item/util'\r\n\r\nexport const BEE = (): tCharacter => {\r\n  return {\r\n    ...BASE_CHARACTER(),\r\n    name: 'Bee',\r\n    icon: Bee,\r\n    level: 1,\r\n    tags: ['flying'],\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      vigor: -80,\r\n      strength: 30,\r\n      intelligence: 30,\r\n      dexterity: 52,\r\n      charisma: 30,\r\n      agility: getRandom([78, 79, 80, 81, 82, 83]),\r\n      luck: 0,\r\n      armor: 0,\r\n      resistance: 0,\r\n      evasion: 17,\r\n      maxHealthOffset: -4,\r\n    },\r\n    weapon: {\r\n      ...BASE_WEAPON(),\r\n      name: 'Bee Stinger',\r\n      type: 'enemy',\r\n      stat: 'dexterity',\r\n      damage: {\r\n        value: 12,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      skills: [STING, INFECTIOUS_STING],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 1,\r\n        xp: 4,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 4,\r\n        xp: 6,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 4,\r\n        xp: 6,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 4,\r\n        xp: 6,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 8,\r\n        xp: 8,\r\n        items: [getRandomItem(0)],\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 0,\r\n        xp: 10,\r\n        items: [GODSBEARD()],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import Icon from '../../../icons/svg/delapouite/kenku-head.svg'\r\nimport { tCharacter } from '../type'\r\nimport { BASE_C_STATS } from '../../Stats/constants'\r\nimport { STAB } from '../../Skill/enemy/stab'\r\nimport { getRandom } from '../../../util'\r\nimport { ZERO_REWARD } from '../../Encounter/constants'\r\nimport { BASE_CHARACTER } from '../constants'\r\nimport { BASE_WEAPON } from '../../Weapon/constants'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { IMPALE } from '../../Skill/enemy/impale'\r\n\r\nexport const CULTIST_BRUTE = (): tCharacter => {\r\n  return {\r\n    ...BASE_CHARACTER(),\r\n    name: 'Cultist Brute',\r\n    icon: Icon,\r\n    level: 4,\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      strength: 72,\r\n      vigor: 66,\r\n      intelligence: 46,\r\n      dexterity: 50,\r\n      charisma: 64,\r\n      agility: getRandom([75, 76, 77, 78, 79, 80, 81, 82]),\r\n      luck: 50,\r\n      armor: 6,\r\n      resistance: 2,\r\n      evasion: 20,\r\n      maxHealthOffset: -37,\r\n    },\r\n    weapon: {\r\n      ...BASE_WEAPON(),\r\n      name: 'Cultist Axe',\r\n      type: 'enemy',\r\n      stat: 'strength',\r\n      damage: {\r\n        value: 12,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      skills: [STAB, IMPALE],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 20,\r\n        xp: 15,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 20,\r\n        xp: 16,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 20,\r\n        xp: 16,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 20,\r\n        xp: 17,\r\n        items: [],\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 20,\r\n        xp: 18,\r\n        items: [getRandomItem(1)],\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 80,\r\n        xp: 20,\r\n        items: [getRandomItem(2)],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { tSkill } from '../type'\r\n\r\nexport const TORCH: tSkill = {\r\n  id: v4(),\r\n  name: 'Torch',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 4,\r\n  offset: -10,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['burning'],\r\n}\r\n","import { createSkill } from '../skills'\r\n\r\nexport const ARCANE = createSkill('Cult Arcane', 3, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const BLAST = createSkill('Cultist Blast', 3, 0)\r\n","import { getRandom } from '../../../util'\r\nimport Cultist from '../../../icons/svg/lorc/cultist.svg'\r\nimport { tCharacter } from '../type'\r\nimport { BASE_C_STATS } from '../../Stats/constants'\r\nimport { TORCH } from '../../Skill/enemy/torch'\r\nimport { ZERO_REWARD } from '../../Encounter/constants'\r\nimport { BASE_CHARACTER } from '../constants'\r\nimport { BASE_WEAPON } from '../../Weapon/constants'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { ARCANE } from '../../Skill/skills/catalyst'\r\nimport { BLAST } from '../../Skill/enemy/arcane'\r\n\r\nexport const CULTIST = (): tCharacter => {\r\n  return {\r\n    ...BASE_CHARACTER(),\r\n    name: 'Cultist',\r\n    icon: Cultist,\r\n    level: 1,\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      strength: 50,\r\n      vigor: 50,\r\n      intelligence: 75,\r\n      dexterity: 52,\r\n      charisma: 72,\r\n      agility: getRandom([68, 69, 70, 71]),\r\n      luck: 50,\r\n      armor: 1,\r\n      resistance: 4,\r\n      evasion: 15,\r\n      maxHealthOffset: -19,\r\n    },\r\n    weapon: {\r\n      ...BASE_WEAPON(),\r\n      name: 'Cultist Torch',\r\n      type: 'enemy',\r\n      stat: 'intelligence',\r\n      damage: {\r\n        value: 14,\r\n        range: 'melee',\r\n        type: 'magic',\r\n      },\r\n      skills: [TORCH, ARCANE, BLAST],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 10,\r\n        xp: 12,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 15,\r\n        xp: 13,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 15,\r\n        xp: 13,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 15,\r\n        xp: 13,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [],\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [getRandomItem(1)],\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 80,\r\n        xp: 20,\r\n        items: [getRandomItem(2)],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const BITE: tSkill = {\r\n  id: v4(),\r\n  name: 'Bite',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import Wolf from '../../../icons/svg/lorc/wolf-head.svg'\r\nimport { tCharacter } from '../type'\r\nimport { BASE_C_STATS } from '../../Stats/constants'\r\nimport { BITE } from '../../Skill/enemy/bite'\r\nimport { getRandom } from '../../../util'\r\nimport { ZERO_REWARD } from '../../Encounter/constants'\r\nimport { BASE_CHARACTER } from '../constants'\r\nimport { BASE_WEAPON } from '../../Weapon/constants'\r\nimport { getRandomItem } from '../../Item/util'\r\n\r\nexport const TIMBERWOLF = (): tCharacter => {\r\n  return {\r\n    ...BASE_CHARACTER(),\r\n    name: 'Timberwolf',\r\n    icon: Wolf,\r\n    level: 1,\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      vigor: -80,\r\n      strength: 52,\r\n      intelligence: 40,\r\n      dexterity: 52,\r\n      charisma: 30,\r\n      agility: getRandom([60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70]),\r\n      luck: 50,\r\n      armor: 0,\r\n      resistance: 0,\r\n      evasion: 10,\r\n      maxHealthOffset: -1,\r\n    },\r\n    weapon: {\r\n      ...BASE_WEAPON(),\r\n      name: 'Wolf Fangs',\r\n      type: 'enemy',\r\n      stat: 'dexterity',\r\n      damage: {\r\n        value: 7,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      skills: [BITE],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 4,\r\n        xp: 3,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 4,\r\n        xp: 3,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 4,\r\n        xp: 3,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 4,\r\n        xp: 3,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 4,\r\n        xp: 3,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 4,\r\n        xp: 3,\r\n        items: [getRandomItem(0)],\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 19,\r\n        xp: 3,\r\n        items: [getRandomItem(0)],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const PECK: tSkill = {\r\n  id: v4(),\r\n  name: 'Peck',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { createSkill } from '../skills'\r\n\r\nexport const CAW = createSkill('Caw', 2, -5, {\r\n  damage: false,\r\n  damageModifier: 0,\r\n  perfectStatus: ['resistance-down'],\r\n})\r\n","import Raven from '../../../icons/svg/lorc/raven.svg'\r\nimport { tCharacter } from '../type'\r\nimport { ZERO_STATS, BASE_C_STATS } from '../../Stats/constants'\r\nimport { PECK } from '../../Skill/enemy/peck'\r\nimport { getRandom } from '../../../util'\r\nimport { ZERO_REWARD } from '../../Encounter/constants'\r\nimport { BASE_CHARACTER } from '../constants'\r\nimport { BASE_WEAPON } from '../../Weapon/constants'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { CAW } from '../../Skill/enemy/caw'\r\n\r\nexport const FOREST_RAVEN = (): tCharacter => {\r\n  return {\r\n    ...BASE_CHARACTER(),\r\n    name: 'Forest Raven',\r\n    icon: Raven,\r\n    level: 1,\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      vigor: -80,\r\n      strength: 40,\r\n      intelligence: 40,\r\n      dexterity: 52,\r\n      charisma: 30,\r\n      agility: getRandom([74, 75, 76, 77, 78]),\r\n      luck: 50,\r\n      armor: 0,\r\n      resistance: 0,\r\n      evasion: 10,\r\n    },\r\n    status: [\r\n      {\r\n        duration: -1,\r\n        type: 'evasive',\r\n        stats: ZERO_STATS,\r\n        stack: 0,\r\n        immunities: [],\r\n      },\r\n    ],\r\n    weapon: {\r\n      ...BASE_WEAPON(),\r\n      name: 'Crow Beak',\r\n      type: 'enemy',\r\n      stat: 'dexterity',\r\n      damage: {\r\n        value: 6,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      skills: [PECK, CAW],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 0,\r\n        xp: 5,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 3,\r\n        xp: 7,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 3,\r\n        xp: 7,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 3,\r\n        xp: 7,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 0,\r\n        xp: 7,\r\n        items: [getRandomItem(0)],\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 0,\r\n        xp: 7,\r\n        items: [getRandomItem(1)],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const LICH_DRAIN: tSkill = {\r\n  id: v4(),\r\n  name: 'Drain',\r\n  damageModifier: 0.5,\r\n  splashDamageModifier: 0,\r\n  weaponStatOverride: 'intelligence',\r\n  targetType: 'group',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 4,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['speed-down'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const LICH_SCREECH: tSkill = {\r\n  id: v4(),\r\n  name: 'Screech',\r\n  damageModifier: 0,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: false,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  statusDurationOverride: 3,\r\n  perfectStatus: ['stunned'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const LICH_MASS_SCREECH: tSkill = {\r\n  id: v4(),\r\n  name: 'Mass Screech',\r\n  damageModifier: 0,\r\n  splashDamageModifier: 0,\r\n  targetType: 'group',\r\n  damage: false,\r\n  healing: false,\r\n  rolls: 4,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  statusDurationOverride: 3,\r\n  perfectStatus: ['stunned'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const LICH_SMITE: tSkill = {\r\n  id: v4(),\r\n  name: 'Smite',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 4,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['armor-down'],\r\n}\r\n","import Lich from '../../../icons/svg/delapouite/overlord-helm.svg'\r\nimport { tCharacter } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS, BASE_C_STATS } from '../../Stats/constants'\r\nimport { LICH_DRAIN } from '../../Skill/enemy/lich_drain'\r\nimport { LICH_SCREECH } from '../../Skill/enemy/lich_screech'\r\nimport { LICH_MASS_SCREECH } from '../../Skill/enemy/lich_mass_screech'\r\nimport { LICH_SMITE } from '../../Skill/enemy/lich_smite'\r\n\r\nexport const LICH = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: 'Lich',\r\n    isCharacter: true,\r\n    icon: Lich,\r\n    partyId: '',\r\n    level: 5,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: ['undead'],\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      strength: 84,\r\n      vigor: 64,\r\n      intelligence: 70,\r\n      dexterity: 48,\r\n      charisma: 30,\r\n      agility: 80,\r\n      luck: 50,\r\n      armor: 7,\r\n      resistance: 8,\r\n      evasion: 16,\r\n    },\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: ['bleeding', 'stunned'],\r\n    weapon: {\r\n      id: v4(),\r\n      name: 'Lich Sword',\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'sword',\r\n      stat: 'strength',\r\n      twoHand: false,\r\n      breakable: false,\r\n      goldValue: 0,\r\n      damage: {\r\n        value: 34,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      stats: ZERO_STATS,\r\n      skills: [LICH_DRAIN, LICH_SCREECH, LICH_MASS_SCREECH, LICH_SMITE],\r\n      immunities: [],\r\n    },\r\n    possibleRewards: [],\r\n  }\r\n}\r\n","import { tFloorConfig } from '../type'\r\nimport { FloorConfig1 } from './floor-1'\r\nimport { FloorConfig2 } from './floor-2'\r\n\r\nexport const FLOOR_CONFIGS_BY_INDEX: Record<number, tFloorConfig> = {\r\n  0: FloorConfig1,\r\n  1: FloorConfig2,\r\n}\r\n","import { tFloorConfig } from '../type'\r\nimport {\r\n  TIMBERWOLF,\r\n  FOREST_BEAST,\r\n  FOREST_RAVEN,\r\n  BEE,\r\n  CULTIST,\r\n  BANDIT,\r\n  CULTIST_BRUTE,\r\n} from '../../Character/enemies'\r\nimport { LICH } from '../../Character/bosses'\r\nimport { WEAPONS } from '../../Weapon/builders/objects'\r\nimport { ARMOR_BY_LEVEL } from '../../Armor/builders/sets'\r\n\r\nconst FLOOR_1_WEAPONS = () => [\r\n  ...WEAPONS[1],\r\n  ...WEAPONS[2],\r\n  ...WEAPONS[3],\r\n  ...WEAPONS[4],\r\n  ...WEAPONS[5],\r\n]\r\n\r\nconst FLOOR_1_ARMOR = () => [\r\n  ...ARMOR_BY_LEVEL[0],\r\n  ...ARMOR_BY_LEVEL[1],\r\n  ...ARMOR_BY_LEVEL[2],\r\n]\r\n\r\nexport const FloorConfig1: tFloorConfig = {\r\n  bosses: [LICH()],\r\n  items: [\r\n    ...FLOOR_1_WEAPONS().map((w) => w()),\r\n    ...FLOOR_1_ARMOR().map((a) => a()),\r\n  ],\r\n  enemies: {\r\n    0: [\r\n      [TIMBERWOLF(), TIMBERWOLF(), TIMBERWOLF()],\r\n      [TIMBERWOLF(), FOREST_BEAST()],\r\n      [FOREST_BEAST(), FOREST_BEAST()],\r\n      [FOREST_RAVEN(), TIMBERWOLF()],\r\n      [FOREST_RAVEN()],\r\n      [BEE()],\r\n      [BEE(), FOREST_BEAST()],\r\n      [BEE(), TIMBERWOLF()],\r\n      [CULTIST()],\r\n    ],\r\n    1: [\r\n      [FOREST_RAVEN(), TIMBERWOLF(), FOREST_BEAST()],\r\n      [FOREST_BEAST(), FOREST_BEAST(), FOREST_BEAST()],\r\n      [BEE(), BEE(), BEE()],\r\n      [FOREST_RAVEN(), BEE(), FOREST_BEAST()],\r\n      [CULTIST()],\r\n    ],\r\n    2: [\r\n      [BEE(), BEE(), BEE()],\r\n      [FOREST_RAVEN(), BEE(), BEE()],\r\n      [FOREST_RAVEN(), FOREST_RAVEN(), FOREST_RAVEN()],\r\n      [BANDIT(), TIMBERWOLF()],\r\n      [BANDIT(), TIMBERWOLF(), TIMBERWOLF()],\r\n      [CULTIST()],\r\n    ],\r\n    3: [\r\n      [CULTIST(), CULTIST()],\r\n      [CULTIST(), BANDIT()],\r\n      [BANDIT(), BANDIT()],\r\n      [CULTIST_BRUTE()],\r\n      [BANDIT(), BEE(), BEE()],\r\n      [CULTIST(), BEE(), BEE()],\r\n      [CULTIST(), BANDIT(), BEE()],\r\n      [BANDIT(), FOREST_RAVEN(), FOREST_RAVEN()],\r\n      [CULTIST(), CULTIST(), FOREST_RAVEN()],\r\n      [FOREST_RAVEN(), CULTIST(), FOREST_RAVEN()],\r\n      [BANDIT(), FOREST_RAVEN(), BEE()],\r\n      [CULTIST_BRUTE(), FOREST_RAVEN()],\r\n    ],\r\n    4: [\r\n      [CULTIST(), BANDIT(), FOREST_RAVEN()],\r\n      [CULTIST(), CULTIST(), BEE()],\r\n      [CULTIST(), FOREST_RAVEN(), CULTIST()],\r\n      [CULTIST(), CULTIST(), CULTIST()],\r\n      [BANDIT(), BANDIT(), FOREST_RAVEN()],\r\n      [BANDIT(), BANDIT(), BEE()],\r\n      [BANDIT(), BANDIT(), BANDIT()],\r\n      [CULTIST_BRUTE(), CULTIST_BRUTE()],\r\n      [CULTIST_BRUTE(), FOREST_RAVEN(), FOREST_RAVEN()],\r\n    ],\r\n    5: [\r\n      [BANDIT(), BANDIT(), BANDIT()],\r\n      [BANDIT(), FOREST_RAVEN(), CULTIST_BRUTE()],\r\n      [CULTIST_BRUTE(), FOREST_RAVEN(), FOREST_RAVEN()],\r\n      [CULTIST_BRUTE(), CULTIST_BRUTE(), BANDIT()],\r\n      [CULTIST(), CULTIST(), CULTIST()],\r\n      [CULTIST_BRUTE(), CULTIST_BRUTE(), CULTIST_BRUTE()],\r\n    ],\r\n  },\r\n}\r\n","import { LICH } from '../../Character/bosses'\r\nimport { tFloorConfig } from '../type'\r\n\r\nexport const FloorConfig2: tFloorConfig = {\r\n  enemies: {},\r\n  items: [],\r\n  bosses: [LICH()],\r\n}\r\n","import { tParty, tProcessedParty } from './type'\r\nimport {\r\n  checkForProcessedCharacter,\r\n  processCharacter,\r\n  getRewardsFromCharacter,\r\n  addExperience,\r\n  addMultipleStatus,\r\n} from '../Character/util'\r\nimport { tCharacter, tProcessedCharacter } from '../Character/type'\r\nimport { v4 } from 'uuid'\r\nimport { getRandom } from '../../util'\r\nimport { tEncounterReward } from '../Encounter/type'\r\nimport { tArmor } from '../Armor/type'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { tConsumable } from '../Consumable/type'\r\nimport { FLOOR_CONFIGS_BY_INDEX } from '../Encounter/floors'\r\n\r\nexport const isParty = (obj: any): boolean =>\r\n  obj !== undefined && obj.isParty !== undefined\r\n\r\nexport const checkForProcessedParty = (party: tParty) => {\r\n  if ((party as tProcessedParty).processed) {\r\n    throw new Error('No Processed Parties Allowed')\r\n  }\r\n  party.characters.forEach((character) => {\r\n    checkForProcessedCharacter(character)\r\n  })\r\n}\r\n\r\nexport const findCharacterInParty = <\r\n  T extends tParty = tParty,\r\n  R extends tCharacter = tCharacter\r\n>(\r\n  party: T,\r\n  id: string,\r\n): R | undefined => {\r\n  return (party.characters as R[]).find((c) => c.id === id)\r\n}\r\n\r\nexport const getOtherCharacters = (\r\n  party: tParty,\r\n  characterId: string,\r\n): tCharacter[] => party.characters.filter((c) => c.id !== characterId)\r\n\r\nexport const processParty = (party: tParty): tProcessedParty => {\r\n  checkForProcessedParty(party)\r\n  return {\r\n    ...party,\r\n    processed: true,\r\n    characters: party.characters.map((c) => ({\r\n      ...processCharacter(c),\r\n      partyId: party.id,\r\n    })),\r\n  }\r\n}\r\n\r\nexport const updateCharacter = (\r\n  party: tParty,\r\n  characterId: string,\r\n  updater: (character: tCharacter) => tCharacter,\r\n): tParty => {\r\n  checkForProcessedParty(party)\r\n  return {\r\n    ...party,\r\n    characters: party.characters.map((c) =>\r\n      c.id === characterId ? updater(c) : c,\r\n    ),\r\n  }\r\n}\r\n\r\nexport const makeParty = (level: number, floor: number): tParty => {\r\n  level = level > 4 ? 4 : level\r\n  const floorConfig = FLOOR_CONFIGS_BY_INDEX[floor]\r\n  return {\r\n    isParty: true,\r\n    id: v4(),\r\n    gold: 0,\r\n    items: [],\r\n    characters: getRandom(floorConfig.enemies[level] || []),\r\n  }\r\n}\r\n\r\nexport const makeBossParty = (floor: number): tParty => {\r\n  const config = FLOOR_CONFIGS_BY_INDEX[floor]\r\n  return {\r\n    isParty: true,\r\n    id: v4(),\r\n    gold: 0,\r\n    items: [],\r\n    characters: [getRandom(config.bosses)],\r\n  }\r\n}\r\n\r\nexport const getRolledRewards = (\r\n  party: tProcessedParty,\r\n  checkedCharacter: tProcessedCharacter,\r\n): tEncounterReward[] => {\r\n  return party.characters.reduce((r, character) => {\r\n    return [...r, ...getRewardsFromCharacter(character, checkedCharacter)]\r\n  }, [] as tEncounterReward[])\r\n}\r\n\r\nexport const commitRewards = (\r\n  party: tParty,\r\n  rewards: tEncounterReward,\r\n): tParty => {\r\n  checkForProcessedParty(party)\r\n  const goldMultiplier =\r\n    1 +\r\n    processParty(party).characters.reduce(\r\n      (r, c) => (r > c.stats.goldModifier ? r : c.stats.goldModifier),\r\n      0,\r\n    ) /\r\n      100\r\n  return {\r\n    ...party,\r\n    gold: party.gold + Math.floor(rewards.gold * goldMultiplier),\r\n    items: [\r\n      ...party.items,\r\n      ...(rewards.items.filter((i) => i.itemType !== 'consumable') as (\r\n        | tArmor\r\n        | tWeapon\r\n      )[]),\r\n    ],\r\n    characters: party.characters.map((c) =>\r\n      addMultipleStatus(\r\n        addExperience(\r\n          {\r\n            ...c,\r\n            consumables: [\r\n              ...c.consumables,\r\n              ...(rewards.items.filter(\r\n                (i) => i.itemType === 'consumable',\r\n              ) as tConsumable[]),\r\n            ],\r\n          },\r\n          rewards.xp,\r\n        ),\r\n        rewards.status,\r\n      ),\r\n    ),\r\n  }\r\n}\r\n","import { v4 } from 'uuid'\r\n\r\nexport const PLAYER_PARTY_ID = v4()\r\n","import { useSelector } from 'react-redux'\r\nimport { StateCoreT, StateActionT, StateT } from '../types'\r\nimport { Dispatch } from 'redux'\r\nimport { makeReducer } from '../util'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { checkForProcessedParty, updateCharacter } from '../../game/Party/util'\r\nimport { tCharacter } from '../../game/Character/type'\r\nimport { makeCharacter, addMultipleStatus } from '../../game/Character/util'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { ALL_WEAPONS } from '../../game/Weapon/builders/objects'\r\nimport { getRandomItem } from '../../game/Item/util'\r\nimport { ARMOR_BY_LEVEL } from '../../game/Armor/builders/sets'\r\n\r\nexport const UPDATE_PARTY = '@actions/parties/set-party'\r\nexport const UPSERT_CHARACTER = '@actions/parties/upsert-character'\r\nexport const DELETE_CHARACTER = '@actions/parties/delete-character'\r\nexport const UPSERT_ITEM = '@actions/parties/upsert-item'\r\nexport const SET_GOLD = '@actions/parties/set-gold'\r\n\r\nexport const actionCreators = {\r\n  updateParty: (party: tParty): StateActionT => {\r\n    return {\r\n      type: UPDATE_PARTY,\r\n      payload: {\r\n        party,\r\n      },\r\n    }\r\n  },\r\n  upsertCharacter: (character: tCharacter): StateActionT => {\r\n    return {\r\n      type: UPSERT_CHARACTER,\r\n      payload: {\r\n        character,\r\n      },\r\n    }\r\n  },\r\n  deleteCharacter: (characterId: string): StateActionT => {\r\n    return {\r\n      type: DELETE_CHARACTER,\r\n      payload: {\r\n        characterId,\r\n      },\r\n    }\r\n  },\r\n  upsertItem: (item: tArmor | tWeapon): StateActionT => {\r\n    return {\r\n      type: UPSERT_ITEM,\r\n      payload: {\r\n        item,\r\n      },\r\n    }\r\n  },\r\n  setGold: (gold: number): StateActionT => {\r\n    return {\r\n      type: SET_GOLD,\r\n      payload: {\r\n        gold,\r\n      },\r\n    }\r\n  },\r\n}\r\n\r\nexport const actions = {\r\n  updateParty: (party: tParty) => (dispatch: Dispatch) => {\r\n    checkForProcessedParty(party)\r\n    dispatch(actionCreators.updateParty(party))\r\n  },\r\n  upsertCharacter: (character: tCharacter) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.upsertCharacter(character))\r\n  },\r\n  deleteCharacter: (characterId: string) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.deleteCharacter(characterId))\r\n  },\r\n  upsertItem: (item: tArmor | tWeapon) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.upsertItem(item))\r\n  },\r\n  setGold: (gold: number) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.setGold(gold))\r\n  },\r\n}\r\n\r\nexport const core: StateCoreT<tParty> = {\r\n  [UPDATE_PARTY]: (state, action) => {\r\n    return {\r\n      ...action.payload.party,\r\n    }\r\n  },\r\n  [UPSERT_CHARACTER]: (state, action) => {\r\n    return updateCharacter(\r\n      state,\r\n      action.payload.character.id,\r\n      (c) => action.payload.character,\r\n    )\r\n  },\r\n  [DELETE_CHARACTER]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      characters: state.characters.filter(\r\n        (c) => c.id !== action.payload.characterId,\r\n      ),\r\n    }\r\n  },\r\n  [UPSERT_ITEM]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      items: [\r\n        ...state.items.filter((item) => item.id !== action.payload.item.id),\r\n        action.payload.item,\r\n      ],\r\n    }\r\n  },\r\n  [SET_GOLD]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      gold: action.payload.gold,\r\n    }\r\n  },\r\n}\r\nconst jack = { ...makeCharacter('executioner'), name: 'Jack' }\r\nconst jim = { ...makeCharacter('patrician'), name: 'Jim' }\r\nconst john = { ...makeCharacter('student'), name: 'Johnny' }\r\nexport const INITIAL_STATE: tParty = {\r\n  isParty: true,\r\n  id: PLAYER_PARTY_ID,\r\n  items: [],\r\n  gold: 0,\r\n  characters: [\r\n    addMultipleStatus(\r\n      {\r\n        ...jack,\r\n        // healthOffset: 30,\r\n      },\r\n      [\r\n        /*\r\n        'frozen',\r\n        'bleeding',\r\n        'burning',\r\n        'poisoned',\r\n        'stunned',\r\n        'speed-down',\r\n        'targeted',\r\n        'evasive',\r\n        'armor-down',\r\n        */\r\n      ],\r\n    ),\r\n    {\r\n      ...jim,\r\n      //healthOffset: 30\r\n    },\r\n    {\r\n      ...john,\r\n      //healthOffset: 30\r\n    },\r\n  ],\r\n}\r\nexport default makeReducer(core, INITIAL_STATE)\r\nexport const useParty = () => useSelector((state: StateT) => state.party)\r\nexport const usePartyActions = () =>\r\n  useActions(actions) as {\r\n    updateParty: (party: tParty) => void\r\n    upsertCharacter: (character: tCharacter) => void\r\n    deleteCharacter: (characterId: string) => void\r\n    upsertItem: (item: tArmor | tWeapon) => void\r\n    setGold: (gold: number) => void\r\n  }\r\n","import { v4 } from 'uuid'\r\nimport {\r\n  tEncounter,\r\n  tEncounterType,\r\n  tCombatEncounter,\r\n  tEncounterChoice,\r\n  tShopEncounter,\r\n  tShrineEncounter,\r\n  tBossEncounter,\r\n  tFloor,\r\n} from './type'\r\nimport { getRandom, noneg } from '../../util'\r\nimport { makeParty, makeBossParty } from '../Party/util'\r\nimport { tArmor } from '../Armor/type'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { GODSBEARD } from '../Consumable/objects/godsbeard'\r\nimport { tConsumable } from '../Consumable/type'\r\nimport { tBaseStats } from '../Stats/type'\r\nimport { POSSIBLE_SHINE_REWARDS, ZERO_REWARD } from './constants'\r\nimport { FLOOR_CONFIGS_BY_INDEX } from './floors'\r\n\r\nexport const makeEncounterType = (\r\n  depth: number,\r\n  max: number,\r\n): tEncounterType => {\r\n  // return 'shop'\r\n  if (depth === max - 2) {\r\n    return 'boss'\r\n  }\r\n  if (depth === max - 1) {\r\n    return 'reward'\r\n  }\r\n  if (depth === 0) {\r\n    return 'combat'\r\n  }\r\n  return getRandom([\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'shop',\r\n    'shrine',\r\n  ])\r\n}\r\n\r\nexport const makeRandomEncounter = (\r\n  depth: number,\r\n  max: number,\r\n  floor: number,\r\n) => {\r\n  let encounterType = makeEncounterType(depth, max)\r\n  const floorConfig = FLOOR_CONFIGS_BY_INDEX[floor]\r\n  let encounter: tEncounter = {\r\n    id: v4(),\r\n    choiceId: '',\r\n    name: `Encounter ${depth}`,\r\n    type: encounterType,\r\n    reward: ZERO_REWARD,\r\n  }\r\n\r\n  if (encounter.type === 'combat') {\r\n    encounter = {\r\n      ...encounter,\r\n      party: makeParty(noneg(depth - 1), floor),\r\n    } as tCombatEncounter\r\n  }\r\n  if (encounter.type === 'boss') {\r\n    encounter = {\r\n      ...encounter,\r\n      boss: true,\r\n      party: makeBossParty(floor),\r\n    } as tBossEncounter\r\n  }\r\n  if (encounter.type === 'reward') {\r\n    encounter = {\r\n      ...encounter,\r\n    }\r\n  }\r\n  if (encounter.type === 'shop') {\r\n    const items = [GODSBEARD(), ...floorConfig.items]\r\n    encounter = {\r\n      ...encounter,\r\n      items,\r\n      consumables: [],\r\n      costs: items.reduce((r, i) => {\r\n        return {\r\n          ...r,\r\n          [i.id]: getItemCost(i),\r\n        }\r\n      }, {}),\r\n    } as tShopEncounter\r\n  }\r\n  if (encounter.type === 'shrine') {\r\n    const stat: keyof tBaseStats = getRandom<keyof tBaseStats>([\r\n      'vigor',\r\n      'strength',\r\n      'dexterity',\r\n      'intelligence',\r\n      'charisma',\r\n      'luck',\r\n    ])\r\n    const rewards = getRandom(POSSIBLE_SHINE_REWARDS())\r\n    encounter = {\r\n      ...encounter,\r\n      stat,\r\n      offset: 0,\r\n      rolls: rewards.length,\r\n      results: rewards,\r\n    } as tShrineEncounter\r\n  }\r\n\r\n  return encounter\r\n}\r\n\r\nexport const makeEncounterList = (\r\n  depth: number,\r\n  floor: number,\r\n): tEncounterChoice[] => {\r\n  return Array(depth)\r\n    .fill(undefined)\r\n    .map((_, index) => {\r\n      const id = v4()\r\n      return {\r\n        id,\r\n        depth: index,\r\n        value: undefined,\r\n        left: {\r\n          ...makeRandomEncounter(index, depth, floor),\r\n          choiceId: id,\r\n        },\r\n        right: {\r\n          ...makeRandomEncounter(index, depth, floor),\r\n          choiceId: id,\r\n        },\r\n      }\r\n    })\r\n}\r\n\r\nexport const getItemCost = (item: tArmor | tWeapon | tConsumable): number => {\r\n  return item.goldValue * 3\r\n}\r\n\r\nexport const makeFloor = (depth: number, encounterCount: number): tFloor => {\r\n  return {\r\n    id: v4(),\r\n    encounters: makeEncounterList(encounterCount, depth),\r\n    depth,\r\n    image: '',\r\n  }\r\n}\r\n","import { StateCoreT, StateT, StateActionT } from '../types'\r\nimport { makeReducer } from '../util'\r\nimport { useSelector } from 'react-redux'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport { Dispatch } from 'redux'\r\nimport { tShopEncounter, tFloor } from '../../game/Encounter/type'\r\nimport { makeFloor } from '../../game/Encounter/util'\r\n\r\nexport interface GameStateT {\r\n  level: number\r\n  floor: number\r\n  floors: tFloor[]\r\n}\r\n\r\nexport const RESET = '@action/game/reset'\r\nexport const CHOOSE_CURRENT = '@action/game/choose-current'\r\nexport const NEXT_LEVEL = '@action/game/next-level'\r\nexport const NEXT_FLOOR = '@action/game/next-floor'\r\nexport const REMOVE_ITEM = '@action/game/remove-item'\r\n\r\nexport const actionCreators = {\r\n  reset: (): StateActionT => ({\r\n    type: RESET,\r\n    payload: {},\r\n  }),\r\n  chooseCurrent: (value: 'left' | 'right'): StateActionT => ({\r\n    type: CHOOSE_CURRENT,\r\n    payload: {\r\n      value,\r\n    },\r\n  }),\r\n  nextLevel: (): StateActionT => ({\r\n    type: NEXT_LEVEL,\r\n    payload: {},\r\n  }),\r\n  nextFloor: (): StateActionT => ({\r\n    type: NEXT_FLOOR,\r\n    payload: {},\r\n  }),\r\n  removeItem: (\r\n    choiceId: string,\r\n    encounterId: string,\r\n    itemId: string,\r\n  ): StateActionT => ({\r\n    type: REMOVE_ITEM,\r\n    payload: {\r\n      choiceId,\r\n      encounterId,\r\n      itemId,\r\n    },\r\n  }),\r\n}\r\n\r\nexport const actions = {\r\n  reset: () => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.reset())\r\n  },\r\n  chooseCurrent: (value: 'left' | 'right') => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.chooseCurrent(value))\r\n  },\r\n  nextLevel: () => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.nextLevel())\r\n  },\r\n  nextFloor: () => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.nextFloor())\r\n  },\r\n  removeItem: (choiceId: string, encounterId: string, itemId: string) => (\r\n    dispatch: Dispatch,\r\n  ) => {\r\n    dispatch(actionCreators.removeItem(choiceId, encounterId, itemId))\r\n  },\r\n}\r\n\r\nconst updateCurrentFloor = (\r\n  state: GameStateT,\r\n  updater: (floor: tFloor) => tFloor,\r\n): GameStateT => {\r\n  return {\r\n    ...state,\r\n    floors: state.floors.map((floor) =>\r\n      floor.depth === state.floor ? updater(floor) : floor,\r\n    ),\r\n  }\r\n}\r\n\r\nexport const core: StateCoreT<GameStateT> = {\r\n  [RESET]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      level: 0,\r\n      floor: 0,\r\n      floors: [makeFloor(0, 11)],\r\n    }\r\n  },\r\n  [CHOOSE_CURRENT]: (state, action) => {\r\n    return updateCurrentFloor(state, (floor) => {\r\n      return {\r\n        ...floor,\r\n        encounters: floor.encounters.map((e, i) => {\r\n          if (i === state.level) {\r\n            return {\r\n              ...e,\r\n              value: action.payload.value,\r\n            }\r\n          }\r\n          return e\r\n        }),\r\n      }\r\n    })\r\n  },\r\n  [NEXT_LEVEL]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      level: state.level + 1,\r\n    }\r\n  },\r\n  [NEXT_FLOOR]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      level: 0,\r\n      floor: state.floor + 1,\r\n    }\r\n  },\r\n  [REMOVE_ITEM]: (state, action) => {\r\n    return updateCurrentFloor(state, (floor) => {\r\n      return {\r\n        ...floor,\r\n        encounters: floor.encounters.map((choice) => {\r\n          if (choice.id === action.payload.choiceId) {\r\n            if (\r\n              choice.left.id === action.payload.encounterId &&\r\n              choice.left.type === 'shop'\r\n            ) {\r\n              return {\r\n                ...choice,\r\n                left: {\r\n                  ...choice.left,\r\n                  items: (choice.left as tShopEncounter).items.filter(\r\n                    (i) => i.id !== action.payload.itemId,\r\n                  ),\r\n                } as tShopEncounter,\r\n              }\r\n            }\r\n            if (\r\n              choice.right.id === action.payload.encounterId &&\r\n              choice.right.type === 'shop'\r\n            ) {\r\n              return {\r\n                ...choice,\r\n                right: {\r\n                  ...choice.right,\r\n                  items: (choice.right as tShopEncounter).items.filter(\r\n                    (i) => i.id !== action.payload.itemId,\r\n                  ),\r\n                } as tShopEncounter,\r\n              }\r\n            }\r\n            return choice\r\n          } else {\r\n            return choice\r\n          }\r\n        }),\r\n      }\r\n    })\r\n  },\r\n}\r\n\r\nexport const INITIAL_STATE: GameStateT = {\r\n  level: 0,\r\n  floor: 0,\r\n  floors: [makeFloor(0, 11)],\r\n}\r\n\r\nexport default makeReducer(core, INITIAL_STATE)\r\nexport const useGameState = () => useSelector((state: StateT) => state.game)\r\nexport const useGameStateActions = () =>\r\n  useActions(actions) as {\r\n    reset: () => void\r\n    chooseCurrent: (value: 'left' | 'right') => void\r\n    nextLevel: () => void\r\n    nextFloor: () => void\r\n    removeItem: (choiceId: string, encounterId: string, itemId: string) => void\r\n  }\r\n","import React, { useContext, useMemo } from 'react'\r\nimport { useGameState, useGameStateActions } from '../../state/game'\r\nimport { tEncounterChoice, tEncounter, tFloor } from '../../game/Encounter/type'\r\n\r\nexport interface GameStateContextT {\r\n  encounters: tEncounterChoice[]\r\n  floors: tFloor[]\r\n  level: number\r\n  floor: number\r\n  currentChoice: tEncounterChoice | undefined\r\n  previousChoice: tEncounterChoice | undefined\r\n  currentEncounter: tEncounter | undefined\r\n  chooseCurrent: (value: 'left' | 'right') => void\r\n  nextLevel: () => void\r\n  nextFloor: () => void\r\n  reset: () => void\r\n  removeItem: (choiceId: string, encounterId: string, itemId: string) => void\r\n}\r\n\r\nexport const defaultValue: GameStateContextT = {\r\n  encounters: [],\r\n  floors: [],\r\n  level: 0,\r\n  floor: 0,\r\n  currentChoice: undefined,\r\n  currentEncounter: undefined,\r\n  previousChoice: undefined,\r\n  chooseCurrent: (value) => {},\r\n  nextLevel: () => {},\r\n  nextFloor: () => {},\r\n  reset: () => {},\r\n  removeItem: (choiceId, encounterId, itemId) => {},\r\n}\r\nexport const GameStateContext = React.createContext<GameStateContextT>(\r\n  defaultValue,\r\n)\r\nexport const useGameStateContext = () => useContext(GameStateContext)\r\n\r\nexport interface GameStateProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const GameStateContextProvider = (props: GameStateProviderPropsT) => {\r\n  const { children } = props\r\n  const { floors, floor, level } = useGameState()\r\n  const currentFloor = floors[floor]\r\n  const encounters = currentFloor.encounters\r\n  const {\r\n    nextLevel,\r\n    nextFloor,\r\n    chooseCurrent,\r\n    reset,\r\n    removeItem,\r\n  } = useGameStateActions()\r\n  const currentChoice = useMemo(() => {\r\n    return encounters[level]\r\n  }, [encounters, level])\r\n  const previousChoice = useMemo(() => {\r\n    return encounters[level - 1]\r\n  }, [encounters, level])\r\n  const currentEncounter = useMemo(() => {\r\n    const choice = encounters[level]\r\n    if (choice && choice.value) {\r\n      return choice[choice.value]\r\n    }\r\n  }, [encounters, level])\r\n\r\n  return (\r\n    <GameStateContext.Provider\r\n      value={{\r\n        encounters,\r\n        floors,\r\n        level,\r\n        floor,\r\n        currentChoice,\r\n        previousChoice,\r\n        currentEncounter,\r\n        reset,\r\n        nextLevel,\r\n        nextFloor,\r\n        chooseCurrent,\r\n        removeItem,\r\n      }}\r\n    >\r\n      {children}\r\n    </GameStateContext.Provider>\r\n  )\r\n}\r\n","import React, { useMemo, useContext, useState } from 'react'\r\nimport { usePartyActions, useParty } from '../../state/party'\r\nimport { tProcessedParty, tParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter, tCharacter } from '../../game/Character/type'\r\nimport {\r\n  processParty,\r\n  makeParty,\r\n  findCharacterInParty,\r\n} from '../../game/Party/util'\r\nimport {\r\n  checkForProcessedCharacter,\r\n  processCharacter,\r\n  makeCharacter,\r\n  equipArmor,\r\n  equipWeapon,\r\n  unequipArmor,\r\n} from '../../game/Character/util'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { useGameStateContext } from '../GameStateContext'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { FISTS } from '../../game/Weapon/fists'\r\n\r\nexport interface PartyContextT {\r\n  party: tProcessedParty\r\n  rawParty: tParty\r\n  activeCharacter: tProcessedCharacter\r\n  updateParty: (party: tParty) => void\r\n  upsertCharacter: (character: tCharacter) => void\r\n  deleteCharacter: (characterId: string) => void\r\n  findCharacter: (characterId: string) => tProcessedCharacter | undefined\r\n  findRawCharacter: (characterId: string) => tCharacter | undefined\r\n  setActiveCharacter: (character: tProcessedCharacter) => void\r\n  equipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n  unequipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n  purchaseItem: (item: tArmor | tWeapon | tConsumable, cost: number) => void\r\n  sellItem: (itemId: string) => void\r\n}\r\nconst defaultContextValue: PartyContextT = {\r\n  rawParty: makeParty(0, 0),\r\n  party: processParty(makeParty(0, 0)),\r\n  activeCharacter: processCharacter(makeCharacter('executioner')),\r\n  updateParty: (party) => {},\r\n  upsertCharacter: (character) => {},\r\n  deleteCharacter: (characterId) => {},\r\n  findCharacter: (characterId) => undefined,\r\n  findRawCharacter: (characterId) => undefined,\r\n  setActiveCharacter: (character) => {},\r\n  equipItem: (characterId, item) => {},\r\n  unequipItem: (characterId, item) => {},\r\n  purchaseItem: (item, cost) => {},\r\n  sellItem: (itemId) => {},\r\n}\r\nexport const PartyContext = React.createContext<PartyContextT>(\r\n  defaultContextValue,\r\n)\r\n\r\nexport interface PartyContextProviderPropsT {\r\n  children: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const PartyContextProvider = (props: PartyContextProviderPropsT) => {\r\n  const { children } = props\r\n  const actions = usePartyActions()\r\n  const rawParty = useParty()\r\n  const { currentChoice, currentEncounter, removeItem } = useGameStateContext()\r\n  const party = useMemo(() => processParty(rawParty), [rawParty])\r\n  const [activeCharacterId, setActiveCharacterId] = useState<string>(\r\n    party.characters[0].id,\r\n  )\r\n  const activeCharacter = useMemo(() => {\r\n    return party.characters.find(\r\n      (c) => c.id === activeCharacterId,\r\n    ) as tProcessedCharacter\r\n  }, [activeCharacterId, party.characters])\r\n  const setActiveCharacter = (character: tProcessedCharacter) =>\r\n    setActiveCharacterId(character.id)\r\n  const updateParty = (party: tParty) => {\r\n    actions.updateParty(party)\r\n  }\r\n  const upsertCharacter = (character: tCharacter) => {\r\n    if (!character) return\r\n    checkForProcessedCharacter(character)\r\n    actions.upsertCharacter(character)\r\n  }\r\n  const deleteCharacter = (characterId: string) => {\r\n    actions.deleteCharacter(characterId)\r\n  }\r\n  const findCharacter = (characterId: string) => {\r\n    return findCharacterInParty<tProcessedParty, tProcessedCharacter>(\r\n      party,\r\n      characterId,\r\n    )\r\n  }\r\n  const findRawCharacter = (characterId: string) => {\r\n    return findCharacterInParty(rawParty, characterId)\r\n  }\r\n\r\n  const equipItem = (characterId: string, item: tWeapon | tArmor) => {\r\n    const character = findRawCharacter(characterId)\r\n    if (!character) return\r\n    if (item.itemType === 'armor') {\r\n      const armor = item as tArmor\r\n      if (armor.resource === 'offhand' && (character.weapon || FISTS()).twoHand)\r\n        return\r\n      const result = equipArmor(character, armor)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.armor ? [result.armor] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n    if (item.itemType === 'weapon') {\r\n      const weapon = item as tWeapon\r\n      if ((character.weapon || FISTS()).twoHand) {\r\n        if (character.armor.find((a) => a.resource === 'offhand')) {\r\n          return\r\n        }\r\n      }\r\n      const result = equipWeapon(character, weapon)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.weapon ? [result.weapon] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n  }\r\n  const unequipItem = (characterId: string, item: tWeapon | tArmor) => {\r\n    const character = findRawCharacter(characterId)\r\n    if (!character) return\r\n    if (item.itemType === 'armor') {\r\n      const armor = item as tArmor\r\n      const result = unequipArmor(character, armor.resource)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.armor ? [result.armor] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n    if (item.itemType === 'weapon') {\r\n    }\r\n  }\r\n  const purchaseItem = (item: tArmor | tWeapon | tConsumable, cost: number) => {\r\n    if (party.gold > cost && currentChoice && currentEncounter) {\r\n      if (item.itemType === 'armor' || item.itemType === 'weapon') {\r\n        actions.upsertItem(item as tArmor | tWeapon)\r\n      }\r\n      if (item.itemType === 'consumable') {\r\n        updateParty({\r\n          ...rawParty,\r\n          characters: rawParty.characters.map((c) => ({\r\n            ...c,\r\n            consumables: [...c.consumables, item as tConsumable],\r\n          })),\r\n        })\r\n      }\r\n      actions.setGold(party.gold - cost)\r\n      removeItem(currentChoice.id, currentEncounter.id, item.id)\r\n    }\r\n  }\r\n  const sellItem = (itemId: string) => {\r\n    const item = rawParty.items.find((i) => i.id === itemId)\r\n    if (item) {\r\n      updateParty({\r\n        ...rawParty,\r\n        items: rawParty.items.filter((i) => i.id !== itemId),\r\n        gold: rawParty.gold + item.goldValue,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PartyContext.Provider\r\n      value={{\r\n        party,\r\n        rawParty,\r\n        activeCharacter,\r\n        updateParty,\r\n        upsertCharacter,\r\n        deleteCharacter,\r\n        findCharacter,\r\n        findRawCharacter,\r\n        setActiveCharacter,\r\n        equipItem,\r\n        unequipItem,\r\n        purchaseItem,\r\n        sellItem,\r\n      }}\r\n    >\r\n      {children}\r\n    </PartyContext.Provider>\r\n  )\r\n}\r\n\r\nexport const usePartyContext = () => useContext(PartyContext)\r\n","import { ModalStylesT } from '.'\r\n\r\nexport interface ModalContextStateT {\r\n  isOpen: boolean\r\n  contents: JSX.Element | null\r\n  callback: ((payload?: any) => void) | null\r\n  payload: any | null\r\n  blocking: boolean\r\n  styles: ModalStylesT\r\n}\r\nexport const initialState: ModalContextStateT = {\r\n  isOpen: false,\r\n  contents: null,\r\n  callback: null,\r\n  payload: null,\r\n  blocking: false,\r\n  styles: {},\r\n}\r\n\r\nexport const OPEN = 'modalContext/OPEN'\r\nexport const CLOSE = 'modalContext/CLOSE'\r\nexport const SET_CONTENTS = 'modalContext/SET_CONTENTS'\r\nexport const SET_CALLBACK = 'modalContext/SET_CALLBACK'\r\nexport const SET_PAYLOAD = 'modalContext/SET_PAYLOAD'\r\nexport const SET_BLOCKING = 'modalContext/SET_BLOCKING'\r\nexport const SET_STYLE = 'modalContext/SET_STYLE'\r\n\r\nexport const actions = {\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => ({\r\n    type: OPEN,\r\n    contents,\r\n    styles,\r\n    blocking,\r\n    callback,\r\n  }),\r\n  close: () => ({ type: CLOSE }),\r\n  setPayload: (payload: any) => ({ type: SET_PAYLOAD, payload }),\r\n  setContents: (contents: JSX.Element | null) => ({\r\n    type: SET_CONTENTS,\r\n    contents,\r\n  }),\r\n  setCallback: (callback: (() => void) | null) => ({\r\n    type: SET_CALLBACK,\r\n    callback,\r\n  }),\r\n  setBlocking: (blocking: boolean) => ({ type: SET_BLOCKING, blocking }),\r\n  setStyles: (styles: ModalStylesT) => ({ type: SET_STYLE, styles }),\r\n}\r\n\r\nconst core: Record<\r\n  string,\r\n  (state: ModalContextStateT, action: any) => ModalContextStateT\r\n> = {\r\n  [OPEN]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    isOpen: true,\r\n    contents: action.contents ? action.contents : state.contents,\r\n    styles: action.styles ? action.styles : state.styles || {},\r\n    blocking: action.blocking || false,\r\n    callback: action.callback ? action.callback : state.callback,\r\n  }),\r\n  [CLOSE]: (state: ModalContextStateT) => ({\r\n    ...state,\r\n    isOpen: false,\r\n  }),\r\n  [SET_PAYLOAD]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    payload: action.payload,\r\n  }),\r\n  [SET_CONTENTS]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: null,\r\n    payload: null,\r\n    contents: action.contents,\r\n    blocking: false,\r\n    style: {},\r\n  }),\r\n  [SET_CALLBACK]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: action.callback,\r\n  }),\r\n  [SET_BLOCKING]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    blocking: action.blocking,\r\n  }),\r\n  [SET_STYLE]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    styles: action.styles,\r\n  }),\r\n}\r\n\r\nexport const reducer = (\r\n  state: ModalContextStateT = initialState,\r\n  action: any,\r\n) => {\r\n  const coreFunction = core[action.type]\r\n  return coreFunction ? coreFunction(state, action) : state\r\n}\r\n","import React, { useContext, useReducer, useMemo, CSSProperties } from 'react'\r\nimport Modal from 'react-modal'\r\nimport { actions, reducer, initialState, ModalContextStateT } from './reducer'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ModalContextT {\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => void\r\n  close: (payload?: any) => void\r\n  setPayload: (payload: any) => void\r\n  setBlocking: (blocking: boolean) => void\r\n  setContents: (contents: JSX.Element) => void\r\n  setCallback: (callback: (payload?: any) => void) => void\r\n  setStyles: (styles: ModalStylesT) => void\r\n}\r\nconst defaultContext: ModalContextT = {\r\n  open: () => null,\r\n  close: () => null,\r\n  setBlocking: () => null,\r\n  setPayload: () => null,\r\n  setContents: () => null,\r\n  setCallback: () => null,\r\n  setStyles: () => null,\r\n}\r\nexport const ModalContext = React.createContext<ModalContextT>(defaultContext)\r\nexport const useModalContext = () => useContext(ModalContext)\r\n\r\nexport interface ModalStylesT {\r\n  modal?: CSSProperties\r\n  overlay?: CSSProperties\r\n}\r\n\r\nconst getContextValue = (\r\n  state: ModalContextStateT,\r\n  dispatch: React.Dispatch<any>,\r\n) => ({\r\n  isOpen: state.isOpen,\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => {\r\n    dispatch(actions.open(contents, styles, blocking, callback))\r\n  },\r\n  close: (payload?: any) => {\r\n    if (state.callback) state.callback(payload || state.payload)\r\n    dispatch(actions.close())\r\n  },\r\n  setPayload: (payload: any) => dispatch(actions.setPayload(payload)),\r\n  setContents: (contents: JSX.Element) =>\r\n    dispatch(actions.setContents(contents)),\r\n  setCallback: (callback: (payload?: any) => void) =>\r\n    dispatch(actions.setCallback(callback)),\r\n  setBlocking: (blocking: boolean) => dispatch(actions.setBlocking(blocking)),\r\n  setStyles: (styles: ModalStylesT) => dispatch(actions.setStyles(styles)),\r\n})\r\nModal.setAppElement('#root')\r\nexport interface ModalContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const ModalContextProvider = (props: ModalContextProviderPropsT) => {\r\n  const { children } = props\r\n  const reducerValue = useReducer(reducer, initialState)\r\n  const [state] = reducerValue\r\n  const context = useMemo(() => getContextValue(...reducerValue), [\r\n    reducerValue,\r\n  ])\r\n\r\n  return (\r\n    <ModalContext.Provider value={context}>\r\n      {children}\r\n      <Modal\r\n        isOpen={state.isOpen}\r\n        onRequestClose={() => {\r\n          if (!state.blocking) context.close()\r\n        }}\r\n        style={{\r\n          content: {\r\n            backgroundColor: Theme.darkBgColor,\r\n            color: 'white',\r\n            width: 400,\r\n            margin: '0 auto',\r\n            bottom: 'unset',\r\n            borderColor: Theme.lightBgColor,\r\n            ...state.styles.modal,\r\n          },\r\n          overlay: {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n            zIndex: 900,\r\n            ...state.styles.overlay,\r\n          },\r\n        }}\r\n      >\r\n        {state.contents || <div />}\r\n      </Modal>\r\n    </ModalContext.Provider>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport interface FlexContainerPropsT {\r\n  $direction?: 'row' | 'column' | 'column-reverse'\r\n  $full?: boolean\r\n}\r\nexport const FlexContainer = styled('div', (props: FlexContainerPropsT) => ({\r\n  display: 'flex',\r\n  flexDirection: props.$direction || 'row',\r\n  flex: props.$full ? 1 : 'default',\r\n}))\r\nexport const FullContainer = styled('div', () => ({\r\n  flex: 1,\r\n}))\r\n","import React from 'react'\r\nimport { styled, withStyle } from 'styletron-react'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { Theme } from '../theme'\r\n\r\nexport interface ButtonPropsT {\r\n  $direction?: 'up' | 'down'\r\n}\r\nexport const Button = styled('button', (props: ButtonPropsT) => {\r\n  return {\r\n    cursor: 'pointer',\r\n    background: Theme.mediumBgColor,\r\n    boxShadow: 'inset 0px 0px 3px black',\r\n    textShadow: '0px 1px 3px black',\r\n    border: '1px solid rgba(255,255,255,0.2)',\r\n    color: 'rgba(255,255,255,1)',\r\n    ':hover': {\r\n      border: '1px solid rgba(255,255,255,0.4)',\r\n    },\r\n    ':active': {\r\n      outline: 'none',\r\n      border: '1px solid rgba(255,255,255,0.7)',\r\n    },\r\n    ':focus': {\r\n      outline: 'none',\r\n    },\r\n    padding: '10px 30px',\r\n    userSelect: 'none',\r\n  }\r\n})\r\n\r\nexport const RedButton = withStyle(Button, (props: ButtonPropsT) => {\r\n  return {\r\n    // fontFamily: Theme.titleFont,\r\n    background:\r\n      'linear-gradient(0deg, rgba(157,30,30,1) 0%, rgba(110,23,23,1) 100%)',\r\n  }\r\n})\r\n\r\nexport const ConfirmButton = withStyle(Button, (props: ButtonPropsT) => {\r\n  const { $direction } = props\r\n  return {\r\n    // background: 'linear-gradient(0deg, rgba(157,0,0,1) 0%, rgba(110,0,0,1) 100%)',\r\n    // fontWeight: 'bold',\r\n    borderTop: $direction === 'down' ? 'none' : undefined,\r\n    borderBottom: $direction === 'up' ? 'none' : undefined,\r\n    padding: '10px 30px',\r\n    boxShadow: 'inset 0px 2px 8px black',\r\n    ':hover': {\r\n      borderTop: $direction === 'down' ? 'none' : undefined,\r\n      borderBottom: $direction === 'up' ? 'none' : undefined,\r\n    },\r\n    animationDirection: '1s',\r\n    animationIterationCount: 'infinite',\r\n    animationName: `\r\n      from: {\r\n        background: 'rgba(255,255,255,0.4)',\r\n      },\r\n\r\n      to: {\r\n        background: 'rgba(255,255,255,1)',\r\n      },\r\n    `,\r\n  }\r\n})\r\n\r\nexport const ConfirmButton2 = (props: any) => {\r\n  const styles = useSpring({\r\n    from: {\r\n      border: '1px solid rgba(255,255,255,0)',\r\n    },\r\n    to: async (next: any) => {\r\n      while (1) {\r\n        await next({\r\n          border: '1px solid rgba(255,255,255,0)',\r\n        })\r\n        await next({ border: '1px solid rgba(255,255,255,1)' })\r\n      }\r\n    },\r\n  })\r\n  return (\r\n    <animated.div style={styles}>\r\n      <ConfirmButton style={{ border: 'none' }}>{props.children}</ConfirmButton>\r\n    </animated.div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nexport interface IconPropsT {\r\n  src: string\r\n  size: number\r\n  fill?: string\r\n  style?: React.CSSProperties\r\n  shadow?: boolean\r\n  onClick?: () => void\r\n}\r\nexport const Icon = ({\r\n  src,\r\n  size,\r\n  style = {},\r\n  fill = 'white',\r\n  shadow,\r\n  onClick,\r\n}: IconPropsT) => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [svg, setSvg] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (src) {\r\n      fetch(src)\r\n        .then((res) => res.text())\r\n        .then((text) => setSvg(text))\r\n        .then(() => setLoading(false))\r\n    }\r\n  }, [src])\r\n\r\n  return !loading ? (\r\n    <div\r\n      className={`icon ${shadow ? 'shadow' : ''}`}\r\n      onClick={() => {\r\n        if (onClick) onClick()\r\n      }}\r\n      style={{ ...style, height: size, width: size, fill }}\r\n      dangerouslySetInnerHTML={{ __html: svg }}\r\n    />\r\n  ) : (\r\n    <div />\r\n  )\r\n}\r\n","import React, { useState, useLayoutEffect } from 'react'\r\nimport { v4 } from 'uuid'\r\n\r\nexport interface HoverChildrenT {\r\n  isHovering: boolean\r\n}\r\nexport interface HoverPropsT {\r\n  delay?: number\r\n  flex?: boolean\r\n  children: (props: HoverChildrenT) => JSX.Element\r\n}\r\nexport const Hover = (props: HoverPropsT) => {\r\n  const { delay = 500, flex, children } = props\r\n  const [internalHovering, setInternalHovering] = useState<boolean>(false)\r\n  const [isHovering, setIsHovering] = useState<boolean>(false)\r\n  const [guid, setGuid] = useState<string>(v4())\r\n  useLayoutEffect(() => {\r\n    const action = async () => {\r\n      if (internalHovering) {\r\n        setTimeout(() => {\r\n          setGuid(v4())\r\n        }, delay)\r\n      }\r\n    }\r\n    action()\r\n  }, [internalHovering])\r\n  useLayoutEffect(() => {\r\n    if (internalHovering) {\r\n      setIsHovering(true)\r\n    }\r\n  }, [guid])\r\n  const onMouseEnter = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(true)\r\n  }\r\n  const onMouseLeave = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(false)\r\n    setIsHovering(false)\r\n  }\r\n  return (\r\n    <div\r\n      style={{ display: flex ? 'flex' : 'block', flex: flex ? 1 : undefined }}\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n    >\r\n      {children({ isHovering })}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Hover } from '../components/Hover'\r\nimport { Theme } from '../theme'\r\n\r\nexport interface BoxContainerPropsT extends React.HTMLProps<HTMLDivElement> {\r\n  substyle?: React.CSSProperties\r\n  tag?: any\r\n  to?: string\r\n}\r\nexport const BoxContainer = (props: BoxContainerPropsT) => {\r\n  const {\r\n    style = {},\r\n    substyle = {},\r\n    children,\r\n    tag: Element = 'div',\r\n    ...rest\r\n  } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        border: '1px solid #000',\r\n        display: 'flex',\r\n        boxSizing: 'border-box',\r\n        ...style,\r\n      }}\r\n    >\r\n      <Element\r\n        style={{\r\n          border: substyle.border || `1px solid ${Theme.lightBgColor}`,\r\n          background: `linear-gradient(0deg, ${Theme.mediumBgColor} 0%, rgba(42,42,44) 100%)`,\r\n          padding: 10,\r\n          color: '#ccc',\r\n          flex: 1,\r\n          boxShadow: 'inset 0px 0px 2px black',\r\n          ...substyle,\r\n        }}\r\n        {...rest}\r\n      >\r\n        {children}\r\n      </Element>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const SmallBox = (props: BoxContainerPropsT) => (\r\n  <BoxContainer\r\n    {...props}\r\n    style={{\r\n      height: 40,\r\n      width: 40,\r\n      ...props.style,\r\n    }}\r\n    substyle={{\r\n      display: 'flex',\r\n      padding: 0,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      background: Theme.darkBgColor,\r\n      ...props.substyle,\r\n    }}\r\n  >\r\n    {props.children}\r\n  </BoxContainer>\r\n)\r\n\r\nexport const BoxButton = (props: BoxContainerPropsT) => {\r\n  return (\r\n    <Hover delay={0}>\r\n      {({ isHovering }) => (\r\n        <BoxContainer\r\n          {...props}\r\n          tag='button'\r\n          style={{\r\n            margin: 0,\r\n            ...(props.style || {}),\r\n          }}\r\n          substyle={{\r\n            borderColor:\r\n              isHovering && !props.disabled ? '#999' : Theme.lightBgColor,\r\n            padding: '4px',\r\n            cursor: props.disabled ? 'default' : 'pointer',\r\n            background: props.disabled ? '#444' : Theme.darkBgColor,\r\n            boxShadow: props.disabled ? 'none' : undefined,\r\n            ...(props.substyle || {}),\r\n          }}\r\n        />\r\n      )}\r\n    </Hover>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tStats } from '../../game/Stats/type'\r\nimport {\r\n  DEFENSE_BONUS_KEYS,\r\n  STAT_KEY_LABELS,\r\n  DAMAGE_BONUS_KEYS,\r\n  STAT_BONUS_KEYS,\r\n  HEALTH_FOCUS_BONUS_KEYS,\r\n} from '../../game/Stats/constants'\r\nimport { tCharacterTag } from '../../game/Character/type'\r\n\r\nexport interface StatsPreviewPropsT {\r\n  stats: tStats\r\n}\r\n\r\nconst defense_key_colors: any = {\r\n  armor: 'lightblue',\r\n  resistance: 'plum',\r\n}\r\n\r\nexport const StatsPreview = (props: StatsPreviewPropsT) => {\r\n  const { stats } = props\r\n  return (\r\n    <FlexContainer $direction='column' style={{ fontSize: 14 }}>\r\n      {DEFENSE_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span\r\n              key={key}\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: defense_key_colors[key],\r\n              }}\r\n            >\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {DAMAGE_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span key={key} style={{ textTransform: 'capitalize' }}>\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {HEALTH_FOCUS_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span key={key} style={{ textTransform: 'capitalize' }}>\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {STAT_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] > 0 && (\r\n            <span\r\n              key={key}\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: 'lightgreen',\r\n              }}\r\n            >\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {STAT_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] < 0 && (\r\n            <span\r\n              key={key}\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: 'lightcoral',\r\n              }}\r\n            >\r\n              {stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {(Object.keys(stats.damageModifiers) as tCharacterTag[])\r\n        .filter((tag) => stats.damageModifiers[tag] > 0)\r\n        .map((tag) => (\r\n          <span key={tag}>\r\n            +{Math.floor(stats.damageModifiers[tag] * 100)}% damage against{' '}\r\n            {tag}\r\n          </span>\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import Vigor from './svg/delapouite/heart-beats.svg'\r\nimport Strength from './svg/delapouite/biceps.svg'\r\nimport Brain from './svg/lorc/brain.svg'\r\nimport Awareness from './svg/delapouite/eye-target.svg'\r\nimport Juggler from './svg/lorc/juggler.svg'\r\nimport Agility from './svg/lorc/sprint.svg'\r\nimport Clover from './svg/lorc/clover.svg'\r\n\r\nimport Dazed from './svg/lorc/star-swirl.svg'\r\nimport Targeted from './svg/sbed/targeted.svg'\r\nimport Evasive from './svg/lorc/dodging.svg'\r\nimport SpeedDown from './svg/delapouite/sticky-boot.svg'\r\nimport Poisoned from './svg/lorc/biohazard.svg'\r\nimport Burning from './svg/carl-olsen/flame.svg'\r\nimport Bleeding from './svg/lorc/bleeding-wound.svg'\r\nimport Snowflake from './svg/lorc/snowflake-2.svg'\r\nimport ArmorDown from './svg/lorc/broken-shield.svg'\r\n\r\nimport Shot from './svg/lorc/high-shot.svg'\r\nimport Headshot from './svg/delapouite/shield-impact.svg'\r\nimport Arcane from './svg/lorc/fire-zone.svg'\r\nimport Nova from './svg/lorc/heavy-timer.svg'\r\nimport Stun from './svg/lorc/ubisoft-sun.svg'\r\nimport Smash from './svg/lorc/flat-hammer.svg'\r\nimport Shockwave from './svg/lorc/hammer-drop.svg'\r\nimport Taunt from './svg/lorc/bordered-shield.svg'\r\nimport Ring from './svg/lorc/ringing-bell.svg'\r\nimport Reverberate from './svg/lorc/resonance.svg'\r\nimport Protect from './svg/lorc/shieldcomb.svg'\r\nimport PinDown from './svg/lorc/energy-arrow.svg'\r\nimport Reset from './svg/delapouite/backward-time.svg'\r\nimport Slow from './svg/lorc/snail.svg'\r\nimport SpreadShot from './svg/lorc/double-shot.svg'\r\nimport TimeJump from './svg/delapouite/extra-time.svg'\r\nimport Heal from './svg/sbed/health-normal.svg'\r\nimport Lunge from './svg/lorc/wave-strike.svg'\r\nimport Restore from './svg/lorc/life-support.svg'\r\nimport Dodging from './svg/lorc/dodging.svg'\r\nimport Chop from './svg/lorc/axe-in-stump.svg'\r\nimport Strike from './svg/lorc/plain-dagger.svg'\r\nimport Stab from './svg/lorc/knife-thrust.svg'\r\nimport Cleave from './svg/lorc/pointy-sword.svg'\r\nimport AxeSpin from './svg/lorc/axe-swing.svg'\r\nimport Slice from './svg/lorc/saber-slash.svg'\r\nimport ArmorUp from './svg/delapouite/vibrating-shield.svg'\r\n\r\nimport MagicArmor from './svg/lorc/robe.svg'\r\nimport ClothArmor from './svg/lorc/scale-mail.svg'\r\nimport Armor from './svg/delapouite/chest-armor.svg'\r\nimport Shield from './svg/delapouite/viking-shield.svg'\r\nimport MagicShield from './svg/lorc/lightning-shield.svg'\r\nimport Footwear from './svg/lorc/leather-boot.svg'\r\nimport Hat from './svg/delapouite/robin-hood-hat.svg'\r\nimport MagicHat from './svg/lorc/pointy-hat.svg'\r\nimport Helmet from './svg/lorc/visored-helm.svg'\r\nimport Weapon from './svg/lorc/broadsword.svg'\r\n\r\nimport Axe from './svg/lorc/battle-axe.svg'\r\nimport Blunt from './svg/lorc/gavel.svg'\r\nimport Bow from './svg/lorc/heavy-arrow.svg'\r\nimport Dagger from './svg/lorc/bowie-knife.svg'\r\nimport Handgun from './svg/skoll/revolver.svg'\r\nimport MagicStaff from './svg/lorc/wizard-staff.svg'\r\nimport Sword from './svg/lorc/broadsword.svg'\r\nimport Scythe from './svg/lorc/scythe.svg'\r\nimport Chime from './svg/lorc/ringing-bell.svg'\r\nimport Greatsword from './svg/lorc/croc-sword.svg'\r\nimport Fist from './svg/skoll/fist.svg'\r\n\r\nimport Godsbeard from './svg/delapouite/herbs-bundle.svg'\r\nimport { tBaseStats } from '../game/Stats/type'\r\nimport { tStatusType } from '../game/Status/type'\r\nimport { GODSBEARD } from '../game/Consumable/objects/godsbeard'\r\nimport { tArmorResourceType, tArmorType } from '../game/Armor/type'\r\nimport { tWeaponType } from '../game/Weapon/type'\r\nimport { tCharacterClass } from '../game/Character/type'\r\n\r\nimport Executioner from './svg/delapouite/executioner-hood.svg'\r\nimport Hunter from './svg/lorc/cowled.svg'\r\nimport Bard from './svg/delapouite/female-vampire.svg'\r\nimport Scholar from './svg/delapouite/wizard-face.svg'\r\nimport Hobo from './svg/delapouite/perspective-dice-six.svg'\r\n\r\nexport const STAT_ICONS: Record<keyof tBaseStats, string> = {\r\n  vigor: Vigor,\r\n  strength: Strength,\r\n  intelligence: Brain,\r\n  dexterity: Awareness,\r\n  charisma: Juggler,\r\n  agility: Agility,\r\n  luck: Clover,\r\n  evasion: '',\r\n  criticalChance: '',\r\n}\r\n\r\nexport const STATUS_ICONS: Partial<Record<tStatusType, string>> = {\r\n  stunned: Dazed,\r\n  targeted: Targeted,\r\n  evasive: Evasive,\r\n  protected: Protect,\r\n  'speed-down': SpeedDown,\r\n  poisoned: Poisoned,\r\n  burning: Burning,\r\n  bleeding: Bleeding,\r\n  frozen: Snowflake,\r\n  'armor-down': ArmorDown,\r\n}\r\n\r\nexport const SKILL_ICONS: Record<string, string> = {\r\n  Shot: Shot,\r\n  Headshot: Headshot,\r\n  'Pin Down': PinDown,\r\n  Flurry: SpreadShot,\r\n\r\n  Arcane: Arcane,\r\n  Nova: Nova,\r\n\r\n  Ring: Ring,\r\n  Reverberate: Reverberate,\r\n\r\n  Smash: Smash,\r\n  Strike: Strike,\r\n  Swing: Chop,\r\n  Chop: Chop,\r\n  Thrust: Scythe,\r\n  Earthquake: Shockwave,\r\n  Ripple: Shockwave,\r\n  'Axe Spin': AxeSpin,\r\n  Cleave: Cleave,\r\n  Lunge: Lunge,\r\n  Stab: Stab,\r\n  Slice: Slice,\r\n  Swipe: Slice,\r\n\r\n  Stun: Stun,\r\n  Reset: Reset,\r\n\r\n  Taunt: Taunt,\r\n\r\n  Slow: Slow,\r\n  Protect: Protect,\r\n  'Time Jump': TimeJump,\r\n  Heal: Heal,\r\n  Restore: Restore,\r\n  Rush: Agility,\r\n  Vanish: Dodging,\r\n  'Evade Up': Dodging,\r\n  'Armor Up': ArmorUp,\r\n}\r\n\r\nexport const ARMOR_TYPE_ICONS: Record<tArmorType, string> = {\r\n  'magic-armor': MagicArmor,\r\n  'light-armor': ClothArmor,\r\n  'heavy-armor': Armor,\r\n  shield: Shield,\r\n  ward: MagicShield,\r\n  footwear: Footwear,\r\n  hat: Hat,\r\n  'magic-hat': MagicHat,\r\n  helmet: Helmet,\r\n  charm: '',\r\n  ring: '',\r\n}\r\n\r\nexport const WEAPON_TYPE_ICONS: Record<tWeaponType, string> = {\r\n  enemy: '',\r\n  axe: Axe,\r\n  hammer: Blunt,\r\n  bow: Bow,\r\n  dagger: Dagger,\r\n  chime: Chime,\r\n  pistol: Handgun,\r\n  catalyst: MagicStaff,\r\n  scythe: Scythe,\r\n  sword: Sword,\r\n  greatsword: Greatsword,\r\n  fist: Fist,\r\n}\r\n\r\nexport const RESOURCE_ICONS: Record<tArmorResourceType | 'weapon', string> = {\r\n  weapon: Weapon,\r\n  offhand: Shield,\r\n  body: Armor,\r\n  head: Helmet,\r\n  feet: Footwear,\r\n}\r\n\r\nexport const CONSUMABLE_ITEM_ICONS: Record<string, string> = {\r\n  [GODSBEARD().cid]: Godsbeard,\r\n}\r\nexport const CONSUMABLE_ITEM_COLORS: Record<string, string> = {\r\n  [GODSBEARD().cid]: '#84a397',\r\n}\r\n\r\nexport const CHARACTER_CLASS_ICONS: Record<tCharacterClass, string> = {\r\n  enemy: '',\r\n  executioner: Executioner,\r\n  patrician: Bard,\r\n  ranger: Hunter,\r\n  student: Scholar,\r\n  drifter: Hobo,\r\n}\r\n","import React, { useState, useRef } from 'react'\r\nimport BaseTooltip, { TooltipProps } from 'react-tooltip-lite'\r\nimport { Hover } from '../Hover'\r\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\r\n\r\nexport interface ClickToolTipChildrenT {\r\n  onClick: (value?: boolean) => void\r\n  ref: React.MutableRefObject<HTMLElement | undefined>\r\n}\r\ninterface PropsT extends TooltipProps {\r\n  children: JSX.Element | ((props: ClickToolTipChildrenT) => JSX.Element)\r\n  content: JSX.Element | ((props: ClickToolTipChildrenT) => JSX.Element)\r\n  flex?: boolean\r\n}\r\nexport const Tooltip = (props: PropsT) => {\r\n  const { ...rest } = props\r\n  return (\r\n    <BaseTooltip\r\n      direction='up'\r\n      tagName='div'\r\n      padding='0'\r\n      arrow={false}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nexport const HoverToolTip = (props: PropsT) => {\r\n  return (\r\n    <Hover flex={props.flex}>\r\n      {({ isHovering }) => <Tooltip {...props} isOpen={isHovering} />}\r\n    </Hover>\r\n  )\r\n}\r\n\r\nexport const ClickToolTip = (props: PropsT) => {\r\n  const { children, content, ...rest } = props\r\n  const [isOpen, setIsOpen] = useState<boolean>(false)\r\n  const ref = useRef<HTMLElement>()\r\n  useOnClickOutside(ref, () => {\r\n    setIsOpen(false)\r\n  })\r\n  if (typeof children !== 'function') return null\r\n  if (typeof content !== 'function') return null\r\n  const p = {\r\n    onClick: (value?: boolean) => {\r\n      setIsOpen((v) => (value !== undefined ? value : !v))\r\n    },\r\n    ref,\r\n  }\r\n  return (\r\n    <Tooltip content={content(p)} {...rest} isOpen={isOpen}>\r\n      {children(p)}\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport const useOnClickOutside = (\r\n  ref: React.MutableRefObject<HTMLElement | undefined>,\r\n  handler: Function,\r\n) => {\r\n  useEffect(() => {\r\n    const listener = (event: any) => {\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return\r\n      }\r\n\r\n      setTimeout(() => handler(event), 150)\r\n    }\r\n\r\n    document.addEventListener('mousedown', listener)\r\n    document.addEventListener('touchstart', listener)\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', listener)\r\n      document.removeEventListener('touchstart', listener)\r\n    }\r\n  }, [ref, handler])\r\n}\r\n","import React from 'react'\r\nimport { styled, withWrapper } from 'styletron-react'\r\nimport { HoverToolTip } from '../components/Tooltip'\r\nimport { Theme } from '../theme'\r\n\r\nconst Div = styled('div', {\r\n  transform: 'rotateY(0deg) rotate(-45deg)',\r\n})\r\nexport const Badge = withWrapper(Div, (Element) => (props: any) => {\r\n  const { onClick, $style, ...rest } = props\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      style={{\r\n        position: props.$absolute === false ? 'relative' : 'absolute',\r\n        background: Theme.darkBgColorSolid,\r\n        padding: '4px',\r\n        fontFamily: 'New Rocker',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        boxShadow: '1px 1px 3px black',\r\n        height: props.$size || '20px',\r\n        width: props.$size || '20px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        lineHeight: '20px',\r\n        borderRadius: '30%',\r\n        transform: 'rotateY(0deg) rotate(45deg)',\r\n        textShadow: '1px 1px 3px black',\r\n        color: props.$color || 'white',\r\n        cursor: 'pointer',\r\n        top: props.$top,\r\n        userSelect: 'none',\r\n        bottom: props.$bottom,\r\n        right: props.$right,\r\n        left: props.$left,\r\n        transition: 'all 0.2s',\r\n        zIndex: 4,\r\n        ...($style || {}),\r\n      }}\r\n    >\r\n      <Element {...rest} />\r\n    </div>\r\n  )\r\n})\r\n\r\nexport interface HoverBadgePropsT {\r\n  children: JSX.Element\r\n  content: JSX.Element\r\n  badgeProps: any\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n}\r\nexport const HoverBadge = (props: HoverBadgePropsT) => {\r\n  const { children, content, badgeProps, direction } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        top: badgeProps.$top,\r\n        bottom: badgeProps.$bottom,\r\n        left: badgeProps.$left,\r\n        right: badgeProps.$right,\r\n      }}\r\n    >\r\n      <HoverToolTip\r\n        distance={2}\r\n        direction={direction || 'right'}\r\n        // styles={{ position: 'absolute' }}\r\n        content={content || <div />}\r\n      >\r\n        <Badge\r\n          $absolute={false}\r\n          $size={badgeProps.$size}\r\n          $color={badgeProps.$color}\r\n          $style={badgeProps.style}\r\n        >\r\n          {children}\r\n        </Badge>\r\n      </HoverToolTip>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Badge } from '../../elements/badge'\r\nimport { CheckKVT } from '../RoundResultRenderer'\r\nimport X from '../../icons/svg/lorc/split-cross.svg'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tBaseStats } from '../../game/Stats/type'\r\nimport { tStatusType } from '../../game/Status/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface SkillChecksPropsT {\r\n  stat: keyof tBaseStats\r\n  skill?: tSkill\r\n  rolls?: number\r\n  results?: boolean[]\r\n}\r\nexport const SkillChecks = (props: SkillChecksPropsT) => {\r\n  const { stat, skill, rolls, results = [] } = props\r\n  console.log(skill, rolls)\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        justifyContent: 'center',\r\n        minHeight: 46,\r\n        padding: '0px 0 24px 0',\r\n      }}\r\n    >\r\n      {Array(skill?.rolls || rolls || 0)\r\n        .fill(null)\r\n        .map((_, i) => (\r\n          <SkillCheck\r\n            key={i}\r\n            skill={skill}\r\n            perfect={\r\n              results.every((r) => r === true) && results.length === rolls\r\n            }\r\n            check={{ label: stat, result: results[i] }}\r\n          />\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface SkillCheckT {\r\n  check: CheckKVT\r\n  size?: number\r\n  padding?: number\r\n  perfect?: boolean\r\n  crit?: boolean\r\n  skill?: tSkill\r\n}\r\nexport const SkillCheck = (props: SkillCheckT) => {\r\n  const { check, size = 36, padding = 12, perfect = false, skill, crit } = props\r\n  const colors = getPerfectStatusColors(skill?.perfectStatus || [], crit)\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: `0px ${padding}px`,\r\n        opacity: check.result === undefined ? 0.75 : 1,\r\n      }}\r\n    >\r\n      <Badge\r\n        $absolute={false}\r\n        $size={size}\r\n        $style={{\r\n          borderColor: perfect ? colors.border : undefined,\r\n          background: perfect ? colors.background : Theme.darkBgColorSolid,\r\n        }}\r\n      >\r\n        <Icon\r\n          src={STAT_ICONS[check.label as keyof tBaseStats]}\r\n          fill={perfect ? colors.fill : getColor(check.result)}\r\n          size={size - 4}\r\n        />\r\n        {check.result === false && (\r\n          <Icon\r\n            src={X}\r\n            shadow\r\n            fill={'lightcoral'}\r\n            size={size - 4}\r\n            style={{ position: 'absolute', top: 0 }}\r\n          />\r\n        )}\r\n      </Badge>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst getColor = (result: boolean | undefined) => {\r\n  if (result === true) return 'white'\r\n  if (result === false) return 'rgba(255,255,255,0.3)'\r\n  return 'rgba(255,255,255,0.3)'\r\n}\r\ninterface SCColorsT {\r\n  border: string\r\n  background: string\r\n  fill: string\r\n}\r\nexport const getPerfectStatusColors = (\r\n  status: tStatusType[],\r\n  crit: boolean = false,\r\n): SCColorsT => {\r\n  if (crit) {\r\n    return {\r\n      border: '#white',\r\n      background: '#00134a',\r\n      fill: '#d9e3ff',\r\n    }\r\n  }\r\n  if (status.includes('burning')) {\r\n    return {\r\n      border: '#ff9100',\r\n      background: '#5c2c00',\r\n      fill: '#d48a46',\r\n    }\r\n  }\r\n  if (status.includes('poisoned')) {\r\n    return {\r\n      border: '#00870f',\r\n      background: '#001202',\r\n      fill: '#888f88',\r\n    }\r\n  }\r\n  if (status.includes('bleeding')) {\r\n    return {\r\n      border: '#ff0000',\r\n      background: '#120000',\r\n      fill: '#d19999',\r\n    }\r\n  }\r\n  if (status.includes('cursed-vigor')) {\r\n    return {\r\n      border: '#6400a3',\r\n      background: '#10001a',\r\n      fill: '#b093c2',\r\n    }\r\n  }\r\n  if (status.includes('frozen')) {\r\n    return {\r\n      border: '#009ac4',\r\n      background: '#00161c',\r\n      fill: '#a5c8d1',\r\n    }\r\n  }\r\n\r\n  return {\r\n    border: '#ffd400',\r\n    background: '#261d00',\r\n    fill: '#ede5be',\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Color from 'color'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { StatsPreview } from '../StatsPreview'\r\nimport { Icon } from '../Icon'\r\nimport { ARMOR_TYPE_ICONS } from '../../icons/maps'\r\nimport { Button } from '../../elements/button'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { STAT_KEY_LABELS } from '../../game/Stats/constants'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ArmorPreviewPropsT {\r\n  armor: tArmor\r\n  showEquipButton?: boolean\r\n  showBuyButton?: boolean\r\n  cost?: number\r\n  onEquipClick?: () => void\r\n  onBuyClick?: () => void\r\n}\r\nexport const ArmorPreview = (props: ArmorPreviewPropsT) => {\r\n  const {\r\n    armor,\r\n    showEquipButton,\r\n    showBuyButton,\r\n    cost,\r\n    onEquipClick,\r\n    onBuyClick,\r\n  } = props\r\n  const rarityColor = ITEM_RARITY_COLORS[armor.rarity]\r\n  const from = Color(rarityColor).darken(0.5).rgb().toString()\r\n  const to = Color(rarityColor).darken(0.7).rgb().toString()\r\n  const gradient = `linear-gradient(180deg, ${from} 0%, ${to} 100%)`\r\n  const skill = armor.skills[0]\r\n  return (\r\n    <BoxContainer\r\n      style={{ minWidth: 240 }}\r\n      substyle={{\r\n        background: gradient,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      }}\r\n    >\r\n      <FlexContainer $direction='column' $full>\r\n        <FullContainer />\r\n        {skill && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginBottom: 10 }}>\r\n            {Array(skill.rolls)\r\n              .fill(null)\r\n              .map((_, i) => (\r\n                <SkillCheck\r\n                  check={{\r\n                    label: skill.weaponStatOverride || 'strength',\r\n                    result: true,\r\n                  }}\r\n                  size={18}\r\n                  padding={4}\r\n                  skill={skill}\r\n                />\r\n              ))}\r\n          </FlexContainer>\r\n        )}\r\n        <FlexContainer $full style={{ marginBottom: 8 }}>\r\n          <Icon\r\n            src={ARMOR_TYPE_ICONS[armor.type]}\r\n            size={32}\r\n            style={{ marginRight: 10 }}\r\n            shadow\r\n          />\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              textShadow: '1px 1px 2px rgba(0,0,0,0.8)',\r\n            }}\r\n          >\r\n            <span style={{ fontWeight: 600 }}>{armor.name}</span>\r\n            <span style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n              {armor.rarity}\r\n            </span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n          {showEquipButton && (\r\n            <div style={{ marginLeft: 10 }}>\r\n              <Button onClick={onEquipClick} style={{ padding: 4 }}>\r\n                Equip\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </FlexContainer>\r\n        <BoxContainer\r\n          substyle={{\r\n            background: 'rgba(0,0,0,0.7)',\r\n            minHeight: 120,\r\n            textAlign: 'left',\r\n          }}\r\n        >\r\n          <FlexContainer $direction='column'>\r\n            <FlexContainer\r\n              style={{ justifyContent: 'space-between', marginBottom: 8 }}\r\n            >\r\n              <FlexContainer\r\n                $full\r\n                style={{\r\n                  textTransform: 'capitalize',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    color: Theme.physicalColor,\r\n                    fontSize: 24,\r\n                    fontWeight: 'bolder',\r\n                    marginRight: 8,\r\n                  }}\r\n                >\r\n                  {armor.stats.armor}\r\n                </div>\r\n                <div>{STAT_KEY_LABELS.armor}</div>\r\n              </FlexContainer>\r\n              <FlexContainer\r\n                $full\r\n                style={{\r\n                  textTransform: 'capitalize',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    color: 'plum',\r\n                    fontSize: 24,\r\n                    fontWeight: 'bolder',\r\n                    marginRight: 8,\r\n                  }}\r\n                >\r\n                  <span>{armor.stats.resistance}</span>\r\n                </span>\r\n                {STAT_KEY_LABELS.resistance}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n            {armor.skills.length > 0 && (\r\n              <span style={{ color: 'plum', marginBottom: 8 }}>\r\n                {armor.skills.map(\r\n                  (skill, i) => `${i > 0 ? ', ' : ''}${skill.name}`,\r\n                )}\r\n              </span>\r\n            )}\r\n            <StatsPreview stats={{ ...armor.stats, armor: 0, resistance: 0 }} />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        {showBuyButton && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginTop: 10 }}>\r\n            <Button onClick={onBuyClick} style={{ padding: '4px 16px' }}>\r\n              Buy ({cost || 0})\r\n            </Button>\r\n          </FlexContainer>\r\n        )}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport const FakeLink = styled('span', (props: any) => {\r\n  return {\r\n    whiteSpace: 'nowrap',\r\n    ':hover': {\r\n      textDecoration: 'underline',\r\n      cursor: 'pointer',\r\n    },\r\n  }\r\n})\r\n","import { tStatusType } from '../Status/type'\r\n\r\nexport type tPerfectKey = tStatusType | 'splash' | 'pierce' | 'heal'\r\nexport const PERFECT_DISPLAY_INFO: Partial<Record<tPerfectKey, string>> = {\r\n  splash: 'Splash Damage',\r\n  pierce: 'Ignore Resistances',\r\n  bleeding: 'Bleed',\r\n  burning: 'Burn',\r\n  frozen: 'Freeze',\r\n  poisoned: 'Poison',\r\n  targeted: 'Taunt Enemies',\r\n  stunned: 'Stun',\r\n  evasive: 'Become Evasive',\r\n  heal: 'Heal',\r\n  protected: 'Protect',\r\n  ['speed-down']: 'Speed Down',\r\n  rushed: 'Rush Character',\r\n  reset: 'Reset Character',\r\n  cure: 'Cure Character',\r\n}\r\n","import { tProcessedCharacter } from '../Character/type'\r\nimport {\r\n  tSkill,\r\n  tSourceSkillResult,\r\n  tTargetSkillResult,\r\n  tSkillResult,\r\n  tSkillTarget,\r\n  tSkillTargetType,\r\n} from './type'\r\nimport { resolveCheck } from '../Roll/util'\r\nimport {\r\n  getRawDamage,\r\n  getReflectedDamage,\r\n  isCharacter,\r\n  hasStatus,\r\n  getDamageResistance,\r\n} from '../Character/util'\r\nimport { tProcessedParty } from '../Party/type'\r\nimport { isParty } from '../Party/util'\r\nimport { tDamage } from '../Damage/type'\r\nimport { tPerfectKey, PERFECT_DISPLAY_INFO } from './constants'\r\nimport { noneg } from '../../util'\r\n\r\nexport const getSourceSkillResult = (\r\n  source: tProcessedCharacter,\r\n  skill: tSkill,\r\n): tSourceSkillResult => {\r\n  const rollResults = Array(skill.rolls)\r\n    .fill(null)\r\n    .map((_, i) =>\r\n      resolveCheck(\r\n        source,\r\n        skill.weaponStatOverride || source.weapon.stat,\r\n        skill.offset,\r\n      ),\r\n    )\r\n  const passedCount = rollResults.filter((r) => r).length\r\n  const perfect = passedCount === skill.rolls\r\n  const criticalHitSuccess = resolveCheck(source, 'criticalChance')\r\n  const rollDamageModifier = passedCount / skill.rolls\r\n  const rawDamage = {\r\n    ...source.weapon.damage,\r\n    value: Math.round(\r\n      (source.weapon.damage.value + source.stats.attackDamageOffset) *\r\n        source.stats.attackDamageModifier *\r\n        skill.damageModifier *\r\n        rollDamageModifier *\r\n        (perfect && criticalHitSuccess ? 1.2 : 1),\r\n    ),\r\n    range: skill.weaponRangeOverride || source.weapon.damage.range,\r\n  }\r\n  return {\r\n    source,\r\n    skill,\r\n    rollResults,\r\n    passedCount,\r\n    perfect,\r\n    accuracySuccess: skill.damage ? passedCount > 0 : perfect,\r\n    criticalHitSuccess: perfect && criticalHitSuccess,\r\n    weaponDidBreak:\r\n      rollResults.every((r) => r === false) && source.weapon.breakable,\r\n    rawDamage,\r\n    splashDamage: {\r\n      ...source.weapon.damage,\r\n      value:\r\n        perfect && skill.perfectSplash\r\n          ? Math.round(rawDamage.value * skill.splashDamageModifier)\r\n          : 0,\r\n      range: skill.weaponRangeOverride || source.weapon.damage.range,\r\n    },\r\n    ignoreResistance: perfect && skill.perfectPierce,\r\n    addedStatus: perfect ? skill.perfectStatus : [],\r\n  }\r\n}\r\n\r\nexport const getTargetSkillResult = (\r\n  target: tProcessedCharacter,\r\n  sourceResult: tSourceSkillResult,\r\n): tTargetSkillResult => {\r\n  const dodgeResult = resolveCheck(target, 'evasion')\r\n  const dodgeSuccess = hasStatus(target, 'evasive')\r\n    ? !sourceResult.perfect\r\n    : !sourceResult.perfect && dodgeResult\r\n  const damage = getRawDamage(\r\n    sourceResult.source,\r\n    target,\r\n    sourceResult.rawDamage,\r\n  )\r\n  return {\r\n    ...sourceResult,\r\n    target,\r\n    dodgeSuccess,\r\n    totalDamage: {\r\n      ...damage,\r\n      value: dodgeSuccess ? 0 : damage.value,\r\n    },\r\n    reflectedDamage: getReflectedDamage(target, damage),\r\n    loggedDamgge: {\r\n      ...damage,\r\n      value: dodgeSuccess\r\n        ? 0\r\n        : noneg(damage.value - getDamageResistance(target, damage)),\r\n    },\r\n  }\r\n}\r\n\r\nexport const getSkillResult = (\r\n  source: tProcessedCharacter,\r\n  targets: tProcessedCharacter[],\r\n  skill: tSkill,\r\n): tSkillResult => {\r\n  const sourceResult = getSourceSkillResult(source, skill)\r\n  return {\r\n    sourceResult,\r\n    targetResults: targets.map((target) =>\r\n      getTargetSkillResult(target, sourceResult),\r\n    ),\r\n  }\r\n}\r\n\r\nexport const resolveSkillTarget = (\r\n  target: tSkillTarget,\r\n): tProcessedCharacter[] => {\r\n  switch (target.type) {\r\n    case 'single':\r\n      return target.character ? [target.character] : []\r\n    case 'ally':\r\n      return target.character ? [target.character] : []\r\n    case 'self':\r\n      return target.character ? [target.character] : []\r\n    case 'party':\r\n      return target.party?.characters || []\r\n    case 'group':\r\n      return target.party?.characters || []\r\n    default:\r\n      return []\r\n  }\r\n}\r\n\r\nexport const makeSkillTarget = (\r\n  type: tSkillTargetType,\r\n  target: tProcessedCharacter | tProcessedParty,\r\n): tSkillTarget => {\r\n  return {\r\n    type,\r\n    character: isCharacter(target)\r\n      ? (target as tProcessedCharacter)\r\n      : undefined,\r\n    party: isParty(target) ? (target as tProcessedParty) : undefined,\r\n  }\r\n}\r\n\r\nexport const getSkillTargetOptions = (\r\n  source: tProcessedCharacter,\r\n  sourceParty: tProcessedParty,\r\n  targetParty: tProcessedParty,\r\n  skill: tSkill,\r\n): tProcessedCharacter[] | tProcessedParty[] => {\r\n  switch (skill.targetType) {\r\n    case 'single':\r\n      return targetParty.characters.filter((c) => c.health > 0)\r\n    case 'ally':\r\n      return sourceParty.characters.filter((c) => c.health > 0)\r\n    case 'group':\r\n      return [targetParty]\r\n    case 'party':\r\n      return [sourceParty]\r\n    case 'self':\r\n      return [source]\r\n    default:\r\n      return []\r\n  }\r\n}\r\n\r\nexport const getSkillDamage = (\r\n  skill: tSkill,\r\n  source: tProcessedCharacter,\r\n): tDamage => {\r\n  return {\r\n    ...source.weapon.damage,\r\n    value:\r\n      (source.weapon.damage.value + source.stats.attackDamageOffset) *\r\n      (skill.damageModifier + source.stats.attackDamageModifier / 100),\r\n  }\r\n}\r\n\r\nexport const getPerfectKeys = (skill: tSkill): tPerfectKey[] => {\r\n  let base: tPerfectKey[] = [...skill.perfectStatus]\r\n  if (skill.perfectSplash) base = [...base, 'splash']\r\n  if (skill.perfectPierce) base = [...base, 'pierce']\r\n  if (skill.healing) base = [...base, 'heal']\r\n  return base\r\n}\r\n\r\nexport const getPerfectText = (\r\n  skill: tSkill,\r\n  character: tProcessedCharacter,\r\n): string => {\r\n  const perfectKeys = getPerfectKeys(skill)\r\n  const rawDamage = getSkillDamage(skill, character)\r\n\r\n  return perfectKeys.reduce((res, key, i) => {\r\n    let pre = `${res}${i > 0 ? ',' : ''}`\r\n    const text = PERFECT_DISPLAY_INFO[key]\r\n    switch (key) {\r\n      case 'splash':\r\n        return `${pre} ${Math.floor(skill.splashDamageModifier * 100)}% ${text}`\r\n      case 'heal':\r\n        return `${pre} ${text} ${character.stats.consumableHealthGainOffset} HP`\r\n      default:\r\n        return `${pre} ${text}`\r\n    }\r\n  }, '')\r\n}\r\n","import React from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { getSkillDamage, getPerfectText } from '../../game/Skill/util'\r\nimport { getChecksProbability } from '../../game/Roll/util'\r\nimport { Theme } from '../../theme'\r\nimport { Icon } from '../Icon'\r\nimport { SKILL_ICONS } from '../../icons/maps'\r\n\r\nexport interface SkillPreviewPropsT {\r\n  skill: tSkill\r\n  source: tProcessedCharacter\r\n  targets?: tProcessedCharacter[]\r\n}\r\nexport const SkillPreview = (props: SkillPreviewPropsT) => {\r\n  const { skill, source, targets } = props\r\n  const perfectChance = getChecksProbability(\r\n    source,\r\n    Array(skill.rolls)\r\n      .fill(null)\r\n      .map((_, i) => ({ key: source.weapon.stat, offset: skill.offset })),\r\n  )\r\n  const stat = skill.weaponStatOverride || source.weapon.stat\r\n  const damage = getSkillDamage(skill, source)\r\n  const perfectKeys = getPerfectText(skill, source)\r\n  if (damage.value === 0) {\r\n    console.log('ZERO DAMGE', skill.name, skill, source)\r\n  }\r\n  return (\r\n    <BoxContainer\r\n      style={{ marginTop: 30, position: 'relative', minWidth: 300 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <FlexContainer $direction='column' style={{ alignItems: 'center' }}>\r\n        <FlexContainer style={{ marginTop: -27 }}>\r\n          <FullContainer />\r\n          <BoxContainer\r\n            substyle={{\r\n              padding: '4px 12px',\r\n              fontSize: 18,\r\n              background: Theme.otherGrey,\r\n              fontFamily: Theme.titleFont,\r\n              textShadow: '1px 1px 3px black',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Icon\r\n              src={SKILL_ICONS[skill.name]}\r\n              size={16}\r\n              style={{ marginRight: 8 }}\r\n            />\r\n            {skill.name}\r\n          </BoxContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n        <span\r\n          style={{\r\n            color: 'rgba(255,255,255,0.4)',\r\n            marginTop: 8,\r\n            marginBottom: 20,\r\n          }}\r\n        >\r\n          Perfect ({Math.floor(perfectChance * 100)}%){' '}\r\n          {perfectKeys.length > 0 && '='} {perfectKeys}\r\n        </span>\r\n        <FlexContainer $full style={{ width: '100%', marginBottom: 8 }}>\r\n          {damage.value > 0 && skill.damage && (\r\n            <FlexContainer\r\n              $full\r\n              $direction='column'\r\n              style={{ alignItems: 'center', marginRight: 10 }}\r\n            >\r\n              <span\r\n                style={{\r\n                  color: damage.type === 'physical' ? 'lightblue' : 'plum',\r\n                  fontFamily: 'New Rocker',\r\n                  fontSize: 32,\r\n                }}\r\n              >\r\n                {`${Math.floor(damage.value)}`}\r\n              </span>\r\n              <span style={{ color: 'rgba(255,255,255,0.2)' }}>Max DMG</span>\r\n            </FlexContainer>\r\n          )}\r\n          {skill.rolls > 0 && (\r\n            <FlexContainer\r\n              $full\r\n              $direction='column'\r\n              style={{ alignItems: 'center' }}\r\n            >\r\n              <span\r\n                style={{\r\n                  fontFamily: 'New Rocker',\r\n                  fontSize: 32,\r\n                }}\r\n              >\r\n                {source.stats[stat] + skill.offset}%\r\n              </span>\r\n              <span style={{ color: 'rgba(255,255,255,0.2)' }}>\r\n                Per Check ACC\r\n              </span>\r\n            </FlexContainer>\r\n          )}\r\n        </FlexContainer>\r\n        <FlexContainer style={{ marginBottom: -18 }}>\r\n          <FullContainer />\r\n          <BoxContainer\r\n            substyle={{\r\n              padding: '2px 8px',\r\n              background: Theme.otherGrey,\r\n              textShadow: '1px 1px 3px black',\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            {skill.targetType} target\r\n          </BoxContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Color from 'color'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { StatsPreview } from '../StatsPreview'\r\nimport { Button } from '../../elements/button'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { Icon } from '../Icon'\r\nimport { WEAPON_TYPE_ICONS } from '../../icons/maps'\r\nimport Hands from '../../icons/svg/lorc/hand.svg'\r\nimport Ranged from '../../icons/svg/delapouite/arrow-wings.svg'\r\nimport Melee from '../../icons/svg/lorc/battered-axe.svg'\r\nimport { FakeLink } from '../../elements/typography'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { SkillPreview } from '../SkillPreview'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\n\r\nexport const getDamageColor = (weapon: tWeapon) => {\r\n  if (weapon.damage.type === 'physical') return 'lightblue'\r\n  if (weapon.damage.type === 'magic') return 'plum'\r\n  return 'white'\r\n}\r\n\r\nexport interface WeaponPreviewPropsT {\r\n  character?: tProcessedCharacter\r\n  weapon: tWeapon\r\n  showEquipButton?: boolean\r\n  showBuyButton?: boolean\r\n  cost?: number\r\n  onEquipClick?: () => void\r\n  onBuyClick?: () => void\r\n}\r\nexport const WeaponPreview = (props: WeaponPreviewPropsT) => {\r\n  const {\r\n    character,\r\n    weapon,\r\n    showEquipButton,\r\n    showBuyButton,\r\n    cost = 0,\r\n    onEquipClick,\r\n    onBuyClick,\r\n  } = props\r\n  const basicAttack = weapon.skills[0]\r\n  const rarityColor = ITEM_RARITY_COLORS[weapon.rarity]\r\n  const from = Color(rarityColor).darken(0.5).rgb().toString()\r\n  const to = Color(rarityColor).darken(0.7).rgb().toString()\r\n  const gradient = `linear-gradient(180deg, ${from} 0%, ${to} 100%)`\r\n  return (\r\n    <BoxContainer style={{ width: 240 }} substyle={{ background: gradient }}>\r\n      <FlexContainer $direction='column'>\r\n        {basicAttack && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginBottom: 10 }}>\r\n            <FlexContainer $full style={{ alignItems: 'center' }}>\r\n              <Icon\r\n                src={weapon.damage.range === 'melee' ? Melee : Ranged}\r\n                size={16}\r\n              />\r\n            </FlexContainer>\r\n            {Array(basicAttack.rolls)\r\n              .fill(null)\r\n              .map((_, i) => (\r\n                <SkillCheck\r\n                  key={i}\r\n                  check={{ label: weapon.stat, result: true }}\r\n                  size={18}\r\n                  padding={4}\r\n                  skill={weapon.skills[0]}\r\n                />\r\n              ))}\r\n            <FlexContainer\r\n              $full\r\n              style={{\r\n                fontSize: 18,\r\n                justifyContent: 'flex-end',\r\n                fontWeight: 'bolder',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Icon\r\n                size={16}\r\n                src={Hands}\r\n                fill='rgba(255,255,255,0.8)'\r\n                style={{ marginRight: 4 }}\r\n              />\r\n              {weapon.twoHand && '2'}\r\n              {!weapon.twoHand && '1'}\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        )}\r\n        <FlexContainer style={{ alignItems: 'center' }}>\r\n          <Icon\r\n            src={WEAPON_TYPE_ICONS[weapon.type]}\r\n            size={32}\r\n            style={{ marginRight: 10 }}\r\n            shadow\r\n          />\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              margin: '8px 0',\r\n              textShadow: '1px 1px 2px rgba(0,0,0,0.8)',\r\n              textAlign: 'left',\r\n            }}\r\n          >\r\n            <span style={{ fontWeight: 600 }}>{weapon.name}</span>\r\n            <span style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n              {weapon.rarity} {weapon.type}\r\n            </span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n\r\n          {showEquipButton && (\r\n            <div style={{ marginLeft: 10 }}>\r\n              <Button onClick={onEquipClick} style={{ padding: 4 }}>\r\n                Equip\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </FlexContainer>\r\n        <BoxContainer\r\n          substyle={{\r\n            background: 'rgba(0,0,0,0.7)',\r\n            minHeight: 120,\r\n            textAlign: 'left',\r\n          }}\r\n        >\r\n          <FlexContainer $direction='column'>\r\n            <FlexContainer style={{ lineHeight: '24px', marginBottom: 4 }}>\r\n              <span\r\n                style={{\r\n                  color: getDamageColor(weapon),\r\n                  fontWeight: 'bolder',\r\n                  marginRight: 8,\r\n                  fontSize: 24,\r\n                }}\r\n              >\r\n                {weapon.damage.value}\r\n              </span>\r\n              <span style={{ textTransform: 'capitalize' }}>\r\n                {weapon.damage.type} Damage\r\n              </span>\r\n            </FlexContainer>\r\n            <span\r\n              style={{\r\n                color: 'plum',\r\n                marginBottom: 8,\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n              }}\r\n            >\r\n              {weapon.skills.map((skill, i) => (\r\n                <React.Fragment key={skill.id}>\r\n                  {i > 0 ? ', ' : ''}\r\n                  <HoverToolTip\r\n                    direction='down'\r\n                    content={\r\n                      character ? (\r\n                        <SkillPreview skill={skill} source={character} />\r\n                      ) : (\r\n                        <div />\r\n                      )\r\n                    }\r\n                  >\r\n                    <FakeLink style={{ paddingLeft: i === 0 ? 0 : 4 }}>\r\n                      {skill.name}\r\n                    </FakeLink>\r\n                  </HoverToolTip>\r\n                </React.Fragment>\r\n              ))}\r\n            </span>\r\n            {weapon.breakable && (\r\n              <div style={{ color: 'gold', fontSize: 12 }}>Breakable</div>\r\n            )}\r\n            <StatsPreview stats={weapon.stats} />\r\n            {weapon.immunities.map((status) => (\r\n              <span style={{ textTransform: 'capitalize', fontSize: 14 }}>\r\n                {status} immunity\r\n              </span>\r\n            ))}\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        {showBuyButton && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginTop: 10 }}>\r\n            <Button onClick={onBuyClick} style={{ padding: '4px 16px' }}>\r\n              Buy ({cost || 0})\r\n            </Button>\r\n          </FlexContainer>\r\n        )}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Color from 'color'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { CONSUMABLE_ITEM_ICONS } from '../../icons/maps'\r\nimport { Button } from '../../elements/button'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\n\r\nexport interface ConsumablePreviewPropsT {\r\n  item: tConsumable\r\n  showEquipButton?: boolean\r\n  showBuyButton?: boolean\r\n  cost?: number\r\n  onEquipClick?: () => void\r\n  onBuyClick?: () => void\r\n}\r\nexport const ConsumablePreview = (props: ConsumablePreviewPropsT) => {\r\n  const { item, showBuyButton, cost, onBuyClick } = props\r\n  const rarityColor = ITEM_RARITY_COLORS[item.rarity]\r\n  const from = Color(rarityColor).darken(0.5).rgb().toString()\r\n  const to = Color(rarityColor).darken(0.7).rgb().toString()\r\n  const gradient = `linear-gradient(180deg, ${from} 0%, ${to} 100%)`\r\n  const skill = item.skill\r\n  return (\r\n    <BoxContainer style={{ minWidth: 240 }} substyle={{ background: gradient }}>\r\n      <FlexContainer $direction='column'>\r\n        {skill && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginBottom: 10 }}>\r\n            {Array(skill.rolls)\r\n              .fill(null)\r\n              .map((_, i) => (\r\n                <SkillCheck\r\n                  check={{\r\n                    label: skill.weaponStatOverride || 'strength',\r\n                    result: true,\r\n                  }}\r\n                  size={18}\r\n                  padding={4}\r\n                  skill={skill}\r\n                />\r\n              ))}\r\n          </FlexContainer>\r\n        )}\r\n        <FlexContainer style={{ marginBottom: 8 }}>\r\n          <Icon\r\n            src={CONSUMABLE_ITEM_ICONS[item.id]}\r\n            size={32}\r\n            style={{ marginRight: 10 }}\r\n            shadow\r\n          />\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              textShadow: '1px 1px 2px rgba(0,0,0,0.8)',\r\n            }}\r\n          >\r\n            <span style={{ fontWeight: 600 }}>{item.name}</span>\r\n            <span style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n              {item.rarity}\r\n            </span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n        <BoxContainer\r\n          substyle={{\r\n            background: 'rgba(0,0,0,0.7)',\r\n            minHeight: 120,\r\n            textAlign: 'left',\r\n          }}\r\n        >\r\n          <FlexContainer $direction='column'>\r\n            <span style={{ color: 'plum', marginBottom: 8 }}>{skill.name}</span>\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        {showBuyButton && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginTop: 10 }}>\r\n            <Button onClick={onBuyClick} style={{ padding: '4px 16px' }}>\r\n              Buy ({cost || 0})\r\n            </Button>\r\n          </FlexContainer>\r\n        )}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ArmorPreview } from '../ArmorPreview'\r\nimport { WeaponPreview } from '../WeaponPreview'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { ConsumablePreview } from '../ConsumablePreview'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\n\r\nexport interface ItemPreviewPropsT {\r\n  item: tWeapon | tArmor | tConsumable\r\n}\r\n\r\nexport const ItemPreivew = (props: ItemPreviewPropsT) => {\r\n  const { item } = props\r\n\r\n  if (item.itemType === 'armor') return <ArmorPreview armor={item as tArmor} />\r\n  if (item.itemType === 'weapon')\r\n    return <WeaponPreview weapon={item as tWeapon} />\r\n  if (item.itemType === 'consumable') {\r\n    return <ConsumablePreview item={item as tConsumable} />\r\n  }\r\n  return <div />\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport const Monospace = styled('span', () => ({\r\n  fontFamily: 'Inconsolata, monospace',\r\n  fontWeight: 600,\r\n}))\r\nexport const Monodiv = styled('div', () => ({\r\n  fontFamily: 'Inconsolata, monospace',\r\n  fontWeight: 600,\r\n}))\r\n","import React from 'react'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { tCharacter } from '../../game/Character/type'\r\n\r\nexport const Span = (color: string, text: JSX.Element | string) => (\r\n  <span style={{ color, fontWeight: 'bold' }}>{text}</span>\r\n)\r\nexport const SkillSpan = (skill: tSkill) => Span('plum', skill.name)\r\n\r\nexport const NameSpanBuilder = (party: tParty, enemyParty: tParty) => (\r\n  character: tCharacter,\r\n) => {\r\n  const isUserParty = character.partyId === party.id\r\n  const isEnemyParty = character.partyId === enemyParty.id\r\n  const color = isUserParty\r\n    ? 'lightgreen'\r\n    : isEnemyParty\r\n    ? 'lightsalmon'\r\n    : 'white'\r\n\r\n  return Span(color, character.name)\r\n}\r\n","import React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport { useCombatContext } from '../CombatContext'\r\nimport { Monospace } from '../../elements/monospace'\r\nimport { NameSpanBuilder, SkillSpan, Span } from './util'\r\nimport { getDamageResistance } from '../../game/Character/util'\r\nimport { STATUS_CONFIG } from '../../game/Status/constants'\r\n\r\nexport interface CombatLogContextT {\r\n  combatLog: JSX.Element[]\r\n  clear: () => void\r\n}\r\nconst defualtValue: CombatLogContextT = {\r\n  combatLog: [],\r\n  clear: () => {},\r\n}\r\nexport const CombatLogContext = createContext<CombatLogContextT>(defualtValue)\r\nexport const useCombatLogContext = () => useContext(CombatLogContext)\r\n\r\ntype DeadLogT = Record<string, boolean | undefined>\r\n\r\nexport interface CombatLogContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const CombatLogContextProvider = (\r\n  props: CombatLogContextProviderPropsT,\r\n) => {\r\n  const { children } = props\r\n  const { activeRound, roundResults, enemyParty, party } = useCombatContext()\r\n  const [combatLog, setCombatLog] = useState<JSX.Element[]>([])\r\n  const clear = () => setCombatLog([])\r\n  const [deadLog, setDeadLog] = useState<DeadLogT>({})\r\n  const NameSpan = NameSpanBuilder(party, enemyParty)\r\n  const log = (line: JSX.Element) =>\r\n    setCombatLog((log) => [\r\n      ...log,\r\n      <Monospace style={{ display: 'inline-block', fontWeight: 'normal' }}>\r\n        {line}\r\n      </Monospace>,\r\n    ])\r\n\r\n  useEffect(() => {\r\n    const characters = [...enemyParty.characters, ...party.characters]\r\n    setTimeout(() => {\r\n      characters.forEach((character) => {\r\n        if (character.health <= 0 && !deadLog[character.id]) {\r\n          setDeadLog((dLog) => ({ ...dLog, [character.id]: true }))\r\n          log(<span>{Span('lightcoral', `${character.name} died.`)}</span>)\r\n        }\r\n      })\r\n    }, 5)\r\n  }, [enemyParty, party])\r\n\r\n  useEffect(() => {\r\n    if (activeRound && activeRound) {\r\n      log(\r\n        <span>\r\n          {NameSpan(activeRound.sourceResult.source)} uses{' '}\r\n          {SkillSpan(activeRound.sourceResult.skill)}.\r\n        </span>,\r\n      )\r\n    }\r\n  }, [activeRound])\r\n\r\n  useEffect(() => {\r\n    if (roundResults.length === 0) return\r\n    const latestRounds = roundResults[roundResults.length - 1]\r\n    const baseRound = latestRounds.sourceResult\r\n    if (!baseRound) return\r\n\r\n    if (baseRound.skill.damage && baseRound.passedCount === 0) {\r\n      log(<span>{baseRound.source.name}'s attack missed.</span>)\r\n    }\r\n    if (!baseRound.skill.damage && !baseRound.perfect) {\r\n      log(<span>{SkillSpan(baseRound.skill)} failed.</span>)\r\n    }\r\n    if (baseRound.criticalHitSuccess) {\r\n      log(<span>{Span('gold', 'Critical Hit!')}</span>)\r\n    }\r\n    if (baseRound.perfect && baseRound.rollResults.length > 0) {\r\n      log(<span>{Span('gold', 'Perfect!')}</span>)\r\n    }\r\n    latestRounds.targetResults.forEach((round) => {\r\n      const targetParty = party.id === round.source.partyId ? enemyParty : party\r\n      if (round.passedCount > 0) {\r\n        if (round.dodgeSuccess) {\r\n          log(<span>{NameSpan(round.target)} dodged the attack.</span>)\r\n        } else if (round.totalDamage.value > 0) {\r\n          log(\r\n            <span>\r\n              {SkillSpan(round.skill)} deals{' '}\r\n              {Span('white', `${round.loggedDamgge.value} damage`)} to{' '}\r\n              {NameSpan(round.target)}.\r\n            </span>,\r\n          )\r\n        } else if (round.skill.damage) {\r\n          log(\r\n            <span>\r\n              {SkillSpan(round.skill)} did no damage to {NameSpan(round.target)}\r\n              .\r\n            </span>,\r\n          )\r\n        }\r\n        if (round.splashDamage.value > 0) {\r\n          targetParty.characters\r\n            .filter((c) => c.id !== round.target.id && c.health > 0)\r\n            .forEach((subTarget) => {\r\n              const splashDamageResistance = getDamageResistance(\r\n                subTarget,\r\n                round.splashDamage,\r\n              )\r\n              log(\r\n                <span>\r\n                  {SkillSpan(round.skill)} deals{' '}\r\n                  {Span(\r\n                    'white',\r\n                    `${\r\n                      round.splashDamage.value - splashDamageResistance\r\n                    } splash damage`,\r\n                  )}{' '}\r\n                  to {NameSpan(subTarget)}.\r\n                </span>,\r\n              )\r\n            })\r\n        }\r\n\r\n        if (round.reflectedDamage.value > 0) {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} reflected{' '}\r\n              {Span('white', `${round.reflectedDamage.value} damage`)}\r\n            </span>,\r\n          )\r\n        }\r\n\r\n        /* TODO\r\n        if (round.healing > 0) {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} gained{' '}\r\n              {Span('white', `${round.healing} HP`)} from{' '}\r\n              {SkillSpan(round.skill)}\r\n            </span>,\r\n          )\r\n        }\r\n        */\r\n\r\n        round.addedStatus.forEach((status) => {\r\n          const statusConfig = STATUS_CONFIG[status]\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} became {status}\r\n              {statusConfig.duration > 0\r\n                ? ` (${statusConfig.duration} turns)`\r\n                : ''}\r\n              .\r\n            </span>,\r\n          )\r\n        })\r\n      }\r\n    })\r\n  }, [roundResults.length])\r\n\r\n  return (\r\n    <CombatLogContext.Provider value={{ combatLog, clear }}>\r\n      {children}\r\n    </CombatLogContext.Provider>\r\n  )\r\n}\r\n","import React, { useMemo, useEffect, useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport Gold from '../../icons/svg/delapouite/coins.svg'\r\nimport XP from '../../icons/svg/lorc/laurel-crown.svg'\r\nimport { Icon } from '../Icon'\r\nimport { ItemPreivew } from '../ItemPreview'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { consolidateRewards } from '../../game/Other/util'\r\nimport { commitRewards } from '../../game/Party/util'\r\nimport { tEncounterReward } from '../../game/Encounter/type'\r\nimport { useCombatLogContext } from '../../contexts/CombatLogContext'\r\n\r\nexport interface CombatVictoryModalPropsT {\r\n  rewards: tEncounterReward[]\r\n}\r\n\r\nexport const CombatVictoryModal = (props: CombatVictoryModalPropsT) => {\r\n  const { rewards } = props\r\n  const { rawParty, updateParty } = usePartyContext()\r\n  const { clear } = useCombatLogContext()\r\n  const { nextLevel } = useGameStateContext()\r\n  const { close } = useModalContext()\r\n  const consolidatedRewards = useMemo(() => consolidateRewards(rewards), [\r\n    rewards,\r\n  ])\r\n\r\n  const [items, setItems] = useState(consolidatedRewards.items)\r\n  const first = items[0]\r\n  const next = () => {\r\n    if (\r\n      (items.length === 1 && consolidatedRewards.items.length > 0) ||\r\n      consolidatedRewards.items.length === 0\r\n    ) {\r\n      close()\r\n      nextLevel()\r\n    } else {\r\n      setItems((i) => {\r\n        const [first, ...rest] = i\r\n        return rest\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateParty(commitRewards(rawParty, consolidatedRewards))\r\n  }, [])\r\n\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ textAlign: 'center', minHeight: 420 }}\r\n    >\r\n      <h1>You Win!</h1>\r\n      <FlexContainer $direction='column' style={{ color: 'white' }}>\r\n        <FlexContainer style={{ marginBottom: 16 }}>\r\n          <FlexContainer>\r\n            <Icon src={Gold} size={18} style={{ marginRight: 8 }} />\r\n            <span>{consolidatedRewards.gold} Gold</span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n          <FlexContainer>\r\n            <Icon src={XP} size={18} style={{ marginRight: 8 }} />\r\n            <span>{consolidatedRewards.xp} XP</span>\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n        {first && (\r\n          <FlexContainer style={{ marginBottom: 16 }}>\r\n            <FullContainer />\r\n            <FlexContainer $direction='column'>\r\n              <ItemPreivew item={first} />\r\n              <span\r\n                style={{\r\n                  marginTop: 8,\r\n                  color: 'rgba(255,255,255,0.3)',\r\n                  fontWeight: 'bold',\r\n                  fontSize: 12,\r\n                }}\r\n              >\r\n                1 of {items.length}\r\n              </span>\r\n            </FlexContainer>\r\n            <FullContainer />\r\n          </FlexContainer>\r\n        )}\r\n      </FlexContainer>\r\n      <FullContainer />\r\n      <Button\r\n        onClick={() => {\r\n          next()\r\n        }}\r\n      >\r\n        {items.length === 0 ? 'Close' : 'Next'}\r\n      </Button>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { tEncounterReward } from '../Encounter/type'\r\nimport { ZERO_REWARD } from '../Encounter/constants'\r\n\r\nexport const consolidateRewards = (\r\n  rewards: tEncounterReward[],\r\n): tEncounterReward => {\r\n  return rewards.reduce((res, reward) => {\r\n    return {\r\n      gold: res.gold + reward.gold,\r\n      xp: res.xp + reward.xp,\r\n      items: [...res.items, ...reward.items],\r\n      status: [...res.status, ...reward.status],\r\n      immunities: [...res.immunities, ...reward.immunities],\r\n    }\r\n  }, ZERO_REWARD)\r\n}\r\n","import { tQueue } from './type'\r\nimport { tProcessedCharacter, tCharacter } from '../Character/type'\r\nimport { processCharacter } from '../Character/util'\r\n\r\nconst AGILITY_OFFSET = 120\r\n\r\nexport const makeCombatQueue = (characters: tProcessedCharacter[]): tQueue => {\r\n  const sortedCharacters = characters.sort(\r\n    (a, b) => b.stats.agility - a.stats.agility,\r\n  )\r\n  return validateQueue(\r\n    sortedCharacters.reduce(\r\n      (r, c, i) => ({\r\n        ...r,\r\n        [c.id]: AGILITY_OFFSET / 2 - c.stats.agility,\r\n      }),\r\n      {},\r\n    ),\r\n    characters,\r\n  )\r\n}\r\n\r\nexport const getMax = (queue: tQueue): number => {\r\n  return Object.keys(queue).reduce((r: number, id: string) => {\r\n    if (r < queue[id]) return queue[id]\r\n    return r\r\n  }, Number.NEGATIVE_INFINITY)\r\n}\r\n\r\nexport const getMin = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): number => {\r\n  if (characters.length === 0) throw new Error('track this call down')\r\n  return Object.keys(queue).reduce((min: number, id: string) => {\r\n    if (queue[id] < min) {\r\n      const c = characters.find((c) => c.id === id) as tProcessedCharacter\r\n      if (c.stats.queueConsolidationModifier > 0) {\r\n        return queue[id]\r\n      } else {\r\n        return min\r\n      }\r\n    }\r\n    return min\r\n  }, Number.POSITIVE_INFINITY)\r\n}\r\n\r\nexport const consolidateQueue = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  let min = getMin(queue, characters)\r\n  return Object.keys(queue).reduce((r, id) => {\r\n    const character = characters.find((c) => c.id === id) as tCharacter\r\n    const offset = character.stats.queueConsolidationModifier * min\r\n    return {\r\n      ...r,\r\n      [id]: queue[id] - offset,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const shiftQueue = (\r\n  queue: tQueue,\r\n  character: tProcessedCharacter,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  const ret = consolidateQueue(\r\n    {\r\n      ...queue,\r\n      [character.id]: AGILITY_OFFSET - character.stats.agility,\r\n    },\r\n    characters,\r\n  )\r\n  return ret\r\n}\r\n\r\nexport const getFirst = (queue: tQueue): string => {\r\n  let min = Number.POSITIVE_INFINITY\r\n  let key = Object.keys(queue)[0]\r\n  Object.keys(queue).forEach((id) => {\r\n    if (min > queue[id]) {\r\n      min = queue[id]\r\n      key = id\r\n    }\r\n  })\r\n  return key\r\n}\r\n\r\nexport const validateQueue = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  return consolidateQueue(\r\n    characters.reduce((r, c) => {\r\n      return c.health <= 0 ? r : { ...r, [c.id]: queue[c.id] }\r\n    }, {}),\r\n    characters,\r\n  )\r\n}\r\n\r\nexport const getSortedIds = (queue: tQueue): string[] => {\r\n  return Object.keys(queue).sort((a, b) => queue[a] - queue[b])\r\n}\r\n\r\nexport const commitQueueUpdates = (\r\n  queue: tQueue,\r\n  source: tProcessedCharacter,\r\n  characters: tCharacter[],\r\n): tQueue => {\r\n  const pcs = characters.map((c) => processCharacter(c))\r\n  const shiftedQueue = shiftQueue(queue, source, pcs)\r\n  const ret = validateQueue(\r\n    Object.keys(shiftedQueue).reduce((q, id) => {\r\n      const character = pcs.find((c) => c.id === id)\r\n      return {\r\n        ...q,\r\n        [id]:\r\n          character?.stats?.queueValueSet !== undefined\r\n            ? character?.stats?.queueValueSet\r\n            : shiftedQueue[id],\r\n      }\r\n    }, {}),\r\n    pcs,\r\n  )\r\n  return ret\r\n}\r\n","import { tParty } from '../Party/type'\r\nimport { tCharacter } from '../Character/type'\r\nimport { updateCharacter, getOtherCharacters } from '../Party/util'\r\nimport { tQueue } from '../Queue/type'\r\nimport { tSkillResult, tSkillCommiterResult } from './type'\r\nimport {\r\n  commitDamage,\r\n  addMultipleStatus,\r\n  decrementStatusDurations,\r\n  processCharacter,\r\n} from '../Character/util'\r\nimport { noneg } from '../../util/noneg'\r\nimport { commitQueueUpdates } from '../Queue/util'\r\nimport { PLAYER_PARTY_ID } from '../Party/constants'\r\n\r\nconst partyUpdater = (\r\n  party: tParty,\r\n  characterId: string,\r\n  updater: (c: tCharacter) => tCharacter,\r\n): tParty => {\r\n  return updateCharacter(party, characterId, updater)\r\n}\r\n\r\nexport const commitSkillResults = (\r\n  playerParty: tParty,\r\n  enemyParty: tParty,\r\n  queue: tQueue,\r\n) => (result: tSkillResult): tSkillCommiterResult => {\r\n  const { source } = result.sourceResult\r\n  result.targetResults.forEach((targetResult, index) => {\r\n    const { target } = targetResult\r\n    let sourceParty = [playerParty, enemyParty].find(\r\n      (p) => p.id === source.partyId,\r\n    ) as tParty\r\n    let targetParty = [playerParty, enemyParty].find(\r\n      (p) => p.id === target.partyId,\r\n    ) as tParty\r\n    const localUpdate = (\r\n      p: tParty,\r\n      id: string,\r\n      updater: (c: tCharacter) => tCharacter,\r\n    ) => {\r\n      if (p.id === sourceParty.id) {\r\n        sourceParty = partyUpdater(p, id, updater)\r\n        return\r\n      }\r\n      if (p.id === targetParty.id) {\r\n        targetParty = partyUpdater(p, id, updater)\r\n        return\r\n      }\r\n      throw new Error('bad party id')\r\n    }\r\n\r\n    if (index === 0 && targetResult.weaponDidBreak) {\r\n      localUpdate(sourceParty, source.id, (c) => {\r\n        return {\r\n          ...c,\r\n          weapon: undefined,\r\n        }\r\n      })\r\n    }\r\n\r\n    // commit main damage\r\n    localUpdate(targetParty, target.id, (c) => {\r\n      return commitDamage(\r\n        c,\r\n        targetResult.totalDamage,\r\n        targetResult.ignoreResistance,\r\n      )\r\n    })\r\n\r\n    // commit main status\r\n    localUpdate(targetParty, target.id, (c) => {\r\n      return addMultipleStatus(c, targetResult.addedStatus)\r\n    })\r\n\r\n    // comit main heal\r\n    if (targetResult.skill.healing) {\r\n      localUpdate(targetParty, target.id, (c) => {\r\n        return {\r\n          ...c,\r\n          healthOffset: c.healthOffset - c.stats.consumableHealthGainOffset,\r\n          consumables: c.consumables.filter(\r\n            (i) => i.id !== targetResult.skill.consumableId,\r\n          ),\r\n        }\r\n      })\r\n    }\r\n\r\n    // commit splash damage\r\n    if (targetResult.splashDamage.value > 0) {\r\n      getOtherCharacters(targetParty, target.id).forEach((character) => {\r\n        localUpdate(targetParty, character.id, (c) => {\r\n          return commitDamage(c, targetResult.splashDamage, false)\r\n        })\r\n      })\r\n    }\r\n\r\n    // commit reflected damage\r\n    if (targetResult.reflectedDamage.value > 0) {\r\n      localUpdate(sourceParty, source.id, (c) => {\r\n        return commitDamage(c, targetResult.reflectedDamage, false)\r\n      })\r\n    }\r\n\r\n    // commet end-of-round actions\r\n    if (index === result.targetResults.length - 1) {\r\n      // source health regen\r\n      localUpdate(sourceParty, source.id, (c) => {\r\n        const pc = processCharacter(c)\r\n        return {\r\n          ...c,\r\n          healthOffset: noneg(c.healthOffset - pc.stats.healthRegeneration),\r\n        }\r\n      })\r\n    }\r\n\r\n    if (sourceParty.id === PLAYER_PARTY_ID) {\r\n      playerParty = sourceParty\r\n    } else {\r\n      enemyParty = sourceParty\r\n    }\r\n    if (targetParty.id === PLAYER_PARTY_ID) {\r\n      if (sourceParty.id !== targetParty.id) {\r\n        playerParty = targetParty\r\n      }\r\n    } else {\r\n      enemyParty = targetParty\r\n    }\r\n  })\r\n\r\n  return {\r\n    playerParty: {\r\n      ...playerParty,\r\n      characters: playerParty.characters.map((c) =>\r\n        decrementStatusDurations(c),\r\n      ),\r\n    },\r\n    enemyParty: {\r\n      ...enemyParty,\r\n      characters: enemyParty.characters.map((c) => decrementStatusDurations(c)),\r\n    },\r\n    queue: commitQueueUpdates(queue, source, [\r\n      ...playerParty.characters,\r\n      ...enemyParty.characters,\r\n    ]),\r\n  }\r\n}\r\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n} from 'react'\r\nimport { usePartyContext } from '../PartyContext'\r\nimport { v4 } from 'uuid'\r\nimport { useHistory } from 'react-router'\r\nimport { useModalContext } from '../ModalContext'\r\nimport { CombatVictoryModal } from '../../components/CombatVictoryModal'\r\nimport { tProcessedParty, tParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tSkill, tSkillResult, tSkillTarget } from '../../game/Skill/type'\r\nimport { tQueue } from '../../game/Queue/type'\r\nimport {\r\n  processParty,\r\n  makeParty,\r\n  getRolledRewards,\r\n} from '../../game/Party/util'\r\nimport {\r\n  processCharacter,\r\n  makeCharacter,\r\n  removeTemporaryStatus,\r\n} from '../../game/Character/util'\r\nimport { makeCombatQueue, getFirst, shiftQueue } from '../../game/Queue/util'\r\nimport {\r\n  makeSkillTarget,\r\n  resolveSkillTarget,\r\n  getSkillResult,\r\n} from '../../game/Skill/util'\r\nimport { commitSkillResults } from '../../game/Skill/committer'\r\nimport { getAIAction } from '../../game/AI/util'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\n\r\nexport interface CombatContextT {\r\n  party: tProcessedParty\r\n  enemyParty: tProcessedParty\r\n  activeCharacter: tProcessedCharacter\r\n  characters: tProcessedCharacter[]\r\n  queue: tQueue\r\n  selectedSkill: tSkill | undefined\r\n  selectedTargets: tProcessedCharacter[]\r\n  selectedConsumableIndex: number | undefined\r\n  roundResults: tSkillResult[]\r\n  activeRound: tSkillResult | undefined\r\n  isRunning: boolean\r\n  isRenderingResult: boolean\r\n  onSkillSelect: (skill: tSkill, consumableIndex?: number) => void\r\n  onTargetsSelect: (target: tProcessedCharacter | tProcessedParty) => void\r\n  onConsumableSelect: (consumableIndex: number | undefined) => void\r\n  reset: () => void\r\n  start: () => void\r\n  next: (nextTarget?: tProcessedCharacter | tProcessedParty) => void\r\n  commit: () => void\r\n  equipItemCombat: (characterId: string, item?: tArmor | tWeapon) => void\r\n}\r\nconst defaultValue: CombatContextT = {\r\n  party: processParty(makeParty(0, 0)),\r\n  enemyParty: processParty(makeParty(0, 0)),\r\n  activeCharacter: processCharacter(makeCharacter('executioner')),\r\n  characters: [],\r\n  queue: {},\r\n  selectedSkill: undefined,\r\n  selectedTargets: [],\r\n  selectedConsumableIndex: undefined,\r\n  roundResults: [],\r\n  activeRound: undefined,\r\n  isRunning: false,\r\n  isRenderingResult: false,\r\n  onSkillSelect: (skill: tSkill) => {},\r\n  onTargetsSelect: (target: tProcessedCharacter | tProcessedParty) => {},\r\n  onConsumableSelect: (consumableIndex) => {},\r\n  reset: () => {},\r\n  start: () => {},\r\n  next: () => {},\r\n  commit: () => {},\r\n  equipItemCombat: (characterId, item) => {},\r\n}\r\nexport const CombatContext = createContext<CombatContextT>(defaultValue)\r\nexport const useCombatContext = () => useContext(CombatContext)\r\n\r\nexport interface CombatContextProviderPropsT {\r\n  children: JSX.Element\r\n  enemyParty: tParty\r\n  setEnemyParty: (party: tParty) => void\r\n  onRequestNewParty: () => void\r\n}\r\nexport const CombatContextProvider = (props: CombatContextProviderPropsT) => {\r\n  const { children, setEnemyParty, onRequestNewParty } = props\r\n  const { party, rawParty, updateParty, equipItem } = usePartyContext()\r\n  const { open } = useModalContext()\r\n  const history = useHistory()\r\n  const enemyParty = useMemo(() => {\r\n    return processParty(props.enemyParty)\r\n  }, [props.enemyParty])\r\n  const [isRunning, setIsRunning] = useState<boolean>(false)\r\n  const [isRenderingResult, setIsRenderingResult] = useState<boolean>(false)\r\n  const characters = useMemo(\r\n    () => [...party.characters, ...enemyParty.characters],\r\n    [party, enemyParty],\r\n  )\r\n  const [queue, setQueue] = useState<tQueue>(\r\n    makeCombatQueue([...party.characters, ...enemyParty.characters]),\r\n  )\r\n  const resultCommitter = useMemo(\r\n    () => commitSkillResults(rawParty, props.enemyParty, queue),\r\n    [rawParty, props.enemyParty, queue],\r\n  )\r\n  const [roundId, setRoundId] = useState<string>(v4())\r\n  const [roundResults, setRoundResults] = useState<tSkillResult[]>([])\r\n  const [activeRound, setActiveRound] = useState<tSkillResult | undefined>()\r\n  const [selectedTarget, setSelectedTarget] = useState<\r\n    tSkillTarget | undefined\r\n  >()\r\n  const [selectedSkill, setSelectedSkill] = useState<tSkill | undefined>()\r\n  const [selectedConsumableIndex, setSelectedConsumableIndex] = useState<\r\n    number | undefined\r\n  >()\r\n  const activeCharacter = useMemo(\r\n    () =>\r\n      characters.find(\r\n        (c) => c.health > 0 && c.id === getFirst(queue),\r\n      ) as tProcessedCharacter,\r\n    [queue, characters],\r\n  )\r\n\r\n  const start = () => {\r\n    setIsRunning(true)\r\n    setQueue(makeCombatQueue([...party.characters, ...enemyParty.characters]))\r\n    setRoundId(v4())\r\n    setActiveRound(undefined)\r\n    setIsRenderingResult(false)\r\n  }\r\n\r\n  const reset = () => {\r\n    onRequestNewParty()\r\n    setIsRunning(false)\r\n    setActiveRound(undefined)\r\n    setSelectedSkill(undefined)\r\n    setSelectedTarget(undefined)\r\n    setSelectedConsumableIndex(undefined)\r\n    setIsRenderingResult(false)\r\n    setRoundResults([])\r\n    setQueue({})\r\n  }\r\n\r\n  const equipItemCombat = (characterId: string, item?: tArmor | tWeapon) => {\r\n    if (item) {\r\n      equipItem(activeCharacter.id, item)\r\n    }\r\n    setQueue((q) =>\r\n      shiftQueue(q, activeCharacter, [\r\n        ...party.characters,\r\n        ...enemyParty.characters,\r\n      ]),\r\n    )\r\n    completeRound()\r\n  }\r\n\r\n  const next = (nextTarget?: tProcessedCharacter | tProcessedParty) => {\r\n    if (selectedSkill) {\r\n      const roundTarget = nextTarget\r\n        ? makeSkillTarget(selectedSkill.targetType, nextTarget)\r\n        : selectedTarget\r\n      if (!selectedSkill || !roundTarget) return\r\n      const results = getSkillResult(\r\n        activeCharacter,\r\n        resolveSkillTarget(roundTarget).filter((c) => c.health > 0),\r\n        selectedSkill,\r\n      )\r\n      setActiveRound(results)\r\n      setSelectedSkill(undefined)\r\n      setSelectedTarget(undefined)\r\n      setSelectedConsumableIndex(undefined)\r\n      setIsRenderingResult(true)\r\n    }\r\n  }\r\n\r\n  const onSkillSelect = (skill: tSkill, consumableIndex?: number) => {\r\n    setSelectedSkill(skill)\r\n    if (consumableIndex !== undefined) {\r\n      setSelectedConsumableIndex(consumableIndex)\r\n    }\r\n    if (skill.targetType !== selectedSkill?.targetType) {\r\n      setSelectedTarget(undefined)\r\n    }\r\n  }\r\n\r\n  const onTargetsSelect = (target: tProcessedCharacter | tProcessedParty) => {\r\n    if (!selectedSkill) return\r\n    setSelectedTarget(makeSkillTarget(selectedSkill.targetType, target))\r\n  }\r\n\r\n  const completeRound = () => {\r\n    setRoundId(v4())\r\n    setActiveRound(undefined)\r\n    setIsRenderingResult(false)\r\n  }\r\n\r\n  const commit = useCallback(() => {\r\n    if (!activeRound) return\r\n    const result = resultCommitter(activeRound)\r\n    setRoundResults((r) => [...r, activeRound])\r\n    setEnemyParty(result.enemyParty)\r\n    updateParty(result.playerParty)\r\n    setQueue(result.queue)\r\n\r\n    completeRound()\r\n  }, [activeRound, queue])\r\n\r\n  const execEnemyTurn = (skill: tSkill, target: tSkillTarget) => {\r\n    const result = getSkillResult(\r\n      activeCharacter,\r\n      resolveSkillTarget(target),\r\n      skill,\r\n    )\r\n    setActiveRound(result)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activeCharacter && isRunning) {\r\n      if (activeCharacter.partyId === enemyParty.id) {\r\n        const { skill, target } = getAIAction(\r\n          activeCharacter,\r\n          party,\r\n          enemyParty,\r\n        )\r\n        execEnemyTurn(skill, makeSkillTarget(skill.targetType, target))\r\n      } else {\r\n        setSelectedSkill(activeCharacter.skills[0])\r\n      }\r\n    }\r\n  }, [roundId])\r\n\r\n  useEffect(() => {\r\n    if (!isRunning) return\r\n    if (enemyParty.characters.every((c) => c.health <= 0)) {\r\n      setIsRunning(false)\r\n      const rewards = getRolledRewards(\r\n        enemyParty,\r\n        party.characters.reduce((p, c) =>\r\n          p.stats.luck > c.stats.luck ? p : c,\r\n        ),\r\n      )\r\n      updateParty({\r\n        ...rawParty,\r\n        characters: rawParty.characters.map((c) => removeTemporaryStatus(c)),\r\n      })\r\n      open(<CombatVictoryModal rewards={rewards} />, {}, true)\r\n      return\r\n    }\r\n    if (party.characters.every((c) => c.health <= 0)) {\r\n      setIsRunning(false)\r\n      alert('you lose')\r\n      history.push('/JSFTK_combat/')\r\n      return\r\n    }\r\n  }, [party, enemyParty])\r\n\r\n  return (\r\n    <CombatContext.Provider\r\n      value={{\r\n        party,\r\n        enemyParty,\r\n        characters,\r\n        queue,\r\n        activeCharacter,\r\n        activeRound,\r\n        selectedSkill,\r\n        selectedTargets: selectedTarget\r\n          ? resolveSkillTarget(selectedTarget)\r\n          : [],\r\n        selectedConsumableIndex,\r\n        roundResults,\r\n        isRunning,\r\n        isRenderingResult,\r\n        onSkillSelect,\r\n        onTargetsSelect,\r\n        onConsumableSelect: setSelectedConsumableIndex,\r\n        start,\r\n        next,\r\n        commit,\r\n        reset,\r\n        equipItemCombat,\r\n      }}\r\n    >\r\n      {children}\r\n    </CombatContext.Provider>\r\n  )\r\n}\r\n","import { tSkill } from '../Skill/type'\r\nimport { tProcessedCharacter } from '../Character/type'\r\nimport { tProcessedParty } from '../Party/type'\r\nimport { getRandom } from '../../util'\r\nimport { getSkillTargetOptions } from '../Skill/util'\r\n\r\nexport interface tAIAction {\r\n  skill: tSkill\r\n  target: tProcessedCharacter | tProcessedParty\r\n}\r\nexport const getAIAction = (\r\n  source: tProcessedCharacter,\r\n  playerParty: tProcessedParty,\r\n  enemyParty: tProcessedParty,\r\n): tAIAction => {\r\n  const skill = getRandom(source.skills)\r\n  const targetedCharacters = playerParty.characters.filter(\r\n    (c) => c.status.map((t) => t.type).includes('targeted') && c.health > 0,\r\n  )\r\n  const target =\r\n    skill.targetType === 'single'\r\n      ? targetedCharacters.length > 0\r\n        ? getRandom(targetedCharacters)\r\n        : getRandom(playerParty.characters.filter((c) => c.health > 0))\r\n      : getRandom<tProcessedParty | tProcessedCharacter>(\r\n          getSkillTargetOptions(source, enemyParty, playerParty, skill),\r\n        )\r\n\r\n  return { skill, target }\r\n}\r\n","import React from 'react'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface PerfectPropsT {\r\n  show: boolean | undefined\r\n  partyId: string\r\n}\r\nexport const Perfect = (props: PerfectPropsT) => {\r\n  const { show, partyId } = props\r\n  const style = useSpring({ opacity: show ? 1 : 0 })\r\n  return show ? (\r\n    <animated.div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: 16,\r\n        fontSize: 42,\r\n        color: partyId === PLAYER_PARTY_ID ? 'rgba(255,255,255,1)' : '#c95738',\r\n        textShadow: '4px 4px 4px black',\r\n        fontFamily: Theme.titleFont,\r\n        ...style,\r\n      }}\r\n    >\r\n      Perfect!\r\n    </animated.div>\r\n  ) : null\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport Kefir from 'kefir'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport Color from 'color'\r\nimport { Perfect } from './Perfect'\r\nimport { Theme } from '../../theme'\r\nimport { CHARACTER_CLASS_COLORS } from '../../game/Character/constants'\r\n\r\nexport interface RoundResultRendererPropsT {\r\n  isModal?: boolean\r\n}\r\nexport const RoundResultRenderer = (props: RoundResultRendererPropsT) => {\r\n  const { isModal = true } = props\r\n  const { activeRound, isRunning, commit } = useCombatContext()\r\n  const { open, close } = useModalContext()\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (activeRound && !isOpen && isRunning) {\r\n      setIsOpen(true)\r\n      if (isModal) {\r\n        open(\r\n          <RoundResult\r\n            close={() => {\r\n              close(true)\r\n              setIsOpen(false)\r\n              commit()\r\n            }}\r\n          />,\r\n          {\r\n            overlay: {\r\n              background: 'transparent',\r\n            },\r\n          },\r\n          true,\r\n        )\r\n      }\r\n    }\r\n  }, [isRunning, isModal, isOpen, activeRound, open, close, commit])\r\n\r\n  if (!isModal && activeRound && isRunning) {\r\n    return (\r\n      <FlexContainer style={{ height: 269 }}>\r\n        <RoundResult\r\n          close={() => {\r\n            setIsOpen(false)\r\n            commit()\r\n          }}\r\n        />\r\n      </FlexContainer>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport interface RoundResultPropsT {\r\n  close: () => void\r\n}\r\nexport interface CheckKVT {\r\n  label: string\r\n  result: boolean | undefined\r\n}\r\nexport const RoundResult = (props: RoundResultPropsT) => {\r\n  const { close } = props\r\n  const { activeRound } = useCombatContext()\r\n  const [isDone, setIsDone] = useState(false)\r\n  const round = activeRound?.sourceResult\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n  const [roundResults, setRoundResults] = useState<CheckKVT[]>(\r\n    !round\r\n      ? []\r\n      : round.rollResults.map((result, i) => ({\r\n          label: round.skill.weaponStatOverride || round.source.weapon.stat,\r\n          result: undefined,\r\n        })),\r\n  )\r\n\r\n  const updateRoundResult = (value: CheckKVT, index: number) => {\r\n    setActiveIndex(index)\r\n    setRoundResults((r) => r.map((r, i) => (i === index ? value : r)))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!round) return\r\n    const stream = Kefir.sequentially(\r\n      200,\r\n      roundResults.map((r, i) => ({ ...r, index: i })),\r\n    )\r\n    stream.onValue((result) => {\r\n      updateRoundResult(\r\n        {\r\n          label: result.label,\r\n          result: round.rollResults[result.index],\r\n        },\r\n        result.index,\r\n      )\r\n    })\r\n    stream.onEnd(() => {\r\n      Kefir.later(round.perfect ? 1200 : 900, undefined).onValue(() => {\r\n        setIsDone(true)\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (isDone) {\r\n      close()\r\n    }\r\n  }, [isDone, close])\r\n\r\n  const showPerfect = activeIndex === roundResults.length - 1 && round?.perfect\r\n  const isPlayer = (partyId: string) => partyId === PLAYER_PARTY_ID\r\n  const targetResult = activeRound?.targetResults[0]\r\n  const showTarget =\r\n    round && targetResult && targetResult.target.id !== round.source.id\r\n  if (!round) return null\r\n  const color = Color(\r\n    CHARACTER_CLASS_COLORS[targetResult?.target?.class || 'enemy'],\r\n  )\r\n    .lighten(0.5)\r\n    //.saturate(2)\r\n    .hex()\r\n    .toString()\r\n  return (\r\n    <FlexContainer $direction='column' style={{ textAlign: 'center' }}>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        {roundResults.map((result, i) => (\r\n          <SkillCheck\r\n            key={i}\r\n            check={result}\r\n            perfect={showPerfect}\r\n            skill={round.skill}\r\n            crit={round.criticalHitSuccess}\r\n          />\r\n        ))}\r\n      </FlexContainer>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        <div\r\n          style={{\r\n            marginTop: 24,\r\n            //background: Theme.darkBgColor,\r\n            fontSize: 32,\r\n            padding: '16px 32px',\r\n            color: 'rgba(255,255,255,0.8)',\r\n            //fontWeight: 'bolder',\r\n            textShadow: '1px 1px 1px black',\r\n          }}\r\n        >\r\n          <strong\r\n            style={{\r\n              fontWeight: 'bold',\r\n              color: isPlayer(round.source.partyId)\r\n                ? Color(CHARACTER_CLASS_COLORS[round.source.class])\r\n                    .lighten(1)\r\n                    //.saturate(1)\r\n                    .hex()\r\n                    .toString()\r\n                : Theme.enemyPartyColor,\r\n            }}\r\n          >\r\n            {round.source.name}\r\n          </strong>{' '}\r\n          uses{' '}\r\n          <span style={{ color: 'rgba(255,255,255,0.9)', fontWeight: 'bold' }}>\r\n            {round.skill.name}\r\n          </span>\r\n          {showTarget && (\r\n            <span>\r\n              {' on '}\r\n              <strong\r\n                style={{\r\n                  fontWeight: 'bold',\r\n                  color: isPlayer(targetResult?.target.partyId || '')\r\n                    ? color\r\n                    : Theme.enemyPartyColor,\r\n                }}\r\n              >\r\n                {targetResult?.target.name}\r\n              </strong>\r\n            </span>\r\n          )}\r\n        </div>\r\n      </FlexContainer>\r\n      <Perfect show={showPerfect} partyId={round.source.partyId} />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { tStats } from '../../game/Stats/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { STAT_BONUS_KEYS } from '../../game/Stats/constants'\r\n\r\nconst getStatColor = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tStats,\r\n): string => {\r\n  const a = character.stats[key]\r\n  const b = character.rawStats[key]\r\n  if (a === undefined || b === undefined) return 'rgba(255,255,255,0.6)'\r\n  if (a > b) return 'lightgreen'\r\n  if (b > a) return 'lightcoral'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n\r\nexport interface StatBarPropsT {\r\n  character: tProcessedCharacter\r\n}\r\nexport const StatBar = (props: StatBarPropsT) => {\r\n  const { character } = props\r\n\r\n  return (\r\n    <BoxContainer>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-between',\r\n          width: 360,\r\n          paddingTop: 10,\r\n          paddingBottom: 6,\r\n        }}\r\n      >\r\n        {STAT_BONUS_KEYS.map((key) => (\r\n          <FlexContainer\r\n            key={key}\r\n            style={{\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Icon\r\n              src={STAT_ICONS[key] || ''}\r\n              size={20}\r\n              fill={getStatColor(character, key)}\r\n              style={{ marginRight: 4 }}\r\n            />\r\n            <span style={{ color: getStatColor(character, key) }}>\r\n              {character.stats[key]}\r\n            </span>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\n\r\nexport interface UIContextT {\r\n  playerCanEquipItem: boolean\r\n  openCharacterInventoryId: string | undefined\r\n  showSkillTooltips: boolean\r\n  onCharacterConsumableClick: (\r\n    c: tProcessedCharacter,\r\n    index: number,\r\n    item: tConsumable,\r\n  ) => void\r\n  setPlayerCanEquipItem: (v: boolean) => void\r\n  setOpenCharacterInventoryId: (id: string | undefined) => void\r\n  setOnCharacterConsumableClick: (\r\n    fn: (c: tProcessedCharacter, index: number, item: tConsumable) => void,\r\n  ) => void\r\n  setShowSkillTooltips: (v: boolean) => void\r\n}\r\n\r\nconst defaultValue: UIContextT = {\r\n  playerCanEquipItem: false,\r\n  openCharacterInventoryId: undefined,\r\n  showSkillTooltips: false,\r\n  onCharacterConsumableClick: (c, i, item) => {},\r\n  setPlayerCanEquipItem: (v) => {},\r\n  setOpenCharacterInventoryId: (id) => {},\r\n  setOnCharacterConsumableClick: (fn) => {},\r\n  setShowSkillTooltips: (v) => {},\r\n}\r\n\r\nexport const UIContext = React.createContext<UIContextT>(defaultValue)\r\nexport const useUIContext = () => useContext(UIContext)\r\n\r\nexport interface UIContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const UIContextProvider = (props: UIContextProviderPropsT) => {\r\n  const { children } = props\r\n  const [playerCanEquipItem, setPlayerCanEquipItem] = useState(false)\r\n  const [showSkillTooltips, setShowSkillTooltips] = useState(true)\r\n  const [openCharacterInventoryId, setOpenCharacterInventoryId] = useState<\r\n    string | undefined\r\n  >()\r\n  const [onCharacterConsumableClick, _setOnCharacterConsumableClick] = useState<\r\n    (c: tProcessedCharacter, i: number, item: tConsumable) => void\r\n  >((c, i, item) => {})\r\n\r\n  const setOnCharacterConsumableClick = (\r\n    fn: (c: tProcessedCharacter, index: number, item: tConsumable) => void,\r\n  ) => {\r\n    _setOnCharacterConsumableClick(() => fn)\r\n  }\r\n  return (\r\n    <UIContext.Provider\r\n      value={{\r\n        playerCanEquipItem,\r\n        openCharacterInventoryId,\r\n        showSkillTooltips,\r\n        onCharacterConsumableClick,\r\n        setPlayerCanEquipItem,\r\n        setOpenCharacterInventoryId,\r\n        setOnCharacterConsumableClick,\r\n        setShowSkillTooltips,\r\n      }}\r\n    >\r\n      {children}\r\n    </UIContext.Provider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { RESOURCE_ICONS, WEAPON_TYPE_ICONS } from '../../icons/maps'\r\nimport { styled } from 'styletron-react'\r\nimport { ClickToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Button } from '../../elements/button'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tArmor, tArmorResourceType } from '../../game/Armor/type'\r\nimport {\r\n  CHARACTER_RESOURCES,\r\n  ITEM_RARITY_COLORS,\r\n} from '../../game/Item/constants'\r\nimport { Theme } from '../../theme'\r\n\r\nconst ItemRow = styled(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    marginBottom: '4px',\r\n    textShadow: '1px 1px 1px black',\r\n    background: props.$disabled\r\n      ? 'rgba(255,255,255,0.05)'\r\n      : 'linear-gradient(90deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 100%)',\r\n    paddingLeft: '8px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n  }\r\n})\r\n\r\nexport interface ItemPropsT {\r\n  character: tProcessedCharacter\r\n  setActiveItem: (item: tWeapon | tArmor | undefined) => void\r\n}\r\nexport const Items = (props: ItemPropsT) => {\r\n  const { character, setActiveItem } = props\r\n  const { playerCanEquipItem } = useUIContext()\r\n  return (\r\n    <FlexContainer $full $direction='column'>\r\n      <Item\r\n        disabled={false}\r\n        character={character}\r\n        resource={'weapon'}\r\n        onHover={setActiveItem}\r\n        canUnequip={playerCanEquipItem}\r\n      />\r\n      {CHARACTER_RESOURCES.map((res) => {\r\n        const disabled = res === 'offhand' && character.weapon.twoHand\r\n        return (\r\n          <Item\r\n            key={res}\r\n            disabled={disabled}\r\n            character={character}\r\n            resource={res}\r\n            onHover={setActiveItem}\r\n            canUnequip={playerCanEquipItem}\r\n          />\r\n        )\r\n      })}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface ItemProps {\r\n  character: tProcessedCharacter\r\n  resource: tArmorResourceType | 'weapon'\r\n  canUnequip?: boolean\r\n  disabled?: boolean\r\n  onHover: (item: tArmor | tWeapon | undefined) => void\r\n}\r\nexport const Item = (props: ItemProps) => {\r\n  const {\r\n    character,\r\n    resource,\r\n    canUnequip = true,\r\n    disabled = false,\r\n    onHover,\r\n  } = props\r\n  const { unequipItem } = usePartyContext()\r\n  const item =\r\n    resource === 'weapon'\r\n      ? character.weapon\r\n      : character.armor.find((a) => a.resource === resource)\r\n  return (\r\n    <ClickToolTip\r\n      direction='down'\r\n      distance={-2}\r\n      content={() => (\r\n        <>\r\n          {canUnequip && (\r\n            <BoxContainer\r\n              substyle={{\r\n                padding: 4,\r\n                width: 190,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                background: Theme.otherGrey,\r\n              }}\r\n            >\r\n              <Button\r\n                style={{ padding: '4px 8px' }}\r\n                onClick={() => {\r\n                  if (item) {\r\n                    if (resource === 'weapon') {\r\n                    } else {\r\n                      unequipItem(character.id, item)\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                Unequip\r\n              </Button>\r\n              <Button style={{ padding: '4px 8px' }}>Cancel</Button>\r\n            </BoxContainer>\r\n          )}\r\n        </>\r\n      )}\r\n    >\r\n      {({ onClick, ref }) => (\r\n        <ItemRow\r\n          ref={ref}\r\n          $disabled={disabled}\r\n          onMouseEnter={() => onHover(item)}\r\n          onClick={() => {\r\n            if (item) onClick()\r\n          }}\r\n          style={{\r\n            color: ITEM_RARITY_COLORS[item?.rarity || 'common'],\r\n          }}\r\n        >\r\n          <Icon\r\n            src={\r\n              resource === 'weapon'\r\n                ? WEAPON_TYPE_ICONS[(item as tWeapon)?.type || 'fist']\r\n                : RESOURCE_ICONS[resource] || ''\r\n            }\r\n            size={16}\r\n            fill={disabled ? 'rgba(255,255,255,0.3)' : 'white'}\r\n            style={{ marginRight: 6 }}\r\n          />\r\n          {item?.name}\r\n        </ItemRow>\r\n      )}\r\n    </ClickToolTip>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface NamePropsT {\r\n  name: string\r\n}\r\n\r\nexport const Name = (props: NamePropsT) => {\r\n  const { name } = props\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        width: '100%',\r\n        height: 40,\r\n        marginBottom: -20,\r\n        marginTop: -20,\r\n      }}\r\n    >\r\n      <FullContainer />\r\n      <BoxContainer\r\n        style={{ zIndex: 2 }}\r\n        substyle={{ background: Theme.darkBgColor }}\r\n      >\r\n        {name}\r\n      </BoxContainer>\r\n      <FullContainer />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { CHARACTER_CLASS_COLORS } from '../../game/Character/constants'\r\nimport { tCharacter } from '../../game/Character/type'\r\nimport { Icon } from '../Icon'\r\nimport { CHARACTER_CLASS_ICONS } from '../../icons/maps'\r\n\r\nexport interface CharacterIconPropsT {\r\n  character: tCharacter\r\n  size: number\r\n  height?: number\r\n  width?: number\r\n  index?: number\r\n  style?: CSSProperties\r\n  iconStyle?: CSSProperties\r\n}\r\nexport const CharacterIcon = (props: CharacterIconPropsT) => {\r\n  const { character, size, height, width, index, style, iconStyle } = props\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        background: CHARACTER_CLASS_COLORS[character.class],\r\n        border: '2px solid rgba(255,255,255,0.8)',\r\n        height: height || size - 10,\r\n        width: width || size - 7,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        overflow: 'hidden',\r\n        ...(style || {}),\r\n      }}\r\n    >\r\n      <Icon\r\n        src={character.icon || CHARACTER_CLASS_ICONS[character.class]}\r\n        shadow\r\n        fill={'white'}\r\n        size={size - 7}\r\n        style={{\r\n          zIndex: index || 1,\r\n          position: 'relative',\r\n          ...(iconStyle || {}),\r\n        }}\r\n      />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { CharacterIcon } from '../CharacterIcon'\r\n\r\nexport interface ImagePropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Image = (props: ImagePropsT) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n      <div>\r\n        <FlexContainer style={{ marginRight: 20, marginBottom: 10 }}>\r\n          <CharacterIcon character={character} size={100} />\r\n        </FlexContainer>\r\n      </div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { FlexContainer } from '../../elements/flex'\r\nimport { withStyle } from 'styletron-react'\r\nimport { Theme } from '../../theme'\r\n\r\nexport const Row = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    textShadow: '1px 1px 1px black',\r\n    background: props.$active ? 'rgba(255,255,255,0.2)' : undefined,\r\n    paddingLeft: '8px',\r\n    paddingTop: '2px',\r\n    paddingBottom: '2px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    cursor: 'pointer',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n    textTransform: 'capitalize',\r\n  }\r\n})\r\nexport const ActionsRow = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    padding: '4px',\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    borderTop: '1px solid black',\r\n    borderBottom: '1px solid black',\r\n    background: Theme.otherGrey,\r\n  }\r\n})\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { condenseListToStack } from '.'\r\nimport { WEAPON_TYPE_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Row, ActionsRow } from './elements'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\n\r\nexport interface WeaponListPropsT {\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n  setActiveItem: (item: tWeapon | tArmor) => void\r\n  onEquipItem?: (characterId: string, item: tWeapon | tArmor) => void\r\n}\r\n\r\nexport const WeaponList = (props: WeaponListPropsT) => {\r\n  const { character, canEquip, setActiveItem, onEquipItem } = props\r\n  const { party, sellItem, equipItem } = usePartyContext()\r\n  const [activeItemId, setActiveItemId] = useState<string | undefined>()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {condenseListToStack(\r\n        party.items\r\n          .filter((i) => i.itemType === 'weapon')\r\n          .map((i) => i as tArmor)\r\n          .sort((a, b) => a.name.localeCompare(b.name)),\r\n      ).map(({ item, count }) => {\r\n        const weapon = item as tWeapon\r\n        return (\r\n          <FlexContainer $direction='column' key={weapon.id}>\r\n            <Row\r\n              $active={weapon.id === activeItemId}\r\n              onMouseEnter={() => setActiveItem(weapon)}\r\n              onClick={(e: MouseEvent) => {\r\n                e.stopPropagation()\r\n                e.preventDefault()\r\n                setActiveItemId(weapon.id)\r\n              }}\r\n            >\r\n              <div style={{ width: 24 }}>\r\n                <Icon\r\n                  src={WEAPON_TYPE_ICONS[weapon.type || 'fist']}\r\n                  size={16}\r\n                  fill={ITEM_RARITY_COLORS[weapon.rarity]}\r\n                  style={{ marginRight: 6 }}\r\n                />\r\n              </div>\r\n              <span style={{ color: ITEM_RARITY_COLORS[weapon.rarity] }}>\r\n                {count} {weapon.name}\r\n              </span>\r\n            </Row>\r\n            {canEquip && activeItemId === weapon.id && (\r\n              <ActionsRow>\r\n                <Button\r\n                  style={{ padding: '4px 8px', marginRight: 10 }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    if (onEquipItem) {\r\n                      onEquipItem(character.id, weapon)\r\n                    } else {\r\n                      equipItem(character.id, weapon)\r\n                    }\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Equip\r\n                </Button>\r\n                <FullContainer />\r\n                <Button\r\n                  style={{ padding: '4px 8px', marginRight: 10 }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    sellItem(item.id)\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Sell Item ({item.goldValue})\r\n                </Button>\r\n                <Button\r\n                  style={{ padding: '4px 8px' }}\r\n                  onClick={() => {\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </ActionsRow>\r\n            )}\r\n          </FlexContainer>\r\n        )\r\n      })}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport Weapons from '../../icons/svg/lorc/broadsword.svg'\r\nimport Armor from '../../icons/svg/delapouite/leather-armor.svg'\r\nimport { ArmorList } from './ArmorList'\r\nimport { WeaponList } from './WeaponList'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface MenuOptionT {\r\n  key: string\r\n  icon: string\r\n  count: (character: tProcessedCharacter, party: tProcessedParty) => number\r\n  render: (\r\n    character: tProcessedCharacter,\r\n    canEquip: boolean,\r\n    setActiveItem: (item: tWeapon | tArmor) => void,\r\n  ) => JSX.Element\r\n}\r\nexport const ACTIVE_CHARACTER_MENU_KEYS: MenuOptionT[] = [\r\n  /*{\r\n    key: 'items',\r\n    icon: Items,\r\n    count: (c) => c.consumables.length,\r\n    render: (character) => <div>items</div>,\r\n  }, */\r\n  {\r\n    key: 'weapons',\r\n    icon: Weapons,\r\n    count: (c, p) => p.items.filter((i) => i.itemType === 'weapon').length,\r\n    render: (character, canEquip, setActiveItem) => (\r\n      <WeaponList\r\n        character={character}\r\n        canEquip={canEquip}\r\n        setActiveItem={setActiveItem}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    key: 'armor',\r\n    icon: Armor,\r\n    count: (c, p) => p.items.filter((i) => i.itemType === 'armor').length,\r\n    render: (character, canEquip, setActiveItem) => (\r\n      <ArmorList\r\n        character={character}\r\n        canEquip={canEquip}\r\n        setActiveItem={setActiveItem}\r\n      />\r\n    ),\r\n  },\r\n]\r\n\r\nexport interface MenuSelectPropsT {\r\n  character: tProcessedCharacter\r\n  party: tProcessedParty\r\n  activeKey: string\r\n  onActiveKeyChange: (key: string) => void\r\n}\r\n\r\nexport const MenuSelect = (props: MenuSelectPropsT) => {\r\n  const { character, party, activeKey, onActiveKeyChange } = props\r\n\r\n  return (\r\n    <FlexContainer style={{ justifyContent: 'center', marginTop: 8 }}>\r\n      {ACTIVE_CHARACTER_MENU_KEYS.map((option) => (\r\n        <Button\r\n          key={option.key}\r\n          style={{\r\n            padding: '4px 8px',\r\n            //width: 56,\r\n            fontSize: 12,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            background:\r\n              option.key === activeKey ? Theme.lightBgColor : undefined,\r\n          }}\r\n          onClick={() => {\r\n            onActiveKeyChange(option.key)\r\n          }}\r\n        >\r\n          <FullContainer\r\n            style={{ marginRight: 8, textTransform: 'capitalize' }}\r\n          >\r\n            {option.key}\r\n          </FullContainer>\r\n          <FullContainer style={{ paddingRight: 2 }}>\r\n            {option.count(character, party)}\r\n          </FullContainer>\r\n        </Button>\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { ArmorPreview } from '../ArmorPreview'\r\nimport { WeaponPreview } from '../WeaponPreview'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\n\r\nexport interface HoverAreaPropsT {\r\n  character: tProcessedCharacter\r\n  activeItem: tWeapon | tArmor\r\n}\r\n\r\nexport const HoverArea = (props: HoverAreaPropsT) => {\r\n  const { character, activeItem } = props\r\n  const foundArmor = character.armor.find(\r\n    (a) => a.resource === (activeItem as tArmor).resource,\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {activeItem.itemType === 'armor' && (\r\n        <FlexContainer>\r\n          {foundArmor && (\r\n            <ArmorPreview armor={foundArmor} showEquipButton={false} />\r\n          )}\r\n          {foundArmor?.id !== activeItem.id && (\r\n            <ArmorPreview\r\n              armor={activeItem as tArmor}\r\n              showEquipButton={false}\r\n            />\r\n          )}\r\n        </FlexContainer>\r\n      )}\r\n      {activeItem.itemType === 'weapon' && (\r\n        <FlexContainer>\r\n          <WeaponPreview\r\n            weapon={character.weapon}\r\n            showEquipButton={false}\r\n            character={character}\r\n          />\r\n          {character.weapon.id !== activeItem.id && (\r\n            <WeaponPreview\r\n              character={character}\r\n              weapon={activeItem as tWeapon}\r\n              showEquipButton={false}\r\n            />\r\n          )}\r\n        </FlexContainer>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { FlexContainer } from './flex'\r\nimport { Theme } from '../theme'\r\nimport { HoverToolTip } from '../components/Tooltip'\r\n\r\nexport interface HexagonPropsT {\r\n  color: string\r\n  size: number\r\n  style?: CSSProperties\r\n  children?: JSX.Element | string | number\r\n  childStyle?: CSSProperties\r\n}\r\nexport const Hexagon = (props: HexagonPropsT) => {\r\n  const { color, size, children, childStyle } = props\r\n  const mod = size / 100\r\n  const boxW = mod * 100\r\n  const boxH = mod * 57.74\r\n  const triH = mod * 28.8774\r\n  const triW = mod * 50\r\n  const tHeight = boxH + 2 * triH\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <div\r\n        style={{\r\n          width: 0,\r\n          borderBottom: `${triH}px solid ${color}`,\r\n          borderRight: `${triW}px solid transparent`,\r\n          borderLeft: `${triW}px solid transparent`,\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          width: `${boxW}px`,\r\n          height: `${boxH + 2}px`,\r\n          marginTop: '-1px',\r\n          marginBottom: '-1px',\r\n          background: color,\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          width: 0,\r\n          borderTop: `${triH}px solid ${color}`,\r\n          borderRight: `${triW}px solid transparent`,\r\n          borderLeft: `${triW}px solid transparent`,\r\n        }}\r\n      />\r\n      <FlexContainer\r\n        $direction='column'\r\n        style={{\r\n          width: `${boxW}px`,\r\n          height: `${tHeight}px`,\r\n          position: 'absolute',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          ...(childStyle || {}),\r\n        }}\r\n      >\r\n        {children}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface HexBadgePropsT extends HexagonPropsT {\r\n  rotate?: boolean\r\n  onClick?: () => void\r\n}\r\nexport const HexBadge = (props: HexBadgePropsT) => {\r\n  const {\r\n    color,\r\n    size,\r\n    style,\r\n    children,\r\n    childStyle,\r\n    onClick,\r\n    rotate = false,\r\n  } = props\r\n  const angle = rotate ? 30 : 0\r\n  return (\r\n    <div\r\n      style={{\r\n        transform: `rotateY(0deg) rotate(-${angle}deg)`,\r\n        ...(style || {}),\r\n      }}\r\n      onClick={onClick}\r\n    >\r\n      <Hexagon size={size} color={Theme.darkBgColorSolid}>\r\n        <Hexagon size={size - 4} color={Theme.badgeBorderColor}>\r\n          <Hexagon size={size - 6} color={Theme.darkBgColorSolid}>\r\n            <Hexagon\r\n              size={size - 8}\r\n              color={color}\r\n              childStyle={{\r\n                fontFamily: Theme.titleFont,\r\n                color: 'white',\r\n                fontSize: `${size - 16}px`,\r\n                paddingTop: 2,\r\n                transform: `rotateY(0deg) rotate(${angle}deg)`,\r\n                ...(childStyle || {}),\r\n              }}\r\n            >\r\n              {children}\r\n            </Hexagon>\r\n          </Hexagon>\r\n        </Hexagon>\r\n      </Hexagon>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport interface HoverBadgePropsT {\r\n  children: JSX.Element | string | number\r\n  content: JSX.Element\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n  style?: CSSProperties\r\n  childStyle?: CSSProperties\r\n  size?: number\r\n  rotate?: boolean\r\n  position?: {\r\n    top?: number\r\n    bottom?: number\r\n    left?: number\r\n    right?: number\r\n  }\r\n}\r\nexport const HoverHexBadge = (props: HoverBadgePropsT) => {\r\n  const {\r\n    children,\r\n    content,\r\n    direction,\r\n    style,\r\n    childStyle,\r\n    size,\r\n    rotate,\r\n    position,\r\n  } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        position: position ? 'absolute' : 'relative',\r\n        top: position?.top,\r\n        bottom: position?.bottom,\r\n        left: position?.left,\r\n        right: position?.right,\r\n        zIndex: 4,\r\n      }}\r\n    >\r\n      <HoverToolTip\r\n        distance={2}\r\n        direction={direction || 'right'}\r\n        content={content || <div />}\r\n      >\r\n        <HexBadge\r\n          style={style}\r\n          rotate={rotate}\r\n          childStyle={childStyle}\r\n          size={size || 20}\r\n          color={Theme.badgeBgColor}\r\n        >\r\n          {children}\r\n        </HexBadge>\r\n      </HoverToolTip>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { StatBar } from './StatBar'\r\nimport { Items } from './Items'\r\nimport { Name } from './Name'\r\nimport { Image } from './Image'\r\nimport { MenuSelect, ACTIVE_CHARACTER_MENU_KEYS } from './MenuSelect'\r\nimport { HoverArea } from './HoverArea'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { Theme } from '../../theme'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { HexBadge } from '../../elements/shapes'\r\n\r\nexport interface PartyActiveCharacterPropsT {\r\n  character: tProcessedCharacter\r\n  party: tProcessedParty\r\n  canEquip: boolean\r\n  onRequestClose: () => void\r\n}\r\n\r\nexport interface ItemStackT<T> {\r\n  count: number\r\n  item: T\r\n}\r\n\r\ntype ItemT = tConsumable | tArmor | tWeapon\r\nexport const condenseListToStack = (items: ItemT[]): ItemStackT<ItemT>[] => {\r\n  let stack: ItemStackT<ItemT>[] = []\r\n  items.forEach((i) => {\r\n    if (stack.map((s) => s.item.name).includes(i.name)) {\r\n      stack = stack.map((s) =>\r\n        s.item.name === i.name ? { ...s, count: s.count + 1 } : s,\r\n      )\r\n    } else {\r\n      stack = [...stack, { item: i, count: 1 }]\r\n    }\r\n  })\r\n  return stack\r\n}\r\n\r\nexport const PartyActiveCharacter = (props: PartyActiveCharacterPropsT) => {\r\n  const { character, party, canEquip, onRequestClose } = props\r\n  const [activeMenuKey, setActiveMenuKey] = useState('armor')\r\n  const [activeItem, setActiveItem] = useState<tArmor | tWeapon | undefined>()\r\n  const activeOption = ACTIVE_CHARACTER_MENU_KEYS.find(\r\n    (o) => o.key === activeMenuKey,\r\n  )\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        justifyContent: 'flex-end',\r\n      }}\r\n    >\r\n      <HexBadge\r\n        color={Theme.healthRedColor}\r\n        size={32}\r\n        onClick={onRequestClose}\r\n        style={{\r\n          position: 'absolute',\r\n          top: -16,\r\n          right: -9,\r\n          cursor: 'pointer',\r\n          userSelect: 'none',\r\n          textShadow: '1px 1px 3px black',\r\n        }}\r\n      >\r\n        X\r\n      </HexBadge>\r\n      <FlexContainer\r\n        style={{\r\n          maxHeight: 440,\r\n          padding: 10,\r\n          position: 'absolute',\r\n          left: '-6px',\r\n          width: 486,\r\n          justifyContent: 'flex-end',\r\n          zIndex: 1,\r\n        }}\r\n      >\r\n        {activeItem && (\r\n          <HoverArea character={character} activeItem={activeItem} />\r\n        )}\r\n      </FlexContainer>\r\n      <BoxContainer substyle={{ background: Theme.darkBgColor, padding: 0 }}>\r\n        <FlexContainer $direction='column'>\r\n          <Name name={character.name} />\r\n          <StatBar character={character} />\r\n          <BoxContainer\r\n            substyle={{\r\n              background: Theme.darkBgColor,\r\n              padding: '16px 0 2px 0',\r\n            }}\r\n          >\r\n            <FlexContainer>\r\n              <Items character={character} setActiveItem={setActiveItem} />\r\n              <Image character={character} />\r\n            </FlexContainer>\r\n            <MenuSelect\r\n              character={character}\r\n              party={party}\r\n              activeKey={activeMenuKey}\r\n              onActiveKeyChange={setActiveMenuKey}\r\n            />\r\n          </BoxContainer>\r\n          <BoxContainer\r\n            substyle={{\r\n              background: Theme.darkBgColor,\r\n              padding: '4px 0',\r\n              height: 200,\r\n              overflow: 'auto',\r\n            }}\r\n          >\r\n            {activeOption &&\r\n              activeOption.render(character, canEquip, setActiveItem)}\r\n          </BoxContainer>\r\n        </FlexContainer>\r\n      </BoxContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { ARMOR_TYPE_ICONS } from '../../icons/maps'\r\nimport { Button } from '../../elements/button'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { condenseListToStack } from '.'\r\nimport { Row, ActionsRow } from './elements'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\n\r\nexport interface ArmorListPropsT {\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n  setActiveItem: (item: tWeapon | tArmor) => void\r\n  onEquipItem?: (characterId: string, item: tWeapon | tArmor) => void\r\n}\r\n\r\nexport const ArmorList = (props: ArmorListPropsT) => {\r\n  const { character, canEquip, setActiveItem, onEquipItem } = props\r\n  const { party, sellItem, equipItem } = usePartyContext()\r\n  const [activeItemId, setActiveItemId] = useState<string | undefined>()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {condenseListToStack(\r\n        party.items\r\n          .filter((i) => i.itemType === 'armor')\r\n          .map((i) => i as tArmor)\r\n          .sort((a, b) => a.name.localeCompare(b.name)),\r\n      ).map(({ item, count }) => {\r\n        const armor = item as tArmor\r\n        return (\r\n          <FlexContainer key={armor.id} $direction='column'>\r\n            <Row\r\n              $active={item.id === activeItemId}\r\n              onMouseEnter={() => setActiveItem(armor)}\r\n              onClick={(e: MouseEvent) => {\r\n                e.stopPropagation()\r\n                e.preventDefault()\r\n                setActiveItemId(armor.id)\r\n              }}\r\n            >\r\n              <div style={{ width: 24 }}>\r\n                <Icon\r\n                  src={ARMOR_TYPE_ICONS[armor.type]}\r\n                  size={16}\r\n                  style={{ marginRight: 10 }}\r\n                  fill={ITEM_RARITY_COLORS[armor.rarity]}\r\n                  shadow\r\n                />\r\n              </div>\r\n              <span style={{ color: ITEM_RARITY_COLORS[armor.rarity] }}>\r\n                {count} {armor.name}\r\n              </span>\r\n            </Row>\r\n            {canEquip && activeItemId === armor.id && (\r\n              <ActionsRow>\r\n                <Button\r\n                  style={{ padding: '4px 8px', marginRight: 10 }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    if (onEquipItem) {\r\n                      onEquipItem(character.id, armor)\r\n                    } else {\r\n                      equipItem(character.id, armor)\r\n                    }\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Equip\r\n                </Button>\r\n                <FullContainer />\r\n                <Button\r\n                  style={{ padding: '4px 8px', marginRight: 10 }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    sellItem(item.id)\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Sell Item ({item.goldValue})\r\n                </Button>\r\n                <Button\r\n                  style={{ padding: '4px 8px' }}\r\n                  onClick={() => {\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </ActionsRow>\r\n            )}\r\n          </FlexContainer>\r\n        )\r\n      })}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Theme } from '../../theme'\r\nimport { ArmorList } from '../PartyActiveCharacter/ArmorList'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { WeaponList } from '../PartyActiveCharacter/WeaponList'\r\n\r\nexport interface EquipItemModalPropsT {\r\n  equipItemCombat: (characterId: string, item: tWeapon | tArmor) => void\r\n}\r\n\r\nexport const EquipItemModal = (props: EquipItemModalPropsT) => {\r\n  const { equipItemCombat } = props\r\n  const { activeCharacter } = useCombatContext()\r\n  const { close } = useModalContext()\r\n  const onEquipItem = (characterId: string, item: tWeapon | tArmor) => {\r\n    equipItemCombat(characterId, item)\r\n    close()\r\n  }\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ maxHeight: 300, overflow: 'auto' }}\r\n    >\r\n      <h3 style={{ margin: 0, marginBottom: 32, fontFamily: Theme.titleFont }}>\r\n        Choose an Item\r\n      </h3>\r\n      <WeaponList\r\n        character={activeCharacter}\r\n        setActiveItem={() => {}}\r\n        canEquip={true}\r\n        onEquipItem={onEquipItem}\r\n      />\r\n      <ArmorList\r\n        character={activeCharacter}\r\n        setActiveItem={() => {}}\r\n        canEquip={true}\r\n        onEquipItem={onEquipItem}\r\n      />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { Button } from '../../elements/button'\r\nimport { SkillPreview } from '../SkillPreview'\r\nimport { SkillChecks } from '../SkillChecks'\r\nimport { SKILL_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Hover } from '../Hover'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { Theme } from '../../theme'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { EquipItemModal } from '../EquipItemModal'\r\nimport Inventory from '../../icons/svg/lorc/knapsack.svg'\r\nimport { HEAL } from '../../game/Skill/skills/armor'\r\n\r\nexport const CombatActions = () => {\r\n  const {\r\n    party,\r\n    activeCharacter,\r\n    selectedSkill,\r\n    selectedTargets,\r\n    onSkillSelect,\r\n    equipItemCombat,\r\n  } = useCombatContext()\r\n  const { open } = useModalContext()\r\n\r\n  if (!activeCharacter || activeCharacter.partyId !== PLAYER_PARTY_ID)\r\n    return null\r\n\r\n  const stat = selectedSkill?.weaponStatOverride || activeCharacter.weapon.stat\r\n  const skills = activeCharacter.skills.filter((skill) => {\r\n    if (activeCharacter.healthOffset === 0 && skill.id === HEAL.id) {\r\n      return false\r\n    } else {\r\n      return true\r\n    }\r\n  })\r\n  return (\r\n    <FlexContainer $direction='column' style={{ minWidth: 340 }}>\r\n      {selectedSkill && <SkillChecks stat={stat} skill={selectedSkill} />}\r\n      <FlexContainer style={{ justifyContent: 'center', minHeight: 42 }}>\r\n        {skills.map((skill) => (\r\n          <React.Fragment key={skill.id}>\r\n            {SKILL_ICONS[skill.name] ? (\r\n              <Hover delay={0}>\r\n                {({ isHovering }) => (\r\n                  <Icon\r\n                    src={SKILL_ICONS[skill.name]}\r\n                    size={42}\r\n                    shadow={true}\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      padding: '0 12px',\r\n                    }}\r\n                    onClick={() => {\r\n                      onSkillSelect(skill)\r\n                    }}\r\n                    fill={\r\n                      skill.id === selectedSkill?.id\r\n                        ? 'lightsalmon'\r\n                        : isHovering\r\n                        ? 'white'\r\n                        : 'rgba(255,255,255,0.8)'\r\n                    }\r\n                  />\r\n                )}\r\n              </Hover>\r\n            ) : (\r\n              <Button\r\n                key={skill.id}\r\n                onClick={() => onSkillSelect(skill)}\r\n                style={{\r\n                  background: Theme.darkBgColor,\r\n                  borderColor:\r\n                    selectedSkill && skill.id === selectedSkill.id\r\n                      ? 'white'\r\n                      : undefined,\r\n                }}\r\n              >\r\n                {skill.name}\r\n              </Button>\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n        {party.items.length > 0 && (\r\n          <Hover delay={0}>\r\n            {({ isHovering }) => (\r\n              <Icon\r\n                src={Inventory}\r\n                size={42}\r\n                shadow={true}\r\n                style={{\r\n                  cursor: 'pointer',\r\n                  padding: '0 12px',\r\n                }}\r\n                onClick={() =>\r\n                  open(<EquipItemModal equipItemCombat={equipItemCombat} />)\r\n                }\r\n                fill={isHovering ? 'white' : 'rgba(255,255,255,0.8)'}\r\n              />\r\n            )}\r\n          </Hover>\r\n        )}\r\n      </FlexContainer>\r\n      {selectedSkill && (\r\n        <SkillPreview\r\n          skill={selectedSkill}\r\n          source={activeCharacter}\r\n          targets={selectedTargets}\r\n        />\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { GaugePropsT } from '.'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { FullContainer } from '../../elements/flex'\r\n\r\nexport const Gauge2 = (props: GaugePropsT) => {\r\n  const { name = '', value, color, height = 30, children, style } = props\r\n  const max = props.max < 1 ? 1 : props.max\r\n  const p = (value / max) * 100\r\n  const percentage = p > 100 ? 100 : p\r\n  const [oldPercentage, setOldPercentage] = useState(percentage)\r\n  useEffect(() => {\r\n    setOldPercentage(percentage)\r\n  }, [percentage])\r\n  return (\r\n    <HoverToolTip\r\n      direction='right'\r\n      content={<BoxContainer>{`${name} (${value} / ${max})`}</BoxContainer>}\r\n    >\r\n      <BoxContainer\r\n        style={{ borderLeft: 'none', ...(style || {}) }}\r\n        substyle={{\r\n          padding: 0,\r\n          background: 'rgba(80,80,85,1)',\r\n          height: height - 2,\r\n          position: 'relative',\r\n          border: 'none',\r\n        }}\r\n      >\r\n        <Spring\r\n          from={{ value: oldPercentage || 0 }}\r\n          to={{ value: percentage }}\r\n          config={{ friction: 200, mass: 4, tension: 600 }}\r\n        >\r\n          {(p) => (\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                left: 0,\r\n                boxSizing: 'border-box',\r\n                height: height - 2,\r\n                maxWidth: `${p.value}%`,\r\n                minWidth: `${p.value}%`,\r\n                boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n                textShadow: '1px 1px 1px black',\r\n                backgroundColor: 'rgba(255,255,255,0.5)',\r\n              }}\r\n            ></div>\r\n          )}\r\n        </Spring>\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            left: 0,\r\n            boxSizing: 'border-box',\r\n            height: height - 2,\r\n            maxWidth: `${percentage}%`,\r\n            minWidth: `${percentage}%`,\r\n            boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n            textShadow: '1px 1px 1px black',\r\n            backgroundColor: color,\r\n          }}\r\n        ></div>\r\n        <FullContainer\r\n          style={{\r\n            position: 'absolute',\r\n            height,\r\n            lineHeight: `${height - 2}px`,\r\n            right: 4,\r\n            top: 0,\r\n            fontSize: 12,\r\n            fontWeight: 'bold',\r\n            overflow: 'hidden',\r\n            textShadow: '0px 0px 3px black',\r\n            color: 'rgba(255,255,255,0.6)',\r\n          }}\r\n        >\r\n          <div>{children}</div>\r\n        </FullContainer>\r\n      </BoxContainer>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FullContainer } from '../../elements/flex'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { Monodiv } from '../../elements/monospace'\r\nimport { noneg } from '../../util'\r\nimport { usePrevious } from '../../hooks/usePrevious'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { CHARACTER_XP_MAX } from '../../game/Character/constants'\r\nimport { Gauge2 } from './v2'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface GaugePropsT {\r\n  name?: string\r\n  color: string\r\n  height?: number\r\n  max: number\r\n  value: number\r\n  style?: CSSProperties\r\n  children?: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const Gauge = (props: GaugePropsT) => {\r\n  const { name = '', value, color, height = 30, children, style } = props\r\n  const max = props.max < 1 ? 1 : props.max\r\n  const p = (value / max) * 100\r\n  const percentage = p > 100 ? 100 : p\r\n  const oldPercentage = usePrevious(percentage)\r\n  return (\r\n    <HoverToolTip\r\n      direction='right'\r\n      content={<BoxContainer>{`${name} (${value} / ${max})`}</BoxContainer>}\r\n    >\r\n      <BoxContainer\r\n        style={{\r\n          borderLeft: 'none',\r\n          background: Theme.darkBgColorSolid,\r\n          ...(style || {}),\r\n        }}\r\n        substyle={{\r\n          padding: 0,\r\n          background: 'rgba(255,255,255,0.2)',\r\n          height: height - 2,\r\n          position: 'relative',\r\n          border: 'none',\r\n        }}\r\n      >\r\n        <Spring\r\n          from={{ value: oldPercentage || 0 }}\r\n          to={{ value: percentage }}\r\n          config={{ friction: 70, mass: 5, tension: 300 }}\r\n        >\r\n          {(p) => (\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                left: 0,\r\n                boxSizing: 'border-box',\r\n                height: height - 2,\r\n                maxWidth: `${p.value}%`,\r\n                minWidth: `${p.value}%`,\r\n                boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n                textShadow: '1px 1px 1px black',\r\n                backgroundColor: color,\r\n                color: 'white',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n            ></div>\r\n          )}\r\n        </Spring>\r\n        <FullContainer\r\n          style={{\r\n            position: 'absolute',\r\n            height,\r\n            lineHeight: `${height - 2}px`,\r\n            right: 4,\r\n            top: 0,\r\n            fontSize: 10,\r\n            fontWeight: 'bold',\r\n            overflow: 'hidden',\r\n            textShadow: '0px 0px 3px black',\r\n          }}\r\n        >\r\n          <Monodiv>{children}</Monodiv>\r\n        </FullContainer>\r\n      </BoxContainer>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface HealthGaugePropsT {\r\n  character: tProcessedCharacter\r\n  height?: number\r\n  style?: CSSProperties\r\n  showNumbers?: boolean\r\n}\r\nexport const HealthGauge = (props: HealthGaugePropsT) => {\r\n  const { character, height = 16, style, showNumbers = true } = props\r\n  const health = noneg(character.health)\r\n  return (\r\n    <Gauge2\r\n      name='Health'\r\n      color={Theme.healthRedColor}\r\n      max={character.maxHealth}\r\n      value={health}\r\n      height={height}\r\n      style={style}\r\n    >\r\n      {showNumbers && (\r\n        <span>\r\n          {health}/{character.maxHealth}\r\n        </span>\r\n      )}\r\n    </Gauge2>\r\n  )\r\n}\r\nexport interface XPGaugePropsT {\r\n  character: tProcessedCharacter\r\n  style?: CSSProperties\r\n  showNumber?: boolean\r\n}\r\nexport const XPGauge = (props: HealthGaugePropsT) => {\r\n  const { character, style } = props\r\n  const value = character.experience\r\n  const max = CHARACTER_XP_MAX[character.level]\r\n  return (\r\n    <Gauge2\r\n      name='XP'\r\n      color='#5e8575'\r\n      max={max}\r\n      value={value}\r\n      height={16}\r\n      style={style}\r\n    >\r\n      {value}/{max}\r\n    </Gauge2>\r\n  )\r\n}\r\n","import { useState, useEffect, useRef } from 'react'\r\n\r\nexport const usePrevious = <T = any>(value: T) => {\r\n  const ref = useRef<T>()\r\n\r\n  useEffect(() => {\r\n    ref.current = value\r\n  }, [value])\r\n\r\n  return ref.current\r\n}\r\n","import React from 'react'\r\nimport { Tooltip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STATUS_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { tStatus } from '../../game/Status/type'\r\nimport { STATUS_CONFIG } from '../../game/Status/constants'\r\n\r\nexport interface TagPreviewPropsT {\r\n  status: tStatus\r\n  immunity?: boolean\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n}\r\nexport const TagPreview = (props: TagPreviewPropsT) => {\r\n  const { status, direction, immunity } = props\r\n  const statusConfig = STATUS_CONFIG[status.type]\r\n  return (\r\n    <Tooltip\r\n      direction={direction || 'bottom'}\r\n      content={\r\n        <BoxContainer style={{ maxWidth: 200 }}>\r\n          <FlexContainer $direction='column'>\r\n            <strong style={{ marginBottom: statusConfig.description ? 8 : 0 }}>\r\n              {status.type} {immunity && 'immunity'}{' '}\r\n              {status.duration > 0 ? `(${status.duration})` : ''}\r\n            </strong>\r\n            {statusConfig.description && (\r\n              <>{!immunity && <span>{statusConfig.description}</span>}</>\r\n            )}\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n      }\r\n    >\r\n      <Icon\r\n        shadow\r\n        src={STATUS_ICONS[status.type] || ''}\r\n        size={20}\r\n        fill={immunity ? 'white' : 'Violet'}\r\n        style={{ marginLeft: 4 }}\r\n      />\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { tProcessedCharacter } from '../game/Character/type'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { Theme } from '../theme'\r\n\r\nexport const usePlayerCharacterNotifications = (\r\n  character: tProcessedCharacter,\r\n  push: (c: JSX.Element, type?: string) => void,\r\n) => {\r\n  const health = character.health\r\n  const level = character.level\r\n  const { roundResults } = useCombatContext()\r\n  const [previousHealth, setPreviousHealth] = useState(health)\r\n  const [previousLevel, setPreviousLevel] = useState(level)\r\n  useEffect(() => {\r\n    const healthDiff = previousHealth - health\r\n    if (healthDiff > 0) {\r\n      push(<span style={{ fontFamily: Theme.titleFont }}>- {healthDiff}</span>)\r\n    }\r\n    if (healthDiff < 0) {\r\n      push(\r\n        <span style={{ fontFamily: Theme.titleFont }}>\r\n          + {Math.abs(healthDiff)}\r\n        </span>,\r\n        'good',\r\n      )\r\n    }\r\n    if (level > previousLevel) {\r\n      push(\r\n        <span style={{ fontFamily: Theme.titleFont, fontSize: 36 }}>\r\n          Level Up!\r\n        </span>,\r\n        'good',\r\n      )\r\n    }\r\n    setPreviousLevel(level)\r\n    setPreviousHealth(health)\r\n  }, [health, level])\r\n\r\n  useEffect(() => {\r\n    const lastRound = roundResults[roundResults.length - 1]\r\n    if (lastRound) {\r\n      if (\r\n        lastRound.sourceResult.weaponDidBreak &&\r\n        lastRound.sourceResult.source.id === character.id\r\n      ) {\r\n        push(\r\n          <span style={{ fontFamily: Theme.titleFont, fontSize: 36 }}>\r\n            Weapon Break!\r\n          </span>,\r\n        )\r\n      }\r\n      const chResult = lastRound.targetResults.find(\r\n        (r) => r.target.id === character.id,\r\n      )\r\n      if (chResult) {\r\n        if (chResult.dodgeSuccess) {\r\n          push(\r\n            <span style={{ fontFamily: Theme.titleFont }}>Dodged!</span>,\r\n            'base',\r\n          )\r\n        }\r\n        if (\r\n          !chResult.dodgeSuccess &&\r\n          chResult.accuracySuccess &&\r\n          chResult.skill.damage &&\r\n          chResult.loggedDamgge.value <= 0\r\n        ) {\r\n          push(\r\n            <span style={{ fontFamily: Theme.titleFont }}>Blocked!</span>,\r\n            'base',\r\n          )\r\n        }\r\n        if (chResult.addedStatus.length > 0) {\r\n          chResult.addedStatus.forEach((status) => {\r\n            push(\r\n              <span style={{ fontFamily: Theme.titleFont }}>{status}</span>,\r\n              'base',\r\n            )\r\n          })\r\n        }\r\n        if (chResult.perfect && chResult.skill.perfectPierce) {\r\n          push(\r\n            <span style={{ fontFamily: Theme.titleFont }}>Pierced!</span>,\r\n            'base',\r\n          )\r\n        }\r\n        if (chResult.criticalHitSuccess) {\r\n          push(\r\n            <span style={{ fontFamily: Theme.titleFont }}>Critical!</span>,\r\n            'base',\r\n          )\r\n        }\r\n      }\r\n      if (\r\n        lastRound.sourceResult.source.id === character.id &&\r\n        !lastRound.sourceResult.accuracySuccess\r\n      ) {\r\n        push(\r\n          <span style={{ fontFamily: Theme.titleFont }}>Missed!</span>,\r\n          'base',\r\n        )\r\n      }\r\n    }\r\n  }, [roundResults])\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { noneg } from '../../util'\r\nimport { usePlayerCharacterNotifications } from '../../hooks/usePlayerCharacterNotifications'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface HealthPropsT {\r\n  character: tProcessedCharacter\r\n  push: (content: JSX.Element, type?: string) => void\r\n}\r\nexport const Health = (props: HealthPropsT) => {\r\n  const { character, push } = props\r\n  const health = noneg(character.health)\r\n  const [previousHealth, setPreviousHealth] = useState(character.health)\r\n  usePlayerCharacterNotifications(character, push)\r\n\r\n  useEffect(() => {\r\n    setPreviousHealth(health)\r\n  }, [health])\r\n\r\n  return (\r\n    <span\r\n      style={{\r\n        fontSize: 64,\r\n        height: 64,\r\n        width: 60,\r\n        textShadow: '1px 1px 10px black',\r\n        color: Theme.healthRedColor,\r\n        fontFamily: 'New Rocker',\r\n        userSelect: 'none',\r\n      }}\r\n    >\r\n      <Spring\r\n        from={{ hp: previousHealth || 0 }}\r\n        to={{ hp: health }}\r\n        config={{ friction: 70, mass: 5, tension: 300, clamp: true }}\r\n      >\r\n        {(hpp) => <span>{Math.floor(hpp.hp)}</span>}\r\n      </Spring>\r\n    </span>\r\n  )\r\n}\r\n","import React, { useContext, useState, useEffect, CSSProperties } from 'react'\r\nimport { animated, useTransition } from 'react-spring'\r\nimport { FullContainer } from '../../elements/flex'\r\nimport { v4 } from 'uuid'\r\n\r\nexport interface LocalToastContextT {\r\n  push: (content: JSX.Element) => void\r\n}\r\nexport const defaultValue: LocalToastContextT = {\r\n  push: (content) => {},\r\n}\r\nexport const LocalToastContext = React.createContext<LocalToastContextT>(\r\n  defaultValue,\r\n)\r\nexport const useLocalToast = () => useContext(LocalToastContext)\r\n\r\nexport interface LocalToastProviderProps {\r\n  children: JSX.Element\r\n}\r\nexport const LocalToastProvider = (props: LocalToastProviderProps) => {\r\n  const { children } = props\r\n  const [queue, setQueue] = useState<\r\n    {\r\n      id: string\r\n      content: JSX.Element\r\n    }[]\r\n  >([])\r\n\r\n  useEffect(() => {\r\n    const i = setInterval(() => {\r\n      setQueue((q) => {\r\n        const [f, ...rest] = q\r\n        return rest || []\r\n      })\r\n    }, 3000)\r\n    return () => {\r\n      clearInterval(i)\r\n    }\r\n  }, [])\r\n\r\n  const push = (c: JSX.Element, type?: string) => {\r\n    setQueue((q) => [\r\n      ...q,\r\n      {\r\n        id: v4(),\r\n        content: c,\r\n        type,\r\n      },\r\n    ])\r\n  }\r\n\r\n  return (\r\n    <LocalToastContext.Provider value={{ push }}>\r\n      <>\r\n        <div style={{ position: 'relative' }}>\r\n          <Toast queue={queue} />\r\n        </div>\r\n        {children}\r\n      </>\r\n    </LocalToastContext.Provider>\r\n  )\r\n}\r\n\r\ninterface ToastQT {\r\n  id: string\r\n  type?: string\r\n  content: JSX.Element\r\n}\r\nexport interface ToastPropsT {\r\n  queue: ToastQT[]\r\n  style?: CSSProperties\r\n}\r\nexport const Toast = (props: ToastPropsT) => {\r\n  const { queue, style } = props\r\n  const hasChildren = queue.length > 0\r\n  const animation = useTransition(queue, (q) => q.id, {\r\n    from: {\r\n      transform: 'translate3d(0,40px,0)',\r\n      maxWidth: 0,\r\n      maxHeight: 0,\r\n      opacity: 0,\r\n    },\r\n    enter: {\r\n      transform: 'translate3d(0,0px,0)',\r\n      maxWidth: 180,\r\n      maxHeight: 40,\r\n      opacity: 1,\r\n    },\r\n    leave: {\r\n      transform: 'translate3d(0,-80px,0)',\r\n      maxWidth: 0,\r\n      maxHeight: 0,\r\n      opacity: 0,\r\n    },\r\n  })\r\n\r\n  return (\r\n    <animated.div\r\n      style={{\r\n        position: 'absolute',\r\n        width: '100%',\r\n        display: 'flex',\r\n        height: 0,\r\n        top: -24,\r\n        zIndex: 3,\r\n        ...(style || {}),\r\n      }}\r\n    >\r\n      {animation.map((item) => (\r\n        <animated.div\r\n          key={item.key}\r\n          style={{\r\n            display: 'flex',\r\n            ...item.props,\r\n          }}\r\n        >\r\n          <FullContainer />\r\n          <div\r\n            style={{\r\n              marginBottom: 4,\r\n              marginRight: 4,\r\n              fontSize: 20,\r\n              padding: 2,\r\n              lineHeight: '20px',\r\n              whiteSpace: 'nowrap',\r\n              background:\r\n                'radial-gradient(circle, rgba(0,0,0,0.3) 0%, rgba(0,0,0,0) 100%)',\r\n              ...color(item.item.type),\r\n            }}\r\n          >\r\n            {item.item.content}\r\n          </div>\r\n          <FullContainer />\r\n        </animated.div>\r\n      ))}\r\n    </animated.div>\r\n  )\r\n}\r\n\r\nexport interface LocalToastRpPropsT {\r\n  children: (props: LocalToastContextT) => JSX.Element\r\n  style?: CSSProperties\r\n}\r\nexport const LocalToastRp = (props: LocalToastRpPropsT) => {\r\n  const { children, style } = props\r\n  const [queue, setQueue] = useState<ToastQT[]>([])\r\n\r\n  const push = (c: JSX.Element, type?: string) => {\r\n    setQueue((q) => [\r\n      ...q,\r\n      {\r\n        id: v4(),\r\n        content: c,\r\n        type,\r\n      },\r\n    ])\r\n    setTimeout(() => {\r\n      setQueue((q) => {\r\n        const [f, ...rest] = q\r\n        return rest || []\r\n      })\r\n    }, 4000)\r\n  }\r\n  return (\r\n    <>\r\n      <div style={{ position: 'relative' }}>\r\n        <Toast queue={queue} style={style} />\r\n      </div>\r\n      {children({ push })}\r\n    </>\r\n  )\r\n}\r\n\r\nconst color = (type: string | undefined) => {\r\n  switch (type) {\r\n    case 'good':\r\n      return {\r\n        color: '#aae6bf',\r\n        textShadow: '0px 3px 1px rgba(0,0,0,0.5)',\r\n      }\r\n    case 'base':\r\n      return {\r\n        color: 'rgba(255,255,255,0.8)',\r\n        textShadow: '0px 3px 1px rgba(0,0,0,0.5)',\r\n      }\r\n    default:\r\n      return {\r\n        // color: 'rgba(219, 114, 114, 0.8)',\r\n        // color: 'red',\r\n        color: 'rgba(255,158,158,0.8)',\r\n        textShadow: '0px 3px 1px rgba(0,0,0,1)',\r\n      }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { HealthGauge } from '../Gauge'\r\nimport { styled } from 'styletron-react'\r\nimport { HoverBadge } from '../../elements/badge'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { TagPreview } from '../TagPreview'\r\nimport { noneg } from '../../util'\r\nimport { Icon } from '../Icon'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Health } from './Health'\r\nimport { LocalToastRp } from '../../contexts/LocalToastContext'\r\nimport { ZERO_STATS } from '../../game/Stats/constants'\r\nimport { Theme } from '../../theme'\r\nimport { HoverHexBadge } from '../../elements/shapes'\r\n\r\nexport interface EnemyCharacterPropsT {\r\n  character: tProcessedCharacter\r\n  activeCharacter: tProcessedCharacter\r\n  hoverable?: boolean\r\n  selected?: boolean\r\n  isHovering?: boolean\r\n  isBoss?: boolean\r\n  onClick?: () => void\r\n}\r\nconst Wrapper = styled('div', (props: any) => {\r\n  const { $selected, $active } = props\r\n  return {\r\n    margin: 10,\r\n    boxShadow: $active ? '0px 0px 20px white' : 'none',\r\n    transition: 'all 0.1s',\r\n  }\r\n})\r\nexport const EnemyCharacter = (props: EnemyCharacterPropsT) => {\r\n  const { character, activeCharacter, isBoss = false, onClick } = props\r\n  const health = noneg(character.health)\r\n  const active = activeCharacter?.id === character?.id\r\n  return (\r\n    <div\r\n      onClick={() => (onClick && character.health > 0 ? onClick() : null)}\r\n      style={{\r\n        borderWidth: 2,\r\n        width: isBoss ? 600 : 320,\r\n        position: 'relative',\r\n        cursor: onClick ? 'pointer' : 'default',\r\n        color: 'rgba(255,255,255,0.8)',\r\n        opacity: character.health <= 0 ? 0.5 : 1,\r\n        transition: 'all 0.4s',\r\n        transform: active ? 'scale(1.05)' : 'scale(0.95)',\r\n      }}\r\n    >\r\n      <FlexContainer style={{ alignItems: 'center' }}>\r\n        <FlexContainer>\r\n          <Icon\r\n            src={character.icon || ''}\r\n            shadow\r\n            fill={\r\n              activeCharacter && character.id === activeCharacter.id\r\n                ? 'lightsalmon'\r\n                : 'white'\r\n            }\r\n            size={64}\r\n            style={{ zIndex: 1, position: 'relative', marginRight: -24 }}\r\n          />\r\n        </FlexContainer>\r\n        <FlexContainer $full $direction='column'>\r\n          <FlexContainer\r\n            style={{\r\n              justifyContent: 'flex-end',\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                padding: '2px 4px',\r\n                textAlign: 'right',\r\n                fontSize: 18,\r\n                lineHeight: '18px',\r\n                background: 'rgba(0,0,0,0.4)',\r\n                textShadow: '1px 1px 2px black',\r\n                fontFamily: Theme.titleFont,\r\n                color: isBoss ? 'red' : 'rgba(255,255,255,0.8)',\r\n              }}\r\n            >\r\n              {character.name}\r\n            </span>\r\n          </FlexContainer>\r\n          <div style={{ boxShadow: '0px 4px 15px rgba(0,0,0,1)' }}>\r\n            <HealthGauge\r\n              character={character}\r\n              height={20}\r\n              showNumbers={false}\r\n            />\r\n          </div>\r\n          <HoverHexBadge\r\n            direction='down'\r\n            content={<BoxContainer>Enemy Level</BoxContainer>}\r\n            position={{\r\n              left: -6,\r\n              bottom: -12,\r\n            }}\r\n            size={32}\r\n            childStyle={{\r\n              color: 'lightcoral',\r\n              paddingTop: 1,\r\n            }}\r\n          >\r\n            {character.level}\r\n          </HoverHexBadge>\r\n          <FlexContainer\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: '-12px',\r\n              left: '40px',\r\n            }}\r\n          >\r\n            {character.status.map((status, i) => (\r\n              <TagPreview key={i} status={status} />\r\n            ))}\r\n            {character.immunities.map((status, i) => (\r\n              <TagPreview\r\n                key={i}\r\n                immunity={true}\r\n                status={{\r\n                  type: status,\r\n                  immunities: [],\r\n                  stack: 0,\r\n                  stats: ZERO_STATS,\r\n                  duration: -1,\r\n                }}\r\n              />\r\n            ))}\r\n          </FlexContainer>\r\n          <FlexContainer\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: '-22px',\r\n              left: 'calc(100% - 58px)',\r\n              alignItems: 'center',\r\n              justifyContent: 'flex-start',\r\n            }}\r\n          >\r\n            {character.stats.armor > 0 && (\r\n              <HoverHexBadge\r\n                direction='down'\r\n                content={<BoxContainer>Armor</BoxContainer>}\r\n                size={28}\r\n                childStyle={{\r\n                  color: Theme.physicalColor,\r\n                  paddingTop: 1,\r\n                }}\r\n              >\r\n                <span>{character.stats.armor}</span>\r\n              </HoverHexBadge>\r\n            )}\r\n            {character.stats.resistance > 0 && (\r\n              <HoverHexBadge\r\n                direction='down'\r\n                content={<BoxContainer>Magic Resistance</BoxContainer>}\r\n                size={28}\r\n                childStyle={{\r\n                  color: Theme.magicColor,\r\n                  paddingTop: 1,\r\n                }}\r\n              >\r\n                <span>{character.stats.resistance}</span>\r\n              </HoverHexBadge>\r\n            )}\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n        <LocalToastRp style={{ top: -24, right: -30, flexDirection: 'column' }}>\r\n          {({ push }) => <Health character={character} push={push} />}\r\n        </LocalToastRp>\r\n      </FlexContainer>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { RedButton } from '../../elements/button'\r\nimport { EnemyCharacter } from '../EnemyCharacter'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\n\r\nexport interface CombatPartyPropsT {\r\n  party: tProcessedParty\r\n}\r\nexport const CombatParty = (props: CombatPartyPropsT) => {\r\n  const { party } = props\r\n  const { activeCharacter, selectedSkill, next } = useCombatContext()\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { setShowSkillTooltips } = useUIContext()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          padding: '0 120px',\r\n          cursor: selectedSkill?.targetType === 'group' ? 'pointer' : 'default',\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <div key={c.id}>\r\n            <EnemyCharacter\r\n              activeCharacter={activeCharacter}\r\n              character={c}\r\n              isBoss={currentEncounter?.type === 'boss'}\r\n            />\r\n            {selectedSkill &&\r\n              selectedSkill.targetType === 'single' &&\r\n              c.health > 0 &&\r\n              activeCharacter.partyId === PLAYER_PARTY_ID && (\r\n                <FlexContainer\r\n                  style={{ justifyContent: 'center', marginTop: -11 }}\r\n                >\r\n                  <div\r\n                    style={{ boxShadow: '0px 2px 5px black', marginTop: -2 }}\r\n                  >\r\n                    <RedButton\r\n                      onClick={() => {\r\n                        next(c)\r\n                        setShowSkillTooltips(false)\r\n                      }}\r\n                      $direction='down'\r\n                    >\r\n                      Attack\r\n                    </RedButton>\r\n                  </div>\r\n                </FlexContainer>\r\n              )}\r\n          </div>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && selectedSkill.targetType === 'group' && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n            <RedButton\r\n              onClick={() => {\r\n                next(party)\r\n                setShowSkillTooltips(false)\r\n              }}\r\n            >\r\n              Attack Group\r\n            </RedButton>\r\n          </div>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface AppHeaderPropsT {\r\n  children?: JSX.Element\r\n  left?: JSX.Element\r\n  right?: JSX.Element\r\n}\r\n\r\nexport const AppHeader = (props: AppHeaderPropsT) => {\r\n  const { children, left, right } = props\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'center',\r\n          background: Theme.darkBgColorSolid,\r\n          height: 52,\r\n          borderBottom: '2px solid rgba(255,255,255,0.3)',\r\n          boxShadow: '1px 1px 1px black',\r\n        }}\r\n      >\r\n        <FlexContainer $full>{left}</FlexContainer>\r\n        <FlexContainer $full>{children}</FlexContainer>\r\n        <FlexContainer $full>{right}</FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport Gold from '../../icons/svg/delapouite/coins.svg'\r\nimport { Icon } from '../Icon'\r\n\r\nexport const PartyResources = () => {\r\n  const { party } = usePartyContext()\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{ alignItems: 'center', paddingRight: 20, color: '#ded9a6' }}\r\n    >\r\n      <Icon src={Gold} size={18} style={{ marginRight: 8 }} fill='#ded9a6' />\r\n      {party.gold}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { AppHeader } from '../AppHeader'\r\nimport { PartyResources } from '../PartyResources'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { tQueue } from '../../game/Queue/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { getMax, getFirst, getSortedIds } from '../../game/Queue/util'\r\nimport { Theme } from '../../theme'\r\nimport { CharacterIcon } from '../CharacterIcon'\r\n\r\nconst size = 40\r\nexport interface CombatQueuePropsT {\r\n  queue: tQueue\r\n  characters: tProcessedCharacter[]\r\n}\r\nexport const CombatQueue = (props: CombatQueuePropsT) => {\r\n  const { queue, characters } = props\r\n  const { isRunning } = useCombatContext()\r\n  const history = useHistory()\r\n  const { level, nextLevel } = useGameStateContext()\r\n  const first = characters.find(\r\n    (c) => c.id === getFirst(queue),\r\n  ) as tProcessedCharacter\r\n  const sortedIds = getSortedIds(queue)\r\n  const bigList = [\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n  ]\r\n  const count = Math.floor((800 - 52) / size)\r\n  const [f, ...list] = Array(count)\r\n    .fill(null)\r\n    .map((_, i) => bigList[i])\r\n    .map((id) => characters.find((c) => c.id === id))\r\n    .filter((c) => c !== undefined)\r\n  const max = getMax(queue)\r\n  const min = 25\r\n  const widthCoef = max > min ? 100 / max : 100 / min\r\n  return (\r\n    <AppHeader\r\n      left={\r\n        <Button\r\n          onClick={() => history.push('/JSFTK_combat')}\r\n          style={{ borderBottom: 0 }}\r\n        >\r\n          Restart ({level})\r\n        </Button>\r\n      }\r\n      right={\r\n        <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n          <PartyResources />\r\n        </FlexContainer>\r\n      }\r\n    >\r\n      <>\r\n        {first && isRunning && (\r\n          <FlexContainer\r\n            style={{\r\n              width: 800,\r\n              flexDirection: 'row-reverse',\r\n              boxShadow: '0px 0px 3px black',\r\n              borderLeft: '1px solid rgba(255,255,255,0.3)',\r\n              background: Theme.mediumBgColor,\r\n            }}\r\n          >\r\n            <FlexContainer\r\n              style={{ position: 'relative', marginLeft: size, zIndex: 7 }}\r\n            >\r\n              <CharacterIcon\r\n                character={first}\r\n                size={64}\r\n                width={64}\r\n                height={64}\r\n                style={{ borderTop: 'none' }}\r\n              />\r\n              <FlexContainer\r\n                $direction='column'\r\n                style={{\r\n                  position: 'absolute',\r\n                  background: 'rgba(255,255,255,0.8)',\r\n                  color: Theme.darkBgColor,\r\n                  zIndex: 2,\r\n                  width: 120,\r\n                  top: 16,\r\n                  paddingLeft: 4,\r\n                  right: '-124px',\r\n                }}\r\n              >\r\n                {first && <span>{first.name}'s Turn</span>}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n            <FlexContainer $full $direction='column'>\r\n              <FullContainer />\r\n              <FlexContainer $full style={{ position: 'relative' }}>\r\n                {characters\r\n                  .filter((c) => c.id !== first?.id && c.health > 0)\r\n                  .map((c, i) => (\r\n                    <div\r\n                      key={`${c?.id}-${i}`}\r\n                      style={{\r\n                        height: size - 10,\r\n                        width: size - 7,\r\n                        position: 'absolute',\r\n                        bottom: '2px',\r\n                        right: `calc(${queue[c.id] * widthCoef}% - ${\r\n                          size - 6\r\n                        }px)`,\r\n                        transition: 'all 0.3s',\r\n                        zIndex: i,\r\n                      }}\r\n                    >\r\n                      <CharacterIcon\r\n                        character={c}\r\n                        size={size}\r\n                        width={size}\r\n                        index={i}\r\n                        style={{ borderBottom: 'none' }}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        )}\r\n      </>\r\n    </AppHeader>\r\n  )\r\n}\r\n","import React, { useRef, useEffect, useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { useCombatLogContext } from '../../contexts/CombatLogContext'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport { Button } from '../../elements/button'\r\nimport { Theme } from '../../theme'\r\n\r\nexport const CombatLog = () => {\r\n  const { combatLog } = useCombatLogContext()\r\n  const scrollRef = useRef<HTMLDivElement>(null)\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n  useEffect(() => {\r\n    if (scrollRef.current && isExpanded) {\r\n      scrollRef.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n  }, [combatLog])\r\n  const style = useSpring({\r\n    minHeight: isExpanded ? 263 : 0,\r\n    maxHeight: isExpanded ? 263 : 0,\r\n  })\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{\r\n        minWidth: 300,\r\n        overflow: 'auto',\r\n        background: 'rgba(0,0,0,0.7)',\r\n        fontSize: 12,\r\n        color: 'rgba(255,255,255,0.8)',\r\n      }}\r\n    >\r\n      <FlexContainer\r\n        style={{\r\n          background: Theme.darkBgColor,\r\n          padding: 8,\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <FullContainer>Combat Log</FullContainer>\r\n        <Button\r\n          onClick={() => setIsExpanded((v) => !v)}\r\n          style={{ padding: '2px 8px' }}\r\n        >\r\n          {isExpanded ? '_' : '+'}\r\n        </Button>\r\n      </FlexContainer>\r\n      <animated.div\r\n        style={{\r\n          overflow: 'auto',\r\n          ...style,\r\n        }}\r\n      >\r\n        <FlexContainer $direction='column' style={{ padding: 8 }}>\r\n          {combatLog.map((line, i) => (\r\n            <span key={i}>{line}</span>\r\n          ))}\r\n        </FlexContainer>\r\n        <div ref={scrollRef} />\r\n      </animated.div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { FlexContainer, FullContainer } from '../elements/flex'\r\nimport { RoundResultRenderer } from '../components/RoundResultRenderer'\r\nimport { CombatActions } from '../components/CombatActions'\r\nimport { CombatParty } from '../components/CombatParty'\r\nimport { CombatQueue } from '../components/CombatQueue'\r\nimport { CombatLog } from '../components/CombatLog'\r\nimport { useUIContext } from '../contexts/UIContext'\r\nimport { useCombatStart } from '../hooks/useCombatStart'\r\nimport { useCombatLogContext } from '../contexts/CombatLogContext'\r\n\r\nexport const Combat = () => {\r\n  const {\r\n    enemyParty,\r\n    activeCharacter,\r\n    characters,\r\n    queue,\r\n    isRunning,\r\n    isRenderingResult,\r\n    onSkillSelect,\r\n  } = useCombatContext()\r\n\r\n  const { setOnCharacterConsumableClick } = useUIContext()\r\n  const { clear } = useCombatLogContext()\r\n  useCombatStart()\r\n  useEffect(() => {\r\n    setOnCharacterConsumableClick((c, index, item) => {\r\n      if (!c) return\r\n      if (c.id === activeCharacter.id) {\r\n        onSkillSelect(item.skill, index)\r\n      }\r\n    })\r\n  }, [onSkillSelect, activeCharacter])\r\n  useEffect(() => {\r\n    clear()\r\n  }, [])\r\n\r\n  return (\r\n    <FlexContainer $full style={{ height: '100%' }}>\r\n      <FlexContainer $full $direction='column'>\r\n        <CombatQueue queue={queue} characters={characters} />\r\n        <FlexContainer\r\n          $direction='column'\r\n          $full\r\n          style={{ padding: '30px 10px 0 10px' }}\r\n        >\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{ marginBottom: 40, minHeight: 90 }}\r\n          >\r\n            <CombatParty party={enemyParty} />\r\n          </FlexContainer>\r\n          <FlexContainer $full>\r\n            {isRunning && activeCharacter && (\r\n              <>\r\n                <FullContainer />\r\n                <FlexContainer $direction='column'>\r\n                  <div style={{ marginTop: 40 }}>\r\n                    {!isRenderingResult && <CombatActions />}\r\n                    <RoundResultRenderer isModal={false} />\r\n                  </div>\r\n                  <FullContainer />\r\n                </FlexContainer>\r\n                <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n                  <FlexContainer\r\n                    $direction='column'\r\n                    // style={{ justifyContent: 'center' }}\r\n                  >\r\n                    <CombatLog />\r\n                  </FlexContainer>\r\n                </FlexContainer>\r\n              </>\r\n            )}\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useModalContext } from '../contexts/ModalContext'\r\nimport { useCombatLogContext } from '../contexts/CombatLogContext'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { FlexContainer } from '../elements/flex'\r\nimport { Icon } from '../components/Icon'\r\nimport { Theme } from '../theme'\r\n\r\nexport const useCombatStart = (delay: number = 1000) => {\r\n  const { open, close } = useModalContext()\r\n  const { clear } = useCombatLogContext()\r\n  const { enemyParty, start, reset } = useCombatContext()\r\n  useEffect(() => {\r\n    clear()\r\n    open(\r\n      <div style={{ textAlign: 'center' }}>\r\n        <h1 style={{ fontFamily: Theme.titleFont }}>Combat Start!</h1>\r\n        <FlexContainer\r\n          style={{\r\n            justifyContent: 'space-around',\r\n            marginTop: 32,\r\n            marginBottom: 40,\r\n          }}\r\n        >\r\n          {enemyParty.characters.map((c) => (\r\n            <FlexContainer\r\n              key={c.id}\r\n              style={{\r\n                background: '#c27a5d',\r\n                border: '2px solid rgba(255,255,255,0.8)',\r\n                height: 60,\r\n                width: 60,\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              <Icon\r\n                src={c.icon || ''}\r\n                shadow\r\n                fill={'white'}\r\n                size={60}\r\n                style={{ zIndex: 1, position: 'relative' }}\r\n              />\r\n            </FlexContainer>\r\n          ))}\r\n        </FlexContainer>\r\n      </div>,\r\n    )\r\n    setTimeout(() => {\r\n      close()\r\n      start()\r\n    }, 1500)\r\n    return () => {\r\n      reset()\r\n      clear()\r\n    }\r\n  }, [])\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Route, useHistory } from 'react-router-dom'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport { useModalContext } from '../contexts/ModalContext'\r\nimport { Theme } from '../theme'\r\n\r\nexport const makeRoute = (path: string, Component: React.FC) => (\r\n  <Route path={`/JSFTK_combat${path}`}>\r\n    <Component />\r\n  </Route>\r\n)\r\n\r\nexport const RouteController = () => {\r\n  const { encounters, currentEncounter, level } = useGameStateContext()\r\n  const history = useHistory()\r\n  const { open } = useModalContext()\r\n  useEffect(() => {\r\n    if (level > encounters.length - 1) {\r\n      open(\r\n        <div style={{ textAlign: 'center', fontFamily: Theme.titleFont }}>\r\n          <h1>You've Defeated the Lich! You did it!</h1>\r\n        </div>,\r\n      )\r\n      history.push('/JSFTK_combat')\r\n    } else if (\r\n      currentEncounter &&\r\n      (currentEncounter.type === 'combat' || currentEncounter.type === 'boss')\r\n    ) {\r\n      history.push('/JSFTK_combat/combat')\r\n    } else if (!currentEncounter && level > 0) {\r\n      history.push('/JSFTK_combat/party')\r\n    }\r\n  }, [currentEncounter, level])\r\n  return null\r\n}\r\n","import React, { useState, CSSProperties } from 'react'\r\nimport { withStyle } from 'styletron-react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Button } from '../../elements/button'\r\nimport { tShopEncounter } from '../../game/Encounter/type'\r\nimport { WeaponPreview } from '../WeaponPreview'\r\nimport { ArmorPreview } from '../ArmorPreview'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { ConsumablePreview } from '../ConsumablePreview'\r\nimport { Theme } from '../../theme'\r\n\r\nconst CardList = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  }\r\n})\r\n\r\ninterface ShopTabT {\r\n  key: string\r\n  label: string\r\n  render: (\r\n    encounter: tShopEncounter,\r\n    purchaseItem: (item: tArmor | tWeapon | tConsumable, cost: number) => void,\r\n  ) => JSX.Element\r\n}\r\nconst tabs: ShopTabT[] = [\r\n  {\r\n    key: 'all',\r\n    label: 'All',\r\n    render: (encounter: tShopEncounter, purchaseItem) => (\r\n      <FlexContainer $direction='column'>\r\n        <h3>Consumables</h3>\r\n        <CardList>\r\n          {encounter.items\r\n            .filter((i) => i.itemType === 'consumable')\r\n            .map((a) => (\r\n              <ConsumablePreview\r\n                item={a as tConsumable}\r\n                showBuyButton={true}\r\n                cost={encounter.costs[a.id]}\r\n                onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n              />\r\n            ))}\r\n        </CardList>\r\n        <h3>Weaopns</h3>\r\n        <CardList>\r\n          {encounter.items\r\n            .filter((i) => i.itemType === 'weapon')\r\n            .map((w) => (\r\n              <WeaponPreview\r\n                weapon={w as tWeapon}\r\n                showBuyButton={true}\r\n                cost={encounter.costs[w.id]}\r\n                onBuyClick={() => purchaseItem(w, encounter.costs[w.id])}\r\n              />\r\n            ))}\r\n        </CardList>\r\n        <h3>Armor</h3>\r\n        <CardList>\r\n          {encounter.items\r\n            .filter((i) => i.itemType === 'armor')\r\n            .map((a) => (\r\n              <ArmorPreview\r\n                armor={a as tArmor}\r\n                showBuyButton={true}\r\n                cost={encounter.costs[a.id]}\r\n                onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n              />\r\n            ))}\r\n        </CardList>\r\n      </FlexContainer>\r\n    ),\r\n  },\r\n  {\r\n    key: 'weapons',\r\n    label: 'Weaons',\r\n    render: (encounter: tShopEncounter, purchaseItem) => (\r\n      <CardList>\r\n        {encounter.items\r\n          .filter((i) => i.itemType === 'weapon')\r\n          .map((w) => (\r\n            <WeaponPreview\r\n              weapon={w as tWeapon}\r\n              showBuyButton={true}\r\n              cost={encounter.costs[w.id]}\r\n              onBuyClick={() => purchaseItem(w, encounter.costs[w.id])}\r\n            />\r\n          ))}\r\n      </CardList>\r\n    ),\r\n  },\r\n  {\r\n    key: 'armor',\r\n    label: 'Armor',\r\n    render: (encounter: tShopEncounter, purchaseItem) => (\r\n      <CardList>\r\n        {encounter.items\r\n          .filter((i) => i.itemType === 'armor')\r\n          .map((a) => (\r\n            <ArmorPreview\r\n              armor={a as tArmor}\r\n              showBuyButton={true}\r\n              cost={encounter.costs[a.id]}\r\n              onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n            />\r\n          ))}\r\n      </CardList>\r\n    ),\r\n  },\r\n  {\r\n    key: 'consumables',\r\n    label: 'Consumables',\r\n    render: (encounter: tShopEncounter, purchaseItem) => (\r\n      <CardList>\r\n        {encounter.items\r\n          .filter((i) => i.itemType === 'consumable')\r\n          .map((a) => (\r\n            <ConsumablePreview\r\n              item={a as tConsumable}\r\n              showBuyButton={true}\r\n              cost={encounter.costs[a.id]}\r\n              onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n            />\r\n          ))}\r\n      </CardList>\r\n    ),\r\n  },\r\n]\r\n\r\nexport interface ShopPropsT {}\r\nexport const Shop = (props: ShopPropsT) => {\r\n  const {} = props\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { purchaseItem } = usePartyContext()\r\n  const [activeTab, setActiveTab] = useState(\r\n    tabs.find((t) => t.key === 'all') as ShopTabT,\r\n  )\r\n  const active = (tab: ShopTabT): CSSProperties =>\r\n    tab.key === activeTab.key\r\n      ? {\r\n          borderColor: 'white',\r\n        }\r\n      : {}\r\n  return (\r\n    <BoxContainer\r\n      style={{ margin: '20px 20px 20px 0', flex: 1, minWidth: 762 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <FlexContainer style={{ alignItems: 'center' }}>\r\n        <FullContainer>\r\n          <h1 style={{ margin: 0, fontFamily: Theme.titleFont }}>\r\n            Black Market\r\n          </h1>\r\n        </FullContainer>\r\n        <FlexContainer>\r\n          {tabs.map((tab) => (\r\n            <Button style={active(tab)} onClick={() => setActiveTab(tab)}>\r\n              {tab.label}\r\n            </Button>\r\n          ))}\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n      <FlexContainer\r\n        $direction='column'\r\n        $full\r\n        style={{\r\n          overflow: 'auto',\r\n          marginTop: 10,\r\n          height: 'calc(100vh - 374px)',\r\n          overflowY: 'auto',\r\n        }}\r\n      >\r\n        {activeTab.render(currentEncounter as tShopEncounter, purchaseItem)}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Kefir from 'kefir'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { tShrineEncounter } from '../../game/Encounter/type'\r\nimport { SkillChecks } from '../SkillChecks'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { resolveCheck } from '../../game/Roll/util'\r\nimport { ZERO_REWARD } from '../../game/Encounter/constants'\r\nimport { commitRewards } from '../../game/Party/util'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ShrinePropsT {}\r\nexport const Shrine = (props: ShrinePropsT) => {\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { party, rawParty, updateParty } = usePartyContext()\r\n  const encounter = currentEncounter as tShrineEncounter\r\n  const [results, setResults] = useState<boolean[]>([])\r\n  const onClick = (c: tProcessedCharacter) => {\r\n    const stream = Kefir.sequentially(\r\n      200,\r\n      Array(encounter.rolls)\r\n        .fill(0)\r\n        .map((_, i) => ({\r\n          index: i,\r\n          result: resolveCheck(c, encounter.stat),\r\n        })),\r\n    )\r\n    stream.onValue((value) => {\r\n      setResults((r) => [...r, value.result])\r\n    })\r\n    stream.onEnd(() => {})\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (results.length === encounter.rolls) {\r\n      const rewards =\r\n        encounter.results[results.filter((r) => r === true).length - 1]\r\n      if (!rewards) {\r\n        return\r\n      }\r\n      updateParty(commitRewards(rawParty, rewards))\r\n    }\r\n  }, [results])\r\n\r\n  return (\r\n    <BoxContainer\r\n      style={{ margin: '20px 20px 20px 0', flex: 1 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <FlexContainer>\r\n        <FlexContainer $direction='column'>\r\n          <h1 style={{ margin: '0 0 24px 0', textTransform: 'capitalize' }}>\r\n            {encounter.stat} Shrine\r\n          </h1>\r\n          <div style={{ maxWidth: 300, marginBottom: 48 }}>\r\n            Shines are optional encounters that test one character in your\r\n            party's stats. Be careful, as if you fail, you may get a negative\r\n            outcome!\r\n          </div>\r\n          <FlexContainer>\r\n            <FlexContainer $direction='column'>\r\n              <SkillChecks\r\n                stat={encounter.stat}\r\n                rolls={encounter.rolls}\r\n                results={results}\r\n              />\r\n              <FlexContainer style={{ justifyContent: 'center' }}>\r\n                {party.characters.map((c) => (\r\n                  <Button\r\n                    onClick={() => onClick(c)}\r\n                    disabled={results.length > 0}\r\n                  >\r\n                    {c.name} ({c.stats[encounter.stat]})\r\n                  </Button>\r\n                ))}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n        <FlexContainer\r\n          $direction='column'\r\n          $full\r\n          style={{ padding: '86px 16px 0 16px' }}\r\n        >\r\n          {encounter.results.map((reward, index) => (\r\n            <FlexContainer\r\n              style={{\r\n                padding: 8,\r\n                alignItems: 'center',\r\n                marginBottom: 4,\r\n                background:\r\n                  results.length === encounter.rolls &&\r\n                  index + 1 === results.filter((r) => r === true).length\r\n                    ? 'rgba(144, 238, 144, 0.3)'\r\n                    : 'linear-gradient(90deg, rgba(255,255,255,0.3) 0%, rgba(255,255,255,0) 100%)',\r\n              }}\r\n            >\r\n              <span style={{ fontSize: 24 }}>{index + 1}</span>\r\n              <span\r\n                style={{\r\n                  display: 'inline-block',\r\n                  marginLeft: 8,\r\n                  textTransform: 'capitalize',\r\n                }}\r\n              >\r\n                {reward.gold > 0 && ` ${reward.gold} Gold`}\r\n                {reward.xp > 0 && ` +${reward.xp} Experience`}\r\n                {reward.status.length > 0 && ` ${reward.status}`}\r\n                {reward.items.length > 0 && ` Random Item`}\r\n                {JSON.stringify(reward) === JSON.stringify(ZERO_REWARD) &&\r\n                  ' No Effect'}\r\n              </span>\r\n            </FlexContainer>\r\n          ))}\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tEncounterType, tFloor } from '../../game/Encounter/type'\r\n\r\nimport Unknown from '../../icons/svg/delapouite/perspective-dice-six.svg'\r\nimport Shop from '../../icons/svg/delapouite/coins.svg'\r\nimport Combat from '../../icons/svg/lorc/crossed-swords.svg'\r\nimport Shrine from '../../icons/svg/lorc/divided-spiral.svg'\r\nimport Boss from '../../icons/svg/lorc/crowned-skull.svg'\r\nimport Reward from '../../icons/svg/lorc/laurel-crown.svg'\r\nimport { Icon } from '../Icon'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface EncounterHistoryPropsT {}\r\n\r\nexport const EncounterHistory = (props: EncounterHistoryPropsT) => {\r\n  const { floors, floor, level } = useGameStateContext()\r\n  const chosenEncounters = (floor: tFloor) =>\r\n    floor.encounters.map((e) => (e.value ? e[e.value] : undefined))\r\n\r\n  const getIcon = (type: tEncounterType | undefined): string => {\r\n    switch (type) {\r\n      case 'combat':\r\n        return Combat\r\n      case 'shop':\r\n        return Shop\r\n      case 'shrine':\r\n        return Shrine\r\n      case 'boss':\r\n        return Boss\r\n      case 'reward':\r\n        return Reward\r\n      default:\r\n        return Unknown\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {floors.map((f, fi) => (\r\n        <FlexContainer\r\n          key={f.id}\r\n          style={{ justifyContent: 'space-evenly', padding: 32 }}\r\n        >\r\n          {chosenEncounters(f).map((e, i) => (\r\n            <FlexContainer key={i} $full>\r\n              <BoxContainer\r\n                substyle={{\r\n                  padding: 4,\r\n                  borderColor:\r\n                    level === i && fi === floor\r\n                      ? 'white'\r\n                      : e === undefined\r\n                      ? Theme.lightBgColor\r\n                      : '#8b9e96',\r\n                }}\r\n              >\r\n                <Icon\r\n                  src={getIcon(\r\n                    i === f.encounters.length - 2\r\n                      ? 'boss'\r\n                      : i === f.encounters.length - 1\r\n                      ? 'reward'\r\n                      : e?.type,\r\n                  )}\r\n                  size={32}\r\n                  fill={e === undefined ? 'rgba(255,255,255,0.5)' : '#8b9e96'}\r\n                />\r\n              </BoxContainer>\r\n              {i !== chosenEncounters(f).length - 1 && (\r\n                <FlexContainer\r\n                  $direction='column'\r\n                  $full\r\n                  style={{ justifyContent: 'center' }}\r\n                >\r\n                  <FlexContainer\r\n                    $full\r\n                    style={{\r\n                      maxHeight: 1,\r\n                      background:\r\n                        e === undefined ? Theme.lightBgColor : 'white',\r\n                      borderTop: '1px solid black',\r\n                      borderBottom: '1px solid black',\r\n                    }}\r\n                  />\r\n                </FlexContainer>\r\n              )}\r\n            </FlexContainer>\r\n          ))}\r\n        </FlexContainer>\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\n\r\nexport const BossRewards = () => {\r\n  return (\r\n    <FlexContainer>\r\n      <h1>Boss Rewards</h1>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Shop } from '../Shop'\r\nimport { Shrine } from '../Shrine'\r\nimport { EncounterHistory } from '../EncounterHistory'\r\nimport { BossRewards } from '../BossRewards'\r\n\r\nexport const NonCombatEncounter = () => {\r\n  const { currentEncounter, currentChoice } = useGameStateContext()\r\n  return (\r\n    <FlexContainer $direction='column' $full style={{ marginLeft: '60px' }}>\r\n      {currentEncounter && currentEncounter.type === 'shop' && <Shop />}\r\n      {currentEncounter && currentEncounter.type === 'shrine' && <Shrine />}\r\n      {currentEncounter && currentEncounter.type === 'reward' && (\r\n        <BossRewards />\r\n      )}\r\n      {!currentEncounter && currentChoice && <EncounterHistory />}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tEncounterChoice } from '../../game/Encounter/type'\r\nimport { getChoiceText } from '../../game/Encounter/constants'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Button } from '../../elements/button'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ChoicePropsT {\r\n  currentChoice: tEncounterChoice\r\n}\r\n\r\nexport const Choice = (props: ChoicePropsT) => {\r\n  const { currentChoice } = props\r\n  const {\r\n    level,\r\n    previousChoice,\r\n    encounters,\r\n    chooseCurrent,\r\n  } = useGameStateContext()\r\n  return (\r\n    <FlexContainer $direction='column' style={{ paddingTop: 24 }}>\r\n      <h3\r\n        style={{\r\n          margin: '0 0 16px 0',\r\n          color: 'white',\r\n          textAlign: 'center',\r\n          fontWeight: 'normal',\r\n          fontFamily: Theme.titleFont,\r\n        }}\r\n      >\r\n        You have a choice.\r\n      </h3>\r\n      <span\r\n        style={{\r\n          color: 'rgba(255,255,255,0.7)',\r\n          marginBottom: 24,\r\n          padding: 8,\r\n        }}\r\n      >\r\n        {getChoiceText(currentChoice, previousChoice)}\r\n      </span>\r\n      {encounters.length - 1 !== level && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          <Button onClick={() => chooseCurrent('left')}>Go Left</Button>\r\n          <Button onClick={() => chooseCurrent('right')}>Go Right</Button>\r\n        </FlexContainer>\r\n      )}\r\n      {encounters.length - 1 === level && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          <Button onClick={() => chooseCurrent('right')}>Proceed</Button>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","export const stringArr = (arr: string[]): string => {\r\n  return arr.reduce((text, item, index) => {\r\n    const f = index === 0\r\n    const l = index === arr.length - 1 && !f\r\n    return `${text}${!f && arr.length > 2 ? ', ' : ' '}${\r\n      l ? ' and ' : ''\r\n    }${item}`\r\n  })\r\n}\r\n","import React from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Button } from '../../elements/button'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tShopEncounter } from '../../game/Encounter/type'\r\n\r\nexport interface ShopPropsT {\r\n  currentEncounter: tShopEncounter\r\n}\r\nexport const Shop = (props: ShopPropsT) => {\r\n  const { currentEncounter } = props\r\n  const { nextLevel } = useGameStateContext()\r\n  return (\r\n    <FlexContainer $direction='column' style={{ justifyContent: 'center' }}>\r\n      {currentEncounter.type === 'shop' && (\r\n        <>\r\n          <h3\r\n            style={{\r\n              margin: '0 0 16px 0',\r\n              color: 'white',\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            You found a shop!\r\n          </h3>\r\n          <span\r\n            style={{\r\n              color: 'rgba(255,255,255,0.7)',\r\n              marginBottom: 24,\r\n            }}\r\n          >\r\n            Amidst your journey, you discover a merchant, a traveling salemen\r\n            with all manor of wares to assist in your adventure.\r\n          </span>\r\n        </>\r\n      )}\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        <Button onClick={() => nextLevel()}>Travel Deeper</Button>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { Button } from '../../elements/button'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tRewardEncounter } from '../../game/Encounter/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface RewardPropsT {\r\n  currentEncounter: tRewardEncounter\r\n}\r\n\r\nexport const Reward = (props: RewardPropsT) => {\r\n  const { currentEncounter } = props\r\n  const { floor, floors, nextFloor } = useGameStateContext()\r\n  const history = useHistory()\r\n  const { open } = useModalContext()\r\n  const onClick = () => {\r\n    if (floor === floors.length - 1) {\r\n      history.push('/JSFTK_combat')\r\n      open(\r\n        <div style={{ textAlign: 'center', fontFamily: Theme.titleFont }}>\r\n          <h1>You've Defeated the Lich! You did it!</h1>\r\n        </div>,\r\n      )\r\n    } else {\r\n      nextFloor()\r\n    }\r\n  }\r\n  return (\r\n    <FlexContainer $direction='column' style={{ justifyContent: 'center' }}>\r\n      <h3 style={{ fontFamily: Theme.titleFont, fontWeight: 'normal' }}>\r\n        You've cleansed an evil.\r\n      </h3>\r\n      <span style={{ marginBottom: 40, padding: 8 }}>\r\n        You've defeated the Lich Lorde of the Forest, but you discoved what he\r\n        was guarding. A tomb, sealed for centuries, a relic of civilizations\r\n        past.\r\n      </span>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        <Button onClick={onClick}>Enter the Tomb</Button>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Button } from '../../elements/button'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tShrineEncounter } from '../../game/Encounter/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ShrinePropsT {\r\n  currentEncounter: tShrineEncounter\r\n}\r\n\r\nexport const Shrine = (props: ShrinePropsT) => {\r\n  const { currentEncounter } = props\r\n  const { nextLevel } = useGameStateContext()\r\n  return (\r\n    <FlexContainer $direction='column' style={{ justifyContent: 'center' }}>\r\n      <h3 style={{ fontFamily: Theme.titleFont, fontWeight: 'normal' }}>\r\n        You've discoved a secret shrine.\r\n      </h3>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        <Button onClick={() => nextLevel()}>Travel Deeper</Button>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Choice } from './Choice'\r\nimport { Shop } from './Shop'\r\nimport {\r\n  tRewardEncounter,\r\n  tShopEncounter,\r\n  tShrineEncounter,\r\n} from '../../game/Encounter/type'\r\nimport { Reward } from './Reward'\r\nimport { Shrine } from './Shrine'\r\n\r\nexport const EncounterActions = () => {\r\n  const {\r\n    currentChoice,\r\n    currentEncounter,\r\n    chooseCurrent,\r\n  } = useGameStateContext()\r\n  useEffect(() => {\r\n    if (currentChoice?.left.type === 'reward') {\r\n      chooseCurrent('left')\r\n    }\r\n  }, [])\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{\r\n        background:\r\n          'linear-gradient(0deg, rgba(0,7,12,0) 0%, rgba(0,7,12,0.68) 10%, rgba(0,7,18,1) 35%)',\r\n        marginRight: '60px',\r\n        padding: '16px 8px',\r\n        width: 300,\r\n        color: 'rgba(255,255,255,0.8)',\r\n      }}\r\n    >\r\n      {currentChoice && !currentEncounter && (\r\n        <Choice currentChoice={currentChoice} />\r\n      )}\r\n      {currentEncounter && (\r\n        <>\r\n          {currentEncounter.type === 'shop' && (\r\n            <Shop currentEncounter={currentEncounter as tShopEncounter} />\r\n          )}\r\n          {currentEncounter.type === 'reward' && (\r\n            <Reward currentEncounter={currentEncounter as tRewardEncounter} />\r\n          )}\r\n          {currentEncounter.type === 'shrine' && (\r\n            <Shrine currentEncounter={currentEncounter as tShrineEncounter} />\r\n          )}\r\n        </>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { usePartyContext } from '../contexts/PartyContext'\r\nimport { FlexContainer, FullContainer } from '../elements/flex'\r\nimport { Button } from '../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { AppHeader } from '../components/AppHeader'\r\nimport { PartyResources } from '../components/PartyResources'\r\nimport { useUIContext } from '../contexts/UIContext'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport { getSkillResult } from '../game/Skill/util'\r\nimport { commitSkillResults } from '../game/Skill/committer'\r\nimport { NonCombatEncounter } from '../components/NonCombatEncounter'\r\nimport { EncounterActions } from '../components/EncounterActions'\r\n\r\nexport const Party = () => {\r\n  const { party, rawParty, updateParty } = usePartyContext()\r\n  const { level } = useGameStateContext()\r\n  const history = useHistory()\r\n  const {\r\n    setPlayerCanEquipItem,\r\n    setOnCharacterConsumableClick,\r\n  } = useUIContext()\r\n\r\n  useEffect(() => {\r\n    setPlayerCanEquipItem(true)\r\n    setOnCharacterConsumableClick((character, consumableIndex) => {\r\n      if (!character) return\r\n      const consumable = character.consumables[consumableIndex]\r\n      const targets =\r\n        consumable.skill.targetType === 'self'\r\n          ? [character]\r\n          : consumable.skill.targetType === 'party'\r\n          ? party.characters\r\n          : []\r\n      const result = getSkillResult(character, targets, consumable.skill)\r\n      const parties = commitSkillResults(rawParty, rawParty, {})(result)\r\n      updateParty(parties.playerParty)\r\n    })\r\n    return () => {\r\n      setPlayerCanEquipItem(false)\r\n      setOnCharacterConsumableClick((c, i, item) => {})\r\n    }\r\n  }, [party, rawParty, updateParty])\r\n\r\n  return (\r\n    <FlexContainer $full $direction='column' style={{ height: '100%' }}>\r\n      <AppHeader\r\n        left={\r\n          <>\r\n            <Button\r\n              onClick={() => history.push('/JSFTK_combat')}\r\n              style={{ borderBottom: 0 }}\r\n            >\r\n              Restart\r\n            </Button>\r\n            <FullContainer />\r\n          </>\r\n        }\r\n        right={\r\n          <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n            <PartyResources />\r\n          </FlexContainer>\r\n        }\r\n      >\r\n        <FlexContainer\r\n          $full\r\n          style={{\r\n            color: 'white',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          Level {level}\r\n        </FlexContainer>\r\n      </AppHeader>\r\n      <FlexContainer $full $direction='column'>\r\n        <FlexContainer $full>\r\n          <NonCombatEncounter />\r\n          <EncounterActions />\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { FullContainer, FlexContainer } from '../elements/flex'\r\nimport { BoxContainer } from '../elements/box'\r\nimport { usePartyContext } from '../contexts/PartyContext'\r\nimport { Gauge } from '../components/Gauge'\r\nimport { RedButton } from '../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { INITIAL_STATE } from '../state/party'\r\nimport { Monospace } from '../elements/monospace'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport {\r\n  tProcessedCharacter,\r\n  tCharacter,\r\n  tCharacterClass,\r\n} from '../game/Character/type'\r\nimport { makeCharacter } from '../game/Character/util'\r\nimport { STAT_BONUS_KEYS } from '../game/Stats/constants'\r\nimport { Theme } from '../theme'\r\n\r\nexport const Start = () => {\r\n  const {\r\n    party,\r\n    updateParty,\r\n    upsertCharacter,\r\n    findRawCharacter,\r\n  } = usePartyContext()\r\n  const history = useHistory()\r\n  const { reset } = useGameStateContext()\r\n  useEffect(() => {\r\n    updateParty(INITIAL_STATE)\r\n    reset()\r\n  }, [])\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{ height: '100%', overflow: 'hidden' }}\r\n    >\r\n      <FullContainer />\r\n      <FlexContainer $full>\r\n        <FullContainer />\r\n        <BoxContainer\r\n          style={{ maxWidth: 340, marginRight: 8 }}\r\n          substyle={{\r\n            padding: 16,\r\n            background: Theme.darkBgColor,\r\n            lineHeight: 1.4,\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          <strong\r\n            style={{\r\n              marginTop: 8,\r\n              marginBottom: 16,\r\n              fontSize: 20,\r\n              display: 'inline-block',\r\n            }}\r\n          >\r\n            Choose your starting classes.\r\n          </strong>\r\n          <p>\r\n            Each character class has different stats and starting items. Your\r\n            stats determine your character's chances of succeeding in various\r\n            checks during combat.\r\n          </p>\r\n          <p>\r\n            For example, if your character has 76 Strength, then each Strength\r\n            check has a 76% chance of succeeding.\r\n          </p>\r\n          <p>\r\n            So if an attack has 4 Strength checks at 76% each, then that attack\r\n            has a 33% chance of being \"perfect.\" Some attacks will have special\r\n            bonus actions when they are \"perfect.\" Such as splash damage, or\r\n            status effects.\r\n          </p>\r\n          <p>\r\n            More power attacks may require more checks or use negative-offset\r\n            stat values\r\n          </p>\r\n        </BoxContainer>\r\n        <BoxContainer>\r\n          <h1\r\n            style={{\r\n              marginTop: 8,\r\n              textAlign: 'center',\r\n              fontFamily: Theme.titleFont,\r\n              textShadow: '1px 3px 3px black',\r\n            }}\r\n          >\r\n            Choose your Party!\r\n          </h1>\r\n          <FlexContainer>\r\n            {party.characters.map((character) => (\r\n              <FlexContainer\r\n                key={character.id}\r\n                $direction='column'\r\n                style={{ padding: 4 }}\r\n              >\r\n                <StartCharacterCard\r\n                  character={character}\r\n                  onChange={(characterId, updater) => {\r\n                    const rc = findRawCharacter(characterId)\r\n                    if (rc) {\r\n                      upsertCharacter(updater(rc))\r\n                    }\r\n                  }}\r\n                />\r\n              </FlexContainer>\r\n            ))}\r\n          </FlexContainer>\r\n          <FlexContainer>\r\n            <FullContainer />\r\n            <RedButton\r\n              style={{ margin: '16px 0 12px 0' }}\r\n              onClick={() => {\r\n                history.push('/JSFTK_combat/party')\r\n              }}\r\n            >\r\n              Begin Adventure\r\n            </RedButton>\r\n            <FullContainer />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        <FullContainer />\r\n      </FlexContainer>\r\n      <FullContainer />\r\n      <Monospace\r\n        style={{\r\n          fontWeight: 'normal',\r\n          color: 'rgba(255,255,255,0.5)',\r\n          fontSize: 12,\r\n        }}\r\n      >\r\n        alpha v0.0.4.2\r\n      </Monospace>\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface StartCharacterCardPropsT {\r\n  character: tProcessedCharacter\r\n  onChange: (\r\n    characterId: string,\r\n    updater: (c: tCharacter) => tCharacter,\r\n  ) => void\r\n}\r\nexport const StartCharacterCard = (props: StartCharacterCardPropsT) => {\r\n  const { character, onChange } = props\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <input\r\n        style={{\r\n          background: Theme.mediumBgColor,\r\n          border: '1px solid rgba(255,255,255,0.4)',\r\n          padding: 8,\r\n          color: 'white',\r\n          marginBottom: 8,\r\n        }}\r\n        value={character.name}\r\n        onChange={(e) => {\r\n          onChange(character.id, (c) => ({\r\n            ...c,\r\n            name: e.target.value,\r\n          }))\r\n        }}\r\n      />\r\n      <select\r\n        style={{\r\n          background: Theme.mediumBgColor,\r\n          border: '1px solid rgba(255,255,255,0.4)',\r\n          padding: 8,\r\n          color: 'white',\r\n          marginBottom: 8,\r\n        }}\r\n        value={character.class}\r\n        onChange={(e) => {\r\n          onChange(character.id, (c) => ({\r\n            ...makeCharacter(e.target.value as tCharacterClass),\r\n            id: character.id,\r\n            name: character.name,\r\n          }))\r\n        }}\r\n      >\r\n        <option value='executioner'>Executioner</option>\r\n        <option value='ranger'>Ranger</option>\r\n        <option value='student'>Student</option>\r\n        <option value='patrician'>Patrician</option>\r\n        <option value='drifter'>Drifter</option>\r\n      </select>\r\n      <FlexContainer $direction='column' style={{ padding: 8 }}>\r\n        {STAT_BONUS_KEYS.map((key) => (\r\n          <FlexContainer key={key} style={{ height: 20 }}>\r\n            <div\r\n              style={{\r\n                width: 60,\r\n                fontSize: 12,\r\n                textTransform: 'capitalize',\r\n                marginRight: 4,\r\n              }}\r\n            >\r\n              {key}\r\n            </div>\r\n            <FullContainer>\r\n              <Gauge\r\n                max={100}\r\n                value={character.stats[key]}\r\n                color='white'\r\n                height={15}\r\n              />\r\n            </FullContainer>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { CONSUMABLE_ITEM_ICONS, CONSUMABLE_ITEM_COLORS } from '../../icons/maps'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { considateConsumableListToStack } from '../../game/Consumable/util'\r\nimport { Theme } from '../../theme'\r\n\r\nconst HEIGHT = 64\r\nexport interface PartyCharacterConsumablesPropsT {\r\n  character: tProcessedCharacter\r\n  consumables: tConsumable[]\r\n  onClick?: (consumable: tConsumable, index: number) => void\r\n}\r\nexport const PartyCharacterConsumables = (\r\n  props: PartyCharacterConsumablesPropsT,\r\n) => {\r\n  const { character, consumables, onClick } = props\r\n  const stack = useMemo(() => considateConsumableListToStack(consumables), [\r\n    consumables,\r\n  ])\r\n  const onStackClick = (consumable: tConsumable) => {\r\n    let index = undefined\r\n    consumables.forEach((c, i) => {\r\n      if (c.id === consumable.id) index = i\r\n    })\r\n    if (consumable.skill.healing && !(character.healthOffset === 0))\r\n      return onClick && onClick(consumable, index || 0)\r\n  }\r\n  const filler = Array(10 - stack.length).fill(null)\r\n\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ flexWrap: 'wrap', height: HEIGHT }}\r\n    >\r\n      {stack.map((s) => (\r\n        <PartyCharacterConsumable\r\n          key={s.consumable.id}\r\n          character={character}\r\n          consumable={s.consumable}\r\n          count={s.count}\r\n          onClick={onStackClick}\r\n        />\r\n      ))}\r\n      {filler.map((f, i) => (\r\n        <ConsumableBox key={i} />\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\ninterface ConsumableBoxPropsT {\r\n  children?: JSX.Element\r\n  onClick?: () => void\r\n}\r\nconst ConsumableBox = (props: ConsumableBoxPropsT) => {\r\n  const { children, onClick } = props\r\n  return (\r\n    <FlexContainer\r\n      onClick={() => onClick && onClick()}\r\n      style={{\r\n        height: HEIGHT / 2,\r\n        width: HEIGHT / 2,\r\n        boxSizing: 'border-box',\r\n        border: '1px solid rgba(0,0,0,0.5)',\r\n        background: Theme.otherGrey,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        cursor: onClick ? 'pointer' : 'default',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      {children}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface PartyCharacterConsumablePropsT {\r\n  consumable: tConsumable\r\n  character: tProcessedCharacter\r\n  count: number\r\n  onClick?: (consumable: tConsumable) => void\r\n}\r\nexport const PartyCharacterConsumable = (\r\n  props: PartyCharacterConsumablePropsT,\r\n) => {\r\n  const { character, consumable, count, onClick } = props\r\n  return (\r\n    <HoverToolTip\r\n      content={\r\n        <PartyCharacterConsumableTooltip\r\n          character={character}\r\n          consumable={consumable}\r\n        />\r\n      }\r\n    >\r\n      <ConsumableBox onClick={() => onClick && onClick(consumable)}>\r\n        <>\r\n          <Icon\r\n            src={CONSUMABLE_ITEM_ICONS[consumable.cid]}\r\n            fill={CONSUMABLE_ITEM_COLORS[consumable.cid]}\r\n            size={24}\r\n          />\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: -2,\r\n              right: 1,\r\n            }}\r\n          >\r\n            {count}\r\n          </div>\r\n        </>\r\n      </ConsumableBox>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface PartyCharacterConsumableTooltipProps {\r\n  character: tProcessedCharacter\r\n  consumable: tConsumable\r\n}\r\nexport const PartyCharacterConsumableTooltip = (\r\n  props: PartyCharacterConsumableTooltipProps,\r\n) => {\r\n  const { character, consumable } = props\r\n  return (\r\n    <BoxContainer>\r\n      <strong>{consumable.name}</strong>\r\n      {consumable.skill.healing && (\r\n        <div>Heal for {character.stats.consumableHealthGainOffset} HP</div>\r\n      )}\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { styled } from 'styletron-react'\r\nimport { Icon } from '../Icon'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tBaseStats } from '../../game/Stats/type'\r\nimport { Theme } from '../../theme'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\n\r\ninterface CharacterStatPropsT {\r\n  statKey: keyof tBaseStats\r\n  character: tProcessedCharacter\r\n}\r\nconst CharacterStat = (props: CharacterStatPropsT) => {\r\n  const { statKey, character } = props\r\n  return (\r\n    <HoverToolTip\r\n      flex\r\n      content={\r\n        <BoxContainer style={{ textTransform: 'capitalize' }}>\r\n          {statKey}\r\n        </BoxContainer>\r\n      }\r\n    >\r\n      <ResourceE $color={getStatColor(character, statKey)}>\r\n        <Icon\r\n          src={STAT_ICONS[statKey] || ''}\r\n          fill={getStatColor(character, statKey)}\r\n          size={14}\r\n          style={{ marginRight: 3, marginTop: 0 }}\r\n        />\r\n        {character.stats[statKey]}\r\n      </ResourceE>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface StatsProps {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Stats = (props: StatsProps) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      style={{ paddingTop: 4, background: Theme.darkBgColor, paddingLeft: 24 }}\r\n    >\r\n      <CharacterStat statKey='vigor' character={character} />\r\n      <CharacterStat statKey='strength' character={character} />\r\n      <CharacterStat statKey='intelligence' character={character} />\r\n      <CharacterStat statKey='dexterity' character={character} />\r\n      <CharacterStat statKey='charisma' character={character} />\r\n      <CharacterStat statKey='agility' character={character} />\r\n      <CharacterStat statKey='luck' character={character} />\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nconst ResourceE = styled('div', (props: any) => ({\r\n  height: 15,\r\n  color: props.$color,\r\n  fontSize: '15px',\r\n  padding: '0px 4px',\r\n  lineHeight: '14px',\r\n  flex: 1,\r\n  textAlign: 'center',\r\n  background: Theme.darkBgColor,\r\n  display: 'flex',\r\n}))\r\n\r\nconst getStatColor = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n): string => {\r\n  const a = character.stats[key]\r\n  const b = character.rawStats[key]\r\n  if (a > b) return Theme.evasionColor\r\n  if (b > a) return 'lightcoral'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Theme } from '../../theme'\r\nexport interface NamePropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Name = (props: NamePropsT) => {\r\n  const { character } = props\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        marginTop: -3,\r\n        marginRight: -3,\r\n        marginLeft: -3,\r\n        paddingLeft: 52,\r\n        paddingRight: 8,\r\n        background: Theme.otherGrey2,\r\n        height: 24,\r\n        alignItems: 'center',\r\n        lineHeight: '24px',\r\n        borderBottom: '1px solid rgba(255,255,255,0.1)',\r\n        boxShadow: '0px 4px 5px black',\r\n        zIndex: 2,\r\n      }}\r\n    >\r\n      <FullContainer\r\n        style={{\r\n          fontFamily: Theme.titleFont,\r\n          textShadow: '0px 0px 2px black',\r\n          flex: 1,\r\n          fontSize: 18,\r\n          lineHeight: '20px',\r\n        }}\r\n      >\r\n        {character.name}\r\n      </FullContainer>\r\n      <div\r\n        style={{\r\n          fontSize: 12,\r\n          color: 'rgba(255,255,255,0.3)',\r\n        }}\r\n      >\r\n        {character.class}\r\n      </div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Inventory from '../../icons/svg/lorc/knapsack.svg'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Tooltip } from '../Tooltip'\r\nimport { PartyActiveCharacter } from '../PartyActiveCharacter'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { Hover } from '../Hover'\r\nimport { Icon } from '../Icon'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { animated, useSpring } from 'react-spring'\r\n\r\nexport interface ActionsPropsT {\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n}\r\n\r\nexport const Actions = (props: ActionsPropsT) => {\r\n  const { character, canEquip } = props\r\n  const { party } = usePartyContext()\r\n  const {\r\n    openCharacterInventoryId,\r\n    setOpenCharacterInventoryId,\r\n  } = useUIContext()\r\n  const inventoryOpen = character.id === openCharacterInventoryId\r\n  const inventoryStyle = useSpring({\r\n    opacity: inventoryOpen ? 1 : 0,\r\n    config: { tension: 500 },\r\n  })\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{ justifyContent: 'center' }}\r\n    >\r\n      <FlexContainer\r\n        $full\r\n        style={{ alignItems: 'center', justifyContent: 'center' }}\r\n      >\r\n        <Tooltip\r\n          isOpen={inventoryOpen}\r\n          direction='up'\r\n          distance={60}\r\n          background='rgba(0,0,0,0.7)'\r\n          arrow\r\n          content={\r\n            <animated.div\r\n              style={{ minWidth: 887, minHeight: 435, ...inventoryStyle }}\r\n            >\r\n              {inventoryOpen && (\r\n                <PartyActiveCharacter\r\n                  character={character}\r\n                  party={party}\r\n                  canEquip={canEquip}\r\n                  onRequestClose={() => {\r\n                    setOpenCharacterInventoryId(undefined)\r\n                  }}\r\n                />\r\n              )}\r\n            </animated.div>\r\n          }\r\n        >\r\n          <Hover delay={0}>\r\n            {({ isHovering }) => (\r\n              <Icon\r\n                src={Inventory}\r\n                fill={\r\n                  isHovering ? 'rgba(255,255,255,1)' : 'rgba(255,255,255,0.7)'\r\n                }\r\n                size={18}\r\n                shadow\r\n                onClick={() => {\r\n                  if (character.id === openCharacterInventoryId) {\r\n                    return setOpenCharacterInventoryId(undefined)\r\n                  }\r\n                  setOpenCharacterInventoryId(character.id)\r\n                }}\r\n                style={{ padding: 6, cursor: 'pointer' }}\r\n              />\r\n            )}\r\n          </Hover>\r\n        </Tooltip>\r\n      </FlexContainer>\r\n      {/*<FlexContainer\r\n        $full\r\n        style={{ alignItems: 'center', justifyContent: 'center' }}\r\n      >\r\n        <Icon\r\n          src={Details}\r\n          fill={'rgba(255,255,255,0.7)'}\r\n          size={18}\r\n          shadow\r\n          style={{ padding: 6, cursor: 'pointer' }}\r\n        />\r\n      </FlexContainer>*/}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { noneg } from '../../util'\r\nimport { usePrevious } from '../../hooks/usePrevious'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface HealthPropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Health = (props: HealthPropsT) => {\r\n  const { character } = props\r\n  const health = noneg(character.health)\r\n  const [storedHealth, setStoredHealth] = useState(0)\r\n\r\n  useEffect(() => {\r\n    setStoredHealth(health)\r\n  }, [health])\r\n\r\n  return (\r\n    <div style={{ position: 'relative', zIndex: 3 }}>\r\n      <span\r\n        style={{\r\n          padding: '4px 0',\r\n          paddingLeft: 44,\r\n          fontSize: 56,\r\n          height: 56,\r\n          minWidth: 86,\r\n          lineHeight: '64px',\r\n          color: Theme.healthRedColor,\r\n          fontFamily: 'New Rocker',\r\n          display: 'flex',\r\n          textAlign: 'center',\r\n          textShadow: '1px 1px 3px black',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <Spring\r\n          from={{ hp: storedHealth || 0 }}\r\n          to={{ hp: health }}\r\n          config={{ friction: 70, mass: 5, tension: 300, clamp: true }}\r\n        >\r\n          {(hpp) => <span style={{}}>{Math.floor(hpp.hp)}</span>}\r\n        </Spring>\r\n      </span>\r\n      <ToastContainer />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { XPGauge, HealthGauge } from '../Gauge'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { styled } from 'styletron-react'\r\nimport { TagPreview } from '../TagPreview'\r\nimport { PartyCharacterConsumables } from '../PartyCharacterConsumables'\r\nimport { Stats } from './Stats'\r\nimport { Name } from './Name'\r\nimport { Actions } from './Actions'\r\nimport { Health } from './Health'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { usePlayerCharacterNotifications } from '../../hooks/usePlayerCharacterNotifications'\r\nimport { Icon } from '../Icon'\r\nimport { CHARACTER_CLASS_ICONS } from '../../icons/maps'\r\nimport { CHARACTER_CLASS_COLORS } from '../../game/Character/constants'\r\nimport { Theme } from '../../theme'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { ZERO_STATS } from '../../game/Stats/constants'\r\nimport { HoverHexBadge, HexBadge } from '../../elements/shapes'\r\n\r\nexport interface PartyCharacterProps {\r\n  character: tProcessedCharacter\r\n  selected?: boolean\r\n  showActions?: boolean\r\n  onClick?: () => void\r\n  onConsumableClick?: (consumable: tConsumable, index: number) => void\r\n  push: (contents: JSX.Element, type?: string) => void\r\n}\r\nconst Wrapper = styled('div', (props: any) => {\r\n  const { $active, $targeted } = props\r\n  return {\r\n    margin: 10,\r\n    display: 'flex',\r\n    position: 'relative',\r\n    transform: $active ? 'scale(1.05)' : 'scale(0.97)',\r\n    transition: 'all 0.4s',\r\n    userSelect: 'none',\r\n  }\r\n})\r\n\r\nconst Halo = styled('div', (props: any) => {\r\n  const { $active, $targeted, $light } = props\r\n  const left = $light ? -20 : 0\r\n  const leftR = $light ? -10 : 0\r\n  return {\r\n    boxShadow: $active\r\n      ? `${left}px 0px 20px ${$light ? 'rgba(255,255,255,0.4)' : 'white'}`\r\n      : $targeted\r\n      ? `${leftR}px 0px 20px red`\r\n      : 'none',\r\n  }\r\n})\r\n\r\nexport const PartyCharacter = (props: PartyCharacterProps) => {\r\n  const {\r\n    character,\r\n    selected,\r\n    showActions = true,\r\n    onConsumableClick,\r\n    push,\r\n  } = props\r\n  const { playerCanEquipItem } = useUIContext()\r\n  const { activeRound, activeCharacter } = useCombatContext()\r\n  const targetIds = activeRound?.targetResults.map((r) => r.target.id)\r\n  const active = activeCharacter?.id === character.id\r\n  const targeted = targetIds?.includes(character.id)\r\n  usePlayerCharacterNotifications(character, push)\r\n  return (\r\n    <Wrapper\r\n      $active={active}\r\n      $targeted={targeted}\r\n      style={{\r\n        opacity: character.health <= 0 ? 0.5 : 1,\r\n      }}\r\n    >\r\n      <HexBadge\r\n        size={110}\r\n        color={CHARACTER_CLASS_COLORS[character.class] || Theme.darkBgColor}\r\n        style={{\r\n          padding: 8,\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          transition: 'all 0.3s',\r\n          marginRight: -58,\r\n          marginTop: -12,\r\n          zIndex: 3,\r\n        }}\r\n        childStyle={{\r\n          marginTop: -20,\r\n        }}\r\n      >\r\n        <Icon\r\n          src={CHARACTER_CLASS_ICONS[character.class]}\r\n          size={72}\r\n          shadow\r\n          style={{ marginRight: -4 }}\r\n          fill={selected ? 'white' : 'rgba(255,255,255,0.5)'}\r\n        />\r\n      </HexBadge>\r\n      <Halo\r\n        $active={activeCharacter?.id === character.id}\r\n        $targeted={targetIds?.includes(character.id)}\r\n      >\r\n        <BoxContainer\r\n          style={{\r\n            borderWidth: 2,\r\n            transition: 'all 1s',\r\n          }}\r\n          substyle={{\r\n            padding: 0,\r\n            minWidth: 312,\r\n            background: Theme.darkBgColorSolid,\r\n          }}\r\n        >\r\n          <FlexContainer style={{ border: '2px solid black' }}>\r\n            <FlexContainer $full $direction='column'>\r\n              <Name character={character} />\r\n              <FlexContainer style={{ background: Theme.mediumBgColor }}>\r\n                <Health character={character} />\r\n                <FlexContainer $full style={{ maxWidth: 160, minWidth: 160 }}>\r\n                  <PartyCharacterConsumables\r\n                    character={character}\r\n                    consumables={character.consumables}\r\n                    onClick={onConsumableClick}\r\n                  />\r\n                </FlexContainer>\r\n                <FlexContainer $full $direction='column'>\r\n                  {showActions && (\r\n                    <Actions\r\n                      character={character}\r\n                      canEquip={playerCanEquipItem}\r\n                    />\r\n                  )}\r\n                </FlexContainer>\r\n              </FlexContainer>\r\n              <FullContainer />\r\n              <FlexContainer $direction='column' style={{ paddingLeft: 38 }}>\r\n                <HealthGauge\r\n                  character={character}\r\n                  style={{ borderRight: 'none' }}\r\n                />\r\n                <XPGauge\r\n                  character={character}\r\n                  style={{ borderRight: 'none' }}\r\n                />\r\n              </FlexContainer>\r\n              <HoverHexBadge\r\n                position={{ bottom: 17, left: 88 }}\r\n                size={40}\r\n                rotate\r\n                childStyle={{ paddingTop: 1 }}\r\n                content={<BoxContainer>Character Level</BoxContainer>}\r\n              >\r\n                <span\r\n                  style={{\r\n                    color: 'rgba(98, 128, 116,1)',\r\n                    fontSize: 24,\r\n                    lineHeight: '28px',\r\n                  }}\r\n                >\r\n                  {character.level}\r\n                </span>\r\n              </HoverHexBadge>\r\n              <Stats character={character} />\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n      </Halo>\r\n      <FlexContainer\r\n        style={{\r\n          position: 'absolute',\r\n          top: '-24px',\r\n          right: '4px',\r\n        }}\r\n      >\r\n        <>\r\n          {character.status.map((status) => (\r\n            <TagPreview direction='up' status={status} />\r\n          ))}\r\n          {character.immunities.map((status, i) => (\r\n            <TagPreview\r\n              key={i}\r\n              immunity={true}\r\n              status={{\r\n                type: status,\r\n                immunities: [],\r\n                stack: 0,\r\n                stats: ZERO_STATS,\r\n                duration: -1,\r\n              }}\r\n            />\r\n          ))}\r\n        </>\r\n      </FlexContainer>\r\n      <HoverHexBadge\r\n        position={{\r\n          bottom: 67,\r\n          left: -3,\r\n        }}\r\n        rotate\r\n        size={32}\r\n        childStyle={{\r\n          color: Theme.physicalColor,\r\n          fontSize: 18,\r\n          paddingTop: 0,\r\n        }}\r\n        content={<BoxContainer>Armor</BoxContainer>}\r\n      >\r\n        <span>{character.stats.armor}</span>\r\n      </HoverHexBadge>\r\n      <HoverHexBadge\r\n        position={{\r\n          bottom: 36,\r\n          left: -3,\r\n        }}\r\n        rotate\r\n        size={32}\r\n        childStyle={{\r\n          color: Theme.magicColor,\r\n          fontSize: 18,\r\n          paddingTop: 0,\r\n        }}\r\n        content={<BoxContainer>Magic Resistance</BoxContainer>}\r\n      >\r\n        <span>{character.stats.resistance}</span>\r\n      </HoverHexBadge>\r\n      <HoverHexBadge\r\n        position={{\r\n          bottom: 18,\r\n          left: 23,\r\n        }}\r\n        rotate\r\n        size={32}\r\n        childStyle={{\r\n          color: Theme.evasionColor,\r\n          fontSize: 18,\r\n          paddingTop: 0,\r\n        }}\r\n        content={<BoxContainer>Evasion</BoxContainer>}\r\n      >\r\n        <span>{character.stats.evasion}</span>\r\n      </HoverHexBadge>\r\n      <HoverHexBadge\r\n        direction='up'\r\n        rotate={true}\r\n        content={<BoxContainer>Weapon Damage</BoxContainer>}\r\n        position={{\r\n          bottom: -5,\r\n          left: 50,\r\n        }}\r\n        size={44}\r\n        childStyle={{\r\n          color:\r\n            character.weapon.damage.type === 'physical'\r\n              ? Theme.physicalColor\r\n              : Theme.magicColor,\r\n          fontSize: 24,\r\n          paddingTop: 0,\r\n        }}\r\n      >\r\n        <span>\r\n          {(character.weapon.damage.value +\r\n            character.stats.attackDamageOffset) *\r\n            character.stats.attackDamageModifier}\r\n        </span>\r\n      </HoverHexBadge>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { PartyCharacter } from '../PartyCharacter'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { RedButton } from '../../elements/button'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { LocalToastRp } from '../../contexts/LocalToastContext'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\n\r\nexport interface PlayerPartyPropsT {\r\n  party: tProcessedParty\r\n  onCharacterClick?: (character: tProcessedCharacter) => void\r\n  onConsumableClick?: (\r\n    character: tProcessedCharacter,\r\n    consumableIndex: number,\r\n    consumable: tConsumable,\r\n  ) => void\r\n}\r\nexport const PlayerParty = (props: PlayerPartyPropsT) => {\r\n  const { party, onCharacterClick, onConsumableClick } = props\r\n  const {\r\n    activeCharacter,\r\n    selectedSkill,\r\n    next,\r\n    onSkillSelect,\r\n  } = useCombatContext()\r\n  const { currentEncounter } = useGameStateContext()\r\n\r\n  const showConfirmButton = (c: tProcessedCharacter) =>\r\n    selectedSkill &&\r\n    activeCharacter &&\r\n    c.health > 0 &&\r\n    ((selectedSkill.targetType === 'self' && c.id === activeCharacter.id) ||\r\n      selectedSkill.targetType === 'ally')\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          alignItems: 'flex-end',\r\n          cursor: selectedSkill?.targetType === 'party' ? 'pointer' : 'default',\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <FlexContainer\r\n            $direction='column'\r\n            key={c.id}\r\n            style={{ height: 177, justifyContent: 'flex-end' }}\r\n          >\r\n            {showConfirmButton(c) && (\r\n              <FlexContainer style={{ justifyContent: 'center' }}>\r\n                <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n                  <RedButton onClick={() => next(c)} $direction='up'>\r\n                    {c.id === activeCharacter.id\r\n                      ? 'Target Self'\r\n                      : 'Target Ally'}\r\n                  </RedButton>\r\n                </div>\r\n              </FlexContainer>\r\n            )}\r\n            <LocalToastRp>\r\n              {({ push }) => (\r\n                <PartyCharacter\r\n                  push={push}\r\n                  selected={\r\n                    currentEncounter &&\r\n                    currentEncounter.type !== 'shop' &&\r\n                    activeCharacter &&\r\n                    c &&\r\n                    c.id === activeCharacter.id\r\n                  }\r\n                  character={c}\r\n                  onClick={() => onCharacterClick && onCharacterClick(c)}\r\n                  onConsumableClick={(consumable, index) => {\r\n                    try {\r\n                      if (!c || !consumable || index === undefined) return\r\n                      if (onConsumableClick) {\r\n                        onConsumableClick(c, index, consumable)\r\n                      }\r\n                      if (c && c.id === activeCharacter.id) {\r\n                        onSkillSelect(consumable.skill, index)\r\n                      }\r\n                    } catch (e) {}\r\n                  }}\r\n                />\r\n              )}\r\n            </LocalToastRp>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && selectedSkill.targetType === 'party' && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n            <RedButton onClick={() => next(party)}>Target Party</RedButton>\r\n          </div>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useGameStateContext } from '../GameStateContext'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { makeParty } from '../../game/Party/util'\r\nimport { tCombatEncounter } from '../../game/Encounter/type'\r\nimport { CombatContextProvider } from '.'\r\n\r\nexport interface LinkedCombatContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const LinkedCombatContext = (\r\n  props: LinkedCombatContextProviderPropsT,\r\n) => {\r\n  const { children } = props\r\n  const { currentEncounter, level, floor } = useGameStateContext()\r\n  const [combatParty, setCombatParty] = useState<tParty>(\r\n    makeParty(level, floor),\r\n  )\r\n  useEffect(() => {\r\n    if (currentEncounter && (currentEncounter as tCombatEncounter).party)\r\n      setCombatParty((currentEncounter as tCombatEncounter).party)\r\n  }, [currentEncounter])\r\n\r\n  return (\r\n    <CombatContextProvider\r\n      enemyParty={combatParty}\r\n      setEnemyParty={setCombatParty}\r\n      onRequestNewParty={() => {}}\r\n    >\r\n      {children}\r\n    </CombatContextProvider>\r\n  )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { getEncounterBg } from '../../game/Encounter/constants'\r\n\r\nexport interface AppBgPropsT {\r\n  children: JSX.Element | JSX.Element[]\r\n}\r\nexport const AppBg = (props: AppBgPropsT) => {\r\n  const { children } = props\r\n  const { floor, level } = useGameStateContext()\r\n  const bg = useMemo(() => {\r\n    return getEncounterBg(level, floor)\r\n  }, [floor, level])\r\n\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        background: `url(${bg.bg}) center center fixed no-repeat`,\r\n        backgroundSize: 'cover',\r\n        transition: 'all 2s',\r\n      }}\r\n    >\r\n      <FlexContainer\r\n        $full\r\n        $direction='column'\r\n        style={{ background: bg.overlay, transition: 'all 2s' }}\r\n      >\r\n        {children}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ForestBg from './assets/img/forests/flat-forestred.jpg'\r\nimport Forest2 from './assets/img/forests/8.png'\r\nimport Dungeon1 from './assets/img/dungeon/4.png'\r\nimport { Switch } from 'react-router-dom'\r\nimport { Combat } from './domain/Combat'\r\nimport { CombatLogContextProvider } from './contexts/CombatLogContext'\r\nimport { ModalContextProvider } from './contexts/ModalContext'\r\nimport { makeRoute, RouteController } from './routes'\r\nimport { Party } from './domain/Party'\r\nimport { Start } from './domain/Start'\r\nimport { UIContextProvider, useUIContext } from './contexts/UIContext'\r\nimport { usePartyContext } from './contexts/PartyContext'\r\nimport { PlayerParty } from './components/PlayerParty'\r\nimport { FlexContainer, FullContainer } from './elements/flex'\r\nimport { LinkedCombatContext } from './contexts/CombatContext/context'\r\nimport { AppBg } from './components/AppBg'\r\n\r\nconst CombatDomain = () => {\r\n  return (\r\n    <CombatLogContextProvider>\r\n      <Combat />\r\n    </CombatLogContextProvider>\r\n  )\r\n}\r\n\r\nconst GlobalCharacters = () => {\r\n  const { party } = usePartyContext()\r\n  const { onCharacterConsumableClick } = useUIContext()\r\n  return (\r\n    <div style={{ marginBottom: 30 }}>\r\n      <PlayerParty\r\n        party={party}\r\n        onConsumableClick={(c, i, item) => {\r\n          if (onCharacterConsumableClick) {\r\n            onCharacterConsumableClick(c, i, item)\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const App = () => {\r\n  return (\r\n    <ModalContextProvider>\r\n      <LinkedCombatContext>\r\n        <UIContextProvider>\r\n          <AppBg>\r\n            <RouteController />\r\n            <FullContainer>\r\n              <Switch>\r\n                {makeRoute('/party', Party)}\r\n                {makeRoute('/combat', CombatDomain)}\r\n                {makeRoute('/', Start)}\r\n              </Switch>\r\n            </FullContainer>\r\n            <GlobalCharacters />\r\n          </AppBg>\r\n        </UIContextProvider>\r\n      </LinkedCombatContext>\r\n    </ModalContextProvider>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './index.css'\n\nimport { Provider as StyletronProvider, DebugEngine } from 'styletron-react'\nimport { Client as Styletron } from 'styletron-engine-atomic'\nimport { Provider as ReduxProvider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { makeStore } from './state'\nimport { PartyContextProvider } from './contexts/PartyContext'\nimport { GameStateContextProvider } from './contexts/GameStateContext'\n\nconst debug = process.env.NODE_ENV === 'production' ? void 0 : new DebugEngine()\nconst engine: Styletron = new Styletron()\nconst store = makeStore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n        <GameStateContextProvider>\n          <PartyContextProvider>\n            <Router>\n              <App />\n            </Router>\n          </PartyContextProvider>\n        </GameStateContextProvider>\n      </StyletronProvider>\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport party from './party'\r\nimport game from './game'\r\n\r\nexport const makeStore = () =>\r\n  createStore(combineReducers({ party, game }), compose(applyMiddleware(thunk)))\r\n"],"sourceRoot":""}