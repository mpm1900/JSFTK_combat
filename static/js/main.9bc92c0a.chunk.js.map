{"version":3,"sources":["assets/img/flat-forestred.jpg","icons/svg/lorc/wolf-head.svg","icons/svg/lorc/imp-laugh.svg","icons/svg/delapouite/orc-head.svg","icons/svg/lorc/bee.svg","icons/svg/delapouite/pirate-captain.svg","icons/svg/delapouite/bandit.svg","icons/svg/lorc/laurel-crown.svg","icons/svg/delapouite/heart-beats.svg","icons/svg/delapouite/biceps.svg","icons/svg/lorc/brain.svg","icons/svg/delapouite/eye-target.svg","icons/svg/lorc/juggler.svg","icons/svg/lorc/sprint.svg","icons/svg/lorc/clover.svg","icons/svg/delapouite/convergence-target.svg","icons/svg/lorc/star-swirl.svg","icons/svg/sbed/targeted.svg","icons/svg/lorc/dodging.svg","icons/svg/delapouite/sticky-boot.svg","icons/svg/lorc/biohazard.svg","icons/svg/lorc/high-shot.svg","icons/svg/delapouite/shield-impact.svg","icons/svg/lorc/fire-zone.svg","icons/svg/lorc/ubisoft-sun.svg","icons/svg/lorc/flat-hammer.svg","icons/svg/lorc/hammer-drop.svg","icons/svg/lorc/bordered-shield.svg","icons/svg/lorc/robe.svg","icons/svg/lorc/scale-mail.svg","icons/svg/lorc/lightning-shield.svg","icons/svg/delapouite/robin-hood-hat.svg","icons/svg/lorc/pointy-hat.svg","icons/svg/delapouite/herbs-bundle.svg","icons/svg/lorc/split-cross.svg","icons/svg/delapouite/skills.svg","icons/svg/lorc/knapsack.svg","icons/svg/delapouite/light-backpack.svg","icons/svg/delapouite/leather-armor.svg","util/getRandom.ts","util/noneg.ts","objects/Stats.ts","functions/Entity.ts","objects/Status.ts","objects/Traits.ts","functions/Stats.ts","functions/Traits.ts","functions/makeCheck.ts","objects/skills/smash.ts","objects/skills/shockwave.ts","objects/weapons/blacksmiths_hammer.ts","objects/skills/shot.ts","objects/skills/snipe_shot.ts","objects/weapons/hunting_bow.ts","objects/skills/surge.ts","objects/skills/area_blast.ts","objects/weapons/scholars_book.ts","objects/skills/alto.ts","objects/skills/dazzle.ts","objects/Weapon.ts","objects/weapons/simple_lute.ts","objects/skills/taunt.ts","objects/armor/simple_iron_shield.ts","objects/Armor.ts","objects/skills/enemy/bite.ts","objects/skills/protect.ts","objects/weapons/dusty_book.ts","objects/skills/ritardando.ts","objects/skills/symphony.ts","objects/weapons/index.ts","objects/weapons/barbat.ts","objects/armor/adventure_boots.ts","objects/armor/explorers_boots.ts","objects/armor/explorers_cloak.ts","objects/armor/explorers_hat.ts","objects/armor/fur_armor.ts","objects/armor/fur_boots.ts","objects/armor/index.ts","objects/armor/adventure_cloak.ts","objects/armor/performers_boots.ts","objects/armor/performers_vest.ts","objects/enemies/timberwolf.ts","objects/skills/enemy/slap.ts","objects/enemies/vale_imp.ts","objects/skills/enemy/impale.ts","objects/enemies/beastman.ts","objects/consumables/godsbeard.ts","objects/Item.ts","functions/Character.ts","functions/Weapon.ts","functions/Roll.ts","objects/skills/enemy/sting.ts","objects/enemies/bee.ts","objects/skills/enemy/stab.ts","objects/enemies/buccaneer.ts","objects/enemies/bandit.ts","objects/Party.ts","functions/Party.ts","objects/Skills.ts","functions/Damage.ts","functions/Skill.ts","functions/CombatCommitter.ts","state/util.ts","hooks/useActions.ts","state/party/index.ts","contexts/PartyContext/index.tsx","types/CombatQueue.ts","contexts/ModalContext/reducer.ts","contexts/ModalContext/index.tsx","elements/flex.ts","elements/button.tsx","components/Icon/index.tsx","components/Hover/index.tsx","elements/box.tsx","components/StatsPreview/index.tsx","icons/maps.tsx","components/ArmorPreview/index.tsx","components/Tooltip/index.tsx","hooks/useOnClickOutside.ts","elements/badge.tsx","components/SkillChecks/index.tsx","components/WeaponPreview/index.tsx","components/ItemPreview/index.tsx","components/CombatVictoryModal/index.tsx","contexts/CombatContext/index.tsx","functions/AI.ts","components/RoundResultRenderer/index.tsx","components/SkillPreview/index.tsx","components/CombatActions/index.tsx","elements/monospace.tsx","objects/Character.ts","hooks/usePrevious.ts","components/Gauge/index.tsx","components/TagPreview/index.tsx","components/EnemyCharacter/index.tsx","components/CombatParty/index.tsx","components/AppHeader/index.tsx","components/PartyResources/index.tsx","types/Tree.ts","state/game/index.ts","contexts/GameStateContext/index.tsx","components/CombatQueue/index.tsx","contexts/CombatLogContext/util.tsx","contexts/CombatLogContext/index.tsx","components/CombatLog/index.tsx","contexts/UIContext/index.tsx","domain/Combat.tsx","routes/index.tsx","domain/Party.tsx","domain/Start.tsx","components/CharacterImage/index.tsx","functions/Consumable.ts","components/PartyCharacterConsumables/index.tsx","components/PartyCharacter/Stats.tsx","components/PartyCharacter/Name.tsx","components/PartyActiveCharacter/StatBar.tsx","components/PartyActiveCharacter/Items.tsx","components/PartyActiveCharacter/Name.tsx","components/PartyActiveCharacter/Image.tsx","components/PartyActiveCharacter/ArmorList.tsx","components/PartyActiveCharacter/WeaponList.tsx","components/PartyActiveCharacter/MenuSelect.tsx","components/PartyActiveCharacter/HoverArea.tsx","components/PartyActiveCharacter/index.tsx","components/PartyCharacter/Actions.tsx","components/PartyCharacter/Health.tsx","components/PartyCharacter/index.tsx","components/PlayerParty/index.tsx","App.tsx","serviceWorker.ts","index.tsx","state/index.ts","icons/svg/delapouite/coins.svg","icons/svg/lorc/broadsword.svg","icons/svg/lorc/heavy-timer.svg","icons/svg/delapouite/g-clef.svg","icons/svg/lorc/shieldcomb.svg","icons/svg/delapouite/chest-armor.svg","icons/svg/delapouite/viking-shield.svg","icons/svg/lorc/leather-boot.svg","icons/svg/lorc/visored-helm.svg"],"names":["module","exports","getRandom","items","Math","floor","random","length","noneg","value","ZERO_STATS","vigor","strength","intelligence","perception","talent","agility","luck","armor","resistance","evasion","healthRegen","healthOffset","health","criticalChance","damageModifier","damageOffset","damageReflection","weaknessModifier","goldModifier","consumableHealthGainOffset","CLASS_STARTING_STATS","blacksmith","hunter","scholar","bard","enemy","DAMAGE_BONUS_KEYS","DEFENSE_BONUS_KEYS","STAT_BONUS_KEYS","STAT_KEY_LABELS","makeEntity","name","id","v4","STATUS_EFFECTS","bleeding","type","canStack","duration","traits","persist","commitChance","committedTraits","stats","burning","frozen","poisoned","targeted","description","dazed","evasive","protected","ZERO_TRAIT","combineStats","reduce","p","c","combineTraits","getTraitsFromObjects","parents","makeCheck","key","offset","SMASH","targetType","damage","healing","isBasicAttack","rolls","perfectSplash","perfectPierce","perfectStatus","SHOCKWAVE","BLACKSMITHS_HAMMER","itemType","rarity","twoHand","attackType","skills","SHOT","SNIPE_SHOT","HUNTING_BOW","SURGE","AREA_BLAST","SCHOLARS_BOOK","ALTO","DAZZLE","CLASS_STARTING_WEAPONS","TAUNT","SIMPLE_IRON_SHIELD","resource","CLASS_STARTING_ARMOR","BITE","PROTECT","DUSTY_BOOK","RITARDANDO","SYMPHONY","ALL_WEAPONS","ADVENTURE_BOOTS","EXPLORERS_BOOTS","EXPLORERS_CLOAK","EXPLORERS_HAT","FUR_ARMOR","FUR_BOOTS","ALL_ARMOR","TIMBERWOLF","isCharacter","icon","Wolf","partyId","level","xp","class","consumables","status","immunities","weapon","possibleRewards","gold","SLAP","VALE_IMP","Imp","IMPALE","BEASTMAN","BeastMan","GODSBEARD","skill","ITEM_RARITY_COLORS","common","uncommon","rare","mythic","CLASS_STARTING_CONSUMABLES","CHARACTER_RESOURCES","checkForProcessedCharacter","character","processed","Error","getStatusEffects","map","processCharacter","statusEffects","getTraits","combinedTrait","processWeapon","getSkillsFromObjects","getSkills","hVigor","startingHealth","rawStats","dead","makeCharacter","characterClass","decrementStatusDurations","filter","hasStatus","statusType","s","includes","addMultipleStatus","statusTypes","char","statusEffect","existingStatus","find","findStatus","i","hasImmunity","t","stack","addStatus","getCharacterStat","statValue","getDamageResistance","damageType","addStatusAndTags","commitDamage","resolveCheck","check","roll","DiceRoll","input","result","total","averageTotal","maxTotal","minTotal","output","getPassedCount","results","r","didAllPass","every","STING","INFECTIOUS_STING","BEE","Bee","STAB","BUCCANEER","Icon","BANDIT","Bandit","PLAYER_PARTY_ID","ENEMY_COMBOS_BY_LEVEL","0","1","2","3","4","5","isParty","e","checkForProcessedParty","party","characters","forEach","makeParty","console","log","findCharacterInParty","updateCharacter","characterId","updater","processParty","getRolledRewards","checkedCharacter","index","undefined","rewards","getRewardsFromCharacter","PERFECT_DISPLAY_INFO","splash","pierce","heal","getSplashDamage","rawDamage","resolveSkillTarget","target","makeSkillTarget","getPerfectText","perfectKeys","base","getPerfectKeys","getSkillDamage","splashDamage","res","pre","text","source","damageResistances","round","getSkillResults","targets","consumableIndex","sourceResult","rollResults","passedCount","perfect","criticalHitResult","criticalSuccess","accuracySuccess","addedStatus","getSourceSkillResult","dodgeResult","isEvasive","dodgeSuccess","totalDamage","reflectedDamage","healthRegenMaximum","regeneratedHealth","blockedDamage","willDie","getTargetSkillResult","localUpdater","commitSkillResults","enemyParty","commitRoundActions","sourceParty","targetParty","localUpdate","splashDamageResistance","makeReducer","core","initialState","state","action","coreFn","useActions","actions","dispatch","useDispatch","useMemo","bindActionCreators","actionCreators","payload","updateParty","upsertCharacter","deleteCharacter","jack","INITIAL_STATE","defaultContextValue","rawParty","activeCharacter","findCharacter","findRawCharacter","setActiveCharacter","equipItem","item","unequipItem","PartyContext","React","createContext","PartyContextProvider","props","children","useSelector","useState","activeCharacterId","setActiveCharacterId","Provider","existingArmor","a","equipArmor","existingWeapon","equipWeapon","unequipArmor","usePartyContext","useContext","makeCombatQueue","sort","b","getMin","queue","Object","keys","Number","POSITIVE_INFINITY","consolidateQueue","min","getFirst","isOpen","contents","callback","blocking","styles","OPEN","CLOSE","style","reducer","coreFunction","ModalContext","open","close","setBlocking","setPayload","setContents","setCallback","setStyles","useModalContext","getContextValue","Modal","setAppElement","ModalContextProvider","reducerValue","useReducer","context","onRequestClose","content","backgroundColor","color","width","margin","bottom","borderColor","modal","overlay","zIndex","FlexContainer","styled","display","flexDirection","$direction","flex","$full","FullContainer","Button","cursor","background","boxShadow","textShadow","border","outline","padding","RedButton","withStyle","ConfirmButton","borderTop","borderBottom","animationDirection","animationIterationCount","animationName","src","size","fill","shadow","onClick","loading","setLoading","svg","setSvg","useEffect","fetch","then","className","height","dangerouslySetInnerHTML","__html","Hover","delay","internalHovering","setInternalHovering","isHovering","setIsHovering","guid","setGuid","useLayoutEffect","setTimeout","onMouseEnter","preventDefault","stopPropagation","onMouseLeave","BoxContainer","substyle","tag","Element","rest","boxSizing","defense_key_colors","StatsPreview","fontSize","textTransform","STATI_ICONS","Vigor","Strength","Brain","Awareness","Juggler","Agility","Clover","accuracy","Accuracy","STATUS_ICONS","Dazed","Targeted","Evasive","Protect","SpeedDown","Poisoned","SKILL_ICONS","Shot","SnipeShot","Surge","AreaBast","Dazzle","Smash","Shockwave","Taunt","Alto","ARMOR_TYPE_ICONS","MagicArmor","ClothArmor","Armor","Shield","MagicShield","Footwear","Hat","MagicHat","Helmet","RESOURCE_ICONS","Weapon","offhand","body","head","feet","CONSUMABLE_ITEM_ICONS","Godsbeard","CONSUMABLE_ITEM_COLORS","ArmorPreview","showEquipButton","onEquipClick","rarityColor","from","Color","darken","rgb","toString","to","gradient","minWidth","marginBottom","marginRight","fontWeight","marginLeft","minHeight","Tooltip","direction","tagName","arrow","HoverToolTip","ClickToolTip","setIsOpen","ref","useRef","handler","listener","event","current","contains","document","addEventListener","removeEventListener","useOnClickOutside","v","Div","transform","Badge","withWrapper","position","$absolute","$size","alignItems","justifyContent","lineHeight","borderRadius","$color","top","$top","$bottom","right","$right","left","$left","HoverBadge","badgeProps","distance","SkillChecks","label","SkillCheck","opacity","getColor","X","getDamageColor","WeaponPreview","basicAttack","ItemPreivew","CombatVictoryModal","history","useHistory","consolidatedRewards","reward","consolidateRewards","setItems","first","goldMultiplier","commitRewards","textAlign","Gold","XP","marginTop","push","defaultValue","selectedSkill","selectedTargets","selectedConsumableIndex","roundResults","activeRound","isRunning","isRenderingResult","onSkillSelect","onTargetsSelect","onConsumableSelect","reset","start","next","commit","CombatContext","useCombatContext","CombatContextProvider","setEnemyParty","onRequestNewParty","resultCommitter","setIsRunning","setIsRenderingResult","setQueue","roundId","setRoundId","setRoundResults","setActiveRound","selectedTarget","setSelectedTarget","setSelectedSkill","setSelectedConsumableIndex","completeRound","updatedCharacters","validateQueue","shiftQueue","useCallback","parties","playerParty","targetedCharacters","getSkillTargetOptions","getAIAction","execEnemyTurn","alert","nextTarget","roundTarget","RoundResultRenderer","isModal","RoundResult","isDone","setIsDone","rounds","stream","Kefir","sequentially","onValue","onEnd","later","SkillPreview","perfectChance","damageString","max","getSkillDamageRange","CombatActions","Fragment","Monospace","fontFamily","Monodiv","CHARACTER_XP_MAX","usePrevious","Gauge","percentage","oldPercentage","borderLeft","config","friction","mass","tension","maxWidth","overflow","HealthGauge","XPGauge","TagPreview","EnemyCharacter","$selected","$active","transition","previousHealth","borderWidth","hp","clamp","hpp","CombatParty","AppHeader","PartyResources","paddingRight","generateTree","TreeGen","node","completed","rootNodesNumber","childNodesNumber","hasChildRate","maxLevel","complete","tree","activeNodeId","parentId","processTree","onNextClick","isActive","canNav","gProps","RESET","setActiveNodeId","setNodeAsCompleted","_tree","processedTree","activeNode","setActiveNode","setNodeCompleted","GameStateContext","useGameStateContext","GameStateContextProvider","game","gsc","_setActiveNode","nodeId","CombatQueue","sortedIds","getSortedIds","bigList","count","Array","_","NEGATIVE_INFINITY","getMax","widthCoef","alt","paddingLeft","Span","SkillSpan","CombatLogContext","combatLog","clear","useCombatLogContext","CombatLogContextProvider","setCombatLog","deadLog","setDeadLog","NameSpan","isUserParty","isEnemyParty","NameSpanBuilder","line","dLog","latestRounds","baseRound","subTarget","CombatLog","scrollRef","scrollIntoView","behavior","playerCanEquipItem","openCharacterInventoryId","onCharacterConsumableClick","setPlayerCanEquipItem","setOpenCharacterInventoryId","setOnCharacterConsumableClick","fn","UIContext","useUIContext","UIContextProvider","_setOnCharacterConsumableClick","Combat","makeRoute","path","Component","Party","consumable","backgroundSize","data","Start","onChange","rc","StartCharacterCard","CharacterImage","considateConsumableListToStack","updateStackItem","PartyCharacterConsumables","onStackClick","filler","flexWrap","f","ConsumableBox","HEIGHT","PartyCharacterConsumable","PartyCharacterConsumableTooltip","CharacterStat","statKey","ResourceE","getStatColor","Stats","Name","StatBar","paddingTop","paddingBottom","ItemRow","userSelect","Items","setActiveItem","onHover","canUnequip","ArmorItem","Image","ArmorList","canEquip","activeItemId","setActiveItemId","localeCompare","WeaponItem","WeaponList","ACTIVE_CHARACTER_MENU_KEYS","render","Weapons","MenuSelect","activeKey","onActiveKeyChange","option","HoverArea","activeItem","foundArmor","PartyActiveCharacter","activeMenuKey","setActiveMenuKey","activeOption","o","maxHeight","Actions","Inventory","Details","Health","setStoredHealth","Wrapper","PartyCharacter","selected","showActions","onConsumableClick","borderRight","PlayerParty","onCharacterClick","showConfirmButton","CombatDomain","PartyDomain","GlobalCharacters","App","rawEnemyParty","setRawEnemyParty","ForestBg","Boolean","window","location","hostname","match","engine","Styletron","store","createStore","combineReducers","compose","applyMiddleware","thunk","ReactDOM","StrictMode","debug","debugAfterHydration","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9bc92c0a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flat-forestred.951e7322.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wolf-head.4e7bf362.svg\";","module.exports = __webpack_public_path__ + \"static/media/imp-laugh.b3e04d0d.svg\";","module.exports = __webpack_public_path__ + \"static/media/orc-head.ff410513.svg\";","module.exports = __webpack_public_path__ + \"static/media/bee.7b0a0467.svg\";","module.exports = __webpack_public_path__ + \"static/media/pirate-captain.daa0fd39.svg\";","module.exports = __webpack_public_path__ + \"static/media/bandit.f798765b.svg\";","module.exports = __webpack_public_path__ + \"static/media/laurel-crown.00b6e803.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-beats.6b1fff9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/biceps.e62c221f.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain.ce65603a.svg\";","module.exports = __webpack_public_path__ + \"static/media/eye-target.4c5ae680.svg\";","module.exports = __webpack_public_path__ + \"static/media/juggler.1188c0be.svg\";","module.exports = __webpack_public_path__ + \"static/media/sprint.968b443a.svg\";","module.exports = __webpack_public_path__ + \"static/media/clover.df6a0d57.svg\";","module.exports = __webpack_public_path__ + \"static/media/convergence-target.0d2998bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/star-swirl.3045bd1f.svg\";","module.exports = __webpack_public_path__ + \"static/media/targeted.b4ce8dd7.svg\";","module.exports = __webpack_public_path__ + \"static/media/dodging.3c689d6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/sticky-boot.f097559f.svg\";","module.exports = __webpack_public_path__ + \"static/media/biohazard.cdfb567d.svg\";","module.exports = __webpack_public_path__ + \"static/media/high-shot.eed9def8.svg\";","module.exports = __webpack_public_path__ + \"static/media/shield-impact.54fdc5c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire-zone.42e13657.svg\";","module.exports = __webpack_public_path__ + \"static/media/ubisoft-sun.30335592.svg\";","module.exports = __webpack_public_path__ + \"static/media/flat-hammer.dff14efb.svg\";","module.exports = __webpack_public_path__ + \"static/media/hammer-drop.120a92c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/bordered-shield.56c12b47.svg\";","module.exports = __webpack_public_path__ + \"static/media/robe.5b61ecba.svg\";","module.exports = __webpack_public_path__ + \"static/media/scale-mail.cb5ff7d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/lightning-shield.85367254.svg\";","module.exports = __webpack_public_path__ + \"static/media/robin-hood-hat.6bab1449.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointy-hat.d042ac98.svg\";","module.exports = __webpack_public_path__ + \"static/media/herbs-bundle.e02bcec1.svg\";","module.exports = __webpack_public_path__ + \"static/media/split-cross.fa0be1a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/skills.60519e24.svg\";","module.exports = __webpack_public_path__ + \"static/media/knapsack.62049a62.svg\";","module.exports = __webpack_public_path__ + \"static/media/light-backpack.6ad63d45.svg\";","module.exports = __webpack_public_path__ + \"static/media/leather-armor.f3d5462f.svg\";","export const getRandom = <T>(items: T[]) =>\r\n  items[Math.floor(Math.random() * items.length)]\r\n","export const noneg = (value: number) => (value > 0 ? value : 0)\r\n","import { StatsT, CharacterClassT } from '../types'\r\n\r\nexport const ZERO_STATS: StatsT = {\r\n  vigor: 0,\r\n  strength: 0,\r\n  intelligence: 0,\r\n  perception: 0,\r\n  talent: 0,\r\n  agility: 0,\r\n  luck: 0,\r\n\r\n  armor: 0,\r\n  resistance: 0,\r\n  evasion: 0,\r\n  healthRegen: 0,\r\n\r\n  healthOffset: 0,\r\n  health: 0,\r\n\r\n  criticalChance: 0,\r\n  damageModifier: 0,\r\n  damageOffset: 0,\r\n  damageReflection: 0,\r\n  weaknessModifier: 0,\r\n  goldModifier: 0,\r\n  consumableHealthGainOffset: 0,\r\n}\r\n\r\nexport const CLASS_STARTING_STATS: Record<CharacterClassT, StatsT> = {\r\n  blacksmith: {\r\n    strength: 76,\r\n    vigor: 80,\r\n    intelligence: 40,\r\n    perception: 52,\r\n    talent: 72,\r\n    agility: 56,\r\n    luck: 50,\r\n    armor: 2,\r\n    resistance: 0,\r\n    evasion: 7,\r\n    healthOffset: 0,\r\n    health: 0,\r\n    healthRegen: 0,\r\n    criticalChance: 5,\r\n    damageModifier: 0,\r\n    damageOffset: 0,\r\n    damageReflection: 0,\r\n    weaknessModifier: 0,\r\n    goldModifier: 0,\r\n    consumableHealthGainOffset: 15,\r\n  },\r\n  hunter: {\r\n    strength: 52,\r\n    vigor: 66,\r\n    intelligence: 46,\r\n    perception: 78,\r\n    talent: 64,\r\n    agility: 78,\r\n    luck: 50,\r\n    armor: 1,\r\n    resistance: 0,\r\n    evasion: 20,\r\n    healthOffset: 0,\r\n    health: 0,\r\n    healthRegen: 0,\r\n    criticalChance: 5,\r\n    damageModifier: 0,\r\n    damageOffset: 0,\r\n    damageReflection: 0,\r\n    weaknessModifier: 0,\r\n    goldModifier: 0,\r\n    consumableHealthGainOffset: 15,\r\n  },\r\n  scholar: {\r\n    strength: 42,\r\n    vigor: 60,\r\n    intelligence: 78,\r\n    perception: 66,\r\n    talent: 70,\r\n    agility: 70,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 1,\r\n    evasion: 13,\r\n    healthOffset: 0,\r\n    health: 0,\r\n    healthRegen: 0,\r\n    criticalChance: 5,\r\n    damageModifier: 0,\r\n    damageOffset: 0,\r\n    damageReflection: 0,\r\n    weaknessModifier: 0,\r\n    goldModifier: 0,\r\n    consumableHealthGainOffset: 15,\r\n  },\r\n  bard: {\r\n    strength: 44,\r\n    vigor: 50,\r\n    intelligence: 70,\r\n    perception: 68,\r\n    talent: 78,\r\n    agility: 68,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 1,\r\n    evasion: 11,\r\n    healthOffset: 0,\r\n    health: 0,\r\n    healthRegen: 0,\r\n    criticalChance: 5,\r\n    damageModifier: 0,\r\n    damageOffset: 0,\r\n    damageReflection: 0,\r\n    weaknessModifier: 0,\r\n    goldModifier: 0,\r\n    consumableHealthGainOffset: 15,\r\n  },\r\n  enemy: ZERO_STATS,\r\n}\r\n\r\nexport const DAMAGE_BONUS_KEYS: (keyof StatsT)[] = [\r\n  'goldModifier',\r\n  'damageOffset',\r\n  'damageModifier',\r\n  'criticalChance',\r\n]\r\nexport const DEFENSE_BONUS_KEYS: (keyof StatsT)[] = [\r\n  'armor',\r\n  'resistance',\r\n  'evasion',\r\n  'healthRegen',\r\n  'damageReflection',\r\n]\r\nexport const HEALTH_FOCUS_BONUS_KEYS: (keyof StatsT)[] = ['health']\r\nexport const STAT_BONUS_KEYS: (keyof StatsT)[] = [\r\n  'vigor',\r\n  'strength',\r\n  'intelligence',\r\n  'perception',\r\n  'talent',\r\n  'agility',\r\n  'luck',\r\n]\r\n\r\nexport const STAT_KEY_LABELS: Record<keyof StatsT, string> = {\r\n  strength: ' Strength',\r\n  vigor: ' Vigor',\r\n  intelligence: ' Intelligence',\r\n  perception: ' Perception',\r\n  talent: ' Talent',\r\n  agility: ' Agility',\r\n  luck: ' Luck',\r\n  armor: ' Armor',\r\n  resistance: ' Resistance',\r\n  evasion: ' Evasion',\r\n  healthOffset: ' ERROR!',\r\n  health: ' Health',\r\n  healthRegen: ' Health Regen',\r\n  criticalChance: '% Crit Chance',\r\n  damageOffset: ' Raw Damage',\r\n  damageModifier: '% Attack Damage',\r\n  damageReflection: ' Damage Reflection',\r\n  weaknessModifier: '% Recieved Damage',\r\n  goldModifier: '% Gold Recieved',\r\n  consumableHealthGainOffset: ' HP from Consumables',\r\n}\r\n","import { v4 } from 'uuid'\r\n\r\nexport const makeEntity = (name: string = '') => ({\r\n  id: v4(),\r\n  name,\r\n})\r\n","import { StatusTypeT, StatusT } from '../types'\r\nimport { makeEntity } from '../functions/Entity'\r\nimport { ZERO_STATS } from './Stats'\r\n\r\nconst STATUS_DURATION = 5\r\nexport const STATUS_EFFECTS: Record<StatusTypeT, StatusT> = {\r\n  bleeding: {\r\n    ...makeEntity('Bleeding'),\r\n    type: 'bleeding',\r\n    canStack: false,\r\n    duration: STATUS_DURATION,\r\n    traits: [],\r\n    persist: true,\r\n    commitChance: 50,\r\n    committedTraits: [\r\n      {\r\n        duration: STATUS_DURATION,\r\n        stats: {\r\n          ...ZERO_STATS,\r\n          healthOffset: -10,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  burning: {\r\n    ...makeEntity('Burning'),\r\n    type: 'burning',\r\n    canStack: false,\r\n    duration: STATUS_DURATION,\r\n    traits: [],\r\n    persist: true,\r\n    commitChance: 100,\r\n    committedTraits: [\r\n      {\r\n        duration: STATUS_DURATION,\r\n        stats: {\r\n          ...ZERO_STATS,\r\n          healthOffset: -10,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  frozen: {\r\n    ...makeEntity('Frozen'),\r\n    type: 'frozen',\r\n    canStack: false,\r\n    persist: true,\r\n    duration: STATUS_DURATION,\r\n    traits: [\r\n      {\r\n        duration: STATUS_DURATION,\r\n        stats: {\r\n          ...ZERO_STATS,\r\n          weaknessModifier: 0.25,\r\n        },\r\n      },\r\n    ],\r\n    commitChance: 0,\r\n    committedTraits: [],\r\n  },\r\n  poisoned: {\r\n    ...makeEntity('Poisoned'),\r\n    type: 'poisoned',\r\n    canStack: true,\r\n    persist: true,\r\n    duration: STATUS_DURATION,\r\n    traits: [\r\n      {\r\n        duration: STATUS_DURATION,\r\n        stats: {\r\n          ...ZERO_STATS,\r\n          strength: -5,\r\n          intelligence: -5,\r\n          perception: -5,\r\n          talent: -5,\r\n        },\r\n      },\r\n    ],\r\n    commitChance: 100,\r\n    committedTraits: [\r\n      {\r\n        duration: STATUS_DURATION,\r\n        stats: {\r\n          ...ZERO_STATS,\r\n          healthOffset: -5,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  targeted: {\r\n    ...makeEntity('Targeted'),\r\n    type: 'targeted',\r\n    duration: 5,\r\n    traits: [],\r\n    persist: false,\r\n    committedTraits: [],\r\n    commitChance: 100,\r\n    canStack: false,\r\n    description: 'All enemies will attack this character, if able.',\r\n  },\r\n  dazed: {\r\n    ...makeEntity('Dazed'),\r\n    type: 'dazed',\r\n    duration: 5,\r\n    traits: [],\r\n    persist: false,\r\n    committedTraits: [],\r\n    commitChance: 100,\r\n    canStack: false,\r\n    description: 'Character is temporarily halted on the combat queue.',\r\n  },\r\n  evasive: {\r\n    ...makeEntity('Evasive'),\r\n    type: 'evasive',\r\n    duration: 5,\r\n    traits: [],\r\n    persist: true,\r\n    committedTraits: [],\r\n    commitChance: 100,\r\n    canStack: false,\r\n    description: 'Non-perfect attacks will miss when targeting this character.',\r\n  },\r\n  protected: {\r\n    ...makeEntity('Protected'),\r\n    type: 'protected',\r\n    duration: -1,\r\n    traits: [],\r\n    persist: false,\r\n    committedTraits: [],\r\n    commitChance: 100,\r\n    canStack: false,\r\n    description: 'Negate the next damage that targets this character.',\r\n  },\r\n  ['speed-down']: {\r\n    ...makeEntity('Speed Down'),\r\n    type: 'speed-down',\r\n    duration: 5,\r\n    persist: false,\r\n    traits: [\r\n      {\r\n        duration: 5,\r\n        stats: {\r\n          ...ZERO_STATS,\r\n          agility: -20,\r\n        },\r\n      },\r\n    ],\r\n    committedTraits: [],\r\n    commitChance: 100,\r\n    canStack: false,\r\n    description: '-20 to Speed.',\r\n  },\r\n}\r\n","import { TraitT } from '../types'\r\nimport { ZERO_STATS } from './Stats'\r\n\r\nexport const ZERO_TRAIT: TraitT = {\r\n  duration: -1,\r\n  stats: ZERO_STATS,\r\n}\r\n","import { StatsT } from '../types'\r\nimport { ZERO_STATS } from '../objects'\r\n\r\nexport const combineStats = (...stats: StatsT[]): StatsT => {\r\n  return stats.reduce(\r\n    (p, c) => ({\r\n      vigor: p.vigor + c.vigor,\r\n      strength: p.strength + c.strength,\r\n      intelligence: p.intelligence + c.intelligence,\r\n      perception: p.perception + c.perception,\r\n      talent: p.talent + c.talent,\r\n      agility: p.agility + c.agility,\r\n      luck: p.luck + c.luck,\r\n      armor: p.armor + c.armor,\r\n      resistance: p.resistance + c.resistance,\r\n      evasion: p.evasion + c.evasion,\r\n      criticalChance: p.criticalChance + c.criticalChance,\r\n      damageModifier: p.damageModifier + c.damageModifier,\r\n      damageOffset: p.damageOffset + c.damageOffset,\r\n      damageReflection: p.damageReflection + c.damageReflection,\r\n      healthOffset: p.healthOffset + c.healthOffset,\r\n      health: p.health + c.health,\r\n      healthRegen: p.healthRegen + c.healthRegen,\r\n      weaknessModifier: p.weaknessModifier + c.weaknessModifier,\r\n      goldModifier: p.goldModifier + c.goldModifier,\r\n      consumableHealthGainOffset:\r\n        p.consumableHealthGainOffset + c.consumableHealthGainOffset,\r\n    }),\r\n    ZERO_STATS,\r\n  )\r\n}\r\n","import { TraitT, HasTraitsT, HasCommittedTraits } from '../types'\r\nimport { combineStats } from './Stats'\r\nimport { ZERO_TRAIT } from '../objects'\r\n\r\nexport const combineTraits = (...traits: TraitT[]): TraitT => {\r\n  return traits.reduce(\r\n    (p, c) => ({\r\n      stats: combineStats(p.stats, c.stats),\r\n      duration: -1,\r\n    }),\r\n    ZERO_TRAIT,\r\n  )\r\n}\r\n\r\nexport const getTraitsFromObjects = (parents: HasTraitsT[]) => {\r\n  return parents.reduce((p, c) => {\r\n    return [...p, ...c.traits]\r\n  }, [] as TraitT[])\r\n}\r\nexport const getCommittedTraitsFromObjects = (\r\n  parents: HasCommittedTraits[],\r\n) => {\r\n  return parents.reduce((p, c) => {\r\n    return [...p, ...c.committedTraits]\r\n  }, [] as TraitT[])\r\n}\r\n","import { StatsT, CheckT } from '../types'\r\n\r\nexport const makeCheck = (key: keyof StatsT, offset?: number): CheckT => ({\r\n  key,\r\n  offset,\r\n})\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const SMASH: SkillT = {\r\n  ...makeEntity('Smash'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [makeCheck('strength'), makeCheck('strength'), makeCheck('strength')],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const SHOCKWAVE: SkillT = {\r\n  ...makeEntity('Shockwave'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: false,\r\n  rolls: [\r\n    makeCheck('strength', -10),\r\n    makeCheck('strength', -10),\r\n    makeCheck('strength', -10),\r\n    makeCheck('strength', -10),\r\n  ],\r\n  perfectSplash: true,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { WeaponT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { SMASH } from '../skills/smash'\r\nimport { SHOCKWAVE } from '../skills/shockwave'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const BLACKSMITHS_HAMMER: WeaponT = {\r\n  ...makeEntity(`Blacksmith's Hammer`),\r\n  itemType: 'weapon',\r\n  type: 'hammer',\r\n  rarity: 'common',\r\n  twoHand: false,\r\n  attackType: 'melee',\r\n  damage: { type: 'physical', damage: 10 },\r\n  traits: [],\r\n  skills: [SMASH, SHOCKWAVE],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const SHOT: SkillT = {\r\n  ...makeEntity('Shot'),\r\n  // TODO Damage Modifier for flying, etc...\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const SNIPE_SHOT: SkillT = {\r\n  ...makeEntity('Snipe Shot'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: false,\r\n  rolls: [\r\n    makeCheck('perception', -10),\r\n    makeCheck('perception', -10),\r\n    makeCheck('perception', -10),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { WeaponT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\nimport { SHOT } from '../skills/shot'\r\nimport { SNIPE_SHOT } from '../skills/snipe_shot'\r\n\r\nexport const HUNTING_BOW: WeaponT = {\r\n  ...makeEntity(`Hunting Bow`),\r\n  itemType: 'weapon',\r\n  type: 'bow',\r\n  rarity: 'common',\r\n  twoHand: true,\r\n  attackType: 'ranged',\r\n  damage: { type: 'physical', damage: 6 },\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        evasion: 3,\r\n      },\r\n    },\r\n  ],\r\n  skills: [SHOT, SNIPE_SHOT],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const SURGE: SkillT = {\r\n  ...makeEntity('Surge'),\r\n  damageModifier: -0.2,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [\r\n    makeCheck('intelligence'),\r\n    makeCheck('intelligence'),\r\n    makeCheck('intelligence'),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const AREA_BLAST: SkillT = {\r\n  ...makeEntity('Area Blast'),\r\n  damageModifier: -0.5,\r\n  targetType: 'group',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: false,\r\n  rolls: [\r\n    makeCheck('intelligence', -5),\r\n    makeCheck('intelligence', -5),\r\n    makeCheck('intelligence', -5),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { WeaponT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { SURGE } from '../skills/surge'\r\nimport { AREA_BLAST } from '../skills/area_blast'\r\n\r\nexport const SCHOLARS_BOOK: WeaponT = {\r\n  ...makeEntity(`Scholar's Book`),\r\n  itemType: 'weapon',\r\n  type: 'tome',\r\n  rarity: 'common',\r\n  twoHand: true,\r\n  attackType: 'ranged',\r\n  damage: { type: 'magic', damage: 6 },\r\n  traits: [],\r\n  skills: [SURGE, AREA_BLAST],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const ALTO: SkillT = {\r\n  ...makeEntity('Alto'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [makeCheck('talent'), makeCheck('talent'), makeCheck('talent')],\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const DAZZLE: SkillT = {\r\n  ...makeEntity('Dazzle'),\r\n  damageModifier: -0.5,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: false,\r\n  rolls: [makeCheck('talent', -6), makeCheck('talent', -5)],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [{ type: 'dazed', duration: 4 }],\r\n}\r\n","import { CharacterClassT, WeaponT } from '../types'\r\nimport { BLACKSMITHS_HAMMER } from './weapons/blacksmiths_hammer'\r\nimport { HUNTING_BOW } from './weapons/hunting_bow'\r\nimport { SCHOLARS_BOOK } from './weapons/scholars_book'\r\nimport { SIMPLE_LUTE } from './weapons/simple_lute'\r\n\r\nexport const CLASS_STARTING_WEAPONS: Partial<Record<\r\n  CharacterClassT,\r\n  WeaponT\r\n>> = {\r\n  blacksmith: BLACKSMITHS_HAMMER,\r\n  hunter: HUNTING_BOW,\r\n  scholar: SCHOLARS_BOOK,\r\n  bard: SIMPLE_LUTE,\r\n}\r\n","import { WeaponT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ALTO } from '../skills/alto'\r\nimport { DAZZLE } from '../skills/dazzle'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const SIMPLE_LUTE: WeaponT = {\r\n  ...makeEntity(`Simple Lute`),\r\n  itemType: 'weapon',\r\n  type: 'lute',\r\n  rarity: 'common',\r\n  twoHand: true,\r\n  attackType: 'ranged',\r\n  damage: { type: 'magic', damage: 6 },\r\n  // TODO: Gold Multiplier\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        goldModifier: 12,\r\n      },\r\n    },\r\n  ],\r\n  skills: [ALTO, DAZZLE],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const TAUNT: SkillT = {\r\n  ...makeEntity('Taunt'),\r\n  damageModifier: 0,\r\n  targetType: 'self',\r\n  damage: false,\r\n  healing: false,\r\n  isBasicAttack: false,\r\n  rolls: [makeCheck('vigor'), makeCheck('vigor')],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [\r\n    {\r\n      type: 'targeted',\r\n      duration: 5,\r\n    },\r\n  ],\r\n}\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\nimport { TAUNT } from '../skills/taunt'\r\n\r\nexport const SIMPLE_IRON_SHIELD = (): ArmorT => ({\r\n  ...makeEntity('Simple Iron Shield'),\r\n  itemType: 'armor',\r\n  resource: 'offhand',\r\n  rarity: 'common',\r\n  type: 'shield',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 1,\r\n      },\r\n    },\r\n  ],\r\n  skills: [TAUNT],\r\n})\r\n","import { CharacterClassT, ArmorT } from '../types'\r\nimport { SIMPLE_IRON_SHIELD } from './armor/simple_iron_shield'\r\nimport { EXPLORERS_CLOAK } from './armor/explorers_cloak'\r\nimport { EXPLORERS_HAT } from './armor/explorers_hat'\r\nimport { FUR_ARMOR } from './armor/fur_armor'\r\nimport { ADVENTURE_BOOTS } from './armor/adventure_boots'\r\nimport { ADVENTURE_CLOAK } from './armor/adventure_cloak'\r\nimport { FUR_BOOTS } from './armor/fur_boots'\r\nimport { PERFORMERS_VEST } from './armor/performers_vest'\r\nimport { PERFORMERS_BOOTS } from './armor/performers_boots'\r\nimport { EXPLORERS_BOOTS } from './armor/explorers_boots'\r\n\r\nexport const CLASS_STARTING_ARMOR: Record<CharacterClassT, ArmorT[]> = {\r\n  blacksmith: [SIMPLE_IRON_SHIELD()],\r\n  hunter: [],\r\n  scholar: [],\r\n  bard: [],\r\n  enemy: [],\r\n}\r\n","import { SkillT } from '../../../types'\r\nimport { makeEntity } from '../../../functions/Entity'\r\nimport { makeCheck } from '../../../functions/makeCheck'\r\n\r\nexport const BITE: SkillT = {\r\n  ...makeEntity('Bite'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const PROTECT: SkillT = {\r\n  ...makeEntity('Protect'),\r\n  damageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  healing: false,\r\n  isBasicAttack: false,\r\n  rolls: [makeCheck('intelligence'), makeCheck('intelligence')],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [\r\n    {\r\n      type: 'protected',\r\n      duration: -1,\r\n    },\r\n  ],\r\n}\r\n","import { WeaponT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { SURGE } from '../skills/surge'\r\nimport { AREA_BLAST } from '../skills/area_blast'\r\nimport { PROTECT } from '../skills/protect'\r\n\r\nexport const DUSTY_BOOK: WeaponT = {\r\n  ...makeEntity(`Dusty Book`),\r\n  itemType: 'weapon',\r\n  type: 'tome',\r\n  rarity: 'common',\r\n  twoHand: true,\r\n  attackType: 'ranged',\r\n  damage: { type: 'magic', damage: 9 },\r\n  traits: [],\r\n  skills: [SURGE, AREA_BLAST, PROTECT],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const RITARDANDO: SkillT = {\r\n  ...makeEntity('Ritardando'),\r\n  damageModifier: -0.5,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [\r\n    makeCheck('talent'),\r\n    makeCheck('talent'),\r\n    makeCheck('talent'),\r\n    makeCheck('talent'),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [\r\n    {\r\n      type: 'speed-down',\r\n      duration: -1,\r\n    },\r\n  ],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const SYMPHONY: SkillT = {\r\n  ...makeEntity('Ritardando'),\r\n  damageModifier: -0.4,\r\n  targetType: 'group',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: false,\r\n  rolls: [\r\n    makeCheck('talent', -4),\r\n    makeCheck('talent', -4),\r\n    makeCheck('talent', -4),\r\n    makeCheck('talent', -4),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { WeaponT } from '../../types'\r\nimport { BLACKSMITHS_HAMMER } from './blacksmiths_hammer'\r\nimport { HUNTING_BOW } from './hunting_bow'\r\nimport { SCHOLARS_BOOK } from './scholars_book'\r\nimport { SIMPLE_LUTE } from './simple_lute'\r\nimport { DUSTY_BOOK } from './dusty_book'\r\nimport { BARBAT } from './barbat'\r\n\r\nexport const ALL_WEAPONS: WeaponT[] = [DUSTY_BOOK, BARBAT]\r\n","import { WeaponT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\nimport { RITARDANDO } from '../skills/ritardando'\r\nimport { SYMPHONY } from '../skills/symphony'\r\nimport { DAZZLE } from '../skills/dazzle'\r\n\r\nexport const BARBAT: WeaponT = {\r\n  ...makeEntity(`Barbat`),\r\n  itemType: 'weapon',\r\n  type: 'lute',\r\n  rarity: 'common',\r\n  twoHand: true,\r\n  attackType: 'ranged',\r\n  damage: { type: 'magic', damage: 9 },\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        goldModifier: 10,\r\n      },\r\n    },\r\n  ],\r\n  skills: [RITARDANDO, SYMPHONY, DAZZLE],\r\n}\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const ADVENTURE_BOOTS = (): ArmorT => ({\r\n  ...makeEntity(`Adventure Boots`),\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 3,\r\n        evasion: 4,\r\n        agility: 3,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n})\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const EXPLORERS_BOOTS = (): ArmorT => ({\r\n  ...makeEntity(`Explorer's Boots`),\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 2,\r\n        evasion: 3,\r\n        agility: 2,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n})\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const EXPLORERS_CLOAK = (): ArmorT => ({\r\n  ...makeEntity(`Explorer's Cloak`),\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'magic-armor',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 3,\r\n        resistance: 6,\r\n        evasion: 6,\r\n        perception: 3,\r\n        talent: -3,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n})\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const EXPLORERS_HAT = (): ArmorT => ({\r\n  ...makeEntity(`Explorer's Hat`),\r\n  itemType: 'armor',\r\n  resource: 'head',\r\n  rarity: 'common',\r\n  type: 'hat',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        resistance: 3,\r\n        evasion: 3,\r\n        perception: 2,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n})\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const FUR_ARMOR = (): ArmorT => ({\r\n  ...makeEntity(`Fur Armor`),\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'cloth-armor',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 5,\r\n        resistance: 5,\r\n        health: 5,\r\n        healthRegen: 2,\r\n        vigor: 4,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n})\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const FUR_BOOTS = (): ArmorT => ({\r\n  ...makeEntity(`Fur Boots`),\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 2,\r\n        resistance: 2,\r\n        healthRegen: 1,\r\n        vigor: 4,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n})\r\n","import { ArmorT } from '../../types'\r\nimport { ADVENTURE_BOOTS } from './adventure_boots'\r\nimport { ADVENTURE_CLOAK } from './adventure_cloak'\r\nimport { EXPLORERS_BOOTS } from './explorers_boots'\r\nimport { EXPLORERS_CLOAK } from './explorers_cloak'\r\nimport { EXPLORERS_HAT } from './explorers_hat'\r\nimport { FUR_ARMOR } from './fur_armor'\r\nimport { FUR_BOOTS } from './fur_boots'\r\nimport { PERFORMERS_BOOTS } from './performers_boots'\r\nimport { PERFORMERS_VEST } from './performers_vest'\r\nimport { SIMPLE_IRON_SHIELD } from './simple_iron_shield'\r\n\r\nexport const ALL_ARMOR = (): ArmorT[] => [\r\n  ADVENTURE_BOOTS(),\r\n  ADVENTURE_CLOAK(),\r\n\r\n  EXPLORERS_BOOTS(),\r\n  EXPLORERS_CLOAK(),\r\n  EXPLORERS_HAT(),\r\n\r\n  FUR_ARMOR(),\r\n  FUR_BOOTS(),\r\n\r\n  PERFORMERS_BOOTS(),\r\n  PERFORMERS_VEST(),\r\n\r\n  SIMPLE_IRON_SHIELD(),\r\n]\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const ADVENTURE_CLOAK = (): ArmorT => ({\r\n  ...makeEntity(`Adventure Cloak`),\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'magic-armor',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 5,\r\n        resistance: 5,\r\n        perception: 4,\r\n        talent: -3,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n})\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const PERFORMERS_BOOTS = (): ArmorT => ({\r\n  ...makeEntity(`Performer's Boots`),\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 2,\r\n        resistance: 3,\r\n        perception: -3,\r\n        talent: 3,\r\n        luck: 3,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n})\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const PERFORMERS_VEST = (): ArmorT => ({\r\n  ...makeEntity(`Performer's Vest`),\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'cloth-armor',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 6,\r\n        resistance: 6,\r\n        perception: -4,\r\n        talent: 4,\r\n        luck: 4,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n})\r\n","import { CharacterT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { BITE } from '../skills/enemy/bite'\r\nimport { getRandom } from '../../util'\r\nimport { ALL_WEAPONS } from '../weapons'\r\nimport { ALL_ARMOR } from '../armor/index'\r\nimport Wolf from '../../icons/svg/lorc/wolf-head.svg'\r\n\r\nexport const TIMBERWOLF = (): CharacterT => {\r\n  return {\r\n    ...makeEntity('Timberwolf'),\r\n    isCharacter: true,\r\n    icon: Wolf,\r\n    partyId: '',\r\n    level: 1,\r\n    xp: 0,\r\n    class: 'enemy',\r\n    stats: {\r\n      vigor: -80,\r\n      strength: 52,\r\n      intelligence: 40,\r\n      perception: 52,\r\n      talent: 30,\r\n      agility: 65,\r\n      luck: 50,\r\n      armor: 0,\r\n      resistance: 0,\r\n      evasion: 10,\r\n      healthOffset: 0,\r\n      health: -1,\r\n      healthRegen: 0,\r\n      criticalChance: 5,\r\n      damageModifier: 0,\r\n      damageOffset: 0,\r\n      damageReflection: 0,\r\n      weaknessModifier: 0,\r\n      goldModifier: 0,\r\n      consumableHealthGainOffset: 0,\r\n    },\r\n    traits: [],\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      ...makeEntity('Wolf Fangs'),\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'wolf-fangs',\r\n      twoHand: true,\r\n      attackType: 'melee',\r\n      damage: {\r\n        damage: 7,\r\n        type: 'physical',\r\n      },\r\n      traits: [],\r\n      skills: [BITE],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 4,\r\n        xp: 10,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 4,\r\n        xp: 10,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 19,\r\n        xp: 20,\r\n        items: [getRandom([...ALL_WEAPONS, ...ALL_ARMOR()])],\r\n        consumables: [],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { SkillT } from '../../../types'\r\nimport { makeEntity } from '../../../functions/Entity'\r\nimport { makeCheck } from '../../../functions/makeCheck'\r\n\r\nexport const SLAP: SkillT = {\r\n  ...makeEntity('Slap'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { CharacterT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { SLAP } from '../skills/enemy/slap'\r\nimport { getRandom } from '../../util'\r\nimport { ALL_WEAPONS } from '../weapons'\r\nimport { ALL_ARMOR } from '../armor/index'\r\nimport Imp from '../../icons/svg/lorc/imp-laugh.svg'\r\n\r\nexport const VALE_IMP = (): CharacterT => {\r\n  return {\r\n    ...makeEntity('Vale Imp'),\r\n    isCharacter: true,\r\n    icon: Imp,\r\n    partyId: '',\r\n    level: 1,\r\n    xp: 0,\r\n    class: 'enemy',\r\n    stats: {\r\n      vigor: -80,\r\n      strength: 40,\r\n      intelligence: 40,\r\n      perception: 52,\r\n      talent: 30,\r\n      agility: 76,\r\n      luck: 50,\r\n      armor: 0,\r\n      resistance: 0,\r\n      evasion: 10,\r\n      health: 0,\r\n      healthOffset: 0,\r\n      healthRegen: 0,\r\n      criticalChance: 5,\r\n      damageModifier: 0,\r\n      damageOffset: 0,\r\n      damageReflection: 0,\r\n      weaknessModifier: 0,\r\n      goldModifier: 0,\r\n      consumableHealthGainOffset: 0,\r\n    },\r\n    traits: [],\r\n    armor: [],\r\n    consumables: [],\r\n    status: [\r\n      {\r\n        duration: -1,\r\n        type: 'evasive',\r\n      },\r\n    ],\r\n    immunities: [],\r\n    weapon: {\r\n      ...makeEntity('Imp Fists'),\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'imp-fists',\r\n      twoHand: true,\r\n      attackType: 'melee',\r\n      damage: {\r\n        damage: 6,\r\n        type: 'physical',\r\n      },\r\n      traits: [],\r\n      skills: [SLAP],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 0,\r\n        xp: 15,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 1,\r\n        xp: 12,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 0,\r\n        xp: 15,\r\n        items: [getRandom(ALL_ARMOR())],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 0,\r\n        xp: 15,\r\n        items: [getRandom(ALL_WEAPONS)],\r\n        consumables: [],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { SkillT } from '../../../types'\r\nimport { makeEntity } from '../../../functions/Entity'\r\nimport { makeCheck } from '../../../functions/makeCheck'\r\n\r\nexport const IMPALE: SkillT = {\r\n  ...makeEntity('Impale'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [makeCheck('strength'), makeCheck('strength'), makeCheck('strength')],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { CharacterT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { IMPALE } from '../skills/enemy/impale'\r\nimport { getRandom } from '../../util'\r\nimport { ALL_WEAPONS } from '../weapons'\r\nimport { ALL_ARMOR } from '../armor/index'\r\nimport BeastMan from '../../icons/svg/delapouite/orc-head.svg'\r\n\r\nexport const BEASTMAN = (): CharacterT => {\r\n  return {\r\n    ...makeEntity('Beastman'),\r\n    isCharacter: true,\r\n    icon: BeastMan,\r\n    partyId: '',\r\n    level: 1,\r\n    xp: 0,\r\n    class: 'enemy',\r\n    stats: {\r\n      vigor: -80,\r\n      strength: 52,\r\n      intelligence: 40,\r\n      perception: 52,\r\n      talent: 30,\r\n      agility: 60,\r\n      luck: 50,\r\n      armor: 2,\r\n      resistance: 0,\r\n      evasion: 10,\r\n      healthOffset: 0,\r\n      health: 0,\r\n      healthRegen: 0,\r\n      criticalChance: 5,\r\n      damageModifier: 0,\r\n      damageOffset: 0,\r\n      damageReflection: 0,\r\n      weaknessModifier: 0,\r\n      goldModifier: 0,\r\n      consumableHealthGainOffset: 0,\r\n    },\r\n    traits: [],\r\n    armor: [],\r\n    status: [],\r\n    consumables: [],\r\n    immunities: [],\r\n    weapon: {\r\n      ...makeEntity('Beastman Spear'),\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'spear',\r\n      twoHand: true,\r\n      attackType: 'melee',\r\n      damage: {\r\n        damage: 8,\r\n        type: 'physical',\r\n      },\r\n      traits: [],\r\n      skills: [IMPALE],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 6,\r\n        xp: 15,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 6,\r\n        xp: 15,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 1,\r\n        xp: 12,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 6,\r\n        xp: 15,\r\n        items: [getRandom(ALL_WEAPONS)],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 19,\r\n        xp: 20,\r\n        items: [getRandom([...ALL_WEAPONS, ...ALL_ARMOR()])],\r\n        consumables: [],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { ConsumableT } from '../../types/Consumable'\r\nimport { makeEntity } from '../../functions/Entity'\r\n\r\nexport const GODSBEARD: ConsumableT = {\r\n  ...makeEntity('Godsbeard'),\r\n  itemType: 'consumable',\r\n  rarity: 'common',\r\n  skill: {\r\n    ...makeEntity('Godsbeard'),\r\n    damageModifier: 0,\r\n    targetType: 'self',\r\n    rolls: [],\r\n    damage: false,\r\n    healing: true,\r\n    isBasicAttack: false,\r\n    perfectSplash: false,\r\n    perfectPierce: false,\r\n    perfectStatus: [],\r\n  },\r\n}\r\n","import { ItemRarityT, CharacterClassT, ArmorResourceType } from '../types'\r\nimport { ConsumableT } from '../types/Consumable'\r\nimport { GODSBEARD } from './consumables/godsbeard'\r\n\r\nexport const ITEM_RARITY_COLORS: Record<ItemRarityT, string> = {\r\n  common: 'rgba(255,255,255,0.8)',\r\n  uncommon: 'rgba(173,216,230,1)',\r\n  rare: 'rgba(221,160,221,1)',\r\n  mythic: 'rgb(255,160,122,1)',\r\n}\r\n\r\nexport const CLASS_STARTING_CONSUMABLES: Record<\r\n  CharacterClassT,\r\n  ConsumableT[]\r\n> = {\r\n  blacksmith: [GODSBEARD],\r\n  hunter: [GODSBEARD],\r\n  scholar: [GODSBEARD],\r\n  bard: [GODSBEARD],\r\n  enemy: [],\r\n}\r\n\r\nexport const CHARACTER_RESOURCES: ArmorResourceType[] = [\r\n  'offhand',\r\n  'body',\r\n  'head',\r\n  'feet',\r\n]\r\n","import {\r\n  CharacterT,\r\n  ProcessedCharacterT,\r\n  StatsT,\r\n  TraitT,\r\n  DamageTypeT,\r\n  StatusTypeT,\r\n  CheckT,\r\n  CharacterClassT,\r\n  EntityT,\r\n  WeaponT,\r\n  StatusT,\r\n  ArmorT,\r\n  ArmorResourceType,\r\n} from '../types'\r\nimport { STATUS_EFFECTS, CLASS_STARTING_STATS } from '../objects'\r\nimport {\r\n  combineTraits,\r\n  getTraitsFromObjects,\r\n  getCommittedTraitsFromObjects,\r\n} from './Traits'\r\nimport { processWeapon } from './Weapon'\r\nimport { getSkillsFromObjects } from './Skill'\r\nimport { makeEntity } from './Entity'\r\nimport { combineStats } from './Stats'\r\nimport { CLASS_STARTING_WEAPONS } from '../objects/Weapon'\r\nimport { CLASS_STARTING_ARMOR } from '../objects/Armor'\r\nimport { ALL_ENEMIES } from '../objects/enemies'\r\nimport { getRandom, noneg } from '../util'\r\nimport { CLASS_STARTING_CONSUMABLES } from '../objects/Item'\r\nimport { makeCheck } from './makeCheck'\r\nimport { resolveCheck } from './Roll'\r\nimport { PROTECT } from '../objects/skills/protect'\r\nimport { CombatRewardT } from '../types/CombatReward'\r\n\r\nexport const checkForProcessedCharacter = (character: CharacterT) => {\r\n  if ((character as ProcessedCharacterT).processed) {\r\n    throw new Error('No Processed Characters Allowed')\r\n  }\r\n}\r\n\r\nexport const isCharacter = (e: EntityT) => e && (e as CharacterT).isCharacter\r\n\r\nexport const getStatusEffects = (character: CharacterT): StatusT[] => {\r\n  return character.status.map((status) => ({\r\n    ...STATUS_EFFECTS[status.type],\r\n    duration: status.duration,\r\n  }))\r\n}\r\n\r\nexport const getTraits = (character: CharacterT): TraitT[] => {\r\n  checkForProcessedCharacter(character)\r\n  const statusEffects = getStatusEffects(character)\r\n  const ret = [\r\n    ...character.traits,\r\n    ...character.weapon.traits,\r\n    ...getTraitsFromObjects(statusEffects),\r\n    ...getTraitsFromObjects(character.armor),\r\n    ...getTraitsFromObjects(getStatusEffects(character)),\r\n  ]\r\n  return ret\r\n}\r\n\r\nexport const getSkills = (character: CharacterT) => {\r\n  checkForProcessedCharacter(character)\r\n  return [...character.weapon.skills, ...getSkillsFromObjects(character.armor)]\r\n}\r\n\r\nexport const processCharacter = (\r\n  character: CharacterT,\r\n): ProcessedCharacterT => {\r\n  checkForProcessedCharacter(character)\r\n  const traits = getTraits(character)\r\n  const combinedTrait = combineTraits(...traits)\r\n  const stats: StatsT = combineStats(character.stats, combinedTrait.stats)\r\n  const weapon = processWeapon(character.weapon)\r\n  const statusEffects = getStatusEffects(character)\r\n  const skills = getSkills(character)\r\n  const hVigor =\r\n    CLASS_STARTING_STATS[character.class].vigor || character.stats.vigor\r\n  const startingHealth = 25 + Math.floor(0.1 * hVigor)\r\n  const health =\r\n    Math.floor(\r\n      startingHealth + character.level + 0.1 * character.level * stats.vigor,\r\n    ) + stats.health\r\n\r\n  return {\r\n    ...character,\r\n    health,\r\n    stats,\r\n    rawStats: character.stats,\r\n    weapon,\r\n    statusEffects,\r\n    skills,\r\n    dead: stats.healthOffset >= health,\r\n    processed: true,\r\n  }\r\n}\r\n\r\nexport const makeCharacter = (\r\n  characterClass: CharacterClassT,\r\n  partyId: string = '',\r\n): CharacterT => {\r\n  return {\r\n    ...makeEntity(),\r\n    isCharacter: true,\r\n    partyId,\r\n    level: 1,\r\n    xp: 0,\r\n    class: characterClass,\r\n    stats: CLASS_STARTING_STATS[characterClass],\r\n    traits: [],\r\n    weapon: CLASS_STARTING_WEAPONS[characterClass] as WeaponT,\r\n    armor: CLASS_STARTING_ARMOR[characterClass],\r\n    consumables: CLASS_STARTING_CONSUMABLES[characterClass],\r\n    status: [],\r\n    immunities: [],\r\n    possibleRewards: [],\r\n  }\r\n}\r\n\r\nexport const makeEnemy = () => {\r\n  const staicEnemy = getRandom(ALL_ENEMIES)\r\n  if (staicEnemy) return staicEnemy()\r\n  return makeCharacter(getRandom(['blacksmith', 'hunter', 'scholar']))\r\n}\r\n\r\nexport const commitTrait = (\r\n  character: CharacterT,\r\n  trait: TraitT,\r\n): CharacterT => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    stats: combineStats(character.stats, trait.stats),\r\n  }\r\n}\r\nexport const commitStatusEffects = (character: CharacterT): CharacterT => {\r\n  checkForProcessedCharacter(character)\r\n  const statusEffects = getStatusEffects(character)\r\n  const traits = getCommittedTraitsFromObjects(statusEffects)\r\n  return traits.reduce(\r\n    (char, trait) => {\r\n      return commitTrait(char, trait)\r\n    },\r\n    { ...character },\r\n  )\r\n}\r\nexport const decrementStatusDurations = (character: CharacterT): CharacterT => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    status: character.status\r\n      .map((status) => ({ ...status, duration: status.duration - 1 }))\r\n      .filter((status) => status.duration !== 0),\r\n  }\r\n}\r\nexport const hasStatus = (character: CharacterT, statusType: StatusTypeT) => {\r\n  return character.status.map((s) => s.type).includes(statusType)\r\n}\r\nexport const hasImmunity = (character: CharacterT, statusType: StatusTypeT) => {\r\n  return character.immunities.map((i) => i.type).includes(statusType)\r\n}\r\nexport const findStatus = (character: CharacterT, statusType: StatusTypeT) => {\r\n  return character.status.find((s) => s.type === statusType)\r\n}\r\nexport const addStatus = (\r\n  character: CharacterT,\r\n  statusType: StatusTypeT,\r\n  duration?: number,\r\n) => {\r\n  const statusEffect = STATUS_EFFECTS[statusType]\r\n  const existingStatus = findStatus(character, statusType)\r\n  if (hasImmunity(character, statusType)) {\r\n    return character\r\n  }\r\n  if (existingStatus && !statusEffect.canStack) {\r\n    return {\r\n      ...character,\r\n      status: [\r\n        ...character.status.filter((t) => t.type !== statusType),\r\n        { type: statusType, duration: duration || statusEffect.duration },\r\n      ],\r\n    }\r\n  }\r\n  if (existingStatus && statusEffect.canStack) {\r\n    return {\r\n      ...character,\r\n      status: [\r\n        ...character.status.filter((t) => t.type !== statusType),\r\n        {\r\n          type: statusType,\r\n          duration: duration || statusEffect.duration,\r\n          stack: (existingStatus.stack || 0) + 1,\r\n        },\r\n      ],\r\n    }\r\n  }\r\n  return {\r\n    ...character,\r\n    status: [\r\n      ...character.status,\r\n      {\r\n        type: statusType,\r\n        duration: duration || statusEffect.duration,\r\n        stack: 0,\r\n      },\r\n    ],\r\n  }\r\n}\r\nexport const addMultipleStatus = (\r\n  character: CharacterT,\r\n  statusTypes: StatusTypeT[],\r\n) => {\r\n  return statusTypes.reduce(\r\n    (char, statusType) => {\r\n      return addStatus(char, statusType)\r\n    },\r\n    { ...character },\r\n  )\r\n}\r\n\r\nexport const removeTemporaryStatus = (character: CharacterT): CharacterT => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    status: character.status\r\n      .map((s) => STATUS_EFFECTS[s.type])\r\n      .filter((s) => s.persist),\r\n  }\r\n}\r\n\r\nexport const getCharacterStat = (character: CharacterT, statValue: CheckT) => {\r\n  const resolvedStatValue = statValue.key ? character.stats[statValue.key] : 0\r\n  return resolvedStatValue + (statValue.offset || 0)\r\n}\r\n\r\nexport const getDamageResistance = (\r\n  character: ProcessedCharacterT,\r\n  damageType: DamageTypeT,\r\n) => {\r\n  if (damageType === 'physical') return character.stats.armor\r\n  if (damageType === 'magic') return character.stats.resistance\r\n  return 0\r\n}\r\n\r\nexport const addStatusAndTags = (\r\n  character: CharacterT,\r\n  status: StatusTypeT[],\r\n) => {\r\n  return addMultipleStatus(character, status)\r\n}\r\n\r\nexport const equipArmor = (\r\n  character: CharacterT,\r\n  armor: ArmorT,\r\n): { character: CharacterT; armor: ArmorT | undefined } => {\r\n  checkForProcessedCharacter(character)\r\n  const existingArmor = character.armor.find(\r\n    (a) => a.resource === armor.resource,\r\n  )\r\n  return {\r\n    character: {\r\n      ...character,\r\n      armor: existingArmor\r\n        ? [...character.armor.filter((a) => a.id !== existingArmor.id), armor]\r\n        : [...character.armor, armor],\r\n    },\r\n    armor: existingArmor,\r\n  }\r\n}\r\n\r\nexport const unequipArmor = (\r\n  character: CharacterT,\r\n  resource: ArmorResourceType,\r\n): { character: CharacterT; armor: ArmorT | undefined } => {\r\n  checkForProcessedCharacter(character)\r\n  const armor = character.armor.find((a) => a.resource === resource)\r\n  return {\r\n    character: {\r\n      ...character,\r\n      armor: character.armor.filter((a) => a.resource !== resource),\r\n    },\r\n    armor,\r\n  }\r\n}\r\n\r\nexport const equipWeapon = (\r\n  character: CharacterT,\r\n  weapon: WeaponT,\r\n): { character: CharacterT; weapon: WeaponT | undefined } => {\r\n  const existingWeapon = character.weapon\r\n  return {\r\n    character: {\r\n      ...character,\r\n      weapon,\r\n    },\r\n    weapon: existingWeapon,\r\n  }\r\n}\r\n\r\nexport const unequipWeapon = (\r\n  character: CharacterT,\r\n): { character: CharacterT; weapon: WeaponT | undefined } => {\r\n  const existingWeapon = character.weapon\r\n  return {\r\n    character: {\r\n      ...character,\r\n      // weapon: undefined\r\n    },\r\n    weapon: existingWeapon,\r\n  }\r\n}\r\n\r\nexport const commitDamage = (\r\n  character: CharacterT,\r\n  damage: number,\r\n): CharacterT => {\r\n  checkForProcessedCharacter(character)\r\n  if (hasStatus(character, 'protected')) {\r\n    return {\r\n      ...character,\r\n      status: character.status.filter((s) => s.type !== 'protected'),\r\n    }\r\n  } else {\r\n    return {\r\n      ...character,\r\n      stats: {\r\n        ...character.stats,\r\n        healthOffset: noneg(character.stats.healthOffset + damage),\r\n      },\r\n    }\r\n  }\r\n}\r\n\r\nexport const getRewardsFromCharacter = (\r\n  character: ProcessedCharacterT,\r\n  checkedCharacter: ProcessedCharacterT,\r\n): CombatRewardT[] => {\r\n  let index: number | undefined = undefined\r\n  character.possibleRewards.forEach((rewards, i) => {\r\n    const luckReslt = resolveCheck(checkedCharacter, makeCheck('luck'))\r\n    if (luckReslt.result) {\r\n      index = i\r\n    }\r\n  })\r\n  if (index !== undefined) {\r\n    return character.possibleRewards[index]\r\n      ? [character.possibleRewards[index]]\r\n      : []\r\n  }\r\n  return []\r\n}\r\n\r\nexport const consolidateRewards = (rewards: CombatRewardT[]): CombatRewardT => {\r\n  return rewards.reduce(\r\n    (res, reward) => {\r\n      return {\r\n        gold: res.gold + reward.gold,\r\n        xp: res.xp + reward.xp,\r\n        items: [...res.items, ...reward.items],\r\n        consumables: [...res.consumables, ...reward.consumables],\r\n      }\r\n    },\r\n    {\r\n      gold: 0,\r\n      xp: 0,\r\n      items: [],\r\n      consumables: [],\r\n    },\r\n  )\r\n}\r\n","import { WeaponT, ProcessedWeaponT } from '../types'\r\n\r\nexport const processWeapon = (weapon: WeaponT): ProcessedWeaponT => {\r\n  return {\r\n    ...weapon,\r\n    processed: true,\r\n  }\r\n}\r\n","import { DiceRoll } from 'rpg-dice-roller'\r\nimport { ProcessedCharacterT, CheckResultT, CheckT, StatsT } from '../types'\r\nimport { getCharacterStat } from './Character'\r\n\r\nexport const resolveCheck = (\r\n  character: ProcessedCharacterT,\r\n  check: CheckT,\r\n): CheckResultT => {\r\n  const statValue = getCharacterStat(character, check)\r\n  const roll = new DiceRoll('1d100')\r\n  return {\r\n    input: check,\r\n    result: roll.total <= statValue,\r\n    total: roll.total,\r\n    averageTotal: roll.averageTotal,\r\n    maxTotal: roll.maxTotal,\r\n    minTotal: roll.minTotal,\r\n    output: roll.output,\r\n  }\r\n}\r\n\r\nexport const getChecksProbability = (\r\n  character: ProcessedCharacterT,\r\n  checks: CheckT[],\r\n): number => {\r\n  const statValues = checks.map((check) => getCharacterStat(character, check))\r\n  const result = statValues.reduce((p, c) => {\r\n    return p * (c / 100)\r\n  }, 1)\r\n  return result\r\n}\r\n\r\nexport const getPassedCount = (results: CheckResultT[]): number =>\r\n  results.filter((r) => r.result).length\r\n\r\nexport const didAllPass = (results: CheckResultT[]): boolean =>\r\n  results.every((r) => r.result)\r\n","import { SkillT } from '../../../types'\r\nimport { makeEntity } from '../../../functions/Entity'\r\nimport { makeCheck } from '../../../functions/makeCheck'\r\n\r\nexport const STING: SkillT = {\r\n  ...makeEntity('Sting'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n\r\nexport const INFECTIOUS_STING: SkillT = {\r\n  ...makeEntity('Infectious Sting'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [\r\n    makeCheck('perception', -10),\r\n    makeCheck('perception', -10),\r\n    makeCheck('perception', -10),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [\r\n    {\r\n      type: 'poisoned',\r\n      duration: 10,\r\n    },\r\n  ],\r\n}\r\n","import { CharacterT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { STING, INFECTIOUS_STING } from '../skills/enemy/sting'\r\nimport { GODSBEARD } from '../consumables/godsbeard'\r\nimport { getRandom } from '../../util'\r\nimport { ALL_ARMOR } from '../armor/index'\r\nimport Bee from '../../icons/svg/lorc/bee.svg'\r\n\r\nexport const BEE = (): CharacterT => {\r\n  return {\r\n    ...makeEntity('Bee'),\r\n    isCharacter: true,\r\n    icon: Bee,\r\n    partyId: '',\r\n    level: 1,\r\n    xp: 0,\r\n    class: 'enemy',\r\n    stats: {\r\n      vigor: -80,\r\n      strength: 30,\r\n      intelligence: 30,\r\n      perception: 52,\r\n      talent: 30,\r\n      agility: 80,\r\n      luck: 0,\r\n      armor: 0,\r\n      resistance: 0,\r\n      evasion: 17,\r\n      health: -4,\r\n      healthOffset: 0,\r\n      healthRegen: 0,\r\n      criticalChance: 5,\r\n      damageModifier: 0,\r\n      damageOffset: 0,\r\n      damageReflection: 0,\r\n      weaknessModifier: 0,\r\n      goldModifier: 0,\r\n      consumableHealthGainOffset: 0,\r\n    },\r\n    traits: [],\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      ...makeEntity('Bee Stinger'),\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'bee-stinger',\r\n      twoHand: true,\r\n      attackType: 'melee',\r\n      damage: {\r\n        damage: 12,\r\n        type: 'physical',\r\n      },\r\n      traits: [],\r\n      skills: [STING, INFECTIOUS_STING],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 1,\r\n        xp: 12,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 1,\r\n        xp: 12,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 1,\r\n        xp: 12,\r\n        items: [getRandom(ALL_ARMOR())],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 1,\r\n        xp: 12,\r\n        items: [],\r\n        consumables: [GODSBEARD],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { SkillT } from '../../../types'\r\nimport { makeEntity } from '../../../functions/Entity'\r\nimport { makeCheck } from '../../../functions/makeCheck'\r\n\r\nexport const STAB: SkillT = {\r\n  ...makeEntity('Stab'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { CharacterT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { STAB } from '../skills/enemy/stab'\r\nimport { ADVENTURE_BOOTS } from '../armor/adventure_boots'\r\nimport { FUR_BOOTS } from '../armor/fur_boots'\r\nimport { FUR_ARMOR } from '../armor/fur_armor'\r\nimport { getRandom } from '../../util'\r\nimport { ALL_WEAPONS } from '../weapons'\r\nimport Icon from '../../icons/svg/delapouite/pirate-captain.svg'\r\n\r\nexport const BUCCANEER = (): CharacterT => {\r\n  return {\r\n    ...makeEntity('Buccaneer'),\r\n    isCharacter: true,\r\n    icon: Icon,\r\n    partyId: '',\r\n    level: 4,\r\n    xp: 0,\r\n    class: 'enemy',\r\n    stats: {\r\n      strength: 52,\r\n      vigor: 66,\r\n      intelligence: 46,\r\n      perception: 78,\r\n      talent: 64,\r\n      agility: 78,\r\n      luck: 50,\r\n      armor: 1,\r\n      resistance: 0,\r\n      evasion: 20,\r\n      healthOffset: 0,\r\n      health: -31,\r\n      healthRegen: 0,\r\n      criticalChance: 5,\r\n      damageModifier: 0,\r\n      damageOffset: 0,\r\n      damageReflection: 0,\r\n      weaknessModifier: 0,\r\n      goldModifier: 0,\r\n      consumableHealthGainOffset: 15,\r\n    },\r\n    traits: [],\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      ...makeEntity('Buccaneer Dagger'),\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'dagger',\r\n      twoHand: false,\r\n      attackType: 'melee',\r\n      damage: {\r\n        damage: 12,\r\n        type: 'physical',\r\n      },\r\n      traits: [],\r\n      skills: [STAB],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [ADVENTURE_BOOTS()],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [FUR_BOOTS()],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 80,\r\n        xp: 20,\r\n        items: [FUR_ARMOR(), getRandom(ALL_WEAPONS)],\r\n        consumables: [],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { CharacterT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { STAB } from '../skills/enemy/stab'\r\nimport { EXPLORERS_BOOTS } from '../armor/explorers_boots'\r\nimport { EXPLORERS_HAT } from '../armor/explorers_hat'\r\nimport { EXPLORERS_CLOAK } from '../armor/explorers_cloak'\r\nimport { getRandom } from '../../util'\r\nimport { ALL_WEAPONS } from '../weapons'\r\nimport Bandit from '../../icons/svg/delapouite/bandit.svg'\r\n\r\nexport const BANDIT = (): CharacterT => {\r\n  return {\r\n    ...makeEntity('Bandit'),\r\n    isCharacter: true,\r\n    icon: Bandit,\r\n    partyId: '',\r\n    level: 2,\r\n    xp: 0,\r\n    class: 'enemy',\r\n    stats: {\r\n      strength: 76,\r\n      vigor: 50,\r\n      intelligence: 40,\r\n      perception: 52,\r\n      talent: 72,\r\n      agility: 61,\r\n      luck: 50,\r\n      armor: 4,\r\n      resistance: 0,\r\n      evasion: 10,\r\n      healthOffset: 0,\r\n      health: -20,\r\n      healthRegen: 0,\r\n      criticalChance: 5,\r\n      damageModifier: 0,\r\n      damageOffset: 0,\r\n      damageReflection: 0,\r\n      weaknessModifier: 0,\r\n      goldModifier: 0,\r\n      consumableHealthGainOffset: 15,\r\n    },\r\n    traits: [],\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      ...makeEntity('Buccaneer Dagger'),\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'dagger',\r\n      twoHand: false,\r\n      attackType: 'melee',\r\n      damage: {\r\n        damage: 12,\r\n        type: 'physical',\r\n      },\r\n      traits: [],\r\n      skills: [STAB],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 1,\r\n        xp: 12,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [EXPLORERS_BOOTS()],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [EXPLORERS_HAT()],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 80,\r\n        xp: 20,\r\n        items: [EXPLORERS_CLOAK()],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 80,\r\n        xp: 20,\r\n        items: [EXPLORERS_CLOAK(), getRandom(ALL_WEAPONS)],\r\n        consumables: [],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { TIMBERWOLF } from './enemies/timberwolf'\r\nimport { VALE_IMP } from './enemies/vale_imp'\r\nimport { BEASTMAN } from './enemies/beastman'\r\nimport { BEE } from './enemies/bee'\r\nimport { BUCCANEER } from './enemies/buccaneer'\r\nimport { BANDIT } from './enemies/bandit'\r\nimport { CharacterT } from '../types'\r\n\r\nexport const PLAYER_PARTY_ID = v4()\r\n\r\nexport const ALL_ENEMY_PARTY_COMBOS = [\r\n  [TIMBERWOLF(), TIMBERWOLF(), TIMBERWOLF()],\r\n  [VALE_IMP(), TIMBERWOLF(), BEASTMAN()],\r\n  [BEASTMAN(), BEASTMAN(), BEE()],\r\n  [BEE(), BEE(), BEE()],\r\n  [BUCCANEER()],\r\n  [BANDIT(), BANDIT()],\r\n]\r\n\r\nexport const ENEMY_COMBOS_BY_LEVEL: Record<number, CharacterT[][]> = {\r\n  0: [\r\n    [TIMBERWOLF(), TIMBERWOLF(), TIMBERWOLF()],\r\n    [TIMBERWOLF(), BEASTMAN()],\r\n    [BEASTMAN(), BEASTMAN()],\r\n    [VALE_IMP(), TIMBERWOLF()],\r\n    [VALE_IMP()],\r\n    [BEE()],\r\n    [BEE(), BEASTMAN()],\r\n    [BEE(), TIMBERWOLF()],\r\n  ],\r\n  1: [\r\n    [VALE_IMP(), TIMBERWOLF(), BEASTMAN()],\r\n    [BEASTMAN(), BEASTMAN(), BEASTMAN()],\r\n    [BEE(), BEE(), BEE()],\r\n    [VALE_IMP(), BEE(), BEASTMAN()],\r\n  ],\r\n  2: [\r\n    [BEE(), BEE(), BEE()],\r\n    [VALE_IMP(), BEE(), BEE()],\r\n    [VALE_IMP(), VALE_IMP(), VALE_IMP()],\r\n    [BANDIT(), TIMBERWOLF()],\r\n    [BANDIT(), TIMBERWOLF(), TIMBERWOLF()],\r\n  ],\r\n  3: [\r\n    [BANDIT(), BANDIT()],\r\n    [BUCCANEER()],\r\n    [BANDIT(), BEE(), BEE()],\r\n    [BANDIT(), VALE_IMP(), VALE_IMP()],\r\n    [BANDIT(), VALE_IMP(), BEE()],\r\n    [BUCCANEER(), VALE_IMP()],\r\n  ],\r\n  4: [\r\n    [BANDIT(), BANDIT(), VALE_IMP()],\r\n    [BANDIT(), BANDIT(), BEE()],\r\n    [BANDIT(), BANDIT(), BANDIT()],\r\n    [BUCCANEER(), BUCCANEER()],\r\n    [BUCCANEER(), VALE_IMP(), VALE_IMP()],\r\n  ],\r\n  5: [\r\n    [BANDIT(), BANDIT(), BANDIT()],\r\n    [BANDIT(), VALE_IMP(), BUCCANEER()],\r\n    [BUCCANEER(), VALE_IMP(), VALE_IMP()],\r\n    [BUCCANEER(), BUCCANEER(), BANDIT()],\r\n    [BUCCANEER(), BUCCANEER(), BUCCANEER()],\r\n  ],\r\n}\r\n","import {\r\n  CharacterT,\r\n  PartyT,\r\n  ProcessedPartyT,\r\n  EntityT,\r\n  ProcessedCharacterT,\r\n} from '../types'\r\nimport {\r\n  checkForProcessedCharacter,\r\n  processCharacter,\r\n  makeEnemy,\r\n  getRewardsFromCharacter,\r\n} from './Character'\r\nimport { makeEntity } from './Entity'\r\nimport { TIMBERWOLF } from '../objects/enemies/timberwolf'\r\nimport { VALE_IMP } from '../objects/enemies/vale_imp'\r\nimport { BEASTMAN } from '../objects/enemies/beastman'\r\nimport { getRandom } from '../util'\r\nimport { ALL_ENEMY_PARTY_COMBOS, ENEMY_COMBOS_BY_LEVEL } from '../objects/Party'\r\nimport { CombatRewardT } from '../types/CombatReward'\r\n\r\nexport const isParty = (e: EntityT) => e && (e as PartyT).isParty\r\n\r\nexport const checkForProcessedParty = (party: PartyT) => {\r\n  if ((party as ProcessedPartyT).processed) {\r\n    throw new Error('No Processed Parties Allowed')\r\n  }\r\n  party.characters.forEach((character) => {\r\n    checkForProcessedCharacter(character)\r\n  })\r\n}\r\n\r\nexport const makeParty = (level: number = 0): PartyT => {\r\n  level = level > 5 ? 5 : level\r\n  console.log(level)\r\n  return {\r\n    ...makeEntity(),\r\n    isParty: true,\r\n    items: [],\r\n    gold: 0,\r\n    characters: getRandom(ENEMY_COMBOS_BY_LEVEL[level]),\r\n  }\r\n}\r\n\r\nexport const findCharacterInParty = <\r\n  T extends PartyT = PartyT,\r\n  R extends CharacterT = CharacterT\r\n>(\r\n  party: T,\r\n  id: string,\r\n): R | undefined => {\r\n  return (party.characters as R[]).find((c) => c.id === id)\r\n}\r\n\r\nexport const updateCharacter = (\r\n  party: PartyT,\r\n  characterId: string,\r\n  updater: (character: CharacterT) => CharacterT,\r\n): PartyT => {\r\n  checkForProcessedParty(party)\r\n  return {\r\n    ...party,\r\n    characters: party.characters.map((c) =>\r\n      c.id === characterId ? updater(c) : c,\r\n    ),\r\n  }\r\n}\r\n\r\nexport const processParty = (party: PartyT): ProcessedPartyT => {\r\n  return {\r\n    ...party,\r\n    processed: true,\r\n    characters: party.characters.map((c) => ({\r\n      ...processCharacter(c),\r\n      partyId: party.id,\r\n    })),\r\n  }\r\n}\r\n\r\nexport const getRolledRewards = (\r\n  party: ProcessedPartyT,\r\n  checkedCharacter: ProcessedCharacterT,\r\n): CombatRewardT[] => {\r\n  return party.characters.reduce((r, character) => {\r\n    return [...r, ...getRewardsFromCharacter(character, checkedCharacter)]\r\n  }, [] as CombatRewardT[])\r\n}\r\n\r\nexport const commitRewards = (\r\n  party: PartyT,\r\n  rewards: CombatRewardT,\r\n): PartyT => {\r\n  checkForProcessedParty(party)\r\n  const goldMultiplier =\r\n    1 +\r\n    processParty(party).characters.reduce(\r\n      (r, c) => (r > c.stats.goldModifier ? r : c.stats.goldModifier),\r\n      0,\r\n    ) /\r\n      100\r\n  return {\r\n    ...party,\r\n    gold: party.gold + Math.floor(rewards.gold * goldMultiplier),\r\n    items: [...party.items, ...rewards.items],\r\n    characters: party.characters.map((c) => ({\r\n      ...c,\r\n      consumables: [...c.consumables, ...rewards.consumables],\r\n      xp: c.xp + rewards.xp,\r\n    })),\r\n  }\r\n}\r\n","import { StatusTypeT } from '../types'\r\n\r\nexport type PerfectKeyT = StatusTypeT | 'splash' | 'pierce' | 'heal'\r\nexport const PERFECT_DISPLAY_INFO: Record<PerfectKeyT, string> = {\r\n  splash: 'Splash Damage',\r\n  pierce: 'Ignore Resistances',\r\n  bleeding: 'Bleed',\r\n  burning: 'Burn',\r\n  frozen: 'Freeze',\r\n  poisoned: 'Poison',\r\n  targeted: 'Taunt Enemies',\r\n  dazed: 'Daze',\r\n  evasive: 'Become Evasive',\r\n  heal: 'Heal',\r\n  protected: 'Protect',\r\n  ['speed-down']: 'Speed Down',\r\n}\r\n","import { DamageT } from '../types'\r\n\r\nexport const getSplashDamage = (rawDamage: DamageT) => {\r\n  return {\r\n    type: rawDamage.type,\r\n    damage: Math.floor(rawDamage.damage / 2),\r\n  }\r\n}\r\n","import {\r\n  ProcessedCharacterT,\r\n  SourceSkillResultT,\r\n  HasSkillsT,\r\n  SkillT,\r\n  DamageT,\r\n  TargetSkillResultT,\r\n  SkillTargetT,\r\n  ProcessedPartyT,\r\n  TargetTypeT,\r\n} from '../types'\r\nimport { resolveCheck, getPassedCount, didAllPass } from './Roll'\r\nimport { getDamageResistance, isCharacter, hasStatus } from './Character'\r\nimport { isParty } from './Party'\r\nimport { noneg } from '../util'\r\nimport { PerfectKeyT, PERFECT_DISPLAY_INFO } from '../objects/Skills'\r\nimport { getSplashDamage } from './Damage'\r\nimport { PLAYER_PARTY_ID } from '../objects/Party'\r\n\r\nexport const getSkillsFromObjects = (parents: HasSkillsT[]) => {\r\n  return parents.reduce((p, c) => {\r\n    return [...p, ...c.skills]\r\n  }, [] as SkillT[])\r\n}\r\n\r\nexport const resolveSkillTarget = (\r\n  target: SkillTargetT,\r\n): ProcessedCharacterT[] => {\r\n  switch (target.type) {\r\n    case 'single':\r\n      return target.character ? [target.character] : []\r\n    case 'ally':\r\n      return target.character ? [target.character] : []\r\n    case 'self':\r\n      return target.character ? [target.character] : []\r\n    case 'party':\r\n      return target.party?.characters || []\r\n    case 'group':\r\n      return target.party?.characters || []\r\n    default:\r\n      return []\r\n  }\r\n}\r\n\r\nexport const makeSkillTarget = (\r\n  type: TargetTypeT,\r\n  target: ProcessedCharacterT | ProcessedPartyT,\r\n): SkillTargetT => {\r\n  return {\r\n    type,\r\n    character: isCharacter(target)\r\n      ? (target as ProcessedCharacterT)\r\n      : undefined,\r\n    party: isParty(target) ? (target as ProcessedPartyT) : undefined,\r\n  }\r\n}\r\n\r\nexport const getSourceSkillResult = (\r\n  source: ProcessedCharacterT,\r\n  skill: SkillT,\r\n  consumableIndex: number | undefined,\r\n): SourceSkillResultT => {\r\n  const rollResults = skill.rolls.map((check) => resolveCheck(source, check))\r\n  const passedCount = getPassedCount(rollResults)\r\n  const perfect = didAllPass(rollResults)\r\n  const criticalHitResult = resolveCheck(source, {\r\n    offset: source.stats.criticalChance,\r\n  })\r\n  const criticalSuccess = skill.damage\r\n    ? perfect\r\n      ? criticalHitResult.result\r\n      : false\r\n    : false\r\n  const accuracySuccess =\r\n    skill.healing || (skill.damage ? passedCount >= 1 : perfect)\r\n\r\n  const rawDamage: DamageT = {\r\n    damage: skill.damage\r\n      ? Math.round(\r\n          (passedCount * getSkillDamage(skill, source).damage) /\r\n            rollResults.length,\r\n        )\r\n      : 0,\r\n    type: source.weapon.damage.type,\r\n  }\r\n  const splashDamage: DamageT =\r\n    skill.perfectSplash && perfect\r\n      ? getSplashDamage(rawDamage)\r\n      : { type: rawDamage.type, damage: 0 }\r\n\r\n  return {\r\n    rollResults,\r\n    skill,\r\n    source,\r\n    accuracySuccess,\r\n    criticalSuccess,\r\n    passedCount,\r\n    perfect,\r\n    rawDamage,\r\n    pierce: (perfect && skill.perfectPierce) || criticalHitResult.result,\r\n    splashDamage,\r\n    addedStatus: perfect ? skill.perfectStatus : [],\r\n    healing:\r\n      perfect && skill.healing ? source.stats.consumableHealthGainOffset : 0,\r\n    consumableIndex,\r\n  }\r\n}\r\n\r\nexport const getTargetSkillResult = (\r\n  target: ProcessedCharacterT,\r\n  sourceResult: SourceSkillResultT,\r\n): TargetSkillResultT => {\r\n  if (sourceResult.accuracySuccess) {\r\n    const dodgeResult = resolveCheck(target, { key: 'evasion' })\r\n    const damageResistances = sourceResult.pierce\r\n      ? 0\r\n      : getDamageResistance(target, sourceResult.rawDamage.type)\r\n    const isEvasive = hasStatus(target, 'evasive')\r\n    const dodgeSuccess =\r\n      sourceResult.criticalSuccess ||\r\n      (sourceResult.perfect && sourceResult.source.partyId === PLAYER_PARTY_ID)\r\n        ? false\r\n        : dodgeResult.result || (isEvasive && !sourceResult.perfect)\r\n    const totalDamage = {\r\n      type: sourceResult.rawDamage.type,\r\n      damage: dodgeSuccess\r\n        ? 0\r\n        : noneg(Math.round(sourceResult.rawDamage.damage - damageResistances)),\r\n    }\r\n    const reflectedDamage = {\r\n      damage: sourceResult.source.stats.damageReflection,\r\n      type: sourceResult.rawDamage.type,\r\n    }\r\n    const healthRegenMaximum =\r\n      sourceResult.source.stats.healthOffset + reflectedDamage.damage\r\n    const regeneratedHealth =\r\n      healthRegenMaximum > sourceResult.source.stats.healthRegen\r\n        ? sourceResult.source.stats.healthRegen\r\n        : healthRegenMaximum\r\n\r\n    return {\r\n      ...sourceResult,\r\n      target,\r\n      dodgeSuccess,\r\n      blockedDamage: {\r\n        type: sourceResult.rawDamage.type,\r\n        damage: sourceResult.pierce ? 0 : damageResistances,\r\n      },\r\n      reflectedDamage,\r\n      totalDamage,\r\n      regeneratedHealth,\r\n      willDie: target.health <= target.stats.healthOffset + totalDamage.damage,\r\n    }\r\n  } else {\r\n    return {\r\n      ...sourceResult,\r\n      target,\r\n      dodgeSuccess: false,\r\n      reflectedDamage: sourceResult.rawDamage,\r\n      blockedDamage: sourceResult.rawDamage,\r\n      totalDamage: sourceResult.rawDamage,\r\n      regeneratedHealth: noneg(\r\n        sourceResult.source.stats.healthOffset -\r\n          (sourceResult.source.stats.healthOffset +\r\n            sourceResult.source.stats.healthRegen),\r\n      ),\r\n      willDie: false,\r\n    }\r\n  }\r\n}\r\n\r\nexport const getPerfectKeys = (skill: SkillT): PerfectKeyT[] => {\r\n  let base: PerfectKeyT[] = [...skill.perfectStatus.map((t) => t.type)]\r\n  if (skill.perfectSplash) base = [...base, 'splash']\r\n  if (skill.perfectPierce) base = [...base, 'pierce']\r\n  if (skill.healing) base = [...base, 'heal']\r\n  return base\r\n}\r\n\r\nexport const getPerfectText = (\r\n  skill: SkillT,\r\n  character: ProcessedCharacterT,\r\n): string => {\r\n  const perfectKeys = getPerfectKeys(skill)\r\n  const rawDamage = getSkillDamage(skill, character)\r\n  const splashDamage = getSplashDamage(rawDamage)\r\n\r\n  return perfectKeys.reduce((res, key, i) => {\r\n    let pre = `${res}${i > 0 ? ',' : ''}`\r\n    const text = PERFECT_DISPLAY_INFO[key]\r\n    switch (key) {\r\n      case 'splash':\r\n        return `${pre} ${Math.floor(\r\n          (splashDamage.damage / rawDamage.damage) * 100,\r\n        )}% ${text}`\r\n      case 'heal':\r\n        return `${pre} ${text} ${character.stats.consumableHealthGainOffset} HP`\r\n      default:\r\n        return `${pre} ${text}`\r\n    }\r\n  }, '')\r\n}\r\n\r\nexport const getSkillDamage = (\r\n  skill: SkillT,\r\n  source: ProcessedCharacterT,\r\n  target?: ProcessedCharacterT,\r\n): DamageT => {\r\n  const rawDamage: DamageT = {\r\n    type: source.weapon.damage.type,\r\n    damage:\r\n      (source.weapon.damage.damage + source.stats.damageOffset) *\r\n      (1 + skill.damageModifier + source.stats.damageModifier / 100),\r\n  }\r\n  const damageResistances = target\r\n    ? getDamageResistance(target, rawDamage.type)\r\n    : 0\r\n  return {\r\n    type: rawDamage.type,\r\n    damage: noneg(Math.round(rawDamage.damage - damageResistances)),\r\n  }\r\n}\r\n\r\nexport const getSkillDamageRange = (\r\n  skill: SkillT,\r\n  source: ProcessedCharacterT,\r\n  targets?: ProcessedCharacterT[],\r\n) => {\r\n  let min: number | undefined = undefined\r\n  let max: number | undefined = undefined\r\n  if (!targets) return `${getSkillDamage(skill, source).damage}`\r\n  targets.forEach((target) => {\r\n    const damage = getSkillDamage(skill, source, target).damage\r\n    if (max === undefined || damage > max) max = damage\r\n    if (min === undefined || damage < min) min = damage\r\n  })\r\n  if (min === max) return `${max || 0}`\r\n  return `${min}-${max}`\r\n}\r\n\r\nexport const getSkillResults = (\r\n  skill: SkillT,\r\n  source: ProcessedCharacterT,\r\n  targets: ProcessedCharacterT[],\r\n  consumableIndex?: number,\r\n): TargetSkillResultT[] => {\r\n  const sourceResult = getSourceSkillResult(source, skill, consumableIndex)\r\n  return targets.map((target) => getTargetSkillResult(target, sourceResult))\r\n}\r\n\r\nexport const getSkillTargetOptions = (\r\n  source: ProcessedCharacterT,\r\n  sourceParty: ProcessedPartyT,\r\n  targetParty: ProcessedPartyT,\r\n  skill: SkillT,\r\n): ProcessedCharacterT[] | ProcessedPartyT[] => {\r\n  switch (skill.targetType) {\r\n    case 'single':\r\n      return targetParty.characters.filter((c) => !c.dead)\r\n    case 'ally':\r\n      return sourceParty.characters.filter((c) => !c.dead)\r\n    case 'group':\r\n      return [targetParty]\r\n    case 'party':\r\n      return [sourceParty]\r\n    case 'self':\r\n      return [source]\r\n    default:\r\n      return []\r\n  }\r\n}\r\n","import { PartyT, TargetSkillResultT, CharacterT } from '../types'\r\nimport { updateCharacter } from './Party'\r\nimport {\r\n  addStatusAndTags,\r\n  getDamageResistance,\r\n  processCharacter,\r\n  decrementStatusDurations,\r\n  commitDamage,\r\n} from './Character'\r\nimport { PLAYER_PARTY_ID } from '../objects/Party'\r\nimport { noneg } from '../util'\r\n\r\nconst localUpdater = (\r\n  p: PartyT,\r\n  id: string,\r\n  updater: (c: CharacterT) => CharacterT,\r\n) => {\r\n  return updateCharacter(p, id, updater)\r\n}\r\n\r\ninterface CommitSkillResultsT {\r\n  party: PartyT\r\n  enemyParty: PartyT\r\n}\r\nexport const commitSkillResults = (party: PartyT, enemyParty: PartyT) => (\r\n  results: TargetSkillResultT[],\r\n  commitRoundActions: boolean = true,\r\n): CommitSkillResultsT => {\r\n  results.forEach((result, index) => {\r\n    const { source, target } = result\r\n    let sourceParty = [party, enemyParty].find(\r\n      (p) => p.id === source.partyId,\r\n    ) as PartyT\r\n    let targetParty = [party, enemyParty].find(\r\n      (p) => p.id === target.partyId,\r\n    ) as PartyT\r\n    const localUpdate = (\r\n      p: PartyT,\r\n      id: string,\r\n      updater: (c: CharacterT) => CharacterT,\r\n    ) => {\r\n      if (p.id === sourceParty.id) {\r\n        sourceParty = localUpdater(p, id, updater)\r\n        return\r\n      }\r\n      if (p.id === targetParty.id) {\r\n        targetParty = localUpdater(p, id, updater)\r\n        return\r\n      }\r\n    }\r\n\r\n    localUpdate(targetParty, target.id, (c) => {\r\n      return addStatusAndTags(\r\n        commitDamage(c, result.totalDamage.damage - result.healing),\r\n        result.addedStatus.map((s) => s.type),\r\n      )\r\n    })\r\n\r\n    if (result.splashDamage.damage > 0) {\r\n      targetParty.characters\r\n        .filter((c) => c.id !== result.target.id)\r\n        .forEach((character) => {\r\n          localUpdate(targetParty, character.id, (c) => {\r\n            const splashDamageResistance = getDamageResistance(\r\n              processCharacter(character),\r\n              result.splashDamage.type,\r\n            )\r\n            return commitDamage(\r\n              c,\r\n              result.splashDamage.damage - splashDamageResistance,\r\n            )\r\n          })\r\n        })\r\n    }\r\n\r\n    if (\r\n      result.skill.targetType === 'self' &&\r\n      result.consumableIndex !== undefined\r\n    ) {\r\n      localUpdate(sourceParty, source.id, (c) => {\r\n        return {\r\n          ...c,\r\n          consumables: c.consumables.filter(\r\n            (c, i) => i !== result.consumableIndex,\r\n          ),\r\n        }\r\n      })\r\n    }\r\n\r\n    if (result.reflectedDamage.damage > 0 && !result.willDie) {\r\n      localUpdate(sourceParty, source.id, (c) => {\r\n        // TODO: consider adding in reflected resistance here\r\n        return commitDamage(c, result.reflectedDamage.damage)\r\n      })\r\n    }\r\n\r\n    if (index === results.length - 1 && commitRoundActions) {\r\n      if (result.regeneratedHealth > 0) {\r\n        localUpdate(sourceParty, source.id, (c) => {\r\n          return {\r\n            ...c,\r\n            stats: {\r\n              ...c.stats,\r\n              healthOffset: noneg(\r\n                c.stats.healthOffset - result.regeneratedHealth,\r\n              ),\r\n            },\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    if (sourceParty.id === PLAYER_PARTY_ID) {\r\n      party = sourceParty\r\n    } else {\r\n      enemyParty = sourceParty\r\n    }\r\n    if (targetParty.id === PLAYER_PARTY_ID) {\r\n      if (sourceParty.id !== PLAYER_PARTY_ID) {\r\n        party = targetParty\r\n      }\r\n    } else {\r\n      enemyParty = targetParty\r\n    }\r\n  })\r\n  return {\r\n    party: {\r\n      ...party,\r\n      characters: party.characters.map((c) => decrementStatusDurations(c)),\r\n    },\r\n    enemyParty: {\r\n      ...enemyParty,\r\n      characters: enemyParty.characters.map((c) => decrementStatusDurations(c)),\r\n    },\r\n  }\r\n}\r\n","import { StateCoreT, StateReducerT } from './types'\r\n\r\nexport const makeReducer = (\r\n  core: StateCoreT,\r\n  initialState: any,\r\n): StateReducerT => {\r\n  return (state = initialState, action) => {\r\n    const coreFn = core[action.type]\r\n    if (coreFn) return coreFn(state, action)\r\n    return state\r\n  }\r\n}\r\n","import { useMemo } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nexport const useActions = (actions: any) => {\r\n  const dispatch = useDispatch()\r\n  return useMemo(() => bindActionCreators(actions, dispatch), [\r\n    dispatch,\r\n    actions,\r\n  ])\r\n}\r\n","import { useSelector } from 'react-redux'\r\nimport { StateCoreT, StateActionT, StateT } from '../types'\r\nimport { PartyT, CharacterT } from '../../types'\r\nimport { Dispatch } from 'redux'\r\nimport { makeReducer } from '../util'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport {\r\n  updateCharacter,\r\n  makeCharacter,\r\n  checkForProcessedParty,\r\n} from '../../functions'\r\nimport { PLAYER_PARTY_ID } from '../../objects/Party'\r\nimport { ALL_ARMOR } from '../../objects/armor/index'\r\nimport { ALL_WEAPONS } from '../../objects/weapons/index'\r\n\r\nexport const UPDATE_PARTY = '@actions/parties/set-party'\r\nexport const UPSERT_CHARACTER = '@actions/parties/upsert-character'\r\nexport const DELETE_CHARACTER = '@actions/parties/delete-character'\r\nexport const UPSERT_ITEM = '@actions/parties/upsert-item'\r\nexport const DELETE_ITEM = '@actions/parties/delete-item'\r\nexport const UPSERT_MOD = '@actions/parties/upsert-mod'\r\nexport const DELETE_MOD = '@actions/parties/delete-mod'\r\n\r\nexport const actionCreators = {\r\n  updateParty: (party: PartyT): StateActionT => {\r\n    return {\r\n      type: UPDATE_PARTY,\r\n      payload: {\r\n        party,\r\n      },\r\n    }\r\n  },\r\n  upsertCharacter: (character: CharacterT): StateActionT => {\r\n    return {\r\n      type: UPSERT_CHARACTER,\r\n      payload: {\r\n        character,\r\n      },\r\n    }\r\n  },\r\n  deleteCharacter: (characterId: string): StateActionT => {\r\n    return {\r\n      type: DELETE_CHARACTER,\r\n      payload: {\r\n        characterId,\r\n      },\r\n    }\r\n  },\r\n}\r\n\r\nexport const actions = {\r\n  updateParty: (party: PartyT) => (dispatch: Dispatch) => {\r\n    checkForProcessedParty(party)\r\n    dispatch(actionCreators.updateParty(party))\r\n  },\r\n  upsertCharacter: (character: CharacterT) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.upsertCharacter(character))\r\n  },\r\n  deleteCharacter: (characterId: string) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.deleteCharacter(characterId))\r\n  },\r\n}\r\n\r\nexport const core: StateCoreT<PartyT> = {\r\n  [UPDATE_PARTY]: (state, action) => {\r\n    return {\r\n      ...action.payload.party,\r\n    }\r\n  },\r\n  [UPSERT_CHARACTER]: (state, action) => {\r\n    return updateCharacter(\r\n      state,\r\n      action.payload.character.id,\r\n      (c) => action.payload.character,\r\n    )\r\n  },\r\n  [DELETE_CHARACTER]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      characters: state.characters.filter(\r\n        (c) => c.id !== action.payload.characterId,\r\n      ),\r\n    }\r\n  },\r\n}\r\nconst jack = { ...makeCharacter('blacksmith'), name: 'Jack' }\r\nexport const INITIAL_STATE: PartyT = {\r\n  isParty: true,\r\n  id: PLAYER_PARTY_ID,\r\n  name: 'PlayerParty',\r\n  items: [],\r\n  gold: 0,\r\n  characters: [\r\n    {\r\n      ...jack,\r\n    },\r\n    { ...makeCharacter('bard'), name: 'Jim' },\r\n    { ...makeCharacter('scholar'), name: 'Johnny' },\r\n  ],\r\n}\r\nexport default makeReducer(core, INITIAL_STATE)\r\nexport const useParty = () => useSelector((state: StateT) => state.party)\r\nexport const usePartyActions = () =>\r\n  useActions(actions) as {\r\n    updateParty: (party: PartyT) => void\r\n    upsertCharacter: (character: CharacterT) => void\r\n    deleteCharacter: (characterId: string) => void\r\n  }\r\n","import React, { useMemo, useContext, useState } from 'react'\r\nimport {\r\n  PartyT,\r\n  ProcessedPartyT,\r\n  CharacterT,\r\n  ProcessedCharacterT,\r\n  WeaponT,\r\n  ArmorT,\r\n} from '../../types'\r\nimport { usePartyActions, useParty } from '../../state/party'\r\nimport {\r\n  findCharacterInParty,\r\n  processParty,\r\n  makeParty,\r\n  processCharacter,\r\n  makeCharacter,\r\n  equipArmor,\r\n  equipWeapon,\r\n  unequipArmor,\r\n} from '../../functions'\r\n\r\nexport interface PartyContextT {\r\n  party: ProcessedPartyT\r\n  rawParty: PartyT\r\n  activeCharacter: ProcessedCharacterT\r\n  updateParty: (party: PartyT) => void\r\n  upsertCharacter: (character: CharacterT) => void\r\n  deleteCharacter: (characterId: string) => void\r\n  findCharacter: (characterId: string) => ProcessedCharacterT | undefined\r\n  findRawCharacter: (characterId: string) => CharacterT | undefined\r\n  setActiveCharacter: (character: ProcessedCharacterT) => void\r\n  equipItem: (characterId: string, item: WeaponT | ArmorT) => void\r\n  unequipItem: (characterId: string, item: WeaponT | ArmorT) => void\r\n}\r\nconst defaultContextValue: PartyContextT = {\r\n  rawParty: makeParty(),\r\n  party: processParty(makeParty()),\r\n  activeCharacter: processCharacter(makeCharacter('blacksmith')),\r\n  updateParty: (party) => {},\r\n  upsertCharacter: (character) => {},\r\n  deleteCharacter: (characterId) => {},\r\n  findCharacter: (characterId) => undefined,\r\n  findRawCharacter: (characterId) => undefined,\r\n  setActiveCharacter: (character) => {},\r\n  equipItem: (characterId, item) => {},\r\n  unequipItem: (characterId, item) => {},\r\n}\r\nexport const PartyContext = React.createContext<PartyContextT>(\r\n  defaultContextValue,\r\n)\r\n\r\nexport interface PartyContextProviderPropsT {\r\n  children: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const PartyContextProvider = (props: PartyContextProviderPropsT) => {\r\n  const { children } = props\r\n  const actions = usePartyActions()\r\n  const rawParty = useParty()\r\n  const party = useMemo(() => processParty(rawParty), [rawParty])\r\n  const [activeCharacterId, setActiveCharacterId] = useState<string>(\r\n    party.characters[0].id,\r\n  )\r\n  const activeCharacter = useMemo(() => {\r\n    return party.characters.find(\r\n      (c) => c.id === activeCharacterId,\r\n    ) as ProcessedCharacterT\r\n  }, [activeCharacterId, party.characters])\r\n  const setActiveCharacter = (character: ProcessedCharacterT) =>\r\n    setActiveCharacterId(character.id)\r\n  const updateParty = (party: PartyT) => {\r\n    actions.updateParty(party)\r\n  }\r\n  const upsertCharacter = (character: CharacterT) => {\r\n    if (!character) return\r\n    if ((character as ProcessedCharacterT).processed) {\r\n      throw new Error('No processed Characters Allowed')\r\n    }\r\n    actions.upsertCharacter(character)\r\n  }\r\n  const deleteCharacter = (characterId: string) => {\r\n    actions.deleteCharacter(characterId)\r\n  }\r\n  const findCharacter = (characterId: string) => {\r\n    return findCharacterInParty<ProcessedPartyT, ProcessedCharacterT>(\r\n      party,\r\n      characterId,\r\n    )\r\n  }\r\n  const findRawCharacter = (characterId: string) => {\r\n    return findCharacterInParty(rawParty, characterId)\r\n  }\r\n\r\n  const equipItem = (characterId: string, item: WeaponT | ArmorT) => {\r\n    const character = findRawCharacter(characterId)\r\n    if (!character) return\r\n    if (item.itemType === 'armor') {\r\n      const armor = item as ArmorT\r\n      if (armor.resource === 'offhand' && character.weapon.twoHand) return\r\n      const result = equipArmor(character, armor)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.armor ? [result.armor] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n    if (item.itemType === 'weapon') {\r\n      const weapon = item as WeaponT\r\n      if (character.weapon.twoHand) {\r\n        if (character.armor.find((a) => a.resource === 'offhand')) {\r\n          return\r\n        }\r\n      }\r\n      const result = equipWeapon(character, weapon)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.weapon ? [result.weapon] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n  }\r\n  const unequipItem = (characterId: string, item: WeaponT | ArmorT) => {\r\n    const character = findRawCharacter(characterId)\r\n    if (!character) return\r\n    if (item.itemType === 'armor') {\r\n      const armor = item as ArmorT\r\n      const result = unequipArmor(character, armor.resource)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.armor ? [result.armor] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n    if (item.itemType === 'weapon') {\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PartyContext.Provider\r\n      value={{\r\n        party,\r\n        rawParty,\r\n        activeCharacter,\r\n        updateParty,\r\n        upsertCharacter,\r\n        deleteCharacter,\r\n        findCharacter,\r\n        findRawCharacter,\r\n        setActiveCharacter,\r\n        equipItem,\r\n        unequipItem,\r\n      }}\r\n    >\r\n      {children}\r\n    </PartyContext.Provider>\r\n  )\r\n}\r\n\r\nexport const usePartyContext = () => useContext(PartyContext)\r\n","import { ProcessedCharacterT } from './Character'\r\nimport { hasStatus } from '../functions'\r\n\r\nexport interface CombatQueueT {\r\n  [characterId: string]: number\r\n}\r\n\r\nexport const makeCombatQueue = (\r\n  characters: ProcessedCharacterT[],\r\n): CombatQueueT => {\r\n  const sortedCharacters = characters.sort(\r\n    (a, b) => b.stats.agility - a.stats.agility,\r\n  )\r\n  return sortedCharacters.reduce(\r\n    (r, c, i) => ({\r\n      ...r,\r\n      [c.id]: 100 - c.stats.agility,\r\n    }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const getMax = (queue: CombatQueueT): number => {\r\n  return Object.keys(queue).reduce((r: number, id: string) => {\r\n    if (r < queue[id]) return queue[id]\r\n    return r\r\n  }, Number.NEGATIVE_INFINITY)\r\n}\r\n\r\nexport const getMin = (\r\n  queue: CombatQueueT,\r\n  characters?: ProcessedCharacterT[],\r\n): number => {\r\n  return Object.keys(queue).reduce((r: number, id: string) => {\r\n    if (queue[id] < r) {\r\n      if (characters) {\r\n        const c = characters.find((c) => c.id === id)\r\n        if (c && hasStatus(c, 'dazed')) {\r\n          return r\r\n        } else {\r\n          return queue[id]\r\n        }\r\n      } else return queue[id]\r\n    }\r\n    return r\r\n  }, Number.POSITIVE_INFINITY)\r\n}\r\n\r\nexport const consolidateQueue = (\r\n  queue: CombatQueueT,\r\n  characters: ProcessedCharacterT[] = [],\r\n): CombatQueueT => {\r\n  let min = getMin(queue, characters)\r\n  return Object.keys(queue).reduce((r, id) => {\r\n    const character = characters.find((c) => c.id === id)\r\n    const offset = character && hasStatus(character, 'dazed') ? 0 : min\r\n    return {\r\n      ...r,\r\n      [id]: queue[id] - offset,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const shiftQueue = (\r\n  queue: CombatQueueT,\r\n  character: ProcessedCharacterT,\r\n  characters: ProcessedCharacterT[],\r\n): CombatQueueT => {\r\n  const ret = consolidateQueue(\r\n    {\r\n      ...queue,\r\n      [character.id]: 200 - character.stats.agility,\r\n    },\r\n    characters,\r\n  )\r\n  return ret\r\n}\r\n\r\nexport const getFirst = (queue: CombatQueueT): string => {\r\n  let min = Number.POSITIVE_INFINITY\r\n  let key = Object.keys(queue)[0]\r\n  Object.keys(queue).forEach((id) => {\r\n    if (min > queue[id]) {\r\n      min = queue[id]\r\n      key = id\r\n    }\r\n  })\r\n  return key\r\n}\r\n\r\nexport const removeFromQueue = (\r\n  queue: CombatQueueT,\r\n  id: string,\r\n): CombatQueueT => {\r\n  return consolidateQueue(\r\n    Object.keys(queue)\r\n      .filter((key) => key !== id)\r\n      .reduce(\r\n        (r, id) => ({\r\n          ...r,\r\n          [id]: queue[id],\r\n        }),\r\n        {},\r\n      ),\r\n  )\r\n}\r\n\r\nexport const validateQueue = (\r\n  queue: CombatQueueT,\r\n  characters: ProcessedCharacterT[],\r\n): CombatQueueT => {\r\n  return consolidateQueue(\r\n    characters.reduce((r, c) => {\r\n      return c.dead ? r : { ...r, [c.id]: queue[c.id] }\r\n    }, {}),\r\n  )\r\n}\r\n\r\nexport const getSortedIds = (queue: CombatQueueT): string[] => {\r\n  return Object.keys(queue).sort((a, b) => queue[a] - queue[b])\r\n}\r\n","import { ModalStylesT } from '.'\r\n\r\nexport interface ModalContextStateT {\r\n  isOpen: boolean\r\n  contents: JSX.Element | null\r\n  callback: ((payload?: any) => void) | null\r\n  payload: any | null\r\n  blocking: boolean\r\n  styles: ModalStylesT\r\n}\r\nexport const initialState: ModalContextStateT = {\r\n  isOpen: false,\r\n  contents: null,\r\n  callback: null,\r\n  payload: null,\r\n  blocking: false,\r\n  styles: {},\r\n}\r\n\r\nexport const OPEN = 'modalContext/OPEN'\r\nexport const CLOSE = 'modalContext/CLOSE'\r\nexport const SET_CONTENTS = 'modalContext/SET_CONTENTS'\r\nexport const SET_CALLBACK = 'modalContext/SET_CALLBACK'\r\nexport const SET_PAYLOAD = 'modalContext/SET_PAYLOAD'\r\nexport const SET_BLOCKING = 'modalContext/SET_BLOCKING'\r\nexport const SET_STYLE = 'modalContext/SET_STYLE'\r\n\r\nexport const actions = {\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => ({\r\n    type: OPEN,\r\n    contents,\r\n    styles,\r\n    blocking,\r\n    callback,\r\n  }),\r\n  close: () => ({ type: CLOSE }),\r\n  setPayload: (payload: any) => ({ type: SET_PAYLOAD, payload }),\r\n  setContents: (contents: JSX.Element | null) => ({\r\n    type: SET_CONTENTS,\r\n    contents,\r\n  }),\r\n  setCallback: (callback: (() => void) | null) => ({\r\n    type: SET_CALLBACK,\r\n    callback,\r\n  }),\r\n  setBlocking: (blocking: boolean) => ({ type: SET_BLOCKING, blocking }),\r\n  setStyles: (styles: ModalStylesT) => ({ type: SET_STYLE, styles }),\r\n}\r\n\r\nconst core: Record<\r\n  string,\r\n  (state: ModalContextStateT, action: any) => ModalContextStateT\r\n> = {\r\n  [OPEN]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    isOpen: true,\r\n    contents: action.contents ? action.contents : state.contents,\r\n    styles: action.styles ? action.styles : state.styles || {},\r\n    blocking: action.blocking || false,\r\n    callback: action.callback ? action.callback : state.callback,\r\n  }),\r\n  [CLOSE]: (state: ModalContextStateT) => ({\r\n    ...state,\r\n    isOpen: false,\r\n  }),\r\n  [SET_PAYLOAD]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    payload: action.payload,\r\n  }),\r\n  [SET_CONTENTS]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: null,\r\n    payload: null,\r\n    contents: action.contents,\r\n    blocking: false,\r\n    style: {},\r\n  }),\r\n  [SET_CALLBACK]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: action.callback,\r\n  }),\r\n  [SET_BLOCKING]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    blocking: action.blocking,\r\n  }),\r\n  [SET_STYLE]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    styles: action.styles,\r\n  }),\r\n}\r\n\r\nexport const reducer = (\r\n  state: ModalContextStateT = initialState,\r\n  action: any,\r\n) => {\r\n  const coreFunction = core[action.type]\r\n  return coreFunction ? coreFunction(state, action) : state\r\n}\r\n","import React, { useContext, useReducer, useMemo, CSSProperties } from 'react'\r\nimport Modal from 'react-modal'\r\nimport { actions, reducer, initialState, ModalContextStateT } from './reducer'\r\n\r\nexport interface ModalContextT {\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => void\r\n  close: (payload?: any) => void\r\n  setPayload: (payload: any) => void\r\n  setBlocking: (blocking: boolean) => void\r\n  setContents: (contents: JSX.Element) => void\r\n  setCallback: (callback: (payload?: any) => void) => void\r\n  setStyles: (styles: ModalStylesT) => void\r\n}\r\nconst defaultContext: ModalContextT = {\r\n  open: () => null,\r\n  close: () => null,\r\n  setBlocking: () => null,\r\n  setPayload: () => null,\r\n  setContents: () => null,\r\n  setCallback: () => null,\r\n  setStyles: () => null,\r\n}\r\nexport const ModalContext = React.createContext<ModalContextT>(defaultContext)\r\nexport const useModalContext = () => useContext(ModalContext)\r\n\r\nexport interface ModalStylesT {\r\n  modal?: CSSProperties\r\n  overlay?: CSSProperties\r\n}\r\n\r\nconst getContextValue = (\r\n  state: ModalContextStateT,\r\n  dispatch: React.Dispatch<any>,\r\n) => ({\r\n  isOpen: state.isOpen,\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => {\r\n    dispatch(actions.open(contents, styles, blocking, callback))\r\n  },\r\n  close: (payload?: any) => {\r\n    if (state.callback) state.callback(payload || state.payload)\r\n    dispatch(actions.close())\r\n  },\r\n  setPayload: (payload: any) => dispatch(actions.setPayload(payload)),\r\n  setContents: (contents: JSX.Element) =>\r\n    dispatch(actions.setContents(contents)),\r\n  setCallback: (callback: (payload?: any) => void) =>\r\n    dispatch(actions.setCallback(callback)),\r\n  setBlocking: (blocking: boolean) => dispatch(actions.setBlocking(blocking)),\r\n  setStyles: (styles: ModalStylesT) => dispatch(actions.setStyles(styles)),\r\n})\r\nModal.setAppElement('#root')\r\nexport interface ModalContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const ModalContextProvider = (props: ModalContextProviderPropsT) => {\r\n  const { children } = props\r\n  const reducerValue = useReducer(reducer, initialState)\r\n  const [state] = reducerValue\r\n  const context = useMemo(() => getContextValue(...reducerValue), [\r\n    reducerValue,\r\n  ])\r\n\r\n  return (\r\n    <ModalContext.Provider value={context}>\r\n      {children}\r\n      <Modal\r\n        isOpen={state.isOpen}\r\n        onRequestClose={() => {\r\n          if (!state.blocking) context.close()\r\n        }}\r\n        style={{\r\n          content: {\r\n            backgroundColor: '#111',\r\n            color: 'white',\r\n            width: 400,\r\n            margin: '0 auto',\r\n            bottom: 'unset',\r\n            borderColor: '#555',\r\n            ...state.styles.modal,\r\n          },\r\n          overlay: {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n            zIndex: 900,\r\n            ...state.styles.overlay,\r\n          },\r\n        }}\r\n      >\r\n        {state.contents || <div />}\r\n      </Modal>\r\n    </ModalContext.Provider>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport interface FlexContainerPropsT {\r\n  $direction?: 'row' | 'column' | 'column-reverse'\r\n  $full?: boolean\r\n}\r\nexport const FlexContainer = styled('div', (props: FlexContainerPropsT) => ({\r\n  display: 'flex',\r\n  flexDirection: props.$direction || 'row',\r\n  flex: props.$full ? 1 : 'default',\r\n}))\r\nexport const FullContainer = styled('div', () => ({\r\n  flex: 1,\r\n}))\r\n","import React from 'react'\r\nimport { styled, withStyle } from 'styletron-react'\r\nimport { animated, useSpring } from 'react-spring'\r\n\r\nexport interface ButtonPropsT {\r\n  $direction?: 'up' | 'down'\r\n}\r\nexport const Button = styled('button', (props: ButtonPropsT) => {\r\n  return {\r\n    cursor: 'pointer',\r\n    background: '#222',\r\n    boxShadow: 'inset 0px 0px 3px black',\r\n    textShadow: '0px 1px 3px black',\r\n    border: '1px solid rgba(255,255,255,0.2)',\r\n    color: 'rgba(255,255,255,1)',\r\n    ':hover': {\r\n      border: '1px solid rgba(255,255,255,0.4)',\r\n    },\r\n    ':active': {\r\n      outline: 'none',\r\n      border: '1px solid rgba(255,255,255,0.7)',\r\n    },\r\n    ':focus': {\r\n      outline: 'none',\r\n    },\r\n    padding: '10px 30px',\r\n  }\r\n})\r\n\r\nexport const RedButton = withStyle(Button, (props: ButtonPropsT) => {\r\n  return {\r\n    background:\r\n      'linear-gradient(0deg, rgba(157,0,0,1) 0%, rgba(110,0,0,1) 100%)',\r\n  }\r\n})\r\n\r\nexport const ConfirmButton = withStyle(Button, (props: ButtonPropsT) => {\r\n  const { $direction } = props\r\n  return {\r\n    // background: 'linear-gradient(0deg, rgba(157,0,0,1) 0%, rgba(110,0,0,1) 100%)',\r\n    // fontWeight: 'bold',\r\n    borderTop: $direction === 'down' ? 'none' : undefined,\r\n    borderBottom: $direction === 'up' ? 'none' : undefined,\r\n    padding: '10px 30px',\r\n    boxShadow: 'inset 0px 2px 8px black',\r\n    ':hover': {\r\n      borderTop: $direction === 'down' ? 'none' : undefined,\r\n      borderBottom: $direction === 'up' ? 'none' : undefined,\r\n    },\r\n    animationDirection: '1s',\r\n    animationIterationCount: 'infinite',\r\n    animationName: `\r\n      from: {\r\n        background: 'rgba(255,255,255,0.4)',\r\n      },\r\n\r\n      to: {\r\n        background: 'rgba(255,255,255,1)',\r\n      },\r\n    `,\r\n  }\r\n})\r\n\r\nexport const ConfirmButton2 = (props: any) => {\r\n  const styles = useSpring({\r\n    from: {\r\n      border: '1px solid rgba(255,255,255,0)',\r\n    },\r\n    to: async (next: any) => {\r\n      while (1) {\r\n        await next({\r\n          border: '1px solid rgba(255,255,255,0)',\r\n        })\r\n        await next({ border: '1px solid rgba(255,255,255,1)' })\r\n      }\r\n    },\r\n  })\r\n  return (\r\n    <animated.div style={styles}>\r\n      <ConfirmButton style={{ border: 'none' }}>{props.children}</ConfirmButton>\r\n    </animated.div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nexport interface IconPropsT {\r\n  src: string\r\n  size: number\r\n  fill?: string\r\n  style?: React.CSSProperties\r\n  shadow?: boolean\r\n  onClick?: () => void\r\n}\r\nexport const Icon = ({\r\n  src,\r\n  size,\r\n  style = {},\r\n  fill = 'white',\r\n  shadow,\r\n  onClick,\r\n}: IconPropsT) => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [svg, setSvg] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (src) {\r\n      fetch(src)\r\n        .then((res) => res.text())\r\n        .then((text) => setSvg(text))\r\n        .then(() => setLoading(false))\r\n    }\r\n  }, [src])\r\n\r\n  return !loading ? (\r\n    <div\r\n      className={`icon ${shadow ? 'shadow' : ''}`}\r\n      onClick={() => {\r\n        if (onClick) onClick()\r\n      }}\r\n      style={{ ...style, height: size, width: size, fill }}\r\n      dangerouslySetInnerHTML={{ __html: svg }}\r\n    />\r\n  ) : (\r\n    <div />\r\n  )\r\n}\r\n","import React, { useState, useLayoutEffect } from 'react'\r\nimport { v4 } from 'uuid'\r\n\r\nexport interface HoverChildrenT {\r\n  isHovering: boolean\r\n}\r\nexport interface HoverPropsT {\r\n  delay?: number\r\n  children: (props: HoverChildrenT) => JSX.Element\r\n}\r\nexport const Hover = (props: HoverPropsT) => {\r\n  const { delay = 500, children } = props\r\n  const [internalHovering, setInternalHovering] = useState<boolean>(false)\r\n  const [isHovering, setIsHovering] = useState<boolean>(false)\r\n  const [guid, setGuid] = useState<string>(v4())\r\n  useLayoutEffect(() => {\r\n    const action = async () => {\r\n      if (internalHovering) {\r\n        setTimeout(() => {\r\n          setGuid(v4())\r\n        }, delay)\r\n      }\r\n    }\r\n    action()\r\n  }, [internalHovering])\r\n  useLayoutEffect(() => {\r\n    if (internalHovering) {\r\n      setIsHovering(true)\r\n    }\r\n  }, [guid])\r\n  const onMouseEnter = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(true)\r\n  }\r\n  const onMouseLeave = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(false)\r\n    setIsHovering(false)\r\n  }\r\n  return (\r\n    <div onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\r\n      {children({ isHovering })}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Hover } from '../components/Hover'\r\n\r\nexport interface BoxContainerPropsT extends React.HTMLProps<HTMLDivElement> {\r\n  substyle?: React.CSSProperties\r\n  tag?: any\r\n  to?: string\r\n}\r\nexport const BoxContainer = (props: BoxContainerPropsT) => {\r\n  const {\r\n    style = {},\r\n    substyle = {},\r\n    children,\r\n    tag: Element = 'div',\r\n    ...rest\r\n  } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        border: '1px solid #000',\r\n        display: 'flex',\r\n        boxSizing: 'border-box',\r\n        ...style,\r\n      }}\r\n    >\r\n      <Element\r\n        style={{\r\n          border: substyle.border || '1px solid #555',\r\n          background: 'linear-gradient(0deg, #222222 0%, #2a2a2a 100%)',\r\n          padding: 10,\r\n          color: '#ccc',\r\n          flex: 1,\r\n          boxShadow: 'inset 0px 0px 2px black',\r\n          ...substyle,\r\n        }}\r\n        {...rest}\r\n      >\r\n        {children}\r\n      </Element>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const SmallBox = (props: BoxContainerPropsT) => (\r\n  <BoxContainer\r\n    {...props}\r\n    style={{\r\n      height: 40,\r\n      width: 40,\r\n      ...props.style,\r\n    }}\r\n    substyle={{\r\n      display: 'flex',\r\n      padding: 0,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      background: '#111',\r\n      ...props.substyle,\r\n    }}\r\n  >\r\n    {props.children}\r\n  </BoxContainer>\r\n)\r\n\r\nexport const BoxButton = (props: BoxContainerPropsT) => {\r\n  return (\r\n    <Hover delay={0}>\r\n      {({ isHovering }) => (\r\n        <BoxContainer\r\n          {...props}\r\n          tag='button'\r\n          style={{\r\n            margin: 0,\r\n            ...(props.style || {}),\r\n          }}\r\n          substyle={{\r\n            borderColor: isHovering && !props.disabled ? '#999' : '#555',\r\n            padding: '4px',\r\n            cursor: props.disabled ? 'default' : 'pointer',\r\n            background: props.disabled ? '#444' : '#111',\r\n            boxShadow: props.disabled ? 'none' : undefined,\r\n            ...(props.substyle || {}),\r\n          }}\r\n        />\r\n      )}\r\n    </Hover>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StatsT } from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport {\r\n  DEFENSE_BONUS_KEYS,\r\n  DAMAGE_BONUS_KEYS,\r\n  STAT_KEY_LABELS,\r\n  STAT_BONUS_KEYS,\r\n} from '../../objects'\r\n\r\nexport interface StatsPreviewPropsT {\r\n  stats: StatsT\r\n}\r\n\r\nconst defense_key_colors: any = {\r\n  armor: 'lightblue',\r\n  resistance: 'plum',\r\n}\r\n\r\nexport const StatsPreview = (props: StatsPreviewPropsT) => {\r\n  const { stats } = props\r\n  return (\r\n    <FlexContainer $direction='column' style={{ fontSize: 14 }}>\r\n      {DEFENSE_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] > 0 && (\r\n            <span\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: defense_key_colors[key],\r\n              }}\r\n            >\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {DAMAGE_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] > 0 && (\r\n            <span style={{ textTransform: 'capitalize' }}>\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {STAT_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] > 0 && (\r\n            <span\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: 'lightgreen',\r\n              }}\r\n            >\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {STAT_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] < 0 && (\r\n            <span\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: 'lightcoral',\r\n              }}\r\n            >\r\n              {stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { StatsT, ArmorTypeT, StatusTypeT, ArmorResourceType } from '../types'\r\n\r\nimport Vigor from './svg/delapouite/heart-beats.svg'\r\nimport Strength from './svg/delapouite/biceps.svg'\r\nimport Brain from './svg/lorc/brain.svg'\r\nimport Awareness from './svg/delapouite/eye-target.svg'\r\nimport Juggler from './svg/lorc/juggler.svg'\r\nimport Agility from './svg/lorc/sprint.svg'\r\nimport Clover from './svg/lorc/clover.svg'\r\nimport Accuracy from './svg/delapouite/convergence-target.svg'\r\n\r\nimport Dazed from './svg/lorc/star-swirl.svg'\r\nimport Targeted from './svg/sbed/targeted.svg'\r\nimport Evasive from './svg/lorc/dodging.svg'\r\nimport SpeedDown from './svg/delapouite/sticky-boot.svg'\r\nimport Poisoned from './svg/lorc/biohazard.svg'\r\n\r\nimport Shot from './svg/lorc/high-shot.svg'\r\nimport SnipeShot from './svg/delapouite/shield-impact.svg'\r\nimport Surge from './svg/lorc/fire-zone.svg'\r\nimport AreaBast from './svg/lorc/heavy-timer.svg'\r\nimport Dazzle from './svg/lorc/ubisoft-sun.svg'\r\nimport Smash from './svg/lorc/flat-hammer.svg'\r\nimport Shockwave from './svg/lorc/hammer-drop.svg'\r\nimport Taunt from './svg/lorc/bordered-shield.svg'\r\nimport Alto from './svg/delapouite/g-clef.svg'\r\nimport Protect from './svg/lorc/shieldcomb.svg'\r\nimport { SHOT } from '../objects/skills/shot'\r\nimport { SNIPE_SHOT } from '../objects/skills/snipe_shot'\r\nimport { SURGE } from '../objects/skills/surge'\r\nimport { AREA_BLAST } from '../objects/skills/area_blast'\r\nimport { DAZZLE } from '../objects/skills/dazzle'\r\nimport { SMASH } from '../objects/skills/smash'\r\nimport { SHOCKWAVE } from '../objects/skills/shockwave'\r\nimport { TAUNT } from '../objects/skills/taunt'\r\nimport { ALTO } from '../objects/skills/alto'\r\nimport { SYMPHONY } from '../objects/skills/symphony'\r\n\r\nimport MagicArmor from './svg/lorc/robe.svg'\r\nimport ClothArmor from './svg/lorc/scale-mail.svg'\r\nimport Armor from './svg/delapouite/chest-armor.svg'\r\nimport Shield from './svg/delapouite/viking-shield.svg'\r\nimport MagicShield from './svg/lorc/lightning-shield.svg'\r\nimport Footwear from './svg/lorc/leather-boot.svg'\r\nimport Hat from './svg/delapouite/robin-hood-hat.svg'\r\nimport MagicHat from './svg/lorc/pointy-hat.svg'\r\nimport Helmet from './svg/lorc/visored-helm.svg'\r\nimport Weapon from './svg/lorc/broadsword.svg'\r\n\r\nimport Godsbeard from './svg/delapouite/herbs-bundle.svg'\r\nimport { GODSBEARD } from '../objects/consumables/godsbeard'\r\nimport { PROTECT } from '../objects/skills/protect'\r\nimport { RITARDANDO } from '../objects/skills/ritardando'\r\nimport { stringify } from 'querystring'\r\nimport { BANDIT } from '../objects/enemies/bandit'\r\n\r\nexport const STATI_ICONS: Partial<Record<keyof StatsT | 'accuracy', string>> = {\r\n  vigor: Vigor,\r\n  strength: Strength,\r\n  intelligence: Brain,\r\n  perception: Awareness,\r\n  talent: Juggler,\r\n  agility: Agility,\r\n  luck: Clover,\r\n  accuracy: Accuracy,\r\n}\r\n\r\nexport const STATUS_ICONS: Partial<Record<StatusTypeT, string>> = {\r\n  dazed: Dazed,\r\n  targeted: Targeted,\r\n  evasive: Evasive,\r\n  protected: Protect,\r\n  ['speed-down']: SpeedDown,\r\n  poisoned: Poisoned,\r\n}\r\n\r\nexport const SKILL_ICONS: Record<string, string> = {\r\n  [SHOT.id]: Shot,\r\n  [SNIPE_SHOT.id]: SnipeShot,\r\n  [SURGE.id]: Surge,\r\n  [AREA_BLAST.id]: AreaBast,\r\n  [SYMPHONY.id]: AreaBast,\r\n  [DAZZLE.id]: Dazzle,\r\n  [SMASH.id]: Smash,\r\n  [SHOCKWAVE.id]: Shockwave,\r\n  [TAUNT.id]: Taunt,\r\n  [ALTO.id]: Alto,\r\n  [RITARDANDO.id]: Alto,\r\n  [PROTECT.id]: Protect,\r\n}\r\n\r\nexport const ARMOR_TYPE_ICONS: Record<ArmorTypeT, string> = {\r\n  ['magic-armor']: MagicArmor,\r\n  ['cloth-armor']: ClothArmor,\r\n  armor: Armor,\r\n  shield: Shield,\r\n  ['magic-shield']: MagicShield,\r\n  footwear: Footwear,\r\n  hat: Hat,\r\n  ['magic-hat']: MagicHat,\r\n  helmet: Helmet,\r\n  charm: '',\r\n  ring: '',\r\n}\r\n\r\nexport const RESOURCE_ICONS: Record<ArmorResourceType | 'weapon', string> = {\r\n  weapon: Weapon,\r\n  offhand: Shield,\r\n  body: Armor,\r\n  head: Helmet,\r\n  feet: Footwear,\r\n}\r\n\r\nexport const CONSUMABLE_ITEM_ICONS: Record<string, string> = {\r\n  [GODSBEARD.id]: Godsbeard,\r\n}\r\nexport const CONSUMABLE_ITEM_COLORS: Record<string, string> = {\r\n  [GODSBEARD.id]: '#84a397',\r\n}\r\n","import React from 'react'\r\nimport Color from 'color'\r\nimport { ArmorT } from '../../types'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { combineTraits } from '../../functions'\r\nimport { StatsPreview } from '../StatsPreview'\r\nimport { Icon } from '../Icon'\r\nimport { ARMOR_TYPE_ICONS } from '../../icons/maps'\r\nimport { ITEM_RARITY_COLORS } from '../../objects/Item'\r\nimport { Button } from '../../elements/button'\r\n\r\nexport interface ArmorPreviewPropsT {\r\n  armor: ArmorT\r\n  showEquipButton?: boolean\r\n  onEquipClick?: () => void\r\n}\r\nexport const ArmorPreview = (props: ArmorPreviewPropsT) => {\r\n  const { armor, showEquipButton, onEquipClick } = props\r\n  const combinedTrait = combineTraits(...armor.traits)\r\n  const rarityColor = ITEM_RARITY_COLORS[armor.rarity]\r\n  const from = Color(rarityColor).darken(0.5).rgb().toString()\r\n  const to = Color(rarityColor).darken(0.7).rgb().toString()\r\n  const gradient = `linear-gradient(180deg, ${from} 0%, ${to} 100%)`\r\n  return (\r\n    <BoxContainer style={{ minWidth: 200 }} substyle={{ background: gradient }}>\r\n      <FlexContainer $direction='column'>\r\n        <FlexContainer style={{ marginBottom: 8 }}>\r\n          <Icon\r\n            src={ARMOR_TYPE_ICONS[armor.type]}\r\n            size={32}\r\n            style={{ marginRight: 10 }}\r\n            shadow\r\n          />\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              textShadow: '1px 1px 2px rgba(0,0,0,0.8)',\r\n            }}\r\n          >\r\n            <span style={{ fontWeight: 600 }}>{armor.name}</span>\r\n            <span style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n              {armor.rarity}\r\n            </span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n          {showEquipButton && (\r\n            <div style={{ marginLeft: 10 }}>\r\n              <Button onClick={onEquipClick} style={{ padding: 4 }}>\r\n                Equip\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </FlexContainer>\r\n        <BoxContainer\r\n          substyle={{ background: 'rgba(0,0,0,0.7)', minHeight: 120 }}\r\n        >\r\n          <FlexContainer $direction='column'>\r\n            {armor.skills.length > 0 && (\r\n              <span style={{ color: 'plum', marginBottom: 8 }}>\r\n                {armor.skills.map(\r\n                  (skill, i) => `${i > 0 ? ', ' : ''}${skill.name}`,\r\n                )}\r\n              </span>\r\n            )}\r\n            <StatsPreview stats={combinedTrait.stats} />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useState, useRef } from 'react'\r\nimport BaseTooltip, { TooltipProps } from 'react-tooltip-lite'\r\nimport { Hover } from '../Hover'\r\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\r\n\r\nexport interface ClickToolTipChildrenT {\r\n  onClick: (value?: boolean) => void\r\n  ref: React.MutableRefObject<HTMLElement | undefined>\r\n}\r\ninterface PropsT extends TooltipProps {\r\n  children: JSX.Element | ((props: ClickToolTipChildrenT) => JSX.Element)\r\n  content: JSX.Element | ((props: ClickToolTipChildrenT) => JSX.Element)\r\n}\r\nexport const Tooltip = (props: PropsT) => {\r\n  const { ...rest } = props\r\n  return (\r\n    <BaseTooltip\r\n      direction='up'\r\n      tagName='div'\r\n      padding='0'\r\n      arrow={false}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nexport const HoverToolTip = (props: PropsT) => {\r\n  return (\r\n    <Hover>\r\n      {({ isHovering }) => <Tooltip {...props} isOpen={isHovering} />}\r\n    </Hover>\r\n  )\r\n}\r\n\r\nexport const ClickToolTip = (props: PropsT) => {\r\n  const { children, content, ...rest } = props\r\n  const [isOpen, setIsOpen] = useState<boolean>(false)\r\n  const ref = useRef<HTMLElement>()\r\n  useOnClickOutside(ref, () => {\r\n    setIsOpen(false)\r\n  })\r\n  if (typeof children !== 'function') return null\r\n  if (typeof content !== 'function') return null\r\n  const p = {\r\n    onClick: (value?: boolean) => {\r\n      setIsOpen((v) => (value !== undefined ? value : !v))\r\n    },\r\n    ref,\r\n  }\r\n  return (\r\n    <Tooltip content={content(p)} {...rest} isOpen={isOpen}>\r\n      {children(p)}\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport const useOnClickOutside = (\r\n  ref: React.MutableRefObject<HTMLElement | undefined>,\r\n  handler: Function,\r\n) => {\r\n  useEffect(() => {\r\n    const listener = (event: any) => {\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return\r\n      }\r\n\r\n      setTimeout(() => handler(event), 150)\r\n    }\r\n\r\n    document.addEventListener('mousedown', listener)\r\n    document.addEventListener('touchstart', listener)\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', listener)\r\n      document.removeEventListener('touchstart', listener)\r\n    }\r\n  }, [ref, handler])\r\n}\r\n","import React from 'react'\r\nimport { styled, withWrapper } from 'styletron-react'\r\nimport { HoverToolTip } from '../components/Tooltip'\r\n\r\nconst Div = styled('div', {\r\n  transform: 'rotateY(0deg) rotate(-45deg)',\r\n})\r\nexport const Badge = withWrapper(Div, (Element) => (props: any) => {\r\n  const { onClick, ...rest } = props\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      style={{\r\n        position: props.$absolute === false ? 'relative' : 'absolute',\r\n        background: '#111',\r\n        padding: '4px',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        boxShadow: '1px 1px 0px black',\r\n        height: props.$size || '20px',\r\n        width: props.$size || '20px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        lineHeight: '20px',\r\n        fontWeight: 'bolder',\r\n        borderRadius: '30%',\r\n        transform: 'rotateY(0deg) rotate(45deg)',\r\n        color: props.$color || 'white',\r\n        cursor: 'pointer',\r\n        top: props.$top,\r\n        bottom: props.$bottom,\r\n        right: props.$right,\r\n        left: props.$left,\r\n        zIndex: 2,\r\n      }}\r\n    >\r\n      <Element {...rest} />\r\n    </div>\r\n  )\r\n})\r\n\r\nexport interface HoverBadgePropsT {\r\n  children: JSX.Element\r\n  content: JSX.Element\r\n  badgeProps: any\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n}\r\nexport const HoverBadge = (props: HoverBadgePropsT) => {\r\n  const { children, content, badgeProps, direction } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        top: badgeProps.$top,\r\n        bottom: badgeProps.$bottom,\r\n        left: badgeProps.$left,\r\n        right: badgeProps.$right,\r\n      }}\r\n    >\r\n      <HoverToolTip\r\n        distance={2}\r\n        direction={direction || 'right'}\r\n        // styles={{ position: 'absolute' }}\r\n        content={content || <div />}\r\n      >\r\n        <Badge\r\n          $absolute={false}\r\n          $size={badgeProps.$size}\r\n          $color={badgeProps.$color}\r\n          style={badgeProps.style}\r\n        >\r\n          {children}\r\n        </Badge>\r\n      </HoverToolTip>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { SkillT, StatsT } from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STATI_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Badge } from '../../elements/badge'\r\nimport { CheckKVT } from '../RoundResultRenderer'\r\nimport X from '../../icons/svg/lorc/split-cross.svg'\r\n\r\nexport interface SkillChecksPropsT {\r\n  skill: SkillT\r\n}\r\nexport const SkillChecks = (props: SkillChecksPropsT) => {\r\n  const { skill } = props\r\n  return (\r\n    <FlexContainer\r\n      style={{ justifyContent: 'center', padding: '0px 0 24px 0' }}\r\n    >\r\n      {skill.rolls.map((roll, i) => (\r\n        <SkillCheck\r\n          key={i}\r\n          check={{ label: roll.key || 'strength', result: undefined }}\r\n        />\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface SkillCheckT {\r\n  check: CheckKVT\r\n  size?: number\r\n  padding?: number\r\n}\r\nexport const SkillCheck = (props: SkillCheckT) => {\r\n  const { check, size = 36, padding = 12 } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: `0px ${padding}px`,\r\n        opacity: check.result === undefined ? 0.5 : 1,\r\n      }}\r\n    >\r\n      <Badge $absolute={false} $size={size}>\r\n        <Icon\r\n          src={STATI_ICONS[(check.label as keyof StatsT) || 'strength'] || ''}\r\n          fill={getColor(check.result)}\r\n          size={size - 4}\r\n        />\r\n        {check.result === false && (\r\n          <Icon\r\n            src={X}\r\n            fill={'lightcoral'}\r\n            size={size - 4}\r\n            style={{ position: 'absolute', top: 0 }}\r\n          />\r\n        )}\r\n      </Badge>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst getColor = (result: boolean | undefined) => {\r\n  if (result === true) return 'white'\r\n  if (result === false) return 'rgba(255,255,255,0.6)'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n","import React from 'react'\r\nimport Color from 'color'\r\nimport { ProcessedWeaponT } from '../../types'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { combineTraits } from '../../functions'\r\nimport { StatsPreview } from '../StatsPreview'\r\nimport { ITEM_RARITY_COLORS } from '../../objects/Item'\r\nimport { Button } from '../../elements/button'\r\n\r\nexport const getDamageColor = (weapon: ProcessedWeaponT) => {\r\n  if (weapon.damage.type === 'physical') return 'lightblue'\r\n  if (weapon.damage.type === 'magic') return 'plum'\r\n  return 'white'\r\n}\r\n\r\nexport interface WeaponPreviewPropsT {\r\n  weapon: ProcessedWeaponT\r\n  showEquipButton?: boolean\r\n  onEquipClick?: () => void\r\n}\r\nexport const WeaponPreview = (props: WeaponPreviewPropsT) => {\r\n  const { weapon, showEquipButton, onEquipClick } = props\r\n  const basicAttack = weapon.skills.find((s) => s.isBasicAttack)\r\n  const combinedTrait = combineTraits(...weapon.traits)\r\n  const rarityColor = ITEM_RARITY_COLORS[weapon.rarity]\r\n  const from = Color(rarityColor).darken(0.5).rgb().toString()\r\n  const to = Color(rarityColor).darken(0.7).rgb().toString()\r\n  const gradient = `linear-gradient(180deg, ${from} 0%, ${to} 100%)`\r\n  return (\r\n    <BoxContainer style={{ width: 240 }} substyle={{ background: gradient }}>\r\n      <FlexContainer $direction='column'>\r\n        {basicAttack && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginBottom: 10 }}>\r\n            {basicAttack.rolls.map((roll) => (\r\n              <SkillCheck\r\n                check={{ label: roll.key || 'strength', result: true }}\r\n                size={18}\r\n                padding={4}\r\n              />\r\n            ))}\r\n          </FlexContainer>\r\n        )}\r\n        <FlexContainer>\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              margin: '8px 0',\r\n              textShadow: '1px 1px 2px rgba(0,0,0,0.8)',\r\n            }}\r\n          >\r\n            <span style={{ fontWeight: 600 }}>{weapon.name}</span>\r\n            <span style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n              {weapon.rarity} {weapon.type}\r\n            </span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n          {showEquipButton && (\r\n            <div style={{ marginLeft: 10 }}>\r\n              <Button onClick={onEquipClick} style={{ padding: 4 }}>\r\n                Equip\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </FlexContainer>\r\n        <BoxContainer\r\n          substyle={{ background: 'rgba(0,0,0,0.7)', minHeight: 120 }}\r\n        >\r\n          <FlexContainer $direction='column'>\r\n            <FlexContainer style={{ lineHeight: '24px', marginBottom: 4 }}>\r\n              <span\r\n                style={{\r\n                  color: getDamageColor(weapon),\r\n                  fontWeight: 'bolder',\r\n                  marginRight: 8,\r\n                  fontSize: 24,\r\n                }}\r\n              >\r\n                {weapon.damage.damage}\r\n              </span>\r\n              <span style={{ textTransform: 'capitalize' }}>\r\n                {weapon.damage.type} Damage\r\n              </span>\r\n            </FlexContainer>\r\n            <span style={{ color: 'plum', marginBottom: 8 }}>\r\n              {weapon.skills.map(\r\n                (skill, i) => `${i > 0 ? ', ' : ''}${skill.name}`,\r\n              )}\r\n            </span>\r\n            <StatsPreview stats={combinedTrait.stats} />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { WeaponT, ArmorT, ProcessedWeaponT } from '../../types'\r\nimport { ArmorPreview } from '../ArmorPreview'\r\nimport { WeaponPreview } from '../WeaponPreview'\r\n\r\nexport interface ItemPreviewPropsT {\r\n  item: WeaponT | ArmorT\r\n}\r\n\r\nexport const ItemPreivew = (props: ItemPreviewPropsT) => {\r\n  const { item } = props\r\n\r\n  if (item.itemType === 'armor') return <ArmorPreview armor={item as ArmorT} />\r\n  if (item.itemType === 'weapon')\r\n    return <WeaponPreview weapon={item as ProcessedWeaponT} />\r\n  return <div />\r\n}\r\n","import React, { useMemo, useEffect, useState } from 'react'\r\nimport { CombatRewardT } from '../../types/CombatReward'\r\nimport { consolidateRewards, commitRewards } from '../../functions'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport Gold from '../../icons/svg/delapouite/coins.svg'\r\nimport XP from '../../icons/svg/lorc/laurel-crown.svg'\r\nimport { Icon } from '../Icon'\r\nimport { ItemPreivew } from '../ItemPreview'\r\n\r\nexport interface CombatVictoryModalPropsT {\r\n  rewards: CombatRewardT[]\r\n}\r\n\r\nexport const CombatVictoryModal = (props: CombatVictoryModalPropsT) => {\r\n  const { rewards } = props\r\n  const { rawParty, updateParty } = usePartyContext()\r\n  const { close } = useModalContext()\r\n  const history = useHistory()\r\n  const consolidatedRewards = useMemo(() => consolidateRewards(rewards), [\r\n    rewards,\r\n  ])\r\n\r\n  const [items, setItems] = useState(consolidatedRewards.items)\r\n  const first = items[0]\r\n  const next = () => {\r\n    if (items.length === 0) {\r\n      close()\r\n      history.push('/JSFTK_combat/party')\r\n    } else {\r\n      setItems((i) => {\r\n        const [first, ...rest] = i\r\n        return rest\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateParty(commitRewards(rawParty, consolidatedRewards))\r\n  }, [])\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <h1>You Win!</h1>\r\n      <FlexContainer $direction='column' style={{ color: 'white' }}>\r\n        <FlexContainer style={{ marginBottom: 16 }}>\r\n          <FlexContainer>\r\n            <Icon src={Gold} size={18} style={{ marginRight: 8 }} />\r\n            <span>{consolidatedRewards.gold} Gold</span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n          <FlexContainer>\r\n            <Icon src={XP} size={18} style={{ marginRight: 8 }} />\r\n            <span>{consolidatedRewards.xp} XP</span>\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n        {first && (\r\n          <FlexContainer style={{ marginBottom: 16 }}>\r\n            <FullContainer />\r\n            <FlexContainer $direction='column'>\r\n              <ItemPreivew item={first} />\r\n              <span\r\n                style={{\r\n                  marginTop: 8,\r\n                  color: 'rgba(255,255,255,0.3)',\r\n                  fontWeight: 'bold',\r\n                  fontSize: 12,\r\n                }}\r\n              >\r\n                1 of {items.length}\r\n              </span>\r\n            </FlexContainer>\r\n            <FullContainer />\r\n          </FlexContainer>\r\n        )}\r\n      </FlexContainer>\r\n      <Button\r\n        onClick={() => {\r\n          next()\r\n        }}\r\n      >\r\n        {items.length === 0 ? 'Close' : 'Next'}\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n} from 'react'\r\nimport {\r\n  ProcessedPartyT,\r\n  PartyT,\r\n  SkillT,\r\n  ProcessedCharacterT,\r\n  TargetSkillResultT,\r\n  SkillTargetT,\r\n} from '../../types'\r\nimport {\r\n  makeParty,\r\n  processParty,\r\n  getSkillResults,\r\n  commitSkillResults,\r\n  processCharacter,\r\n  makeCharacter,\r\n  resolveSkillTarget,\r\n  makeSkillTarget,\r\n  removeTemporaryStatus,\r\n  getRolledRewards,\r\n  consolidateRewards,\r\n  commitRewards,\r\n} from '../../functions'\r\nimport { usePartyContext } from '../PartyContext'\r\nimport {\r\n  CombatQueueT,\r\n  makeCombatQueue,\r\n  getFirst,\r\n  shiftQueue,\r\n  validateQueue,\r\n} from '../../types/CombatQueue'\r\nimport { getAIAction } from '../../functions/AI'\r\nimport { v4 } from 'uuid'\r\nimport { useHistory } from 'react-router'\r\nimport { useModalContext } from '../ModalContext'\r\nimport { Button } from '../../elements/button'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { CombatVictoryModal } from '../../components/CombatVictoryModal'\r\n\r\nexport interface CombatContextT {\r\n  party: ProcessedPartyT\r\n  enemyParty: ProcessedPartyT\r\n  activeCharacter: ProcessedCharacterT\r\n  characters: ProcessedCharacterT[]\r\n  queue: CombatQueueT\r\n  selectedSkill: SkillT | undefined\r\n  selectedTargets: ProcessedCharacterT[]\r\n  selectedConsumableIndex: number | undefined\r\n  roundResults: TargetSkillResultT[][]\r\n  activeRound: TargetSkillResultT[] | undefined\r\n  isRunning: boolean\r\n  isRenderingResult: boolean\r\n  onSkillSelect: (skill: SkillT, consumableIndex?: number) => void\r\n  onTargetsSelect: (target: ProcessedCharacterT | ProcessedPartyT) => void\r\n  onConsumableSelect: (consumableIndex: number | undefined) => void\r\n  reset: () => void\r\n  start: () => void\r\n  next: (nextTarget?: ProcessedCharacterT | ProcessedPartyT) => void\r\n  commit: () => void\r\n}\r\nconst defaultValue: CombatContextT = {\r\n  party: processParty(makeParty()),\r\n  enemyParty: processParty(makeParty()),\r\n  activeCharacter: processCharacter(makeCharacter('blacksmith')),\r\n  characters: [],\r\n  queue: {},\r\n  selectedSkill: undefined,\r\n  selectedTargets: [],\r\n  selectedConsumableIndex: undefined,\r\n  roundResults: [],\r\n  activeRound: undefined,\r\n  isRunning: false,\r\n  isRenderingResult: false,\r\n  onSkillSelect: (skill: SkillT) => {},\r\n  onTargetsSelect: (target: ProcessedCharacterT | ProcessedPartyT) => {},\r\n  onConsumableSelect: (consumableIndex) => {},\r\n  reset: () => {},\r\n  start: () => {},\r\n  next: () => {},\r\n  commit: () => {},\r\n}\r\nexport const CombatContext = createContext<CombatContextT>(defaultValue)\r\nexport const useCombatContext = () => useContext(CombatContext)\r\n\r\nexport interface CombatContextProviderPropsT {\r\n  children: JSX.Element\r\n  enemyParty: PartyT\r\n  setEnemyParty: (party: PartyT) => void\r\n  onRequestNewParty: () => void\r\n}\r\nexport const CombatContextProvider = (props: CombatContextProviderPropsT) => {\r\n  const { children, setEnemyParty, onRequestNewParty } = props\r\n  const { party, rawParty, updateParty } = usePartyContext()\r\n  const { open, close } = useModalContext()\r\n  const history = useHistory()\r\n  const resultCommitter = useMemo(\r\n    () => commitSkillResults(rawParty, props.enemyParty),\r\n    [rawParty, props.enemyParty],\r\n  )\r\n  const enemyParty = useMemo(() => processParty(props.enemyParty), [\r\n    props.enemyParty,\r\n  ])\r\n  const [isRunning, setIsRunning] = useState<boolean>(false)\r\n  const [isRenderingResult, setIsRenderingResult] = useState<boolean>(false)\r\n  const characters = useMemo(\r\n    () => [...party.characters, ...enemyParty.characters],\r\n    [party, enemyParty],\r\n  )\r\n  const [queue, setQueue] = useState<CombatQueueT>(\r\n    makeCombatQueue([...party.characters, ...enemyParty.characters]),\r\n  )\r\n  const [roundId, setRoundId] = useState<string>(v4())\r\n  const [roundResults, setRoundResults] = useState<TargetSkillResultT[][]>([])\r\n  const [activeRound, setActiveRound] = useState<\r\n    TargetSkillResultT[] | undefined\r\n  >()\r\n  const [selectedTarget, setSelectedTarget] = useState<\r\n    SkillTargetT | undefined\r\n  >()\r\n  const [selectedSkill, setSelectedSkill] = useState<SkillT | undefined>()\r\n  const [selectedConsumableIndex, setSelectedConsumableIndex] = useState<\r\n    number | undefined\r\n  >()\r\n  const activeCharacter = useMemo(\r\n    () =>\r\n      characters.find(\r\n        (c) => !c.dead && c.id === getFirst(queue),\r\n      ) as ProcessedCharacterT,\r\n    [queue, characters],\r\n  )\r\n\r\n  const start = () => {\r\n    console.log('start')\r\n    setIsRunning(true)\r\n    setQueue(makeCombatQueue([...party.characters, ...enemyParty.characters]))\r\n    setRoundId(v4())\r\n    setActiveRound(undefined)\r\n    setIsRenderingResult(false)\r\n  }\r\n\r\n  const reset = () => {\r\n    console.log('reset')\r\n    onRequestNewParty()\r\n    setIsRunning(false)\r\n    setActiveRound(undefined)\r\n    setSelectedSkill(undefined)\r\n    setSelectedTarget(undefined)\r\n    setSelectedConsumableIndex(undefined)\r\n    setIsRenderingResult(false)\r\n    setQueue({})\r\n  }\r\n\r\n  const next = (nextTarget?: ProcessedCharacterT | ProcessedPartyT) => {\r\n    if (!selectedSkill) return\r\n    const roundTarget = nextTarget\r\n      ? makeSkillTarget(selectedSkill.targetType, nextTarget)\r\n      : selectedTarget\r\n    if (!selectedSkill || !roundTarget) return\r\n    const results = getSkillResults(\r\n      selectedSkill,\r\n      activeCharacter,\r\n      resolveSkillTarget(roundTarget).filter((c) => !c.dead),\r\n      selectedConsumableIndex,\r\n    )\r\n    setActiveRound(results)\r\n    setSelectedSkill(undefined)\r\n    setSelectedTarget(undefined)\r\n    setSelectedConsumableIndex(undefined)\r\n    setIsRenderingResult(true)\r\n  }\r\n\r\n  const onSkillSelect = (skill: SkillT, consumableIndex?: number) => {\r\n    setSelectedSkill(skill)\r\n    if (consumableIndex !== undefined) {\r\n      setSelectedConsumableIndex(consumableIndex)\r\n    }\r\n    if (skill.targetType !== selectedSkill?.targetType) {\r\n      setSelectedTarget(undefined)\r\n    }\r\n  }\r\n\r\n  const onTargetsSelect = (target: ProcessedCharacterT | ProcessedPartyT) => {\r\n    if (!selectedSkill) return\r\n    setSelectedTarget(makeSkillTarget(selectedSkill.targetType, target))\r\n  }\r\n\r\n  const completeRound = (\r\n    source: ProcessedCharacterT,\r\n    updatedCharacters: ProcessedCharacterT[],\r\n  ) => {\r\n    setQueue(\r\n      validateQueue(\r\n        shiftQueue(queue, source, updatedCharacters),\r\n        updatedCharacters,\r\n      ),\r\n    )\r\n    setRoundId(v4())\r\n    setActiveRound(undefined)\r\n    setIsRenderingResult(false)\r\n  }\r\n\r\n  const commit = useCallback(() => {\r\n    if (!activeRound || activeRound.length === 0) return\r\n    const parties = resultCommitter(activeRound)\r\n    setRoundResults((r) => [...r, activeRound])\r\n    setEnemyParty(parties.enemyParty)\r\n    updateParty(parties.party)\r\n    const updatedCharacters = [\r\n      ...parties.party.characters,\r\n      ...parties.enemyParty.characters,\r\n    ].map((c) => processCharacter(c))\r\n\r\n    completeRound(activeRound[0].source, updatedCharacters)\r\n  }, [activeRound, queue])\r\n\r\n  const execEnemyTurn = (skill: SkillT, target: SkillTargetT) => {\r\n    const results = getSkillResults(\r\n      skill,\r\n      activeCharacter,\r\n      resolveSkillTarget(target),\r\n    )\r\n    setActiveRound(results)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activeCharacter && isRunning) {\r\n      if (activeCharacter.partyId === enemyParty.id) {\r\n        const { skill, target } = getAIAction(\r\n          activeCharacter,\r\n          party,\r\n          enemyParty,\r\n        )\r\n        execEnemyTurn(skill, makeSkillTarget(skill.targetType, target))\r\n      } else {\r\n        setSelectedSkill(activeCharacter.skills[0])\r\n      }\r\n    }\r\n  }, [roundId])\r\n\r\n  useEffect(() => {\r\n    if (!isRunning) return\r\n    if (enemyParty.characters.every((c) => c.dead)) {\r\n      setIsRunning(false)\r\n      const rewards = getRolledRewards(\r\n        enemyParty,\r\n        party.characters.reduce((p, c) =>\r\n          p.stats.luck > c.stats.luck ? p : c,\r\n        ),\r\n      )\r\n      updateParty({\r\n        ...rawParty,\r\n        characters: rawParty.characters.map((c) => removeTemporaryStatus(c)),\r\n      })\r\n      open(<CombatVictoryModal rewards={rewards} />, {}, true)\r\n      return\r\n    }\r\n    if (party.characters.every((c) => c.dead)) {\r\n      setIsRunning(false)\r\n      alert('you lose')\r\n      history.push('/JSFTK_combat/')\r\n      return\r\n    }\r\n  }, [party, enemyParty])\r\n\r\n  return (\r\n    <CombatContext.Provider\r\n      value={{\r\n        party,\r\n        enemyParty,\r\n        characters,\r\n        queue,\r\n        activeCharacter,\r\n        activeRound,\r\n        selectedSkill,\r\n        selectedTargets: selectedTarget\r\n          ? resolveSkillTarget(selectedTarget)\r\n          : [],\r\n        selectedConsumableIndex,\r\n        roundResults,\r\n        isRunning,\r\n        isRenderingResult,\r\n        onSkillSelect,\r\n        onTargetsSelect,\r\n        onConsumableSelect: setSelectedConsumableIndex,\r\n        start,\r\n        next,\r\n        commit,\r\n        reset,\r\n      }}\r\n    >\r\n      {children}\r\n    </CombatContext.Provider>\r\n  )\r\n}\r\n","import { ProcessedCharacterT, ProcessedPartyT, SkillT } from '../types'\r\nimport { getRandom } from '../util'\r\nimport { getSkillTargetOptions } from './Skill'\r\n\r\nexport interface AIActionT {\r\n  skill: SkillT\r\n  target: ProcessedCharacterT | ProcessedPartyT\r\n}\r\nexport const getAIAction = (\r\n  source: ProcessedCharacterT,\r\n  playerParty: ProcessedPartyT,\r\n  enemyParty: ProcessedPartyT,\r\n): AIActionT => {\r\n  const skill = getRandom(source.skills)\r\n  const targetedCharacters = playerParty.characters.filter(\r\n    (c) => c.status.map((t) => t.type).includes('targeted') && !c.dead,\r\n  )\r\n  const target =\r\n    skill.targetType === 'single'\r\n      ? targetedCharacters.length > 0\r\n        ? getRandom(targetedCharacters)\r\n        : getRandom(playerParty.characters.filter((c) => !c.dead))\r\n      : getRandom<ProcessedPartyT | ProcessedCharacterT>(\r\n          getSkillTargetOptions(source, enemyParty, playerParty, skill),\r\n        )\r\n\r\n  return { skill, target }\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { NameSpanBuilder } from '../../contexts/CombatLogContext/util'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport Kefir from 'kefir'\r\nimport { SkillCheck } from '../SkillChecks'\r\n\r\nexport interface RoundResultRendererPropsT {\r\n  isModal?: boolean\r\n}\r\nexport const RoundResultRenderer = (props: RoundResultRendererPropsT) => {\r\n  const { isModal = true } = props\r\n  const { activeRound, isRunning, commit } = useCombatContext()\r\n  const { open, close } = useModalContext()\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (activeRound && !isOpen && isRunning) {\r\n      setIsOpen(true)\r\n      if (isModal) {\r\n        open(\r\n          <RoundResult\r\n            close={() => {\r\n              close(true)\r\n              setIsOpen(false)\r\n              commit()\r\n            }}\r\n          />,\r\n          {\r\n            overlay: {\r\n              background: 'transparent',\r\n            },\r\n          },\r\n          true,\r\n        )\r\n      }\r\n    }\r\n  }, [isRunning, isModal, isOpen, activeRound, open, close, commit])\r\n\r\n  if (!isModal && activeRound && activeRound[0] && isRunning) {\r\n    return (\r\n      <FlexContainer style={{ height: 315 }}>\r\n        <RoundResult\r\n          close={() => {\r\n            setIsOpen(false)\r\n            commit()\r\n          }}\r\n        />\r\n      </FlexContainer>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport interface RoundResultPropsT {\r\n  close: () => void\r\n}\r\nexport interface CheckKVT {\r\n  label: string\r\n  result: boolean | undefined\r\n}\r\nexport const RoundResult = (props: RoundResultPropsT) => {\r\n  const { close } = props\r\n  const { activeRound } = useCombatContext()\r\n  const [isDone, setIsDone] = useState(false)\r\n  const rounds = activeRound || []\r\n  const round = rounds[0]\r\n  const [roundResults, setRoundResults] = useState<CheckKVT[]>(\r\n    !round\r\n      ? []\r\n      : round.rollResults.map((result, i) => ({\r\n          label: round.skill.rolls[i].key || '<NULL>',\r\n          result: undefined,\r\n        })),\r\n  )\r\n\r\n  const updateRoundResult = (value: CheckKVT, index: number) =>\r\n    setRoundResults((r) => r.map((r, i) => (i === index ? value : r)))\r\n\r\n  useEffect(() => {\r\n    const stream = Kefir.sequentially(\r\n      200,\r\n      roundResults.map((r, i) => ({ ...r, index: i })),\r\n    )\r\n    stream.onValue((result) => {\r\n      updateRoundResult(\r\n        {\r\n          label: result.label,\r\n          result:\r\n            result.label === 'accuracy'\r\n              ? round.accuracySuccess\r\n              : round.rollResults[result.index].result,\r\n        },\r\n        result.index,\r\n      )\r\n    })\r\n    stream.onEnd(() => {\r\n      Kefir.later(500, undefined).onValue(() => {\r\n        setIsDone(true)\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (isDone) {\r\n      close()\r\n    }\r\n  }, [isDone, close])\r\n\r\n  if (!round) return null\r\n\r\n  const target = {\r\n    ...round.target,\r\n    name: rounds.length > 1 ? `${rounds.length} characters` : round.target.name,\r\n  }\r\n\r\n  return (\r\n    <FlexContainer $direction='column' style={{ textAlign: 'center' }}>\r\n      <FlexContainer style={{ justifyContent: 'space-evenly' }}>\r\n        {roundResults.map((result, i) => (\r\n          <SkillCheck key={i} check={result} />\r\n        ))}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { SkillT, ProcessedCharacterT } from '../../types'\r\nimport {\r\n  getChecksProbability,\r\n  getSkillDamageRange,\r\n  getSkillDamage,\r\n  getPerfectText,\r\n} from '../../functions'\r\n\r\nexport interface SkillPreviewPropsT {\r\n  skill: SkillT\r\n  source: ProcessedCharacterT\r\n  targets: ProcessedCharacterT[]\r\n}\r\nexport const SkillPreview = (props: SkillPreviewPropsT) => {\r\n  const { skill, source, targets } = props\r\n  const perfectChance = getChecksProbability(source, skill.rolls)\r\n  const damage = getSkillDamage(skill, source)\r\n  const damageString = getSkillDamageRange(\r\n    skill,\r\n    source,\r\n    targets.length === 0 ? undefined : targets,\r\n  )\r\n  const perfectKeys = getPerfectText(skill, source)\r\n  return (\r\n    <BoxContainer\r\n      style={{ marginTop: 30, position: 'relative' }}\r\n      substyle={{ background: '#111' }}\r\n    >\r\n      <FlexContainer $direction='column' style={{ alignItems: 'center' }}>\r\n        <FlexContainer style={{ marginTop: -27 }}>\r\n          <FullContainer />\r\n          <BoxContainer\r\n            substyle={{\r\n              padding: '4px 12px',\r\n              background: '#555',\r\n              fontWeight: 'bolder',\r\n            }}\r\n          >\r\n            {skill.name}\r\n          </BoxContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n        <span\r\n          style={{\r\n            color: 'rgba(255,255,255,0.4)',\r\n            marginTop: 8,\r\n            marginBottom: 8,\r\n          }}\r\n        >\r\n          Perfect ({Math.floor(perfectChance * 100)}%){' '}\r\n          {perfectKeys.length > 0 && '='} {perfectKeys}\r\n        </span>\r\n        <FlexContainer $full style={{ width: '100%', marginBottom: 8 }}>\r\n          {damage.damage > 0 && skill.damage && (\r\n            <FlexContainer\r\n              $full\r\n              $direction='column'\r\n              style={{ alignItems: 'center', marginRight: 10 }}\r\n            >\r\n              <span\r\n                style={{\r\n                  color: damage.type === 'physical' ? 'lightblue' : 'plum',\r\n                  fontWeight: 'bolder',\r\n                  fontSize: 32,\r\n                }}\r\n              >\r\n                {damageString}\r\n              </span>\r\n              <span style={{ color: 'rgba(255,255,255,0.2)' }}>Max DMG</span>\r\n            </FlexContainer>\r\n          )}\r\n          {skill.rolls.length > 0 && (\r\n            <FlexContainer\r\n              $full\r\n              $direction='column'\r\n              style={{ alignItems: 'center' }}\r\n            >\r\n              <span\r\n                style={{\r\n                  fontWeight: 'bolder',\r\n                  fontSize: 32,\r\n                }}\r\n              >\r\n                {source.stats[skill.rolls[0].key || 'strength'] +\r\n                  (skill.rolls[0].offset || 0)}\r\n                %\r\n              </span>\r\n              <span style={{ color: 'rgba(255,255,255,0.2)' }}>\r\n                Per Check ACC\r\n              </span>\r\n            </FlexContainer>\r\n          )}\r\n        </FlexContainer>\r\n        <FlexContainer style={{ marginBottom: -18 }}>\r\n          <FullContainer />\r\n          <BoxContainer\r\n            substyle={{ padding: '0px 12px', background: '#555', fontSize: 10 }}\r\n          >\r\n            {skill.targetType}\r\n          </BoxContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { Button } from '../../elements/button'\r\nimport { SkillPreview } from '../SkillPreview'\r\nimport { SkillChecks } from '../SkillChecks'\r\nimport { PLAYER_PARTY_ID } from '../../objects/Party'\r\nimport { SKILL_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Hover } from '../Hover'\r\n\r\nexport const CombatActions = () => {\r\n  const {\r\n    activeCharacter,\r\n    selectedSkill,\r\n    selectedTargets,\r\n    onSkillSelect,\r\n  } = useCombatContext()\r\n\r\n  if (!activeCharacter || activeCharacter.partyId !== PLAYER_PARTY_ID)\r\n    return null\r\n\r\n  return (\r\n    <FlexContainer $direction='column' style={{ minWidth: 340 }}>\r\n      {selectedSkill && <SkillChecks skill={selectedSkill} />}\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        {activeCharacter.skills.map((skill) => (\r\n          <React.Fragment key={skill.id}>\r\n            {SKILL_ICONS[skill.id] ? (\r\n              <Hover delay={0}>\r\n                {({ isHovering }) => (\r\n                  <Icon\r\n                    src={SKILL_ICONS[skill.id]}\r\n                    size={42}\r\n                    shadow={true}\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      padding: '0 12px',\r\n                    }}\r\n                    onClick={() => onSkillSelect(skill)}\r\n                    fill={\r\n                      skill.id === selectedSkill?.id\r\n                        ? 'lightsalmon'\r\n                        : isHovering\r\n                        ? 'white'\r\n                        : 'rgba(255,255,255,0.8)'\r\n                    }\r\n                  />\r\n                )}\r\n              </Hover>\r\n            ) : (\r\n              <Button\r\n                key={skill.id}\r\n                onClick={() => onSkillSelect(skill)}\r\n                style={{\r\n                  background: '#111',\r\n                  borderColor:\r\n                    selectedSkill && skill.id === selectedSkill.id\r\n                      ? 'white'\r\n                      : undefined,\r\n                }}\r\n              >\r\n                {skill.name}\r\n              </Button>\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && (\r\n        <SkillPreview\r\n          skill={selectedSkill}\r\n          source={activeCharacter}\r\n          targets={selectedTargets}\r\n        />\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport const Monospace = styled('span', () => ({\r\n  fontFamily: 'Inconsolata, monospace',\r\n  fontWeight: 600,\r\n}))\r\nexport const Monodiv = styled('div', () => ({\r\n  fontFamily: 'Inconsolata, monospace',\r\n  fontWeight: 600,\r\n}))\r\n","export const CHARACTER_XP_MAX: Record<number, number> = {\r\n  1: 120,\r\n  2: 400,\r\n  3: 900,\r\n}\r\n","import { useState, useEffect, useRef } from 'react'\r\n\r\nexport const usePrevious = <T = any>(value: T) => {\r\n  const ref = useRef<T>()\r\n\r\n  useEffect(() => {\r\n    ref.current = value\r\n  }, [value])\r\n\r\n  return ref.current\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { Monodiv } from '../../elements/monospace'\r\nimport { ProcessedCharacterT } from '../../types'\r\nimport { noneg } from '../../util'\r\nimport { CHARACTER_XP_MAX } from '../../objects/Character'\r\nimport { usePrevious } from '../../hooks/usePrevious'\r\nimport { Spring } from 'react-spring/renderprops'\r\n\r\nexport interface GaugePropsT {\r\n  name?: string\r\n  color: string\r\n  height?: number\r\n  max: number\r\n  value: number\r\n  style?: CSSProperties\r\n  children?: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const Gauge = (props: GaugePropsT) => {\r\n  const { name = '', value, max, color, height = 30, children } = props\r\n  const p = (value / max) * 100\r\n  const percentage = p > 100 ? 100 : p\r\n  const oldPercentage = usePrevious(percentage)\r\n  return (\r\n    <HoverToolTip\r\n      direction='right'\r\n      content={<BoxContainer>{`${name} (${value} / ${max})`}</BoxContainer>}\r\n    >\r\n      <BoxContainer\r\n        style={{ borderLeft: 'none' }}\r\n        substyle={{\r\n          padding: 0,\r\n          background: '#555',\r\n          height: height - 2,\r\n          position: 'relative',\r\n          borderColor: '1px rgba(255,255,255,0.3)',\r\n        }}\r\n      >\r\n        <Spring\r\n          from={{ value: oldPercentage || 0 }}\r\n          to={{ value: percentage }}\r\n          config={{ friction: 70, mass: 5, tension: 300 }}\r\n        >\r\n          {(p) => (\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                left: 0,\r\n                boxSizing: 'border-box',\r\n                height: height - 2,\r\n                maxWidth: `${p.value}%`,\r\n                minWidth: `${p.value}%`,\r\n                boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n                textShadow: '1px 1px 1px black',\r\n                backgroundColor: color,\r\n                color: 'white',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n            ></div>\r\n          )}\r\n        </Spring>\r\n        <FullContainer\r\n          style={{\r\n            position: 'absolute',\r\n            height,\r\n            lineHeight: `${height - 2}px`,\r\n            right: 4,\r\n            top: 0,\r\n            fontSize: 10,\r\n            fontWeight: 'bold',\r\n            overflow: 'hidden',\r\n            textShadow: '0px 0px 3px black',\r\n          }}\r\n        >\r\n          <Monodiv>{children}</Monodiv>\r\n        </FullContainer>\r\n      </BoxContainer>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface HealthGaugePropsT {\r\n  character: ProcessedCharacterT\r\n  height?: number\r\n}\r\nexport const HealthGauge = (props: HealthGaugePropsT) => {\r\n  const { character, height = 12 } = props\r\n  const health = noneg(character.health - character.stats.healthOffset)\r\n  return (\r\n    <Gauge\r\n      name='Health'\r\n      color='#8f4e4d'\r\n      max={character.health}\r\n      value={health}\r\n      height={height}\r\n    >\r\n      {health}/{character.health}\r\n    </Gauge>\r\n  )\r\n}\r\nexport interface XPGaugePropsT {\r\n  character: ProcessedCharacterT\r\n}\r\nexport const XPGauge = (props: HealthGaugePropsT) => {\r\n  const { character } = props\r\n  const value = character.xp\r\n  const max = CHARACTER_XP_MAX[character.level]\r\n  return (\r\n    <Gauge name='XP' color='#5e8575' max={max} value={value} height={12}>\r\n      {value}/{max}\r\n    </Gauge>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Tooltip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STATUS_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { StatusT } from '../../types'\r\n\r\nexport interface TagPreviewPropsT {\r\n  tag: StatusT\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n}\r\nexport const TagPreview = (props: TagPreviewPropsT) => {\r\n  const { tag, direction } = props\r\n  return (\r\n    <Tooltip\r\n      direction={direction || 'bottom'}\r\n      content={\r\n        <BoxContainer style={{ maxWidth: 200 }}>\r\n          <FlexContainer $direction='column'>\r\n            <strong style={{ marginBottom: 8 }}>\r\n              {tag.type} {tag.duration > 0 ? `(${tag.duration})` : ''}\r\n            </strong>\r\n            {tag.description && <span>{tag.description}</span>}\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n      }\r\n    >\r\n      <Icon shadow src={STATUS_ICONS[tag.type] || ''} size={20} />\r\n    </Tooltip>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ProcessedCharacterT } from '../../types'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { HealthGauge } from '../Gauge'\r\nimport { styled } from 'styletron-react'\r\nimport { Badge, HoverBadge } from '../../elements/badge'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { TagPreview } from '../TagPreview'\r\nimport { CharacterImage } from '../CharacterImage'\r\nimport { usePrevious } from '../../hooks/usePrevious'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { noneg } from '../../util'\r\nimport { Icon } from '../Icon'\r\n\r\nexport interface EnemyCharacterPropsT {\r\n  character: ProcessedCharacterT\r\n  activeCharacter: ProcessedCharacterT\r\n  hoverable?: boolean\r\n  selected?: boolean\r\n  isHovering?: boolean\r\n  onClick?: () => void\r\n}\r\nconst Wrapper = styled('div', (props: any) => {\r\n  const { $selected, $active } = props\r\n  return {\r\n    margin: 10,\r\n    boxShadow: $active ? '0px 0px 20px white' : 'none',\r\n    transition: 'all 0.1s',\r\n  }\r\n})\r\nexport const EnemyCharacter = (props: EnemyCharacterPropsT) => {\r\n  const { character, activeCharacter, onClick } = props\r\n  const health = noneg(character.health - character.stats.healthOffset)\r\n  const previousHealth = usePrevious<number>(health)\r\n  return (\r\n    <div\r\n      onClick={() => (onClick && !character.dead ? onClick() : null)}\r\n      style={{\r\n        borderWidth: 2,\r\n        width: 320,\r\n        position: 'relative',\r\n        cursor: onClick ? 'pointer' : 'default',\r\n        color: 'rgba(255,255,255,0.8)',\r\n        opacity: character.dead ? 0.5 : 1,\r\n      }}\r\n    >\r\n      <FlexContainer style={{ alignItems: 'center' }}>\r\n        <FlexContainer>\r\n          <Icon\r\n            src={character.icon || ''}\r\n            shadow\r\n            fill={\r\n              activeCharacter && character.id === activeCharacter.id\r\n                ? 'lightsalmon'\r\n                : 'white'\r\n            }\r\n            size={64}\r\n            style={{ zIndex: 1, position: 'relative', marginRight: -24 }}\r\n          />\r\n        </FlexContainer>\r\n        <FlexContainer $full $direction='column'>\r\n          <FlexContainer\r\n            style={{\r\n              justifyContent: 'flex-end',\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                padding: '2px 4px',\r\n                textAlign: 'right',\r\n                fontSize: 18,\r\n                lineHeight: '18px',\r\n                background: 'rgba(0,0,0,0.4)',\r\n                textShadow: '1px 1px 2px black',\r\n              }}\r\n            >\r\n              {character.name}\r\n            </span>\r\n          </FlexContainer>\r\n          <div style={{ boxShadow: '0px 5px 15px rgba(0,0,0,0.4)' }}>\r\n            <HealthGauge character={character} height={20} />\r\n          </div>\r\n          <HoverBadge\r\n            direction='down'\r\n            content={<BoxContainer>Enemy Level</BoxContainer>}\r\n            badgeProps={{\r\n              $left: '-14px',\r\n              $bottom: '-12px',\r\n              $size: '20px',\r\n              $color: 'lightcoral',\r\n            }}\r\n          >\r\n            <span>{character.level}</span>\r\n          </HoverBadge>\r\n          <FlexContainer\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: '-17px',\r\n              left: '52px',\r\n            }}\r\n          >\r\n            {character.statusEffects.map((tag, i) => (\r\n              <TagPreview key={i} tag={tag} />\r\n            ))}\r\n          </FlexContainer>\r\n          <FlexContainer\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: '-16px',\r\n              right: '16px',\r\n              width: 52,\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <FullContainer />\r\n            {character.stats.armor > 0 && (\r\n              <Badge\r\n                $absolute={false}\r\n                $right='4px'\r\n                $size='12px'\r\n                $color='lightblue'\r\n              >\r\n                {character.stats.armor}\r\n              </Badge>\r\n            )}\r\n            {character.stats.resistance > 0 && (\r\n              <Badge $absolute={false} $size='12px' $color='plum'>\r\n                {character.stats.resistance}\r\n              </Badge>\r\n            )}\r\n            <FullContainer />\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n        <span\r\n          style={{\r\n            fontWeight: 'bolder',\r\n            fontSize: 52,\r\n            height: 52,\r\n            width: 60,\r\n            textShadow: '1px 1px 10px black',\r\n            color: '#b55553',\r\n          }}\r\n        >\r\n          <Spring\r\n            from={{ hp: previousHealth || 0 }}\r\n            to={{ hp: health }}\r\n            config={{ friction: 70, mass: 5, tension: 300, clamp: true }}\r\n          >\r\n            {(hpp) => <span>{Math.floor(hpp.hp)}</span>}\r\n          </Spring>\r\n        </span>\r\n      </FlexContainer>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { ProcessedPartyT } from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { ConfirmButton2, ConfirmButton } from '../../elements/button'\r\nimport { EnemyCharacter } from '../EnemyCharacter'\r\nimport { PLAYER_PARTY_ID } from '../../objects/Party'\r\n\r\nexport interface CombatPartyPropsT {\r\n  party: ProcessedPartyT\r\n}\r\nexport const CombatParty = (props: CombatPartyPropsT) => {\r\n  const { party } = props\r\n  const {\r\n    activeCharacter,\r\n    selectedSkill,\r\n    onTargetsSelect,\r\n    next,\r\n  } = useCombatContext()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          padding: '0 120px',\r\n          cursor: selectedSkill?.targetType === 'group' ? 'pointer' : 'default',\r\n        }}\r\n        onClick={() => {\r\n          if (selectedSkill && selectedSkill.targetType === 'group') {\r\n            onTargetsSelect(party)\r\n          }\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <div key={c.id}>\r\n            <EnemyCharacter activeCharacter={activeCharacter} character={c} />\r\n            {selectedSkill &&\r\n              selectedSkill.targetType === 'single' &&\r\n              !c.dead &&\r\n              activeCharacter.partyId === PLAYER_PARTY_ID && (\r\n                <FlexContainer\r\n                  style={{ justifyContent: 'center', marginTop: -11 }}\r\n                >\r\n                  <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n                    <ConfirmButton onClick={() => next(c)} $direction='down'>\r\n                      Attack\r\n                    </ConfirmButton>\r\n                  </div>\r\n                </FlexContainer>\r\n              )}\r\n          </div>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && selectedSkill.targetType === 'group' && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n            <ConfirmButton onClick={() => next(party)}>\r\n              Attack Group\r\n            </ConfirmButton>\r\n          </div>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\n\r\nexport interface AppHeaderPropsT {\r\n  children?: JSX.Element\r\n  left?: JSX.Element\r\n  right?: JSX.Element\r\n}\r\n\r\nexport const AppHeader = (props: AppHeaderPropsT) => {\r\n  const { children, left, right } = props\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'center',\r\n          background: '#111',\r\n          height: 52,\r\n          borderBottom: '2px solid rgba(255,255,255,0.3)',\r\n          boxShadow: '1px 1px 1px black',\r\n        }}\r\n      >\r\n        <FlexContainer $full>{left}</FlexContainer>\r\n        <FlexContainer $full>{children}</FlexContainer>\r\n        <FlexContainer $full>{right}</FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport Gold from '../../icons/svg/delapouite/coins.svg'\r\nimport { Icon } from '../Icon'\r\n\r\nexport const PartyResources = () => {\r\n  const { party } = usePartyContext()\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{ alignItems: 'center', color: 'white', paddingRight: 20 }}\r\n    >\r\n      <Icon src={Gold} size={18} style={{ marginRight: 8 }} />\r\n      {party.gold}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import Tree from 'react-tree-graph'\r\nimport * as TreeGen from 'tree-json-generator'\r\nimport 'react-tree-graph/dist/style.css'\r\nimport { EntityT } from './core'\r\nimport { HTMLProps } from 'react'\r\n\r\nexport interface NodeT<T = any> extends EntityT {\r\n  children: NodeT[]\r\n  type: 0 | 1\r\n  completed: boolean\r\n  level: number\r\n  parentId?: string\r\n  gProps?: HTMLProps<SVGGElement>\r\n  payload?: T\r\n}\r\nexport interface ProcessedNodeT<T = any> extends NodeT {\r\n  children: ProcessedNodeT<T>[]\r\n  gProps: HTMLProps<SVGGElement>\r\n  parentId: string\r\n  payload: T\r\n  processed: true\r\n}\r\n\r\nexport const generateTree = (): NodeT => {\r\n  const config = {\r\n    node: {\r\n      id: '@id()', // Pipes\r\n      type: 0,\r\n      completed: false,\r\n      name: '@randomInteger(0,1)',\r\n      children: '@child()', // Child field pointer (not required, if children are not needed)\r\n      level: '@level()',\r\n    },\r\n    rootNodesNumber: 1, // Number of root nodes\r\n    childNodesNumber: [1, 2], // Number of children nodes (from 2 to 5)\r\n    hasChildRate: 1, // Probability of children\r\n    maxLevel: 10, // Max nesting\r\n  }\r\n  const tree = TreeGen.generate(config)\r\n  return tree[0]\r\n}\r\n\r\nexport const complete = (\r\n  tree: NodeT,\r\n  activeNodeId: string,\r\n  parentId?: string,\r\n): NodeT => {\r\n  return {\r\n    ...tree,\r\n    parentId: tree.parentId || parentId,\r\n    completed: tree.completed || tree.id === activeNodeId,\r\n    children: (tree.children || []).map((c) =>\r\n      complete(c, activeNodeId, tree.id),\r\n    ),\r\n  }\r\n}\r\n\r\nexport const findNode = (\r\n  tree: NodeT,\r\n  nodeId: string | undefined,\r\n): NodeT | undefined => {\r\n  if (tree.id === nodeId) return tree\r\n  return (tree.children || []).find((node) => findNode(node, nodeId))\r\n}\r\n\r\nexport const processTree = (\r\n  tree: NodeT,\r\n  onNextClick: (node: ProcessedNodeT) => void,\r\n  activeNodeId?: string,\r\n  parentId?: string,\r\n): ProcessedNodeT => {\r\n  activeNodeId = activeNodeId || tree.id\r\n  const isActive = tree.id === activeNodeId\r\n  const canNav = activeNodeId === parentId\r\n  return {\r\n    ...tree,\r\n    name: tree.completed ? 'CLEARED' : '???',\r\n    parentId: parentId || 'root',\r\n    children: (tree.children || []).map((c) =>\r\n      processTree(c, onNextClick, activeNodeId, tree.id),\r\n    ),\r\n    gProps: {\r\n      onClick: () => {\r\n        if (canNav) {\r\n          onNextClick(processTree(tree, onNextClick, activeNodeId, parentId))\r\n        }\r\n      },\r\n      style: {\r\n        fill: isActive ? 'blue' : canNav ? 'lightcoral' : undefined,\r\n        cursor: canNav ? 'pointer' : undefined,\r\n      },\r\n    },\r\n    payload: tree.payload || {},\r\n    processed: true,\r\n  }\r\n}\r\n","import { StateCoreT, StateT, StateActionT } from '../types'\r\nimport { makeReducer } from '../util'\r\nimport { useSelector } from 'react-redux'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport { NodeT, generateTree, complete } from '../../types/Tree'\r\nimport { Dispatch } from 'redux'\r\nimport { StatsPreview } from '../../components/StatsPreview'\r\n\r\nexport interface GameStateT {\r\n  tree: NodeT\r\n  activeNodeId: string\r\n}\r\n\r\nexport const RESET = '@action/game/reset'\r\nexport const SET_ACTIVE_NODE_ID = '@actions/game/set-active-node-id'\r\nexport const SET_NODE_AS_COMPLETED = '@actions/game/set-node-as-completed'\r\n\r\nexport const actionCreators = {\r\n  reset: (tree?: NodeT): StateActionT => ({\r\n    type: RESET,\r\n    payload: {\r\n      tree,\r\n    },\r\n  }),\r\n  setActiveNodeId: (activeNodeId: string): StateActionT => ({\r\n    type: SET_ACTIVE_NODE_ID,\r\n    payload: {\r\n      activeNodeId,\r\n    },\r\n  }),\r\n  setNodeAsCompleted: (activeNodeId: string): StateActionT => ({\r\n    type: SET_NODE_AS_COMPLETED,\r\n    payload: {\r\n      activeNodeId,\r\n    },\r\n  }),\r\n}\r\n\r\nexport const actions = {\r\n  reset: (tree?: NodeT) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.reset(tree))\r\n  },\r\n  setActiveNodeId: (activeNodeId: string) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.setActiveNodeId(activeNodeId))\r\n  },\r\n  setNodeAsCompleted: (activeNodeId: string) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.setNodeAsCompleted(activeNodeId))\r\n  },\r\n}\r\n\r\nexport const core: StateCoreT<GameStateT> = {\r\n  [RESET]: (state, action) => {\r\n    const tree = action.payload.tree || generateTree()\r\n    return {\r\n      tree,\r\n      activeNodeId: tree.id,\r\n    }\r\n  },\r\n  [SET_ACTIVE_NODE_ID]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      activeNodeId: action.payload.activeNodeId,\r\n    }\r\n  },\r\n  [SET_NODE_AS_COMPLETED]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      tree: complete(state.tree, action.payload.activeNodeId),\r\n    }\r\n  },\r\n}\r\n\r\nconst tree = generateTree()\r\nexport const INITIAL_STATE: GameStateT = {\r\n  tree,\r\n  activeNodeId: tree.id,\r\n}\r\n\r\nexport default makeReducer(core, INITIAL_STATE)\r\nexport const useGameState = () => useSelector((state: StateT) => state.game)\r\nexport const useGameStateActions = () =>\r\n  useActions(actions) as {\r\n    reset: (tree?: NodeT) => void\r\n    setActiveNodeId: (activeNodeId: string) => void\r\n    setNodeAsCompleted: (activeNodeId: string) => void\r\n  }\r\n","import React, { useContext, useMemo, useState } from 'react'\r\nimport {\r\n  NodeT,\r\n  ProcessedNodeT,\r\n  generateTree,\r\n  processTree,\r\n} from '../../types/Tree'\r\nimport { useGameState, useGameStateActions } from '../../state/game'\r\n\r\nexport interface GameStateContextT {\r\n  tree: NodeT\r\n  processedTree: ProcessedNodeT\r\n  activeNodeId: string\r\n  activeNode: NodeT\r\n  reset: () => void\r\n  setActiveNode: (node: ProcessedNodeT) => void\r\n  setNodeCompleted: (nodeId: string) => void\r\n}\r\n\r\nconst _tree = generateTree()\r\nexport const defaultValue: GameStateContextT = {\r\n  tree: _tree,\r\n  processedTree: processTree(_tree, () => {}),\r\n  activeNodeId: _tree.id,\r\n  activeNode: processTree(_tree, () => {}),\r\n  reset: () => {},\r\n  setActiveNode: () => {},\r\n  setNodeCompleted: () => {},\r\n}\r\nexport const GameStateContext = React.createContext<GameStateContextT>(\r\n  defaultValue,\r\n)\r\nexport const useGameStateContext = () => useContext(GameStateContext)\r\n\r\nexport interface GameStateProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const GameStateContextProvider = (props: GameStateProviderPropsT) => {\r\n  const { children } = props\r\n  const { tree, activeNodeId } = useGameState()\r\n  const gsc = useGameStateActions()\r\n  const { setActiveNodeId, setNodeAsCompleted } = gsc\r\n  const [activeNode, _setActiveNode] = useState(\r\n    processTree(tree, () => {}, tree.id),\r\n  )\r\n  const setActiveNode = (node: ProcessedNodeT) => {\r\n    setActiveNodeId(node.id)\r\n    _setActiveNode(node)\r\n  }\r\n\r\n  const processedTree = useMemo(\r\n    () => processTree(tree, setActiveNode, activeNodeId),\r\n    [tree, activeNodeId],\r\n  )\r\n\r\n  const setNodeCompleted = (nodeId: string) => {\r\n    setNodeAsCompleted(nodeId)\r\n    if (activeNode.id === nodeId) {\r\n      setActiveNode({\r\n        ...activeNode,\r\n        completed: true,\r\n      })\r\n    }\r\n  }\r\n\r\n  const reset = () => {\r\n    const _tree = generateTree()\r\n    gsc.reset(_tree)\r\n    setActiveNode(processTree(_tree, setActiveNode, tree.id))\r\n  }\r\n\r\n  return (\r\n    <GameStateContext.Provider\r\n      value={{\r\n        tree,\r\n        processedTree,\r\n        activeNodeId,\r\n        activeNode,\r\n        reset,\r\n        setActiveNode,\r\n        setNodeCompleted,\r\n      }}\r\n    >\r\n      {children}\r\n    </GameStateContext.Provider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  CombatQueueT,\r\n  getFirst,\r\n  getSortedIds,\r\n  getMax,\r\n} from '../../types/CombatQueue'\r\nimport { ProcessedCharacterT } from '../../types'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button, RedButton } from '../../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { AppHeader } from '../AppHeader'\r\nimport { PartyResources } from '../PartyResources'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { PLAYER_PARTY_ID } from '../../objects/Party'\r\nimport { Icon } from '../Icon'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { findNode, processTree, ProcessedNodeT } from '../../types/Tree'\r\n\r\nconst size = 40\r\nexport interface CombatQueuePropsT {\r\n  queue: CombatQueueT\r\n  characters: ProcessedCharacterT[]\r\n}\r\nexport const CombatQueue = (props: CombatQueuePropsT) => {\r\n  const { queue, characters } = props\r\n  const { isRunning } = useCombatContext()\r\n  const history = useHistory()\r\n  const { setActiveNode, activeNode, processedTree } = useGameStateContext()\r\n  const first = characters.find(\r\n    (c) => c.id === getFirst(queue),\r\n  ) as ProcessedCharacterT\r\n  const sortedIds = getSortedIds(queue)\r\n  const bigList = [\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n  ]\r\n  const count = Math.floor((800 - 52) / size)\r\n  const [f, ...list] = Array(count)\r\n    .fill(null)\r\n    .map((_, i) => bigList[i])\r\n    .map((id) => characters.find((c) => c.id === id))\r\n    .filter((c) => c !== undefined)\r\n  const max = getMax(queue)\r\n  const min = 50\r\n  const widthCoef = max > min ? 100 / max : 100 / min\r\n  const gotoParty = () => {\r\n    console.log(activeNode, processedTree)\r\n    const node = findNode(processedTree, activeNode.parentId) as ProcessedNodeT\r\n    if (node) {\r\n      setActiveNode(node)\r\n      history.push('/JSFTK_combat/party')\r\n    }\r\n  }\r\n  return (\r\n    <AppHeader\r\n      left={\r\n        <>\r\n          {/*<RedButton onClick={gotoParty}>Edit Party</RedButton>*/}\r\n          <Button onClick={() => history.push('/JSFTK_combat')}>Restart</Button>\r\n        </>\r\n      }\r\n      right={\r\n        <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n          <PartyResources />\r\n        </FlexContainer>\r\n      }\r\n    >\r\n      <>\r\n        {first && isRunning && (\r\n          <FlexContainer\r\n            style={{\r\n              width: 800,\r\n              flexDirection: 'row-reverse',\r\n              boxShadow: '0px 0px 3px black',\r\n              borderLeft: '1px solid rgba(255,255,255,0.3)',\r\n              background: '#222',\r\n            }}\r\n          >\r\n            <FlexContainer style={{ position: 'relative', marginLeft: 22 }}>\r\n              {first?.partyId === PLAYER_PARTY_ID ? (\r\n                <img\r\n                  alt='profile'\r\n                  height='64'\r\n                  width='64'\r\n                  src={`https://picsum.photos/seed/${first?.name}/115/115`}\r\n                  style={{\r\n                    height: 64,\r\n                    width: 64,\r\n                    border: '2px solid rgba(255,255,255,0.8)',\r\n                    borderTop: 'none',\r\n                    boxShadow: '1px 1px 1px black',\r\n                    zIndex: 2,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <FlexContainer\r\n                  style={{\r\n                    background: 'lightsalmon',\r\n                    border: '2px solid rgba(255,255,255,0.8)',\r\n                    height: 64,\r\n                    width: 64,\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                  }}\r\n                >\r\n                  <Icon\r\n                    src={first?.icon || ''}\r\n                    shadow\r\n                    fill={'white'}\r\n                    size={52}\r\n                    style={{ zIndex: 1, position: 'relative' }}\r\n                  />\r\n                </FlexContainer>\r\n              )}\r\n              <FlexContainer\r\n                $direction='column'\r\n                style={{\r\n                  position: 'absolute',\r\n                  background: 'rgba(255,255,255,0.8)',\r\n                  color: '#111',\r\n                  zIndex: 2,\r\n                  width: 120,\r\n                  top: 16,\r\n                  paddingLeft: 4,\r\n                  right: '-124px',\r\n                }}\r\n              >\r\n                {first && <span>{first.name}'s Turn</span>}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n            <FlexContainer $full $direction='column'>\r\n              <FullContainer />\r\n              <FlexContainer $full style={{ position: 'relative' }}>\r\n                {characters\r\n                  .filter((c) => c.id !== first?.id && !c.dead)\r\n                  .map((c, i) => (\r\n                    <div\r\n                      key={`${c?.id}-${i}`}\r\n                      style={{\r\n                        height: size - 10,\r\n                        width: size - 7,\r\n                        position: 'absolute',\r\n                        bottom: '0px',\r\n                        right: `calc(${queue[c.id] * widthCoef}% - ${\r\n                          size - 6\r\n                        }px)`,\r\n                        transition: 'all 0.3s',\r\n                      }}\r\n                    >\r\n                      {c.partyId === PLAYER_PARTY_ID ? (\r\n                        <img\r\n                          alt={`${queue[c?.id || '']}`}\r\n                          height={size}\r\n                          width={size}\r\n                          src={`https://picsum.photos/seed/${c?.name}/115/115`}\r\n                          style={{\r\n                            height: size - 10,\r\n                            width: size - 7,\r\n                            border: `1px solid ${\r\n                              c.partyId === PLAYER_PARTY_ID\r\n                                ? 'lightgreen'\r\n                                : 'lightcoral'\r\n                            }`,\r\n                            borderBottom: 'none',\r\n                          }}\r\n                        />\r\n                      ) : (\r\n                        <FlexContainer\r\n                          style={{\r\n                            background: 'lightsalmon',\r\n                            border: '2px solid rgba(255,255,255,0.8)',\r\n                            height: size - 10,\r\n                            width: size - 7,\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                          }}\r\n                        >\r\n                          <Icon\r\n                            src={c.icon || ''}\r\n                            shadow\r\n                            fill={'white'}\r\n                            size={size - 13}\r\n                            style={{ zIndex: 1, position: 'relative' }}\r\n                          />\r\n                        </FlexContainer>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        )}\r\n      </>\r\n    </AppHeader>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { CharacterT, PartyT, SkillT } from '../../types'\r\n\r\nexport const Span = (color: string, text: JSX.Element | string) => (\r\n  <span style={{ color, fontWeight: 'bold' }}>{text}</span>\r\n)\r\nexport const SkillSpan = (skill: SkillT) => Span('plum', skill.name)\r\n\r\nexport const NameSpanBuilder = (party: PartyT, enemyParty: PartyT) => (\r\n  character: CharacterT,\r\n) => {\r\n  const isUserParty = character.partyId === party.id\r\n  const isEnemyParty = character.partyId === enemyParty.id\r\n  const color = isUserParty\r\n    ? 'lightgreen'\r\n    : isEnemyParty\r\n    ? 'lightsalmon'\r\n    : 'white'\r\n\r\n  return Span(color, character.name)\r\n}\r\n","import React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport { useCombatContext } from '../CombatContext'\r\nimport { Monospace } from '../../elements/monospace'\r\nimport { NameSpanBuilder, SkillSpan, Span } from './util'\r\nimport { getDamageResistance } from '../../functions'\r\nimport { noneg } from '../../util'\r\n\r\nexport interface CombatLogContextT {\r\n  combatLog: JSX.Element[]\r\n  clear: () => void\r\n}\r\nconst defualtValue: CombatLogContextT = {\r\n  combatLog: [],\r\n  clear: () => {},\r\n}\r\nexport const CombatLogContext = createContext<CombatLogContextT>(defualtValue)\r\nexport const useCombatLogContext = () => useContext(CombatLogContext)\r\n\r\ntype DeadLogT = Record<string, boolean | undefined>\r\n\r\nexport interface CombatLogContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const CombatLogContextProvider = (\r\n  props: CombatLogContextProviderPropsT,\r\n) => {\r\n  const { children } = props\r\n  const { activeRound, roundResults, enemyParty, party } = useCombatContext()\r\n  const [combatLog, setCombatLog] = useState<JSX.Element[]>([])\r\n  const clear = () => setCombatLog([])\r\n  const [deadLog, setDeadLog] = useState<DeadLogT>({})\r\n  const NameSpan = NameSpanBuilder(party, enemyParty)\r\n  const log = (line: JSX.Element) =>\r\n    setCombatLog((log) => [\r\n      ...log,\r\n      <Monospace style={{ display: 'inline-block', fontWeight: 'normal' }}>\r\n        {line}\r\n      </Monospace>,\r\n    ])\r\n\r\n  useEffect(() => {\r\n    const characters = [...enemyParty.characters, ...party.characters]\r\n    setTimeout(() => {\r\n      characters.forEach((character) => {\r\n        if (character.dead && !deadLog[character.id]) {\r\n          setDeadLog((dLog) => ({ ...dLog, [character.id]: true }))\r\n          log(<span>{Span('lightcoral', `${character.name} died.`)}</span>)\r\n        }\r\n      })\r\n    }, 5)\r\n  }, [enemyParty, party])\r\n\r\n  useEffect(() => {\r\n    if (activeRound && activeRound[0]) {\r\n      log(\r\n        <span>\r\n          {NameSpan(activeRound[0].source)} uses{' '}\r\n          {SkillSpan(activeRound[0].skill)}.\r\n        </span>,\r\n      )\r\n    }\r\n  }, [activeRound])\r\n\r\n  useEffect(() => {\r\n    if (roundResults.length === 0) return\r\n    const latestRounds = roundResults[roundResults.length - 1]\r\n    const baseRound = latestRounds[0]\r\n    if (!baseRound) return\r\n\r\n    if (!baseRound.accuracySuccess) {\r\n      if (baseRound.skill.damage) {\r\n        {\r\n          log(<span>{baseRound.source.name}'s attack missed.</span>)\r\n        }\r\n      } else {\r\n        log(<span>{SkillSpan(baseRound.skill)} failed.</span>)\r\n      }\r\n    }\r\n    if (baseRound.criticalSuccess) {\r\n      log(<span>{Span('gold', 'Critical Hit!')}</span>)\r\n    }\r\n    if (baseRound.perfect && baseRound.rollResults.length > 0) {\r\n      log(<span>{Span('gold', 'Perfect!')}</span>)\r\n    }\r\n    latestRounds.forEach((round) => {\r\n      const targetParty = party.id === round.source.partyId ? enemyParty : party\r\n      if (round.accuracySuccess) {\r\n        if (round.dodgeSuccess) {\r\n          log(<span>{NameSpan(round.target)} dodged the attack.</span>)\r\n        } else if (round.totalDamage.damage > 0) {\r\n          log(\r\n            <span>\r\n              {SkillSpan(round.skill)} deals{' '}\r\n              {Span('white', `${round.totalDamage.damage} damage`)} to{' '}\r\n              {NameSpan(round.target)}.\r\n            </span>,\r\n          )\r\n        } else if (round.skill.damage) {\r\n          log(\r\n            <span>\r\n              {SkillSpan(round.skill)} did no damage to {NameSpan(round.target)}\r\n              .\r\n            </span>,\r\n          )\r\n        }\r\n        if (round.splashDamage.damage > 0) {\r\n          targetParty.characters\r\n            .filter((c) => c.id !== round.target.id && !c.dead)\r\n            .forEach((subTarget) => {\r\n              const splashDamageResistance = getDamageResistance(\r\n                subTarget,\r\n                round.splashDamage.type,\r\n              )\r\n              log(\r\n                <span>\r\n                  {SkillSpan(round.skill)} deals{' '}\r\n                  {Span(\r\n                    'white',\r\n                    `${\r\n                      round.splashDamage.damage - splashDamageResistance\r\n                    } splash damage`,\r\n                  )}{' '}\r\n                  to {NameSpan(subTarget)}.\r\n                </span>,\r\n              )\r\n            })\r\n        }\r\n\r\n        if (round.reflectedDamage.damage > 0) {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} reflected{' '}\r\n              {Span('white', `${round.reflectedDamage.damage} damage`)}\r\n            </span>,\r\n          )\r\n        }\r\n\r\n        if (round.healing > 0) {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} gained{' '}\r\n              {Span('white', `${round.healing} HP`)} from{' '}\r\n              {SkillSpan(round.skill)}\r\n            </span>,\r\n          )\r\n        }\r\n\r\n        round.addedStatus.forEach((tag) => {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} became {tag.type}\r\n              {tag.duration > 0 ? ` (${tag.duration} turns)` : ''}.\r\n            </span>,\r\n          )\r\n        })\r\n      }\r\n    })\r\n    if (baseRound.regeneratedHealth > 0) {\r\n      log(\r\n        <span>\r\n          {NameSpan(baseRound.source)} gained{' '}\r\n          {Span('white', `${baseRound.regeneratedHealth} HP`)} from HP regen.\r\n        </span>,\r\n      )\r\n    }\r\n  }, [roundResults.length])\r\n\r\n  return (\r\n    <CombatLogContext.Provider value={{ combatLog, clear }}>\r\n      {children}\r\n    </CombatLogContext.Provider>\r\n  )\r\n}\r\n","import React, { useRef, useEffect } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatLogContext } from '../../contexts/CombatLogContext'\r\n\r\nexport const CombatLog = () => {\r\n  const { combatLog } = useCombatLogContext()\r\n  const scrollRef = useRef<HTMLDivElement>(null)\r\n  useEffect(() => {\r\n    if (scrollRef.current) {\r\n      scrollRef.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n  }, [combatLog])\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{\r\n        padding: 8,\r\n        minWidth: 300,\r\n        height: 300,\r\n        overflow: 'auto',\r\n        background: 'rgba(0,0,0,0.7)',\r\n        fontSize: 12,\r\n        color: 'rgba(255,255,255,0.8)',\r\n      }}\r\n    >\r\n      {combatLog.map((line, i) => (\r\n        <span key={i}>{line}</span>\r\n      ))}\r\n      <div ref={scrollRef} />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { ProcessedCharacterT } from '../../types'\r\nimport { ConsumableT } from '../../types/Consumable'\r\n\r\nexport interface UIContextT {\r\n  playerCanEquipItem: boolean\r\n  openCharacterInventoryId: string | undefined\r\n  onCharacterConsumableClick: (\r\n    c: ProcessedCharacterT,\r\n    index: number,\r\n    item: ConsumableT,\r\n  ) => void\r\n  setPlayerCanEquipItem: (v: boolean) => void\r\n  setOpenCharacterInventoryId: (id: string | undefined) => void\r\n  setOnCharacterConsumableClick: (\r\n    fn: (c: ProcessedCharacterT, index: number, item: ConsumableT) => void,\r\n  ) => void\r\n}\r\n\r\nconst defaultValue: UIContextT = {\r\n  playerCanEquipItem: false,\r\n  openCharacterInventoryId: undefined,\r\n  onCharacterConsumableClick: (c, i, item) => {},\r\n  setPlayerCanEquipItem: (v) => {},\r\n  setOpenCharacterInventoryId: (id) => {},\r\n  setOnCharacterConsumableClick: (fn) => {},\r\n}\r\n\r\nexport const UIContext = React.createContext<UIContextT>(defaultValue)\r\nexport const useUIContext = () => useContext(UIContext)\r\n\r\nexport interface UIContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const UIContextProvider = (props: UIContextProviderPropsT) => {\r\n  const { children } = props\r\n  const [playerCanEquipItem, setPlayerCanEquipItem] = useState(false)\r\n  const [openCharacterInventoryId, setOpenCharacterInventoryId] = useState<\r\n    string | undefined\r\n  >()\r\n  const [onCharacterConsumableClick, _setOnCharacterConsumableClick] = useState<\r\n    (c: ProcessedCharacterT, i: number, item: ConsumableT) => void\r\n  >((c, i, item) => {})\r\n\r\n  const setOnCharacterConsumableClick = (\r\n    fn: (c: ProcessedCharacterT, index: number, item: ConsumableT) => void,\r\n  ) => {\r\n    _setOnCharacterConsumableClick(() => fn)\r\n  }\r\n  return (\r\n    <UIContext.Provider\r\n      value={{\r\n        playerCanEquipItem,\r\n        openCharacterInventoryId,\r\n        onCharacterConsumableClick,\r\n        setPlayerCanEquipItem,\r\n        setOpenCharacterInventoryId,\r\n        setOnCharacterConsumableClick,\r\n      }}\r\n    >\r\n      {children}\r\n    </UIContext.Provider>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { FlexContainer, FullContainer } from '../elements/flex'\r\nimport { RoundResultRenderer } from '../components/RoundResultRenderer'\r\nimport { CombatActions } from '../components/CombatActions'\r\nimport { CombatParty } from '../components/CombatParty'\r\nimport { useModalContext } from '../contexts/ModalContext'\r\nimport { CombatQueue } from '../components/CombatQueue'\r\nimport { CombatLog } from '../components/CombatLog'\r\nimport { useUIContext } from '../contexts/UIContext'\r\nimport { useCombatLogContext } from '../contexts/CombatLogContext'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport { useHistory } from 'react-router'\r\n\r\nexport const Combat = () => {\r\n  const {\r\n    enemyParty,\r\n    activeCharacter,\r\n    characters,\r\n    queue,\r\n    isRunning,\r\n    isRenderingResult,\r\n    start,\r\n    onSkillSelect,\r\n    reset,\r\n  } = useCombatContext()\r\n  const history = useHistory()\r\n  const { clear } = useCombatLogContext()\r\n  const { activeNode, setNodeCompleted } = useGameStateContext()\r\n  const { setOnCharacterConsumableClick } = useUIContext()\r\n  const {} = useGameStateContext()\r\n  const { open, close } = useModalContext()\r\n\r\n  useEffect(() => {\r\n    console.log('COMBAT START', isRunning)\r\n    open(\r\n      <div style={{ textAlign: 'center' }}>\r\n        <h1>Combat Start!</h1>\r\n      </div>,\r\n    )\r\n    setTimeout(() => {\r\n      close()\r\n      clear()\r\n      start()\r\n    }, 1000)\r\n    return () => {\r\n      reset()\r\n      setNodeCompleted(activeNode.id)\r\n      clear()\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (activeNode.completed) {\r\n      history.push('/JSFTK_combat/party')\r\n    }\r\n  }, [activeNode])\r\n\r\n  useEffect(() => {\r\n    setOnCharacterConsumableClick((c, index, item) => {\r\n      if (!c) return\r\n      if (c.id === activeCharacter.id) {\r\n        onSkillSelect(item.skill, index)\r\n      }\r\n    })\r\n  }, [onSkillSelect, activeCharacter])\r\n\r\n  return (\r\n    <FlexContainer $full style={{ height: '100%' }}>\r\n      <FlexContainer $full $direction='column'>\r\n        <CombatQueue queue={queue} characters={characters} />\r\n        <FlexContainer\r\n          $direction='column'\r\n          $full\r\n          style={{ padding: '30px 10px' }}\r\n        >\r\n          <FlexContainer $direction='column' $full>\r\n            <CombatParty party={enemyParty} />\r\n          </FlexContainer>\r\n          <FlexContainer $full>\r\n            {isRunning && activeCharacter && (\r\n              <>\r\n                <FullContainer />\r\n                <FlexContainer $direction='column'>\r\n                  {!isRenderingResult && <CombatActions />}\r\n                  <RoundResultRenderer isModal={false} />\r\n                </FlexContainer>\r\n                <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n                  <CombatLog />\r\n                </FlexContainer>\r\n              </>\r\n            )}\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\n\r\nexport const makeRoute = (path: string, Component: React.FC) => (\r\n  <Route path={`/JSFTK_combat${path}`}>\r\n    <Component />\r\n  </Route>\r\n)\r\n","import React, { useEffect } from 'react'\r\nimport { usePartyContext } from '../contexts/PartyContext'\r\nimport { FlexContainer, FullContainer } from '../elements/flex'\r\nimport { RedButton, Button } from '../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { getSkillResults, commitSkillResults } from '../functions'\r\nimport { AppHeader } from '../components/AppHeader'\r\nimport { PartyResources } from '../components/PartyResources'\r\nimport { useUIContext } from '../contexts/UIContext'\r\nimport Tree from 'react-tree-graph'\r\nimport 'react-tree-graph/dist/style.css'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\n\r\nexport const Party = () => {\r\n  const { party, rawParty, updateParty } = usePartyContext()\r\n  const { processedTree, activeNode } = useGameStateContext()\r\n  const history = useHistory()\r\n  const {\r\n    setPlayerCanEquipItem,\r\n    setOnCharacterConsumableClick,\r\n  } = useUIContext()\r\n\r\n  const enterCombat = () => {\r\n    history.push('/JSFTK_combat/combat')\r\n  }\r\n\r\n  useEffect(() => {\r\n    setPlayerCanEquipItem(true)\r\n    setOnCharacterConsumableClick((character, consumableIndex) => {\r\n      if (!character) return\r\n      const consumable = character.consumables[consumableIndex]\r\n      const targets =\r\n        consumable.skill.targetType === 'self'\r\n          ? [character]\r\n          : consumable.skill.targetType === 'party'\r\n          ? party.characters\r\n          : []\r\n      const result = getSkillResults(\r\n        consumable.skill,\r\n        character,\r\n        targets,\r\n        consumableIndex,\r\n      )\r\n      const parties = commitSkillResults(rawParty, rawParty)(result, false)\r\n      updateParty(parties.party)\r\n    })\r\n    return () => {\r\n      setPlayerCanEquipItem(false)\r\n      setOnCharacterConsumableClick((c, i, item) => {})\r\n    }\r\n  }, [party, rawParty, updateParty])\r\n\r\n  useEffect(() => {\r\n    console.log('PARTY', activeNode)\r\n    if (activeNode.type === 0 && !activeNode.completed) {\r\n      history.push('/JSFTK_combat/combat')\r\n    }\r\n  }, [activeNode])\r\n\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{\r\n        overflow: 'hidden',\r\n        backgroundSize: 'cover',\r\n      }}\r\n    >\r\n      <AppHeader\r\n        left={\r\n          <>\r\n            {/*<RedButton onClick={enterCombat}>Enter Combat</RedButton>*/}\r\n            <Button onClick={() => history.push('/JSFTK_combat')}>\r\n              Restart\r\n            </Button>\r\n            <FullContainer />\r\n          </>\r\n        }\r\n        right={\r\n          <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n            <PartyResources />\r\n          </FlexContainer>\r\n        }\r\n      >\r\n        <FlexContainer\r\n          $full\r\n          style={{\r\n            color: 'white',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          Edit Party\r\n        </FlexContainer>\r\n      </AppHeader>\r\n      <FlexContainer $full $direction='column' style={{ padding: '30px 10px' }}>\r\n        <FlexContainer\r\n          $full\r\n          style={{\r\n            justifyContent: 'center',\r\n            background: 'rgba(255,255,255,0.4)',\r\n            padding: 10,\r\n          }}\r\n        >\r\n          {activeNode.completed && (\r\n            <Tree data={processedTree} height={600} width={1200}></Tree>\r\n          )}\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { FullContainer, FlexContainer } from '../elements/flex'\r\nimport { BoxContainer } from '../elements/box'\r\nimport { usePartyContext } from '../contexts/PartyContext'\r\nimport { ProcessedCharacterT, CharacterT, CharacterClassT } from '../types'\r\nimport { makeCharacter } from '../functions'\r\nimport { STAT_BONUS_KEYS } from '../objects'\r\nimport { Gauge } from '../components/Gauge'\r\nimport { RedButton } from '../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { INITIAL_STATE } from '../state/party'\r\nimport { Monospace } from '../elements/monospace'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\n\r\nexport const Start = () => {\r\n  const {\r\n    party,\r\n    updateParty,\r\n    upsertCharacter,\r\n    findRawCharacter,\r\n  } = usePartyContext()\r\n  const history = useHistory()\r\n  const { reset } = useGameStateContext()\r\n  useEffect(() => {\r\n    updateParty(INITIAL_STATE)\r\n    reset()\r\n  }, [])\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{ height: '100%', overflow: 'hidden' }}\r\n    >\r\n      <FullContainer />\r\n      <FlexContainer $full>\r\n        <FullContainer />\r\n        <BoxContainer>\r\n          <h1 style={{ marginTop: 0, textAlign: 'center' }}>\r\n            Choose your Party!\r\n          </h1>\r\n          <FlexContainer>\r\n            {party.characters.map((character) => (\r\n              <BoxContainer substyle={{ background: '#111' }}>\r\n                <StartCharacterCard\r\n                  character={character}\r\n                  onChange={(characterId, updater) => {\r\n                    const rc = findRawCharacter(characterId)\r\n                    if (rc) {\r\n                      upsertCharacter(updater(rc))\r\n                    }\r\n                  }}\r\n                />\r\n              </BoxContainer>\r\n            ))}\r\n          </FlexContainer>\r\n          <FlexContainer>\r\n            <FullContainer />\r\n            <RedButton\r\n              style={{ marginTop: 16 }}\r\n              onClick={() => {\r\n                history.push('/JSFTK_combat/party')\r\n              }}\r\n            >\r\n              Begin Adventure\r\n            </RedButton>\r\n            <FullContainer />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        <FullContainer />\r\n      </FlexContainer>\r\n      <FullContainer />\r\n      <Monospace\r\n        style={{\r\n          fontWeight: 'normal',\r\n          color: 'rgba(255,255,255,0.5)',\r\n          fontSize: 12,\r\n        }}\r\n      >\r\n        pre-pre-pre-pre alpha v0.0.0.4\r\n      </Monospace>\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface StartCharacterCardPropsT {\r\n  character: ProcessedCharacterT\r\n  onChange: (\r\n    characterId: string,\r\n    updater: (c: CharacterT) => CharacterT,\r\n  ) => void\r\n}\r\nexport const StartCharacterCard = (props: StartCharacterCardPropsT) => {\r\n  const { character, onChange } = props\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <input\r\n        style={{\r\n          background: '#333',\r\n          border: '1px solid rgba(255,255,255,0.4)',\r\n          padding: 8,\r\n          color: 'white',\r\n          marginBottom: 8,\r\n        }}\r\n        value={character.name}\r\n        onChange={(e) => {\r\n          onChange(character.id, (c) => ({\r\n            ...c,\r\n            name: e.target.value,\r\n          }))\r\n        }}\r\n      />\r\n      <select\r\n        style={{\r\n          background: '#333',\r\n          border: '1px solid rgba(255,255,255,0.4)',\r\n          padding: 8,\r\n          color: 'white',\r\n          marginBottom: 8,\r\n        }}\r\n        value={character.class}\r\n        onChange={(e) => {\r\n          onChange(character.id, (c) => ({\r\n            ...makeCharacter(e.target.value as CharacterClassT),\r\n            id: character.id,\r\n            name: character.name,\r\n          }))\r\n        }}\r\n      >\r\n        <option value='blacksmith'>blacksmith</option>\r\n        <option value='hunter'>hunter</option>\r\n        <option value='scholar'>scholar</option>\r\n        <option value='bard'>bard</option>\r\n      </select>\r\n      <BoxContainer>\r\n        {STAT_BONUS_KEYS.map((key) => (\r\n          <FlexContainer style={{ height: 20 }}>\r\n            <div\r\n              style={{ width: 60, fontSize: 12, textTransform: 'capitalize' }}\r\n            >\r\n              {key}\r\n            </div>\r\n            <FullContainer>\r\n              <Gauge\r\n                max={100}\r\n                value={character.stats[key]}\r\n                color='white'\r\n                height={15}\r\n              />\r\n            </FullContainer>\r\n          </FlexContainer>\r\n        ))}\r\n      </BoxContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { CharacterT } from '../../types'\r\n\r\nexport interface CharacterImagePropsT {\r\n  character: CharacterT\r\n  size: number\r\n}\r\nexport const CharacterImage = (props: CharacterImagePropsT) => {\r\n  const { character, size } = props\r\n  return (\r\n    <img\r\n      alt='profile'\r\n      height={size}\r\n      width={size}\r\n      src={`https://picsum.photos/seed/${character.name}/94/94`}\r\n      style={{\r\n        height: size,\r\n        width: size,\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import {\r\n  ProcessedCharacterT,\r\n  SourceSkillResultT,\r\n  TargetSkillResultT,\r\n} from '../types'\r\nimport { ConsumableT } from '../types/Consumable'\r\nimport { resolveCheck, getPassedCount, didAllPass } from './Roll'\r\n\r\n/**\r\n * THESE AREE NOT BEING USED\r\n * @param source\r\n * @param consumable\r\n */\r\n\r\nexport const getSourceConsumableResult = (\r\n  source: ProcessedCharacterT,\r\n  consumable: ConsumableT,\r\n): SourceSkillResultT => {\r\n  const { skill } = consumable\r\n  const rollResults = skill.rolls.map((check) => resolveCheck(source, check))\r\n  const passedCount = getPassedCount(rollResults)\r\n  const perfect = didAllPass(rollResults)\r\n\r\n  return {\r\n    rollResults,\r\n    skill,\r\n    source,\r\n    accuracySuccess: true,\r\n    criticalSuccess: false,\r\n    passedCount,\r\n    perfect,\r\n    rawDamage: { damage: 0, type: 'magic' },\r\n    pierce: false,\r\n    splashDamage: { damage: 0, type: 'magic' },\r\n    addedStatus: perfect ? skill.perfectStatus : [],\r\n    healing:\r\n      perfect && skill.healing ? source.stats.consumableHealthGainOffset : 0,\r\n    consumableIndex: 0,\r\n  }\r\n}\r\n\r\nexport const getTargetConsumableResult = (\r\n  target: ProcessedCharacterT,\r\n  sourceResult: SourceSkillResultT,\r\n): TargetSkillResultT => {\r\n  return {\r\n    ...sourceResult,\r\n    target,\r\n    dodgeSuccess: false,\r\n    reflectedDamage: sourceResult.rawDamage,\r\n    blockedDamage: sourceResult.rawDamage,\r\n    totalDamage: sourceResult.rawDamage,\r\n    regeneratedHealth: 0,\r\n    willDie: false,\r\n  }\r\n}\r\n\r\nexport interface ConsumableStackT {\r\n  consumable: ConsumableT\r\n  count: number\r\n}\r\nexport const considateConsumableListToStack = (\r\n  consumables: ConsumableT[],\r\n): ConsumableStackT[] => {\r\n  let stack: ConsumableStackT[] = []\r\n  const updateStackItem = (id: string) =>\r\n    stack.map((s) =>\r\n      s.consumable.id === id ? { ...s, count: s.count + 1 } : s,\r\n    )\r\n  const containsId = (id: string) =>\r\n    stack.map((s) => s.consumable.id).includes(id)\r\n  consumables.forEach((c) => {\r\n    if (containsId(c.id)) {\r\n      stack = updateStackItem(c.id)\r\n    } else {\r\n      stack = [...stack, { consumable: c, count: 1 }]\r\n    }\r\n  })\r\n  return stack\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { ConsumableT } from '../../types/Consumable'\r\nimport { considateConsumableListToStack } from '../../functions/Consumable'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { CONSUMABLE_ITEM_ICONS, CONSUMABLE_ITEM_COLORS } from '../../icons/maps'\r\nimport { ProcessedCharacterT } from '../../types'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\n\r\nconst HEIGHT = 70\r\nexport interface PartyCharacterConsumablesPropsT {\r\n  character: ProcessedCharacterT\r\n  consumables: ConsumableT[]\r\n  onClick?: (consumable: ConsumableT, index: number) => void\r\n}\r\nexport const PartyCharacterConsumables = (\r\n  props: PartyCharacterConsumablesPropsT,\r\n) => {\r\n  const { character, consumables, onClick } = props\r\n  const stack = useMemo(() => considateConsumableListToStack(consumables), [\r\n    consumables,\r\n  ])\r\n  const onStackClick = (consumable: ConsumableT) => {\r\n    let index = undefined\r\n    consumables.forEach((c, i) => {\r\n      if (c.id === consumable.id) index = i\r\n    })\r\n    if (consumable.skill.healing && !(character.stats.healthOffset === 0))\r\n      return onClick && onClick(consumable, index || 0)\r\n  }\r\n  const filler = Array(10 - stack.length).fill(null)\r\n\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ flexWrap: 'wrap', height: HEIGHT }}\r\n    >\r\n      {stack.map((s) => (\r\n        <PartyCharacterConsumable\r\n          key={s.consumable.id}\r\n          character={character}\r\n          consumable={s.consumable}\r\n          count={s.count}\r\n          onClick={onStackClick}\r\n        />\r\n      ))}\r\n      {filler.map((f, i) => (\r\n        <ConsumableBox key={i} />\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\ninterface ConsumableBoxPropsT {\r\n  children?: JSX.Element\r\n  onClick?: () => void\r\n}\r\nconst ConsumableBox = (props: ConsumableBoxPropsT) => {\r\n  const { children, onClick } = props\r\n  return (\r\n    <FlexContainer\r\n      onClick={() => onClick && onClick()}\r\n      style={{\r\n        height: HEIGHT / 2,\r\n        width: HEIGHT / 2,\r\n        boxSizing: 'border-box',\r\n        border: '1px solid rgba(0,0,0,0.5)',\r\n        background: '#333',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        cursor: onClick ? 'pointer' : 'default',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      {children}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface PartyCharacterConsumablePropsT {\r\n  consumable: ConsumableT\r\n  character: ProcessedCharacterT\r\n  count: number\r\n  onClick?: (consumable: ConsumableT) => void\r\n}\r\nexport const PartyCharacterConsumable = (\r\n  props: PartyCharacterConsumablePropsT,\r\n) => {\r\n  const { character, consumable, count, onClick } = props\r\n  return (\r\n    <HoverToolTip\r\n      content={\r\n        <PartyCharacterConsumableTooltip\r\n          character={character}\r\n          consumable={consumable}\r\n        />\r\n      }\r\n    >\r\n      <ConsumableBox onClick={() => onClick && onClick(consumable)}>\r\n        <>\r\n          <Icon\r\n            src={CONSUMABLE_ITEM_ICONS[consumable.id]}\r\n            fill={CONSUMABLE_ITEM_COLORS[consumable.id]}\r\n            size={24}\r\n          />\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: -2,\r\n              right: 1,\r\n            }}\r\n          >\r\n            {count}\r\n          </div>\r\n        </>\r\n      </ConsumableBox>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface PartyCharacterConsumableTooltipProps {\r\n  character: ProcessedCharacterT\r\n  consumable: ConsumableT\r\n}\r\nexport const PartyCharacterConsumableTooltip = (\r\n  props: PartyCharacterConsumableTooltipProps,\r\n) => {\r\n  const { character, consumable } = props\r\n  return (\r\n    <BoxContainer>\r\n      <strong>{consumable.name}</strong>\r\n      {consumable.skill.healing && (\r\n        <div>Heal for {character.stats.consumableHealthGainOffset} HP</div>\r\n      )}\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ProcessedCharacterT, StatsT } from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { withStyle } from 'styletron-react'\r\nimport { Monodiv } from '../../elements/monospace'\r\nimport { Icon } from '../Icon'\r\nimport { STATI_ICONS } from '../../icons/maps'\r\n\r\ninterface CharacterStatPropsT {\r\n  statKey: keyof StatsT\r\n  character: ProcessedCharacterT\r\n}\r\nconst CharacterStat = (props: CharacterStatPropsT) => {\r\n  const { statKey, character } = props\r\n  return (\r\n    <ResourceE $color={getStatColor(character, statKey)}>\r\n      <Icon\r\n        src={STATI_ICONS[statKey] || ''}\r\n        fill={getStatColor(character, statKey)}\r\n        size={14}\r\n        style={{ marginRight: 4 }}\r\n      />\r\n      {character.stats[statKey]}\r\n    </ResourceE>\r\n  )\r\n}\r\n\r\nexport interface StatsProps {\r\n  character: ProcessedCharacterT\r\n}\r\n\r\nexport const Stats = (props: StatsProps) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer>\r\n      <CharacterStat statKey='strength' character={character} />\r\n      <CharacterStat statKey='vigor' character={character} />\r\n      <CharacterStat statKey='intelligence' character={character} />\r\n      <CharacterStat statKey='perception' character={character} />\r\n      <CharacterStat statKey='talent' character={character} />\r\n      <CharacterStat statKey='agility' character={character} />\r\n      <CharacterStat statKey='luck' character={character} />\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nconst ResourceE = withStyle(Monodiv, (props: any) => ({\r\n  height: 15,\r\n  color: props.$color,\r\n  fontSize: '12px',\r\n  fontWeight: 'bolder',\r\n  padding: '0px 4px',\r\n  lineHeight: '15px',\r\n  flex: 1,\r\n  textAlign: 'center',\r\n  background: '#111',\r\n  display: 'flex',\r\n}))\r\n\r\nconst getStatColor = (\r\n  character: ProcessedCharacterT,\r\n  key: keyof StatsT,\r\n): string => {\r\n  const a = character.stats[key]\r\n  const b = character.rawStats[key]\r\n  if (a > b) return 'lightgreen'\r\n  if (b > a) return 'lightcoral'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n","import React from 'react'\r\nimport { ProcessedCharacterT } from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\n\r\nexport interface NamePropsT {\r\n  character: ProcessedCharacterT\r\n}\r\n\r\nexport const Name = (props: NamePropsT) => {\r\n  const { character } = props\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        marginTop: -3,\r\n        marginRight: -3,\r\n        padding: '0 4px',\r\n        paddingLeft: 8,\r\n        background: '#555',\r\n        height: 20,\r\n        lineHeight: '24px',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n        boxShadow: '0px 4px 5px black',\r\n        zIndex: 2,\r\n      }}\r\n    >\r\n      <span\r\n        style={{\r\n          fontWeight: 'bolder',\r\n          textShadow: '0px 0px 2px black',\r\n        }}\r\n      >\r\n        {character.name}\r\n      </span>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ProcessedCharacterT, StatsT } from '../../types'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STAT_BONUS_KEYS } from '../../objects'\r\nimport { STATI_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\n\r\nconst getStatColor = (\r\n  character: ProcessedCharacterT,\r\n  key: keyof StatsT,\r\n): string => {\r\n  const a = character.stats[key]\r\n  const b = character.rawStats[key]\r\n  if (a > b) return 'lightgreen'\r\n  if (b > a) return 'lightcoral'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n\r\nexport interface StatBarPropsT {\r\n  character: ProcessedCharacterT\r\n}\r\nexport const StatBar = (props: StatBarPropsT) => {\r\n  const { character } = props\r\n\r\n  return (\r\n    <BoxContainer>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-between',\r\n          width: 360,\r\n          paddingTop: 10,\r\n          paddingBottom: 6,\r\n        }}\r\n      >\r\n        {STAT_BONUS_KEYS.map((key) => (\r\n          <FlexContainer\r\n            key={key}\r\n            style={{\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Icon\r\n              src={STATI_ICONS[key] || ''}\r\n              size={20}\r\n              fill={getStatColor(character, key)}\r\n              style={{ marginRight: 4 }}\r\n            />\r\n            <span style={{ color: getStatColor(character, key) }}>\r\n              {character.stats[key]}\r\n            </span>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  ProcessedCharacterT,\r\n  WeaponT,\r\n  ArmorT,\r\n  ArmorResourceType,\r\n} from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { CHARACTER_RESOURCES } from '../../objects/Item'\r\nimport { Icon } from '../Icon'\r\nimport { RESOURCE_ICONS } from '../../icons/maps'\r\nimport { styled } from 'styletron-react'\r\nimport { ClickToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Button } from '../../elements/button'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\n\r\nconst ItemRow = styled(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    marginBottom: '4px',\r\n    textShadow: '1px 1px 1px black',\r\n    background:\r\n      'linear-gradient(90deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 100%)',\r\n    paddingLeft: '8px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n  }\r\n})\r\n\r\nexport interface ItemPropsT {\r\n  character: ProcessedCharacterT\r\n  setActiveItem: (item: WeaponT | ArmorT | undefined) => void\r\n}\r\nexport const Items = (props: ItemPropsT) => {\r\n  const { character, setActiveItem } = props\r\n  const { playerCanEquipItem } = useUIContext()\r\n  return (\r\n    <FlexContainer $full $direction='column'>\r\n      <ItemRow onMouseEnter={() => setActiveItem(character.weapon)}>\r\n        <Icon\r\n          src={RESOURCE_ICONS.weapon || ''}\r\n          size={16}\r\n          style={{ marginRight: 6 }}\r\n        />\r\n        {character.weapon.name}\r\n      </ItemRow>\r\n      {CHARACTER_RESOURCES.map((res) => (\r\n        <ArmorItem\r\n          character={character}\r\n          resource={res}\r\n          onHover={setActiveItem}\r\n          canUnequip={playerCanEquipItem}\r\n        />\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface ArmorItemProps {\r\n  character: ProcessedCharacterT\r\n  resource: ArmorResourceType\r\n  canUnequip?: boolean\r\n  onHover: (item: ArmorT | WeaponT | undefined) => void\r\n}\r\nexport const ArmorItem = (props: ArmorItemProps) => {\r\n  const { character, resource, canUnequip = true, onHover } = props\r\n  const { unequipItem } = usePartyContext()\r\n  const item = character.armor.find((a) => a.resource === resource)\r\n  return (\r\n    <ClickToolTip\r\n      direction='down'\r\n      distance={-2}\r\n      content={() => (\r\n        <>\r\n          {canUnequip && (\r\n            <BoxContainer\r\n              substyle={{\r\n                padding: 4,\r\n                width: 190,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                background: '#333',\r\n              }}\r\n            >\r\n              <Button\r\n                style={{ padding: '4px 8px' }}\r\n                onClick={() => {\r\n                  if (item) {\r\n                    unequipItem(character.id, item)\r\n                  }\r\n                }}\r\n              >\r\n                Unequip\r\n              </Button>\r\n              <Button style={{ padding: '4px 8px' }}>Cancel</Button>\r\n            </BoxContainer>\r\n          )}\r\n        </>\r\n      )}\r\n    >\r\n      {({ onClick, ref }) => (\r\n        <ItemRow\r\n          ref={ref}\r\n          onMouseEnter={() => onHover(item)}\r\n          onClick={() => item && onClick()}\r\n        >\r\n          <Icon\r\n            src={RESOURCE_ICONS[resource] || ''}\r\n            size={16}\r\n            style={{ marginRight: 6 }}\r\n          />\r\n          {item?.name}\r\n        </ItemRow>\r\n      )}\r\n    </ClickToolTip>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\n\r\nexport interface NamePropsT {\r\n  name: string\r\n}\r\n\r\nexport const Name = (props: NamePropsT) => {\r\n  const { name } = props\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        width: '100%',\r\n        height: 40,\r\n        marginBottom: -20,\r\n        marginTop: -20,\r\n      }}\r\n    >\r\n      <FullContainer />\r\n      <BoxContainer style={{ zIndex: 2 }} substyle={{ background: '#444' }}>\r\n        {name}\r\n      </BoxContainer>\r\n      <FullContainer />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ProcessedCharacterT } from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { CharacterImage } from '../CharacterImage'\r\n\r\nconst SIZE = 100\r\nexport interface ImagePropsT {\r\n  character: ProcessedCharacterT\r\n}\r\n\r\nexport const Image = (props: ImagePropsT) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n      <div>\r\n        <BoxContainer\r\n          style={{ marginRight: 20, marginBottom: 10 }}\r\n          substyle={{ padding: 0, height: SIZE, width: SIZE }}\r\n        >\r\n          <CharacterImage character={character} size={100} />\r\n        </BoxContainer>\r\n      </div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport {\r\n  ProcessedPartyT,\r\n  ArmorT,\r\n  WeaponT,\r\n  ProcessedCharacterT,\r\n} from '../../types'\r\nimport { withStyle } from 'styletron-react'\r\nimport { Icon } from '../Icon'\r\nimport { ARMOR_TYPE_ICONS } from '../../icons/maps'\r\nimport { ITEM_RARITY_COLORS } from '../../objects/Item'\r\nimport { ClickToolTip } from '../Tooltip'\r\nimport { Button } from '../../elements/button'\r\n\r\nexport interface ArmorListPropsT {\r\n  party: ProcessedPartyT\r\n  character: ProcessedCharacterT\r\n  canEquip: boolean\r\n  equipItem: (characterId: string, item: WeaponT | ArmorT) => void\r\n  setActiveItem: (item: WeaponT | ArmorT) => void\r\n}\r\n\r\nconst ArmorItem = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    marginBottom: '4px',\r\n    textShadow: '1px 1px 1px black',\r\n    background: props.$active ? 'rgba(255,255,255,0.2)' : undefined,\r\n    paddingLeft: '8px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    cursor: 'pointer',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n  }\r\n})\r\n\r\nexport const ArmorList = (props: ArmorListPropsT) => {\r\n  const { party, character, canEquip, equipItem, setActiveItem } = props\r\n  const [activeItemId, setActiveItemId] = useState<string | undefined>()\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {party.items\r\n        .filter((i) => i.itemType === 'armor')\r\n        .map((i) => i as ArmorT)\r\n        .sort((a, b) => a.name.localeCompare(b.name))\r\n        .map((armor) => (\r\n          <ClickToolTip\r\n            direction='down'\r\n            distance={-2}\r\n            content={() => (\r\n              <>\r\n                {canEquip && (\r\n                  <BoxContainer\r\n                    substyle={{\r\n                      padding: 4,\r\n                      width: 346,\r\n                      display: 'flex',\r\n                      justifyContent: 'center',\r\n                      background: '#333',\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      style={{ padding: '4px 8px' }}\r\n                      onClick={() => {\r\n                        equipItem(character.id, armor)\r\n                        setActiveItemId(undefined)\r\n                      }}\r\n                    >\r\n                      Equip\r\n                    </Button>\r\n                    <Button\r\n                      style={{ padding: '4px 8px' }}\r\n                      onClick={() => {\r\n                        setActiveItemId(undefined)\r\n                      }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </BoxContainer>\r\n                )}\r\n              </>\r\n            )}\r\n          >\r\n            {({ onClick, ref }) => (\r\n              <ArmorItem\r\n                $active={armor.id === activeItemId}\r\n                onMouseEnter={() => setActiveItem(armor)}\r\n                ref={ref}\r\n                onClick={(e: MouseEvent) => {\r\n                  e.stopPropagation()\r\n                  e.preventDefault()\r\n                  setActiveItemId(armor.id)\r\n                  onClick()\r\n                }}\r\n              >\r\n                <Icon\r\n                  src={ARMOR_TYPE_ICONS[armor.type]}\r\n                  size={14}\r\n                  style={{ marginRight: 10 }}\r\n                  fill={ITEM_RARITY_COLORS[armor.rarity]}\r\n                  shadow\r\n                />\r\n                <span style={{ color: ITEM_RARITY_COLORS[armor.rarity] }}>\r\n                  {armor.name}\r\n                </span>\r\n              </ArmorItem>\r\n            )}\r\n          </ClickToolTip>\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport {\r\n  ProcessedPartyT,\r\n  ArmorT,\r\n  WeaponT,\r\n  ProcessedCharacterT,\r\n} from '../../types'\r\nimport { withStyle } from 'styletron-react'\r\nimport { ITEM_RARITY_COLORS } from '../../objects/Item'\r\nimport { ClickToolTip } from '../Tooltip'\r\nimport { Button } from '../../elements/button'\r\n\r\nexport interface WeaponListPropsT {\r\n  party: ProcessedPartyT\r\n  character: ProcessedCharacterT\r\n  canEquip: boolean\r\n  equipItem: (characterId: string, item: WeaponT | ArmorT) => void\r\n  setActiveItem: (item: WeaponT | ArmorT) => void\r\n}\r\n\r\nconst WeaponItem = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    marginBottom: '4px',\r\n    textShadow: '1px 1px 1px black',\r\n    background: props.$active ? 'rgba(255,255,255,0.2)' : undefined,\r\n    paddingLeft: '8px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    cursor: 'pointer',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n  }\r\n})\r\n\r\nexport const WeaponList = (props: WeaponListPropsT) => {\r\n  const { party, character, canEquip, equipItem, setActiveItem } = props\r\n  const [activeItemId, setActiveItemId] = useState<string | undefined>()\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {party.items\r\n        .filter((i) => i.itemType === 'weapon')\r\n        .map((i) => i as ArmorT)\r\n        .sort((a, b) => a.name.localeCompare(b.name))\r\n        .map((weapon) => (\r\n          <ClickToolTip\r\n            direction='down'\r\n            distance={-2}\r\n            content={() => (\r\n              <>\r\n                {canEquip && (\r\n                  <BoxContainer\r\n                    substyle={{\r\n                      padding: 4,\r\n                      width: 346,\r\n                      display: 'flex',\r\n                      justifyContent: 'center',\r\n                      background: '#333',\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      style={{ padding: '4px 8px' }}\r\n                      onClick={() => {\r\n                        equipItem(character.id, weapon)\r\n                        setActiveItemId(undefined)\r\n                      }}\r\n                    >\r\n                      Equip\r\n                    </Button>\r\n                  </BoxContainer>\r\n                )}\r\n              </>\r\n            )}\r\n          >\r\n            {({ onClick, ref }) => (\r\n              <WeaponItem\r\n                $active={weapon.id === activeItemId}\r\n                onMouseEnter={() => setActiveItem(weapon)}\r\n                ref={ref}\r\n                onClick={(e: MouseEvent) => {\r\n                  e.stopPropagation()\r\n                  e.preventDefault()\r\n                  setActiveItemId(weapon.id)\r\n                  onClick()\r\n                }}\r\n              >\r\n                <span style={{ color: ITEM_RARITY_COLORS[weapon.rarity] }}>\r\n                  {weapon.name}\r\n                </span>\r\n              </WeaponItem>\r\n            )}\r\n          </ClickToolTip>\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport {\r\n  ProcessedCharacterT,\r\n  ProcessedPartyT,\r\n  WeaponT,\r\n  ArmorT,\r\n} from '../../types'\r\n\r\nimport Items from '../../icons/svg/delapouite/light-backpack.svg'\r\nimport Weapons from '../../icons/svg/lorc/broadsword.svg'\r\nimport Armor from '../../icons/svg/delapouite/leather-armor.svg'\r\nimport { Icon } from '../Icon'\r\nimport { ArmorList } from './ArmorList'\r\nimport { WeaponList } from './WeaponList'\r\n\r\nexport interface MenuOptionT {\r\n  key: string\r\n  icon: string\r\n  count: (character: ProcessedCharacterT, party: ProcessedPartyT) => number\r\n  render: (\r\n    character: ProcessedCharacterT,\r\n    party: ProcessedPartyT,\r\n    canEquip: boolean,\r\n    equipItem: (characterId: string, item: WeaponT | ArmorT) => void,\r\n    setActiveItem: (item: WeaponT | ArmorT) => void,\r\n  ) => JSX.Element\r\n}\r\nexport const ACTIVE_CHARACTER_MENU_KEYS: MenuOptionT[] = [\r\n  {\r\n    key: 'items',\r\n    icon: Items,\r\n    count: (c) => c.consumables.length,\r\n    render: (character) => <div>items</div>,\r\n  },\r\n  {\r\n    key: 'weapons',\r\n    icon: Weapons,\r\n    count: (c, p) => p.items.filter((i) => i.itemType === 'weapon').length,\r\n    render: (character, party, canEquip, equipItem, setActiveItem) => (\r\n      <WeaponList\r\n        character={character}\r\n        party={party}\r\n        canEquip={canEquip}\r\n        equipItem={equipItem}\r\n        setActiveItem={setActiveItem}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    key: 'armor',\r\n    icon: Armor,\r\n    count: (c, p) => p.items.filter((i) => i.itemType === 'armor').length,\r\n    render: (character, party, canEquip, equipItem, setActiveItem) => (\r\n      <ArmorList\r\n        character={character}\r\n        party={party}\r\n        canEquip={canEquip}\r\n        equipItem={equipItem}\r\n        setActiveItem={setActiveItem}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    key: 'ot1',\r\n    icon: '',\r\n    count: (c) => 0,\r\n    render: (character) => <div>ot1</div>,\r\n  },\r\n  {\r\n    key: 'ot2',\r\n    icon: '',\r\n    count: (c) => 0,\r\n    render: (character) => <div>ot2</div>,\r\n  },\r\n  {\r\n    key: 'ot3',\r\n    icon: '',\r\n    count: (c) => 0,\r\n    render: (character) => <div>ot3</div>,\r\n  },\r\n]\r\n\r\nexport interface MenuSelectPropsT {\r\n  character: ProcessedCharacterT\r\n  party: ProcessedPartyT\r\n  activeKey: string\r\n  onActiveKeyChange: (key: string) => void\r\n}\r\n\r\nexport const MenuSelect = (props: MenuSelectPropsT) => {\r\n  const { character, party, activeKey, onActiveKeyChange } = props\r\n\r\n  return (\r\n    <FlexContainer style={{ justifyContent: 'center', marginTop: 8 }}>\r\n      {ACTIVE_CHARACTER_MENU_KEYS.map((option) => (\r\n        <Button\r\n          style={{\r\n            padding: '4px 0',\r\n            width: 56,\r\n            fontSize: 12,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            background: option.key === activeKey ? '#444' : undefined,\r\n          }}\r\n          onClick={() => {\r\n            onActiveKeyChange(option.key)\r\n          }}\r\n        >\r\n          <FullContainer />\r\n          <FullContainer>\r\n            <Icon src={option.icon} size={14} />\r\n          </FullContainer>\r\n          <FullContainer style={{ paddingRight: 2 }}>\r\n            {option.count(character, party)}\r\n          </FullContainer>\r\n        </Button>\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  ProcessedCharacterT,\r\n  WeaponT,\r\n  ArmorT,\r\n  ProcessedWeaponT,\r\n} from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { ArmorPreview } from '../ArmorPreview'\r\nimport { WeaponPreview } from '../WeaponPreview'\r\n\r\nexport interface HoverAreaPropsT {\r\n  character: ProcessedCharacterT\r\n  activeItem: WeaponT | ArmorT\r\n}\r\n\r\nexport const HoverArea = (props: HoverAreaPropsT) => {\r\n  const { character, activeItem } = props\r\n  const foundArmor = character.armor.find(\r\n    (a) => a.resource === (activeItem as ArmorT).resource,\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {activeItem.itemType === 'armor' && (\r\n        <FlexContainer>\r\n          {foundArmor && (\r\n            <ArmorPreview armor={foundArmor} showEquipButton={false} />\r\n          )}\r\n          {foundArmor?.id !== activeItem.id && (\r\n            <ArmorPreview\r\n              armor={activeItem as ArmorT}\r\n              showEquipButton={false}\r\n            />\r\n          )}\r\n        </FlexContainer>\r\n      )}\r\n      {activeItem.itemType === 'weapon' && (\r\n        <FlexContainer>\r\n          <WeaponPreview weapon={character.weapon} showEquipButton={false} />\r\n          {character.weapon.id !== activeItem.id && (\r\n            <WeaponPreview\r\n              weapon={activeItem as ProcessedWeaponT}\r\n              showEquipButton={false}\r\n            />\r\n          )}\r\n        </FlexContainer>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport {\r\n  ProcessedCharacterT,\r\n  ProcessedPartyT,\r\n  WeaponT,\r\n  ArmorT,\r\n} from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { StatBar } from './StatBar'\r\nimport { Items } from './Items'\r\nimport { Name } from './Name'\r\nimport { Image } from './Image'\r\nimport { MenuSelect, ACTIVE_CHARACTER_MENU_KEYS } from './MenuSelect'\r\nimport { HoverArea } from './HoverArea'\r\nimport { Badge } from '../../elements/badge'\r\n\r\nexport interface PartyActiveCharacterPropsT {\r\n  character: ProcessedCharacterT\r\n  party: ProcessedPartyT\r\n  equipItem: (characterId: string, item: WeaponT | ArmorT) => void\r\n  canEquip: boolean\r\n  onRequestClose: () => void\r\n}\r\n\r\nexport const PartyActiveCharacter = (props: PartyActiveCharacterPropsT) => {\r\n  const { character, party, canEquip, equipItem, onRequestClose } = props\r\n  const [activeMenuKey, setActiveMenuKey] = useState('armor')\r\n  const [activeItem, setActiveItem] = useState<ArmorT | WeaponT | undefined>()\r\n  const activeOption = ACTIVE_CHARACTER_MENU_KEYS.find(\r\n    (o) => o.key === activeMenuKey,\r\n  )\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        width: 880,\r\n        justifyContent: 'flex-end',\r\n        background: 'rgba(0,0,0,0.5)',\r\n      }}\r\n    >\r\n      <Badge\r\n        onClick={onRequestClose}\r\n        $top={-10}\r\n        $right={-2}\r\n        style={{ cursor: 'pointer', userSelect: 'none' }}\r\n      >\r\n        X\r\n      </Badge>\r\n      <FlexContainer\r\n        style={{\r\n          maxHeight: 440,\r\n          padding: 10,\r\n          position: 'absolute',\r\n          left: '-10px',\r\n          width: 486,\r\n          justifyContent: 'flex-end',\r\n        }}\r\n      >\r\n        {activeItem && (\r\n          <HoverArea character={character} activeItem={activeItem} />\r\n        )}\r\n      </FlexContainer>\r\n      <BoxContainer substyle={{ background: '#111', padding: 0 }}>\r\n        <FlexContainer $direction='column'>\r\n          <Name name={character.name} />\r\n          <StatBar character={character} />\r\n          <BoxContainer\r\n            substyle={{ background: '#111', padding: '16px 0 2px 0' }}\r\n          >\r\n            <FlexContainer>\r\n              <Items character={character} setActiveItem={setActiveItem} />\r\n              <Image character={character} />\r\n            </FlexContainer>\r\n            <MenuSelect\r\n              character={character}\r\n              party={party}\r\n              activeKey={activeMenuKey}\r\n              onActiveKeyChange={setActiveMenuKey}\r\n            />\r\n          </BoxContainer>\r\n          <BoxContainer\r\n            substyle={{\r\n              background: '#111',\r\n              padding: '4px 0',\r\n              height: 200,\r\n              overflow: 'auto',\r\n            }}\r\n          >\r\n            {activeOption &&\r\n              activeOption.render(\r\n                character,\r\n                party,\r\n                canEquip,\r\n                equipItem,\r\n                setActiveItem,\r\n              )}\r\n          </BoxContainer>\r\n        </FlexContainer>\r\n      </BoxContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Details from '../../icons/svg/delapouite/skills.svg'\r\nimport Inventory from '../../icons/svg/lorc/knapsack.svg'\r\nimport { ProcessedCharacterT } from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Tooltip } from '../Tooltip'\r\nimport { PartyActiveCharacter } from '../PartyActiveCharacter'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { Hover } from '../Hover'\r\nimport { Icon } from '../Icon'\r\n\r\nexport interface ActionsPropsT {\r\n  character: ProcessedCharacterT\r\n  canEquip: boolean\r\n}\r\n\r\nexport const Actions = (props: ActionsPropsT) => {\r\n  const { character, canEquip } = props\r\n  const { party, equipItem } = usePartyContext()\r\n  const {\r\n    openCharacterInventoryId,\r\n    setOpenCharacterInventoryId,\r\n  } = useUIContext()\r\n  return (\r\n    <FlexContainer>\r\n      <FlexContainer\r\n        $full\r\n        style={{ alignItems: 'center', justifyContent: 'center' }}\r\n      >\r\n        <Tooltip\r\n          isOpen={character.id === openCharacterInventoryId}\r\n          direction='up'\r\n          distance={80}\r\n          content={\r\n            <PartyActiveCharacter\r\n              character={character}\r\n              party={party}\r\n              equipItem={equipItem}\r\n              canEquip={canEquip}\r\n              onRequestClose={() => {\r\n                setOpenCharacterInventoryId(undefined)\r\n              }}\r\n            />\r\n          }\r\n        >\r\n          <Hover delay={0}>\r\n            {({ isHovering }) => (\r\n              <Icon\r\n                src={Inventory}\r\n                fill={\r\n                  isHovering ? 'rgba(255,255,255,1)' : 'rgba(255,255,255,0.7)'\r\n                }\r\n                size={18}\r\n                shadow\r\n                onClick={() => {\r\n                  if (character.id === openCharacterInventoryId) {\r\n                    return setOpenCharacterInventoryId(undefined)\r\n                  }\r\n                  setOpenCharacterInventoryId(character.id)\r\n                }}\r\n                style={{ padding: 6, cursor: 'pointer' }}\r\n              />\r\n            )}\r\n          </Hover>\r\n        </Tooltip>\r\n      </FlexContainer>\r\n      <FlexContainer\r\n        $full\r\n        style={{ alignItems: 'center', justifyContent: 'center' }}\r\n      >\r\n        <Icon\r\n          src={Details}\r\n          fill={'rgba(255,255,255,0.7)'}\r\n          size={18}\r\n          shadow\r\n          style={{ padding: 6, cursor: 'pointer' }}\r\n        />\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { ProcessedCharacterT } from '../../types'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { noneg } from '../../util'\r\nimport { usePrevious } from '../../hooks/usePrevious'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nexport interface HealthPropsT {\r\n  character: ProcessedCharacterT\r\n}\r\n\r\nexport const Health = (props: HealthPropsT) => {\r\n  const { character } = props\r\n  const health = noneg(character.health - character.stats.healthOffset)\r\n  const previousHealth = usePrevious<number>(health) || 0\r\n  const [storedHealth, setStoredHealth] = useState(0)\r\n\r\n  useEffect(() => {\r\n    setStoredHealth(health)\r\n    // toast(`${character.name} -${storedHealth - health} HP`)\r\n  }, [health])\r\n\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <span\r\n        style={{\r\n          fontWeight: 'bolder',\r\n          padding: 4,\r\n          fontSize: 42,\r\n          height: 62,\r\n          lineHeight: '70px',\r\n          color: '#b55553',\r\n        }}\r\n      >\r\n        <Spring\r\n          from={{ hp: previousHealth || 0 }}\r\n          to={{ hp: health }}\r\n          config={{ friction: 70, mass: 5, tension: 300, clamp: true }}\r\n        >\r\n          {(hpp) => <span>{Math.floor(hpp.hp)}</span>}\r\n        </Spring>\r\n      </span>\r\n      <ToastContainer />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ProcessedCharacterT } from '../../types'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { XPGauge, HealthGauge } from '../Gauge'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { styled } from 'styletron-react'\r\nimport { HoverBadge } from '../../elements/badge'\r\nimport { TagPreview } from '../TagPreview'\r\nimport { CharacterImage } from '../CharacterImage'\r\nimport { ConsumableT } from '../../types/Consumable'\r\nimport { PartyCharacterConsumables } from '../PartyCharacterConsumables'\r\nimport { Stats } from './Stats'\r\nimport { Name } from './Name'\r\nimport { Actions } from './Actions'\r\nimport { Health } from './Health'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\n\r\nexport interface PartyCharacterProps {\r\n  character: ProcessedCharacterT\r\n  selected?: boolean\r\n  showActions?: boolean\r\n  onClick?: () => void\r\n  onConsumableClick?: (consumable: ConsumableT, index: number) => void\r\n}\r\nconst Wrapper = styled('div', (props: any) => {\r\n  const { $active } = props\r\n  return {\r\n    margin: 10,\r\n    position: 'relative',\r\n    boxShadow: $active ? '0px 0px 20px white' : 'none',\r\n    transition: 'all 0.4s',\r\n    userSelect: 'none',\r\n  }\r\n})\r\n\r\nexport const PartyCharacter = (props: PartyCharacterProps) => {\r\n  const { character, selected, showActions = true, onConsumableClick } = props\r\n  const { playerCanEquipItem } = useUIContext()\r\n  return (\r\n    <Wrapper\r\n      $active={selected}\r\n      style={{\r\n        opacity: character.dead ? 0.5 : 1,\r\n      }}\r\n    >\r\n      <BoxContainer\r\n        style={{ borderWidth: 2 }}\r\n        substyle={{ padding: 0, minWidth: 420 }}\r\n      >\r\n        <FlexContainer style={{ border: '2px solid black' }}>\r\n          <FlexContainer\r\n            style={{ borderRight: '2px solid black', background: '#111' }}\r\n          >\r\n            <CharacterImage character={character} size={115} />\r\n          </FlexContainer>\r\n          <FlexContainer $full $direction='column'>\r\n            <Name character={character} />\r\n            <FlexContainer>\r\n              <Health character={character} />\r\n              <FlexContainer $full style={{ maxWidth: 175, minWidth: 175 }}>\r\n                <PartyCharacterConsumables\r\n                  character={character}\r\n                  consumables={character.consumables}\r\n                  onClick={onConsumableClick}\r\n                />\r\n              </FlexContainer>\r\n              <FlexContainer $full $direction='column'>\r\n                <FullContainer />\r\n                {showActions && (\r\n                  <Actions\r\n                    character={character}\r\n                    canEquip={playerCanEquipItem}\r\n                  />\r\n                )}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n            <FullContainer />\r\n            <HealthGauge character={character} />\r\n            <XPGauge character={character} />\r\n            <HoverBadge\r\n              badgeProps={{ $bottom: '18px', $left: '105px' }}\r\n              content={<BoxContainer>Character Level</BoxContainer>}\r\n            >\r\n              <span>{character.level}</span>\r\n            </HoverBadge>\r\n            <Stats character={character} />\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </BoxContainer>\r\n      <FlexContainer\r\n        style={{\r\n          position: 'absolute',\r\n          top: '-24px',\r\n          right: '4px',\r\n        }}\r\n      >\r\n        {character.statusEffects.map((tag) => (\r\n          <TagPreview direction='up' tag={tag} />\r\n        ))}\r\n      </FlexContainer>\r\n      <HoverBadge\r\n        badgeProps={{ $bottom: '64px', $left: '-12px', $color: 'lightblue' }}\r\n        content={<BoxContainer>Armor</BoxContainer>}\r\n      >\r\n        <span>{character.stats.armor}</span>\r\n      </HoverBadge>\r\n      <HoverBadge\r\n        badgeProps={{ $bottom: '26px', $left: '-12px', $color: 'plum' }}\r\n        content={<BoxContainer>Magic Resistance</BoxContainer>}\r\n      >\r\n        <span>{character.stats.resistance}</span>\r\n      </HoverBadge>\r\n      <HoverBadge\r\n        badgeProps={{ $bottom: '-10px', $left: '-12px', $color: 'lightgreen' }}\r\n        content={<BoxContainer>Evasion</BoxContainer>}\r\n      >\r\n        <span>{character.stats.evasion}</span>\r\n      </HoverBadge>\r\n      <HoverBadge\r\n        direction='up'\r\n        content={<BoxContainer>Weapon Damage</BoxContainer>}\r\n        badgeProps={{\r\n          $bottom: '-12px',\r\n          $left: '40px',\r\n          $size: '35px',\r\n          $color:\r\n            character.weapon.damage.type === 'physical'\r\n              ? 'rgba(255,255,255,0.8)'\r\n              : 'plum',\r\n          style: { fontSize: 24 },\r\n        }}\r\n      >\r\n        <span>\r\n          {character.weapon.damage.damage + character.stats.damageModifier}\r\n        </span>\r\n      </HoverBadge>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ProcessedPartyT, ProcessedCharacterT } from '../../types'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { PartyCharacter } from '../PartyCharacter'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { ConfirmButton } from '../../elements/button'\r\nimport { ConsumableT } from '../../types/Consumable'\r\n\r\nexport interface PlayerPartyPropsT {\r\n  party: ProcessedPartyT\r\n  onCharacterClick?: (character: ProcessedCharacterT) => void\r\n  onConsumableClick?: (\r\n    character: ProcessedCharacterT,\r\n    consumableIndex: number,\r\n    consumable: ConsumableT,\r\n  ) => void\r\n}\r\nexport const PlayerParty = (props: PlayerPartyPropsT) => {\r\n  const { party, onCharacterClick, onConsumableClick } = props\r\n  const {\r\n    activeCharacter,\r\n    selectedSkill,\r\n    onSkillSelect,\r\n    next,\r\n  } = useCombatContext()\r\n\r\n  const showConfirmButton = (c: ProcessedCharacterT) =>\r\n    selectedSkill &&\r\n    activeCharacter &&\r\n    !c.dead &&\r\n    ((selectedSkill.targetType === 'self' && c.id === activeCharacter.id) ||\r\n      selectedSkill.targetType === 'ally')\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          alignItems: 'flex-end',\r\n          cursor: selectedSkill?.targetType === 'party' ? 'pointer' : 'default',\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <FlexContainer\r\n            $direction='column'\r\n            key={c.id}\r\n            style={{ height: 177, justifyContent: 'flex-end' }}\r\n          >\r\n            {showConfirmButton(c) && (\r\n              <FlexContainer style={{ justifyContent: 'center' }}>\r\n                <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n                  <ConfirmButton onClick={() => next(c)} $direction='up'>\r\n                    Confirm Target\r\n                  </ConfirmButton>\r\n                </div>\r\n              </FlexContainer>\r\n            )}\r\n            <PartyCharacter\r\n              selected={activeCharacter && c && c.id === activeCharacter.id}\r\n              character={c}\r\n              onClick={() => onCharacterClick && onCharacterClick(c)}\r\n              onConsumableClick={(consumable, index) => {\r\n                console.log('click', consumable, c)\r\n                try {\r\n                  if (!c || !consumable || index === undefined) return\r\n                  if (onConsumableClick) {\r\n                    onConsumableClick(c, index, consumable)\r\n                  }\r\n                  if (c && c.id === activeCharacter.id) {\r\n                    onSkillSelect(consumable.skill, index)\r\n                  }\r\n                } catch (e) {\r\n                  console.log(e)\r\n                }\r\n              }}\r\n            />\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && selectedSkill.targetType === 'party' && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n            <ConfirmButton onClick={() => next(party)}>\r\n              Confirm Group Target\r\n            </ConfirmButton>\r\n          </div>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\nimport ForestBg from './assets/img/flat-forestred.jpg'\nimport { Switch, Route } from 'react-router-dom'\nimport { CombatContextProvider } from './contexts/CombatContext'\nimport { PartyT } from './types'\nimport { makeParty } from './functions'\nimport { Combat } from './domain/Combat'\nimport { CombatLogContextProvider } from './contexts/CombatLogContext'\nimport { ModalContextProvider } from './contexts/ModalContext'\nimport { makeRoute } from './routes'\nimport { Party } from './domain/Party'\nimport { Start } from './domain/Start'\nimport { UIContextProvider, useUIContext } from './contexts/UIContext'\nimport { usePartyContext } from './contexts/PartyContext'\nimport { PlayerParty } from './components/PlayerParty'\nimport { FlexContainer, FullContainer } from './elements/flex'\nimport { useGameStateContext } from './contexts/GameStateContext'\n\nconst CombatDomain = () => {\n  return (\n    <CombatLogContextProvider>\n      <ModalContextProvider>\n        <Combat />\n      </ModalContextProvider>\n    </CombatLogContextProvider>\n  )\n}\n\nconst PartyDomain = () => {\n  return <Party />\n}\n\nconst GlobalCharacters = () => {\n  const { party } = usePartyContext()\n  const { onCharacterConsumableClick } = useUIContext()\n  return (\n    <div style={{ margin: '30px 0' }}>\n      <PlayerParty\n        party={party}\n        onConsumableClick={(c, i, item) => {\n          if (onCharacterConsumableClick) {\n            onCharacterConsumableClick(c, i, item)\n          }\n        }}\n      />\n    </div>\n  )\n}\n\nexport const App = () => {\n  const { activeNode } = useGameStateContext()\n  const [rawEnemyParty, setRawEnemyParty] = useState<PartyT>(makeParty(0))\n  return (\n    <ModalContextProvider>\n      <CombatContextProvider\n        enemyParty={rawEnemyParty}\n        setEnemyParty={setRawEnemyParty}\n        onRequestNewParty={() => {\n          console.log('REQUEST NEW PARTY')\n          console.log(activeNode.level)\n          setRawEnemyParty(makeParty(activeNode.level + 1))\n        }}\n      >\n        <UIContextProvider>\n          <FlexContainer\n            $full\n            $direction='column'\n            style={{\n              height: '100%',\n              overflow: 'hidden',\n              background: `url(${ForestBg}) center center fixed no-repeat`,\n              backgroundSize: 'cover',\n            }}\n          >\n            <FullContainer>\n              <Switch>\n                {makeRoute('/party', PartyDomain)}\n                {makeRoute('/combat', CombatDomain)}\n                {makeRoute('/', Start)}\n              </Switch>\n            </FullContainer>\n            <GlobalCharacters />\n          </FlexContainer>\n        </UIContextProvider>\n      </CombatContextProvider>\n    </ModalContextProvider>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './index.css'\n\nimport { Provider as StyletronProvider, DebugEngine } from 'styletron-react'\nimport { Client as Styletron } from 'styletron-engine-atomic'\nimport { Provider as ReduxProvider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { makeStore } from './state'\nimport { PartyContextProvider } from './contexts/PartyContext'\nimport { GameStateContextProvider } from './contexts/GameStateContext'\n\nconst debug = process.env.NODE_ENV === 'production' ? void 0 : new DebugEngine()\nconst engine: Styletron = new Styletron()\nconst store = makeStore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n        <PartyContextProvider>\n          <GameStateContextProvider>\n            <Router>\n              <App />\n            </Router>\n          </GameStateContextProvider>\n        </PartyContextProvider>\n      </StyletronProvider>\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport party from './party'\r\nimport game from './game'\r\n\r\nexport const makeStore = () =>\r\n  createStore(combineReducers({ party, game }), compose(applyMiddleware(thunk)))\r\n","module.exports = __webpack_public_path__ + \"static/media/coins.97dc8c40.svg\";","module.exports = __webpack_public_path__ + \"static/media/broadsword.47ecfebc.svg\";","module.exports = __webpack_public_path__ + \"static/media/heavy-timer.1072a406.svg\";","module.exports = __webpack_public_path__ + \"static/media/g-clef.77d209b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/shieldcomb.802f20f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/chest-armor.f1f52a3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/viking-shield.a61f8230.svg\";","module.exports = __webpack_public_path__ + \"static/media/leather-boot.89b85474.svg\";","module.exports = __webpack_public_path__ + \"static/media/visored-helm.1f2ced7f.svg\";"],"sourceRoot":""}