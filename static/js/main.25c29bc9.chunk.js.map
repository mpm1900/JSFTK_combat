{"version":3,"sources":["icons/svg/delapouite/heart-beats.svg","icons/svg/delapouite/biceps.svg","icons/svg/lorc/brain.svg","icons/svg/delapouite/eye-target.svg","icons/svg/lorc/juggler.svg","icons/svg/lorc/sprint.svg","icons/svg/lorc/clover.svg","icons/svg/delapouite/convergence-target.svg","icons/svg/lorc/star-swirl.svg","icons/svg/sbed/targeted.svg","icons/svg/lorc/dodging.svg","icons/svg/delapouite/sticky-boot.svg","icons/svg/lorc/high-shot.svg","icons/svg/delapouite/shield-impact.svg","icons/svg/lorc/fire-zone.svg","icons/svg/lorc/ubisoft-sun.svg","icons/svg/lorc/flat-hammer.svg","icons/svg/lorc/hammer-drop.svg","icons/svg/lorc/bordered-shield.svg","icons/svg/lorc/robe.svg","icons/svg/lorc/scale-mail.svg","icons/svg/lorc/lightning-shield.svg","icons/svg/delapouite/robin-hood-hat.svg","icons/svg/lorc/pointy-hat.svg","icons/svg/delapouite/herbs-bundle.svg","icons/svg/delapouite/skills.svg","icons/svg/lorc/knapsack.svg","icons/svg/delapouite/light-backpack.svg","icons/svg/delapouite/leather-armor.svg","icons/svg/lorc/split-cross.svg","util/getRandom.ts","util/noneg.ts","objects/Stats.ts","functions/Entity.ts","objects/Status.ts","objects/Traits.ts","functions/Stats.ts","functions/Traits.ts","functions/makeCheck.ts","objects/skills/smash.ts","objects/skills/shockwave.ts","objects/weapons/blacksmiths_hammer.ts","objects/skills/shot.ts","objects/skills/snipe_shot.ts","objects/weapons/hunting_bow.ts","objects/skills/surge.ts","objects/skills/area_blast.ts","objects/weapons/scholars_book.ts","objects/skills/alto.ts","objects/skills/dazzle.ts","objects/weapons/simple_lute.ts","objects/Weapon.ts","objects/skills/taunt.ts","objects/armor/simple_iron_shield.ts","objects/Armor.ts","objects/skills/enemy/bite.ts","objects/enemies/timberwolf.ts","objects/skills/enemy/slap.ts","objects/enemies/vale_imp.ts","objects/skills/enemy/impale.ts","objects/enemies/beastman.ts","objects/consumables/godsbeard.ts","objects/Item.ts","functions/Character.ts","functions/Weapon.ts","functions/Roll.ts","objects/skills/enemy/sting.ts","objects/enemies/bee.ts","objects/skills/enemy/stab.ts","objects/enemies/bandit.ts","objects/Party.ts","objects/enemies/buccaneer.ts","functions/Party.ts","objects/Skills.ts","functions/Damage.ts","functions/Skill.ts","functions/CombatCommitter.ts","objects/armor/adventure_boots.ts","objects/armor/adventure_cloak.ts","objects/armor/explorers_boots.ts","objects/armor/explorers_cloak.ts","objects/armor/explorers_hat.ts","objects/armor/fur_armor.ts","objects/armor/fur_boots.ts","objects/armor/performers_boots.ts","objects/armor/performers_vest.ts","objects/armor/index.ts","objects/skills/protect.ts","objects/weapons/dusty_book.ts","objects/skills/ritardando.ts","objects/skills/symphony.ts","objects/weapons/barbat.ts","objects/weapons/index.ts","state/party/index.ts","state/util.ts","hooks/useActions.ts","contexts/PartyContext/index.tsx","types/CombatQueue.ts","contexts/CombatContext/index.tsx","functions/AI.ts","elements/flex.ts","components/Hover/index.tsx","elements/box.tsx","components/Tooltip/index.tsx","hooks/useOnClickOutside.ts","elements/monospace.tsx","components/Gauge/index.tsx","elements/badge.tsx","components/Icon/index.tsx","icons/maps.tsx","components/TagPreview/index.tsx","components/CharacterImage/index.tsx","functions/Consumable.ts","components/PartyCharacterConsumables/index.tsx","hooks/usePrevious.ts","components/PartyActiveCharacter/StatBar.tsx","components/PartyActiveCharacter/Items.tsx","components/PartyActiveCharacter/Name.tsx","components/PartyActiveCharacter/Image.tsx","elements/button.tsx","components/PartyActiveCharacter/ArmorList.tsx","components/PartyActiveCharacter/WeaponList.tsx","components/PartyActiveCharacter/MenuSelect.tsx","components/StatsPreview/index.tsx","components/ArmorPreview/index.tsx","components/SkillChecks/index.tsx","components/WeaponPreview/index.tsx","components/PartyActiveCharacter/HoverArea.tsx","components/PartyActiveCharacter/index.tsx","components/PartyCharacter/index.tsx","components/CombatPlayerParty/index.tsx","contexts/ModalContext/reducer.ts","contexts/ModalContext/index.tsx","components/RoundResultRenderer/index.tsx","components/SkillPreview/index.tsx","components/CombatActions/index.tsx","components/EnemyCharacter/index.tsx","components/CombatParty/index.tsx","components/AppHeader/index.tsx","components/CombatQueue/index.tsx","contexts/CombatLogContext/util.tsx","contexts/CombatLogContext/index.tsx","components/CombatLog/index.tsx","domain/Combat.tsx","routes/index.tsx","components/PartyCharacters/index.tsx","domain/Party.tsx","domain/Start.tsx","App.tsx","serviceWorker.ts","index.tsx","state/index.ts","icons/svg/lorc/broadsword.svg","assets/img/flat-forestred.jpg","icons/svg/lorc/heavy-timer.svg","icons/svg/delapouite/g-clef.svg","icons/svg/lorc/shieldcomb.svg","icons/svg/delapouite/chest-armor.svg","icons/svg/delapouite/viking-shield.svg","icons/svg/lorc/leather-boot.svg","icons/svg/lorc/visored-helm.svg"],"names":["module","exports","getRandom","items","Math","floor","random","length","noneg","value","ZERO_STATS","vigor","strength","intelligence","perception","talent","agility","luck","armor","resistance","evasion","healthRegen","healthOffset","health","criticalChance","damageModifier","damageOffset","damageReflection","weaknessModifier","goldModifier","consumableHealthGainOffset","CLASS_STARTING_STATS","blacksmith","hunter","scholar","bard","enemy","DAMAGE_BONUS_KEYS","DEFENSE_BONUS_KEYS","STAT_BONUS_KEYS","STAT_KEY_LABELS","makeEntity","name","id","v4","STATUS_EFFECTS","bleeding","type","canStack","duration","traits","persist","commitChance","committedTraits","stats","burning","frozen","poisoned","targeted","description","dazed","evasive","protected","ZERO_TRAIT","combineStats","reduce","p","c","combineTraits","getTraitsFromObjects","parents","makeCheck","key","offset","SMASH","targetType","damage","healing","isBasicAttack","rolls","perfectSplash","perfectPierce","perfectStatus","SHOCKWAVE","BLACKSMITHS_HAMMER","itemType","rarity","twoHand","attackType","skills","SHOT","SNIPE_SHOT","HUNTING_BOW","SURGE","AREA_BLAST","SCHOLARS_BOOK","ALTO","DAZZLE","SIMPLE_LUTE","CLASS_STARTING_WEAPONS","TAUNT","SIMPLE_IRON_SHIELD","resource","CLASS_STARTING_ARMOR","BITE","TIMBERWOLF","isCharacter","partyId","level","class","consumables","status","immunities","weapon","SLAP","VALE_IMP","IMPALE","BEASTMAN","GODSBEARD","skill","ITEM_RARITY_COLORS","common","uncommon","rare","mythic","CLASS_STARTING_CONSUMABLES","CHARACTER_RESOURCES","checkForProcessedCharacter","character","processed","Error","getStatusEffects","map","processCharacter","statusEffects","getTraits","combinedTrait","processWeapon","getSkillsFromObjects","getSkills","hVigor","startingHealth","rawStats","dead","makeCharacter","characterClass","decrementStatusDurations","filter","hasStatus","statusType","s","includes","addMultipleStatus","statusTypes","char","statusEffect","existingStatus","find","findStatus","i","hasImmunity","t","stack","addStatus","getCharacterStat","statValue","getDamageResistance","damageType","addStatusAndTags","commitDamage","resolveCheck","check","roll","DiceRoll","input","result","total","averageTotal","maxTotal","minTotal","output","getPassedCount","results","r","didAllPass","every","STING","INFECTIOUS_STING","BEE","STAB","BANDIT","PLAYER_PARTY_ID","ALL_ENEMY_PARTY_COMBOS","isParty","e","checkForProcessedParty","party","characters","forEach","makeParty","findCharacterInParty","updateCharacter","characterId","updater","processParty","PERFECT_DISPLAY_INFO","splash","pierce","heal","getSplashDamage","rawDamage","resolveSkillTarget","target","makeSkillTarget","undefined","getPerfectText","perfectKeys","base","getPerfectKeys","getSkillDamage","splashDamage","res","pre","text","source","damageResistances","round","getSkillResults","targets","consumableIndex","sourceResult","rollResults","passedCount","perfect","criticalHitResult","criticalSuccess","accuracySuccess","addedStatus","getSourceSkillResult","console","log","dodgeResult","isEvasive","dodgeSuccess","totalDamage","reflectedDamage","healthRegenMaximum","regeneratedHealth","blockedDamage","willDie","getTargetSkillResult","localUpdater","commitSkillResults","enemyParty","commitRoundActions","index","sourceParty","targetParty","localUpdate","splashDamageResistance","ADVENTURE_BOOTS","ADVENTURE_CLOAK","EXPLORERS_BOOTS","EXPLORERS_CLOAK","EXPLORERS_HAT","FUR_ARMOR","FUR_BOOTS","PERFORMERS_BOOTS","PERFORMERS_VEST","ALL_ARMOR","PROTECT","DUSTY_BOOK","RITARDANDO","SYMPHONY","BARBAT","ALL_WEAPONS","actionCreators","payload","actions","updateParty","dispatch","upsertCharacter","deleteCharacter","core","state","action","jack","INITIAL_STATE","makeReducer","initialState","coreFn","usePartyActions","useDispatch","useMemo","bindActionCreators","useActions","defaultContextValue","rawParty","activeCharacter","findCharacter","findRawCharacter","setActiveCharacter","equipItem","item","PartyContext","React","createContext","PartyContextProvider","props","children","useSelector","useState","activeCharacterId","setActiveCharacterId","Provider","existingArmor","a","equipArmor","existingWeapon","equipWeapon","usePartyContext","useContext","makeCombatQueue","sort","b","getMin","queue","Object","keys","Number","POSITIVE_INFINITY","consolidateQueue","min","getFirst","defaultValue","selectedSkill","selectedTargets","selectedConsumableIndex","roundResults","activeRound","isRunning","isDone","isRenderingResult","onSkillSelect","onTargetsSelect","onConsumableSelect","start","next","commit","CombatContext","useCombatContext","CombatContextProvider","setEnemyParty","onRequestNewParty","history","useHistory","resultCommitter","setIsRunning","setIsDone","setIsRenderingResult","setQueue","roundId","setRoundId","setRoundResults","setActiveRound","selectedTarget","setSelectedTarget","setSelectedSkill","setSelectedConsumableIndex","useCallback","useEffect","completeRound","updatedCharacters","validateQueue","shiftQueue","parties","playerParty","targetedCharacters","getSkillTargetOptions","getAIAction","execEnemyTurn","alert","push","nextTarget","roundTarget","FlexContainer","styled","display","flexDirection","$direction","flex","$full","FullContainer","Hover","delay","internalHovering","setInternalHovering","isHovering","setIsHovering","guid","setGuid","useLayoutEffect","setTimeout","onMouseEnter","preventDefault","stopPropagation","onMouseLeave","BoxContainer","style","substyle","tag","Element","rest","border","boxSizing","background","padding","color","boxShadow","Tooltip","direction","tagName","arrow","HoverToolTip","isOpen","ClickToolTip","content","setIsOpen","ref","useRef","handler","listener","event","current","contains","document","addEventListener","removeEventListener","useOnClickOutside","onClick","v","Monospace","fontFamily","fontWeight","Monodiv","Gauge","max","height","percentage","borderLeft","position","borderColor","left","maxWidth","minWidth","textShadow","backgroundColor","alignItems","justifyContent","transition","lineHeight","right","top","fontSize","overflow","HealthGauge","XPGauge","Div","transform","Badge","withWrapper","$absolute","$size","width","borderRadius","$color","cursor","$top","bottom","$bottom","$right","$left","HoverBadge","badgeProps","distance","Icon","src","size","fill","shadow","loading","setLoading","svg","setSvg","fetch","then","className","dangerouslySetInnerHTML","__html","STATI_ICONS","Vigor","Strength","Brain","Awareness","Juggler","Agility","Clover","accuracy","Accuracy","STATUS_ICONS","Dazed","Targeted","Evasive","Protect","SpeedDown","SKILL_ICONS","Shot","SnipeShot","Surge","AreaBast","Dazzle","Smash","Shockwave","Taunt","Alto","ARMOR_TYPE_ICONS","MagicArmor","ClothArmor","Armor","Shield","MagicShield","Footwear","Hat","MagicHat","Helmet","RESOURCE_ICONS","Weapon","offhand","body","head","feet","CONSUMABLE_ITEM_ICONS","Godsbeard","CONSUMABLE_ITEM_COLORS","TagPreview","marginBottom","CharacterImage","alt","considateConsumableListToStack","consumable","count","updateStackItem","PartyCharacterConsumables","onStackClick","filler","Array","flexWrap","f","ConsumableBox","HEIGHT","PartyCharacterConsumable","PartyCharacterConsumableTooltip","usePrevious","StatBar","paddingTop","paddingBottom","marginRight","ItemRow","paddingLeft","userSelect","Items","Name","marginTop","zIndex","Image","Button","outline","RedButton","withStyle","ConfirmButton","borderTop","borderBottom","animationDirection","animationIterationCount","animationName","ArmorItem","$active","ArmorList","canEquip","setActiveItem","activeItemId","setActiveItemId","localeCompare","WeaponItem","WeaponList","ACTIVE_CHARACTER_MENU_KEYS","icon","render","Weapons","MenuSelect","activeKey","onActiveKeyChange","option","paddingRight","defense_key_colors","StatsPreview","textTransform","ArmorPreview","showEquipButton","onEquipClick","rarityColor","from","Color","darken","rgb","toString","to","gradient","marginLeft","minHeight","SkillChecks","label","SkillCheck","opacity","getColor","X","getDamageColor","WeaponPreview","basicAttack","margin","HoverArea","activeItem","PartyActiveCharacter","onRequestClose","activeMenuKey","setActiveMenuKey","activeOption","o","maxHeight","ResourceE","textAlign","Wrapper","$selected","$hoverable","$isHovering","CharacterStat","statKey","getStatColor","PartyCharacter","hoverable","selected","onConsumableClick","previousHealth","borderWidth","borderRight","hp","hpp","Inventory","Details","CombatPlayerParty","contents","callback","blocking","styles","OPEN","CLOSE","reducer","coreFunction","ModalContext","open","close","setBlocking","setPayload","setContents","setCallback","setStyles","useModalContext","getContextValue","Modal","setAppElement","ModalContextProvider","reducerValue","useReducer","context","modal","overlay","RoundResultRenderer","isModal","RoundResult","rounds","stream","Kefir","sequentially","onValue","onEnd","later","SkillPreview","perfectChance","damageString","getSkillDamageRange","CombatActions","Fragment","EnemyCharacter","CombatParty","AppHeader","CombatQueue","first","sortedIds","getSortedIds","bigList","_","NEGATIVE_INFINITY","getMax","widthCoef","Span","SkillSpan","CombatLogContext","combatLog","CombatLogContextProvider","setCombatLog","deadLog","setDeadLog","NameSpan","isUserParty","isEnemyParty","NameSpanBuilder","line","dLog","latestRounds","baseRound","subTarget","CombatLog","scrollRef","scrollIntoView","behavior","Combat","ForestBg","backgroundSize","makeRoute","path","Component","PartyCharacters","onCharacterClick","Party","Start","onChange","rc","StartCharacterCard","CombatDomain","rawEnemyParty","setRawEnemyParty","PartyDomain","App","Boolean","window","location","hostname","match","engine","Styletron","store","createStore","combineReducers","compose","applyMiddleware","thunk","ReactDOM","StrictMode","debug","debugAfterHydration","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.25c29bc9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heart-beats.6b1fff9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/biceps.e62c221f.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain.ce65603a.svg\";","module.exports = __webpack_public_path__ + \"static/media/eye-target.4c5ae680.svg\";","module.exports = __webpack_public_path__ + \"static/media/juggler.1188c0be.svg\";","module.exports = __webpack_public_path__ + \"static/media/sprint.968b443a.svg\";","module.exports = __webpack_public_path__ + \"static/media/clover.df6a0d57.svg\";","module.exports = __webpack_public_path__ + \"static/media/convergence-target.0d2998bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/star-swirl.3045bd1f.svg\";","module.exports = __webpack_public_path__ + \"static/media/targeted.b4ce8dd7.svg\";","module.exports = __webpack_public_path__ + \"static/media/dodging.3c689d6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/sticky-boot.f097559f.svg\";","module.exports = __webpack_public_path__ + \"static/media/high-shot.eed9def8.svg\";","module.exports = __webpack_public_path__ + \"static/media/shield-impact.54fdc5c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire-zone.42e13657.svg\";","module.exports = __webpack_public_path__ + \"static/media/ubisoft-sun.30335592.svg\";","module.exports = __webpack_public_path__ + \"static/media/flat-hammer.dff14efb.svg\";","module.exports = __webpack_public_path__ + \"static/media/hammer-drop.120a92c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/bordered-shield.56c12b47.svg\";","module.exports = __webpack_public_path__ + \"static/media/robe.5b61ecba.svg\";","module.exports = __webpack_public_path__ + \"static/media/scale-mail.cb5ff7d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/lightning-shield.85367254.svg\";","module.exports = __webpack_public_path__ + \"static/media/robin-hood-hat.6bab1449.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointy-hat.d042ac98.svg\";","module.exports = __webpack_public_path__ + \"static/media/herbs-bundle.e02bcec1.svg\";","module.exports = __webpack_public_path__ + \"static/media/skills.60519e24.svg\";","module.exports = __webpack_public_path__ + \"static/media/knapsack.62049a62.svg\";","module.exports = __webpack_public_path__ + \"static/media/light-backpack.6ad63d45.svg\";","module.exports = __webpack_public_path__ + \"static/media/leather-armor.f3d5462f.svg\";","module.exports = __webpack_public_path__ + \"static/media/split-cross.fa0be1a3.svg\";","export const getRandom = <T>(items: T[]) =>\r\n  items[Math.floor(Math.random() * items.length)]\r\n","export const noneg = (value: number) => (value > 0 ? value : 0)\r\n","import { StatsT, CharacterClassT } from '../types'\r\n\r\nexport const ZERO_STATS: StatsT = {\r\n  vigor: 0,\r\n  strength: 0,\r\n  intelligence: 0,\r\n  perception: 0,\r\n  talent: 0,\r\n  agility: 0,\r\n  luck: 0,\r\n\r\n  armor: 0,\r\n  resistance: 0,\r\n  evasion: 0,\r\n  healthRegen: 0,\r\n\r\n  healthOffset: 0,\r\n  health: 0,\r\n\r\n  criticalChance: 0,\r\n  damageModifier: 0,\r\n  damageOffset: 0,\r\n  damageReflection: 0,\r\n  weaknessModifier: 0,\r\n  goldModifier: 0,\r\n  consumableHealthGainOffset: 0,\r\n}\r\n\r\nexport const CLASS_STARTING_STATS: Record<CharacterClassT, StatsT> = {\r\n  blacksmith: {\r\n    strength: 76,\r\n    vigor: 80,\r\n    intelligence: 40,\r\n    perception: 52,\r\n    talent: 72,\r\n    agility: 56,\r\n    luck: 50,\r\n    armor: 2,\r\n    resistance: 0,\r\n    evasion: 7,\r\n    healthOffset: 0,\r\n    health: 0,\r\n    healthRegen: 0,\r\n    criticalChance: 5,\r\n    damageModifier: 0,\r\n    damageOffset: 0,\r\n    damageReflection: 0,\r\n    weaknessModifier: 0,\r\n    goldModifier: 0,\r\n    consumableHealthGainOffset: 15,\r\n  },\r\n  hunter: {\r\n    strength: 52,\r\n    vigor: 66,\r\n    intelligence: 46,\r\n    perception: 78,\r\n    talent: 64,\r\n    agility: 78,\r\n    luck: 50,\r\n    armor: 1,\r\n    resistance: 0,\r\n    evasion: 20,\r\n    healthOffset: 0,\r\n    health: 0,\r\n    healthRegen: 0,\r\n    criticalChance: 5,\r\n    damageModifier: 0,\r\n    damageOffset: 0,\r\n    damageReflection: 0,\r\n    weaknessModifier: 0,\r\n    goldModifier: 0,\r\n    consumableHealthGainOffset: 15,\r\n  },\r\n  scholar: {\r\n    strength: 42,\r\n    vigor: 60,\r\n    intelligence: 78,\r\n    perception: 66,\r\n    talent: 70,\r\n    agility: 70,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 1,\r\n    evasion: 13,\r\n    healthOffset: 0,\r\n    health: 0,\r\n    healthRegen: 0,\r\n    criticalChance: 5,\r\n    damageModifier: 0,\r\n    damageOffset: 0,\r\n    damageReflection: 0,\r\n    weaknessModifier: 0,\r\n    goldModifier: 0,\r\n    consumableHealthGainOffset: 15,\r\n  },\r\n  bard: {\r\n    strength: 44,\r\n    vigor: 50,\r\n    intelligence: 70,\r\n    perception: 68,\r\n    talent: 78,\r\n    agility: 68,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 1,\r\n    evasion: 11,\r\n    healthOffset: 0,\r\n    health: 0,\r\n    healthRegen: 0,\r\n    criticalChance: 5,\r\n    damageModifier: 0,\r\n    damageOffset: 0,\r\n    damageReflection: 0,\r\n    weaknessModifier: 0,\r\n    goldModifier: 0,\r\n    consumableHealthGainOffset: 15,\r\n  },\r\n  enemy: ZERO_STATS,\r\n}\r\n\r\nexport const DAMAGE_BONUS_KEYS: (keyof StatsT)[] = [\r\n  'goldModifier',\r\n  'damageOffset',\r\n  'damageModifier',\r\n  'criticalChance',\r\n]\r\nexport const DEFENSE_BONUS_KEYS: (keyof StatsT)[] = [\r\n  'armor',\r\n  'resistance',\r\n  'evasion',\r\n  'healthRegen',\r\n  'damageReflection',\r\n]\r\nexport const HEALTH_FOCUS_BONUS_KEYS: (keyof StatsT)[] = ['health']\r\nexport const STAT_BONUS_KEYS: (keyof StatsT)[] = [\r\n  'vigor',\r\n  'strength',\r\n  'intelligence',\r\n  'perception',\r\n  'talent',\r\n  'agility',\r\n  'luck',\r\n]\r\n\r\nexport const STAT_KEY_LABELS: Record<keyof StatsT, string> = {\r\n  strength: ' Strength',\r\n  vigor: ' Vigor',\r\n  intelligence: ' Intelligence',\r\n  perception: ' Perception',\r\n  talent: ' Talent',\r\n  agility: ' Agility',\r\n  luck: ' Luck',\r\n  armor: ' Armor',\r\n  resistance: ' Resistance',\r\n  evasion: ' Evasion',\r\n  healthOffset: ' ERROR!',\r\n  health: ' Health',\r\n  healthRegen: ' Health Regen',\r\n  criticalChance: '% Crit Chance',\r\n  damageOffset: ' Raw Damage',\r\n  damageModifier: '% Attack Damage',\r\n  damageReflection: ' Damage Reflection',\r\n  weaknessModifier: '% Recieved Damage',\r\n  goldModifier: '% Gold Recieved',\r\n  consumableHealthGainOffset: ' HP from Consumables',\r\n}\r\n","import { v4 } from 'uuid'\r\n\r\nexport const makeEntity = (name: string = '') => ({\r\n  id: v4(),\r\n  name,\r\n})\r\n","import { StatusTypeT, StatusT } from '../types'\r\nimport { makeEntity } from '../functions/Entity'\r\nimport { ZERO_STATS } from './Stats'\r\n\r\nconst STATUS_DURATION = 5\r\nexport const STATUS_EFFECTS: Record<StatusTypeT, StatusT> = {\r\n  bleeding: {\r\n    ...makeEntity('Bleeding'),\r\n    type: 'bleeding',\r\n    canStack: false,\r\n    duration: STATUS_DURATION,\r\n    traits: [],\r\n    persist: true,\r\n    commitChance: 50,\r\n    committedTraits: [\r\n      {\r\n        duration: STATUS_DURATION,\r\n        stats: {\r\n          ...ZERO_STATS,\r\n          healthOffset: -10,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  burning: {\r\n    ...makeEntity('Burning'),\r\n    type: 'burning',\r\n    canStack: false,\r\n    duration: STATUS_DURATION,\r\n    traits: [],\r\n    persist: true,\r\n    commitChance: 100,\r\n    committedTraits: [\r\n      {\r\n        duration: STATUS_DURATION,\r\n        stats: {\r\n          ...ZERO_STATS,\r\n          healthOffset: -10,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  frozen: {\r\n    ...makeEntity('Frozen'),\r\n    type: 'frozen',\r\n    canStack: false,\r\n    persist: true,\r\n    duration: STATUS_DURATION,\r\n    traits: [\r\n      {\r\n        duration: STATUS_DURATION,\r\n        stats: {\r\n          ...ZERO_STATS,\r\n          weaknessModifier: 0.25,\r\n        },\r\n      },\r\n    ],\r\n    commitChance: 0,\r\n    committedTraits: [],\r\n  },\r\n  poisoned: {\r\n    ...makeEntity('Poisoned'),\r\n    type: 'poisoned',\r\n    canStack: true,\r\n    persist: true,\r\n    duration: STATUS_DURATION,\r\n    traits: [\r\n      {\r\n        duration: STATUS_DURATION,\r\n        stats: {\r\n          ...ZERO_STATS,\r\n          strength: -5,\r\n          intelligence: -5,\r\n          perception: -5,\r\n          talent: -5,\r\n        },\r\n      },\r\n    ],\r\n    commitChance: 100,\r\n    committedTraits: [\r\n      {\r\n        duration: STATUS_DURATION,\r\n        stats: {\r\n          ...ZERO_STATS,\r\n          healthOffset: -5,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  targeted: {\r\n    ...makeEntity('Targeted'),\r\n    type: 'targeted',\r\n    duration: 5,\r\n    traits: [],\r\n    persist: false,\r\n    committedTraits: [],\r\n    commitChance: 100,\r\n    canStack: false,\r\n    description: 'All enemies will attack this character, if able.',\r\n  },\r\n  dazed: {\r\n    ...makeEntity('Dazed'),\r\n    type: 'dazed',\r\n    duration: 5,\r\n    traits: [],\r\n    persist: false,\r\n    committedTraits: [],\r\n    commitChance: 100,\r\n    canStack: false,\r\n    description: 'Character is temporarily halted on the combat queue.',\r\n  },\r\n  evasive: {\r\n    ...makeEntity('Evasive'),\r\n    type: 'evasive',\r\n    duration: 5,\r\n    traits: [],\r\n    persist: true,\r\n    committedTraits: [],\r\n    commitChance: 100,\r\n    canStack: false,\r\n    description: 'Non-perfect attacks will miss when targeting this character.',\r\n  },\r\n  protected: {\r\n    ...makeEntity('Protected'),\r\n    type: 'protected',\r\n    duration: -1,\r\n    traits: [],\r\n    persist: false,\r\n    committedTraits: [],\r\n    commitChance: 100,\r\n    canStack: false,\r\n    description: 'Negate the next damage that targets this character.',\r\n  },\r\n  ['speed-down']: {\r\n    ...makeEntity('Speed Down'),\r\n    type: 'speed-down',\r\n    duration: 5,\r\n    persist: false,\r\n    traits: [\r\n      {\r\n        duration: 5,\r\n        stats: {\r\n          ...ZERO_STATS,\r\n          agility: -20,\r\n        },\r\n      },\r\n    ],\r\n    committedTraits: [],\r\n    commitChance: 100,\r\n    canStack: false,\r\n    description: '-20 to Speed.',\r\n  },\r\n}\r\n","import { TraitT } from '../types'\r\nimport { ZERO_STATS } from './Stats'\r\n\r\nexport const ZERO_TRAIT: TraitT = {\r\n  duration: -1,\r\n  stats: ZERO_STATS,\r\n}\r\n","import { StatsT } from '../types'\r\nimport { ZERO_STATS } from '../objects'\r\n\r\nexport const combineStats = (...stats: StatsT[]): StatsT => {\r\n  return stats.reduce(\r\n    (p, c) => ({\r\n      vigor: p.vigor + c.vigor,\r\n      strength: p.strength + c.strength,\r\n      intelligence: p.intelligence + c.intelligence,\r\n      perception: p.perception + c.perception,\r\n      talent: p.talent + c.talent,\r\n      agility: p.agility + c.agility,\r\n      luck: p.luck + c.luck,\r\n      armor: p.armor + c.armor,\r\n      resistance: p.resistance + c.resistance,\r\n      evasion: p.evasion + c.evasion,\r\n      criticalChance: p.criticalChance + c.criticalChance,\r\n      damageModifier: p.damageModifier + c.damageModifier,\r\n      damageOffset: p.damageOffset + c.damageOffset,\r\n      damageReflection: p.damageReflection + c.damageReflection,\r\n      healthOffset: p.healthOffset + c.healthOffset,\r\n      health: p.health + c.health,\r\n      healthRegen: p.healthRegen + c.healthRegen,\r\n      weaknessModifier: p.weaknessModifier + c.weaknessModifier,\r\n      goldModifier: p.goldModifier + c.goldModifier,\r\n      consumableHealthGainOffset:\r\n        p.consumableHealthGainOffset + c.consumableHealthGainOffset,\r\n    }),\r\n    ZERO_STATS,\r\n  )\r\n}\r\n","import { TraitT, HasTraitsT, HasCommittedTraits } from '../types'\r\nimport { combineStats } from './Stats'\r\nimport { ZERO_TRAIT } from '../objects'\r\n\r\nexport const combineTraits = (...traits: TraitT[]): TraitT => {\r\n  return traits.reduce(\r\n    (p, c) => ({\r\n      stats: combineStats(p.stats, c.stats),\r\n      duration: -1,\r\n    }),\r\n    ZERO_TRAIT,\r\n  )\r\n}\r\n\r\nexport const getTraitsFromObjects = (parents: HasTraitsT[]) => {\r\n  return parents.reduce((p, c) => {\r\n    return [...p, ...c.traits]\r\n  }, [] as TraitT[])\r\n}\r\nexport const getCommittedTraitsFromObjects = (\r\n  parents: HasCommittedTraits[],\r\n) => {\r\n  return parents.reduce((p, c) => {\r\n    return [...p, ...c.committedTraits]\r\n  }, [] as TraitT[])\r\n}\r\n","import { StatsT, CheckT } from '../types'\r\n\r\nexport const makeCheck = (key: keyof StatsT, offset?: number): CheckT => ({\r\n  key,\r\n  offset,\r\n})\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const SMASH: SkillT = {\r\n  ...makeEntity('Smash'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [makeCheck('strength'), makeCheck('strength'), makeCheck('strength')],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const SHOCKWAVE: SkillT = {\r\n  ...makeEntity('Shockwave'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: false,\r\n  rolls: [\r\n    makeCheck('strength', -10),\r\n    makeCheck('strength', -10),\r\n    makeCheck('strength', -10),\r\n    makeCheck('strength', -10),\r\n  ],\r\n  perfectSplash: true,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { WeaponT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { SMASH } from '../skills/smash'\r\nimport { SHOCKWAVE } from '../skills/shockwave'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const BLACKSMITHS_HAMMER: WeaponT = {\r\n  ...makeEntity(`Blacksmith's Hammer`),\r\n  itemType: 'weapon',\r\n  type: 'hammer',\r\n  rarity: 'common',\r\n  twoHand: false,\r\n  attackType: 'melee',\r\n  damage: { type: 'physical', damage: 10 },\r\n  traits: [],\r\n  skills: [SMASH, SHOCKWAVE],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const SHOT: SkillT = {\r\n  ...makeEntity('Shot'),\r\n  // TODO Damage Modifier for flying, etc...\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const SNIPE_SHOT: SkillT = {\r\n  ...makeEntity('Snipe Shot'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: false,\r\n  rolls: [\r\n    makeCheck('perception', -10),\r\n    makeCheck('perception', -10),\r\n    makeCheck('perception', -10),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { WeaponT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\nimport { SHOT } from '../skills/shot'\r\nimport { SNIPE_SHOT } from '../skills/snipe_shot'\r\n\r\nexport const HUNTING_BOW: WeaponT = {\r\n  ...makeEntity(`Hunting Bow`),\r\n  itemType: 'weapon',\r\n  type: 'bow',\r\n  rarity: 'common',\r\n  twoHand: true,\r\n  attackType: 'ranged',\r\n  damage: { type: 'physical', damage: 6 },\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        evasion: 3,\r\n      },\r\n    },\r\n  ],\r\n  skills: [SHOT, SNIPE_SHOT],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const SURGE: SkillT = {\r\n  ...makeEntity('Surge'),\r\n  damageModifier: -0.2,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [\r\n    makeCheck('intelligence'),\r\n    makeCheck('intelligence'),\r\n    makeCheck('intelligence'),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const AREA_BLAST: SkillT = {\r\n  ...makeEntity('Area Blast'),\r\n  damageModifier: -0.5,\r\n  targetType: 'group',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: false,\r\n  rolls: [\r\n    makeCheck('intelligence', -5),\r\n    makeCheck('intelligence', -5),\r\n    makeCheck('intelligence', -5),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { WeaponT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { SURGE } from '../skills/surge'\r\nimport { AREA_BLAST } from '../skills/area_blast'\r\n\r\nexport const SCHOLARS_BOOK: WeaponT = {\r\n  ...makeEntity(`Scholar's Book`),\r\n  itemType: 'weapon',\r\n  type: 'tome',\r\n  rarity: 'common',\r\n  twoHand: true,\r\n  attackType: 'ranged',\r\n  damage: { type: 'magic', damage: 6 },\r\n  traits: [],\r\n  skills: [SURGE, AREA_BLAST],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const ALTO: SkillT = {\r\n  ...makeEntity('Alto'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [makeCheck('talent'), makeCheck('talent'), makeCheck('talent')],\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const DAZZLE: SkillT = {\r\n  ...makeEntity('Dazzle'),\r\n  damageModifier: -0.5,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: false,\r\n  rolls: [makeCheck('talent', -6), makeCheck('talent', -5)],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [{ type: 'dazed', duration: 4 }],\r\n}\r\n","import { WeaponT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ALTO } from '../skills/alto'\r\nimport { DAZZLE } from '../skills/dazzle'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const SIMPLE_LUTE: WeaponT = {\r\n  ...makeEntity(`Simple Lute`),\r\n  itemType: 'weapon',\r\n  type: 'lute',\r\n  rarity: 'common',\r\n  twoHand: true,\r\n  attackType: 'ranged',\r\n  damage: { type: 'magic', damage: 6 },\r\n  // TODO: Gold Multiplier\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        goldModifier: 12,\r\n      },\r\n    },\r\n  ],\r\n  skills: [ALTO, DAZZLE],\r\n}\r\n","import { CharacterClassT, WeaponT } from '../types'\r\nimport { BLACKSMITHS_HAMMER } from './weapons/blacksmiths_hammer'\r\nimport { HUNTING_BOW } from './weapons/hunting_bow'\r\nimport { SCHOLARS_BOOK } from './weapons/scholars_book'\r\nimport { SIMPLE_LUTE } from './weapons/simple_lute'\r\n\r\nexport const CLASS_STARTING_WEAPONS: Partial<Record<\r\n  CharacterClassT,\r\n  WeaponT\r\n>> = {\r\n  blacksmith: BLACKSMITHS_HAMMER,\r\n  hunter: HUNTING_BOW,\r\n  scholar: SCHOLARS_BOOK,\r\n  bard: SIMPLE_LUTE,\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const TAUNT: SkillT = {\r\n  ...makeEntity('Taunt'),\r\n  damageModifier: 0,\r\n  targetType: 'self',\r\n  damage: false,\r\n  healing: false,\r\n  isBasicAttack: false,\r\n  rolls: [makeCheck('vigor'), makeCheck('vigor')],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [\r\n    {\r\n      type: 'targeted',\r\n      duration: 5,\r\n    },\r\n  ],\r\n}\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\nimport { TAUNT } from '../skills/taunt'\r\n\r\nexport const SIMPLE_IRON_SHIELD: ArmorT = {\r\n  ...makeEntity('Simple Iron Shield'),\r\n  itemType: 'armor',\r\n  resource: 'offhand',\r\n  rarity: 'common',\r\n  type: 'shield',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 1,\r\n      },\r\n    },\r\n  ],\r\n  skills: [TAUNT],\r\n}\r\n","import { CharacterClassT, ArmorT } from '../types'\r\nimport { SIMPLE_IRON_SHIELD } from './armor/simple_iron_shield'\r\nimport { EXPLORERS_CLOAK } from './armor/explorers_cloak'\r\nimport { EXPLORERS_HAT } from './armor/explorers_hat'\r\nimport { FUR_ARMOR } from './armor/fur_armor'\r\nimport { ADVENTURE_BOOTS } from './armor/adventure_boots'\r\nimport { ADVENTURE_CLOAK } from './armor/adventure_cloak'\r\nimport { FUR_BOOTS } from './armor/fur_boots'\r\nimport { PERFORMERS_VEST } from './armor/performers_vest'\r\nimport { PERFORMERS_BOOTS } from './armor/performers_boots'\r\nimport { EXPLORERS_BOOTS } from './armor/explorers_boots'\r\n\r\nexport const CLASS_STARTING_ARMOR: Record<CharacterClassT, ArmorT[]> = {\r\n  blacksmith: [SIMPLE_IRON_SHIELD],\r\n  hunter: [],\r\n  scholar: [],\r\n  bard: [],\r\n  enemy: [],\r\n}\r\n","import { SkillT } from '../../../types'\r\nimport { makeEntity } from '../../../functions/Entity'\r\nimport { makeCheck } from '../../../functions/makeCheck'\r\n\r\nexport const BITE: SkillT = {\r\n  ...makeEntity('Bite'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { CharacterT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { BITE } from '../skills/enemy/bite'\r\n\r\nexport const TIMBERWOLF = (): CharacterT => {\r\n  return {\r\n    ...makeEntity('Timberwolf'),\r\n    isCharacter: true,\r\n    partyId: '',\r\n    level: 1,\r\n    class: 'enemy',\r\n    stats: {\r\n      vigor: -80,\r\n      strength: 52,\r\n      intelligence: 40,\r\n      perception: 52,\r\n      talent: 30,\r\n      agility: 65,\r\n      luck: 50,\r\n      armor: 0,\r\n      resistance: 0,\r\n      evasion: 10,\r\n      healthOffset: 0,\r\n      health: -1,\r\n      healthRegen: 0,\r\n      criticalChance: 5,\r\n      damageModifier: 0,\r\n      damageOffset: 0,\r\n      damageReflection: 0,\r\n      weaknessModifier: 0,\r\n      goldModifier: 0,\r\n      consumableHealthGainOffset: 0,\r\n    },\r\n    traits: [],\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      ...makeEntity('Wolf Fangs'),\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'wolf-fangs',\r\n      twoHand: true,\r\n      attackType: 'melee',\r\n      damage: {\r\n        damage: 7,\r\n        type: 'physical',\r\n      },\r\n      traits: [],\r\n      skills: [BITE],\r\n    },\r\n  }\r\n}\r\n","import { SkillT } from '../../../types'\r\nimport { makeEntity } from '../../../functions/Entity'\r\nimport { makeCheck } from '../../../functions/makeCheck'\r\n\r\nexport const SLAP: SkillT = {\r\n  ...makeEntity('Slap'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { CharacterT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { SLAP } from '../skills/enemy/slap'\r\n\r\nexport const VALE_IMP = (): CharacterT => {\r\n  return {\r\n    ...makeEntity('Vale Imp'),\r\n    isCharacter: true,\r\n    partyId: '',\r\n    level: 1,\r\n    class: 'enemy',\r\n    stats: {\r\n      vigor: -80,\r\n      strength: 40,\r\n      intelligence: 40,\r\n      perception: 52,\r\n      talent: 30,\r\n      agility: 76,\r\n      luck: 50,\r\n      armor: 0,\r\n      resistance: 0,\r\n      evasion: 10,\r\n      health: 0,\r\n      healthOffset: 0,\r\n      healthRegen: 0,\r\n      criticalChance: 5,\r\n      damageModifier: 0,\r\n      damageOffset: 0,\r\n      damageReflection: 0,\r\n      weaknessModifier: 0,\r\n      goldModifier: 0,\r\n      consumableHealthGainOffset: 0,\r\n    },\r\n    traits: [],\r\n    armor: [],\r\n    consumables: [],\r\n    status: [\r\n      {\r\n        duration: -1,\r\n        type: 'evasive',\r\n      },\r\n    ],\r\n    immunities: [],\r\n    weapon: {\r\n      ...makeEntity('Imp Fists'),\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'imp-fists',\r\n      twoHand: true,\r\n      attackType: 'melee',\r\n      damage: {\r\n        damage: 6,\r\n        type: 'physical',\r\n      },\r\n      traits: [],\r\n      skills: [SLAP],\r\n    },\r\n  }\r\n}\r\n","import { SkillT } from '../../../types'\r\nimport { makeEntity } from '../../../functions/Entity'\r\nimport { makeCheck } from '../../../functions/makeCheck'\r\n\r\nexport const IMPALE: SkillT = {\r\n  ...makeEntity('Impale'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [makeCheck('strength'), makeCheck('strength'), makeCheck('strength')],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { CharacterT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { IMPALE } from '../skills/enemy/impale'\r\n\r\nexport const BEASTMAN = (): CharacterT => {\r\n  return {\r\n    ...makeEntity('Beastman'),\r\n    isCharacter: true,\r\n    partyId: '',\r\n    level: 1,\r\n    class: 'enemy',\r\n    stats: {\r\n      vigor: -80,\r\n      strength: 52,\r\n      intelligence: 40,\r\n      perception: 52,\r\n      talent: 30,\r\n      agility: 60,\r\n      luck: 50,\r\n      armor: 2,\r\n      resistance: 0,\r\n      evasion: 10,\r\n      healthOffset: 0,\r\n      health: 0,\r\n      healthRegen: 0,\r\n      criticalChance: 5,\r\n      damageModifier: 0,\r\n      damageOffset: 0,\r\n      damageReflection: 0,\r\n      weaknessModifier: 0,\r\n      goldModifier: 0,\r\n      consumableHealthGainOffset: 0,\r\n    },\r\n    traits: [],\r\n    armor: [],\r\n    status: [],\r\n    consumables: [],\r\n    immunities: [],\r\n    weapon: {\r\n      ...makeEntity('Beastman Spear'),\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'spear',\r\n      twoHand: true,\r\n      attackType: 'melee',\r\n      damage: {\r\n        damage: 8,\r\n        type: 'physical',\r\n      },\r\n      traits: [],\r\n      skills: [IMPALE],\r\n    },\r\n  }\r\n}\r\n","import { ConsumableT } from '../../types/Consumable'\r\nimport { makeEntity } from '../../functions/Entity'\r\n\r\nexport const GODSBEARD: ConsumableT = {\r\n  ...makeEntity('Godsbeard'),\r\n  itemType: 'consumable',\r\n  rarity: 'common',\r\n  skill: {\r\n    ...makeEntity('Godsbeard'),\r\n    damageModifier: 0,\r\n    targetType: 'self',\r\n    rolls: [],\r\n    damage: false,\r\n    healing: true,\r\n    isBasicAttack: false,\r\n    perfectSplash: false,\r\n    perfectPierce: false,\r\n    perfectStatus: [],\r\n  },\r\n}\r\n","import { ItemRarityT, CharacterClassT, ArmorResourceType } from '../types'\r\nimport { ConsumableT } from '../types/Consumable'\r\nimport { GODSBEARD } from './consumables/godsbeard'\r\n\r\nexport const ITEM_RARITY_COLORS: Record<ItemRarityT, string> = {\r\n  common: 'rgba(255,255,255,0.8)',\r\n  uncommon: 'rgba(173,216,230,1)',\r\n  rare: 'rgba(221,160,221,1)',\r\n  mythic: 'rgb(255,160,122,1)',\r\n}\r\n\r\nexport const CLASS_STARTING_CONSUMABLES: Record<\r\n  CharacterClassT,\r\n  ConsumableT[]\r\n> = {\r\n  blacksmith: [GODSBEARD],\r\n  hunter: [GODSBEARD],\r\n  scholar: [GODSBEARD],\r\n  bard: [GODSBEARD],\r\n  enemy: [],\r\n}\r\n\r\nexport const CHARACTER_RESOURCES: ArmorResourceType[] = [\r\n  'offhand',\r\n  'body',\r\n  'head',\r\n  'feet',\r\n]\r\n","import {\r\n  CharacterT,\r\n  ProcessedCharacterT,\r\n  StatsT,\r\n  TraitT,\r\n  DamageTypeT,\r\n  StatusTypeT,\r\n  CheckT,\r\n  CharacterClassT,\r\n  EntityT,\r\n  WeaponT,\r\n  StatusT,\r\n  ArmorT,\r\n} from '../types'\r\nimport { STATUS_EFFECTS, CLASS_STARTING_STATS } from '../objects'\r\nimport {\r\n  combineTraits,\r\n  getTraitsFromObjects,\r\n  getCommittedTraitsFromObjects,\r\n} from './Traits'\r\nimport { processWeapon } from './Weapon'\r\nimport { getSkillsFromObjects } from './Skill'\r\nimport { makeEntity } from './Entity'\r\nimport { combineStats } from './Stats'\r\nimport { CLASS_STARTING_WEAPONS } from '../objects/Weapon'\r\nimport { CLASS_STARTING_ARMOR } from '../objects/Armor'\r\nimport { ALL_ENEMIES } from '../objects/enemies'\r\nimport { getRandom, noneg } from '../util'\r\nimport { CLASS_STARTING_CONSUMABLES } from '../objects/Item'\r\n\r\nexport const checkForProcessedCharacter = (character: CharacterT) => {\r\n  if ((character as ProcessedCharacterT).processed) {\r\n    throw new Error('No Processed Characters Allowed')\r\n  }\r\n}\r\n\r\nexport const isCharacter = (e: EntityT) => e && (e as CharacterT).isCharacter\r\n\r\nexport const getStatusEffects = (character: CharacterT): StatusT[] => {\r\n  return character.status.map((status) => ({\r\n    ...STATUS_EFFECTS[status.type],\r\n    duration: status.duration,\r\n  }))\r\n}\r\n\r\nexport const getTraits = (character: CharacterT): TraitT[] => {\r\n  checkForProcessedCharacter(character)\r\n  const statusEffects = getStatusEffects(character)\r\n  const ret = [\r\n    ...character.traits,\r\n    ...character.weapon.traits,\r\n    ...getTraitsFromObjects(statusEffects),\r\n    ...getTraitsFromObjects(character.armor),\r\n    ...getTraitsFromObjects(getStatusEffects(character)),\r\n  ]\r\n  return ret\r\n}\r\n\r\nexport const getSkills = (character: CharacterT) => {\r\n  checkForProcessedCharacter(character)\r\n  return [...character.weapon.skills, ...getSkillsFromObjects(character.armor)]\r\n}\r\n\r\nexport const processCharacter = (\r\n  character: CharacterT,\r\n): ProcessedCharacterT => {\r\n  checkForProcessedCharacter(character)\r\n  const traits = getTraits(character)\r\n  const combinedTrait = combineTraits(...traits)\r\n  const stats: StatsT = combineStats(character.stats, combinedTrait.stats)\r\n  const weapon = processWeapon(character.weapon)\r\n  const statusEffects = getStatusEffects(character)\r\n  const skills = getSkills(character)\r\n  const hVigor =\r\n    CLASS_STARTING_STATS[character.class].vigor || character.stats.vigor\r\n  const startingHealth = 25 + Math.floor(0.1 * hVigor)\r\n  const health =\r\n    Math.floor(\r\n      startingHealth + character.level + 0.1 * character.level * stats.vigor,\r\n    ) + stats.health\r\n\r\n  return {\r\n    ...character,\r\n    health,\r\n    stats,\r\n    rawStats: character.stats,\r\n    weapon,\r\n    statusEffects,\r\n    skills,\r\n    dead: stats.healthOffset >= health,\r\n    processed: true,\r\n  }\r\n}\r\n\r\nexport const makeCharacter = (\r\n  characterClass: CharacterClassT,\r\n  partyId: string = '',\r\n): CharacterT => {\r\n  return {\r\n    ...makeEntity(),\r\n    isCharacter: true,\r\n    partyId,\r\n    level: 1,\r\n    class: characterClass,\r\n    stats: CLASS_STARTING_STATS[characterClass],\r\n    traits: [],\r\n    weapon: CLASS_STARTING_WEAPONS[characterClass] as WeaponT,\r\n    armor: CLASS_STARTING_ARMOR[characterClass],\r\n    consumables: CLASS_STARTING_CONSUMABLES[characterClass],\r\n    status: [],\r\n    immunities: [],\r\n  }\r\n}\r\n\r\nexport const makeEnemy = () => {\r\n  const staicEnemy = getRandom(ALL_ENEMIES)\r\n  if (staicEnemy) return staicEnemy()\r\n  return makeCharacter(getRandom(['blacksmith', 'hunter', 'scholar']))\r\n}\r\n\r\nexport const commitTrait = (\r\n  character: CharacterT,\r\n  trait: TraitT,\r\n): CharacterT => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    stats: combineStats(character.stats, trait.stats),\r\n  }\r\n}\r\nexport const commitStatusEffects = (character: CharacterT): CharacterT => {\r\n  checkForProcessedCharacter(character)\r\n  const statusEffects = getStatusEffects(character)\r\n  const traits = getCommittedTraitsFromObjects(statusEffects)\r\n  return traits.reduce(\r\n    (char, trait) => {\r\n      return commitTrait(char, trait)\r\n    },\r\n    { ...character },\r\n  )\r\n}\r\nexport const decrementStatusDurations = (character: CharacterT): CharacterT => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    status: character.status\r\n      .map((status) => ({ ...status, duration: status.duration - 1 }))\r\n      .filter((status) => status.duration !== 0),\r\n  }\r\n}\r\nexport const hasStatus = (character: CharacterT, statusType: StatusTypeT) => {\r\n  return character.status.map((s) => s.type).includes(statusType)\r\n}\r\nexport const hasImmunity = (character: CharacterT, statusType: StatusTypeT) => {\r\n  return character.immunities.map((i) => i.type).includes(statusType)\r\n}\r\nexport const findStatus = (character: CharacterT, statusType: StatusTypeT) => {\r\n  return character.status.find((s) => s.type === statusType)\r\n}\r\nexport const addStatus = (\r\n  character: CharacterT,\r\n  statusType: StatusTypeT,\r\n  duration?: number,\r\n) => {\r\n  const statusEffect = STATUS_EFFECTS[statusType]\r\n  const existingStatus = findStatus(character, statusType)\r\n  if (hasImmunity(character, statusType)) {\r\n    return character\r\n  }\r\n  if (existingStatus && !statusEffect.canStack) {\r\n    return {\r\n      ...character,\r\n      status: [\r\n        ...character.status.filter((t) => t.type !== statusType),\r\n        { type: statusType, duration: duration || statusEffect.duration },\r\n      ],\r\n    }\r\n  }\r\n  if (existingStatus && statusEffect.canStack) {\r\n    return {\r\n      ...character,\r\n      status: [\r\n        ...character.status.filter((t) => t.type !== statusType),\r\n        {\r\n          type: statusType,\r\n          duration: duration || statusEffect.duration,\r\n          stack: (existingStatus.stack || 0) + 1,\r\n        },\r\n      ],\r\n    }\r\n  }\r\n  return {\r\n    ...character,\r\n    status: [\r\n      ...character.status,\r\n      {\r\n        type: statusType,\r\n        duration: duration || statusEffect.duration,\r\n        stack: 0,\r\n      },\r\n    ],\r\n  }\r\n}\r\nexport const addMultipleStatus = (\r\n  character: CharacterT,\r\n  statusTypes: StatusTypeT[],\r\n) => {\r\n  return statusTypes.reduce(\r\n    (char, statusType) => {\r\n      return addStatus(char, statusType)\r\n    },\r\n    { ...character },\r\n  )\r\n}\r\n\r\nexport const removeTemporaryStatus = (character: CharacterT): CharacterT => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    status: character.status\r\n      .map((s) => STATUS_EFFECTS[s.type])\r\n      .filter((s) => s.persist),\r\n  }\r\n}\r\n\r\nexport const getCharacterStat = (character: CharacterT, statValue: CheckT) => {\r\n  const resolvedStatValue = statValue.key ? character.stats[statValue.key] : 0\r\n  return resolvedStatValue + (statValue.offset || 0)\r\n}\r\n\r\nexport const getDamageResistance = (\r\n  character: ProcessedCharacterT,\r\n  damageType: DamageTypeT,\r\n) => {\r\n  if (damageType === 'physical') return character.stats.armor\r\n  if (damageType === 'magic') return character.stats.resistance\r\n  return 0\r\n}\r\n\r\nexport const addStatusAndTags = (\r\n  character: CharacterT,\r\n  status: StatusTypeT[],\r\n) => {\r\n  return addMultipleStatus(character, status)\r\n}\r\n\r\nexport const equipArmor = (\r\n  character: CharacterT,\r\n  armor: ArmorT,\r\n): { character: CharacterT; armor: ArmorT | undefined } => {\r\n  checkForProcessedCharacter(character)\r\n  const existingArmor = character.armor.find(\r\n    (a) => a.resource === armor.resource,\r\n  )\r\n  return {\r\n    character: {\r\n      ...character,\r\n      armor: existingArmor\r\n        ? [...character.armor.filter((a) => a.id !== existingArmor.id), armor]\r\n        : [...character.armor, armor],\r\n    },\r\n    armor: existingArmor,\r\n  }\r\n}\r\n\r\nexport const equipWeapon = (\r\n  character: CharacterT,\r\n  weapon: WeaponT,\r\n): { character: CharacterT; weapon: WeaponT | undefined } => {\r\n  const existingWeapon = character.weapon\r\n  return {\r\n    character: {\r\n      ...character,\r\n      weapon,\r\n    },\r\n    weapon: existingWeapon,\r\n  }\r\n}\r\n\r\nexport const commitDamage = (\r\n  character: CharacterT,\r\n  damage: number,\r\n): CharacterT => {\r\n  checkForProcessedCharacter(character)\r\n  if (hasStatus(character, 'protected')) {\r\n    return {\r\n      ...character,\r\n      status: character.status.filter((s) => s.type !== 'protected'),\r\n    }\r\n  } else {\r\n    return {\r\n      ...character,\r\n      stats: {\r\n        ...character.stats,\r\n        healthOffset: noneg(character.stats.healthOffset + damage),\r\n      },\r\n    }\r\n  }\r\n}\r\n","import { WeaponT, ProcessedWeaponT } from '../types'\r\n\r\nexport const processWeapon = (weapon: WeaponT): ProcessedWeaponT => {\r\n  return {\r\n    ...weapon,\r\n    processed: true,\r\n  }\r\n}\r\n","import { DiceRoll } from 'rpg-dice-roller'\r\nimport { ProcessedCharacterT, CheckResultT, CheckT, StatsT } from '../types'\r\nimport { getCharacterStat } from './Character'\r\n\r\nexport const resolveCheck = (\r\n  character: ProcessedCharacterT,\r\n  check: CheckT,\r\n): CheckResultT => {\r\n  const statValue = getCharacterStat(character, check)\r\n  const roll = new DiceRoll('1d100')\r\n  return {\r\n    input: check,\r\n    result: roll.total <= statValue,\r\n    total: roll.total,\r\n    averageTotal: roll.averageTotal,\r\n    maxTotal: roll.maxTotal,\r\n    minTotal: roll.minTotal,\r\n    output: roll.output,\r\n  }\r\n}\r\n\r\nexport const getChecksProbability = (\r\n  character: ProcessedCharacterT,\r\n  checks: CheckT[],\r\n): number => {\r\n  const statValues = checks.map((check) => getCharacterStat(character, check))\r\n  const result = statValues.reduce((p, c) => {\r\n    return p * (c / 100)\r\n  }, 1)\r\n  return result\r\n}\r\n\r\nexport const getPassedCount = (results: CheckResultT[]): number =>\r\n  results.filter((r) => r.result).length\r\n\r\nexport const didAllPass = (results: CheckResultT[]): boolean =>\r\n  results.every((r) => r.result)\r\n","import { SkillT } from '../../../types'\r\nimport { makeEntity } from '../../../functions/Entity'\r\nimport { makeCheck } from '../../../functions/makeCheck'\r\n\r\nexport const STING: SkillT = {\r\n  ...makeEntity('Sting'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n\r\nexport const INFECTIOUS_STING: SkillT = {\r\n  ...makeEntity('Infectious Sting'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [\r\n    makeCheck('perception', -10),\r\n    makeCheck('perception', -10),\r\n    makeCheck('perception', -10),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [\r\n    {\r\n      type: 'poisoned',\r\n      duration: 10,\r\n    },\r\n  ],\r\n}\r\n","import { CharacterT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { STING, INFECTIOUS_STING } from '../skills/enemy/sting'\r\n\r\nexport const BEE = (): CharacterT => {\r\n  return {\r\n    ...makeEntity('Bee'),\r\n    isCharacter: true,\r\n    partyId: '',\r\n    level: 1,\r\n    class: 'enemy',\r\n    stats: {\r\n      vigor: -80,\r\n      strength: 30,\r\n      intelligence: 30,\r\n      perception: 52,\r\n      talent: 30,\r\n      agility: 80,\r\n      luck: 0,\r\n      armor: 0,\r\n      resistance: 0,\r\n      evasion: 17,\r\n      health: -4,\r\n      healthOffset: 0,\r\n      healthRegen: 0,\r\n      criticalChance: 5,\r\n      damageModifier: 0,\r\n      damageOffset: 0,\r\n      damageReflection: 0,\r\n      weaknessModifier: 0,\r\n      goldModifier: 0,\r\n      consumableHealthGainOffset: 0,\r\n    },\r\n    traits: [],\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      ...makeEntity('Bee Stinger'),\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'bee-stinger',\r\n      twoHand: true,\r\n      attackType: 'melee',\r\n      damage: {\r\n        damage: 12,\r\n        type: 'physical',\r\n      },\r\n      traits: [],\r\n      skills: [STING, INFECTIOUS_STING],\r\n    },\r\n  }\r\n}\r\n","import { SkillT } from '../../../types'\r\nimport { makeEntity } from '../../../functions/Entity'\r\nimport { makeCheck } from '../../../functions/makeCheck'\r\n\r\nexport const STAB: SkillT = {\r\n  ...makeEntity('Stab'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { CharacterT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { STAB } from '../skills/enemy/stab'\r\n\r\nexport const BANDIT = (): CharacterT => {\r\n  return {\r\n    ...makeEntity('Bandit'),\r\n    isCharacter: true,\r\n    partyId: '',\r\n    level: 2,\r\n    class: 'enemy',\r\n    stats: {\r\n      strength: 76,\r\n      vigor: 50,\r\n      intelligence: 40,\r\n      perception: 52,\r\n      talent: 72,\r\n      agility: 61,\r\n      luck: 50,\r\n      armor: 4,\r\n      resistance: 0,\r\n      evasion: 10,\r\n      healthOffset: 0,\r\n      health: -20,\r\n      healthRegen: 0,\r\n      criticalChance: 5,\r\n      damageModifier: 0,\r\n      damageOffset: 0,\r\n      damageReflection: 0,\r\n      weaknessModifier: 0,\r\n      goldModifier: 0,\r\n      consumableHealthGainOffset: 15,\r\n    },\r\n    traits: [],\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      ...makeEntity('Buccaneer Dagger'),\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'dagger',\r\n      twoHand: false,\r\n      attackType: 'melee',\r\n      damage: {\r\n        damage: 12,\r\n        type: 'physical',\r\n      },\r\n      traits: [],\r\n      skills: [STAB],\r\n    },\r\n  }\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { TIMBERWOLF } from './enemies/timberwolf'\r\nimport { VALE_IMP } from './enemies/vale_imp'\r\nimport { BEASTMAN } from './enemies/beastman'\r\nimport { BEE } from './enemies/bee'\r\nimport { BUCCANEER } from './enemies/buccaneer'\r\nimport { BANDIT } from './enemies/bandit'\r\n\r\nexport const PLAYER_PARTY_ID = v4()\r\n\r\nexport const ALL_ENEMY_PARTY_COMBOS = [\r\n  [TIMBERWOLF(), TIMBERWOLF(), TIMBERWOLF()],\r\n  [VALE_IMP(), TIMBERWOLF(), BEASTMAN()],\r\n  [BEASTMAN(), BEASTMAN(), BEE()],\r\n  [BEE(), BEE(), BEE()],\r\n  [BUCCANEER()],\r\n  [BANDIT(), BANDIT()],\r\n]\r\n","import { CharacterT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { STAB } from '../skills/enemy/stab'\r\n\r\nexport const BUCCANEER = (): CharacterT => {\r\n  return {\r\n    ...makeEntity('Buccaneer'),\r\n    isCharacter: true,\r\n    partyId: '',\r\n    level: 4,\r\n    class: 'enemy',\r\n    stats: {\r\n      strength: 52,\r\n      vigor: 66,\r\n      intelligence: 46,\r\n      perception: 78,\r\n      talent: 64,\r\n      agility: 78,\r\n      luck: 50,\r\n      armor: 1,\r\n      resistance: 0,\r\n      evasion: 20,\r\n      healthOffset: 0,\r\n      health: -31,\r\n      healthRegen: 0,\r\n      criticalChance: 5,\r\n      damageModifier: 0,\r\n      damageOffset: 0,\r\n      damageReflection: 0,\r\n      weaknessModifier: 0,\r\n      goldModifier: 0,\r\n      consumableHealthGainOffset: 15,\r\n    },\r\n    traits: [],\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      ...makeEntity('Buccaneer Dagger'),\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'dagger',\r\n      twoHand: false,\r\n      attackType: 'melee',\r\n      damage: {\r\n        damage: 12,\r\n        type: 'physical',\r\n      },\r\n      traits: [],\r\n      skills: [STAB],\r\n    },\r\n  }\r\n}\r\n","import { CharacterT, PartyT, ProcessedPartyT, EntityT } from '../types'\r\nimport {\r\n  checkForProcessedCharacter,\r\n  processCharacter,\r\n  makeEnemy,\r\n} from './Character'\r\nimport { makeEntity } from './Entity'\r\nimport { TIMBERWOLF } from '../objects/enemies/timberwolf'\r\nimport { VALE_IMP } from '../objects/enemies/vale_imp'\r\nimport { BEASTMAN } from '../objects/enemies/beastman'\r\nimport { getRandom } from '../util'\r\nimport { ALL_ENEMY_PARTY_COMBOS } from '../objects/Party'\r\n\r\nexport const isParty = (e: EntityT) => e && (e as PartyT).isParty\r\n\r\nexport const checkForProcessedParty = (party: PartyT) => {\r\n  if ((party as ProcessedPartyT).processed) {\r\n    throw new Error('No Processed Parties Allowed')\r\n  }\r\n  party.characters.forEach((character) => {\r\n    checkForProcessedCharacter(character)\r\n  })\r\n}\r\n\r\nexport const makeParty = (characterCount: number = 0): PartyT => {\r\n  return {\r\n    ...makeEntity(),\r\n    isParty: true,\r\n    items: [],\r\n    characters: getRandom(ALL_ENEMY_PARTY_COMBOS),\r\n  }\r\n}\r\n\r\nexport const findCharacterInParty = <\r\n  T extends PartyT = PartyT,\r\n  R extends CharacterT = CharacterT\r\n>(\r\n  party: T,\r\n  id: string,\r\n): R | undefined => {\r\n  return (party.characters as R[]).find((c) => c.id === id)\r\n}\r\n\r\nexport const updateCharacter = (\r\n  party: PartyT,\r\n  characterId: string,\r\n  updater: (character: CharacterT) => CharacterT,\r\n): PartyT => {\r\n  checkForProcessedParty(party)\r\n  return {\r\n    ...party,\r\n    characters: party.characters.map((c) =>\r\n      c.id === characterId ? updater(c) : c,\r\n    ),\r\n  }\r\n}\r\n\r\nexport const processParty = (party: PartyT): ProcessedPartyT => {\r\n  return {\r\n    ...party,\r\n    processed: true,\r\n    characters: party.characters.map((c) => ({\r\n      ...processCharacter(c),\r\n      partyId: party.id,\r\n    })),\r\n  }\r\n}\r\n","import { StatusTypeT } from '../types'\r\n\r\nexport type PerfectKeyT = StatusTypeT | 'splash' | 'pierce' | 'heal'\r\nexport const PERFECT_DISPLAY_INFO: Record<PerfectKeyT, string> = {\r\n  splash: 'Splash Damage',\r\n  pierce: 'Ignore Resistances',\r\n  bleeding: 'Bleed',\r\n  burning: 'Burn',\r\n  frozen: 'Freeze',\r\n  poisoned: 'Poison',\r\n  targeted: 'Taunt Enemies',\r\n  dazed: 'Daze',\r\n  evasive: 'Become Evasive',\r\n  heal: 'Heal',\r\n  protected: 'Protect',\r\n  ['speed-down']: 'Speed Down',\r\n}\r\n","import { DamageT } from '../types'\r\n\r\nexport const getSplashDamage = (rawDamage: DamageT) => {\r\n  return {\r\n    type: rawDamage.type,\r\n    damage: Math.floor(rawDamage.damage / 2),\r\n  }\r\n}\r\n","import {\r\n  ProcessedCharacterT,\r\n  SourceSkillResultT,\r\n  HasSkillsT,\r\n  SkillT,\r\n  DamageT,\r\n  TargetSkillResultT,\r\n  SkillTargetT,\r\n  ProcessedPartyT,\r\n  TargetTypeT,\r\n} from '../types'\r\nimport { resolveCheck, getPassedCount, didAllPass } from './Roll'\r\nimport { getDamageResistance, isCharacter, hasStatus } from './Character'\r\nimport { isParty } from './Party'\r\nimport { noneg } from '../util'\r\nimport { PerfectKeyT, PERFECT_DISPLAY_INFO } from '../objects/Skills'\r\nimport { getSplashDamage } from './Damage'\r\nimport { PLAYER_PARTY_ID } from '../objects/Party'\r\n\r\nexport const getSkillsFromObjects = (parents: HasSkillsT[]) => {\r\n  return parents.reduce((p, c) => {\r\n    return [...p, ...c.skills]\r\n  }, [] as SkillT[])\r\n}\r\n\r\nexport const resolveSkillTarget = (\r\n  target: SkillTargetT,\r\n): ProcessedCharacterT[] => {\r\n  switch (target.type) {\r\n    case 'single':\r\n      return target.character ? [target.character] : []\r\n    case 'ally':\r\n      return target.character ? [target.character] : []\r\n    case 'self':\r\n      return target.character ? [target.character] : []\r\n    case 'party':\r\n      return target.party?.characters || []\r\n    case 'group':\r\n      return target.party?.characters || []\r\n    default:\r\n      return []\r\n  }\r\n}\r\n\r\nexport const makeSkillTarget = (\r\n  type: TargetTypeT,\r\n  target: ProcessedCharacterT | ProcessedPartyT,\r\n): SkillTargetT => {\r\n  return {\r\n    type,\r\n    character: isCharacter(target)\r\n      ? (target as ProcessedCharacterT)\r\n      : undefined,\r\n    party: isParty(target) ? (target as ProcessedPartyT) : undefined,\r\n  }\r\n}\r\n\r\nexport const getSourceSkillResult = (\r\n  source: ProcessedCharacterT,\r\n  skill: SkillT,\r\n  consumableIndex: number | undefined,\r\n): SourceSkillResultT => {\r\n  const rollResults = skill.rolls.map((check) => resolveCheck(source, check))\r\n  const passedCount = getPassedCount(rollResults)\r\n  const perfect = didAllPass(rollResults)\r\n  const criticalHitResult = resolveCheck(source, {\r\n    offset: source.stats.criticalChance,\r\n  })\r\n  const criticalSuccess = skill.damage\r\n    ? perfect\r\n      ? criticalHitResult.result\r\n      : false\r\n    : false\r\n  const accuracySuccess =\r\n    skill.healing || (skill.damage ? passedCount >= 1 : perfect)\r\n\r\n  const rawDamage: DamageT = {\r\n    damage: skill.damage\r\n      ? Math.round(\r\n          (passedCount * getSkillDamage(skill, source).damage) /\r\n            rollResults.length,\r\n        )\r\n      : 0,\r\n    type: source.weapon.damage.type,\r\n  }\r\n  const splashDamage: DamageT =\r\n    skill.perfectSplash && perfect\r\n      ? getSplashDamage(rawDamage)\r\n      : { type: rawDamage.type, damage: 0 }\r\n\r\n  return {\r\n    rollResults,\r\n    skill,\r\n    source,\r\n    accuracySuccess,\r\n    criticalSuccess,\r\n    passedCount,\r\n    perfect,\r\n    rawDamage,\r\n    pierce: (perfect && skill.perfectPierce) || criticalHitResult.result,\r\n    splashDamage,\r\n    addedStatus: perfect ? skill.perfectStatus : [],\r\n    healing:\r\n      perfect && skill.healing ? source.stats.consumableHealthGainOffset : 0,\r\n    consumableIndex,\r\n  }\r\n}\r\n\r\nexport const getTargetSkillResult = (\r\n  target: ProcessedCharacterT,\r\n  sourceResult: SourceSkillResultT,\r\n): TargetSkillResultT => {\r\n  console.log(sourceResult)\r\n  if (sourceResult.accuracySuccess) {\r\n    const dodgeResult = resolveCheck(target, { key: 'evasion' })\r\n    const damageResistances = sourceResult.pierce\r\n      ? 0\r\n      : getDamageResistance(target, sourceResult.rawDamage.type)\r\n    const isEvasive = hasStatus(target, 'evasive')\r\n    const dodgeSuccess =\r\n      sourceResult.criticalSuccess ||\r\n      (sourceResult.perfect && sourceResult.source.partyId === PLAYER_PARTY_ID)\r\n        ? false\r\n        : dodgeResult.result || (isEvasive && !sourceResult.perfect)\r\n    const totalDamage = {\r\n      type: sourceResult.rawDamage.type,\r\n      damage: dodgeSuccess\r\n        ? 0\r\n        : noneg(Math.round(sourceResult.rawDamage.damage - damageResistances)),\r\n    }\r\n    const reflectedDamage = {\r\n      damage: sourceResult.source.stats.damageReflection,\r\n      type: sourceResult.rawDamage.type,\r\n    }\r\n    const healthRegenMaximum =\r\n      sourceResult.source.stats.healthOffset + reflectedDamage.damage\r\n    const regeneratedHealth =\r\n      healthRegenMaximum > sourceResult.source.stats.healthRegen\r\n        ? sourceResult.source.stats.healthRegen\r\n        : healthRegenMaximum\r\n\r\n    return {\r\n      ...sourceResult,\r\n      target,\r\n      dodgeSuccess,\r\n      blockedDamage: {\r\n        type: sourceResult.rawDamage.type,\r\n        damage: sourceResult.pierce ? 0 : damageResistances,\r\n      },\r\n      reflectedDamage,\r\n      totalDamage,\r\n      regeneratedHealth,\r\n      willDie: target.health <= target.stats.healthOffset + totalDamage.damage,\r\n    }\r\n  } else {\r\n    return {\r\n      ...sourceResult,\r\n      target,\r\n      dodgeSuccess: false,\r\n      reflectedDamage: sourceResult.rawDamage,\r\n      blockedDamage: sourceResult.rawDamage,\r\n      totalDamage: sourceResult.rawDamage,\r\n      regeneratedHealth: noneg(\r\n        sourceResult.source.stats.healthOffset -\r\n          (sourceResult.source.stats.healthOffset +\r\n            sourceResult.source.stats.healthRegen),\r\n      ),\r\n      willDie: false,\r\n    }\r\n  }\r\n}\r\n\r\nexport const getPerfectKeys = (skill: SkillT): PerfectKeyT[] => {\r\n  let base: PerfectKeyT[] = [...skill.perfectStatus.map((t) => t.type)]\r\n  if (skill.perfectSplash) base = [...base, 'splash']\r\n  if (skill.perfectPierce) base = [...base, 'pierce']\r\n  if (skill.healing) base = [...base, 'heal']\r\n  return base\r\n}\r\n\r\nexport const getPerfectText = (\r\n  skill: SkillT,\r\n  character: ProcessedCharacterT,\r\n): string => {\r\n  const perfectKeys = getPerfectKeys(skill)\r\n  const rawDamage = getSkillDamage(skill, character)\r\n  const splashDamage = getSplashDamage(rawDamage)\r\n\r\n  return perfectKeys.reduce((res, key, i) => {\r\n    let pre = `${res}${i > 0 ? ',' : ''}`\r\n    const text = PERFECT_DISPLAY_INFO[key]\r\n    switch (key) {\r\n      case 'splash':\r\n        return `${pre} ${Math.floor(\r\n          (splashDamage.damage / rawDamage.damage) * 100,\r\n        )}% ${text}`\r\n      case 'heal':\r\n        return `${pre} ${text} ${character.stats.consumableHealthGainOffset} HP`\r\n      default:\r\n        return `${pre} ${text}`\r\n    }\r\n  }, '')\r\n}\r\n\r\nexport const getSkillDamage = (\r\n  skill: SkillT,\r\n  source: ProcessedCharacterT,\r\n  target?: ProcessedCharacterT,\r\n): DamageT => {\r\n  const rawDamage: DamageT = {\r\n    type: source.weapon.damage.type,\r\n    damage:\r\n      (source.weapon.damage.damage + source.stats.damageOffset) *\r\n      (1 + skill.damageModifier + source.stats.damageModifier / 100),\r\n  }\r\n  const damageResistances = target\r\n    ? getDamageResistance(target, rawDamage.type)\r\n    : 0\r\n  return {\r\n    type: rawDamage.type,\r\n    damage: noneg(Math.round(rawDamage.damage - damageResistances)),\r\n  }\r\n}\r\n\r\nexport const getSkillDamageRange = (\r\n  skill: SkillT,\r\n  source: ProcessedCharacterT,\r\n  targets?: ProcessedCharacterT[],\r\n) => {\r\n  let min: number | undefined = undefined\r\n  let max: number | undefined = undefined\r\n  if (!targets) return `${getSkillDamage(skill, source).damage}`\r\n  targets.forEach((target) => {\r\n    const damage = getSkillDamage(skill, source, target).damage\r\n    if (max === undefined || damage > max) max = damage\r\n    if (min === undefined || damage < min) min = damage\r\n  })\r\n  if (min === max) return `${max || 0}`\r\n  return `${min}-${max}`\r\n}\r\n\r\nexport const getSkillResults = (\r\n  skill: SkillT,\r\n  source: ProcessedCharacterT,\r\n  targets: ProcessedCharacterT[],\r\n  consumableIndex?: number,\r\n): TargetSkillResultT[] => {\r\n  const sourceResult = getSourceSkillResult(source, skill, consumableIndex)\r\n  return targets.map((target) => getTargetSkillResult(target, sourceResult))\r\n}\r\n\r\nexport const getSkillTargetOptions = (\r\n  source: ProcessedCharacterT,\r\n  sourceParty: ProcessedPartyT,\r\n  targetParty: ProcessedPartyT,\r\n  skill: SkillT,\r\n): ProcessedCharacterT[] | ProcessedPartyT[] => {\r\n  switch (skill.targetType) {\r\n    case 'single':\r\n      return targetParty.characters.filter((c) => !c.dead)\r\n    case 'ally':\r\n      return sourceParty.characters.filter((c) => !c.dead)\r\n    case 'group':\r\n      return [targetParty]\r\n    case 'party':\r\n      return [sourceParty]\r\n    case 'self':\r\n      return [source]\r\n    default:\r\n      return []\r\n  }\r\n}\r\n","import { PartyT, TargetSkillResultT, CharacterT } from '../types'\r\nimport { updateCharacter } from './Party'\r\nimport {\r\n  addStatusAndTags,\r\n  getDamageResistance,\r\n  processCharacter,\r\n  decrementStatusDurations,\r\n  commitDamage,\r\n} from './Character'\r\nimport { PLAYER_PARTY_ID } from '../objects/Party'\r\nimport { noneg } from '../util'\r\n\r\nconst localUpdater = (\r\n  p: PartyT,\r\n  id: string,\r\n  updater: (c: CharacterT) => CharacterT,\r\n) => {\r\n  return updateCharacter(p, id, updater)\r\n}\r\n\r\ninterface CommitSkillResultsT {\r\n  party: PartyT\r\n  enemyParty: PartyT\r\n}\r\nexport const commitSkillResults = (party: PartyT, enemyParty: PartyT) => (\r\n  results: TargetSkillResultT[],\r\n  commitRoundActions: boolean = true,\r\n): CommitSkillResultsT => {\r\n  results.forEach((result, index) => {\r\n    const { source, target } = result\r\n    let sourceParty = [party, enemyParty].find(\r\n      (p) => p.id === source.partyId,\r\n    ) as PartyT\r\n    let targetParty = [party, enemyParty].find(\r\n      (p) => p.id === target.partyId,\r\n    ) as PartyT\r\n    const localUpdate = (\r\n      p: PartyT,\r\n      id: string,\r\n      updater: (c: CharacterT) => CharacterT,\r\n    ) => {\r\n      if (p.id === sourceParty.id) {\r\n        sourceParty = localUpdater(p, id, updater)\r\n        return\r\n      }\r\n      if (p.id === targetParty.id) {\r\n        targetParty = localUpdater(p, id, updater)\r\n        return\r\n      }\r\n    }\r\n\r\n    localUpdate(targetParty, target.id, (c) => {\r\n      return addStatusAndTags(\r\n        commitDamage(c, result.totalDamage.damage - result.healing),\r\n        result.addedStatus.map((s) => s.type),\r\n      )\r\n    })\r\n\r\n    if (result.splashDamage.damage > 0) {\r\n      targetParty.characters\r\n        .filter((c) => c.id !== result.target.id)\r\n        .forEach((character) => {\r\n          localUpdate(targetParty, character.id, (c) => {\r\n            const splashDamageResistance = getDamageResistance(\r\n              processCharacter(character),\r\n              result.splashDamage.type,\r\n            )\r\n            return commitDamage(\r\n              c,\r\n              result.splashDamage.damage - splashDamageResistance,\r\n            )\r\n          })\r\n        })\r\n    }\r\n\r\n    if (\r\n      result.skill.targetType === 'self' &&\r\n      result.consumableIndex !== undefined\r\n    ) {\r\n      localUpdate(sourceParty, source.id, (c) => {\r\n        return {\r\n          ...c,\r\n          consumables: c.consumables.filter(\r\n            (c, i) => i !== result.consumableIndex,\r\n          ),\r\n        }\r\n      })\r\n    }\r\n\r\n    if (result.reflectedDamage.damage > 0 && !result.willDie) {\r\n      localUpdate(sourceParty, source.id, (c) => {\r\n        // TODO: consider adding in reflected resistance here\r\n        return commitDamage(c, result.reflectedDamage.damage)\r\n      })\r\n    }\r\n\r\n    if (index === results.length - 1 && commitRoundActions) {\r\n      if (result.regeneratedHealth > 0) {\r\n        localUpdate(sourceParty, source.id, (c) => {\r\n          return {\r\n            ...c,\r\n            stats: {\r\n              ...c.stats,\r\n              healthOffset: noneg(\r\n                c.stats.healthOffset - result.regeneratedHealth,\r\n              ),\r\n            },\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    if (sourceParty.id === PLAYER_PARTY_ID) {\r\n      party = sourceParty\r\n    } else {\r\n      enemyParty = sourceParty\r\n    }\r\n    if (targetParty.id === PLAYER_PARTY_ID) {\r\n      if (sourceParty.id !== PLAYER_PARTY_ID) {\r\n        party = targetParty\r\n      }\r\n    } else {\r\n      enemyParty = targetParty\r\n    }\r\n  })\r\n  return {\r\n    party: {\r\n      ...party,\r\n      characters: party.characters.map((c) => decrementStatusDurations(c)),\r\n    },\r\n    enemyParty: {\r\n      ...enemyParty,\r\n      characters: enemyParty.characters.map((c) => decrementStatusDurations(c)),\r\n    },\r\n  }\r\n}\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const ADVENTURE_BOOTS: ArmorT = {\r\n  ...makeEntity(`Adventure Boots`),\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 3,\r\n        evasion: 4,\r\n        agility: 3,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n}\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const ADVENTURE_CLOAK: ArmorT = {\r\n  ...makeEntity(`Adventure Cloak`),\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'magic-armor',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 5,\r\n        resistance: 5,\r\n        perception: 4,\r\n        talent: -3,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n}\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const EXPLORERS_BOOTS: ArmorT = {\r\n  ...makeEntity(`Explorer's Boots`),\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 2,\r\n        evasion: 3,\r\n        agility: 2,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n}\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const EXPLORERS_CLOAK: ArmorT = {\r\n  ...makeEntity(`Explorer's Cloak`),\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'magic-armor',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 3,\r\n        resistance: 6,\r\n        evasion: 6,\r\n        perception: 3,\r\n        talent: -3,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n}\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const EXPLORERS_HAT: ArmorT = {\r\n  ...makeEntity(`Explorer's Hat`),\r\n  itemType: 'armor',\r\n  resource: 'head',\r\n  rarity: 'common',\r\n  type: 'hat',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        resistance: 3,\r\n        evasion: 3,\r\n        perception: 2,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n}\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const FUR_ARMOR: ArmorT = {\r\n  ...makeEntity(`Fur Armor`),\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'cloth-armor',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 5,\r\n        resistance: 5,\r\n        health: 5,\r\n        healthRegen: 2,\r\n        vigor: 4,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n}\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const FUR_BOOTS: ArmorT = {\r\n  ...makeEntity(`Fur Boots`),\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 2,\r\n        resistance: 2,\r\n        healthRegen: 1,\r\n        vigor: 4,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n}\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const PERFORMERS_BOOTS: ArmorT = {\r\n  ...makeEntity(`Performer's Boots`),\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 2,\r\n        resistance: 3,\r\n        perception: -3,\r\n        talent: 3,\r\n        luck: 3,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n}\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const PERFORMERS_VEST: ArmorT = {\r\n  ...makeEntity(`Performer's Vest`),\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'cloth-armor',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 6,\r\n        resistance: 6,\r\n        perception: -4,\r\n        talent: 4,\r\n        luck: 4,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n}\r\n","import { ArmorT } from '../../types'\r\nimport { ADVENTURE_BOOTS } from './adventure_boots'\r\nimport { ADVENTURE_CLOAK } from './adventure_cloak'\r\nimport { EXPLORERS_BOOTS } from './explorers_boots'\r\nimport { EXPLORERS_CLOAK } from './explorers_cloak'\r\nimport { EXPLORERS_HAT } from './explorers_hat'\r\nimport { FUR_ARMOR } from './fur_armor'\r\nimport { FUR_BOOTS } from './fur_boots'\r\nimport { PERFORMERS_BOOTS } from './performers_boots'\r\nimport { PERFORMERS_VEST } from './performers_vest'\r\nimport { SIMPLE_IRON_SHIELD } from './simple_iron_shield'\r\n\r\nexport const ALL_ARMOR: ArmorT[] = [\r\n  ADVENTURE_BOOTS,\r\n  ADVENTURE_CLOAK,\r\n\r\n  EXPLORERS_BOOTS,\r\n  EXPLORERS_CLOAK,\r\n  EXPLORERS_HAT,\r\n\r\n  FUR_ARMOR,\r\n  FUR_BOOTS,\r\n\r\n  PERFORMERS_BOOTS,\r\n  PERFORMERS_VEST,\r\n\r\n  SIMPLE_IRON_SHIELD,\r\n]\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const PROTECT: SkillT = {\r\n  ...makeEntity('Protect'),\r\n  damageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  healing: false,\r\n  isBasicAttack: false,\r\n  rolls: [makeCheck('intelligence'), makeCheck('intelligence')],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [\r\n    {\r\n      type: 'protected',\r\n      duration: -1,\r\n    },\r\n  ],\r\n}\r\n","import { WeaponT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { SURGE } from '../skills/surge'\r\nimport { AREA_BLAST } from '../skills/area_blast'\r\nimport { PROTECT } from '../skills/protect'\r\n\r\nexport const DUSTY_BOOK: WeaponT = {\r\n  ...makeEntity(`Dusty Book`),\r\n  itemType: 'weapon',\r\n  type: 'tome',\r\n  rarity: 'common',\r\n  twoHand: true,\r\n  attackType: 'ranged',\r\n  damage: { type: 'magic', damage: 9 },\r\n  traits: [],\r\n  skills: [SURGE, AREA_BLAST, PROTECT],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const RITARDANDO: SkillT = {\r\n  ...makeEntity('Ritardando'),\r\n  damageModifier: -0.5,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [\r\n    makeCheck('talent'),\r\n    makeCheck('talent'),\r\n    makeCheck('talent'),\r\n    makeCheck('talent'),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [\r\n    {\r\n      type: 'speed-down',\r\n      duration: -1,\r\n    },\r\n  ],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const SYMPHONY: SkillT = {\r\n  ...makeEntity('Ritardando'),\r\n  damageModifier: -0.4,\r\n  targetType: 'group',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: false,\r\n  rolls: [\r\n    makeCheck('talent', -4),\r\n    makeCheck('talent', -4),\r\n    makeCheck('talent', -4),\r\n    makeCheck('talent', -4),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { WeaponT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\nimport { RITARDANDO } from '../skills/ritardando'\r\nimport { SYMPHONY } from '../skills/symphony'\r\nimport { DAZZLE } from '../skills/dazzle'\r\n\r\nexport const BARBAT: WeaponT = {\r\n  ...makeEntity(`Barbat`),\r\n  itemType: 'weapon',\r\n  type: 'lute',\r\n  rarity: 'common',\r\n  twoHand: true,\r\n  attackType: 'ranged',\r\n  damage: { type: 'magic', damage: 9 },\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        goldModifier: 10,\r\n      },\r\n    },\r\n  ],\r\n  skills: [RITARDANDO, SYMPHONY, DAZZLE],\r\n}\r\n","import { WeaponT } from '../../types'\r\nimport { BLACKSMITHS_HAMMER } from './blacksmiths_hammer'\r\nimport { HUNTING_BOW } from './hunting_bow'\r\nimport { SCHOLARS_BOOK } from './scholars_book'\r\nimport { SIMPLE_LUTE } from './simple_lute'\r\nimport { DUSTY_BOOK } from './dusty_book'\r\nimport { BARBAT } from './barbat'\r\n\r\nexport const ALL_WEAPONS: WeaponT[] = [DUSTY_BOOK, BARBAT]\r\n","import { useSelector } from 'react-redux'\r\nimport { StateCoreT, StateActionT, StateT } from '../types'\r\nimport { PartyT, CharacterT } from '../../types'\r\nimport { Dispatch } from 'redux'\r\nimport { makeReducer } from '../util'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport {\r\n  updateCharacter,\r\n  makeCharacter,\r\n  checkForProcessedParty,\r\n} from '../../functions'\r\nimport { PLAYER_PARTY_ID } from '../../objects/Party'\r\nimport { ALL_ARMOR } from '../../objects/armor/index'\r\nimport { ALL_WEAPONS } from '../../objects/weapons/index'\r\n\r\nexport const UPDATE_PARTY = '@actions/parties/set-party'\r\nexport const UPSERT_CHARACTER = '@actions/parties/upsert-character'\r\nexport const DELETE_CHARACTER = '@actions/parties/delete-character'\r\nexport const UPSERT_ITEM = '@actions/parties/upsert-item'\r\nexport const DELETE_ITEM = '@actions/parties/delete-item'\r\nexport const UPSERT_MOD = '@actions/parties/upsert-mod'\r\nexport const DELETE_MOD = '@actions/parties/delete-mod'\r\n\r\nexport const actionCreators = {\r\n  updateParty: (party: PartyT): StateActionT => {\r\n    return {\r\n      type: UPDATE_PARTY,\r\n      payload: {\r\n        party,\r\n      },\r\n    }\r\n  },\r\n  upsertCharacter: (character: CharacterT): StateActionT => {\r\n    return {\r\n      type: UPSERT_CHARACTER,\r\n      payload: {\r\n        character,\r\n      },\r\n    }\r\n  },\r\n  deleteCharacter: (characterId: string): StateActionT => {\r\n    return {\r\n      type: DELETE_CHARACTER,\r\n      payload: {\r\n        characterId,\r\n      },\r\n    }\r\n  },\r\n}\r\n\r\nexport const actions = {\r\n  updateParty: (party: PartyT) => (dispatch: Dispatch) => {\r\n    checkForProcessedParty(party)\r\n    dispatch(actionCreators.updateParty(party))\r\n  },\r\n  upsertCharacter: (character: CharacterT) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.upsertCharacter(character))\r\n  },\r\n  deleteCharacter: (characterId: string) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.deleteCharacter(characterId))\r\n  },\r\n}\r\n\r\nexport const core: StateCoreT<PartyT> = {\r\n  [UPDATE_PARTY]: (state, action) => {\r\n    return {\r\n      ...action.payload.party,\r\n    }\r\n  },\r\n  [UPSERT_CHARACTER]: (state, action) => {\r\n    return updateCharacter(\r\n      state,\r\n      action.payload.character.id,\r\n      (c) => action.payload.character,\r\n    )\r\n  },\r\n  [DELETE_CHARACTER]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      characters: state.characters.filter(\r\n        (c) => c.id !== action.payload.characterId,\r\n      ),\r\n    }\r\n  },\r\n}\r\nconst jack = { ...makeCharacter('blacksmith'), name: 'Jack' }\r\nexport const INITIAL_STATE: PartyT = {\r\n  isParty: true,\r\n  id: PLAYER_PARTY_ID,\r\n  name: 'PlayerParty',\r\n  items: [...ALL_ARMOR, ...ALL_WEAPONS],\r\n  characters: [\r\n    {\r\n      ...jack,\r\n      stats: {\r\n        ...jack.stats,\r\n        consumableHealthGainOffset: 15,\r\n      },\r\n    },\r\n    { ...makeCharacter('bard'), name: 'Jim' },\r\n    { ...makeCharacter('scholar'), name: 'Johnny' },\r\n  ],\r\n}\r\nexport default makeReducer(core, INITIAL_STATE)\r\nexport const useParty = () => useSelector((state: StateT) => state.party)\r\nexport const usePartyActions = () =>\r\n  useActions(actions) as {\r\n    updateParty: (party: PartyT) => void\r\n    upsertCharacter: (character: CharacterT) => void\r\n    deleteCharacter: (characterId: string) => void\r\n  }\r\n","import { StateCoreT, StateReducerT } from './types'\r\n\r\nexport const makeReducer = (\r\n  core: StateCoreT,\r\n  initialState: any,\r\n): StateReducerT => {\r\n  return (state = initialState, action) => {\r\n    const coreFn = core[action.type]\r\n    if (coreFn) return coreFn(state, action)\r\n    return state\r\n  }\r\n}\r\n","import { useMemo } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nexport const useActions = (actions: any) => {\r\n  const dispatch = useDispatch()\r\n  return useMemo(() => bindActionCreators(actions, dispatch), [\r\n    dispatch,\r\n    actions,\r\n  ])\r\n}\r\n","import React, { useMemo, useContext, useState } from 'react'\r\nimport {\r\n  PartyT,\r\n  ProcessedPartyT,\r\n  CharacterT,\r\n  ProcessedCharacterT,\r\n  WeaponT,\r\n  ArmorT,\r\n} from '../../types'\r\nimport { usePartyActions, useParty } from '../../state/party'\r\nimport {\r\n  findCharacterInParty,\r\n  processParty,\r\n  makeParty,\r\n  processCharacter,\r\n  makeCharacter,\r\n  equipArmor,\r\n  equipWeapon,\r\n} from '../../functions'\r\n\r\nexport interface PartyContextT {\r\n  party: ProcessedPartyT\r\n  rawParty: PartyT\r\n  activeCharacter: ProcessedCharacterT\r\n  updateParty: (party: PartyT) => void\r\n  upsertCharacter: (character: CharacterT) => void\r\n  deleteCharacter: (characterId: string) => void\r\n  findCharacter: (characterId: string) => ProcessedCharacterT | undefined\r\n  findRawCharacter: (characterId: string) => CharacterT | undefined\r\n  setActiveCharacter: (character: ProcessedCharacterT) => void\r\n  equipItem: (characterId: string, item: WeaponT | ArmorT) => void\r\n}\r\nconst defaultContextValue: PartyContextT = {\r\n  rawParty: makeParty(),\r\n  party: processParty(makeParty()),\r\n  activeCharacter: processCharacter(makeCharacter('blacksmith')),\r\n  updateParty: (party) => {},\r\n  upsertCharacter: (character) => {},\r\n  deleteCharacter: (characterId) => {},\r\n  findCharacter: (characterId) => undefined,\r\n  findRawCharacter: (characterId) => undefined,\r\n  setActiveCharacter: (character) => {},\r\n  equipItem: (characterId, item) => {},\r\n}\r\nexport const PartyContext = React.createContext<PartyContextT>(\r\n  defaultContextValue,\r\n)\r\n\r\nexport interface PartyContextProviderPropsT {\r\n  children: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const PartyContextProvider = (props: PartyContextProviderPropsT) => {\r\n  const { children } = props\r\n  const actions = usePartyActions()\r\n  const rawParty = useParty()\r\n  const party = useMemo(() => processParty(rawParty), [rawParty])\r\n  const [activeCharacterId, setActiveCharacterId] = useState<string>(\r\n    party.characters[0].id,\r\n  )\r\n  const activeCharacter = useMemo(() => {\r\n    return party.characters.find(\r\n      (c) => c.id === activeCharacterId,\r\n    ) as ProcessedCharacterT\r\n  }, [activeCharacterId, party.characters])\r\n  const setActiveCharacter = (character: ProcessedCharacterT) =>\r\n    setActiveCharacterId(character.id)\r\n  const updateParty = (party: PartyT) => {\r\n    actions.updateParty(party)\r\n  }\r\n  const upsertCharacter = (character: CharacterT) => {\r\n    if (!character) return\r\n    if ((character as ProcessedCharacterT).processed) {\r\n      throw new Error('No processed Characters Allowed')\r\n    }\r\n    actions.upsertCharacter(character)\r\n  }\r\n  const deleteCharacter = (characterId: string) => {\r\n    actions.deleteCharacter(characterId)\r\n  }\r\n  const findCharacter = (characterId: string) => {\r\n    return findCharacterInParty<ProcessedPartyT, ProcessedCharacterT>(\r\n      party,\r\n      characterId,\r\n    )\r\n  }\r\n  const findRawCharacter = (characterId: string) => {\r\n    return findCharacterInParty(rawParty, characterId)\r\n  }\r\n\r\n  const equipItem = (characterId: string, item: WeaponT | ArmorT) => {\r\n    const character = findRawCharacter(activeCharacter.id)\r\n    if (!character) return\r\n    if (item.itemType === 'armor') {\r\n      const armor = item as ArmorT\r\n      const result = equipArmor(character, armor)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.armor ? [result.armor] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n    if (item.itemType === 'weapon') {\r\n      const weapon = item as WeaponT\r\n      const result = equipWeapon(character, weapon)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.weapon ? [result.weapon] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PartyContext.Provider\r\n      value={{\r\n        party,\r\n        rawParty,\r\n        activeCharacter,\r\n        updateParty,\r\n        upsertCharacter,\r\n        deleteCharacter,\r\n        findCharacter,\r\n        findRawCharacter,\r\n        setActiveCharacter,\r\n        equipItem,\r\n      }}\r\n    >\r\n      {children}\r\n    </PartyContext.Provider>\r\n  )\r\n}\r\n\r\nexport const usePartyContext = () => useContext(PartyContext)\r\n","import { ProcessedCharacterT } from './Character'\r\nimport { hasStatus } from '../functions'\r\n\r\nexport interface CombatQueueT {\r\n  [characterId: string]: number\r\n}\r\n\r\nexport const makeCombatQueue = (\r\n  characters: ProcessedCharacterT[],\r\n): CombatQueueT => {\r\n  const sortedCharacters = characters.sort(\r\n    (a, b) => b.stats.agility - a.stats.agility,\r\n  )\r\n  return sortedCharacters.reduce(\r\n    (r, c, i) => ({\r\n      ...r,\r\n      [c.id]: 100 - c.stats.agility,\r\n    }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const getMax = (queue: CombatQueueT): number => {\r\n  return Object.keys(queue).reduce((r: number, id: string) => {\r\n    if (r < queue[id]) return queue[id]\r\n    return r\r\n  }, Number.NEGATIVE_INFINITY)\r\n}\r\n\r\nexport const getMin = (\r\n  queue: CombatQueueT,\r\n  characters?: ProcessedCharacterT[],\r\n): number => {\r\n  return Object.keys(queue).reduce((r: number, id: string) => {\r\n    if (queue[id] < r) {\r\n      if (characters) {\r\n        const c = characters.find((c) => c.id === id)\r\n        if (c && hasStatus(c, 'dazed')) {\r\n          return r\r\n        } else {\r\n          return queue[id]\r\n        }\r\n      } else return queue[id]\r\n    }\r\n    return r\r\n  }, Number.POSITIVE_INFINITY)\r\n}\r\n\r\nexport const consolidateQueue = (\r\n  queue: CombatQueueT,\r\n  characters: ProcessedCharacterT[] = [],\r\n): CombatQueueT => {\r\n  let min = getMin(queue, characters)\r\n  return Object.keys(queue).reduce((r, id) => {\r\n    const character = characters.find((c) => c.id === id)\r\n    const offset = character && hasStatus(character, 'dazed') ? 0 : min\r\n    return {\r\n      ...r,\r\n      [id]: queue[id] - offset,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const shiftQueue = (\r\n  queue: CombatQueueT,\r\n  character: ProcessedCharacterT,\r\n  characters: ProcessedCharacterT[],\r\n): CombatQueueT => {\r\n  const ret = consolidateQueue(\r\n    {\r\n      ...queue,\r\n      [character.id]: 200 - character.stats.agility,\r\n    },\r\n    characters,\r\n  )\r\n  return ret\r\n}\r\n\r\nexport const getFirst = (queue: CombatQueueT): string => {\r\n  let min = Number.POSITIVE_INFINITY\r\n  let key = Object.keys(queue)[0]\r\n  Object.keys(queue).forEach((id) => {\r\n    if (min > queue[id]) {\r\n      min = queue[id]\r\n      key = id\r\n    }\r\n  })\r\n  return key\r\n}\r\n\r\nexport const removeFromQueue = (\r\n  queue: CombatQueueT,\r\n  id: string,\r\n): CombatQueueT => {\r\n  return consolidateQueue(\r\n    Object.keys(queue)\r\n      .filter((key) => key !== id)\r\n      .reduce(\r\n        (r, id) => ({\r\n          ...r,\r\n          [id]: queue[id],\r\n        }),\r\n        {},\r\n      ),\r\n  )\r\n}\r\n\r\nexport const validateQueue = (\r\n  queue: CombatQueueT,\r\n  characters: ProcessedCharacterT[],\r\n): CombatQueueT => {\r\n  return consolidateQueue(\r\n    characters.reduce((r, c) => {\r\n      return c.dead ? r : { ...r, [c.id]: queue[c.id] }\r\n    }, {}),\r\n  )\r\n}\r\n\r\nexport const getSortedIds = (queue: CombatQueueT): string[] => {\r\n  return Object.keys(queue).sort((a, b) => queue[a] - queue[b])\r\n}\r\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n} from 'react'\r\nimport {\r\n  ProcessedPartyT,\r\n  PartyT,\r\n  SkillT,\r\n  ProcessedCharacterT,\r\n  TargetSkillResultT,\r\n  SkillTargetT,\r\n} from '../../types'\r\nimport {\r\n  makeParty,\r\n  processParty,\r\n  getSkillResults,\r\n  commitSkillResults,\r\n  processCharacter,\r\n  makeCharacter,\r\n  resolveSkillTarget,\r\n  makeSkillTarget,\r\n  removeTemporaryStatus,\r\n} from '../../functions'\r\nimport { usePartyContext } from '../PartyContext'\r\nimport {\r\n  CombatQueueT,\r\n  makeCombatQueue,\r\n  getFirst,\r\n  shiftQueue,\r\n  validateQueue,\r\n} from '../../types/CombatQueue'\r\nimport { getAIAction } from '../../functions/AI'\r\nimport { v4 } from 'uuid'\r\nimport { useHistory } from 'react-router'\r\n\r\nexport interface CombatContextT {\r\n  party: ProcessedPartyT\r\n  enemyParty: ProcessedPartyT\r\n  activeCharacter: ProcessedCharacterT\r\n  characters: ProcessedCharacterT[]\r\n  queue: CombatQueueT\r\n  selectedSkill: SkillT | undefined\r\n  selectedTargets: ProcessedCharacterT[]\r\n  selectedConsumableIndex: number | undefined\r\n  roundResults: TargetSkillResultT[][]\r\n  activeRound: TargetSkillResultT[] | undefined\r\n  isRunning: boolean\r\n  isDone: boolean\r\n  isRenderingResult: boolean\r\n  onSkillSelect: (skill: SkillT, consumableIndex?: number) => void\r\n  onTargetsSelect: (target: ProcessedCharacterT | ProcessedPartyT) => void\r\n  onConsumableSelect: (consumableIndex: number | undefined) => void\r\n  start: () => void\r\n  next: (nextTarget?: ProcessedCharacterT | ProcessedPartyT) => void\r\n  commit: () => void\r\n}\r\nconst defaultValue: CombatContextT = {\r\n  party: processParty(makeParty()),\r\n  enemyParty: processParty(makeParty()),\r\n  activeCharacter: processCharacter(makeCharacter('blacksmith')),\r\n  characters: [],\r\n  queue: {},\r\n  selectedSkill: undefined,\r\n  selectedTargets: [],\r\n  selectedConsumableIndex: undefined,\r\n  roundResults: [],\r\n  activeRound: undefined,\r\n  isRunning: false,\r\n  isDone: false,\r\n  isRenderingResult: false,\r\n  onSkillSelect: (skill: SkillT) => {},\r\n  onTargetsSelect: (target: ProcessedCharacterT | ProcessedPartyT) => {},\r\n  onConsumableSelect: (consumableIndex) => {},\r\n  start: () => {},\r\n  next: () => {},\r\n  commit: () => {},\r\n}\r\nexport const CombatContext = createContext<CombatContextT>(defaultValue)\r\nexport const useCombatContext = () => useContext(CombatContext)\r\n\r\nexport interface CombatContextProviderPropsT {\r\n  children: JSX.Element\r\n  enemyParty: PartyT\r\n  setEnemyParty: (party: PartyT) => void\r\n  onRequestNewParty: () => void\r\n}\r\nexport const CombatContextProvider = (props: CombatContextProviderPropsT) => {\r\n  const { children, setEnemyParty, onRequestNewParty } = props\r\n  const { party, rawParty, updateParty } = usePartyContext()\r\n  const history = useHistory()\r\n  const resultCommitter = useMemo(\r\n    () => commitSkillResults(rawParty, props.enemyParty),\r\n    [rawParty, props.enemyParty],\r\n  )\r\n  const enemyParty = useMemo(() => processParty(props.enemyParty), [\r\n    props.enemyParty,\r\n  ])\r\n  const [isRunning, setIsRunning] = useState<boolean>(false)\r\n  const [isDone, setIsDone] = useState<boolean>(false)\r\n  const [isRenderingResult, setIsRenderingResult] = useState<boolean>(false)\r\n  const characters = useMemo(\r\n    () => [...party.characters, ...enemyParty.characters],\r\n    [party, enemyParty],\r\n  )\r\n  const [queue, setQueue] = useState<CombatQueueT>(\r\n    makeCombatQueue([...party.characters, ...enemyParty.characters]),\r\n  )\r\n  const [roundId, setRoundId] = useState<string>(v4())\r\n  const [roundResults, setRoundResults] = useState<TargetSkillResultT[][]>([])\r\n  const [activeRound, setActiveRound] = useState<\r\n    TargetSkillResultT[] | undefined\r\n  >()\r\n  const [selectedTarget, setSelectedTarget] = useState<\r\n    SkillTargetT | undefined\r\n  >()\r\n  const [selectedSkill, setSelectedSkill] = useState<SkillT | undefined>()\r\n  const [selectedConsumableIndex, setSelectedConsumableIndex] = useState<\r\n    number | undefined\r\n  >()\r\n  const activeCharacter = useMemo(\r\n    () =>\r\n      characters.find(\r\n        (c) => !c.dead && c.id === getFirst(queue),\r\n      ) as ProcessedCharacterT,\r\n    [queue, characters],\r\n  )\r\n\r\n  const start = useCallback(() => {\r\n    setIsDone(false)\r\n    setIsRunning(true)\r\n  }, [activeCharacter])\r\n\r\n  // temp code\r\n  useEffect(() => {\r\n    if (isRunning) {\r\n      setQueue(makeCombatQueue([...party.characters, ...enemyParty.characters]))\r\n    }\r\n  }, [isRunning])\r\n\r\n  const next = (nextTarget?: ProcessedCharacterT | ProcessedPartyT) => {\r\n    if (!selectedSkill) return\r\n    const roundTarget = nextTarget\r\n      ? makeSkillTarget(selectedSkill.targetType, nextTarget)\r\n      : selectedTarget\r\n    if (!selectedSkill || !roundTarget) return\r\n    const results = getSkillResults(\r\n      selectedSkill,\r\n      activeCharacter,\r\n      resolveSkillTarget(roundTarget).filter((c) => !c.dead),\r\n      selectedConsumableIndex,\r\n    )\r\n    setActiveRound(results)\r\n    setSelectedSkill(undefined)\r\n    setSelectedTarget(undefined)\r\n    setSelectedConsumableIndex(undefined)\r\n    setIsRenderingResult(true)\r\n  }\r\n\r\n  const onSkillSelect = (skill: SkillT, consumableIndex?: number) => {\r\n    setSelectedSkill(skill)\r\n    if (consumableIndex !== undefined) {\r\n      setSelectedConsumableIndex(consumableIndex)\r\n    }\r\n    if (skill.targetType !== selectedSkill?.targetType) {\r\n      setSelectedTarget(undefined)\r\n    }\r\n  }\r\n\r\n  const onTargetsSelect = (target: ProcessedCharacterT | ProcessedPartyT) => {\r\n    if (!selectedSkill) return\r\n    setSelectedTarget(makeSkillTarget(selectedSkill.targetType, target))\r\n  }\r\n\r\n  const completeRound = (\r\n    source: ProcessedCharacterT,\r\n    updatedCharacters: ProcessedCharacterT[],\r\n  ) => {\r\n    setQueue(\r\n      validateQueue(\r\n        shiftQueue(queue, source, updatedCharacters),\r\n        updatedCharacters,\r\n      ),\r\n    )\r\n    setRoundId(v4())\r\n    setActiveRound(undefined)\r\n    setIsRenderingResult(false)\r\n  }\r\n\r\n  const commit = useCallback(() => {\r\n    if (!activeRound || activeRound.length === 0) return\r\n    const parties = resultCommitter(activeRound)\r\n    setRoundResults((r) => [...r, activeRound])\r\n    setEnemyParty(parties.enemyParty)\r\n    updateParty(parties.party)\r\n    const updatedCharacters = [\r\n      ...parties.party.characters,\r\n      ...parties.enemyParty.characters,\r\n    ].map((c) => processCharacter(c))\r\n    completeRound(activeRound[0].source, updatedCharacters)\r\n  }, [activeRound, queue])\r\n\r\n  const execEnemyTurn = (skill: SkillT, target: SkillTargetT) => {\r\n    const results = getSkillResults(\r\n      skill,\r\n      activeCharacter,\r\n      resolveSkillTarget(target),\r\n    )\r\n    setActiveRound(results)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activeCharacter) {\r\n      if (activeCharacter.partyId === enemyParty.id) {\r\n        const { skill, target } = getAIAction(\r\n          activeCharacter,\r\n          party,\r\n          enemyParty,\r\n        )\r\n\r\n        execEnemyTurn(skill, makeSkillTarget(skill.targetType, target))\r\n      } else {\r\n        setSelectedSkill(activeCharacter.skills[0])\r\n      }\r\n    }\r\n  }, [roundId])\r\n\r\n  useEffect(() => {\r\n    if (isDone) return\r\n    if (enemyParty.characters.every((c) => c.dead)) {\r\n      updateParty({\r\n        ...rawParty,\r\n        characters: rawParty.characters.map((c) => removeTemporaryStatus(c)),\r\n      })\r\n      alert('you win')\r\n      history.push('/JSFTK_combat/party')\r\n      return\r\n    }\r\n    if (party.characters.every((c) => c.dead)) {\r\n      alert('you lose')\r\n      setIsDone(true)\r\n      history.push('/JSFTK_combat/')\r\n      return\r\n    }\r\n  }, [party, enemyParty])\r\n\r\n  useEffect(() => {\r\n    if (activeCharacter && activeCharacter.skills[0]) {\r\n      setSelectedSkill(activeCharacter.skills[0])\r\n    }\r\n  }, [activeCharacter])\r\n\r\n  return (\r\n    <CombatContext.Provider\r\n      value={{\r\n        party,\r\n        enemyParty,\r\n        characters,\r\n        queue,\r\n        activeCharacter,\r\n        activeRound,\r\n        selectedSkill,\r\n        selectedTargets: selectedTarget\r\n          ? resolveSkillTarget(selectedTarget)\r\n          : [],\r\n        selectedConsumableIndex,\r\n        roundResults,\r\n        isDone,\r\n        isRunning,\r\n        isRenderingResult,\r\n        onSkillSelect,\r\n        onTargetsSelect,\r\n        onConsumableSelect: setSelectedConsumableIndex,\r\n        start,\r\n        next,\r\n        commit,\r\n      }}\r\n    >\r\n      {children}\r\n    </CombatContext.Provider>\r\n  )\r\n}\r\n","import { ProcessedCharacterT, ProcessedPartyT, SkillT } from '../types'\r\nimport { getRandom } from '../util'\r\nimport { getSkillTargetOptions } from './Skill'\r\n\r\nexport interface AIActionT {\r\n  skill: SkillT\r\n  target: ProcessedCharacterT | ProcessedPartyT\r\n}\r\nexport const getAIAction = (\r\n  source: ProcessedCharacterT,\r\n  playerParty: ProcessedPartyT,\r\n  enemyParty: ProcessedPartyT,\r\n): AIActionT => {\r\n  const skill = getRandom(source.skills)\r\n  const targetedCharacters = playerParty.characters.filter(\r\n    (c) => c.status.map((t) => t.type).includes('targeted') && !c.dead,\r\n  )\r\n  const target =\r\n    skill.targetType === 'single'\r\n      ? targetedCharacters.length > 0\r\n        ? getRandom(targetedCharacters)\r\n        : getRandom(playerParty.characters.filter((c) => !c.dead))\r\n      : getRandom<ProcessedPartyT | ProcessedCharacterT>(\r\n          getSkillTargetOptions(source, enemyParty, playerParty, skill),\r\n        )\r\n\r\n  return { skill, target }\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport interface FlexContainerPropsT {\r\n  $direction?: 'row' | 'column' | 'column-reverse'\r\n  $full?: boolean\r\n}\r\nexport const FlexContainer = styled('div', (props: FlexContainerPropsT) => ({\r\n  display: 'flex',\r\n  flexDirection: props.$direction || 'row',\r\n  flex: props.$full ? 1 : 'default',\r\n}))\r\nexport const FullContainer = styled('div', () => ({\r\n  flex: 1,\r\n}))\r\n","import React, { useState, useLayoutEffect } from 'react'\r\nimport { v4 } from 'uuid'\r\n\r\nexport interface HoverChildrenT {\r\n  isHovering: boolean\r\n}\r\nexport interface HoverPropsT {\r\n  delay?: number\r\n  children: (props: HoverChildrenT) => JSX.Element\r\n}\r\nexport const Hover = (props: HoverPropsT) => {\r\n  const { delay = 500, children } = props\r\n  const [internalHovering, setInternalHovering] = useState<boolean>(false)\r\n  const [isHovering, setIsHovering] = useState<boolean>(false)\r\n  const [guid, setGuid] = useState<string>(v4())\r\n  useLayoutEffect(() => {\r\n    const action = async () => {\r\n      if (internalHovering) {\r\n        setTimeout(() => {\r\n          setGuid(v4())\r\n        }, delay)\r\n      }\r\n    }\r\n    action()\r\n  }, [internalHovering])\r\n  useLayoutEffect(() => {\r\n    if (internalHovering) {\r\n      setIsHovering(true)\r\n    }\r\n  }, [guid])\r\n  const onMouseEnter = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(true)\r\n  }\r\n  const onMouseLeave = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(false)\r\n    setIsHovering(false)\r\n  }\r\n  return (\r\n    <div onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\r\n      {children({ isHovering })}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Hover } from '../components/Hover'\r\n\r\nexport interface BoxContainerPropsT extends React.HTMLProps<HTMLDivElement> {\r\n  substyle?: React.CSSProperties\r\n  tag?: any\r\n  to?: string\r\n}\r\nexport const BoxContainer = (props: BoxContainerPropsT) => {\r\n  const {\r\n    style = {},\r\n    substyle = {},\r\n    children,\r\n    tag: Element = 'div',\r\n    ...rest\r\n  } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        border: '1px solid #000',\r\n        display: 'flex',\r\n        boxSizing: 'border-box',\r\n        ...style,\r\n      }}\r\n    >\r\n      <Element\r\n        style={{\r\n          border: substyle.border || '1px solid #555',\r\n          background: 'linear-gradient(0deg, #222222 0%, #2a2a2a 100%)',\r\n          padding: 10,\r\n          color: '#ccc',\r\n          flex: 1,\r\n          boxShadow: 'inset 0px 0px 2px black',\r\n          ...substyle,\r\n        }}\r\n        {...rest}\r\n      >\r\n        {children}\r\n      </Element>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const SmallBox = (props: BoxContainerPropsT) => (\r\n  <BoxContainer\r\n    {...props}\r\n    style={{\r\n      height: 40,\r\n      width: 40,\r\n      ...props.style,\r\n    }}\r\n    substyle={{\r\n      display: 'flex',\r\n      padding: 0,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      background: '#111',\r\n      ...props.substyle,\r\n    }}\r\n  >\r\n    {props.children}\r\n  </BoxContainer>\r\n)\r\n\r\nexport const BoxButton = (props: BoxContainerPropsT) => {\r\n  return (\r\n    <Hover delay={0}>\r\n      {({ isHovering }) => (\r\n        <BoxContainer\r\n          {...props}\r\n          tag='button'\r\n          style={{\r\n            margin: 0,\r\n            ...(props.style || {}),\r\n          }}\r\n          substyle={{\r\n            borderColor: isHovering && !props.disabled ? '#999' : '#555',\r\n            padding: '4px',\r\n            cursor: props.disabled ? 'default' : 'pointer',\r\n            background: props.disabled ? '#444' : '#111',\r\n            boxShadow: props.disabled ? 'none' : undefined,\r\n            ...(props.substyle || {}),\r\n          }}\r\n        />\r\n      )}\r\n    </Hover>\r\n  )\r\n}\r\n","import React, { useState, useRef } from 'react'\r\nimport BaseTooltip, { TooltipProps } from 'react-tooltip-lite'\r\nimport { Hover } from '../Hover'\r\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\r\n\r\nexport interface ClickToolTipChildrenT {\r\n  onClick: () => void\r\n  ref: React.MutableRefObject<HTMLElement | undefined>\r\n}\r\ninterface PropsT extends TooltipProps {\r\n  children: JSX.Element | ((props: ClickToolTipChildrenT) => JSX.Element)\r\n  content: JSX.Element | ((props: ClickToolTipChildrenT) => JSX.Element)\r\n}\r\nexport const Tooltip = (props: PropsT) => {\r\n  const { ...rest } = props\r\n  return (\r\n    <BaseTooltip\r\n      direction='up'\r\n      tagName='div'\r\n      padding='0'\r\n      arrow={false}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nexport const HoverToolTip = (props: PropsT) => {\r\n  return (\r\n    <Hover>\r\n      {({ isHovering }) => <Tooltip {...props} isOpen={isHovering} />}\r\n    </Hover>\r\n  )\r\n}\r\n\r\nexport const ClickToolTip = (props: PropsT) => {\r\n  const { children, content, ...rest } = props\r\n  const [isOpen, setIsOpen] = useState<boolean>(false)\r\n  const ref = useRef<HTMLElement>()\r\n  useOnClickOutside(ref, () => {\r\n    setIsOpen(false)\r\n  })\r\n  if (typeof children !== 'function') return null\r\n  if (typeof content !== 'function') return null\r\n  const p = {\r\n    onClick: () => {\r\n      setIsOpen((v) => !v)\r\n    },\r\n    ref,\r\n  }\r\n  return (\r\n    <Tooltip content={content(p)} {...rest} isOpen={isOpen}>\r\n      {children(p)}\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport const useOnClickOutside = (\r\n  ref: React.MutableRefObject<HTMLElement | undefined>,\r\n  handler: Function,\r\n) => {\r\n  useEffect(() => {\r\n    const listener = (event: any) => {\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return\r\n      }\r\n\r\n      setTimeout(() => handler(event), 150)\r\n    }\r\n\r\n    document.addEventListener('mousedown', listener)\r\n    document.addEventListener('touchstart', listener)\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', listener)\r\n      document.removeEventListener('touchstart', listener)\r\n    }\r\n  }, [ref, handler])\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport const Monospace = styled('span', () => ({\r\n  fontFamily: 'Inconsolata, monospace',\r\n  fontWeight: 600,\r\n}))\r\nexport const Monodiv = styled('div', () => ({\r\n  fontFamily: 'Inconsolata, monospace',\r\n  fontWeight: 600,\r\n}))\r\n","import React, { CSSProperties } from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { Monodiv } from '../../elements/monospace'\r\nimport { ProcessedCharacterT } from '../../types'\r\nimport { noneg } from '../../util'\r\n\r\nexport interface GaugePropsT {\r\n  name?: string\r\n  color: string\r\n  height?: number\r\n  max: number\r\n  value: number\r\n  style?: CSSProperties\r\n  children?: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const Gauge = (props: GaugePropsT) => {\r\n  const { name = '', value, max, color, height = 30, children } = props\r\n  const p = (value / max) * 100\r\n  const percentage = p > 100 ? 100 : p\r\n  return (\r\n    <HoverToolTip\r\n      direction='right'\r\n      content={<BoxContainer>{`${name} (${value} / ${max})`}</BoxContainer>}\r\n    >\r\n      <BoxContainer\r\n        style={{ borderLeft: 'none' }}\r\n        substyle={{\r\n          padding: 0,\r\n          background: '#555',\r\n          height: height - 2,\r\n          position: 'relative',\r\n          borderColor: '1px rgba(255,255,255,0.3)',\r\n        }}\r\n      >\r\n        <FlexContainer\r\n          style={{\r\n            position: 'absolute',\r\n            left: 0,\r\n            boxSizing: 'border-box',\r\n            height: height - 2,\r\n            maxWidth: `${percentage}%`,\r\n            minWidth: `${percentage}%`,\r\n            boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n            textShadow: '1px 1px 1px black',\r\n            backgroundColor: color,\r\n            color: 'white',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            transition: 'all 0.5s',\r\n          }}\r\n        ></FlexContainer>\r\n        <FullContainer\r\n          style={{\r\n            position: 'absolute',\r\n            height,\r\n            lineHeight: `${height - 2}px`,\r\n            right: 4,\r\n            top: 0,\r\n            fontSize: 10,\r\n            fontWeight: 'bold',\r\n            overflow: 'hidden',\r\n            textShadow: '0px 0px 3px black',\r\n          }}\r\n        >\r\n          <Monodiv>{children}</Monodiv>\r\n        </FullContainer>\r\n      </BoxContainer>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface HealthGaugePropsT {\r\n  character: ProcessedCharacterT\r\n  height?: number\r\n}\r\nexport const HealthGauge = (props: HealthGaugePropsT) => {\r\n  const { character, height = 12 } = props\r\n  const health = noneg(character.health - character.stats.healthOffset)\r\n  return (\r\n    <Gauge\r\n      name='Health'\r\n      color='#8f4e4d'\r\n      max={character.health}\r\n      value={health}\r\n      height={height}\r\n    >\r\n      {health}/{character.health}\r\n    </Gauge>\r\n  )\r\n}\r\nexport interface XPGaugePropsT {\r\n  character: ProcessedCharacterT\r\n}\r\nexport const XPGauge = (props: HealthGaugePropsT) => {\r\n  const { character } = props\r\n  const health = noneg(character.health - character.stats.healthOffset)\r\n  return (\r\n    <Gauge name='XP' color='#5e8575' max={3300} value={1256} height={12}>\r\n      1256/3300\r\n    </Gauge>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { styled, withWrapper } from 'styletron-react'\r\nimport { HoverToolTip } from '../components/Tooltip'\r\n\r\nconst Div = styled('div', {\r\n  transform: 'rotateY(0deg) rotate(-45deg)',\r\n})\r\nexport const Badge = withWrapper(Div, (Element) => (props: any) => {\r\n  const { onClick, ...rest } = props\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      style={{\r\n        position: props.$absolute === false ? 'relative' : 'absolute',\r\n        background: '#111',\r\n        padding: '4px',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        boxShadow: '1px 1px 0px black',\r\n        height: props.$size || '20px',\r\n        width: props.$size || '20px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        lineHeight: '20px',\r\n        fontWeight: 'bolder',\r\n        borderRadius: '30%',\r\n        transform: 'rotateY(0deg) rotate(45deg)',\r\n        color: props.$color || 'white',\r\n        cursor: 'pointer',\r\n        top: props.$top,\r\n        bottom: props.$bottom,\r\n        right: props.$right,\r\n        left: props.$left,\r\n      }}\r\n    >\r\n      <Element {...rest} />\r\n    </div>\r\n  )\r\n})\r\n\r\nexport interface HoverBadgePropsT {\r\n  children: JSX.Element\r\n  content: JSX.Element\r\n  badgeProps: any\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n}\r\nexport const HoverBadge = (props: HoverBadgePropsT) => {\r\n  const { children, content, badgeProps, direction } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        top: badgeProps.$top,\r\n        bottom: badgeProps.$bottom,\r\n        left: badgeProps.$left,\r\n        right: badgeProps.$right,\r\n      }}\r\n    >\r\n      <HoverToolTip\r\n        distance={2}\r\n        direction={direction || 'right'}\r\n        // styles={{ position: 'absolute' }}\r\n        content={content || <div />}\r\n      >\r\n        <Badge\r\n          $absolute={false}\r\n          $size={badgeProps.$size}\r\n          $color={badgeProps.$color}\r\n          style={badgeProps.style}\r\n        >\r\n          {children}\r\n        </Badge>\r\n      </HoverToolTip>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nexport interface IconPropsT {\r\n  src: string\r\n  size: number\r\n  fill?: string\r\n  style?: React.CSSProperties\r\n  shadow?: boolean\r\n  onClick?: () => void\r\n}\r\nexport const Icon = ({\r\n  src,\r\n  size,\r\n  style = {},\r\n  fill = 'white',\r\n  shadow,\r\n  onClick,\r\n}: IconPropsT) => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [svg, setSvg] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (src) {\r\n      fetch(src)\r\n        .then((res) => res.text())\r\n        .then((text) => setSvg(text))\r\n        .then(() => setLoading(false))\r\n    }\r\n  }, [src])\r\n\r\n  return !loading ? (\r\n    <div\r\n      className={`icon ${shadow ? 'shadow' : ''}`}\r\n      onClick={() => {\r\n        if (onClick) onClick()\r\n      }}\r\n      style={{ ...style, height: size, width: size, fill }}\r\n      dangerouslySetInnerHTML={{ __html: svg }}\r\n    />\r\n  ) : (\r\n    <div />\r\n  )\r\n}\r\n","import { StatsT, ArmorTypeT, StatusTypeT, ArmorResourceType } from '../types'\r\n\r\nimport Vigor from './svg/delapouite/heart-beats.svg'\r\nimport Strength from './svg/delapouite/biceps.svg'\r\nimport Brain from './svg/lorc/brain.svg'\r\nimport Awareness from './svg/delapouite/eye-target.svg'\r\nimport Juggler from './svg/lorc/juggler.svg'\r\nimport Agility from './svg/lorc/sprint.svg'\r\nimport Clover from './svg/lorc/clover.svg'\r\nimport Accuracy from './svg/delapouite/convergence-target.svg'\r\n\r\nimport Dazed from './svg/lorc/star-swirl.svg'\r\nimport Targeted from './svg/sbed/targeted.svg'\r\nimport Evasive from './svg/lorc/dodging.svg'\r\nimport SpeedDown from './svg/delapouite/sticky-boot.svg'\r\n\r\nimport Shot from './svg/lorc/high-shot.svg'\r\nimport SnipeShot from './svg/delapouite/shield-impact.svg'\r\nimport Surge from './svg/lorc/fire-zone.svg'\r\nimport AreaBast from './svg/lorc/heavy-timer.svg'\r\nimport Dazzle from './svg/lorc/ubisoft-sun.svg'\r\nimport Smash from './svg/lorc/flat-hammer.svg'\r\nimport Shockwave from './svg/lorc/hammer-drop.svg'\r\nimport Taunt from './svg/lorc/bordered-shield.svg'\r\nimport Alto from './svg/delapouite/g-clef.svg'\r\nimport Protect from './svg/lorc/shieldcomb.svg'\r\nimport { SHOT } from '../objects/skills/shot'\r\nimport { SNIPE_SHOT } from '../objects/skills/snipe_shot'\r\nimport { SURGE } from '../objects/skills/surge'\r\nimport { AREA_BLAST } from '../objects/skills/area_blast'\r\nimport { DAZZLE } from '../objects/skills/dazzle'\r\nimport { SMASH } from '../objects/skills/smash'\r\nimport { SHOCKWAVE } from '../objects/skills/shockwave'\r\nimport { TAUNT } from '../objects/skills/taunt'\r\nimport { ALTO } from '../objects/skills/alto'\r\nimport { SYMPHONY } from '../objects/skills/symphony'\r\n\r\nimport MagicArmor from './svg/lorc/robe.svg'\r\nimport ClothArmor from './svg/lorc/scale-mail.svg'\r\nimport Armor from './svg/delapouite/chest-armor.svg'\r\nimport Shield from './svg/delapouite/viking-shield.svg'\r\nimport MagicShield from './svg/lorc/lightning-shield.svg'\r\nimport Footwear from './svg/lorc/leather-boot.svg'\r\nimport Hat from './svg/delapouite/robin-hood-hat.svg'\r\nimport MagicHat from './svg/lorc/pointy-hat.svg'\r\nimport Helmet from './svg/lorc/visored-helm.svg'\r\nimport Weapon from './svg/lorc/broadsword.svg'\r\n\r\nimport Godsbeard from './svg/delapouite/herbs-bundle.svg'\r\nimport { GODSBEARD } from '../objects/consumables/godsbeard'\r\nimport { PROTECT } from '../objects/skills/protect'\r\nimport { RITARDANDO } from '../objects/skills/ritardando'\r\n\r\nexport const STATI_ICONS: Partial<Record<keyof StatsT | 'accuracy', string>> = {\r\n  vigor: Vigor,\r\n  strength: Strength,\r\n  intelligence: Brain,\r\n  perception: Awareness,\r\n  talent: Juggler,\r\n  agility: Agility,\r\n  luck: Clover,\r\n  accuracy: Accuracy,\r\n}\r\n\r\nexport const STATUS_ICONS: Partial<Record<StatusTypeT, string>> = {\r\n  dazed: Dazed,\r\n  targeted: Targeted,\r\n  evasive: Evasive,\r\n  protected: Protect,\r\n  ['speed-down']: SpeedDown,\r\n}\r\n\r\nexport const SKILL_ICONS: Record<string, string> = {\r\n  [SHOT.id]: Shot,\r\n  [SNIPE_SHOT.id]: SnipeShot,\r\n  [SURGE.id]: Surge,\r\n  [AREA_BLAST.id]: AreaBast,\r\n  [SYMPHONY.id]: AreaBast,\r\n  [DAZZLE.id]: Dazzle,\r\n  [SMASH.id]: Smash,\r\n  [SHOCKWAVE.id]: Shockwave,\r\n  [TAUNT.id]: Taunt,\r\n  [ALTO.id]: Alto,\r\n  [RITARDANDO.id]: Alto,\r\n  [PROTECT.id]: Protect,\r\n}\r\n\r\nexport const ARMOR_TYPE_ICONS: Record<ArmorTypeT, string> = {\r\n  ['magic-armor']: MagicArmor,\r\n  ['cloth-armor']: ClothArmor,\r\n  armor: Armor,\r\n  shield: Shield,\r\n  ['magic-shield']: MagicShield,\r\n  footwear: Footwear,\r\n  hat: Hat,\r\n  ['magic-hat']: MagicHat,\r\n  helmet: Helmet,\r\n  charm: '',\r\n  ring: '',\r\n}\r\n\r\nexport const RESOURCE_ICONS: Record<ArmorResourceType | 'weapon', string> = {\r\n  weapon: Weapon,\r\n  offhand: Shield,\r\n  body: Armor,\r\n  head: Helmet,\r\n  feet: Footwear,\r\n}\r\n\r\nexport const CONSUMABLE_ITEM_ICONS: Record<string, string> = {\r\n  [GODSBEARD.id]: Godsbeard,\r\n}\r\nexport const CONSUMABLE_ITEM_COLORS: Record<string, string> = {\r\n  [GODSBEARD.id]: '#84a397',\r\n}\r\n","import React from 'react'\r\nimport { Tooltip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STATUS_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { StatusT } from '../../types'\r\n\r\nexport interface TagPreviewPropsT {\r\n  tag: StatusT\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n}\r\nexport const TagPreview = (props: TagPreviewPropsT) => {\r\n  const { tag, direction } = props\r\n  return (\r\n    <Tooltip\r\n      direction={direction || 'bottom'}\r\n      content={\r\n        <BoxContainer style={{ maxWidth: 200 }}>\r\n          <FlexContainer $direction='column'>\r\n            <strong style={{ marginBottom: 8 }}>\r\n              {tag.type} {tag.duration > 0 ? `(${tag.duration})` : ''}\r\n            </strong>\r\n            {tag.description && <span>{tag.description}</span>}\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n      }\r\n    >\r\n      <Icon shadow src={STATUS_ICONS[tag.type] || ''} size={20} />\r\n    </Tooltip>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { CharacterT } from '../../types'\r\n\r\nexport interface CharacterImagePropsT {\r\n  character: CharacterT\r\n  size: number\r\n}\r\nexport const CharacterImage = (props: CharacterImagePropsT) => {\r\n  const { character, size } = props\r\n  return (\r\n    <img\r\n      alt='profile'\r\n      height={size}\r\n      width={size}\r\n      src={`https://picsum.photos/seed/${character.name}/94/94`}\r\n      style={{\r\n        height: size,\r\n        width: size,\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import {\r\n  ProcessedCharacterT,\r\n  SourceSkillResultT,\r\n  TargetSkillResultT,\r\n} from '../types'\r\nimport { ConsumableT } from '../types/Consumable'\r\nimport { resolveCheck, getPassedCount, didAllPass } from './Roll'\r\n\r\n/**\r\n * THESE AREE NOT BEING USED\r\n * @param source\r\n * @param consumable\r\n */\r\n\r\nexport const getSourceConsumableResult = (\r\n  source: ProcessedCharacterT,\r\n  consumable: ConsumableT,\r\n): SourceSkillResultT => {\r\n  const { skill } = consumable\r\n  const rollResults = skill.rolls.map((check) => resolveCheck(source, check))\r\n  const passedCount = getPassedCount(rollResults)\r\n  const perfect = didAllPass(rollResults)\r\n\r\n  return {\r\n    rollResults,\r\n    skill,\r\n    source,\r\n    accuracySuccess: true,\r\n    criticalSuccess: false,\r\n    passedCount,\r\n    perfect,\r\n    rawDamage: { damage: 0, type: 'magic' },\r\n    pierce: false,\r\n    splashDamage: { damage: 0, type: 'magic' },\r\n    addedStatus: perfect ? skill.perfectStatus : [],\r\n    healing:\r\n      perfect && skill.healing ? source.stats.consumableHealthGainOffset : 0,\r\n    consumableIndex: 0,\r\n  }\r\n}\r\n\r\nexport const getTargetConsumableResult = (\r\n  target: ProcessedCharacterT,\r\n  sourceResult: SourceSkillResultT,\r\n): TargetSkillResultT => {\r\n  return {\r\n    ...sourceResult,\r\n    target,\r\n    dodgeSuccess: false,\r\n    reflectedDamage: sourceResult.rawDamage,\r\n    blockedDamage: sourceResult.rawDamage,\r\n    totalDamage: sourceResult.rawDamage,\r\n    regeneratedHealth: 0,\r\n    willDie: false,\r\n  }\r\n}\r\n\r\nexport interface ConsumableStackT {\r\n  consumable: ConsumableT\r\n  count: number\r\n}\r\nexport const considateConsumableListToStack = (\r\n  consumables: ConsumableT[],\r\n): ConsumableStackT[] => {\r\n  let stack: ConsumableStackT[] = []\r\n  const updateStackItem = (id: string) =>\r\n    stack.map((s) =>\r\n      s.consumable.id === id ? { ...s, count: s.count + 1 } : s,\r\n    )\r\n  const containsId = (id: string) =>\r\n    stack.map((s) => s.consumable.id).includes(id)\r\n  consumables.forEach((c) => {\r\n    if (containsId(c.id)) {\r\n      stack = updateStackItem(c.id)\r\n    } else {\r\n      stack = [...stack, { consumable: c, count: 1 }]\r\n    }\r\n  })\r\n  return stack\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { ConsumableT } from '../../types/Consumable'\r\nimport { considateConsumableListToStack } from '../../functions/Consumable'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { CONSUMABLE_ITEM_ICONS, CONSUMABLE_ITEM_COLORS } from '../../icons/maps'\r\nimport { ProcessedCharacterT } from '../../types'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\n\r\nconst HEIGHT = 70\r\nexport interface PartyCharacterConsumablesPropsT {\r\n  character: ProcessedCharacterT\r\n  consumables: ConsumableT[]\r\n  onClick?: (consumable: ConsumableT, index: number) => void\r\n}\r\nexport const PartyCharacterConsumables = (\r\n  props: PartyCharacterConsumablesPropsT,\r\n) => {\r\n  const { character, consumables, onClick } = props\r\n  const stack = useMemo(() => considateConsumableListToStack(consumables), [\r\n    consumables,\r\n  ])\r\n  const onStackClick = (consumable: ConsumableT) => {\r\n    let index = undefined\r\n    consumables.forEach((c, i) => {\r\n      if (c.id === consumable.id) index = i\r\n    })\r\n    if (consumable.skill.healing && !(character.stats.healthOffset === 0))\r\n      return onClick && onClick(consumable, index || 0)\r\n  }\r\n  const filler = Array(10 - stack.length).fill(null)\r\n\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ flexWrap: 'wrap', height: HEIGHT }}\r\n    >\r\n      {stack.map((s) => (\r\n        <PartyCharacterConsumable\r\n          key={s.consumable.id}\r\n          character={character}\r\n          consumable={s.consumable}\r\n          count={s.count}\r\n          onClick={onStackClick}\r\n        />\r\n      ))}\r\n      {filler.map((f) => (\r\n        <ConsumableBox />\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\ninterface ConsumableBoxPropsT {\r\n  children?: JSX.Element\r\n  onClick?: () => void\r\n}\r\nconst ConsumableBox = (props: ConsumableBoxPropsT) => {\r\n  const { children, onClick } = props\r\n  return (\r\n    <FlexContainer\r\n      onClick={() => onClick && onClick()}\r\n      style={{\r\n        height: HEIGHT / 2,\r\n        width: HEIGHT / 2,\r\n        boxSizing: 'border-box',\r\n        border: '1px solid rgba(0,0,0,0.5)',\r\n        background: '#333',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        cursor: onClick ? 'pointer' : 'default',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      {children}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface PartyCharacterConsumablePropsT {\r\n  consumable: ConsumableT\r\n  character: ProcessedCharacterT\r\n  count: number\r\n  onClick?: (consumable: ConsumableT) => void\r\n}\r\nexport const PartyCharacterConsumable = (\r\n  props: PartyCharacterConsumablePropsT,\r\n) => {\r\n  const { character, consumable, count, onClick } = props\r\n  return (\r\n    <HoverToolTip\r\n      content={\r\n        <PartyCharacterConsumableTooltip\r\n          character={character}\r\n          consumable={consumable}\r\n        />\r\n      }\r\n    >\r\n      <ConsumableBox onClick={() => onClick && onClick(consumable)}>\r\n        <>\r\n          <Icon\r\n            src={CONSUMABLE_ITEM_ICONS[consumable.id]}\r\n            fill={CONSUMABLE_ITEM_COLORS[consumable.id]}\r\n            size={24}\r\n          />\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: -2,\r\n              right: 1,\r\n            }}\r\n          >\r\n            {count}\r\n          </div>\r\n        </>\r\n      </ConsumableBox>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface PartyCharacterConsumableTooltipProps {\r\n  character: ProcessedCharacterT\r\n  consumable: ConsumableT\r\n}\r\nexport const PartyCharacterConsumableTooltip = (\r\n  props: PartyCharacterConsumableTooltipProps,\r\n) => {\r\n  const { character, consumable } = props\r\n  return (\r\n    <BoxContainer>\r\n      <strong>{consumable.name}</strong>\r\n      {consumable.skill.healing && (\r\n        <div>Heal for {character.stats.consumableHealthGainOffset} HP</div>\r\n      )}\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import { useState, useEffect, useRef } from 'react'\r\n\r\nexport const usePrevious = <T = any>(value: T) => {\r\n  const ref = useRef<T>()\r\n\r\n  useEffect(() => {\r\n    ref.current = value\r\n  }, [value])\r\n\r\n  return ref.current\r\n}\r\n","import React from 'react'\r\nimport { ProcessedCharacterT } from '../../types'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STAT_BONUS_KEYS } from '../../objects'\r\nimport { STATI_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\n\r\nexport interface StatBarPropsT {\r\n  character: ProcessedCharacterT\r\n}\r\nexport const StatBar = (props: StatBarPropsT) => {\r\n  const { character } = props\r\n\r\n  return (\r\n    <BoxContainer>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-between',\r\n          width: 360,\r\n          paddingTop: 10,\r\n          paddingBottom: 6,\r\n        }}\r\n      >\r\n        {STAT_BONUS_KEYS.map((key) => (\r\n          <FlexContainer\r\n            key={key}\r\n            style={{\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Icon\r\n              src={STATI_ICONS[key] || ''}\r\n              size={20}\r\n              style={{ marginRight: 4 }}\r\n            />\r\n            {character.stats[key]}\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ProcessedCharacterT } from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { CHARACTER_RESOURCES } from '../../objects/Item'\r\nimport { Icon } from '../Icon'\r\nimport { RESOURCE_ICONS } from '../../icons/maps'\r\nimport { styled } from 'styletron-react'\r\n\r\nconst ItemRow = styled(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    marginBottom: '4px',\r\n    textShadow: '1px 1px 1px black',\r\n    background:\r\n      'linear-gradient(90deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 100%)',\r\n    paddingLeft: '8px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n  }\r\n})\r\n\r\nexport interface ItemPropsT {\r\n  character: ProcessedCharacterT\r\n}\r\nexport const Items = (props: ItemPropsT) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer $full $direction='column'>\r\n      <ItemRow>\r\n        <Icon\r\n          src={RESOURCE_ICONS.weapon || ''}\r\n          size={16}\r\n          style={{ marginRight: 6 }}\r\n        />\r\n        {character.weapon.name}\r\n      </ItemRow>\r\n      {CHARACTER_RESOURCES.map((res) => (\r\n        <ItemRow>\r\n          <Icon\r\n            src={RESOURCE_ICONS[res] || ''}\r\n            size={16}\r\n            style={{ marginRight: 6 }}\r\n          />\r\n          {character.armor.find((a) => a.resource === res)?.name}\r\n        </ItemRow>\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\n\r\nexport interface NamePropsT {\r\n  name: string\r\n}\r\n\r\nexport const Name = (props: NamePropsT) => {\r\n  const { name } = props\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        width: '100%',\r\n        height: 40,\r\n        marginBottom: -20,\r\n        marginTop: -20,\r\n      }}\r\n    >\r\n      <FullContainer />\r\n      <BoxContainer style={{ zIndex: 2 }} substyle={{ background: '#444' }}>\r\n        {name}\r\n      </BoxContainer>\r\n      <FullContainer />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ProcessedCharacterT } from '../../types'\r\nimport { ItemPropsT } from './Items'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { CharacterImage } from '../CharacterImage'\r\nconst SIZE = 100\r\nexport interface ImagePropsT {\r\n  character: ProcessedCharacterT\r\n}\r\n\r\nexport const Image = (props: ItemPropsT) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n      <div>\r\n        <BoxContainer\r\n          style={{ marginRight: 20, marginBottom: 10 }}\r\n          substyle={{ padding: 0, height: SIZE, width: SIZE }}\r\n        >\r\n          <CharacterImage character={character} size={100} />\r\n        </BoxContainer>\r\n      </div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { styled, withStyle } from 'styletron-react'\r\nimport { animated, useSpring } from 'react-spring'\r\n\r\nexport interface ButtonPropsT {\r\n  $direction?: 'up' | 'down'\r\n}\r\nexport const Button = styled('button', (props: ButtonPropsT) => {\r\n  return {\r\n    cursor: 'pointer',\r\n    background: '#222',\r\n    boxShadow: 'inset 0px 0px 3px black',\r\n    textShadow: '0px 1px 3px black',\r\n    border: '1px solid rgba(255,255,255,0.2)',\r\n    color: 'rgba(255,255,255,1)',\r\n    ':hover': {\r\n      border: '1px solid rgba(255,255,255,0.4)',\r\n    },\r\n    ':active': {\r\n      outline: 'none',\r\n      border: '1px solid rgba(255,255,255,0.7)',\r\n    },\r\n    ':focus': {\r\n      outline: 'none',\r\n    },\r\n    padding: '10px 30px',\r\n  }\r\n})\r\n\r\nexport const RedButton = withStyle(Button, (props: ButtonPropsT) => {\r\n  return {\r\n    background:\r\n      'linear-gradient(0deg, rgba(157,0,0,1) 0%, rgba(110,0,0,1) 100%)',\r\n  }\r\n})\r\n\r\nexport const ConfirmButton = withStyle(Button, (props: ButtonPropsT) => {\r\n  const { $direction } = props\r\n  return {\r\n    // background: 'linear-gradient(0deg, rgba(157,0,0,1) 0%, rgba(110,0,0,1) 100%)',\r\n    // fontWeight: 'bold',\r\n    borderTop: $direction === 'down' ? 'none' : undefined,\r\n    borderBottom: $direction === 'up' ? 'none' : undefined,\r\n    padding: '10px 30px',\r\n    boxShadow: 'inset 0px 2px 8px black',\r\n    ':hover': {\r\n      borderTop: $direction === 'down' ? 'none' : undefined,\r\n      borderBottom: $direction === 'up' ? 'none' : undefined,\r\n    },\r\n    animationDirection: '1s',\r\n    animationIterationCount: 'infinite',\r\n    animationName: `\r\n      from: {\r\n        background: 'rgba(255,255,255,0.4)',\r\n      },\r\n\r\n      to: {\r\n        background: 'rgba(255,255,255,1)',\r\n      },\r\n    `,\r\n  }\r\n})\r\n\r\nexport const ConfirmButton2 = (props: any) => {\r\n  const styles = useSpring({\r\n    from: {\r\n      border: '1px solid rgba(255,255,255,0)',\r\n    },\r\n    to: async (next: any) => {\r\n      while (1) {\r\n        await next({\r\n          border: '1px solid rgba(255,255,255,0)',\r\n        })\r\n        await next({ border: '1px solid rgba(255,255,255,1)' })\r\n      }\r\n    },\r\n  })\r\n  return (\r\n    <animated.div style={styles}>\r\n      <ConfirmButton style={{ border: 'none' }}>{props.children}</ConfirmButton>\r\n    </animated.div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport {\r\n  ProcessedPartyT,\r\n  ArmorT,\r\n  WeaponT,\r\n  ProcessedCharacterT,\r\n} from '../../types'\r\nimport { withStyle } from 'styletron-react'\r\nimport { Icon } from '../Icon'\r\nimport { ARMOR_TYPE_ICONS } from '../../icons/maps'\r\nimport { ITEM_RARITY_COLORS } from '../../objects/Item'\r\nimport { ClickToolTip } from '../Tooltip'\r\nimport { Button } from '../../elements/button'\r\n\r\nexport interface ArmorListPropsT {\r\n  party: ProcessedPartyT\r\n  character: ProcessedCharacterT\r\n  canEquip: boolean\r\n  equipItem: (characterId: string, item: WeaponT | ArmorT) => void\r\n  setActiveItem: (item: WeaponT | ArmorT) => void\r\n}\r\n\r\nconst ArmorItem = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    marginBottom: '4px',\r\n    textShadow: '1px 1px 1px black',\r\n    background: props.$active ? 'rgba(255,255,255,0.2)' : undefined,\r\n    paddingLeft: '8px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    cursor: 'pointer',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n  }\r\n})\r\n\r\nexport const ArmorList = (props: ArmorListPropsT) => {\r\n  const { party, character, canEquip, equipItem, setActiveItem } = props\r\n  const [activeItemId, setActiveItemId] = useState<string | undefined>()\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {party.items\r\n        .filter((i) => i.itemType === 'armor')\r\n        .map((i) => i as ArmorT)\r\n        .sort((a, b) => a.name.localeCompare(b.name))\r\n        .map((armor) => (\r\n          <ClickToolTip\r\n            direction='down'\r\n            distance={-2}\r\n            content={() => (\r\n              <>\r\n                {canEquip && (\r\n                  <BoxContainer\r\n                    substyle={{\r\n                      padding: 4,\r\n                      width: 346,\r\n                      display: 'flex',\r\n                      justifyContent: 'center',\r\n                      background: '#333',\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      style={{ padding: '4px 8px' }}\r\n                      onClick={() => {\r\n                        equipItem(character.id, armor)\r\n                        setActiveItemId(undefined)\r\n                      }}\r\n                    >\r\n                      Equip\r\n                    </Button>\r\n                  </BoxContainer>\r\n                )}\r\n              </>\r\n            )}\r\n          >\r\n            {({ onClick, ref }) => (\r\n              <ArmorItem\r\n                $active={armor.id === activeItemId}\r\n                onMouseEnter={() => setActiveItem(armor)}\r\n                ref={ref}\r\n                onClick={(e: MouseEvent) => {\r\n                  e.stopPropagation()\r\n                  e.preventDefault()\r\n                  setActiveItemId(armor.id)\r\n                  onClick()\r\n                }}\r\n              >\r\n                <Icon\r\n                  src={ARMOR_TYPE_ICONS[armor.type]}\r\n                  size={14}\r\n                  style={{ marginRight: 10 }}\r\n                  fill={ITEM_RARITY_COLORS[armor.rarity]}\r\n                  shadow\r\n                />\r\n                <span style={{ color: ITEM_RARITY_COLORS[armor.rarity] }}>\r\n                  {armor.name}\r\n                </span>\r\n              </ArmorItem>\r\n            )}\r\n          </ClickToolTip>\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport {\r\n  ProcessedPartyT,\r\n  ArmorT,\r\n  WeaponT,\r\n  ProcessedCharacterT,\r\n} from '../../types'\r\nimport { withStyle } from 'styletron-react'\r\nimport { ITEM_RARITY_COLORS } from '../../objects/Item'\r\nimport { ClickToolTip } from '../Tooltip'\r\nimport { Button } from '../../elements/button'\r\n\r\nexport interface WeaponListPropsT {\r\n  party: ProcessedPartyT\r\n  character: ProcessedCharacterT\r\n  canEquip: boolean\r\n  equipItem: (characterId: string, item: WeaponT | ArmorT) => void\r\n  setActiveItem: (item: WeaponT | ArmorT) => void\r\n}\r\n\r\nconst WeaponItem = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    marginBottom: '4px',\r\n    textShadow: '1px 1px 1px black',\r\n    background: props.$active ? 'rgba(255,255,255,0.2)' : undefined,\r\n    paddingLeft: '8px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    cursor: 'pointer',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n  }\r\n})\r\n\r\nexport const WeaponList = (props: WeaponListPropsT) => {\r\n  const { party, character, canEquip, equipItem, setActiveItem } = props\r\n  const [activeItemId, setActiveItemId] = useState<string | undefined>()\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {party.items\r\n        .filter((i) => i.itemType === 'weapon')\r\n        .map((i) => i as ArmorT)\r\n        .sort((a, b) => a.name.localeCompare(b.name))\r\n        .map((weapon) => (\r\n          <ClickToolTip\r\n            direction='down'\r\n            distance={-2}\r\n            content={() => (\r\n              <>\r\n                {canEquip && (\r\n                  <BoxContainer\r\n                    substyle={{\r\n                      padding: 4,\r\n                      width: 346,\r\n                      display: 'flex',\r\n                      justifyContent: 'center',\r\n                      background: '#333',\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      style={{ padding: '4px 8px' }}\r\n                      onClick={() => {\r\n                        equipItem(character.id, weapon)\r\n                        setActiveItemId(undefined)\r\n                      }}\r\n                    >\r\n                      Equip\r\n                    </Button>\r\n                  </BoxContainer>\r\n                )}\r\n              </>\r\n            )}\r\n          >\r\n            {({ onClick, ref }) => (\r\n              <WeaponItem\r\n                $active={weapon.id === activeItemId}\r\n                onMouseEnter={() => setActiveItem(weapon)}\r\n                ref={ref}\r\n                onClick={(e: MouseEvent) => {\r\n                  e.stopPropagation()\r\n                  e.preventDefault()\r\n                  setActiveItemId(weapon.id)\r\n                  onClick()\r\n                }}\r\n              >\r\n                <span style={{ color: ITEM_RARITY_COLORS[weapon.rarity] }}>\r\n                  {weapon.name}\r\n                </span>\r\n              </WeaponItem>\r\n            )}\r\n          </ClickToolTip>\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport {\r\n  ProcessedCharacterT,\r\n  ProcessedPartyT,\r\n  WeaponT,\r\n  ArmorT,\r\n} from '../../types'\r\n\r\nimport Items from '../../icons/svg/delapouite/light-backpack.svg'\r\nimport Weapons from '../../icons/svg/lorc/broadsword.svg'\r\nimport Armor from '../../icons/svg/delapouite/leather-armor.svg'\r\nimport { Icon } from '../Icon'\r\nimport { ArmorList } from './ArmorList'\r\nimport { WeaponList } from './WeaponList'\r\n\r\nexport interface MenuOptionT {\r\n  key: string\r\n  icon: string\r\n  count: (character: ProcessedCharacterT, party: ProcessedPartyT) => number\r\n  render: (\r\n    character: ProcessedCharacterT,\r\n    party: ProcessedPartyT,\r\n    canEquip: boolean,\r\n    equipItem: (characterId: string, item: WeaponT | ArmorT) => void,\r\n    setActiveItem: (item: WeaponT | ArmorT) => void,\r\n  ) => JSX.Element\r\n}\r\nexport const ACTIVE_CHARACTER_MENU_KEYS: MenuOptionT[] = [\r\n  {\r\n    key: 'items',\r\n    icon: Items,\r\n    count: (c) => c.consumables.length,\r\n    render: (character) => <div>items</div>,\r\n  },\r\n  {\r\n    key: 'weapons',\r\n    icon: Weapons,\r\n    count: (c, p) => p.items.filter((i) => i.itemType === 'weapon').length,\r\n    render: (character, party, canEquip, equipItem, setActiveItem) => (\r\n      <WeaponList\r\n        character={character}\r\n        party={party}\r\n        canEquip={canEquip}\r\n        equipItem={equipItem}\r\n        setActiveItem={setActiveItem}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    key: 'armor',\r\n    icon: Armor,\r\n    count: (c, p) => p.items.filter((i) => i.itemType === 'armor').length,\r\n    render: (character, party, canEquip, equipItem, setActiveItem) => (\r\n      <ArmorList\r\n        character={character}\r\n        party={party}\r\n        canEquip={canEquip}\r\n        equipItem={equipItem}\r\n        setActiveItem={setActiveItem}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    key: 'ot1',\r\n    icon: '',\r\n    count: (c) => 0,\r\n    render: (character) => <div>ot1</div>,\r\n  },\r\n  {\r\n    key: 'ot2',\r\n    icon: '',\r\n    count: (c) => 0,\r\n    render: (character) => <div>ot2</div>,\r\n  },\r\n  {\r\n    key: 'ot3',\r\n    icon: '',\r\n    count: (c) => 0,\r\n    render: (character) => <div>ot3</div>,\r\n  },\r\n]\r\n\r\nexport interface MenuSelectPropsT {\r\n  character: ProcessedCharacterT\r\n  party: ProcessedPartyT\r\n  activeKey: string\r\n  onActiveKeyChange: (key: string) => void\r\n}\r\n\r\nexport const MenuSelect = (props: MenuSelectPropsT) => {\r\n  const { character, party, activeKey, onActiveKeyChange } = props\r\n\r\n  return (\r\n    <FlexContainer style={{ justifyContent: 'center', marginTop: 8 }}>\r\n      {ACTIVE_CHARACTER_MENU_KEYS.map((option) => (\r\n        <Button\r\n          style={{\r\n            padding: '4px 0',\r\n            width: 56,\r\n            fontSize: 12,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            background: option.key === activeKey ? '#444' : undefined,\r\n          }}\r\n          onClick={() => {\r\n            onActiveKeyChange(option.key)\r\n          }}\r\n        >\r\n          <FullContainer />\r\n          <FullContainer>\r\n            <Icon src={option.icon} size={14} />\r\n          </FullContainer>\r\n          <FullContainer style={{ paddingRight: 2 }}>\r\n            {option.count(character, party)}\r\n          </FullContainer>\r\n        </Button>\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StatsT } from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport {\r\n  DEFENSE_BONUS_KEYS,\r\n  DAMAGE_BONUS_KEYS,\r\n  STAT_KEY_LABELS,\r\n  STAT_BONUS_KEYS,\r\n} from '../../objects'\r\n\r\nexport interface StatsPreviewPropsT {\r\n  stats: StatsT\r\n}\r\n\r\nconst defense_key_colors: any = {\r\n  armor: 'lightblue',\r\n  resistance: 'plum',\r\n}\r\n\r\nexport const StatsPreview = (props: StatsPreviewPropsT) => {\r\n  const { stats } = props\r\n  return (\r\n    <FlexContainer $direction='column' style={{ fontSize: 14 }}>\r\n      {DEFENSE_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] > 0 && (\r\n            <span\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: defense_key_colors[key],\r\n              }}\r\n            >\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {DAMAGE_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] > 0 && (\r\n            <span style={{ textTransform: 'capitalize' }}>\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {STAT_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] > 0 && (\r\n            <span\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: 'lightgreen',\r\n              }}\r\n            >\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {STAT_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] < 0 && (\r\n            <span\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: 'lightcoral',\r\n              }}\r\n            >\r\n              {stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Color from 'color'\r\nimport { ArmorT } from '../../types'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { combineTraits } from '../../functions'\r\nimport { StatsPreview } from '../StatsPreview'\r\nimport { Icon } from '../Icon'\r\nimport { ARMOR_TYPE_ICONS } from '../../icons/maps'\r\nimport { ITEM_RARITY_COLORS } from '../../objects/Item'\r\nimport { Button } from '../../elements/button'\r\n\r\nexport interface ArmorPreviewPropsT {\r\n  armor: ArmorT\r\n  showEquipButton?: boolean\r\n  onEquipClick?: () => void\r\n}\r\nexport const ArmorPreview = (props: ArmorPreviewPropsT) => {\r\n  const { armor, showEquipButton, onEquipClick } = props\r\n  const combinedTrait = combineTraits(...armor.traits)\r\n  const rarityColor = ITEM_RARITY_COLORS[armor.rarity]\r\n  const from = Color(rarityColor).darken(0.5).rgb().toString()\r\n  const to = Color(rarityColor).darken(0.7).rgb().toString()\r\n  const gradient = `linear-gradient(180deg, ${from} 0%, ${to} 100%)`\r\n  return (\r\n    <BoxContainer style={{ minWidth: 200 }} substyle={{ background: gradient }}>\r\n      <FlexContainer $direction='column'>\r\n        <FlexContainer style={{ marginBottom: 8 }}>\r\n          <Icon\r\n            src={ARMOR_TYPE_ICONS[armor.type]}\r\n            size={32}\r\n            style={{ marginRight: 10 }}\r\n            shadow\r\n          />\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              textShadow: '1px 1px 2px rgba(0,0,0,0.8)',\r\n            }}\r\n          >\r\n            <span style={{ fontWeight: 600 }}>{armor.name}</span>\r\n            <span style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n              {armor.rarity}\r\n            </span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n          {showEquipButton && (\r\n            <div style={{ marginLeft: 10 }}>\r\n              <Button onClick={onEquipClick} style={{ padding: 4 }}>\r\n                Equip\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </FlexContainer>\r\n        <BoxContainer\r\n          substyle={{ background: 'rgba(0,0,0,0.7)', minHeight: 120 }}\r\n        >\r\n          <FlexContainer $direction='column'>\r\n            {armor.skills.length > 0 && (\r\n              <span style={{ color: 'plum', marginBottom: 8 }}>\r\n                {armor.skills.map(\r\n                  (skill, i) => `${i > 0 ? ', ' : ''}${skill.name}`,\r\n                )}\r\n              </span>\r\n            )}\r\n            <StatsPreview stats={combinedTrait.stats} />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { SkillT, StatsT } from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STATI_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Badge } from '../../elements/badge'\r\nimport { CheckKVT } from '../RoundResultRenderer'\r\nimport X from '../../icons/svg/lorc/split-cross.svg'\r\n\r\nexport interface SkillChecksPropsT {\r\n  skill: SkillT\r\n}\r\nexport const SkillChecks = (props: SkillChecksPropsT) => {\r\n  const { skill } = props\r\n  return (\r\n    <FlexContainer\r\n      style={{ justifyContent: 'center', padding: '0px 0 24px 0' }}\r\n    >\r\n      {skill.rolls.map((roll, i) => (\r\n        <SkillCheck\r\n          key={i}\r\n          check={{ label: roll.key || 'strength', result: undefined }}\r\n        />\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface SkillCheckT {\r\n  check: CheckKVT\r\n  size?: number\r\n  padding?: number\r\n}\r\nexport const SkillCheck = (props: SkillCheckT) => {\r\n  const { check, size = 36, padding = 12 } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: `0px ${padding}px`,\r\n        opacity: check.result === undefined ? 0.5 : 1,\r\n      }}\r\n    >\r\n      <Badge $absolute={false} $size={size}>\r\n        <Icon\r\n          src={STATI_ICONS[(check.label as keyof StatsT) || 'strength'] || ''}\r\n          fill={getColor(check.result)}\r\n          size={size - 4}\r\n        />\r\n        {check.result === false && (\r\n          <Icon\r\n            src={X}\r\n            fill={'lightcoral'}\r\n            size={size - 4}\r\n            style={{ position: 'absolute', top: 0 }}\r\n          />\r\n        )}\r\n      </Badge>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst getColor = (result: boolean | undefined) => {\r\n  if (result === true) return 'white'\r\n  if (result === false) return 'rgba(255,255,255,0.6)'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n","import React from 'react'\r\nimport Color from 'color'\r\nimport { ProcessedWeaponT } from '../../types'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { combineTraits } from '../../functions'\r\nimport { StatsPreview } from '../StatsPreview'\r\nimport { ITEM_RARITY_COLORS } from '../../objects/Item'\r\nimport { Button } from '../../elements/button'\r\n\r\nexport const getDamageColor = (weapon: ProcessedWeaponT) => {\r\n  if (weapon.damage.type === 'physical') return 'lightblue'\r\n  if (weapon.damage.type === 'magic') return 'plum'\r\n  return 'white'\r\n}\r\n\r\nexport interface WeaponPreviewPropsT {\r\n  weapon: ProcessedWeaponT\r\n  showEquipButton?: boolean\r\n  onEquipClick?: () => void\r\n}\r\nexport const WeaponPreview = (props: WeaponPreviewPropsT) => {\r\n  const { weapon, showEquipButton, onEquipClick } = props\r\n  const basicAttack = weapon.skills.find((s) => s.isBasicAttack)\r\n  const combinedTrait = combineTraits(...weapon.traits)\r\n  const rarityColor = ITEM_RARITY_COLORS[weapon.rarity]\r\n  const from = Color(rarityColor).darken(0.5).rgb().toString()\r\n  const to = Color(rarityColor).darken(0.7).rgb().toString()\r\n  const gradient = `linear-gradient(180deg, ${from} 0%, ${to} 100%)`\r\n  return (\r\n    <BoxContainer style={{ width: 240 }} substyle={{ background: gradient }}>\r\n      <FlexContainer $direction='column'>\r\n        {basicAttack && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginBottom: 10 }}>\r\n            {basicAttack.rolls.map((roll) => (\r\n              <SkillCheck\r\n                check={{ label: roll.key || 'strength', result: true }}\r\n                size={18}\r\n                padding={4}\r\n              />\r\n            ))}\r\n          </FlexContainer>\r\n        )}\r\n        <FlexContainer>\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              margin: '8px 0',\r\n              textShadow: '1px 1px 2px rgba(0,0,0,0.8)',\r\n            }}\r\n          >\r\n            <span style={{ fontWeight: 600 }}>{weapon.name}</span>\r\n            <span style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n              {weapon.rarity} {weapon.type}\r\n            </span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n          {showEquipButton && (\r\n            <div style={{ marginLeft: 10 }}>\r\n              <Button onClick={onEquipClick} style={{ padding: 4 }}>\r\n                Equip\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </FlexContainer>\r\n        <BoxContainer\r\n          substyle={{ background: 'rgba(0,0,0,0.7)', minHeight: 120 }}\r\n        >\r\n          <FlexContainer $direction='column'>\r\n            <FlexContainer style={{ lineHeight: '24px', marginBottom: 4 }}>\r\n              <span\r\n                style={{\r\n                  color: getDamageColor(weapon),\r\n                  fontWeight: 'bolder',\r\n                  marginRight: 8,\r\n                  fontSize: 24,\r\n                }}\r\n              >\r\n                {weapon.damage.damage}\r\n              </span>\r\n              <span style={{ textTransform: 'capitalize' }}>\r\n                {weapon.damage.type} Damage\r\n              </span>\r\n            </FlexContainer>\r\n            <span style={{ color: 'plum', marginBottom: 8 }}>\r\n              {weapon.skills.map(\r\n                (skill, i) => `${i > 0 ? ', ' : ''}${skill.name}`,\r\n              )}\r\n            </span>\r\n            <StatsPreview stats={combinedTrait.stats} />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  ProcessedCharacterT,\r\n  WeaponT,\r\n  ArmorT,\r\n  ProcessedWeaponT,\r\n} from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { ArmorPreview } from '../ArmorPreview'\r\nimport { WeaponPreview } from '../WeaponPreview'\r\n\r\nexport interface HoverAreaPropsT {\r\n  character: ProcessedCharacterT\r\n  activeItem: WeaponT | ArmorT\r\n}\r\n\r\nexport const HoverArea = (props: HoverAreaPropsT) => {\r\n  const { character, activeItem } = props\r\n\r\n  return (\r\n    <div>\r\n      {activeItem.itemType === 'armor' && (\r\n        <FlexContainer>\r\n          {character.armor.find(\r\n            (a) => a.resource === (activeItem as ArmorT).resource,\r\n          ) && (\r\n            <ArmorPreview\r\n              armor={\r\n                character.armor.find(\r\n                  (a) => a.resource === (activeItem as ArmorT).resource,\r\n                ) as ArmorT\r\n              }\r\n              showEquipButton={false}\r\n            />\r\n          )}\r\n          <ArmorPreview armor={activeItem as ArmorT} showEquipButton={false} />\r\n        </FlexContainer>\r\n      )}\r\n      {activeItem.itemType === 'weapon' && (\r\n        <FlexContainer>\r\n          <WeaponPreview weapon={character.weapon} showEquipButton={false} />\r\n          <WeaponPreview\r\n            weapon={activeItem as ProcessedWeaponT}\r\n            showEquipButton={false}\r\n          />\r\n        </FlexContainer>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useRef } from 'react'\r\nimport {\r\n  ProcessedCharacterT,\r\n  ProcessedPartyT,\r\n  WeaponT,\r\n  ArmorT,\r\n} from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { StatBar } from './StatBar'\r\nimport { Items } from './Items'\r\nimport { Name } from './Name'\r\nimport { Image } from './Image'\r\nimport { MenuSelect, ACTIVE_CHARACTER_MENU_KEYS } from './MenuSelect'\r\nimport { HoverArea } from './HoverArea'\r\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\r\nimport { Badge } from '../../elements/badge'\r\n\r\nexport interface PartyActiveCharacterPropsT {\r\n  character: ProcessedCharacterT\r\n  party: ProcessedPartyT\r\n  equipItem: (characterId: string, item: WeaponT | ArmorT) => void\r\n  canEquip: boolean\r\n  onRequestClose: () => void\r\n}\r\n\r\nexport const PartyActiveCharacter = (props: PartyActiveCharacterPropsT) => {\r\n  const { character, party, canEquip, equipItem, onRequestClose } = props\r\n  const [activeMenuKey, setActiveMenuKey] = useState('armor')\r\n  const [activeItem, setActiveItem] = useState<ArmorT | WeaponT | undefined>()\r\n  const activeOption = ACTIVE_CHARACTER_MENU_KEYS.find(\r\n    (o) => o.key === activeMenuKey,\r\n  )\r\n  return (\r\n    <FlexContainer>\r\n      <Badge\r\n        onClick={onRequestClose}\r\n        $top={-10}\r\n        $right={-2}\r\n        style={{ cursor: 'pointer', userSelect: 'none' }}\r\n      >\r\n        X\r\n      </Badge>\r\n      <FlexContainer\r\n        style={{\r\n          maxHeight: 440,\r\n          padding: 10,\r\n          position: 'absolute',\r\n          left: '-500px',\r\n          width: 486,\r\n          justifyContent: 'flex-end',\r\n        }}\r\n      >\r\n        {activeItem && (\r\n          <HoverArea character={character} activeItem={activeItem} />\r\n        )}\r\n      </FlexContainer>\r\n      <BoxContainer substyle={{ background: '#111', padding: 0 }}>\r\n        <FlexContainer $direction='column'>\r\n          <Name name={character.name} />\r\n          <StatBar character={character} />\r\n          <BoxContainer\r\n            substyle={{ background: '#111', padding: '16px 0 2px 0' }}\r\n          >\r\n            <FlexContainer>\r\n              <Items character={character} />\r\n              <Image character={character} />\r\n            </FlexContainer>\r\n            <MenuSelect\r\n              character={character}\r\n              party={party}\r\n              activeKey={activeMenuKey}\r\n              onActiveKeyChange={setActiveMenuKey}\r\n            />\r\n          </BoxContainer>\r\n          <BoxContainer\r\n            substyle={{\r\n              background: '#111',\r\n              padding: '4px 0',\r\n              height: 200,\r\n              overflow: 'auto',\r\n            }}\r\n          >\r\n            {activeOption &&\r\n              activeOption.render(\r\n                character,\r\n                party,\r\n                canEquip,\r\n                equipItem,\r\n                setActiveItem,\r\n              )}\r\n          </BoxContainer>\r\n        </FlexContainer>\r\n      </BoxContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ProcessedCharacterT, StatsT } from '../../types'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { XPGauge, HealthGauge } from '../Gauge'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Monodiv } from '../../elements/monospace'\r\nimport { styled, withStyle } from 'styletron-react'\r\nimport { HoverBadge } from '../../elements/badge'\r\nimport { Icon } from '../Icon'\r\nimport { STATI_ICONS } from '../../icons/maps'\r\nimport Details from '../../icons/svg/delapouite/skills.svg'\r\nimport Inventory from '../../icons/svg/lorc/knapsack.svg'\r\nimport { TagPreview } from '../TagPreview'\r\nimport { CharacterImage } from '../CharacterImage'\r\nimport { ConsumableT } from '../../types/Consumable'\r\nimport { PartyCharacterConsumables } from '../PartyCharacterConsumables'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { noneg } from '../../util'\r\nimport { usePrevious } from '../../hooks/usePrevious'\r\nimport { HoverToolTip, ClickToolTip } from '../Tooltip'\r\nimport { PartyActiveCharacter } from '../PartyActiveCharacter'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { Hover } from '../Hover'\r\n\r\nconst ResourceE = withStyle(Monodiv, (props: any) => ({\r\n  height: 15,\r\n  color: props.$color,\r\n  fontSize: '12px',\r\n  fontWeight: 'bolder',\r\n  padding: '0px 4px',\r\n  lineHeight: '15px',\r\n  flex: 1,\r\n  textAlign: 'center',\r\n  background: '#111',\r\n  display: 'flex',\r\n}))\r\n\r\nexport interface PartyCharacterProps {\r\n  character: ProcessedCharacterT\r\n  activeCharacter: ProcessedCharacterT\r\n  hoverable?: boolean\r\n  selected?: boolean\r\n  isHovering?: boolean\r\n  canEquip?: boolean\r\n  onClick?: () => void\r\n  onConsumableClick?: (consumable: ConsumableT, index: number) => void\r\n}\r\nconst Wrapper = styled('div', (props: any) => {\r\n  const { $selected, $active, $hoverable, $isHovering } = props\r\n  const hoverable = $hoverable && !$selected\r\n  return {\r\n    margin: 10,\r\n    position: 'relative',\r\n    boxShadow: $active ? '0px 0px 20px white' : 'none',\r\n    transition: 'all 0.4s',\r\n    userSelect: 'none',\r\n  }\r\n})\r\n\r\ninterface CharacterStatPropsT {\r\n  statKey: keyof StatsT\r\n  character: ProcessedCharacterT\r\n}\r\nconst CharacterStat = (props: CharacterStatPropsT) => {\r\n  const { statKey, character } = props\r\n  return (\r\n    <ResourceE $color={getStatColor(character, statKey)}>\r\n      <Icon\r\n        src={STATI_ICONS[statKey] || ''}\r\n        fill={getStatColor(character, statKey)}\r\n        size={14}\r\n        style={{ marginRight: 4 }}\r\n      />\r\n      {character.stats[statKey]}\r\n    </ResourceE>\r\n  )\r\n}\r\n\r\nconst getStatColor = (\r\n  character: ProcessedCharacterT,\r\n  key: keyof StatsT,\r\n): string => {\r\n  const a = character.stats[key]\r\n  const b = character.rawStats[key]\r\n  if (a > b) return 'lightgreen'\r\n  if (b > a) return 'lightcoral'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n\r\nexport const PartyCharacter = (props: PartyCharacterProps) => {\r\n  const {\r\n    character,\r\n    activeCharacter,\r\n    hoverable,\r\n    selected,\r\n    isHovering,\r\n    canEquip = false,\r\n    onClick,\r\n    onConsumableClick,\r\n  } = props\r\n  const { party, equipItem } = usePartyContext()\r\n  const health = noneg(character.health - character.stats.healthOffset)\r\n  const previousHealth = usePrevious<number>(health)\r\n  return (\r\n    <Wrapper\r\n      $hoverable={hoverable && !character.dead}\r\n      $active={character.id === activeCharacter.id}\r\n      $selected={selected}\r\n      $isHovering={isHovering}\r\n      style={{\r\n        opacity: character.dead ? 0.5 : 1,\r\n      }}\r\n    >\r\n      <BoxContainer\r\n        onClick={() => (onClick && !character.dead ? onClick() : null)}\r\n        style={{\r\n          borderWidth: 2,\r\n          cursor: onClick ? 'pointer' : 'default',\r\n        }}\r\n        substyle={{ padding: 0, minWidth: 420 }}\r\n      >\r\n        <FlexContainer style={{ border: '2px solid black' }}>\r\n          <FlexContainer style={{ borderRight: '2px solid black' }}>\r\n            <CharacterImage character={character} size={115} />\r\n          </FlexContainer>\r\n          <FlexContainer $full $direction='column'>\r\n            <FlexContainer\r\n              style={{\r\n                marginTop: -3,\r\n                marginRight: -3,\r\n                padding: '0 4px',\r\n                paddingLeft: 8,\r\n                background: '#555',\r\n                height: 20,\r\n                lineHeight: '24px',\r\n                borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n                boxShadow: '0px 4px 5px black',\r\n                zIndex: 2,\r\n              }}\r\n            >\r\n              <span\r\n                style={{\r\n                  fontWeight: 'bolder',\r\n                  textShadow: '0px 0px 2px black',\r\n                }}\r\n              >\r\n                {character.name}\r\n              </span>\r\n            </FlexContainer>\r\n            <FlexContainer>\r\n              <span\r\n                style={{\r\n                  fontWeight: 'bolder',\r\n                  padding: 4,\r\n                  fontSize: 42,\r\n                  height: 62,\r\n                  lineHeight: '70px',\r\n                  color: '#b55553',\r\n                }}\r\n              >\r\n                <Spring\r\n                  from={{ hp: previousHealth || health }}\r\n                  to={{ hp: health }}\r\n                >\r\n                  {(hpp) => <span>{Math.floor(hpp.hp)}</span>}\r\n                </Spring>\r\n              </span>\r\n              <FlexContainer $full style={{ maxWidth: 175, minWidth: 175 }}>\r\n                <PartyCharacterConsumables\r\n                  character={character}\r\n                  consumables={character.consumables}\r\n                  onClick={onConsumableClick}\r\n                />\r\n              </FlexContainer>\r\n              <FlexContainer $full $direction='column'>\r\n                <FullContainer />\r\n                <FlexContainer>\r\n                  <FlexContainer\r\n                    $full\r\n                    style={{ alignItems: 'center', justifyContent: 'center' }}\r\n                  >\r\n                    <ClickToolTip\r\n                      distance={80}\r\n                      content={({ onClick }) => (\r\n                        <PartyActiveCharacter\r\n                          character={character}\r\n                          party={party}\r\n                          equipItem={equipItem}\r\n                          canEquip={canEquip}\r\n                          onRequestClose={onClick}\r\n                        />\r\n                      )}\r\n                    >\r\n                      {({ onClick, ref }) => (\r\n                        <div onClick={onClick}>\r\n                          <Hover delay={0}>\r\n                            {({ isHovering }) => (\r\n                              <Icon\r\n                                src={Inventory}\r\n                                fill={\r\n                                  isHovering\r\n                                    ? 'rgba(255,255,255,1)'\r\n                                    : 'rgba(255,255,255,0.7)'\r\n                                }\r\n                                size={18}\r\n                                shadow\r\n                                style={{ padding: 6, cursor: 'pointer' }}\r\n                              />\r\n                            )}\r\n                          </Hover>\r\n                        </div>\r\n                      )}\r\n                    </ClickToolTip>\r\n                  </FlexContainer>\r\n                  <FlexContainer\r\n                    $full\r\n                    style={{ alignItems: 'center', justifyContent: 'center' }}\r\n                  >\r\n                    <Icon\r\n                      src={Details}\r\n                      fill={'rgba(255,255,255,0.7)'}\r\n                      size={18}\r\n                      shadow\r\n                      style={{ padding: 6, cursor: 'pointer' }}\r\n                    />\r\n                  </FlexContainer>\r\n                </FlexContainer>\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n            <FullContainer />\r\n            <HealthGauge character={character} />\r\n            <XPGauge character={character} />\r\n            <HoverBadge\r\n              badgeProps={{ $bottom: '18px', $left: '105px' }}\r\n              content={<BoxContainer>Character Level</BoxContainer>}\r\n            >\r\n              <span>{character.level}</span>\r\n            </HoverBadge>\r\n            <FlexContainer>\r\n              <CharacterStat statKey='strength' character={character} />\r\n              <CharacterStat statKey='vigor' character={character} />\r\n              <CharacterStat statKey='intelligence' character={character} />\r\n              <CharacterStat statKey='perception' character={character} />\r\n              <CharacterStat statKey='talent' character={character} />\r\n              <CharacterStat statKey='agility' character={character} />\r\n              <CharacterStat statKey='luck' character={character} />\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </BoxContainer>\r\n      <FlexContainer\r\n        style={{\r\n          position: 'absolute',\r\n          top: '-24px',\r\n          right: '4px',\r\n        }}\r\n      >\r\n        {character.statusEffects.map((tag) => (\r\n          <TagPreview direction='up' tag={tag} />\r\n        ))}\r\n      </FlexContainer>\r\n      <HoverBadge\r\n        badgeProps={{ $bottom: '64px', $left: '-12px', $color: 'lightblue' }}\r\n        content={<BoxContainer>Armor</BoxContainer>}\r\n      >\r\n        <span>{character.stats.armor}</span>\r\n      </HoverBadge>\r\n      <HoverBadge\r\n        badgeProps={{ $bottom: '26px', $left: '-12px', $color: 'plum' }}\r\n        content={<BoxContainer>Magic Resistance</BoxContainer>}\r\n      >\r\n        <span>{character.stats.resistance}</span>\r\n      </HoverBadge>\r\n      <HoverBadge\r\n        badgeProps={{ $bottom: '-10px', $left: '-12px', $color: 'lightgreen' }}\r\n        content={<BoxContainer>Evasion</BoxContainer>}\r\n      >\r\n        <span>{character.stats.evasion}</span>\r\n      </HoverBadge>\r\n      <HoverBadge\r\n        direction='up'\r\n        content={<BoxContainer>Weapon Damage</BoxContainer>}\r\n        badgeProps={{\r\n          $bottom: '-12px',\r\n          $left: '40px',\r\n          $size: '35px',\r\n          $color:\r\n            character.weapon.damage.type === 'physical'\r\n              ? 'rgba(255,255,255,0.8)'\r\n              : 'plum',\r\n          style: { fontSize: 24 },\r\n        }}\r\n      >\r\n        <span>\r\n          {character.weapon.damage.damage + character.stats.damageModifier}\r\n        </span>\r\n      </HoverBadge>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { ProcessedPartyT } from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { PartyCharacter } from '../PartyCharacter'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { ConfirmButton } from '../../elements/button'\r\n\r\nexport interface CombatPartyPlayerPropsT {\r\n  party: ProcessedPartyT\r\n}\r\nexport const CombatPlayerParty = (props: CombatPartyPlayerPropsT) => {\r\n  const { party } = props\r\n  const {\r\n    activeCharacter,\r\n    selectedSkill,\r\n    onTargetsSelect,\r\n    onSkillSelect,\r\n    next,\r\n  } = useCombatContext()\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false)\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          alignItems: 'flex-end',\r\n          cursor: selectedSkill?.targetType === 'party' ? 'pointer' : 'default',\r\n        }}\r\n        onMouseEnter={() => setIsHovering(true)}\r\n        onMouseLeave={() => setIsHovering(false)}\r\n        onClick={() => {\r\n          if (selectedSkill && selectedSkill.targetType === 'party') {\r\n            onTargetsSelect(party)\r\n          }\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <div key={c.id}>\r\n            {selectedSkill &&\r\n              !c.dead &&\r\n              ((selectedSkill.targetType === 'self' &&\r\n                c.id === activeCharacter.id) ||\r\n                selectedSkill.targetType === 'ally') && (\r\n                <FlexContainer style={{ justifyContent: 'center' }}>\r\n                  <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n                    <ConfirmButton onClick={() => next(c)} $direction='up'>\r\n                      Confirm Target\r\n                    </ConfirmButton>\r\n                  </div>\r\n                </FlexContainer>\r\n              )}\r\n            <PartyCharacter\r\n              activeCharacter={activeCharacter}\r\n              character={c}\r\n              onConsumableClick={(consumable, index) => {\r\n                if (c.id === activeCharacter.id) {\r\n                  onSkillSelect(consumable.skill, index)\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && selectedSkill.targetType === 'party' && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n            <ConfirmButton\r\n              onClick={() => next(party)}\r\n              onMouseEnter={() => setIsHovering(true)}\r\n              onMouseLeave={() => setIsHovering(false)}\r\n            >\r\n              Confirm Group Target\r\n            </ConfirmButton>\r\n          </div>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { ModalStylesT } from '.'\r\n\r\nexport interface ModalContextStateT {\r\n  isOpen: boolean\r\n  contents: JSX.Element | null\r\n  callback: ((payload?: any) => void) | null\r\n  payload: any | null\r\n  blocking: boolean\r\n  styles: ModalStylesT\r\n}\r\nexport const initialState: ModalContextStateT = {\r\n  isOpen: false,\r\n  contents: null,\r\n  callback: null,\r\n  payload: null,\r\n  blocking: false,\r\n  styles: {},\r\n}\r\n\r\nexport const OPEN = 'modalContext/OPEN'\r\nexport const CLOSE = 'modalContext/CLOSE'\r\nexport const SET_CONTENTS = 'modalContext/SET_CONTENTS'\r\nexport const SET_CALLBACK = 'modalContext/SET_CALLBACK'\r\nexport const SET_PAYLOAD = 'modalContext/SET_PAYLOAD'\r\nexport const SET_BLOCKING = 'modalContext/SET_BLOCKING'\r\nexport const SET_STYLE = 'modalContext/SET_STYLE'\r\n\r\nexport const actions = {\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => ({\r\n    type: OPEN,\r\n    contents,\r\n    styles,\r\n    blocking,\r\n    callback,\r\n  }),\r\n  close: () => ({ type: CLOSE }),\r\n  setPayload: (payload: any) => ({ type: SET_PAYLOAD, payload }),\r\n  setContents: (contents: JSX.Element | null) => ({\r\n    type: SET_CONTENTS,\r\n    contents,\r\n  }),\r\n  setCallback: (callback: (() => void) | null) => ({\r\n    type: SET_CALLBACK,\r\n    callback,\r\n  }),\r\n  setBlocking: (blocking: boolean) => ({ type: SET_BLOCKING, blocking }),\r\n  setStyles: (styles: ModalStylesT) => ({ type: SET_STYLE, styles }),\r\n}\r\n\r\nconst core: Record<\r\n  string,\r\n  (state: ModalContextStateT, action: any) => ModalContextStateT\r\n> = {\r\n  [OPEN]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    isOpen: true,\r\n    contents: action.contents ? action.contents : state.contents,\r\n    styles: action.styles ? action.styles : state.styles || {},\r\n    blocking: action.blocking || false,\r\n    callback: action.callback ? action.callback : state.callback,\r\n  }),\r\n  [CLOSE]: (state: ModalContextStateT) => ({\r\n    ...state,\r\n    isOpen: false,\r\n  }),\r\n  [SET_PAYLOAD]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    payload: action.payload,\r\n  }),\r\n  [SET_CONTENTS]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: null,\r\n    payload: null,\r\n    contents: action.contents,\r\n    blocking: false,\r\n    style: {},\r\n  }),\r\n  [SET_CALLBACK]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: action.callback,\r\n  }),\r\n  [SET_BLOCKING]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    blocking: action.blocking,\r\n  }),\r\n  [SET_STYLE]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    styles: action.styles,\r\n  }),\r\n}\r\n\r\nexport const reducer = (\r\n  state: ModalContextStateT = initialState,\r\n  action: any,\r\n) => {\r\n  const coreFunction = core[action.type]\r\n  return coreFunction ? coreFunction(state, action) : state\r\n}\r\n","import React, { useContext, useReducer, useMemo, CSSProperties } from 'react'\r\nimport Modal from 'react-modal'\r\nimport { actions, reducer, initialState, ModalContextStateT } from './reducer'\r\n\r\nexport interface ModalContextT {\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => void\r\n  close: (payload?: any) => void\r\n  setPayload: (payload: any) => void\r\n  setBlocking: (blocking: boolean) => void\r\n  setContents: (contents: JSX.Element) => void\r\n  setCallback: (callback: (payload?: any) => void) => void\r\n  setStyles: (styles: ModalStylesT) => void\r\n}\r\nconst defaultContext: ModalContextT = {\r\n  open: () => null,\r\n  close: () => null,\r\n  setBlocking: () => null,\r\n  setPayload: () => null,\r\n  setContents: () => null,\r\n  setCallback: () => null,\r\n  setStyles: () => null,\r\n}\r\nexport const ModalContext = React.createContext<ModalContextT>(defaultContext)\r\nexport const useModalContext = () => useContext(ModalContext)\r\n\r\nexport interface ModalStylesT {\r\n  modal?: CSSProperties\r\n  overlay?: CSSProperties\r\n}\r\n\r\nconst getContextValue = (\r\n  state: ModalContextStateT,\r\n  dispatch: React.Dispatch<any>,\r\n) => ({\r\n  isOpen: state.isOpen,\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => {\r\n    dispatch(actions.open(contents, styles, blocking, callback))\r\n  },\r\n  close: (payload?: any) => {\r\n    if (state.callback) state.callback(payload || state.payload)\r\n    dispatch(actions.close())\r\n  },\r\n  setPayload: (payload: any) => dispatch(actions.setPayload(payload)),\r\n  setContents: (contents: JSX.Element) =>\r\n    dispatch(actions.setContents(contents)),\r\n  setCallback: (callback: (payload?: any) => void) =>\r\n    dispatch(actions.setCallback(callback)),\r\n  setBlocking: (blocking: boolean) => dispatch(actions.setBlocking(blocking)),\r\n  setStyles: (styles: ModalStylesT) => dispatch(actions.setStyles(styles)),\r\n})\r\nModal.setAppElement('#root')\r\nexport interface ModalContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const ModalContextProvider = (props: ModalContextProviderPropsT) => {\r\n  const { children } = props\r\n  const reducerValue = useReducer(reducer, initialState)\r\n  const [state] = reducerValue\r\n  const context = useMemo(() => getContextValue(...reducerValue), [\r\n    reducerValue,\r\n  ])\r\n\r\n  return (\r\n    <ModalContext.Provider value={context}>\r\n      {children}\r\n      <Modal\r\n        isOpen={state.isOpen}\r\n        onRequestClose={() => {\r\n          if (!state.blocking) context.close()\r\n        }}\r\n        style={{\r\n          content: {\r\n            backgroundColor: '#111',\r\n            color: 'white',\r\n            width: 400,\r\n            margin: '0 auto',\r\n            bottom: 'unset',\r\n            borderColor: '#555',\r\n            ...state.styles.modal,\r\n          },\r\n          overlay: {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n            zIndex: 900,\r\n            ...state.styles.overlay,\r\n          },\r\n        }}\r\n      >\r\n        {state.contents || <div />}\r\n      </Modal>\r\n    </ModalContext.Provider>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { NameSpanBuilder } from '../../contexts/CombatLogContext/util'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport Kefir from 'kefir'\r\nimport { SkillCheck } from '../SkillChecks'\r\n\r\nexport interface RoundResultRendererPropsT {\r\n  isModal?: boolean\r\n}\r\nexport const RoundResultRenderer = (props: RoundResultRendererPropsT) => {\r\n  const { isModal = true } = props\r\n  const { activeRound, isRunning, commit } = useCombatContext()\r\n  const { open, close } = useModalContext()\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (activeRound && !isOpen && isRunning) {\r\n      setIsOpen(true)\r\n      if (isModal) {\r\n        open(\r\n          <RoundResult\r\n            close={() => {\r\n              close(true)\r\n              setIsOpen(false)\r\n              commit()\r\n            }}\r\n          />,\r\n          {\r\n            overlay: {\r\n              background: 'transparent',\r\n            },\r\n          },\r\n          true,\r\n        )\r\n      }\r\n    }\r\n  }, [isRunning, isModal, isOpen, activeRound, open, close, commit])\r\n\r\n  if (!isModal && activeRound && activeRound[0] && isRunning) {\r\n    return (\r\n      <FlexContainer style={{ height: 315 }}>\r\n        <RoundResult\r\n          close={() => {\r\n            setIsOpen(false)\r\n            commit()\r\n          }}\r\n        />\r\n      </FlexContainer>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport interface RoundResultPropsT {\r\n  close: () => void\r\n}\r\nexport interface CheckKVT {\r\n  label: string\r\n  result: boolean | undefined\r\n}\r\nexport const RoundResult = (props: RoundResultPropsT) => {\r\n  const { close } = props\r\n  const { activeRound } = useCombatContext()\r\n  const [isDone, setIsDone] = useState(false)\r\n  const rounds = activeRound || []\r\n  const round = rounds[0]\r\n  const [roundResults, setRoundResults] = useState<CheckKVT[]>(\r\n    !round\r\n      ? []\r\n      : round.rollResults.map((result, i) => ({\r\n          label: round.skill.rolls[i].key || '<NULL>',\r\n          result: undefined,\r\n        })),\r\n  )\r\n\r\n  const updateRoundResult = (value: CheckKVT, index: number) =>\r\n    setRoundResults((r) => r.map((r, i) => (i === index ? value : r)))\r\n\r\n  useEffect(() => {\r\n    const stream = Kefir.sequentially(\r\n      200,\r\n      roundResults.map((r, i) => ({ ...r, index: i })),\r\n    )\r\n    stream.onValue((result) => {\r\n      updateRoundResult(\r\n        {\r\n          label: result.label,\r\n          result:\r\n            result.label === 'accuracy'\r\n              ? round.accuracySuccess\r\n              : round.rollResults[result.index].result,\r\n        },\r\n        result.index,\r\n      )\r\n    })\r\n    stream.onEnd(() => {\r\n      Kefir.later(500, undefined).onValue(() => {\r\n        setIsDone(true)\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (isDone) {\r\n      close()\r\n    }\r\n  }, [isDone, close])\r\n\r\n  if (!round) return null\r\n\r\n  const target = {\r\n    ...round.target,\r\n    name: rounds.length > 1 ? `${rounds.length} characters` : round.target.name,\r\n  }\r\n\r\n  return (\r\n    <FlexContainer $direction='column' style={{ textAlign: 'center' }}>\r\n      <FlexContainer style={{ justifyContent: 'space-evenly' }}>\r\n        {roundResults.map((result, i) => (\r\n          <SkillCheck key={i} check={result} />\r\n        ))}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { SkillT, ProcessedCharacterT } from '../../types'\r\nimport {\r\n  getChecksProbability,\r\n  getSkillDamageRange,\r\n  getSkillDamage,\r\n  getPerfectText,\r\n} from '../../functions'\r\n\r\nexport interface SkillPreviewPropsT {\r\n  skill: SkillT\r\n  source: ProcessedCharacterT\r\n  targets: ProcessedCharacterT[]\r\n}\r\nexport const SkillPreview = (props: SkillPreviewPropsT) => {\r\n  const { skill, source, targets } = props\r\n  const perfectChance = getChecksProbability(source, skill.rolls)\r\n  const damage = getSkillDamage(skill, source)\r\n  const damageString = getSkillDamageRange(\r\n    skill,\r\n    source,\r\n    targets.length === 0 ? undefined : targets,\r\n  )\r\n  const perfectKeys = getPerfectText(skill, source)\r\n  return (\r\n    <BoxContainer\r\n      style={{ marginTop: 30, position: 'relative' }}\r\n      substyle={{ background: '#111' }}\r\n    >\r\n      <FlexContainer $direction='column' style={{ alignItems: 'center' }}>\r\n        <FlexContainer style={{ marginTop: -27 }}>\r\n          <FullContainer />\r\n          <BoxContainer\r\n            substyle={{\r\n              padding: '4px 12px',\r\n              background: '#555',\r\n              fontWeight: 'bolder',\r\n            }}\r\n          >\r\n            {skill.name}\r\n          </BoxContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n        <span\r\n          style={{\r\n            color: 'rgba(255,255,255,0.4)',\r\n            marginTop: 8,\r\n            marginBottom: 8,\r\n          }}\r\n        >\r\n          Perfect ({Math.floor(perfectChance * 100)}%){' '}\r\n          {perfectKeys.length > 0 && '='} {perfectKeys}\r\n        </span>\r\n        <FlexContainer $full style={{ width: '100%', marginBottom: 8 }}>\r\n          {damage.damage > 0 && skill.damage && (\r\n            <FlexContainer\r\n              $full\r\n              $direction='column'\r\n              style={{ alignItems: 'center', marginRight: 10 }}\r\n            >\r\n              <span\r\n                style={{\r\n                  color: damage.type === 'physical' ? 'lightblue' : 'plum',\r\n                  fontWeight: 'bolder',\r\n                  fontSize: 32,\r\n                }}\r\n              >\r\n                {damageString}\r\n              </span>\r\n              <span style={{ color: 'rgba(255,255,255,0.2)' }}>Max DMG</span>\r\n            </FlexContainer>\r\n          )}\r\n          {skill.rolls.length > 0 && (\r\n            <FlexContainer\r\n              $full\r\n              $direction='column'\r\n              style={{ alignItems: 'center' }}\r\n            >\r\n              <span\r\n                style={{\r\n                  fontWeight: 'bolder',\r\n                  fontSize: 32,\r\n                }}\r\n              >\r\n                {source.stats[skill.rolls[0].key || 'strength'] +\r\n                  (skill.rolls[0].offset || 0)}\r\n                %\r\n              </span>\r\n              <span style={{ color: 'rgba(255,255,255,0.2)' }}>\r\n                Per Check ACC\r\n              </span>\r\n            </FlexContainer>\r\n          )}\r\n        </FlexContainer>\r\n        <FlexContainer style={{ marginBottom: -18 }}>\r\n          <FullContainer />\r\n          <BoxContainer\r\n            substyle={{ padding: '0px 12px', background: '#555', fontSize: 10 }}\r\n          >\r\n            {skill.targetType}\r\n          </BoxContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { Button } from '../../elements/button'\r\nimport { SkillPreview } from '../SkillPreview'\r\nimport { SkillChecks } from '../SkillChecks'\r\nimport { PLAYER_PARTY_ID } from '../../objects/Party'\r\nimport { SKILL_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Hover } from '../Hover'\r\n\r\nexport const CombatActions = () => {\r\n  const {\r\n    activeCharacter,\r\n    selectedSkill,\r\n    selectedTargets,\r\n    onSkillSelect,\r\n  } = useCombatContext()\r\n\r\n  if (!activeCharacter || activeCharacter.partyId !== PLAYER_PARTY_ID)\r\n    return null\r\n\r\n  return (\r\n    <FlexContainer $direction='column' style={{ minWidth: 340 }}>\r\n      {selectedSkill && <SkillChecks skill={selectedSkill} />}\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        {activeCharacter.skills.map((skill) => (\r\n          <React.Fragment key={skill.id}>\r\n            {SKILL_ICONS[skill.id] ? (\r\n              <Hover delay={0}>\r\n                {({ isHovering }) => (\r\n                  <Icon\r\n                    src={SKILL_ICONS[skill.id]}\r\n                    size={42}\r\n                    shadow={true}\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      padding: '0 12px',\r\n                    }}\r\n                    onClick={() => onSkillSelect(skill)}\r\n                    fill={\r\n                      skill.id === selectedSkill?.id\r\n                        ? 'lightsalmon'\r\n                        : isHovering\r\n                        ? 'white'\r\n                        : 'rgba(255,255,255,0.8)'\r\n                    }\r\n                  />\r\n                )}\r\n              </Hover>\r\n            ) : (\r\n              <Button\r\n                key={skill.id}\r\n                onClick={() => onSkillSelect(skill)}\r\n                style={{\r\n                  background: '#111',\r\n                  borderColor:\r\n                    selectedSkill && skill.id === selectedSkill.id\r\n                      ? 'white'\r\n                      : undefined,\r\n                }}\r\n              >\r\n                {skill.name}\r\n              </Button>\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && (\r\n        <SkillPreview\r\n          skill={selectedSkill}\r\n          source={activeCharacter}\r\n          targets={selectedTargets}\r\n        />\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ProcessedCharacterT } from '../../types'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { HealthGauge } from '../Gauge'\r\nimport { styled } from 'styletron-react'\r\nimport { Badge, HoverBadge } from '../../elements/badge'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { TagPreview } from '../TagPreview'\r\nimport { CharacterImage } from '../CharacterImage'\r\nimport { usePrevious } from '../../hooks/usePrevious'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { noneg } from '../../util'\r\n\r\nexport interface EnemyCharacterPropsT {\r\n  character: ProcessedCharacterT\r\n  activeCharacter: ProcessedCharacterT\r\n  hoverable?: boolean\r\n  selected?: boolean\r\n  isHovering?: boolean\r\n  onClick?: () => void\r\n}\r\nconst Wrapper = styled('div', (props: any) => {\r\n  const { $selected, $active, $hoverable, $isHovering } = props\r\n  const hoverable = $hoverable && !$selected\r\n  return {\r\n    margin: 10,\r\n    boxShadow: $active ? '0px 0px 20px white' : 'none',\r\n    transition: 'all 0.1s',\r\n  }\r\n})\r\nexport const EnemyCharacter = (props: EnemyCharacterPropsT) => {\r\n  const { character, activeCharacter, onClick } = props\r\n  const health = noneg(character.health - character.stats.healthOffset)\r\n  const previousHealth = usePrevious<number>(health)\r\n  return (\r\n    <div\r\n      onClick={() => (onClick && !character.dead ? onClick() : null)}\r\n      style={{\r\n        borderWidth: 2,\r\n        width: 380,\r\n        position: 'relative',\r\n        cursor: onClick ? 'pointer' : 'default',\r\n        color: 'rgba(255,255,255,0.8)',\r\n        opacity: character.dead ? 0.5 : 1,\r\n      }}\r\n    >\r\n      <FlexContainer style={{ alignItems: 'center' }}>\r\n        <FlexContainer style={{ border: '1px solid black' }}>\r\n          <Wrapper\r\n            $active={character.id === activeCharacter.id}\r\n            style={{\r\n              height: 64,\r\n              width: 64,\r\n            }}\r\n          >\r\n            <CharacterImage character={character} size={64} />\r\n          </Wrapper>\r\n        </FlexContainer>\r\n        <FlexContainer $full $direction='column'>\r\n          <FlexContainer\r\n            style={{\r\n              justifyContent: 'flex-end',\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                padding: '2px 4px',\r\n                textAlign: 'right',\r\n                fontSize: 18,\r\n                lineHeight: '18px',\r\n                background: 'rgba(0,0,0,0.4)',\r\n                textShadow: '1px 1px 2px black',\r\n              }}\r\n            >\r\n              {character.name}\r\n            </span>\r\n          </FlexContainer>\r\n          <div style={{ boxShadow: '0px 5px 15px rgba(0,0,0,0.4)' }}>\r\n            <HealthGauge character={character} height={20} />\r\n          </div>\r\n          <HoverBadge\r\n            direction='down'\r\n            content={<BoxContainer>Enemy Level</BoxContainer>}\r\n            badgeProps={{\r\n              $left: '-6px',\r\n              $bottom: '-6px',\r\n              $size: '20px',\r\n              $color: 'lightcoral',\r\n            }}\r\n          >\r\n            <span>{character.level}</span>\r\n          </HoverBadge>\r\n          <FlexContainer\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: '-10px',\r\n              left: '70px',\r\n            }}\r\n          >\r\n            {character.statusEffects.map((tag, i) => (\r\n              <TagPreview key={i} tag={tag} />\r\n            ))}\r\n          </FlexContainer>\r\n          <FlexContainer\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: '-6px',\r\n              right: '16px',\r\n              width: 52,\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <FullContainer />\r\n            {character.stats.armor > 0 && (\r\n              <Badge\r\n                $absolute={false}\r\n                $right='4px'\r\n                $size='12px'\r\n                $color='lightblue'\r\n              >\r\n                {character.stats.armor}\r\n              </Badge>\r\n            )}\r\n            {character.stats.resistance > 0 && (\r\n              <Badge $absolute={false} $size='12px' $color='plum'>\r\n                {character.stats.resistance}\r\n              </Badge>\r\n            )}\r\n            <FullContainer />\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n        <span\r\n          style={{\r\n            fontWeight: 'bolder',\r\n            fontSize: 52,\r\n            height: 52,\r\n            width: 60,\r\n            textShadow: '1px 1px 10px black',\r\n            color: '#b55553',\r\n          }}\r\n        >\r\n          <Spring from={{ hp: previousHealth || health }} to={{ hp: health }}>\r\n            {(hpp) => <span>{Math.floor(hpp.hp)}</span>}\r\n          </Spring>\r\n        </span>\r\n      </FlexContainer>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { ProcessedPartyT } from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { ConfirmButton2, ConfirmButton } from '../../elements/button'\r\nimport { EnemyCharacter } from '../EnemyCharacter'\r\nimport { PLAYER_PARTY_ID } from '../../objects/Party'\r\n\r\nexport interface CombatPartyPropsT {\r\n  party: ProcessedPartyT\r\n}\r\nexport const CombatParty = (props: CombatPartyPropsT) => {\r\n  const { party } = props\r\n  const {\r\n    activeCharacter,\r\n    selectedSkill,\r\n    onTargetsSelect,\r\n    next,\r\n  } = useCombatContext()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          cursor: selectedSkill?.targetType === 'group' ? 'pointer' : 'default',\r\n        }}\r\n        onClick={() => {\r\n          if (selectedSkill && selectedSkill.targetType === 'group') {\r\n            onTargetsSelect(party)\r\n          }\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <div key={c.id}>\r\n            <EnemyCharacter activeCharacter={activeCharacter} character={c} />\r\n            {selectedSkill &&\r\n              selectedSkill.targetType === 'single' &&\r\n              !c.dead &&\r\n              activeCharacter.partyId === PLAYER_PARTY_ID && (\r\n                <FlexContainer\r\n                  style={{ justifyContent: 'center', marginTop: -13 }}\r\n                >\r\n                  <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n                    <ConfirmButton onClick={() => next(c)} $direction='down'>\r\n                      Attack\r\n                    </ConfirmButton>\r\n                  </div>\r\n                </FlexContainer>\r\n              )}\r\n          </div>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && selectedSkill.targetType === 'group' && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n            <ConfirmButton onClick={() => next(party)}>\r\n              Attack Group\r\n            </ConfirmButton>\r\n          </div>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\n\r\nexport interface AppHeaderPropsT {\r\n  children?: JSX.Element\r\n  left?: JSX.Element\r\n  right?: JSX.Element\r\n}\r\n\r\nexport const AppHeader = (props: AppHeaderPropsT) => {\r\n  const { children, left, right } = props\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'center',\r\n          background: '#111',\r\n          height: 52,\r\n          borderBottom: '2px solid rgba(255,255,255,0.3)',\r\n          boxShadow: '1px 1px 1px black',\r\n        }}\r\n      >\r\n        <FlexContainer $full>{left}</FlexContainer>\r\n        <FlexContainer $full>{children}</FlexContainer>\r\n        <FlexContainer $full>{right}</FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  CombatQueueT,\r\n  getFirst,\r\n  getSortedIds,\r\n  getMax,\r\n} from '../../types/CombatQueue'\r\nimport { ProcessedCharacterT } from '../../types'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button, RedButton } from '../../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { AppHeader } from '../AppHeader'\r\n\r\nconst size = 40\r\nexport interface CombatQueuePropsT {\r\n  queue: CombatQueueT\r\n  characters: ProcessedCharacterT[]\r\n}\r\nexport const CombatQueue = (props: CombatQueuePropsT) => {\r\n  const { queue, characters } = props\r\n  const history = useHistory()\r\n  const first = characters.find(\r\n    (c) => c.id === getFirst(queue),\r\n  ) as ProcessedCharacterT\r\n  const sortedIds = getSortedIds(queue)\r\n  const bigList = [\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n  ]\r\n  const count = Math.floor((800 - 52) / size)\r\n  const [f, ...list] = Array(count)\r\n    .fill(null)\r\n    .map((_, i) => bigList[i])\r\n    .map((id) => characters.find((c) => c.id === id))\r\n    .filter((c) => c !== undefined)\r\n  const max = getMax(queue)\r\n  const min = 50\r\n  const widthCoef = max > min ? 100 / max : 100 / min\r\n  return (\r\n    <AppHeader\r\n      left={\r\n        <>\r\n          <RedButton onClick={() => history.push('/JSFTK_combat/party')}>\r\n            Edit Party\r\n          </RedButton>\r\n          <Button onClick={() => history.push('/JSFTK_combat')}>Restart</Button>\r\n        </>\r\n      }\r\n    >\r\n      <FlexContainer\r\n        style={{\r\n          width: 800,\r\n          flexDirection: 'row-reverse',\r\n          boxShadow: '0px 0px 3px black',\r\n          borderLeft: '1px solid rgba(255,255,255,0.3)',\r\n          background: '#222',\r\n        }}\r\n      >\r\n        <FlexContainer>\r\n          <img\r\n            alt='profile'\r\n            height='64'\r\n            width='64'\r\n            src={`https://picsum.photos/seed/${first.name}/115/115`}\r\n            style={{\r\n              height: 64,\r\n              width: 64,\r\n              border: '2px solid rgba(255,255,255,0.8)',\r\n              borderTop: 'none',\r\n              boxShadow: '1px 1px 1px black',\r\n              zIndex: 2,\r\n            }}\r\n          />\r\n        </FlexContainer>\r\n        <FlexContainer $full $direction='column'>\r\n          <FullContainer />\r\n          <FlexContainer $full style={{ position: 'relative' }}>\r\n            {characters\r\n              .filter((c) => c.id !== first.id && !c.dead)\r\n              .map((c, i) => (\r\n                <div\r\n                  key={`${c?.id}-${i}`}\r\n                  style={{\r\n                    height: size - 10,\r\n                    width: size - 7,\r\n                    position: 'absolute',\r\n                    bottom: '0px',\r\n                    right: `calc(${queue[c.id] * widthCoef}% - ${size - 6}px)`,\r\n                    transition: 'all 0.3s',\r\n                  }}\r\n                >\r\n                  <img\r\n                    alt={`${queue[c?.id || '']}`}\r\n                    height={size}\r\n                    width={size}\r\n                    src={`https://picsum.photos/seed/${c?.name}/115/115`}\r\n                    style={{\r\n                      height: size - 10,\r\n                      width: size - 7,\r\n                      border: '1px solid rgba(255,255,255,0.5)',\r\n                      borderBottom: 'none',\r\n                    }}\r\n                  />\r\n                </div>\r\n              ))}\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </AppHeader>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { CharacterT, PartyT, SkillT } from '../../types'\r\n\r\nexport const Span = (color: string, text: JSX.Element | string) => (\r\n  <span style={{ color, fontWeight: 'bold' }}>{text}</span>\r\n)\r\nexport const SkillSpan = (skill: SkillT) => Span('plum', skill.name)\r\n\r\nexport const NameSpanBuilder = (party: PartyT, enemyParty: PartyT) => (\r\n  character: CharacterT,\r\n) => {\r\n  const isUserParty = character.partyId === party.id\r\n  const isEnemyParty = character.partyId === enemyParty.id\r\n  const color = isUserParty\r\n    ? 'lightgreen'\r\n    : isEnemyParty\r\n    ? 'lightsalmon'\r\n    : 'white'\r\n\r\n  return Span(color, character.name)\r\n}\r\n","import React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport { useCombatContext } from '../CombatContext'\r\nimport { Monospace } from '../../elements/monospace'\r\nimport { NameSpanBuilder, SkillSpan, Span } from './util'\r\nimport { getDamageResistance } from '../../functions'\r\nimport { noneg } from '../../util'\r\n\r\nexport interface CombatLogContextT {\r\n  combatLog: JSX.Element[]\r\n}\r\nconst defualtValue: CombatLogContextT = {\r\n  combatLog: [],\r\n}\r\nexport const CombatLogContext = createContext<CombatLogContextT>(defualtValue)\r\nexport const useCombatLogContext = () => useContext(CombatLogContext)\r\n\r\ntype DeadLogT = Record<string, boolean | undefined>\r\n\r\nexport interface CombatLogContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const CombatLogContextProvider = (\r\n  props: CombatLogContextProviderPropsT,\r\n) => {\r\n  const { children } = props\r\n  const { activeRound, roundResults, enemyParty, party } = useCombatContext()\r\n  const [combatLog, setCombatLog] = useState<JSX.Element[]>([])\r\n  const [deadLog, setDeadLog] = useState<DeadLogT>({})\r\n  const NameSpan = NameSpanBuilder(party, enemyParty)\r\n  const log = (line: JSX.Element) =>\r\n    setCombatLog((log) => [\r\n      ...log,\r\n      <Monospace style={{ display: 'inline-block', fontWeight: 'normal' }}>\r\n        {line}\r\n      </Monospace>,\r\n    ])\r\n\r\n  useEffect(() => {\r\n    const characters = [...enemyParty.characters, ...party.characters]\r\n    setTimeout(() => {\r\n      characters.forEach((character) => {\r\n        if (character.dead && !deadLog[character.id]) {\r\n          setDeadLog((dLog) => ({ ...dLog, [character.id]: true }))\r\n          log(<span>{Span('lightcoral', `${character.name} died.`)}</span>)\r\n        }\r\n      })\r\n    }, 5)\r\n  }, [enemyParty, party])\r\n\r\n  useEffect(() => {\r\n    if (activeRound && activeRound[0]) {\r\n      log(\r\n        <span>\r\n          {NameSpan(activeRound[0].source)} uses{' '}\r\n          {SkillSpan(activeRound[0].skill)}.\r\n        </span>,\r\n      )\r\n    }\r\n  }, [activeRound])\r\n\r\n  useEffect(() => {\r\n    if (roundResults.length === 0) return\r\n    const latestRounds = roundResults[roundResults.length - 1]\r\n    const baseRound = latestRounds[0]\r\n    if (!baseRound) return\r\n\r\n    if (!baseRound.accuracySuccess) {\r\n      if (baseRound.skill.damage) {\r\n        {\r\n          log(<span>{baseRound.source.name}'s attack missed.</span>)\r\n        }\r\n      } else {\r\n        log(<span>{SkillSpan(baseRound.skill)} failed.</span>)\r\n      }\r\n    }\r\n    if (baseRound.criticalSuccess) {\r\n      log(<span>{Span('gold', 'Critical Hit!')}</span>)\r\n    }\r\n    if (baseRound.perfect && baseRound.rollResults.length > 0) {\r\n      log(<span>{Span('gold', 'Perfect!')}</span>)\r\n    }\r\n    latestRounds.forEach((round) => {\r\n      const targetParty = party.id === round.source.partyId ? enemyParty : party\r\n      if (round.accuracySuccess) {\r\n        if (round.dodgeSuccess) {\r\n          log(<span>{NameSpan(round.target)} dodged the attack.</span>)\r\n        } else if (round.totalDamage.damage > 0) {\r\n          log(\r\n            <span>\r\n              {SkillSpan(round.skill)} deals{' '}\r\n              {Span('white', `${round.totalDamage.damage} damage`)} to{' '}\r\n              {NameSpan(round.target)}.\r\n            </span>,\r\n          )\r\n        } else if (round.skill.damage) {\r\n          log(\r\n            <span>\r\n              {SkillSpan(round.skill)} did no damage to {NameSpan(round.target)}\r\n              .\r\n            </span>,\r\n          )\r\n        }\r\n        if (round.splashDamage.damage > 0) {\r\n          targetParty.characters\r\n            .filter((c) => c.id !== round.target.id && !c.dead)\r\n            .forEach((subTarget) => {\r\n              const splashDamageResistance = getDamageResistance(\r\n                subTarget,\r\n                round.splashDamage.type,\r\n              )\r\n              log(\r\n                <span>\r\n                  {SkillSpan(round.skill)} deals{' '}\r\n                  {Span(\r\n                    'white',\r\n                    `${\r\n                      round.splashDamage.damage - splashDamageResistance\r\n                    } splash damage`,\r\n                  )}{' '}\r\n                  to {NameSpan(subTarget)}.\r\n                </span>,\r\n              )\r\n            })\r\n        }\r\n\r\n        if (round.reflectedDamage.damage > 0) {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} reflected{' '}\r\n              {Span('white', `${round.reflectedDamage.damage} damage`)}\r\n            </span>,\r\n          )\r\n        }\r\n\r\n        if (round.healing > 0) {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} gained{' '}\r\n              {Span('white', `${round.healing} HP`)} from{' '}\r\n              {SkillSpan(round.skill)}\r\n            </span>,\r\n          )\r\n        }\r\n\r\n        round.addedStatus.forEach((tag) => {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} became {tag.type}\r\n              {tag.duration > 0 ? ` (${tag.duration} turns)` : ''}.\r\n            </span>,\r\n          )\r\n        })\r\n      }\r\n    })\r\n    if (baseRound.regeneratedHealth > 0) {\r\n      log(\r\n        <span>\r\n          {NameSpan(baseRound.source)} gained{' '}\r\n          {Span('white', `${baseRound.regeneratedHealth} HP`)} from HP regen.\r\n        </span>,\r\n      )\r\n    }\r\n  }, [roundResults.length])\r\n\r\n  return (\r\n    <CombatLogContext.Provider value={{ combatLog }}>\r\n      {children}\r\n    </CombatLogContext.Provider>\r\n  )\r\n}\r\n","import React, { useRef, useEffect } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatLogContext } from '../../contexts/CombatLogContext'\r\n\r\nexport const CombatLog = () => {\r\n  const { combatLog } = useCombatLogContext()\r\n  const scrollRef = useRef<HTMLDivElement>(null)\r\n  useEffect(() => {\r\n    if (scrollRef.current) {\r\n      scrollRef.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n  }, [combatLog])\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{\r\n        padding: 8,\r\n        minWidth: 300,\r\n        height: 300,\r\n        overflow: 'auto',\r\n        background: 'rgba(0,0,0,0.7)',\r\n        fontSize: 12,\r\n        color: 'rgba(255,255,255,0.8)',\r\n      }}\r\n    >\r\n      {combatLog.map((line, i) => (\r\n        <span key={i}>{line}</span>\r\n      ))}\r\n      <div ref={scrollRef} />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { BoxContainer } from '../elements/box'\r\nimport { FlexContainer, FullContainer } from '../elements/flex'\r\nimport { useCombatLogContext } from '../contexts/CombatLogContext'\r\nimport { CombatPlayerParty } from '../components/CombatPlayerParty'\r\nimport { RoundResultRenderer } from '../components/RoundResultRenderer'\r\nimport { CombatActions } from '../components/CombatActions'\r\nimport { CombatParty } from '../components/CombatParty'\r\nimport { useModalContext } from '../contexts/ModalContext'\r\nimport { CombatQueue } from '../components/CombatQueue'\r\nimport ForestBg from '../assets/img/flat-forestred.jpg'\r\nimport { CombatLog } from '../components/CombatLog'\r\n\r\nexport const Combat = () => {\r\n  const {\r\n    party,\r\n    enemyParty,\r\n    activeCharacter,\r\n    characters,\r\n    queue,\r\n    isDone,\r\n    isRunning,\r\n    isRenderingResult,\r\n    start,\r\n  } = useCombatContext()\r\n  const { open, close } = useModalContext()\r\n  useEffect(() => {\r\n    if (!isRunning) {\r\n      open(\r\n        <div style={{ textAlign: 'center' }}>\r\n          <h1>Combat Start!</h1>\r\n        </div>,\r\n      )\r\n      setTimeout(() => {\r\n        close()\r\n        start()\r\n      }, 1000)\r\n    }\r\n  }, [])\r\n  useEffect(() => {\r\n    if (isDone) {\r\n      open(\r\n        <div style={{ textAlign: 'center' }}>\r\n          <h4>Refresh to do combat again</h4>\r\n        </div>,\r\n      )\r\n    }\r\n  }, [isDone])\r\n\r\n  if (!activeCharacter) return <span>refresh to do combat again</span>\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        height: '100vh',\r\n        background: `url(${ForestBg}) center center fixed no-repeat`,\r\n        backgroundSize: 'cover',\r\n      }}\r\n    >\r\n      <FlexContainer $full $direction='column'>\r\n        <CombatQueue queue={queue} characters={characters} />\r\n        <FlexContainer\r\n          $direction='column'\r\n          $full\r\n          style={{ padding: '30px 10px' }}\r\n        >\r\n          <FlexContainer $direction='column' $full>\r\n            <CombatParty party={enemyParty} />\r\n          </FlexContainer>\r\n          <FlexContainer $full>\r\n            <FullContainer />\r\n            <FlexContainer $direction='column'>\r\n              {!isRenderingResult && <CombatActions />}\r\n              <RoundResultRenderer isModal={false} />\r\n            </FlexContainer>\r\n            <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n              <CombatLog />\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n          <FlexContainer\r\n            $direction='column'\r\n            $full\r\n            style={{ justifyContent: 'flex-end' }}\r\n          >\r\n            <CombatPlayerParty party={party} />\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\n\r\nexport const makeRoute = (path: string, Component: React.FC) => (\r\n  <Route path={`/JSFTK_combat${path}`}>\r\n    <Component />\r\n  </Route>\r\n)\r\n","import React from 'react'\r\nimport { ProcessedPartyT, ProcessedCharacterT } from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { PartyCharacter } from '../PartyCharacter'\r\n\r\nexport interface PartyCharactersProps {\r\n  party: ProcessedPartyT\r\n  activeCharacter: ProcessedCharacterT\r\n  canEquip: boolean\r\n  onCharacterClick: (character: ProcessedCharacterT) => void\r\n  onConsumableClick: (\r\n    character: ProcessedCharacterT,\r\n    consumableIndex: number,\r\n  ) => void\r\n}\r\nexport const PartyCharacters = (props: PartyCharactersProps) => {\r\n  const {\r\n    party,\r\n    activeCharacter,\r\n    canEquip,\r\n    onCharacterClick,\r\n    onConsumableClick,\r\n  } = props\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          alignItems: 'flex-end',\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <div key={c.id}>\r\n            <PartyCharacter\r\n              canEquip={canEquip}\r\n              hoverable={true}\r\n              activeCharacter={activeCharacter}\r\n              character={c}\r\n              onClick={() => onCharacterClick(c)}\r\n              onConsumableClick={(consumable, index) =>\r\n                onConsumableClick(c, index)\r\n              }\r\n            />\r\n          </div>\r\n        ))}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { usePartyContext } from '../contexts/PartyContext'\r\nimport { FlexContainer, FullContainer } from '../elements/flex'\r\nimport { PartyCharacters } from '../components/PartyCharacters'\r\nimport { BoxContainer } from '../elements/box'\r\nimport { RedButton } from '../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { getSkillResults, commitSkillResults } from '../functions'\r\nimport ForestBg from '../assets/img/flat-forestred.jpg'\r\nimport { AppHeader } from '../components/AppHeader'\r\n\r\nexport const Party = () => {\r\n  const {\r\n    party,\r\n    rawParty,\r\n    activeCharacter,\r\n    updateParty,\r\n    setActiveCharacter,\r\n  } = usePartyContext()\r\n  const history = useHistory()\r\n  const enterCombat = () => {\r\n    history.push('/JSFTK_combat/combat')\r\n  }\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        background: `url(${ForestBg}) center center fixed no-repeat`,\r\n        backgroundSize: 'cover',\r\n      }}\r\n    >\r\n      <AppHeader\r\n        left={\r\n          <>\r\n            <RedButton onClick={enterCombat}>Enter Combat</RedButton>\r\n            <FullContainer />\r\n          </>\r\n        }\r\n      >\r\n        <FlexContainer\r\n          $full\r\n          style={{\r\n            color: 'white',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          Edit Party\r\n        </FlexContainer>\r\n      </AppHeader>\r\n      <FlexContainer $full $direction='column' style={{ padding: '30px 10px' }}>\r\n        <FlexContainer $full></FlexContainer>\r\n        <div>\r\n          <PartyCharacters\r\n            party={party}\r\n            activeCharacter={activeCharacter}\r\n            canEquip={true}\r\n            onCharacterClick={(c) => setActiveCharacter(c)}\r\n            onConsumableClick={(character, consumableIndex) => {\r\n              const consumable = character.consumables[consumableIndex]\r\n              const targets =\r\n                consumable.skill.targetType === 'self'\r\n                  ? [character]\r\n                  : consumable.skill.targetType === 'party'\r\n                  ? party.characters\r\n                  : []\r\n              const result = getSkillResults(\r\n                consumable.skill,\r\n                character,\r\n                targets,\r\n                consumableIndex,\r\n              )\r\n              const parties = commitSkillResults(rawParty, rawParty)(\r\n                result,\r\n                false,\r\n              )\r\n              updateParty(parties.party)\r\n            }}\r\n          />\r\n        </div>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { FullContainer, FlexContainer } from '../elements/flex'\r\nimport { BoxContainer } from '../elements/box'\r\nimport { usePartyContext } from '../contexts/PartyContext'\r\nimport { ProcessedCharacterT, CharacterT, CharacterClassT } from '../types'\r\nimport { makeCharacter } from '../functions'\r\nimport { STAT_BONUS_KEYS } from '../objects'\r\nimport { Gauge } from '../components/Gauge'\r\nimport { RedButton } from '../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { INITIAL_STATE } from '../state/party'\r\nimport { Monospace } from '../elements/monospace'\r\n\r\nexport const Start = () => {\r\n  const {\r\n    party,\r\n    updateParty,\r\n    upsertCharacter,\r\n    findRawCharacter,\r\n  } = usePartyContext()\r\n  const history = useHistory()\r\n  useEffect(() => {\r\n    updateParty(INITIAL_STATE)\r\n  }, [])\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{ height: '100%', overflow: 'hidden' }}\r\n    >\r\n      <FullContainer />\r\n      <FlexContainer $full>\r\n        <FullContainer />\r\n        <BoxContainer>\r\n          <h1 style={{ marginTop: 0, textAlign: 'center' }}>\r\n            Choose your Party!\r\n          </h1>\r\n          <FlexContainer>\r\n            {party.characters.map((character) => (\r\n              <BoxContainer substyle={{ background: '#111' }}>\r\n                <StartCharacterCard\r\n                  character={character}\r\n                  onChange={(characterId, updater) => {\r\n                    const rc = findRawCharacter(characterId)\r\n                    if (rc) {\r\n                      upsertCharacter(updater(rc))\r\n                    }\r\n                  }}\r\n                />\r\n              </BoxContainer>\r\n            ))}\r\n          </FlexContainer>\r\n          <FlexContainer>\r\n            <FullContainer />\r\n            <RedButton\r\n              style={{ marginTop: 16 }}\r\n              onClick={() => {\r\n                history.push('/JSFTK_combat/combat')\r\n              }}\r\n            >\r\n              Begin Adventure\r\n            </RedButton>\r\n            <FullContainer />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        <FullContainer />\r\n      </FlexContainer>\r\n      <FullContainer />\r\n      <Monospace\r\n        style={{\r\n          fontWeight: 'normal',\r\n          color: 'rgba(255,255,255,0.5)',\r\n          fontSize: 12,\r\n        }}\r\n      >\r\n        pre-pre-pre-pre alpha v0.0.0.1\r\n      </Monospace>\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface StartCharacterCardPropsT {\r\n  character: ProcessedCharacterT\r\n  onChange: (\r\n    characterId: string,\r\n    updater: (c: CharacterT) => CharacterT,\r\n  ) => void\r\n}\r\nexport const StartCharacterCard = (props: StartCharacterCardPropsT) => {\r\n  const { character, onChange } = props\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <input\r\n        style={{\r\n          background: '#333',\r\n          border: '1px solid rgba(255,255,255,0.4)',\r\n          padding: 8,\r\n          color: 'white',\r\n          marginBottom: 8,\r\n        }}\r\n        value={character.name}\r\n        onChange={(e) => {\r\n          onChange(character.id, (c) => ({\r\n            ...c,\r\n            name: e.target.value,\r\n          }))\r\n        }}\r\n      />\r\n      <select\r\n        style={{\r\n          background: '#333',\r\n          border: '1px solid rgba(255,255,255,0.4)',\r\n          padding: 8,\r\n          color: 'white',\r\n          marginBottom: 8,\r\n        }}\r\n        value={character.class}\r\n        onChange={(e) => {\r\n          onChange(character.id, (c) => ({\r\n            ...makeCharacter(e.target.value as CharacterClassT),\r\n            id: character.id,\r\n            name: character.name,\r\n          }))\r\n        }}\r\n      >\r\n        <option value='blacksmith'>blacksmith</option>\r\n        <option value='hunter'>hunter</option>\r\n        <option value='scholar'>scholar</option>\r\n        <option value='bard'>bard</option>\r\n      </select>\r\n      <BoxContainer>\r\n        {STAT_BONUS_KEYS.map((key) => (\r\n          <FlexContainer style={{ height: 20 }}>\r\n            <div\r\n              style={{ width: 60, fontSize: 12, textTransform: 'capitalize' }}\r\n            >\r\n              {key}\r\n            </div>\r\n            <FullContainer>\r\n              <Gauge\r\n                max={100}\r\n                value={character.stats[key]}\r\n                color='white'\r\n                height={15}\r\n              />\r\n            </FullContainer>\r\n          </FlexContainer>\r\n        ))}\r\n      </BoxContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { CombatContextProvider } from './contexts/CombatContext'\nimport { PartyT } from './types'\nimport { makeParty } from './functions'\nimport { Combat } from './domain/Combat'\nimport { CombatLogContextProvider } from './contexts/CombatLogContext'\nimport { ModalContextProvider } from './contexts/ModalContext'\nimport { makeRoute } from './routes'\nimport { Party } from './domain/Party'\nimport { Start } from './domain/Start'\n\nconst CombatDomain = () => {\n  const [rawEnemyParty, setRawEnemyParty] = useState<PartyT>(makeParty(3))\n  return (\n    <CombatContextProvider\n      enemyParty={rawEnemyParty}\n      setEnemyParty={setRawEnemyParty}\n      onRequestNewParty={() => setRawEnemyParty(makeParty(3))}\n    >\n      <CombatLogContextProvider>\n        <ModalContextProvider>\n          <Combat />\n        </ModalContextProvider>\n      </CombatLogContextProvider>\n    </CombatContextProvider>\n  )\n}\n\nconst PartyDomain = () => {\n  return <Party />\n}\n\nexport const App = () => {\n  return (\n    <Switch>\n      {makeRoute('/party', PartyDomain)}\n      {makeRoute('/combat', CombatDomain)}\n      {makeRoute('/', Start)}\n    </Switch>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './index.css'\n\nimport { Provider as StyletronProvider, DebugEngine } from 'styletron-react'\nimport { Client as Styletron } from 'styletron-engine-atomic'\nimport { Provider as ReduxProvider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { makeStore } from './state'\nimport { PartyContextProvider } from './contexts/PartyContext'\n\nconst debug = process.env.NODE_ENV === 'production' ? void 0 : new DebugEngine()\nconst engine: Styletron = new Styletron()\nconst store = makeStore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n        <PartyContextProvider>\n          <Router>\n            <App />\n          </Router>\n        </PartyContextProvider>\n      </StyletronProvider>\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport party from './party'\r\n\r\nexport const makeStore = () =>\r\n  createStore(combineReducers({ party }), compose(applyMiddleware(thunk)))\r\n","module.exports = __webpack_public_path__ + \"static/media/broadsword.47ecfebc.svg\";","module.exports = __webpack_public_path__ + \"static/media/flat-forestred.951e7322.jpg\";","module.exports = __webpack_public_path__ + \"static/media/heavy-timer.1072a406.svg\";","module.exports = __webpack_public_path__ + \"static/media/g-clef.77d209b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/shieldcomb.802f20f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/chest-armor.f1f52a3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/viking-shield.a61f8230.svg\";","module.exports = __webpack_public_path__ + \"static/media/leather-boot.89b85474.svg\";","module.exports = __webpack_public_path__ + \"static/media/visored-helm.1f2ced7f.svg\";"],"sourceRoot":""}