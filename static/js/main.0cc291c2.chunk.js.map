{"version":3,"sources":["icons/svg/lorc/pentagram-rose.svg","icons/svg/delapouite/coins.svg","icons/svg/lorc/broadsword.svg","assets/img/forests/7.png","icons/svg/lorc/dodging.svg","icons/svg/lorc/battered-axe.svg","icons/svg/lorc/all-for-one.svg","assets/img/forests/8.png","icons/svg/lorc/cultist.svg","icons/svg/lorc/laurel-crown.svg","icons/svg/lorc/sprint.svg","icons/svg/lorc/scythe.svg","icons/svg/lorc/ringing-bell.svg","icons/svg/lorc/bone-knife.svg","icons/svg/lorc/drink-me.svg","icons/svg/delapouite/perspective-dice-six.svg","icons/svg/lorc/shieldcomb.svg","icons/svg/lorc/broken-shield.svg","icons/svg/lorc/knapsack.svg","assets/img/dungeon/1.png","icons/svg/delapouite/chest-armor.svg","icons/svg/delapouite/viking-shield.svg","icons/svg/lorc/leather-boot.svg","icons/svg/lorc/visored-helm.svg","icons/svg/lorc/hammer-drop.svg","icons/svg/lorc/saber-slash.svg","icons/svg/skoll/troll.svg","assets/img/forests/1.png","assets/img/dungeon/3.png","icons/svg/lorc/werewolf.svg","icons/svg/lorc/bee.svg","icons/svg/lorc/wolf-head.svg","icons/svg/lorc/raven.svg","icons/svg/lorc/witch-flight.svg","icons/svg/delapouite/overlord-helm.svg","icons/svg/lorc/spectre.svg","icons/svg/delapouite/heart-beats.svg","icons/svg/delapouite/biceps.svg","icons/svg/lorc/brain.svg","icons/svg/delapouite/eye-target.svg","icons/svg/lorc/juggler.svg","icons/svg/lorc/clover.svg","icons/svg/lorc/robe.svg","icons/svg/lorc/scale-mail.svg","icons/svg/lorc/lightning-shield.svg","icons/svg/delapouite/robin-hood-hat.svg","icons/svg/lorc/pointy-hat.svg","icons/svg/lorc/battle-axe.svg","icons/svg/lorc/gavel.svg","icons/svg/lorc/heavy-arrow.svg","icons/svg/lorc/bowie-knife.svg","icons/svg/skoll/revolver.svg","icons/svg/lorc/wizard-staff.svg","icons/svg/lorc/croc-sword.svg","icons/svg/skoll/fist.svg","icons/svg/delapouite/herbs-bundle.svg","icons/svg/lorc/lotus-flower.svg","icons/svg/delapouite/medicine-pills.svg","icons/svg/delapouite/executioner-hood.svg","icons/svg/lorc/cowled.svg","icons/svg/delapouite/female-vampire.svg","icons/svg/delapouite/wizard-face.svg","icons/svg/delapouite/kenku-head.svg","icons/svg/lorc/high-shot.svg","icons/svg/delapouite/shield-impact.svg","icons/svg/lorc/energy-arrow.svg","icons/svg/lorc/fire-zone.svg","icons/svg/lorc/magic-swirl.svg","icons/svg/lorc/heavy-timer.svg","icons/svg/delapouite/extra-time.svg","icons/svg/lorc/flat-hammer.svg","icons/svg/lorc/bordered-shield.svg","icons/svg/lorc/resonance.svg","icons/svg/lorc/gunshot.svg","icons/svg/delapouite/crosshair.svg","icons/svg/delapouite/bullet-impacts.svg","icons/svg/delapouite/backward-time.svg","icons/svg/lorc/snail.svg","icons/svg/lorc/double-shot.svg","icons/svg/sbed/health-normal.svg","icons/svg/lorc/embrassed-energy.svg","icons/svg/lorc/wave-strike.svg","icons/svg/lorc/life-support.svg","icons/svg/lorc/plain-dagger.svg","icons/svg/lorc/knife-thrust.svg","icons/svg/lorc/pointy-sword.svg","icons/svg/lorc/axe-swing.svg","icons/svg/delapouite/vibrating-shield.svg","icons/svg/lorc/punch.svg","icons/svg/lorc/ubisoft-sun.svg","icons/svg/lorc/star-swirl.svg","icons/svg/sbed/targeted.svg","icons/svg/delapouite/sticky-boot.svg","icons/svg/lorc/biohazard.svg","icons/svg/carl-olsen/flame.svg","icons/svg/lorc/bleeding-wound.svg","icons/svg/lorc/snowflake-2.svg","icons/svg/lorc/split-cross.svg","icons/svg/lorc/hand.svg","icons/svg/delapouite/arrow-wings.svg","icons/svg/delapouite/leather-armor.svg","icons/svg/lorc/crossed-swords.svg","icons/svg/lorc/divided-spiral.svg","icons/svg/lorc/crowned-skull.svg","state/util.ts","hooks/useActions.ts","game/Stats/constants.ts","util/undefAdd.ts","game/Stats/util.ts","game/Status/constants.ts","util/noneg.ts","game/Weapon/builders/damage.ts","game/Weapon/builders/goldValue.ts","game/Weapon/builders/rarity.ts","game/Weapon/builders/stats.ts","game/Weapon/builders/typeConfig.ts","game/Weapon/builders/index.ts","game/Skill/skills/index.ts","game/Skill/skills/axe.ts","game/Weapon/builders/objects/axe.ts","game/Skill/skills/bow.ts","game/Weapon/builders/objects/bow.ts","game/Skill/skills/catalyst.ts","game/Weapon/builders/objects/catalyst.ts","game/Skill/skills/chime.ts","game/Weapon/builders/objects/chime.ts","game/Skill/skills/scythe.ts","game/Weapon/builders/objects/scythe.ts","game/Weapon/constants.ts","game/Roll/util.ts","game/Armor/constants.ts","game/Consumable/util.ts","theme/index.ts","game/Character/constants.ts","game/Weapon/fists.ts","game/Skill/skills/consumables.ts","game/Consumable/objects/godsbeard.ts","game/Consumable/objects/celestial_lotus.ts","game/Consumable/objects/poison_knife.ts","game/Consumable/objects/beast_drug.ts","game/Consumable/objects/curing_potion.ts","game/Item/constants.ts","game/Character/util.ts","util/getRandom.ts","game/Armor/builders/index.ts","game/Armor/builders/sets/index.tsx","game/Armor/builders/sets/ranger.ts","game/Armor/builders/sets/patrician.ts","game/Armor/builders/sets/executioner.ts","game/Armor/builders/sets/student.ts","game/Armor/builders/sets/tomb.ts","game/Armor/builders/sets/adventure.ts","game/Armor/builders/sets/aristocrat.ts","game/Armor/builders/sets/graveguard.ts","game/Armor/builders/sets/apprentice.ts","game/Armor/builders/sets/hunter.ts","game/Armor/builders/sets/antiquated.ts","game/Armor/builders/sets/iron.ts","game/Armor/builders/sets/bone.ts","game/Armor/builders/sets/novice.ts","game/Skill/skills/blunt.ts","game/Weapon/builders/objects/hammer.ts","game/Skill/skills/dagger.ts","game/Weapon/builders/objects/dagger.ts","game/Skill/skills/greatsword.ts","game/Weapon/builders/objects/greatsword.ts","game/Skill/skills/pistol.ts","game/Weapon/builders/objects/pistol.ts","game/Skill/skills/sword.ts","game/Weapon/builders/objects/sword.ts","game/Weapon/builders/objects/index.ts","game/Item/util.ts","game/Encounter/constants.ts","game/Character/enemies/_builder.ts","game/Character/enemies/forest_troll.ts","game/Character/enemies/forest_beast.ts","game/Character/enemies/bee.ts","game/Character/enemies/cultist_brute.ts","game/Character/enemies/cultist.ts","game/Character/enemies/forest_wolf.ts","game/Character/enemies/forest_raven.ts","game/Character/enemies/forest_witch.ts","game/Character/bosses/lich.ts","game/Encounter/floors/util.tsx","game/Character/enemies/tomb_spirit.ts","game/Encounter/floors/floor-2.tsx","game/Encounter/floors/index.tsx","game/Encounter/floors/floor-1.tsx","game/Party/util.ts","game/Party/constants.ts","state/party/index.ts","game/Encounter/util.ts","state/game/index.ts","contexts/GameStateContext/index.tsx","contexts/PartyContext/index.tsx","contexts/ModalContext/reducer.ts","contexts/ModalContext/index.tsx","elements/flex.ts","elements/button.tsx","components/Icon/index.tsx","components/Hover/index.tsx","elements/box.tsx","components/StatsPreview/index.tsx","icons/skills.ts","icons/status.ts","icons/maps.tsx","components/Tooltip/index.tsx","hooks/useOnClickOutside.ts","elements/badge.tsx","components/SkillChecks/index.tsx","components/ArmorPreview/index.tsx","elements/typography.tsx","game/Skill/constants.ts","game/Skill/util.ts","components/SkillPreview/index.tsx","components/WeaponPreview/index.tsx","components/ConsumablePreview/index.tsx","components/ItemPreview/index.tsx","components/CombatVictoryModal/index.tsx","game/Other/util.ts","game/Queue/util.ts","game/Skill/committer.ts","contexts/CombatContext/index.tsx","game/AI/util.ts","components/RoundResultRenderer/Perfect.tsx","components/RoundResultRenderer/index.tsx","components/PartyActiveCharacter/StatBar.tsx","contexts/UIContext/index.tsx","components/PartyActiveCharacter/Items.tsx","components/PartyActiveCharacter/Name.tsx","components/CharacterIcon/index.tsx","components/PartyActiveCharacter/Image.tsx","components/PartyActiveCharacter/elements.tsx","components/PartyActiveCharacter/WeaponList.tsx","components/PartyActiveCharacter/MenuSelect.tsx","components/PartyActiveCharacter/HoverArea.tsx","elements/shapes.tsx","components/PartyActiveCharacter/index.tsx","components/PartyActiveCharacter/ArmorList.tsx","components/EquipItemModal/index.tsx","components/CombatActions/index.tsx","elements/monospace.tsx","components/Gauge/v2.tsx","components/Gauge/index.tsx","components/TagPreview/index.tsx","hooks/usePlayerCharacterNotifications.tsx","components/EnemyCharacter/Health.tsx","contexts/LocalToastContext/index.tsx","components/EnemyCharacter/index.tsx","components/CombatParty/index.tsx","components/AppHeader/index.tsx","components/PartyResources/index.tsx","components/CombatQueue/index.tsx","contexts/CombatLogContext/util.tsx","contexts/CombatLogContext/index.tsx","components/CombatLog/index.tsx","domain/Combat.tsx","hooks/useCombatStart.tsx","routes/index.tsx","components/Shop/index.tsx","components/Shrine/index.tsx","components/EncounterHistory/index.tsx","components/BossRewards/index.tsx","components/NonCombatEncounter/index.tsx","components/EncounterActions/Choice.tsx","util/stringArr.ts","components/EncounterActions/Shop.tsx","components/EncounterActions/Reward.tsx","components/EncounterActions/Shrine.tsx","components/EncounterActions/index.tsx","domain/Party.tsx","domain/Start.tsx","game/Consumable/constants.ts","components/PartyCharacterConsumables/index.tsx","components/PartyCharacter/Stats.tsx","components/PartyCharacter/Name.tsx","components/PartyCharacter/Actions.tsx","components/PartyCharacter/Health.tsx","hooks/useElementShake.tsx","components/PartyCharacter/index.tsx","components/PlayerParty/index.tsx","contexts/CombatContext/context.tsx","components/AppBg/index.tsx","App.tsx","serviceWorker.ts","index.tsx","state/index.ts"],"names":["module","exports","makeReducer","core","initialState","state","action","coreFn","type","useActions","actions","dispatch","useDispatch","useMemo","bindActionCreators","ZERO_STATS","vigor","strength","intelligence","dexterity","charisma","agility","luck","armor","resistance","evasion","maxHealthOffset","healthRegeneration","damageTakenModifier","damageTakenRangeModifiers","melee","ranged","damageReflection","attackDamageOffset","attackDamageModifier","criticalChance","damageModifiers","flying","undead","queueConsolidationModifier","queueValueSet","undefined","goldModifier","maxInspirationOffset","consumableHealthGainOffset","minHealthOffset","BASE_C_STATS","CLASS_STATS","executioner","ranger","reaper","student","patrician","drifter","enemy","DAMAGE_BONUS_KEYS","DEFENSE_BONUS_KEYS","HEALTH_FOCUS_BONUS_KEYS","STAT_BONUS_KEYS","STAT_KEY_LABELS","undefAdd","a","b","combineStats","stats","reduce","result","STATUS_CONFIG","bleeding","name","description","canStack","isTemporary","duration","immunities","burning","frozen","poisoned","shocked","stunned","wet","rushed","interrupted","reset","evasive","resilient","protected","targeted","cure","blessed","noneg","value","GLOBAL_DAMAGE_OFFSETS","axe","hammer","sword","greatsword","bow","dagger","scythe","catalyst","chime","pistol","fist","WEAPON_DAMAGE_CONFIG","starting","rusted","tomb","buried","withering","glass","iron","steel","stainless","ancient","crystal","elemental","cursed","sharp","hardened","engraved","ethereal","exquisite","divine","arcane","celestial","mythic","unique","BASE_WEAPON_TYPES_GOLD","WEAPON_CLASS_GOLD_OFFSETS","WEAPON_CLASS_RARIES","DEFAULT_WEAPON_TYPE_STATS","DEFAULT_WEAPON_TYPE_CONFIG","stat","twoHand","range","damageType","createWeapon","weaponType","weaponClass","skills","goldValue","damageValue","rarity","defaultStats","id","v4","itemType","breakable","damage","createBreakableWeapon","createSkill","rolls","offset","rest","damageModifier","splashDamageModifier","targetType","healing","perfectSplash","perfectPierce","perfectStatus","CHOP","SWING","WITHERING_SWING","GLASS_SWING","AXE_SPIN","FLURRY","STUN","CLEAVE","SLICE","SLASH","EXECUTIONER_AXE","AXES","0","1","2","3","4","5","SHOT","WITHERING_SHOT","GLASS_SHOT","HEADSHOT","PIN_DOWN","WOUNDING_SHOT","RANGERS_BOW","BOWS","BLAST","GLASS_BLAST","ARCANE","NOVA","ENFLAME","ENGULF","PROTECT","TIME_JUMP","STUDENTS_CATALYST","CATALYSTS","RING","WITHERING_RING","GLASS_RING","REVERBERATE","SLOW","VANISH","RUSH","RESET","PATRICIANS_CHIME","CHIMES","THRUST","ARMOR_UP","EVADE_UP","SCYTHES","CLASS_WEAPONS","resolveCheck","character","key","statValue","getBaseStatValue","roll","DiceRoll","total","CLASS_ARMOR","considateConsumableListToStack","consumables","stack","forEach","c","cid","map","s","consumable","includes","count","updateStackItem","Theme","CHARACTER_XP_MAX","CHARACTER_CLASS_COLORS","BASE_CHARACTER","isCharacter","icon","partyId","level","experience","class","healthOffset","inspirationOffset","tags","weapon","status","possibleRewards","FISTS","HEAL","REMOVE_CURSES","POISON_KNIFE","GODSBEARD","skill","consumableId","CELESTIAL_LOTUS","BEAST_DRUG","CURE","CURE_POTION","ITEM_RARITY_COLORS","common","uncommon","rare","CLASS_STARTING_CONSUMABLES","CHARACTER_RESOURCES","checkForProcessedCharacter","processed","Error","makeCharacter","characterClass","processCharacter","r","getSkills","statusImmunities","baseVigor","startingHealth","Math","floor","maxHealth","health","maxInspiration","inspiration","rawStats","getDamageResistance","hasStatus","statusType","hasAnyStatus","statusTypes","some","hasImmunity","getReflectedDamage","target","rawDamage","commitDamage","ignoreResistance","pc","rawDamageValue","filter","ceil","decrementStatusDurations","addMultipleStatus","types","durationOverride","statusConfig","existingStatus","find","findStatus","addStatus","checkStatus","levelUp","getRandom","items","random","length","createArmor","resource","createFootwear","createHat","createHeavyArmor","createHelmet","createLightArmor","createMagicArmor","createMagicHat","ARMOR_BY_LEVEL","SMASH","WITHERING_SMASH","GLASS_SMASH","RIPPLE","EARTHQUAKE","CRUSH","HAMMERS","STRIKE","WITHERING_STRIKE","GLASS_STRIKE","LUNGE","STAB","DAGGERS","WIDE_SWING","GREATSWORDS","FIRE","SNIPE","FAN_FIRE","PISTOLS","SWORDS","WEAPONS","getRandomItem","Object","keys","allWeapons","parseInt","Array","fill","_","index","ZERO_REWARD","gold","xp","armorDown","resDown","attackDown","armorUp","attackUp","resUp","justGold","justXp","justRandomItem","FLOOR_CONFIGS_BY_INDEX","makeEnemy","makeEnemyWeapon","makeEnemyReward","FOREST_TROLL","Troll","FOREST_BEAST","BeastMan","BEE","Bee","CULTIST_BRUTE","Cultist","CULTIST","FOREST_WOLF","Wolf","FOREST_RAVEN","Raven","FOREST_WITCH","Witch","LICH","Lich","makeRandomFloorEncounter","characterList","enemyCount","TOMB_SPIRIT","Spirit","FloorConfig2","bosses","w","enemies","6","7","isParty","obj","checkForProcessedParty","party","characters","findCharacterInParty","processParty","updateCharacter","characterId","updater","makeParty","floorConfig","makeBossParty","config","getRolledRewards","checkedCharacter","rewards","i","getRewardsFromCharacter","commitRewards","goldMultiplier","addExperience","xpToNextLevel","PLAYER_PARTY_ID","SET_GOLD","actionCreators","payload","item","updateParty","upsertCharacter","deleteCharacter","upsertItem","setGold","jack","jim","john","INITIAL_STATE","makeRandomEncounter","depth","max","encounterType","makeEncounterType","encounter","choiceId","reward","boss","costs","getItemCost","results","makeEncounterList","chosen","choices","makeFloor","encounterCount","encounters","encounterId","itemId","chooseCurrent","nextLevel","nextFloor","removeItem","updateCurrentFloor","floors","e","choice","defaultValue","currentChoice","currentEncounter","previousChoice","GameStateContext","React","createContext","useGameStateContext","useContext","GameStateContextProvider","props","children","useSelector","game","Provider","defaultContextValue","rawParty","activeCharacter","findCharacter","findRawCharacter","setActiveCharacter","equipItem","unequipItem","purchaseItem","cost","sellItem","refreshParty","PartyContext","PartyContextProvider","useState","activeCharacterId","setActiveCharacterId","existingArmor","equipArmor","existingWeapon","equipWeapon","unequipArmor","usePartyContext","isOpen","contents","callback","blocking","styles","OPEN","CLOSE","style","reducer","coreFunction","ModalContext","open","close","setBlocking","setPayload","setContents","setCallback","setStyles","useModalContext","getContextValue","Modal","setAppElement","ModalContextProvider","reducerValue","useReducer","context","onRequestClose","content","backgroundColor","color","width","margin","bottom","borderColor","modal","overlay","zIndex","FlexContainer","styled","display","flexDirection","$direction","flex","$full","FullContainer","Button","cursor","background","boxShadow","textShadow","border","outline","padding","userSelect","RedButton","withStyle","fontWeight","borderTop","borderBottom","animationDirection","animationIterationCount","animationName","Icon","src","size","shadow","onClick","loading","setLoading","svg","setSvg","useEffect","fetch","then","res","text","className","height","dangerouslySetInnerHTML","__html","Hover","delay","internalHovering","setInternalHovering","isHovering","setIsHovering","guid","setGuid","useLayoutEffect","setTimeout","onMouseEnter","preventDefault","stopPropagation","onMouseLeave","BoxContainer","substyle","dark","tag","Element","boxSizing","defense_key_colors","StatsPreview","fontSize","textTransform","SKILL_ICONS","Punch","Shot","Headshot","PinDown","Flurry","SpreadShot","Arcane","Nova","Blast","TimeJump","Ring","Reverberate","Smash","Strike","Swing","Chop","Thrust","Earthquake","Shockwave","Ripple","AxeSpin","Cleave","Lunge","Stab","Slice","Swipe","Fire","Snipe","FanFire","Stun","Reset","Taunt","Slow","Protect","Heal","Bless","PoisonKnife","CurePotion","Restore","Rush","Vanish","EvadeUp","ArmorUp","AttackUp","STATUS_ICONS","Evasive","Stunned","Targeted","Protected","Poisoned","Burning","Bleeding","Frozen","SpeedDown","ArmorDown","ResistanceDown","Cursed","STAT_ICONS","Vigor","Strength","Brain","Awareness","Juggler","Agility","Clover","ARMOR_TYPE_ICONS","MagicArmor","ClothArmor","Armor","shield","Shield","ward","MagicShield","footwear","Footwear","hat","Hat","MagicHat","helmet","Helmet","charm","ring","WEAPON_TYPE_ICONS","Axe","Blunt","Bow","Dagger","Chime","Handgun","MagicStaff","Scythe","Sword","Greatsword","Fist","RESOURCE_ICONS","Weapon","offhand","body","head","feet","CONSUMABLE_ITEM_ICONS","Godsbeard","Lotus","BeastDrug","CONSUMABLE_ITEM_COLORS","CHARACTER_CLASS_ICONS","Executioner","Bard","Hunter","Reaper","Scholar","Hobo","Tooltip","direction","tagName","arrow","HoverToolTip","ClickToolTip","setIsOpen","ref","useRef","handler","listener","event","current","contains","document","addEventListener","removeEventListener","useOnClickOutside","p","v","Div","transform","Badge","withWrapper","$style","position","$absolute","fontFamily","$size","alignItems","justifyContent","lineHeight","borderRadius","$color","top","$top","$bottom","right","$right","left","$left","transition","SkillChecks","minHeight","perfect","every","check","label","SkillCheck","crit","colors","getPerfectStatusColors","opacity","getColor","X","ArmorPreview","showEquipButton","showBuyButton","onEquipClick","onBuyClick","rarityColor","from","Color","darken","rgb","toString","to","gradient","minWidth","marginBottom","weaponStatOverride","marginRight","marginLeft","textAlign","marginTop","FakeLink","whiteSpace","textDecoration","HeadingSm","Text","PERFECT_DISPLAY_INFO","splash","pierce","heal","getTargetSkillResult","sourceResult","dodgeResult","dodgeSuccess","source","getRawDamage","totalDamage","reflectedDamage","loggedDamgge","getSkillResult","targets","rollResults","passedCount","criticalHitSuccess","rollDamageModifier","round","weaponRangeOverride","accuracySuccess","weaponDidBreak","splashDamage","addedStatus","getSourceSkillResult","targetResults","resolveSkillTarget","makeSkillTarget","getSkillDamage","getPerfectText","perfectKeys","base","getPerfectKeys","pre","SkillPreview","perfectChance","getDamageColor","WeaponPreview","basicAttack","Melee","Ranged","Hands","flexWrap","Fragment","paddingLeft","ConsumablePreview","ItemPreivew","getItem","CombatVictoryModal","consolidatedRewards","consolidateRewards","setItems","first","next","Gold","XP","makeCombatQueue","sortedCharacters","sort","validateQueue","AGILITY_OFFSET","consolidateQueue","queue","min","Number","POSITIVE_INFINITY","getMin","shiftQueue","getFirst","commitQueueUpdates","pcs","shiftedQueue","q","partyUpdater","commitSkillResults","playerParty","enemyParty","targetResult","sourceParty","targetParty","localUpdate","selectedSkill","selectedTargets","selectedConsumableIndex","roundResults","activeRound","isRunning","isRenderingResult","onSkillSelect","onTargetsSelect","onConsumableSelect","consumableIndex","start","commit","equipItemCombat","CombatContext","useCombatContext","CombatContextProvider","setEnemyParty","onRequestNewParty","history","useHistory","setIsRunning","setIsRenderingResult","setQueue","resultCommitter","roundId","setRoundId","setRoundResults","setActiveRound","selectedTarget","setSelectedTarget","setSelectedSkill","setSelectedConsumableIndex","completeRound","useCallback","targetedCharacters","t","getSkillTargetOptions","getAIAction","execEnemyTurn","alert","push","nextTarget","roundTarget","Perfect","show","useSpring","div","RoundResultRenderer","isModal","RoundResult","isDone","setIsDone","activeIndex","setActiveIndex","stream","Kefir","sequentially","onValue","onEnd","later","showPerfect","isPlayer","showTarget","lighten","hex","getStatColor","StatBar","paddingTop","paddingBottom","playerCanEquipItem","openCharacterInventoryId","showSkillTooltips","onCharacterConsumableClick","setPlayerCanEquipItem","setOpenCharacterInventoryId","setOnCharacterConsumableClick","fn","setShowSkillTooltips","UIContext","useUIContext","UIContextProvider","_setOnCharacterConsumableClick","ItemRow","$disabled","Items","setActiveItem","disabled","onHover","canUnequip","Item","distance","Name","CharacterIcon","iconStyle","overflow","Image","Row","$active","ActionsRow","WeaponList","canEquip","onEquipItem","activeItemId","setActiveItemId","condenseListToStack","localeCompare","ACTIVE_CHARACTER_MENU_KEYS","Weapons","render","MenuSelect","activeKey","onActiveKeyChange","option","paddingRight","HoverArea","activeItem","foundArmor","Hexagon","childStyle","mod","boxW","boxH","triH","triW","tHeight","borderRight","borderLeft","HexBadge","stroke","rotate","angle","HoverHexBadge","PartyActiveCharacter","activeMenuKey","setActiveMenuKey","activeOption","o","maxHeight","ArmorList","EquipItemModal","CombatActions","Inventory","Monospace","Gauge2","percentage","oldPercentage","setOldPercentage","friction","mass","tension","maxWidth","HealthGauge","showNumbers","XPGauge","TagPreview","immunity","usePlayerCharacterNotifications","shake","previousHealth","setPreviousHealth","previousLevel","setPreviousLevel","healthDiff","abs","lastRound","chResult","Health","hp","clamp","hpp","Toast","animation","useTransition","enter","leave","LocalToastRp","EnemyCharacter","$selected","isBoss","active","borderWidth","CombatParty","AppHeader","PartyResources","CombatQueue","sortedIds","getSortedIds","bigList","NEGATIVE_INFINITY","getMax","widthCoef","Span","SkillSpan","CombatLogContext","combatLog","clear","useCombatLogContext","CombatLogContextProvider","setCombatLog","deadLog","setDeadLog","NameSpan","isUserParty","isEnemyParty","NameSpanBuilder","log","line","dLog","latestRounds","baseRound","subTarget","splashDamageResistance","CombatLog","scrollRef","isExpanded","setIsExpanded","scrollIntoView","behavior","Combat","useCombatStart","makeRoute","path","Component","RouteController","CardList","tabs","Shop","activeTab","setActiveTab","tab","overflowY","Shrine","setResults","JSON","stringify","EncounterHistory","chosenEncounters","getIcon","Boss","Reward","Unknown","f","fi","BossRewards","NonCombatEncounter","Choice","arr","previousEncounter","l","getChoiceText","getNextText","EncounterActions","Party","currentFloor","parties","Start","href","onChange","rc","StartCharacterCard","CONSUMABLE_DESCRIPTIONS","PartyCharacterConsumables","onStackClick","filler","ConsumableBox","HEIGHT","PartyCharacterConsumable","PartyCharacterConsumableTooltip","getText","CharacterStat","statKey","ResourceE","Stats","Actions","inventoryOpen","inventoryStyle","storedHealth","setStoredHealth","springConfig","Wrapper","animated","Halo","$targeted","$light","leftR","PartyCharacter","selected","showActions","onConsumableClick","targetIds","immediate","reverse","shakeStyles","exec","useElementShake","PlayerParty","onCharacterClick","showConfirmButton","LinkedCombatContext","combatParty","setCombatParty","AppBg","bg","Forest1","Forest2","Forest3","Dungeon1","Dungeon2","getEncounterBg","backgroundSize","CombatDomain","GlobalCharacters","App","Boolean","window","location","hostname","match","engine","Styletron","store","createStore","combineReducers","compose","applyMiddleware","thunk","ReactDOM","StrictMode","debug","debugAfterHydration","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,4C,qBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,iBCA3CD,EAAOC,QAAU,IAA0B,+B,wBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,iBCA3CD,EAAOC,QAAU,IAA0B,+B,2BCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,kD,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,+B,sCCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,oECA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IA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","file":"static/js/main.0cc291c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pentagram-rose.d7458af6.svg\";","module.exports = __webpack_public_path__ + \"static/media/coins.97dc8c40.svg\";","module.exports = __webpack_public_path__ + \"static/media/broadsword.47ecfebc.svg\";","module.exports = __webpack_public_path__ + \"static/media/7.d2e528ea.png\";","module.exports = __webpack_public_path__ + \"static/media/dodging.3c689d6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/battered-axe.819d2726.svg\";","module.exports = __webpack_public_path__ + \"static/media/all-for-one.33b25b62.svg\";","module.exports = __webpack_public_path__ + \"static/media/8.d80166bd.png\";","module.exports = __webpack_public_path__ + \"static/media/cultist.998af3b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/laurel-crown.00b6e803.svg\";","module.exports = __webpack_public_path__ + \"static/media/sprint.968b443a.svg\";","module.exports = __webpack_public_path__ + \"static/media/scythe.f0a97d33.svg\";","module.exports = __webpack_public_path__ + \"static/media/ringing-bell.f8953cca.svg\";","module.exports = __webpack_public_path__ + \"static/media/bone-knife.8d6d549d.svg\";","module.exports = __webpack_public_path__ + \"static/media/drink-me.2ee1fbb7.svg\";","module.exports = __webpack_public_path__ + \"static/media/perspective-dice-six.8b7e2589.svg\";","module.exports = __webpack_public_path__ + \"static/media/shieldcomb.802f20f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/broken-shield.c26ddd72.svg\";","module.exports = __webpack_public_path__ + \"static/media/knapsack.62049a62.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.31fafbe8.png\";","module.exports = __webpack_public_path__ + \"static/media/chest-armor.f1f52a3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/viking-shield.a61f8230.svg\";","module.exports = __webpack_public_path__ + \"static/media/leather-boot.89b85474.svg\";","module.exports = __webpack_public_path__ + \"static/media/visored-helm.1f2ced7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/hammer-drop.120a92c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/saber-slash.54b5f3f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/troll.8e45be35.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.a7dcd7d0.png\";","module.exports = __webpack_public_path__ + \"static/media/3.5b81afea.png\";","module.exports = __webpack_public_path__ + \"static/media/werewolf.fa211e2a.svg\";","module.exports = __webpack_public_path__ + \"static/media/bee.7b0a0467.svg\";","module.exports = __webpack_public_path__ + \"static/media/wolf-head.4e7bf362.svg\";","module.exports = __webpack_public_path__ + \"static/media/raven.581ee1b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/witch-flight.4d7f9b27.svg\";","module.exports = __webpack_public_path__ + \"static/media/overlord-helm.03e5b513.svg\";","module.exports = __webpack_public_path__ + \"static/media/spectre.a7c36843.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-beats.6b1fff9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/biceps.e62c221f.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain.ce65603a.svg\";","module.exports = __webpack_public_path__ + \"static/media/eye-target.4c5ae680.svg\";","module.exports = __webpack_public_path__ + \"static/media/juggler.1188c0be.svg\";","module.exports = __webpack_public_path__ + \"static/media/clover.df6a0d57.svg\";","module.exports = __webpack_public_path__ + \"static/media/robe.5b61ecba.svg\";","module.exports = __webpack_public_path__ + \"static/media/scale-mail.cb5ff7d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/lightning-shield.85367254.svg\";","module.exports = __webpack_public_path__ + \"static/media/robin-hood-hat.6bab1449.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointy-hat.d042ac98.svg\";","module.exports = __webpack_public_path__ + \"static/media/battle-axe.47a5ba50.svg\";","module.exports = __webpack_public_path__ + \"static/media/gavel.e0256fff.svg\";","module.exports = __webpack_public_path__ + \"static/media/heavy-arrow.56b29a8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/bowie-knife.e7821736.svg\";","module.exports = __webpack_public_path__ + \"static/media/revolver.25251236.svg\";","module.exports = __webpack_public_path__ + \"static/media/wizard-staff.3e6091b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/croc-sword.dfa5ecf6.svg\";","module.exports = __webpack_public_path__ + \"static/media/fist.d1b25a44.svg\";","module.exports = __webpack_public_path__ + \"static/media/herbs-bundle.e02bcec1.svg\";","module.exports = __webpack_public_path__ + \"static/media/lotus-flower.4b207eda.svg\";","module.exports = __webpack_public_path__ + \"static/media/medicine-pills.ef75e681.svg\";","module.exports = __webpack_public_path__ + \"static/media/executioner-hood.6e796b5c.svg\";","module.exports = __webpack_public_path__ + \"static/media/cowled.d0cad9db.svg\";","module.exports = __webpack_public_path__ + \"static/media/female-vampire.27d5f882.svg\";","module.exports = __webpack_public_path__ + \"static/media/wizard-face.2a49683a.svg\";","module.exports = __webpack_public_path__ + \"static/media/kenku-head.3292e596.svg\";","module.exports = __webpack_public_path__ + \"static/media/high-shot.eed9def8.svg\";","module.exports = __webpack_public_path__ + \"static/media/shield-impact.54fdc5c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/energy-arrow.514fc56c.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire-zone.42e13657.svg\";","module.exports = __webpack_public_path__ + \"static/media/magic-swirl.854dc419.svg\";","module.exports = __webpack_public_path__ + \"static/media/heavy-timer.1072a406.svg\";","module.exports = __webpack_public_path__ + \"static/media/extra-time.4d418333.svg\";","module.exports = __webpack_public_path__ + \"static/media/flat-hammer.dff14efb.svg\";","module.exports = __webpack_public_path__ + \"static/media/bordered-shield.56c12b47.svg\";","module.exports = __webpack_public_path__ + \"static/media/resonance.4c1d217b.svg\";","module.exports = __webpack_public_path__ + \"static/media/gunshot.cf3eceba.svg\";","module.exports = __webpack_public_path__ + \"static/media/crosshair.d2c9a9ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/bullet-impacts.00562b6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/backward-time.d0246d45.svg\";","module.exports = __webpack_public_path__ + \"static/media/snail.bbbe7b78.svg\";","module.exports = __webpack_public_path__ + \"static/media/double-shot.70211522.svg\";","module.exports = __webpack_public_path__ + \"static/media/health-normal.0da85e24.svg\";","module.exports = __webpack_public_path__ + \"static/media/embrassed-energy.58fa9df0.svg\";","module.exports = __webpack_public_path__ + \"static/media/wave-strike.1fe6dbab.svg\";","module.exports = __webpack_public_path__ + \"static/media/life-support.c0c7c040.svg\";","module.exports = __webpack_public_path__ + \"static/media/plain-dagger.0509dd2c.svg\";","module.exports = __webpack_public_path__ + \"static/media/knife-thrust.1e29ef7c.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointy-sword.bd82b38d.svg\";","module.exports = __webpack_public_path__ + \"static/media/axe-swing.6958cc19.svg\";","module.exports = __webpack_public_path__ + \"static/media/vibrating-shield.14198b16.svg\";","module.exports = __webpack_public_path__ + \"static/media/punch.2811bb9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/ubisoft-sun.30335592.svg\";","module.exports = __webpack_public_path__ + \"static/media/star-swirl.3045bd1f.svg\";","module.exports = __webpack_public_path__ + \"static/media/targeted.b4ce8dd7.svg\";","module.exports = __webpack_public_path__ + \"static/media/sticky-boot.f097559f.svg\";","module.exports = __webpack_public_path__ + \"static/media/biohazard.cdfb567d.svg\";","module.exports = __webpack_public_path__ + \"static/media/flame.332be8c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/bleeding-wound.8d92779f.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowflake-2.a0b68bb3.svg\";","module.exports = __webpack_public_path__ + \"static/media/split-cross.fa0be1a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/hand.7bd9b12d.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-wings.bb52c66a.svg\";","module.exports = __webpack_public_path__ + \"static/media/leather-armor.f3d5462f.svg\";","module.exports = __webpack_public_path__ + \"static/media/crossed-swords.b7d2c27a.svg\";","module.exports = __webpack_public_path__ + \"static/media/divided-spiral.a8e90e0d.svg\";","module.exports = __webpack_public_path__ + \"static/media/crowned-skull.458d8f78.svg\";","import { StateCoreT, StateReducerT } from './types'\r\n\r\nexport const makeReducer = (\r\n  core: StateCoreT,\r\n  initialState: any,\r\n): StateReducerT => {\r\n  return (state = initialState, action) => {\r\n    const coreFn = core[action.type]\r\n    if (coreFn) return coreFn(state, action)\r\n    return state\r\n  }\r\n}\r\n","import { useMemo } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nexport const useActions = (actions: any) => {\r\n  const dispatch = useDispatch()\r\n  return useMemo(() => bindActionCreators(actions, dispatch), [\r\n    dispatch,\r\n    actions,\r\n  ])\r\n}\r\n","import { tStats, tBaseStats } from './type'\r\nimport { tCharacterClass } from '../Character/type'\r\n\r\nexport const ZERO_STATS: tStats = {\r\n  vigor: 0,\r\n  strength: 0,\r\n  intelligence: 0,\r\n  dexterity: 0,\r\n  charisma: 0,\r\n  agility: 0,\r\n  luck: 0,\r\n\r\n  armor: 0,\r\n  resistance: 0,\r\n  evasion: 0,\r\n\r\n  maxHealthOffset: 0,\r\n  healthRegeneration: 0,\r\n  damageTakenModifier: 0,\r\n  damageTakenRangeModifiers: {\r\n    melee: 0,\r\n    ranged: 0,\r\n  },\r\n  damageReflection: {\r\n    melee: 0,\r\n    ranged: 0,\r\n  },\r\n\r\n  attackDamageOffset: 0,\r\n  attackDamageModifier: 0,\r\n  criticalChance: 0,\r\n  damageModifiers: {\r\n    flying: 0,\r\n    undead: 0,\r\n  },\r\n\r\n  queueConsolidationModifier: 0,\r\n  queueValueSet: undefined,\r\n\r\n  goldModifier: 0,\r\n  maxInspirationOffset: 0,\r\n  consumableHealthGainOffset: 0,\r\n  minHealthOffset: 0,\r\n}\r\n\r\nexport const BASE_C_STATS: tStats = {\r\n  ...ZERO_STATS,\r\n  damageTakenModifier: 1,\r\n  attackDamageModifier: 1,\r\n  criticalChance: 5,\r\n  queueConsolidationModifier: 1,\r\n  consumableHealthGainOffset: 15,\r\n}\r\n\r\nexport const CLASS_STATS: Record<tCharacterClass, tStats> = {\r\n  executioner: {\r\n    ...BASE_C_STATS,\r\n    strength: 78,\r\n    vigor: 75,\r\n    intelligence: 44,\r\n    dexterity: 70,\r\n    charisma: 52,\r\n    agility: 58,\r\n    luck: 50,\r\n    armor: 1,\r\n    resistance: 0,\r\n    evasion: 8,\r\n  },\r\n  ranger: {\r\n    ...BASE_C_STATS,\r\n    strength: 52,\r\n    vigor: 66,\r\n    intelligence: 46,\r\n    dexterity: 78,\r\n    charisma: 64,\r\n    agility: 78,\r\n    luck: 50,\r\n    armor: 1,\r\n    resistance: 0,\r\n    evasion: 20,\r\n  },\r\n  reaper: {\r\n    ...BASE_C_STATS,\r\n    strength: 48,\r\n    vigor: 60,\r\n    intelligence: 42,\r\n    dexterity: 76,\r\n    charisma: 72,\r\n    agility: 74,\r\n    luck: 50,\r\n    armor: 1,\r\n    resistance: 0,\r\n    evasion: 17,\r\n  },\r\n  student: {\r\n    ...BASE_C_STATS,\r\n    strength: 42,\r\n    vigor: 60,\r\n    intelligence: 78,\r\n    dexterity: 66,\r\n    charisma: 70,\r\n    agility: 70,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 1,\r\n    evasion: 13,\r\n  },\r\n  patrician: {\r\n    ...BASE_C_STATS,\r\n    strength: 44,\r\n    vigor: 50,\r\n    intelligence: 70,\r\n    dexterity: 68,\r\n    charisma: 78,\r\n    agility: 68,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 1,\r\n    evasion: 11,\r\n  },\r\n  drifter: {\r\n    ...BASE_C_STATS,\r\n    strength: 70,\r\n    vigor: 70,\r\n    intelligence: 70,\r\n    dexterity: 70,\r\n    charisma: 70,\r\n    agility: 70,\r\n    luck: 30,\r\n    armor: 1,\r\n    resistance: 1,\r\n    evasion: 13,\r\n  },\r\n  enemy: BASE_C_STATS,\r\n}\r\n\r\nexport const DAMAGE_BONUS_KEYS: (keyof tStats)[] = [\r\n  'goldModifier',\r\n  'attackDamageOffset',\r\n  'attackDamageModifier',\r\n  'criticalChance',\r\n]\r\nexport const DEFENSE_BONUS_KEYS: (keyof tStats)[] = [\r\n  'armor',\r\n  'resistance',\r\n  'evasion',\r\n  'healthRegeneration',\r\n  'damageReflection',\r\n]\r\nexport const HEALTH_FOCUS_BONUS_KEYS: (keyof tStats)[] = [\r\n  'maxHealthOffset',\r\n  'maxInspirationOffset',\r\n]\r\nexport const STAT_BONUS_KEYS: (keyof tBaseStats)[] = [\r\n  'vigor',\r\n  'strength',\r\n  'intelligence',\r\n  'dexterity',\r\n  'charisma',\r\n  'agility',\r\n  'luck',\r\n]\r\n\r\nexport const STAT_KEY_LABELS: Record<keyof tStats, string> = {\r\n  strength: ' Strength',\r\n  vigor: ' Vigor',\r\n  intelligence: ' Intelligence',\r\n  dexterity: ' Dexterity',\r\n  charisma: ' Charisma',\r\n  agility: ' Agility',\r\n  luck: ' Luck',\r\n  evasion: ' Evasion',\r\n  criticalChance: '% Crit Chance',\r\n\r\n  armor: ' Armor',\r\n  resistance: ' Resistance',\r\n\r\n  maxHealthOffset: ' Health',\r\n  healthRegeneration: ' Health Regen',\r\n  damageReflection: ' Damage Reflection',\r\n  damageTakenModifier: '% Recieved Damage',\r\n  damageTakenRangeModifiers: '% Recieved Damage from certain sources',\r\n\r\n  damageModifiers: ' Damage to certain Enemeies',\r\n\r\n  queueConsolidationModifier: ' Queue Consolidation Modifier',\r\n  queueValueSet: ' Queue Value Set',\r\n\r\n  attackDamageOffset: ' Raw Damage',\r\n  attackDamageModifier: '% Attack Damage',\r\n\r\n  goldModifier: '% Gold Recieved',\r\n  maxInspirationOffset: ' Max Inspiration',\r\n  minHealthOffset: ' Minumum Health',\r\n  consumableHealthGainOffset: ' HP from Consumables',\r\n}\r\n","export const undefAdd = (\r\n  a: number | undefined,\r\n  b: number | undefined,\r\n): number | undefined => {\r\n  if (a === undefined && b === undefined) return undefined\r\n  if (a === undefined && b !== undefined) return b\r\n  if (a !== undefined && b === undefined) return a\r\n  if (a !== undefined && b !== undefined) return a + b\r\n}\r\n","import { tStats } from './type'\r\nimport { ZERO_STATS } from './constants'\r\nimport { undefAdd } from '../../util/undefAdd'\r\n\r\nexport const combineStats = (...stats: tStats[]) => {\r\n  return stats.reduce(\r\n    (result, stats) => ({\r\n      vigor: result.vigor + stats.vigor,\r\n      strength: result.strength + stats.strength,\r\n      intelligence: result.intelligence + stats.intelligence,\r\n      dexterity: result.dexterity + stats.dexterity,\r\n      charisma: result.charisma + stats.charisma,\r\n      agility: result.agility + stats.agility,\r\n      luck: result.luck + stats.luck,\r\n\r\n      armor: result.armor + stats.armor,\r\n      resistance: result.resistance + stats.resistance,\r\n      evasion: result.evasion + stats.evasion,\r\n\r\n      maxHealthOffset: result.maxHealthOffset + stats.maxHealthOffset,\r\n      healthRegeneration: result.healthRegeneration + stats.healthRegeneration,\r\n      damageTakenModifier:\r\n        result.damageTakenModifier + stats.damageTakenModifier,\r\n      damageTakenRangeModifiers: {\r\n        melee:\r\n          result.damageTakenRangeModifiers.melee +\r\n          stats.damageTakenRangeModifiers.melee,\r\n        ranged:\r\n          result.damageTakenRangeModifiers.ranged +\r\n          stats.damageTakenRangeModifiers.ranged,\r\n      },\r\n      damageReflection: {\r\n        melee: result.damageReflection.melee + stats.damageReflection.melee,\r\n        ranged: result.damageReflection.ranged + stats.damageReflection.ranged,\r\n      },\r\n\r\n      attackDamageOffset: result.attackDamageOffset + stats.attackDamageOffset,\r\n      attackDamageModifier:\r\n        result.attackDamageModifier + stats.attackDamageModifier,\r\n      criticalChance: result.criticalChance + stats.criticalChance,\r\n      damageModifiers: {\r\n        flying: result.damageModifiers.flying + stats.damageModifiers.flying,\r\n        undead: result.damageModifiers.undead + stats.damageModifiers.undead,\r\n      },\r\n\r\n      queueConsolidationModifier:\r\n        result.queueConsolidationModifier + stats.queueConsolidationModifier,\r\n      queueValueSet: undefAdd(result.queueValueSet, stats.queueValueSet),\r\n\r\n      goldModifier: result.goldModifier + stats.goldModifier,\r\n      maxInspirationOffset:\r\n        result.maxInspirationOffset + stats.maxInspirationOffset,\r\n      consumableHealthGainOffset:\r\n        result.consumableHealthGainOffset + stats.consumableHealthGainOffset,\r\n      minHealthOffset: result.minHealthOffset + stats.minHealthOffset,\r\n    }),\r\n    ZERO_STATS,\r\n  )\r\n}\r\n\r\nexport const multiplyStats = (stats: tStats, modifier: number): tStats => ({\r\n  vigor: stats.vigor * modifier,\r\n  strength: stats.strength * modifier,\r\n  intelligence: stats.intelligence * modifier,\r\n  dexterity: stats.dexterity * modifier,\r\n  charisma: stats.charisma * modifier,\r\n  agility: stats.agility * modifier,\r\n  luck: stats.luck * modifier,\r\n\r\n  armor: stats.armor * modifier,\r\n  resistance: stats.resistance * modifier,\r\n  evasion: stats.evasion * modifier,\r\n\r\n  maxHealthOffset: stats.maxHealthOffset * modifier,\r\n  healthRegeneration: stats.healthRegeneration * modifier,\r\n  damageTakenModifier: stats.damageTakenModifier * modifier,\r\n  damageTakenRangeModifiers: {\r\n    melee: stats.damageTakenRangeModifiers.melee * modifier,\r\n    ranged: stats.damageTakenRangeModifiers.ranged * modifier,\r\n  },\r\n  damageReflection: {\r\n    melee: stats.damageReflection.melee * modifier,\r\n    ranged: stats.damageReflection.ranged * modifier,\r\n  },\r\n\r\n  attackDamageOffset: stats.attackDamageOffset * modifier,\r\n  attackDamageModifier: stats.attackDamageModifier * modifier,\r\n  criticalChance: stats.criticalChance * modifier,\r\n  damageModifiers: {\r\n    flying: stats.damageModifiers.flying * modifier,\r\n    undead: stats.damageModifiers.undead * modifier,\r\n  },\r\n\r\n  queueConsolidationModifier: stats.queueConsolidationModifier * modifier,\r\n  queueValueSet: stats.queueValueSet,\r\n\r\n  goldModifier: stats.goldModifier * modifier,\r\n  maxInspirationOffset: stats.maxInspirationOffset * modifier,\r\n  consumableHealthGainOffset: stats.consumableHealthGainOffset * modifier,\r\n  minHealthOffset: stats.minHealthOffset * modifier,\r\n})\r\n","import { tStatusType, tStatusConfig } from './type'\r\nimport { ZERO_STATS } from '../Stats/constants'\r\n\r\nexport const STATUS_CONFIG: Record<tStatusType, tStatusConfig> = {\r\n  bleeding: {\r\n    name: 'Bleeding',\r\n    description: '-10 HP on your turn.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      healthRegeneration: -6,\r\n    },\r\n    immunities: [],\r\n  },\r\n  burning: {\r\n    name: 'Burning',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      healthRegeneration: -6,\r\n    },\r\n    immunities: [],\r\n  },\r\n  // TODO: Different cursed status' for different stats\r\n  'cursed-vigor': {\r\n    name: 'Cursed',\r\n    description: '-15 to Vigor',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      vigor: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-strength': {\r\n    name: 'Cursed',\r\n    description: '-15 to Strength',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      strength: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-dexterity': {\r\n    name: 'Cursed',\r\n    description: '-15 to Dexterity',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      dexterity: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-intelligence': {\r\n    name: 'Cursed',\r\n    description: '-15 to Intelligence',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      intelligence: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-charisma': {\r\n    name: 'Cursed',\r\n    description: '-15 to Charisma',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      charisma: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-agility': {\r\n    name: 'Cursed',\r\n    description: '-15 to Agility',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      agility: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-luck': {\r\n    name: 'Cursed',\r\n    description: '-15 to Luck',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      luck: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  frozen: {\r\n    name: 'Frozen',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      damageTakenModifier: 25,\r\n    },\r\n    immunities: [],\r\n  },\r\n  poisoned: {\r\n    name: 'Poisoned',\r\n    description: \"-5 HP on this character's turn and -5 to each stat.\",\r\n    canStack: true,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      vigor: -5,\r\n      strength: -5,\r\n      intelligence: -5,\r\n      dexterity: -5,\r\n      charisma: -5,\r\n      healthRegeneration: -3,\r\n    },\r\n    immunities: [],\r\n  },\r\n  // TODO: Shocked status\r\n  shocked: {\r\n    name: 'Shocked',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  stunned: {\r\n    name: 'Stunned',\r\n    description: 'This character will not progress on the battle timeline.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 2,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueConsolidationModifier: -1,\r\n    },\r\n    immunities: [],\r\n  },\r\n  // TODO: Wet Status\r\n  wet: {\r\n    name: 'Wet',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'armor-up': {\r\n    name: 'Armor Up',\r\n    description: '+5 Armor',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      armor: 5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'attack-up': {\r\n    name: 'Attack Up',\r\n    description: '+5 Attack Damage',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      attackDamageOffset: 5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'evade-up': {\r\n    name: 'Evade Up',\r\n    description: '+15 Evasion',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      evasion: 15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'resistance-up': {\r\n    name: 'Resistance Up',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      resistance: 5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'speed-up': {\r\n    name: 'Speed Up',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      agility: 15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'armor-down': {\r\n    name: 'Armor Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      armor: -5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'attack-down': {\r\n    name: 'Attack Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      attackDamageOffset: -5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'evade-down': {\r\n    name: 'Evade Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      evasion: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'resistance-down': {\r\n    name: 'Resistance Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      resistance: -5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'speed-down': {\r\n    name: 'Speed Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      agility: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  rushed: {\r\n    name: 'Rushed',\r\n    description: 'Bring to front of queue.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 0,\r\n    },\r\n    immunities: [],\r\n  },\r\n  interrupted: {\r\n    name: 'Interrupted',\r\n    description: 'Set back 70 unites.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 70,\r\n    },\r\n    immunities: [],\r\n  },\r\n  reset: {\r\n    name: 'Reset',\r\n    description: 'Set back 100 units.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 100,\r\n    },\r\n    immunities: [],\r\n  },\r\n  evasive: {\r\n    name: 'Evasive',\r\n    description: 'Non-perfect attacks will miss when targeting this character.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  resilient: {\r\n    name: 'Resilient',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  protected: {\r\n    name: 'Protected',\r\n    description: 'Negate the next bit of damage.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  targeted: {\r\n    name: 'Targeted',\r\n    description: 'All enemies will attack this player.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 6,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  cure: {\r\n    name: 'Cure',\r\n    description: 'Remove Poisoned, Bleeding, and Burning',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: ['poisoned', 'bleeding', 'burning', 'frozen', 'wet', 'shocked'],\r\n  },\r\n  blessed: {\r\n    name: 'Blessed',\r\n    description: 'Temporary Curse Immunity',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: ZERO_STATS,\r\n    immunities: [\r\n      'cursed-agility',\r\n      'cursed-charisma',\r\n      'cursed-dexterity',\r\n      'cursed-intelligence',\r\n      'cursed-luck',\r\n      'cursed-strength',\r\n      'cursed-vigor',\r\n    ],\r\n  },\r\n}\r\n","export const noneg = (value: number) => (value > 0 ? value : 0)\r\n","import { tWeaponClassDamageConfig, tWeaponTypeDamageConfig } from './type'\r\n\r\nexport const GLOBAL_DAMAGE_OFFSETS: tWeaponTypeDamageConfig = {\r\n  axe: 0,\r\n  hammer: 0,\r\n  sword: 0,\r\n  greatsword: 0,\r\n  bow: 0,\r\n  dagger: 0,\r\n  scythe: -1,\r\n  catalyst: 0,\r\n  chime: 0,\r\n  pistol: 0,\r\n  fist: 0,\r\n  enemy: 0,\r\n}\r\nexport const WEAPON_DAMAGE_CONFIG: tWeaponClassDamageConfig = {\r\n  starting: {\r\n    axe: 11,\r\n    hammer: 9,\r\n    sword: 8,\r\n    greatsword: 13,\r\n    bow: 6,\r\n    dagger: 5,\r\n    scythe: 8,\r\n    catalyst: 6,\r\n    chime: 6,\r\n    pistol: 5,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  // LEVEL 1 ccc ur\r\n  rusted: {\r\n    // higher damage than tomb, but worse skills\r\n    axe: 14,\r\n    hammer: 12,\r\n    sword: 11,\r\n    greatsword: 15,\r\n    bow: 14,\r\n    dagger: 7,\r\n    scythe: 12,\r\n    catalyst: 9,\r\n    chime: 9,\r\n    pistol: 7,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  tomb: {\r\n    axe: 15,\r\n    hammer: 12,\r\n    sword: 12,\r\n    greatsword: 16,\r\n    bow: 14,\r\n    dagger: 8,\r\n    scythe: 13,\r\n    catalyst: 12,\r\n    chime: 12,\r\n    pistol: 8,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  buried: {\r\n    axe: 16,\r\n    hammer: 13,\r\n    sword: 13,\r\n    greatsword: 17,\r\n    bow: 15,\r\n    dagger: 9,\r\n    scythe: 13,\r\n    catalyst: 13,\r\n    chime: 13,\r\n    pistol: 9,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  withering: {\r\n    axe: 18,\r\n    hammer: 15,\r\n    sword: 15,\r\n    greatsword: 19,\r\n    bow: 17,\r\n    dagger: 12,\r\n    scythe: 15,\r\n    catalyst: 16,\r\n    chime: 16,\r\n    pistol: 10,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  glass: {\r\n    axe: 22,\r\n    hammer: 18,\r\n    sword: 18,\r\n    greatsword: 23,\r\n    bow: 21,\r\n    dagger: 16,\r\n    scythe: 21,\r\n    catalyst: 21,\r\n    chime: 21,\r\n    pistol: 16,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 2 ccc\r\n  iron: {\r\n    axe: 19,\r\n    hammer: 16,\r\n    sword: 16,\r\n    greatsword: 20,\r\n    bow: 18,\r\n    dagger: 12,\r\n    scythe: 16,\r\n    catalyst: 16,\r\n    chime: 16,\r\n    pistol: 12,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  steel: {\r\n    axe: 20,\r\n    hammer: 17,\r\n    sword: 17,\r\n    greatsword: 21,\r\n    bow: 19,\r\n    dagger: 13,\r\n    scythe: 17,\r\n    catalyst: 17,\r\n    chime: 17,\r\n    pistol: 13,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  stainless: {\r\n    axe: 21,\r\n    hammer: 18,\r\n    sword: 18,\r\n    greatsword: 22,\r\n    bow: 20,\r\n    dagger: 14,\r\n    scythe: 18,\r\n    catalyst: 18,\r\n    chime: 18,\r\n    pistol: 14,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 3 ur rr\r\n  ancient: {\r\n    axe: 24,\r\n    hammer: 21,\r\n    sword: 21,\r\n    greatsword: 25,\r\n    bow: 23,\r\n    dagger: 17,\r\n    scythe: 21,\r\n    catalyst: 21,\r\n    chime: 21,\r\n    pistol: 17,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  crystal: {\r\n    axe: 26,\r\n    hammer: 23,\r\n    sword: 23,\r\n    greatsword: 27,\r\n    bow: 25,\r\n    dagger: 20,\r\n    scythe: 23,\r\n    catalyst: 23,\r\n    chime: 23,\r\n    pistol: 20,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  elemental: {\r\n    axe: 24,\r\n    hammer: 21,\r\n    sword: 21,\r\n    greatsword: 25,\r\n    bow: 23,\r\n    dagger: 17,\r\n    scythe: 21,\r\n    catalyst: 21,\r\n    chime: 21,\r\n    pistol: 17,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  cursed: {\r\n    axe: 25,\r\n    hammer: 22,\r\n    sword: 22,\r\n    greatsword: 26,\r\n    bow: 24,\r\n    dagger: 18,\r\n    scythe: 22,\r\n    catalyst: 22,\r\n    chime: 22,\r\n    pistol: 18,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 4 cuu r\r\n  sharp: {\r\n    axe: 28,\r\n    hammer: 25,\r\n    sword: 25,\r\n    greatsword: 29,\r\n    bow: 26,\r\n    dagger: 21,\r\n    scythe: 25,\r\n    catalyst: 26,\r\n    chime: 26,\r\n    pistol: 21,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  hardened: {\r\n    axe: 30,\r\n    hammer: 27,\r\n    sword: 27,\r\n    greatsword: 31,\r\n    bow: 28,\r\n    dagger: 23,\r\n    scythe: 27,\r\n    catalyst: 28,\r\n    chime: 28,\r\n    pistol: 23,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  engraved: {\r\n    axe: 31,\r\n    hammer: 28,\r\n    sword: 28,\r\n    greatsword: 32,\r\n    bow: 29,\r\n    dagger: 24,\r\n    scythe: 28,\r\n    catalyst: 29,\r\n    chime: 29,\r\n    pistol: 24,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  ethereal: {\r\n    axe: 34,\r\n    hammer: 32,\r\n    sword: 32,\r\n    greatsword: 35,\r\n    bow: 33,\r\n    dagger: 27,\r\n    scythe: 31,\r\n    catalyst: 32,\r\n    chime: 32,\r\n    pistol: 27,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 5 ur mm\r\n  exquisite: {\r\n    axe: 33,\r\n    hammer: 31,\r\n    sword: 31,\r\n    greatsword: 34,\r\n    bow: 32,\r\n    dagger: 26,\r\n    scythe: 30,\r\n    catalyst: 31,\r\n    chime: 31,\r\n    pistol: 26,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  divine: {\r\n    axe: 35,\r\n    hammer: 33,\r\n    sword: 33,\r\n    greatsword: 36,\r\n    bow: 34,\r\n    dagger: 28,\r\n    scythe: 32,\r\n    catalyst: 33,\r\n    chime: 33,\r\n    pistol: 28,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  arcane: {\r\n    axe: 36,\r\n    hammer: 33,\r\n    sword: 33,\r\n    greatsword: 37,\r\n    bow: 35,\r\n    dagger: 29,\r\n    scythe: 33,\r\n    catalyst: 34,\r\n    chime: 34,\r\n    pistol: 29,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  celestial: {\r\n    axe: 38,\r\n    hammer: 35,\r\n    sword: 35,\r\n    greatsword: 39,\r\n    bow: 37,\r\n    dagger: 31,\r\n    scythe: 35,\r\n    catalyst: 36,\r\n    chime: 36,\r\n    pistol: 31,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 6\r\n  mythic: {\r\n    axe: 40,\r\n    hammer: 37,\r\n    sword: 37,\r\n    greatsword: 41,\r\n    bow: 39,\r\n    dagger: 33,\r\n    scythe: 37,\r\n    catalyst: 38,\r\n    chime: 38,\r\n    pistol: 33,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  unique: {\r\n    axe: 40,\r\n    hammer: 37,\r\n    sword: 37,\r\n    greatsword: 41,\r\n    bow: 39,\r\n    dagger: 33,\r\n    scythe: 37,\r\n    catalyst: 38,\r\n    chime: 38,\r\n    pistol: 33,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n}\r\n","import { tWeaponType } from '../type'\r\nimport { tWeaponClass } from './type'\r\n\r\nexport const BASE_WEAPON_TYPES_GOLD: Record<tWeaponType, number> = {\r\n  axe: 30,\r\n  bow: 30,\r\n  catalyst: 30,\r\n  chime: 30,\r\n  dagger: 10,\r\n  greatsword: 35,\r\n  hammer: 25,\r\n  pistol: 15,\r\n  scythe: 30,\r\n  sword: 25,\r\n  fist: 0,\r\n  enemy: 0,\r\n}\r\n\r\nexport const WEAPON_CLASS_GOLD_OFFSETS: Record<tWeaponClass, number> = {\r\n  starting: -20,\r\n  rusted: 0,\r\n  tomb: 5,\r\n  buried: 10,\r\n  withering: 30,\r\n  glass: 40,\r\n\r\n  iron: 25,\r\n  steel: 30,\r\n  stainless: 35,\r\n\r\n  ancient: 40,\r\n  crystal: 50,\r\n  elemental: 55,\r\n  cursed: 55,\r\n\r\n  sharp: 50,\r\n  hardened: 55,\r\n  engraved: 60,\r\n  ethereal: 65,\r\n\r\n  exquisite: 80,\r\n  divine: 90,\r\n  arcane: 100,\r\n  celestial: 120,\r\n\r\n  mythic: 150,\r\n  unique: 150,\r\n}\r\n","import { tWeaponRarityConfig } from './type'\r\n\r\nexport const WEAPON_CLASS_RARIES: tWeaponRarityConfig = {\r\n  starting: 'common',\r\n  rusted: 'common',\r\n  tomb: 'common',\r\n  buried: 'common',\r\n  withering: 'uncommon',\r\n  glass: 'rare',\r\n  iron: 'common',\r\n  steel: 'common',\r\n  stainless: 'common',\r\n  ancient: 'common',\r\n  crystal: 'rare',\r\n  elemental: 'rare',\r\n  cursed: 'rare',\r\n  sharp: 'common',\r\n  hardened: 'uncommon',\r\n  engraved: 'uncommon',\r\n  ethereal: 'rare',\r\n  exquisite: 'uncommon',\r\n  divine: 'rare',\r\n  arcane: 'mythic',\r\n  celestial: 'mythic',\r\n  mythic: 'mythic',\r\n  unique: 'mythic',\r\n}\r\n","import { tWeaponStatsConfig } from './type'\r\n\r\nexport const DEFAULT_WEAPON_TYPE_STATS: tWeaponStatsConfig = {\r\n  axe: {},\r\n  hammer: {},\r\n  sword: {},\r\n  greatsword: {},\r\n  bow: {},\r\n  dagger: {},\r\n  scythe: {},\r\n  catalyst: {},\r\n  chime: {},\r\n  pistol: {},\r\n  fist: {},\r\n  enemy: {},\r\n}\r\n","import { tWeaponTypeConfig } from './type'\r\n\r\nexport const DEFAULT_WEAPON_TYPE_CONFIG: tWeaponTypeConfig = {\r\n  axe: {\r\n    stat: 'strength',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  hammer: {\r\n    stat: 'strength',\r\n    twoHand: false,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  sword: {\r\n    stat: 'strength',\r\n    twoHand: false,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  greatsword: {\r\n    stat: 'strength',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  bow: {\r\n    stat: 'dexterity',\r\n    twoHand: true,\r\n    range: 'ranged',\r\n    damageType: 'physical',\r\n  },\r\n  dagger: {\r\n    stat: 'dexterity',\r\n    twoHand: false,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  scythe: {\r\n    stat: 'dexterity',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  catalyst: {\r\n    stat: 'intelligence',\r\n    twoHand: true,\r\n    range: 'ranged',\r\n    damageType: 'magic',\r\n  },\r\n  chime: {\r\n    stat: 'charisma',\r\n    twoHand: true,\r\n    range: 'ranged',\r\n    damageType: 'magic',\r\n  },\r\n  pistol: {\r\n    stat: 'charisma',\r\n    twoHand: false,\r\n    range: 'ranged',\r\n    damageType: 'physical',\r\n  },\r\n  fist: {\r\n    stat: 'vigor',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  enemy: {\r\n    stat: 'vigor',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { tSkill } from '../../Skill/type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { tStats } from '../../Stats/type'\r\nimport { tStatusType } from '../../Status/type'\r\nimport { tWeapon, tWeaponType } from '../type'\r\nimport { GLOBAL_DAMAGE_OFFSETS, WEAPON_DAMAGE_CONFIG } from './damage'\r\nimport { BASE_WEAPON_TYPES_GOLD, WEAPON_CLASS_GOLD_OFFSETS } from './goldValue'\r\nimport { WEAPON_CLASS_RARIES } from './rarity'\r\nimport { DEFAULT_WEAPON_TYPE_STATS } from './stats'\r\nimport { tWeaponClass } from './type'\r\nimport { DEFAULT_WEAPON_TYPE_CONFIG } from './typeConfig'\r\n\r\nexport const createWeapon = (\r\n  weaponType: tWeaponType,\r\n  weaponClass: tWeaponClass,\r\n  skills: tSkill[],\r\n  stats: Partial<tStats>,\r\n  immunities: tStatusType[] = [],\r\n  goldValue?: number,\r\n): tWeapon => {\r\n  const damageValue =\r\n    WEAPON_DAMAGE_CONFIG[weaponClass][weaponType] +\r\n    GLOBAL_DAMAGE_OFFSETS[weaponType]\r\n  const { stat, twoHand, range, damageType } = DEFAULT_WEAPON_TYPE_CONFIG[\r\n    weaponType\r\n  ]\r\n  const rarity = WEAPON_CLASS_RARIES[weaponClass]\r\n  const defaultStats = DEFAULT_WEAPON_TYPE_STATS[weaponType]\r\n  return {\r\n    id: v4(),\r\n    name: `${weaponClass} ${weaponType}`,\r\n    rarity,\r\n    itemType: 'weapon',\r\n    goldValue:\r\n      goldValue ||\r\n      BASE_WEAPON_TYPES_GOLD[weaponType] +\r\n        WEAPON_CLASS_GOLD_OFFSETS[weaponClass],\r\n    type: weaponType,\r\n    twoHand,\r\n    breakable: false,\r\n    damage: {\r\n      value: damageValue,\r\n      type: damageType,\r\n      range,\r\n    },\r\n    stat,\r\n    skills,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      ...defaultStats,\r\n      ...stats,\r\n    },\r\n    immunities,\r\n  }\r\n}\r\n\r\nexport const createBreakableWeapon = (\r\n  weaponType: tWeaponType,\r\n  weaponClass: tWeaponClass,\r\n  skills: tSkill[],\r\n  stats: Partial<tStats>,\r\n  immunities: tStatusType[] = [],\r\n  goldValue?: number,\r\n): tWeapon => {\r\n  return {\r\n    ...createWeapon(\r\n      weaponType,\r\n      weaponClass,\r\n      skills,\r\n      stats,\r\n      immunities,\r\n      goldValue,\r\n    ),\r\n    breakable: true,\r\n  }\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { tSkill } from '../type'\r\n\r\nexport const createSkill = (\r\n  name: string,\r\n  rolls: number,\r\n  offset: number,\r\n  rest: Partial<tSkill> = {},\r\n): tSkill => {\r\n  return {\r\n    id: v4(),\r\n    name,\r\n    damageModifier: 1,\r\n    splashDamageModifier: 0,\r\n    targetType: 'single',\r\n    damage: true,\r\n    healing: false,\r\n    rolls,\r\n    offset,\r\n    perfectSplash: false,\r\n    perfectPierce: false,\r\n    perfectStatus: [],\r\n    ...rest,\r\n  }\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const CHOP = createSkill('Chop', 3, 0)\r\nexport const SWING = createSkill('Swing', 4, 0)\r\nexport const WITHERING_SWING = createSkill('Swing', 2, 0)\r\nexport const GLASS_SWING = createSkill('Swing', 1, 0)\r\nexport const AXE_SPIN = createSkill('Axe Spin', 5, -10, {\r\n  perfectSplash: true,\r\n  splashDamageModifier: 0.5,\r\n})\r\nexport const FLURRY = createSkill('Swipe', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const CLEAVE = createSkill('Cleave', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const SLICE = createSkill('Slice', 4, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  AXE_SPIN,\r\n  CHOP,\r\n  CLEAVE,\r\n  FLURRY,\r\n  GLASS_SWING,\r\n  SLASH,\r\n  SLICE,\r\n  STUN,\r\n  SWING,\r\n  WITHERING_SWING,\r\n} from '../../../Skill/skills/axe'\r\nimport { tWeapon } from '../../type'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'axe'\r\nexport const EXECUTIONER_AXE = (): tWeapon => ({\r\n  ...createWeapon(type, 'starting', [CHOP, AXE_SPIN], {}),\r\n  name: `Executioner Axe`,\r\n})\r\n\r\nexport const RUSTED_AXE = () => createWeapon(type, 'rusted', [CHOP, SWING], {})\r\nexport const TOMB_AXE = () => createWeapon(type, 'tomb', [SWING, FLURRY], {})\r\nexport const BURRIED_AXE = () =>\r\n  createWeapon(type, 'buried', [CHOP, FLURRY, SLICE], {})\r\nexport const WITHERING_AXE = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_SWING], {})\r\nexport const GLASS_AXE = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_SWING], {})\r\n\r\nexport const IRON_AXE = () => createWeapon(type, 'iron', [CHOP, STUN], {})\r\nexport const STEEL_AXE = () =>\r\n  createWeapon(type, 'steel', [CHOP, SLICE, CLEAVE], {})\r\nexport const STAINLESS_AXE = () =>\r\n  createWeapon(type, 'stainless', [SLICE, CLEAVE, SLASH], {})\r\n\r\nexport const ANCIENT_AXE = () =>\r\n  createWeapon(type, 'ancient', [SWING, CLEAVE], {})\r\nexport const CRYSTAL_AXE = () =>\r\n  createWeapon(type, 'crystal', [GLASS_SWING], {})\r\nexport const ELEMENTAL_AXE = () => createWeapon(type, 'elemental', [CHOP], {})\r\nexport const CURSED_AXE = () => createWeapon(type, 'cursed', [CHOP], {})\r\n\r\nexport const SHARP_AXE = () =>\r\n  createWeapon(type, 'sharp', [SLICE, SLASH, AXE_SPIN], {})\r\nexport const HARDENED_AXE = () =>\r\n  createWeapon(type, 'hardened', [SLICE, SLASH, STUN], {})\r\nexport const ENGRAVED_AXE = () =>\r\n  createWeapon(type, 'engraved', [SLICE, SLASH, FLURRY], {})\r\nexport const ETHEREAL_AXE = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_SWING], {})\r\n\r\nexport const EXQUISITE_AXE = () =>\r\n  createWeapon(type, 'exquisite', [SLICE, SLASH, CLEAVE], {})\r\nexport const DIVINE_AXE = () =>\r\n  createWeapon(type, 'divine', [SLICE, SLICE, STUN], {})\r\nexport const ARCANE_AXE = () => createWeapon(type, 'arcane', [CHOP], {})\r\nexport const CELESTIAL_AXE = () =>\r\n  createBreakableWeapon(type, 'celestial', [GLASS_SWING], {})\r\n\r\nexport const AXES: tWeaponsByLevel = {\r\n  0: [EXECUTIONER_AXE],\r\n  1: [RUSTED_AXE, TOMB_AXE, BURRIED_AXE, WITHERING_AXE, GLASS_AXE],\r\n  2: [IRON_AXE, STEEL_AXE, STAINLESS_AXE],\r\n  3: [ANCIENT_AXE, CRYSTAL_AXE, ELEMENTAL_AXE, CURSED_AXE],\r\n  4: [SHARP_AXE, HARDENED_AXE, ENGRAVED_AXE, ETHEREAL_AXE],\r\n  5: [EXQUISITE_AXE, DIVINE_AXE, ARCANE_AXE, CELESTIAL_AXE],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const SHOT = createSkill('Shot', 3, 0)\r\nexport const WITHERING_SHOT = createSkill('Shot', 2, 0)\r\nexport const GLASS_SHOT = createSkill('Shot', 1, 0)\r\nexport const HEADSHOT = createSkill('Headshot', 3, -10, {\r\n  perfectPierce: true,\r\n})\r\nexport const FLURRY = createSkill('Flurry', 2, -5, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const PIN_DOWN = createSkill('Pin Down', 2, -10, {\r\n  perfectStatus: ['speed-down'],\r\n})\r\nexport const WOUNDING_SHOT = createSkill('Wounding Shot', 2, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  HEADSHOT,\r\n  SHOT,\r\n  GLASS_SHOT,\r\n  FLURRY,\r\n  PIN_DOWN,\r\n  WITHERING_SHOT,\r\n  STUN,\r\n  WOUNDING_SHOT,\r\n} from '../../../Skill/skills/bow'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'bow'\r\nexport const RANGERS_BOW = () => ({\r\n  ...createWeapon(type, 'starting', [SHOT, HEADSHOT], {}),\r\n  name: `Ranger Bow`,\r\n})\r\nexport const RUSTED_BOW = () =>\r\n  createWeapon(type, 'rusted', [SHOT, HEADSHOT], {})\r\nexport const TOMB_BOW = () =>\r\n  createWeapon(type, 'tomb', [SHOT, HEADSHOT, FLURRY], {})\r\nexport const BURRIED_BOW = () =>\r\n  createWeapon(type, 'buried', [SHOT, FLURRY, PIN_DOWN], {})\r\nexport const WITHERING_BOW = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_SHOT], {})\r\nexport const GLASS_BOW = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_SHOT], {})\r\n\r\nexport const IRON_BOW = () => createWeapon(type, 'iron', [SHOT, STUN], {})\r\nexport const STEEL_BOW = () =>\r\n  createWeapon(type, 'steel', [SHOT, HEADSHOT, WOUNDING_SHOT], {})\r\nexport const STAINLESS_BOW = () =>\r\n  createWeapon(type, 'stainless', [SHOT, FLURRY, PIN_DOWN], {})\r\n\r\nexport const ANCIENT_BOW = () =>\r\n  createWeapon(type, 'ancient', [SHOT, FLURRY, WOUNDING_SHOT], {})\r\nexport const CRYSTAL_BOW = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_SHOT], {})\r\nexport const ELEMENTAL_BOW = () => createWeapon(type, 'elemental', [SHOT], {})\r\nexport const CURSED_BOW = () => createWeapon(type, 'cursed', [SHOT], {})\r\n\r\nexport const SHARP_BOW = () =>\r\n  createWeapon(type, 'sharp', [SHOT, HEADSHOT, WOUNDING_SHOT], {})\r\nexport const HARDENED_BOW = () =>\r\n  createWeapon(type, 'hardened', [SHOT, FLURRY, PIN_DOWN], {})\r\nexport const ENGRAVED_BOW = () =>\r\n  createWeapon(type, 'engraved', [SHOT, HEADSHOT, STUN, WOUNDING_SHOT], {})\r\nexport const ETHEREAL_BOW = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_SHOT], {})\r\n\r\nexport const EXQUISITE_BOW = () =>\r\n  createWeapon(type, 'exquisite', [SHOT, HEADSHOT], {})\r\nexport const DIVINE_BOW = () =>\r\n  createWeapon(type, 'divine', [SHOT, HEADSHOT], {})\r\nexport const ARCANE_BOW = () => createWeapon(type, 'arcane', [SHOT], {})\r\nexport const CELESTIAL_BOW = () => createWeapon(type, 'celestial', [SHOT], {})\r\n\r\nexport const BOWS: tWeaponsByLevel = {\r\n  0: [RANGERS_BOW],\r\n  1: [RUSTED_BOW, TOMB_BOW, BURRIED_BOW, WITHERING_BOW, GLASS_BOW],\r\n  2: [IRON_BOW, STEEL_BOW, STAINLESS_BOW],\r\n  3: [ANCIENT_BOW, CRYSTAL_BOW, ELEMENTAL_BOW, CURSED_BOW],\r\n  4: [SHARP_BOW, HARDENED_BOW, ENGRAVED_BOW, ETHEREAL_BOW],\r\n  5: [EXQUISITE_BOW, DIVINE_BOW, ARCANE_BOW, CELESTIAL_BOW],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const BLAST = createSkill('Blast', 2, 0)\r\nexport const GLASS_BLAST = createSkill('Blast', 1, 0)\r\nexport const ARCANE = createSkill('Arcane', 3, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const NOVA = createSkill('Nova', 3, -5, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const ENFLAME = createSkill('Enflame', 4, 0, {\r\n  perfectStatus: ['burning'],\r\n})\r\nexport const ENGULF = createSkill('Engulf', 4, -10, {\r\n  perfectStatus: ['burning'],\r\n  targetType: 'group',\r\n})\r\nexport const FREEZE = createSkill('Freeze', 4, 0, {\r\n  perfectStatus: ['frozen'],\r\n})\r\nexport const SHOCK = createSkill('Shock', 4, 0, {\r\n  perfectStatus: ['shocked'],\r\n})\r\nexport const STUN = createSkill('Stun', 2, 0, {\r\n  damageModifier: 0.5,\r\n  damage: false,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const PROTECT = createSkill('Protect', 2, 0, {\r\n  damageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  perfectStatus: ['protected'],\r\n})\r\nexport const TIME_JUMP = createSkill('Time Jump', 3, -5, {\r\n  damageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  perfectStatus: ['rushed'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  ARCANE,\r\n  BLAST,\r\n  ENFLAME,\r\n  ENGULF,\r\n  GLASS_BLAST,\r\n  NOVA,\r\n  PROTECT,\r\n  STUN,\r\n  TIME_JUMP,\r\n} from '../../../Skill/skills/catalyst'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'catalyst'\r\nexport const STUDENTS_CATALYST = () => ({\r\n  ...createWeapon(type, 'starting', [ARCANE, NOVA], {}),\r\n  name: `Student Catalyst`,\r\n})\r\nexport const RUSTED_CATALYST = () =>\r\n  createWeapon(type, 'rusted', [BLAST, ARCANE], {})\r\nexport const TOMB_CATALYST = () =>\r\n  createWeapon(type, 'tomb', [BLAST, ARCANE, NOVA], {})\r\nexport const BURRIED_CATALYST = () =>\r\n  createWeapon(type, 'buried', [BLAST, ARCANE, PROTECT], {})\r\nexport const WITHERING_CATALYST = () =>\r\n  createBreakableWeapon(type, 'withering', [BLAST], {})\r\nexport const GLASS_CATALYST = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_BLAST], {})\r\n\r\nexport const IRON_CATALYST = () =>\r\n  createWeapon(type, 'iron', [ARCANE, NOVA, STUN], {})\r\nexport const STEEL_CATALYST = () =>\r\n  createWeapon(type, 'steel', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const STAINLESS_CATALYST = () =>\r\n  createWeapon(type, 'stainless', [BLAST, ARCANE, NOVA, PROTECT], {})\r\n\r\nexport const ANCIENT_CATALYST = () =>\r\n  createWeapon(type, 'ancient', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const CRYSTAL_CATALYST = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_BLAST], {})\r\nexport const ELEMENTAL_CATALYST = () =>\r\n  createWeapon(type, 'elemental', [ARCANE, ENFLAME, ENGULF], {})\r\nexport const CURSED_CATALYST = () => createWeapon(type, 'cursed', [ARCANE], {})\r\n\r\nexport const SHARP_CATALYST = () => createWeapon(type, 'sharp', [], {})\r\nexport const HARDENED_CATALYST = () =>\r\n  createWeapon(type, 'hardened', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const ENGRAVED_CATALYST = () =>\r\n  createWeapon(type, 'engraved', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const ETHEREAL_CATALYST = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_BLAST], {})\r\n\r\nexport const EXQUISITE_CATALYST = () =>\r\n  createWeapon(type, 'exquisite', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const DIVINE_CATALYST = () =>\r\n  createWeapon(type, 'divine', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const ARCANE_CATALYST = () =>\r\n  createWeapon(type, 'arcane', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const CELESTIAL_CATALYST = () =>\r\n  createBreakableWeapon(\r\n    type,\r\n    'celestial',\r\n    [ARCANE, NOVA, PROTECT, TIME_JUMP],\r\n    {},\r\n  )\r\n\r\nexport const CATALYSTS: tWeaponsByLevel = {\r\n  0: [STUDENTS_CATALYST],\r\n  1: [\r\n    RUSTED_CATALYST,\r\n    TOMB_CATALYST,\r\n    BURRIED_CATALYST,\r\n    WITHERING_CATALYST,\r\n    GLASS_CATALYST,\r\n  ],\r\n  2: [IRON_CATALYST, STEEL_CATALYST, STAINLESS_CATALYST],\r\n  3: [ANCIENT_CATALYST, CRYSTAL_CATALYST, ELEMENTAL_CATALYST, CURSED_CATALYST],\r\n  4: [SHARP_CATALYST, HARDENED_CATALYST, ENGRAVED_CATALYST, ETHEREAL_CATALYST],\r\n  5: [EXQUISITE_CATALYST, DIVINE_CATALYST, ARCANE_CATALYST, CELESTIAL_CATALYST],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const RING = createSkill('Ring', 3, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const WITHERING_RING = createSkill('Ring', 2, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const GLASS_RING = createSkill('Ring', 1, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const REVERBERATE = createSkill('Reverberate', 4, -5, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 2, -5, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const SLOW = createSkill('Slow', 4, 0, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['speed-down'],\r\n})\r\nexport const VANISH = createSkill('Vanish', 2, 0, {\r\n  damageModifier: 0,\r\n  damage: false,\r\n  targetType: 'ally',\r\n  perfectStatus: ['evade-up'],\r\n})\r\nexport const RUSH = createSkill('Rush', 2, 0, {\r\n  damageModifier: 0,\r\n  damage: false,\r\n  targetType: 'ally',\r\n  perfectStatus: ['rushed'],\r\n})\r\nexport const RESET = createSkill('Reset', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['reset'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  GLASS_RING,\r\n  RESET,\r\n  REVERBERATE,\r\n  RING,\r\n  RUSH,\r\n  SLOW,\r\n  STUN,\r\n  VANISH,\r\n  WITHERING_RING,\r\n} from '../../../Skill/skills/chime'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'chime'\r\nexport const PATRICIANS_CHIME = () => ({\r\n  ...createWeapon(type, 'starting', [RING, STUN], {}),\r\n  name: `Patrician Chime`,\r\n})\r\nexport const RUSTED_CHIME = () =>\r\n  createWeapon(type, 'rusted', [RING, REVERBERATE], {})\r\nexport const TOMB_CHIME = () =>\r\n  createWeapon(type, 'tomb', [RING, SLOW, VANISH], {})\r\nexport const BURRIED_CHIME = () =>\r\n  createWeapon(type, 'buried', [RING, STUN, VANISH], {})\r\nexport const WITHERING_CHIME = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_RING], {})\r\nexport const GLASS_CHIME = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_RING], {})\r\n\r\nexport const IRON_CHIME = () =>\r\n  createWeapon(type, 'iron', [RING, REVERBERATE, STUN], {})\r\nexport const STEEL_CHIME = () =>\r\n  createWeapon(type, 'steel', [RING, RUSH, RESET], {})\r\nexport const STAINLESS_CHIME = () =>\r\n  createWeapon(type, 'stainless', [RING, REVERBERATE, RUSH, RESET], {})\r\n\r\nexport const ANCIENT_CHIME = () =>\r\n  createWeapon(type, 'ancient', [RING, REVERBERATE, STUN], {})\r\nexport const CRYSTAL_CHIME = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_RING], {})\r\nexport const ELEMENTAL_CHIME = () => createWeapon(type, 'elemental', [RING], {})\r\nexport const CURSED_CHIME = () => createWeapon(type, 'cursed', [RING], {})\r\n\r\nexport const SHARP_CHIME = () =>\r\n  createWeapon(type, 'sharp', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const HARDENED_CHIME = () =>\r\n  createWeapon(type, 'hardened', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const ENGRAVED_CHIME = () =>\r\n  createWeapon(type, 'engraved', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const ETHEREAL_CHIME = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_RING], {})\r\n\r\nexport const EXQUISITE_CHIME = () =>\r\n  createWeapon(type, 'exquisite', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const DIVINE_CHIME = () =>\r\n  createWeapon(type, 'divine', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const ARCANE_CHIME = () =>\r\n  createWeapon(type, 'arcane', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const CELESTIAL_CHIME = () =>\r\n  createBreakableWeapon(type, 'celestial', [RING, REVERBERATE, STUN, SLOW], {})\r\n\r\nexport const CHIMES: tWeaponsByLevel = {\r\n  0: [PATRICIANS_CHIME],\r\n  1: [RUSTED_CHIME, TOMB_CHIME, BURRIED_CHIME, WITHERING_CHIME, GLASS_CHIME],\r\n  2: [IRON_CHIME, STEEL_CHIME, STAINLESS_CHIME],\r\n  3: [ANCIENT_CHIME, CRYSTAL_CHIME, ELEMENTAL_CHIME, CURSED_CHIME],\r\n  4: [SHARP_CHIME, HARDENED_CHIME, ENGRAVED_CHIME, ETHEREAL_CHIME],\r\n  5: [EXQUISITE_CHIME, DIVINE_CHIME, ARCANE_CHIME, CELESTIAL_CHIME],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const THRUST = createSkill('Thrust', 3, 0)\r\nexport const SWING = createSkill('Swing', 4, 0)\r\nexport const WITHERING_SWING = createSkill('Swing', 2, 0)\r\nexport const GLASS_SWING = createSkill('Swing', 1, 0)\r\nexport const FLURRY = createSkill('Flurry', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const CLEAVE = createSkill('Cleave', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const SLICE = createSkill('Slice', 4, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\nexport const ARMOR_UP = createSkill('Armor Up', 2, 0, {\r\n  targetType: 'self',\r\n  perfectStatus: ['armor-up'],\r\n})\r\nexport const EVADE_UP = createSkill('Evade Up', 2, 0, {\r\n  targetType: 'self',\r\n  perfectStatus: ['evade-up'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  ARMOR_UP,\r\n  CLEAVE,\r\n  EVADE_UP,\r\n  FLURRY,\r\n  GLASS_SWING,\r\n  SLASH,\r\n  SLICE,\r\n  SWING,\r\n  THRUST,\r\n  WITHERING_SWING,\r\n} from '../../../Skill/skills/scythe'\r\nimport { tWeapon } from '../../type'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'scythe'\r\nexport const FARMER_SCYTHE = (): tWeapon => ({\r\n  ...createWeapon(type, 'starting', [SLICE], {}),\r\n  name: `Farmer Scythe`,\r\n})\r\nexport const RUSTED_SCYTHE = () => createWeapon(type, 'rusted', [THRUST], {})\r\nexport const TOMB_SCYTHE = () => createWeapon(type, 'tomb', [SWING, FLURRY], {})\r\nexport const BURRIED_SCYTHE = () =>\r\n  createWeapon(type, 'buried', [SWING, SLICE], {})\r\nexport const WITHERING_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_SWING], {})\r\nexport const GLASS_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_SWING], {})\r\n\r\nexport const IRON_SCYTHE = () =>\r\n  createWeapon(type, 'iron', [THRUST, ARMOR_UP, EVADE_UP], {})\r\nexport const STEEL_SCYTHE = () =>\r\n  createWeapon(type, 'steel', [THRUST, SLASH], {})\r\nexport const STAINLESS_SCYTHE = () =>\r\n  createWeapon(type, 'stainless', [THRUST, SLICE], {})\r\n\r\nexport const ANCIENT_SCYTHE = () =>\r\n  createWeapon(type, 'ancient', [SWING, CLEAVE, ARMOR_UP], {})\r\nexport const CRYSTAL_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_SWING], {})\r\nexport const ELEMENTAL_SCYTHE = () =>\r\n  createWeapon(type, 'elemental', [THRUST], {})\r\nexport const CURSED_SCYTHE = () => createWeapon(type, 'cursed', [THRUST], {})\r\n\r\nexport const SHARP_SCYTHE = () =>\r\n  createWeapon(type, 'sharp', [THRUST, SLICE, SLASH], {})\r\nexport const HARDENED_SCYTHE = () =>\r\n  createWeapon(type, 'hardened', [THRUST, FLURRY, ARMOR_UP, EVADE_UP], {})\r\nexport const ENGRAVED_SCYTHE = () =>\r\n  createWeapon(type, 'engraved', [THRUST, FLURRY, SLASH, CLEAVE], {})\r\nexport const ETHEREAL_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_SWING], {})\r\n\r\nexport const EXQUISITE_SCYTHE = () =>\r\n  createWeapon(type, 'exquisite', [THRUST, SLICE, SLASH], {})\r\nexport const DIVINE_SCYTHE = () =>\r\n  createWeapon(type, 'divine', [THRUST, SLICE, ARMOR_UP, EVADE_UP], {})\r\nexport const ARCANE_SCYTHE = () => createWeapon(type, 'arcane', [THRUST], {})\r\nexport const CELESTIAL_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'celestial', [GLASS_SWING], {})\r\n\r\nexport const SCYTHES: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [\r\n    RUSTED_SCYTHE,\r\n    TOMB_SCYTHE,\r\n    BURRIED_SCYTHE,\r\n    WITHERING_SCYTHE,\r\n    GLASS_SCYTHE,\r\n  ],\r\n  2: [IRON_SCYTHE, STEEL_SCYTHE, STAINLESS_SCYTHE],\r\n  3: [ANCIENT_SCYTHE, CRYSTAL_SCYTHE, ELEMENTAL_SCYTHE, CURSED_SCYTHE],\r\n  4: [SHARP_SCYTHE, HARDENED_SCYTHE, ENGRAVED_SCYTHE, ETHEREAL_SCYTHE],\r\n  5: [EXQUISITE_SCYTHE, DIVINE_SCYTHE, ARCANE_SCYTHE, CELESTIAL_SCYTHE],\r\n}\r\n","import { tCharacterClass } from '../Character/type'\r\nimport { tWeapon } from './type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../Stats/constants'\r\nimport { EXECUTIONER_AXE } from './builders/objects/axe'\r\nimport { RANGERS_BOW } from './builders/objects/bow'\r\nimport { STUDENTS_CATALYST } from './builders/objects/catalyst'\r\nimport { PATRICIANS_CHIME } from './builders/objects/chime'\r\nimport { FARMER_SCYTHE } from './builders/objects/scythe'\r\n\r\nexport const CLASS_WEAPONS: Record<tCharacterClass, tWeapon | undefined> = {\r\n  executioner: EXECUTIONER_AXE(),\r\n  ranger: RANGERS_BOW(),\r\n  reaper: FARMER_SCYTHE(),\r\n  student: STUDENTS_CATALYST(),\r\n  patrician: PATRICIANS_CHIME(),\r\n  drifter: undefined,\r\n  enemy: undefined,\r\n}\r\n\r\nexport const BASE_WEAPON = (): tWeapon => {\r\n  return {\r\n    id: v4(),\r\n    name: '',\r\n    itemType: 'weapon',\r\n    rarity: 'common',\r\n    type: 'fist',\r\n    stat: 'strength',\r\n    goldValue: 0,\r\n    twoHand: false,\r\n    breakable: false,\r\n    damage: {\r\n      value: 0,\r\n      range: 'melee',\r\n      type: 'physical',\r\n    },\r\n    stats: ZERO_STATS,\r\n    skills: [],\r\n    immunities: [],\r\n  }\r\n}\r\n","import { tProcessedCharacter } from '../Character/type'\r\nimport { tBaseStats } from '../Stats/type'\r\nimport { getBaseStatValue } from '../Character/util'\r\nimport { DiceRoll } from 'rpg-dice-roller'\r\n\r\nexport const resolveCheck = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n  offset: number = 0,\r\n): boolean => {\r\n  const statValue = getBaseStatValue(character, key, offset)\r\n  const roll = new DiceRoll('1d100')\r\n  return roll.total <= statValue\r\n}\r\n\r\nexport const getChecksProbability = (\r\n  character: tProcessedCharacter,\r\n  checks: { key: keyof tBaseStats; offset: number }[],\r\n): number => {\r\n  const statValues = checks.map(({ key, offset }) =>\r\n    getBaseStatValue(character, key, offset),\r\n  )\r\n  const result = statValues.reduce((p, c) => {\r\n    return p * (c / 100)\r\n  }, 1)\r\n  return result\r\n}\r\n","import { tCharacterClass } from '../Character/type'\r\nimport { tArmor } from './type'\r\n\r\nexport const CLASS_ARMOR: Record<tCharacterClass, tArmor[]> = {\r\n  executioner: [],\r\n  ranger: [],\r\n  reaper: [],\r\n  student: [],\r\n  patrician: [],\r\n  drifter: [],\r\n  enemy: [],\r\n}\r\n","import { tConsumable, tConsumableStack } from './type'\r\n\r\nexport const considateConsumableListToStack = (\r\n  consumables: tConsumable[],\r\n): tConsumableStack[] => {\r\n  let stack: tConsumableStack[] = []\r\n  const updateStackItem = (cid: string) =>\r\n    stack.map((s) =>\r\n      s.consumable.cid === cid ? { ...s, count: s.count + 1 } : s,\r\n    )\r\n  const containsId = (cid: string) =>\r\n    stack.map((s) => s.consumable.cid).includes(cid)\r\n  consumables.forEach((c) => {\r\n    if (containsId(c.cid)) {\r\n      stack = updateStackItem(c.cid)\r\n    } else {\r\n      stack = [...stack, { consumable: c, count: 1 }]\r\n    }\r\n  })\r\n  return stack\r\n}\r\n","export const Theme = {\r\n  darkBgColor: 'rgba(0,7,18,0.9)',\r\n  darkBgColorSolid: 'rgba(0,7,18,1)',\r\n  mediumBgColor: 'rgb(34,34,39)',\r\n  otherGrey: 'rgb(51,51,58)',\r\n  otherGrey2: 'rgb(72,72,80)',\r\n  badgeBgColor: 'rgb(17,17,20)',\r\n  badgeBorderColor: 'rgba(140,150,160,1)',\r\n  lightBgColor: 'rgba(255,255,255,0.4)',\r\n  textColor: 'rgba(255,255,255,0.8)',\r\n  physicalColor: '#adcae6',\r\n  magicColor: 'plum',\r\n  evasionColor: 'rgb(133, 199, 133)',\r\n  playerPartyColor: '#adcae6',\r\n  enemyPartyColor: 'lightsalmon',\r\n  meleeRangeColor: 'rgba(255,255,255,0.8)',\r\n  rangedRangeColor: 'rgba(255,255,255,0.8)',\r\n  healthRedColor: 'rgb(151,75,75)',\r\n\r\n  paddingS: '4px',\r\n  padding: '8px',\r\n  paddingL: '16px',\r\n  paddingXL: '24px',\r\n\r\n  titleFont: 'New Rocker',\r\n}\r\n","import { tCharacter, tCharacterClass } from './type'\r\nimport { Theme } from '../../theme'\r\nimport { v4 } from 'uuid'\r\nimport { BASE_C_STATS } from '../Stats/constants'\r\n\r\nexport const CHARACTER_XP_MAX: Record<number, number> = {\r\n  [-1]: 0,\r\n  0: 25,\r\n  1: 45,\r\n  2: 85,\r\n  3: 135,\r\n  4: 215,\r\n  5: 295,\r\n  6: 425,\r\n  7: 675,\r\n  8: 925,\r\n  9: 1257,\r\n  10: 1925,\r\n  11: 1400,\r\n  12: 2200,\r\n}\r\n\r\nexport const CHARACTER_CLASS_COLORS: Record<tCharacterClass, string> = {\r\n  enemy: Theme.enemyPartyColor,\r\n  executioner: '#313d47',\r\n  patrician: '#381c1c',\r\n  student: '#382838',\r\n  ranger: '#202e20',\r\n  reaper: 'rgb(22, 25, 33)',\r\n  drifter: '#111',\r\n}\r\n\r\nexport const BASE_CHARACTER = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: '',\r\n    isCharacter: true,\r\n    icon: '',\r\n    partyId: '',\r\n    level: 0,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: BASE_C_STATS,\r\n    weapon: undefined,\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    possibleRewards: [],\r\n  }\r\n}\r\n","import { tWeapon } from './type'\r\nimport { ZERO_STATS } from '../Stats/constants'\r\nimport { v4 } from 'uuid'\r\nimport { createSkill } from '../Skill/skills'\r\n\r\nexport const FISTS = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Fists`,\r\n  itemType: 'weapon',\r\n  type: 'hammer',\r\n  rarity: 'common',\r\n  stat: 'vigor',\r\n  twoHand: false,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'melee', value: 4 },\r\n  skills: [createSkill('Punch', 3, 0)],\r\n  immunities: [],\r\n  stats: ZERO_STATS,\r\n  goldValue: 0,\r\n})\r\n","import { createSkill } from '.'\r\n\r\nexport const HEAL = createSkill('Heal', 0, 0, {\r\n  damageModifier: 0,\r\n  targetType: 'self',\r\n  damage: false,\r\n  healing: true,\r\n})\r\n\r\nexport const REMOVE_CURSES = createSkill('Remove Curses', 0, 0, {\r\n  targetType: 'self',\r\n  damage: false,\r\n  damageModifier: 0,\r\n  perfectStatus: ['blessed'],\r\n})\r\n\r\nexport const POISON_KNIFE = createSkill('Poison Knife', 0, 0, {\r\n  damage: false,\r\n  damageModifier: 0,\r\n  perfectStatus: ['poisoned'],\r\n})\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { HEAL } from '../../Skill/skills/consumables'\r\n\r\nconst cid = v4()\r\nexport const GODSBEARD = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Mellow Grass',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...HEAL,\r\n      consumableId: id,\r\n    },\r\n    goldValue: 20,\r\n  }\r\n}\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { REMOVE_CURSES } from '../../Skill/skills/consumables'\r\n\r\nconst cid = v4()\r\nexport const CELESTIAL_LOTUS = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Celestial Lotus',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...REMOVE_CURSES,\r\n      consumableId: id,\r\n    },\r\n    goldValue: 20,\r\n  }\r\n}\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { POISON_KNIFE as skill } from '../../Skill/skills/consumables'\r\n\r\nconst cid = v4()\r\nexport const POISON_KNIFE = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Poison Knife',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...skill,\r\n      consumableId: id,\r\n    },\r\n    goldValue: 20,\r\n  }\r\n}\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nconst cid = v4()\r\nexport const BEAST_DRUG = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Beast Drug',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...createSkill('Beast Drug', 0, 0, {\r\n        damage: false,\r\n        targetType: 'self',\r\n        perfectStatus: ['attack-up'],\r\n      }),\r\n      consumableId: id,\r\n    },\r\n    goldValue: 20,\r\n  }\r\n}\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nconst CURE = createSkill('Cure Potion', 0, 0, {\r\n  damageModifier: 0,\r\n  damage: false,\r\n  targetType: 'self',\r\n  perfectStatus: ['cure'],\r\n})\r\n\r\nconst cid = v4()\r\nexport const CURE_POTION = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Cure Potion',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...CURE,\r\n      consumableId: id,\r\n    },\r\n    goldValue: 20,\r\n  }\r\n}\r\n","import { tItemRarity } from './type'\r\nimport { tCharacterClass } from '../Character/type'\r\nimport { tConsumable } from '../Consumable/type'\r\nimport { tArmorResourceType } from '../Armor/type'\r\nimport { GODSBEARD } from '../Consumable/objects/godsbeard'\r\nimport { CELESTIAL_LOTUS } from '../Consumable/objects/celestial_lotus'\r\nimport { POISON_KNIFE } from '../Consumable/objects/poison_knife'\r\nimport { BEAST_DRUG } from '../Consumable/objects/beast_drug'\r\nimport { CURE_POTION } from '../Consumable/objects/curing_potion'\r\n\r\nexport const ITEM_RARITY_COLORS: Record<tItemRarity, string> = {\r\n  common: 'rgba(255, 255, 255,1)',\r\n  uncommon: 'rgba(173,216,230,1)',\r\n  rare: 'rgba(221,160,221,1)',\r\n  mythic: 'rgb(255,160,122,1)',\r\n}\r\n\r\nexport const CLASS_STARTING_CONSUMABLES: Record<\r\n  tCharacterClass,\r\n  tConsumable[]\r\n> = {\r\n  executioner: [GODSBEARD(), GODSBEARD(), BEAST_DRUG()],\r\n  ranger: [GODSBEARD(), GODSBEARD(), POISON_KNIFE()],\r\n  reaper: [GODSBEARD(), GODSBEARD()],\r\n  student: [GODSBEARD(), GODSBEARD(), CELESTIAL_LOTUS()],\r\n  patrician: [GODSBEARD(), GODSBEARD(), CURE_POTION()],\r\n  drifter: [GODSBEARD()],\r\n  enemy: [],\r\n}\r\n\r\nexport const CHARACTER_RESOURCES: tArmorResourceType[] = [\r\n  'offhand',\r\n  'body',\r\n  'head',\r\n  'feet',\r\n]\r\n","import { tCharacter, tProcessedCharacter, tCharacterClass } from './type'\r\nimport { tStats, tBaseStats } from '../Stats/type'\r\nimport { combineStats } from '../Stats/util'\r\nimport { tSkill } from '../Skill/type'\r\nimport { CLASS_STATS } from '../Stats/constants'\r\nimport { tStatusType } from '../Status/type'\r\nimport { STATUS_CONFIG } from '../Status/constants'\r\nimport { v4 } from 'uuid'\r\nimport { tDamage } from '../Damage/type'\r\nimport { noneg } from '../../util/noneg'\r\nimport { CLASS_WEAPONS } from '../Weapon/constants'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { tArmorResourceType, tArmor } from '../Armor/type'\r\nimport { resolveCheck } from '../Roll/util'\r\nimport { CLASS_ARMOR } from '../Armor/constants'\r\nimport { considateConsumableListToStack } from '../Consumable/util'\r\nimport { CHARACTER_XP_MAX } from './constants'\r\nimport { tEncounterReward } from '../Encounter/type'\r\nimport { FISTS } from '../Weapon/fists'\r\nimport { CLASS_STARTING_CONSUMABLES } from '../Item/constants'\r\n\r\nexport const isCharacter = (obj: any): boolean =>\r\n  obj !== undefined && obj.isCharacter !== undefined\r\n\r\nexport const checkForProcessedCharacter = (character: tCharacter) => {\r\n  if ((character as tProcessedCharacter).processed) {\r\n    throw new Error('No Processed Characters Allowed')\r\n  }\r\n}\r\n\r\nexport const makeCharacter = (characterClass: tCharacterClass): tCharacter => {\r\n  return {\r\n    isCharacter: true,\r\n    id: v4(),\r\n    name: '',\r\n    partyId: '',\r\n    level: 0,\r\n    experience: 0,\r\n    class: characterClass,\r\n\r\n    stats: CLASS_STATS[characterClass],\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n\r\n    tags: [],\r\n\r\n    weapon: CLASS_WEAPONS[characterClass],\r\n    armor: CLASS_ARMOR[characterClass],\r\n    consumables: CLASS_STARTING_CONSUMABLES[characterClass],\r\n\r\n    status: [],\r\n    immunities: [],\r\n    possibleRewards: [],\r\n  }\r\n}\r\n\r\nexport const getSkills = (character: tCharacter): tSkill[] => {\r\n  return [\r\n    ...(character.weapon || FISTS()).skills,\r\n    ...character.armor.reduce((r, a) => [...r, ...a.skills], [] as tSkill[]),\r\n    ...considateConsumableListToStack(character.consumables).reduce(\r\n      (r, s) => [...r, s.consumable.skill],\r\n      [] as tSkill[],\r\n    ),\r\n  ]\r\n}\r\n\r\nexport const processCharacter = (\r\n  character: tCharacter,\r\n): tProcessedCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const stats: tStats = combineStats(\r\n    character.stats,\r\n    (character.weapon || FISTS()).stats,\r\n    ...character.armor.map((a) => a.stats),\r\n    ...character.status.map((s) => s.stats),\r\n  )\r\n  const skills = getSkills(character)\r\n  const statusImmunities = character.status.reduce(\r\n    (r, s) => [...r, ...s.immunities],\r\n    [] as tStatusType[],\r\n  )\r\n  const immunities = [\r\n    ...character.immunities,\r\n    ...(character?.weapon?.immunities || []),\r\n    ...character.armor.reduce(\r\n      (r, a) => [...r, ...a.immunities],\r\n      [] as tStatusType[],\r\n    ),\r\n    ...statusImmunities,\r\n  ]\r\n  const baseVigor = CLASS_STATS[character.class].vigor || character.stats.vigor\r\n  const startingHealth = 25 + Math.floor(0.1 * baseVigor)\r\n  const maxHealth =\r\n    Math.floor(\r\n      startingHealth + character.level + 0.1 * character.level * stats.vigor,\r\n    ) + stats.maxHealthOffset\r\n  const health = maxHealth - character.healthOffset\r\n  const maxInspiration = 3 + stats.maxInspirationOffset\r\n  const inspiration = maxInspiration + character.inspirationOffset\r\n\r\n  return {\r\n    processed: true,\r\n    ...character,\r\n\r\n    health,\r\n    maxHealth,\r\n    inspiration,\r\n    maxInspiration,\r\n\r\n    weapon: character.weapon || FISTS(),\r\n    stats,\r\n    immunities,\r\n    rawStats: character.stats,\r\n    skills,\r\n  }\r\n}\r\n\r\nexport const getBaseStatValue = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n  offset: number = 0,\r\n) => {\r\n  return character.stats[key] + offset\r\n}\r\n\r\nexport const getDamageResistance = (\r\n  character: tProcessedCharacter,\r\n  damage: tDamage,\r\n) => {\r\n  if (damage.type === 'physical') return character.stats.armor\r\n  if (damage.type === 'magic') return character.stats.resistance\r\n  return 0\r\n}\r\nexport const hasStatus = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.status.map((s) => s.type).includes(statusType)\r\n}\r\nexport const hasAnyStatus = (\r\n  character: tCharacter,\r\n  statusTypes: tStatusType[],\r\n) => {\r\n  return statusTypes.some((type) => hasStatus(character, type))\r\n}\r\nexport const findStatus = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.status.find((s) => s.type === statusType)\r\n}\r\nexport const hasImmunity = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.immunities.includes(statusType)\r\n}\r\nexport const getReflectedDamage = (target: tCharacter, rawDamage: tDamage) => {\r\n  return {\r\n    ...rawDamage,\r\n    value: target.stats.damageReflection[rawDamage.range],\r\n  }\r\n}\r\nexport const getRawDamage = (\r\n  source: tProcessedCharacter,\r\n  target: tProcessedCharacter,\r\n  rawDamage: tDamage,\r\n): tDamage => {\r\n  let damageModifier = 1\r\n  target.tags.forEach((tag) => {\r\n    if (source.stats.damageModifiers[tag]) {\r\n      damageModifier += source.stats.damageModifiers[tag]\r\n    }\r\n  })\r\n  return {\r\n    ...rawDamage,\r\n    value: rawDamage.value * damageModifier,\r\n  }\r\n}\r\n\r\nexport const commitDamage = (\r\n  character: tCharacter,\r\n  damage: tDamage,\r\n  ignoreResistance: boolean,\r\n): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const pc = processCharacter(character)\r\n  const resistance = ignoreResistance ? 0 : getDamageResistance(pc, damage)\r\n  const damageTakenModifier =\r\n    pc.stats.damageTakenModifier +\r\n    pc.stats.damageTakenRangeModifiers[damage.range]\r\n  const rawDamageValue = damage.value * damageTakenModifier\r\n  if (hasStatus(character, 'protected')) {\r\n    return {\r\n      ...character,\r\n      status: character.status.filter((s) => s.type !== 'protected'),\r\n    }\r\n  }\r\n  return {\r\n    ...character,\r\n    healthOffset: Math.ceil(\r\n      character.healthOffset + noneg(rawDamageValue - resistance),\r\n    ),\r\n  }\r\n}\r\n\r\nexport const decrementStatusDurations = (character: tCharacter): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    status: character.status\r\n      .map((status) => ({ ...status, duration: status.duration - 1 }))\r\n      .filter((status) => status.duration !== 0),\r\n  }\r\n}\r\nexport const addStatus = (\r\n  character: tCharacter,\r\n  type: tStatusType,\r\n  durationOverride?: number,\r\n): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const statusConfig = STATUS_CONFIG[type]\r\n  const existingStatus = findStatus(character, type)\r\n  if (hasImmunity(processCharacter(character), type)) {\r\n    return character\r\n  }\r\n  if (existingStatus && !statusConfig.canStack) {\r\n    return character\r\n  }\r\n  if (existingStatus && statusConfig.canStack) {\r\n    return {\r\n      ...character,\r\n      status: [\r\n        ...character.status.filter((s) => s.type !== type),\r\n        { ...existingStatus, stack: existingStatus.stack + 1 },\r\n      ],\r\n    }\r\n  }\r\n  return {\r\n    ...character,\r\n    status: [\r\n      ...character.status,\r\n      {\r\n        type,\r\n        stats: statusConfig.stats,\r\n        immunities: statusConfig.immunities,\r\n        duration: durationOverride || statusConfig.duration,\r\n        stack: 1,\r\n      },\r\n    ],\r\n  }\r\n}\r\n\r\nexport const addMultipleStatus = (\r\n  character: tCharacter,\r\n  types: tStatusType[],\r\n): tCharacter => {\r\n  return types.reduce((result, type) => {\r\n    return addStatus(result, type)\r\n  }, character)\r\n}\r\n\r\nexport const checkStatus = (character: tCharacter) => {\r\n  checkForProcessedCharacter(character)\r\n  let c = { ...character }\r\n  character.status.forEach((status) => {\r\n    if (hasImmunity(processCharacter(character), status.type)) {\r\n      c = {\r\n        ...c,\r\n        status: c.status.filter((c) => c.type !== status.type),\r\n      }\r\n    }\r\n  })\r\n  return c\r\n}\r\n\r\nexport const removeTemporaryStatus = (character: tCharacter): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    status: character.status.filter((s) => {\r\n      const config = STATUS_CONFIG[s.type]\r\n      return !config.isTemporary\r\n    }),\r\n  }\r\n}\r\n\r\nexport const equipArmor = (\r\n  character: tCharacter,\r\n  armor: tArmor,\r\n): { character: tCharacter; armor: tArmor | undefined } => {\r\n  checkForProcessedCharacter(character)\r\n  const existingArmor = character.armor.find(\r\n    (a) => a.resource === armor.resource,\r\n  )\r\n  return {\r\n    character: {\r\n      ...character,\r\n      armor: existingArmor\r\n        ? [...character.armor.filter((a) => a.id !== existingArmor.id), armor]\r\n        : [...character.armor, armor],\r\n    },\r\n    armor: existingArmor,\r\n  }\r\n}\r\n\r\nexport const unequipArmor = (\r\n  character: tCharacter,\r\n  resource: tArmorResourceType,\r\n): { character: tCharacter; armor: tArmor | undefined } => {\r\n  checkForProcessedCharacter(character)\r\n  const armor = character.armor.find((a) => a.resource === resource)\r\n  return {\r\n    character: {\r\n      ...character,\r\n      armor: character.armor.filter((a) => a.resource !== resource),\r\n    },\r\n    armor,\r\n  }\r\n}\r\n\r\nexport const equipWeapon = (\r\n  character: tCharacter,\r\n  weapon: tWeapon,\r\n): { character: tCharacter; weapon: tWeapon | undefined } => {\r\n  const existingWeapon = character.weapon\r\n  return {\r\n    character: {\r\n      ...character,\r\n      weapon,\r\n    },\r\n    weapon: existingWeapon,\r\n  }\r\n}\r\n\r\n// DO NOT USE\r\nexport const unequipWeapon = (\r\n  character: tCharacter,\r\n): { character: tCharacter; weapon: tWeapon | undefined } => {\r\n  const existingWeapon = character.weapon\r\n  return {\r\n    character: {\r\n      ...character,\r\n      // weapon: undefined\r\n    },\r\n    weapon: existingWeapon,\r\n  }\r\n}\r\n\r\nexport const getRewardsFromCharacter = (\r\n  character: tProcessedCharacter,\r\n  checkedCharacter: tProcessedCharacter,\r\n): tEncounterReward[] => {\r\n  let index: number | undefined = undefined\r\n  character.possibleRewards.forEach((rewards, i) => {\r\n    const luckReslt = resolveCheck(checkedCharacter, 'luck')\r\n    if (luckReslt) {\r\n      index = i\r\n    }\r\n  })\r\n  if (index !== undefined) {\r\n    return character.possibleRewards[index]\r\n      ? [character.possibleRewards[index]]\r\n      : []\r\n  }\r\n  return []\r\n}\r\n\r\nexport const addExperience = (\r\n  character: tCharacter,\r\n  xp: number,\r\n): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const xpToNextLevel = CHARACTER_XP_MAX[character.level]\r\n  const experience = character.experience + xp\r\n  if (experience > xpToNextLevel) {\r\n    return addExperience(\r\n      levelUp({\r\n        ...character,\r\n        experience,\r\n      }),\r\n      0,\r\n    )\r\n  }\r\n  return {\r\n    ...character,\r\n    experience,\r\n  }\r\n}\r\n\r\nexport const levelUp = (character: tCharacter): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const experience = character.experience - CHARACTER_XP_MAX[character.level]\r\n  return {\r\n    ...character,\r\n    level: character.level + 1,\r\n    healthOffset: Math.floor(character.healthOffset / 2),\r\n    experience,\r\n    status: character.status.filter((s) => s.type !== 'poisoned'),\r\n  }\r\n}\r\n","export const getRandom = <T>(items: T[]) =>\r\n  items[Math.floor(Math.random() * items.length)]\r\n","import { v4 } from 'uuid'\r\nimport { tItemRarity } from '../../Item/type'\r\nimport { tSkill } from '../../Skill/type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { tStats } from '../../Stats/type'\r\nimport { tStatusType } from '../../Status/type'\r\nimport { tArmor, tArmorResourceType, tArmorType } from '../type'\r\n\r\nexport const createArmor = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  resource: tArmorResourceType,\r\n  type: tArmorType,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n): tArmor => {\r\n  return {\r\n    id: v4(),\r\n    name,\r\n    rarity,\r\n    itemType: 'armor',\r\n    resource,\r\n    type,\r\n    stat: 'vigor',\r\n    goldValue,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      ...stats,\r\n    },\r\n    skills,\r\n    immunities,\r\n  }\r\n}\r\n\r\nexport const createFootwear = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'feet',\r\n    'footwear',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createHat = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(name, rarity, 'head', 'hat', goldValue, stats, skills, immunities)\r\n\r\nexport const createHeavyArmor = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'body',\r\n    'heavy-armor',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createHelmet = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'head',\r\n    'helmet',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createLightArmor = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'body',\r\n    'light-armor',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createMagicArmor = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'body',\r\n    'magic-armor',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createMagicHat = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'head',\r\n    'magic-hat',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createShield = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'offhand',\r\n    'shield',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createWard = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'offhand',\r\n    'ward',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n","import { tArmor } from '../../type'\r\nimport {\r\n  ADVENTURER_BOOTS,\r\n  ADVENTURER_CLOAK,\r\n  ADVENTURER_HOOD,\r\n} from './adventure'\r\nimport {\r\n  ANTIQUATED_ATTIRE,\r\n  ANTIQUATED_HAT,\r\n  ANTIQUATED_SHOES,\r\n} from './antiquated'\r\nimport { APPRENTICE_CAP, APPRENTICE_ROBE, APPRENTICE_SHOES } from './apprentice'\r\nimport {\r\n  ARISTOCRAT_ATTIRE,\r\n  ARISTOCRAT_HAT,\r\n  ARISTOCRAT_SHOES,\r\n} from './aristocrat'\r\nimport { BONE_ARMOR, BONE_BOOTS, BONE_HELMET } from './bone'\r\nimport {\r\n  EXECUTIONER_ARMOR,\r\n  EXECUTIONER_BOOTS,\r\n  EXECUTIONER_HELMET,\r\n} from './executioner'\r\nimport {\r\n  GRAVEGUARD_ARMOR,\r\n  GRAVEGUARD_BOOTS,\r\n  GRAVEGUARD_HELMET,\r\n} from './graveguard'\r\nimport { HUNTER_BOOTS, HUNTER_CLOAK, HUNTER_HOOD } from './hunter'\r\nimport { IRON_ARMOR, IRON_BOOTS, IRON_HELMET } from './iron'\r\nimport { NOVICE_HAT, NOVICE_ROBES, NOVICE_SHOES } from './novice'\r\nimport { PATRICIAN_ATTIRE, PATRICIAN_HAT, PATRICIAN_SHOES } from './patrician'\r\nimport { RANGER_BOOTS, RANGER_CLOAK, RANGER_HOOD } from './ranger'\r\nimport { STUDENT_BOOTS, STUDENT_CAP, STUDENT_ROBES } from './student'\r\nimport { TOMB_ARMOR, TOMB_BOOTS, TOMB_HELMET } from './tomb'\r\n\r\nexport const ARMOR_BY_LEVEL: Record<number, (() => tArmor)[]> = {\r\n  0: [\r\n    RANGER_HOOD,\r\n    RANGER_CLOAK,\r\n    RANGER_BOOTS,\r\n    PATRICIAN_HAT,\r\n    PATRICIAN_ATTIRE,\r\n    PATRICIAN_SHOES,\r\n    EXECUTIONER_HELMET,\r\n    EXECUTIONER_ARMOR,\r\n    EXECUTIONER_BOOTS,\r\n    STUDENT_CAP,\r\n    STUDENT_ROBES,\r\n    STUDENT_BOOTS,\r\n    TOMB_HELMET,\r\n    TOMB_ARMOR,\r\n    TOMB_BOOTS,\r\n  ],\r\n  1: [\r\n    ADVENTURER_HOOD,\r\n    ADVENTURER_CLOAK,\r\n    ADVENTURER_BOOTS,\r\n    ARISTOCRAT_HAT,\r\n    ARISTOCRAT_ATTIRE,\r\n    ARISTOCRAT_SHOES,\r\n    GRAVEGUARD_HELMET,\r\n    GRAVEGUARD_ARMOR,\r\n    GRAVEGUARD_BOOTS,\r\n    APPRENTICE_CAP,\r\n    APPRENTICE_ROBE,\r\n    APPRENTICE_SHOES,\r\n  ],\r\n  2: [\r\n    HUNTER_HOOD,\r\n    HUNTER_CLOAK,\r\n    HUNTER_BOOTS,\r\n    ANTIQUATED_HAT,\r\n    ANTIQUATED_ATTIRE,\r\n    ANTIQUATED_SHOES,\r\n    IRON_HELMET,\r\n    IRON_ARMOR,\r\n    IRON_BOOTS,\r\n    BONE_HELMET,\r\n    BONE_ARMOR,\r\n    BONE_BOOTS,\r\n    NOVICE_HAT,\r\n    NOVICE_ROBES,\r\n    NOVICE_SHOES,\r\n  ],\r\n}\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const RANGER_HOOD = () =>\r\n  createHat('Ranger Hood', 'common', 5, {\r\n    resistance: 1,\r\n    evasion: 3,\r\n    dexterity: 1,\r\n  })\r\nexport const RANGER_CLOAK = () =>\r\n  createLightArmor('Ranger Cloak', 'common', 10, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    evasion: 5,\r\n    dexterity: 2,\r\n    charisma: -2,\r\n  })\r\nexport const RANGER_BOOTS = () =>\r\n  createFootwear('Ranger Boots', 'common', 5, {\r\n    armor: 1,\r\n    evasion: 2,\r\n    dexterity: 1,\r\n    agility: 1,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const PATRICIAN_HAT = () =>\r\n  createHat('Patrician Hat', 'common', 5, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    charisma: 1,\r\n  })\r\n\r\nexport const PATRICIAN_ATTIRE = () =>\r\n  createLightArmor('Patrician Attire', 'common', 15, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    charisma: 2,\r\n    luck: 2,\r\n  })\r\n\r\nexport const PATRICIAN_SHOES = () =>\r\n  createFootwear('Patrician Shoes', 'common', 7, {\r\n    armor: 1,\r\n    resistance: 2,\r\n    charisma: 1,\r\n    dexterity: -2,\r\n    luck: 1,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const EXECUTIONER_HELMET = () =>\r\n  createHelmet('Executioner Helmet', 'common', 5, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    vigor: 1,\r\n  })\r\n\r\nexport const EXECUTIONER_ARMOR = () =>\r\n  createHeavyArmor('Executioner Armor', 'common', 10, {\r\n    armor: 3,\r\n    resistance: 2,\r\n    strength: 2,\r\n    intelligence: -2,\r\n  })\r\n\r\nexport const EXECUTIONER_BOOTS = () =>\r\n  createFootwear('Executioner Boots', 'common', 5, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    strength: 1,\r\n    vigor: 1,\r\n  })\r\n","import { createFootwear, createMagicArmor, createMagicHat } from '..'\r\n\r\nexport const STUDENT_CAP = () =>\r\n  createMagicHat('Student Cap', 'common', 5, {\r\n    resistance: 2,\r\n    intelligence: 1,\r\n  })\r\n\r\nexport const STUDENT_ROBES = () =>\r\n  createMagicArmor('Student Robes', 'common', 10, {\r\n    armor: 1,\r\n    resistance: 3,\r\n    strength: -2,\r\n    intelligence: 2,\r\n  })\r\n\r\nexport const STUDENT_BOOTS = () =>\r\n  createFootwear('Student Boots', 'common', 5, {\r\n    resistance: 2,\r\n    intelligence: 1,\r\n    strength: -2,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const TOMB_HELMET = () =>\r\n  createHelmet('Tomb Helment', 'common', 10, {\r\n    armor: 3,\r\n    resistance: 3,\r\n  })\r\n\r\nexport const TOMB_ARMOR = () =>\r\n  createHeavyArmor('Tomb Armor', 'common', 30, {\r\n    armor: 7,\r\n    resistance: 5,\r\n  })\r\n\r\nexport const TOMB_BOOTS = () =>\r\n  createFootwear('Tomb Boots', 'common', 10, {\r\n    armor: 3,\r\n    resistance: 2,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const ADVENTURER_HOOD = () =>\r\n  createHat('Adventurer Hood', 'common', 10, {\r\n    resistance: 2,\r\n    evasion: 3,\r\n    dexterity: 2,\r\n  })\r\n\r\nexport const ADVENTURER_CLOAK = () =>\r\n  createLightArmor('Adventurer Cloak', 'uncommon', 40, {\r\n    armor: 3,\r\n    resistance: 3,\r\n    evasion: 6,\r\n    dexterity: 3,\r\n    charisma: -4,\r\n  })\r\n\r\nexport const ADVENTURER_BOOTS = () =>\r\n  createFootwear('Adventurer Boots', 'common', 10, {\r\n    armor: 2,\r\n    evasion: 3,\r\n    dexterity: 2,\r\n    agility: 2,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const ARISTOCRAT_HAT = () =>\r\n  createHat('Aristocrat Hat', 'common', 10, {\r\n    armor: 1,\r\n    resistance: 2,\r\n    maxInspirationOffset: 1,\r\n    charisma: 2,\r\n    luck: 2,\r\n  })\r\n\r\nexport const ARISTOCRAT_ATTIRE = () =>\r\n  createLightArmor('Aristocrat Attire', 'uncommon', 40, {\r\n    armor: 4,\r\n    resistance: 4,\r\n    charisma: 3,\r\n    luck: 3,\r\n  })\r\n\r\nexport const ARISTOCRAT_SHOES = () =>\r\n  createFootwear('Aristocrat Shoes', 'common', 10, {\r\n    armor: 1,\r\n    resistance: 2,\r\n    dexterity: -2,\r\n    charisma: 2,\r\n    luck: 2,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const GRAVEGUARD_HELMET = () =>\r\n  createHelmet('Graveguard Helmet', 'common', 10, {\r\n    armor: 2,\r\n    resistance: 1,\r\n    healthRegeneration: 1,\r\n  })\r\n\r\nexport const GRAVEGUARD_ARMOR = () =>\r\n  createHeavyArmor('Graveguard Armor', 'uncommon', 30, {\r\n    armor: 6,\r\n    resistance: 1,\r\n    strength: 2,\r\n    vigor: 2,\r\n  })\r\n\r\nexport const GRAVEGUARD_BOOTS = () =>\r\n  createFootwear('Graveguard Boots', 'common', 10, {\r\n    armor: 2,\r\n    resistance: 1,\r\n    vigor: 2,\r\n  })\r\n","import { createFootwear, createMagicArmor, createMagicHat } from '..'\r\n\r\nexport const APPRENTICE_CAP = () =>\r\n  createMagicHat('Apprentice Cap', 'common', 10, {\r\n    resistance: 4,\r\n    maxInspirationOffset: 1,\r\n    intelligence: 2,\r\n  }) // confuse immunity\r\n\r\nexport const APPRENTICE_ROBE = () =>\r\n  createMagicArmor(\r\n    'Apprentice Robe',\r\n    'uncommon',\r\n    40,\r\n    {\r\n      armor: 2,\r\n      resistance: 6,\r\n      maxInspirationOffset: 1,\r\n      strength: -3,\r\n      intelligence: 3,\r\n    },\r\n    [],\r\n    [\r\n      'cursed-agility',\r\n      'cursed-charisma',\r\n      'cursed-dexterity',\r\n      'cursed-intelligence',\r\n      'cursed-luck',\r\n      'cursed-strength',\r\n      'cursed-vigor',\r\n    ],\r\n  )\r\n\r\nexport const APPRENTICE_SHOES = () =>\r\n  createFootwear('Apprentice Shoes', 'common', 10, {\r\n    armor: 1,\r\n    resistance: 3,\r\n    strength: -2,\r\n    intelligence: 2,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const HUNTER_HOOD = () =>\r\n  createHat('Hunter Hood', 'common', 15, {\r\n    resistance: 3,\r\n    evasion: 4,\r\n    dexterity: 3,\r\n  })\r\n\r\nexport const HUNTER_CLOAK = () =>\r\n  createLightArmor('Hunter Cloak', 'uncommon', 50, {\r\n    armor: 5,\r\n    resistance: 5,\r\n    evasion: 7,\r\n    dexterity: 4,\r\n    charisma: -4,\r\n    agility: 2,\r\n  })\r\n\r\nexport const HUNTER_BOOTS = () =>\r\n  createFootwear('Hunter Boots', 'common', 15, {\r\n    armor: 3,\r\n    evasion: 4,\r\n    dexterity: 3,\r\n    agility: 3,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const ANTIQUATED_HAT = () =>\r\n  createHat('Antiquated Hat', 'common', 15, {\r\n    armor: 2,\r\n    resistance: 3,\r\n    maxInspirationOffset: 1,\r\n    charisma: 3,\r\n    luck: 3,\r\n  })\r\n\r\nexport const ANTIQUATED_ATTIRE = () =>\r\n  createLightArmor('Antiquated Attire', 'uncommon', 50, {\r\n    armor: 6,\r\n    resistance: 6,\r\n    dexterity: -4,\r\n    charisma: 4,\r\n    luck: 4,\r\n  })\r\n\r\nexport const ANTIQUATED_SHOES = () =>\r\n  createFootwear('Antiquated Shoes', 'common', 15, {\r\n    armor: 2,\r\n    resistance: 3,\r\n    dexterity: -4,\r\n    charisma: 3,\r\n    luck: 3,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const IRON_HELMET = () =>\r\n  createHelmet(\r\n    'Iron Helmet',\r\n    'common',\r\n    15,\r\n    {\r\n      armor: 4,\r\n      strength: 2,\r\n      dexterity: -4,\r\n    },\r\n    [],\r\n    ['stunned'],\r\n  )\r\n\r\nexport const IRON_ARMOR = () =>\r\n  createHeavyArmor('Iron Armor', 'uncommon', 50, {\r\n    armor: 7,\r\n    resistance: 1,\r\n    strength: 3,\r\n    intelligence: -3,\r\n  })\r\n\r\nexport const IRON_BOOTS = () =>\r\n  createFootwear('Iron Boots', 'common', 15, {\r\n    armor: 2,\r\n    resistance: 2,\r\n    healthRegeneration: 1,\r\n    vigor: 4,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const BONE_HELMET = () =>\r\n  createHelmet('Bone Helmet', 'common', 15, {\r\n    armor: 2,\r\n    resistance: 2,\r\n    healthRegeneration: 1,\r\n    vigor: 3,\r\n  }) // bonus damage\r\n\r\nexport const BONE_ARMOR = () =>\r\n  createHeavyArmor(\r\n    'Bone Armor',\r\n    'uncommon',\r\n    50,\r\n    {\r\n      armor: 5,\r\n      resistance: 5,\r\n      maxHealthOffset: 5,\r\n      healthRegeneration: 2,\r\n      vigor: 5,\r\n    },\r\n    [],\r\n    ['frozen'],\r\n  )\r\n\r\nexport const BONE_BOOTS = () =>\r\n  createFootwear('Bone Boots', 'common', 15, {\r\n    armor: 2,\r\n    resistance: 2,\r\n    healthRegeneration: 1,\r\n    vigor: 4,\r\n  })\r\n","import { createFootwear, createMagicArmor, createMagicHat } from '..'\r\n\r\nexport const NOVICE_HAT = () =>\r\n  createMagicHat('Novice Hat', 'common', 15, {\r\n    resistance: 6,\r\n    intelligence: 3,\r\n  }) // confuse immunity\r\n\r\nexport const NOVICE_ROBES = () =>\r\n  createMagicArmor('Novice Robes', 'uncommon', 50, {\r\n    armor: 3,\r\n    resistance: 9,\r\n    maxInspirationOffset: 1,\r\n    strength: -4,\r\n    intelligence: 4,\r\n  })\r\n\r\nexport const NOVICE_SHOES = () =>\r\n  createFootwear('Novice Shoes', 'common', 15, {\r\n    armor: 2,\r\n    resistance: 4,\r\n    strength: -3,\r\n    intelligence: 3,\r\n  })\r\n","import { createSkill } from '.'\r\n\r\nexport const SMASH = createSkill('Smash', 3, 0)\r\nexport const WITHERING_SMASH = createSkill('Smash', 2, 0)\r\nexport const GLASS_SMASH = createSkill('Smash', 1, 0)\r\nexport const RIPPLE = createSkill('Ripple', 4, -10, {\r\n  perfectSplash: true,\r\n})\r\nexport const EARTHQUAKE = createSkill('Earthquake', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const CRUSH = createSkill('Crush', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const STAB = createSkill('Stab', 4, 0, {\r\n  perfectPierce: true,\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  CRUSH,\r\n  EARTHQUAKE,\r\n  GLASS_SMASH,\r\n  RIPPLE,\r\n  SMASH,\r\n  WITHERING_SMASH,\r\n  STUN,\r\n} from '../../../Skill/skills/blunt'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'hammer'\r\nexport const RUSTED_HAMMER = () =>\r\n  createWeapon(type, 'rusted', [SMASH, RIPPLE], {})\r\nexport const TOMB_HAMMER = () =>\r\n  createWeapon(type, 'tomb', [SMASH, EARTHQUAKE], {})\r\nexport const BURRIED_HAMMER = () =>\r\n  createWeapon(type, 'buried', [SMASH, CRUSH], {})\r\nexport const WITHERING_HAMMER = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_SMASH], {})\r\nexport const GLASS_HAMMER = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_SMASH], {})\r\n\r\nexport const IRON_HAMMER = () => createWeapon(type, 'iron', [SMASH, STUN], {})\r\nexport const STEEL_HAMMER = () =>\r\n  createWeapon(type, 'steel', [SMASH, EARTHQUAKE, RIPPLE], {})\r\nexport const STAINLESS_HAMMER = () =>\r\n  createWeapon(type, 'stainless', [SMASH, CRUSH, RIPPLE], {})\r\n\r\nexport const ANCIENT_HAMMER = () =>\r\n  createWeapon(type, 'ancient', [SMASH, STUN], {})\r\nexport const CRYSTAL_HAMMER = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_SMASH], {})\r\nexport const ELEMENTAL_HAMMER = () =>\r\n  createWeapon(type, 'elemental', [SMASH], {})\r\nexport const CURSED_HAMMER = () => createWeapon(type, 'cursed', [SMASH], {})\r\n\r\nexport const SHARP_HAMMER = () =>\r\n  createWeapon(type, 'sharp', [SMASH, STUN, CRUSH], {})\r\nexport const HARDENED_HAMMER = () =>\r\n  createWeapon(type, 'hardened', [SMASH, CRUSH, EARTHQUAKE, RIPPLE], {})\r\nexport const ENGRAVED_HAMMER = () => createWeapon(type, 'engraved', [], {})\r\nexport const ETHEREAL_HAMMER = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_SMASH], {})\r\n\r\nexport const EXQUISITE_HAMMER = () =>\r\n  createWeapon(type, 'exquisite', [SMASH], {})\r\nexport const DIVINE_HAMMER = () => createWeapon(type, 'divine', [SMASH], {})\r\nexport const ARCANE_HAMMER = () => createWeapon(type, 'arcane', [SMASH], {})\r\nexport const CELESTIAL_HAMMER = () =>\r\n  createBreakableWeapon(type, 'celestial', [SMASH], {})\r\n\r\nexport const HAMMERS: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [\r\n    RUSTED_HAMMER,\r\n    TOMB_HAMMER,\r\n    BURRIED_HAMMER,\r\n    WITHERING_HAMMER,\r\n    GLASS_HAMMER,\r\n  ],\r\n  2: [IRON_HAMMER, STEEL_HAMMER, STAINLESS_HAMMER],\r\n  3: [ANCIENT_HAMMER, CRYSTAL_HAMMER, ELEMENTAL_HAMMER, CURSED_HAMMER],\r\n  4: [SHARP_HAMMER, HARDENED_HAMMER, ENGRAVED_HAMMER, ETHEREAL_HAMMER],\r\n  5: [EXQUISITE_HAMMER, DIVINE_HAMMER, ARCANE_HAMMER, CELESTIAL_HAMMER],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const STRIKE = createSkill('Strike', 4, 0)\r\nexport const WITHERING_STRIKE = createSkill('Strike', 2, 0)\r\nexport const GLASS_STRIKE = createSkill('Strike', 1, 0)\r\nexport const SWING = createSkill('Swing', 5, 0)\r\nexport const FLURRY = createSkill('Flurry', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const LUNGE = createSkill('Lunge', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const STAB = createSkill('Stab', 2, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  GLASS_STRIKE,\r\n  LUNGE,\r\n  SLASH,\r\n  STAB,\r\n  STRIKE,\r\n  SWING,\r\n  WITHERING_STRIKE,\r\n} from '../../../Skill/skills/dagger'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'dagger'\r\nexport const RUSTED_DAGGER = () =>\r\n  createWeapon(type, 'rusted', [STRIKE, SWING], {})\r\nexport const TOMB_DAGGER = () => createWeapon(type, 'tomb', [SWING, LUNGE], {})\r\nexport const BURRIED_DAGGER = () =>\r\n  createWeapon(type, 'buried', [STRIKE, STAB], {})\r\nexport const WITHERING_DAGGER = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_STRIKE], {})\r\nexport const GLASS_DAGGER = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_STRIKE], {})\r\n\r\nexport const IRON_DAGGER = () =>\r\n  createWeapon(type, 'iron', [STRIKE, LUNGE, STAB], {})\r\nexport const STEEL_DAGGER = () =>\r\n  createWeapon(type, 'steel', [STRIKE, LUNGE, SLASH], {})\r\nexport const STAINLESS_DAGGER = () =>\r\n  createWeapon(type, 'stainless', [STRIKE, LUNGE, SLASH], {})\r\n\r\nexport const ANCIENT_DAGGER = () =>\r\n  createWeapon(type, 'ancient', [STRIKE, LUNGE, STAB], {})\r\nexport const CRYSTAL_DAGGER = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_STRIKE], {})\r\nexport const ELEMENTAL_DAGGER = () =>\r\n  createWeapon(type, 'elemental', [STRIKE, LUNGE, STAB], {})\r\nexport const CURSED_DAGGER = () =>\r\n  createWeapon(type, 'cursed', [STRIKE, LUNGE, SLASH], {})\r\n\r\nexport const SHARP_DAGGER = () =>\r\n  createWeapon(type, 'sharp', [STRIKE, LUNGE, STAB], {})\r\nexport const HARDENED_DAGGER = () =>\r\n  createWeapon(type, 'hardened', [STRIKE, LUNGE, SLASH], {})\r\nexport const ENGRAVED_DAGGER = () =>\r\n  createWeapon(type, 'engraved', [STRIKE, LUNGE, STAB], {})\r\nexport const ETHEREAL_DAGGER = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_STRIKE], {})\r\n\r\nexport const EXQUISITE_DAGGER = () =>\r\n  createWeapon(type, 'exquisite', [STRIKE, LUNGE, SLASH], {})\r\nexport const DIVINE_DAGGER = () =>\r\n  createWeapon(type, 'divine', [STRIKE, LUNGE, STAB], {})\r\nexport const ARCANE_DAGGER = () =>\r\n  createWeapon(type, 'arcane', [STRIKE, LUNGE, SLASH], {})\r\nexport const CELESTIAL_DAGGER = () =>\r\n  createBreakableWeapon(type, 'celestial', [STRIKE, LUNGE, STAB], {})\r\n\r\nexport const DAGGERS: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [\r\n    RUSTED_DAGGER,\r\n    TOMB_DAGGER,\r\n    BURRIED_DAGGER,\r\n    WITHERING_DAGGER,\r\n    GLASS_DAGGER,\r\n  ],\r\n  2: [IRON_DAGGER, STEEL_DAGGER, STAINLESS_DAGGER],\r\n  3: [ANCIENT_DAGGER, CRYSTAL_DAGGER, ELEMENTAL_DAGGER, CURSED_DAGGER],\r\n  4: [SHARP_DAGGER, HARDENED_DAGGER, ENGRAVED_DAGGER, ETHEREAL_DAGGER],\r\n  5: [EXQUISITE_DAGGER, DIVINE_DAGGER, ARCANE_DAGGER, CELESTIAL_DAGGER],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const STRIKE = createSkill('Strike', 3, 0)\r\nexport const WITHERING_STRIKE = createSkill('Strike', 2, 0)\r\nexport const GLASS_STRIKE = createSkill('Strike', 1, 0)\r\nexport const SWING = createSkill('Swing', 4, 0)\r\nexport const WIDE_SWING = createSkill('Wide Swing', 4, -5, {\r\n  damageModifier: 0.8,\r\n  splashDamageModifier: 0.8,\r\n  perfectSplash: true,\r\n})\r\nexport const FLURRY = createSkill('Swipe', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const LUNGE = createSkill('Lunge', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const SLICE = createSkill('Stab', 2, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  FLURRY,\r\n  STRIKE,\r\n  LUNGE,\r\n  WIDE_SWING,\r\n  GLASS_STRIKE,\r\n  WITHERING_STRIKE,\r\n  SLASH,\r\n  SLICE,\r\n  STUN,\r\n  SWING,\r\n} from '../../../Skill/skills/greatsword'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'greatsword'\r\nexport const RUSTED_GREATSWORD = () =>\r\n  createWeapon(type, 'rusted', [STRIKE], {})\r\nexport const TOMB_GREATSWORD = () =>\r\n  createWeapon(type, 'tomb', [SWING, FLURRY], {})\r\nexport const BURRIED_GREATSWORD = () =>\r\n  createWeapon(type, 'buried', [STRIKE, FLURRY, SLICE], {})\r\nexport const WITHERING_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_STRIKE], {})\r\nexport const GLASS_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_STRIKE], {})\r\n\r\nexport const IRON_GREATSWORD = () =>\r\n  createWeapon(type, 'iron', [STRIKE, STUN], {})\r\nexport const STEEL_GREATSWORD = () =>\r\n  createWeapon(type, 'steel', [STRIKE, SLICE, LUNGE], {})\r\nexport const STAINLESS_GREATSWORD = () =>\r\n  createWeapon(type, 'stainless', [SLICE, LUNGE, SLASH], {})\r\n\r\nexport const ANCIENT_GREATSWORD = () =>\r\n  createWeapon(type, 'ancient', [SWING, LUNGE, WIDE_SWING], {})\r\nexport const CRYSTAL_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_STRIKE], {})\r\nexport const ELEMENTAL_GREATSWORD = () =>\r\n  createWeapon(type, 'elemental', [STRIKE], {})\r\nexport const CURSED_GREATSWORD = () =>\r\n  createWeapon(type, 'cursed', [STRIKE], {})\r\n\r\nexport const SHARP_GREATSWORD = () =>\r\n  createWeapon(type, 'sharp', [SLICE, SLASH, WIDE_SWING], {})\r\nexport const HARDENED_GREATSWORD = () =>\r\n  createWeapon(type, 'hardened', [SLICE, SLICE, STUN], {})\r\nexport const ENGRAVED_GREATSWORD = () =>\r\n  createWeapon(type, 'engraved', [SLICE, SLASH, FLURRY], {})\r\nexport const ETHEREAL_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_STRIKE], {})\r\n\r\nexport const EXQUISITE_GREATSWORD = () =>\r\n  createWeapon(type, 'exquisite', [SLICE, SLASH, LUNGE], {})\r\nexport const DIVINE_GREATSWORD = () => createWeapon(type, 'divine', [], {})\r\nexport const ARCANE_GREATSWORD = () =>\r\n  createWeapon(type, 'arcane', [STRIKE], {})\r\nexport const CELESTIAL_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'celestial', [GLASS_STRIKE], {})\r\n\r\nexport const GREATSWORDS: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [\r\n    RUSTED_GREATSWORD,\r\n    TOMB_GREATSWORD,\r\n    BURRIED_GREATSWORD,\r\n    WITHERING_GREATSWORD,\r\n    GLASS_GREATSWORD,\r\n  ],\r\n  2: [IRON_GREATSWORD, STEEL_GREATSWORD, STAINLESS_GREATSWORD],\r\n  3: [\r\n    ANCIENT_GREATSWORD,\r\n    CRYSTAL_GREATSWORD,\r\n    ELEMENTAL_GREATSWORD,\r\n    CURSED_GREATSWORD,\r\n  ],\r\n  4: [\r\n    SHARP_GREATSWORD,\r\n    HARDENED_GREATSWORD,\r\n    ENGRAVED_GREATSWORD,\r\n    ETHEREAL_GREATSWORD,\r\n  ],\r\n  5: [\r\n    EXQUISITE_GREATSWORD,\r\n    DIVINE_GREATSWORD,\r\n    ARCANE_GREATSWORD,\r\n    CELESTIAL_GREATSWORD,\r\n  ],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const FIRE = createSkill('Fire', 1, 0, {\r\n  perfectSplash: true,\r\n})\r\nexport const SNIPE = createSkill('Snipe', 2, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const FAN_FIRE = createSkill('Fan Fire', 1, 0, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport { FAN_FIRE, FIRE, SNIPE } from '../../../Skill/skills/pistol'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'pistol'\r\nexport const PATRICIANS_PISTOL = () => ({\r\n  ...createWeapon(type, 'starting', [], {}),\r\n  name: `Patrician Pistol`,\r\n})\r\nexport const RUSTED_PISTOL = () =>\r\n  createWeapon(type, 'rusted', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const TOMB_PISTOL = () =>\r\n  createWeapon(type, 'tomb', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const BURRIED_PISTOL = () =>\r\n  createWeapon(type, 'buried', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const WITHERING_PISTOL = () =>\r\n  createBreakableWeapon(type, 'withering', [FIRE], {})\r\nexport const GLASS_PISTOL = () =>\r\n  createBreakableWeapon(type, 'glass', [FIRE], {})\r\n\r\nexport const IRON_PISTOL = () =>\r\n  createWeapon(type, 'iron', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const STEEL_PISTOL = () =>\r\n  createWeapon(type, 'steel', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const STAINLESS_PISTOL = () =>\r\n  createWeapon(type, 'stainless', [FIRE, SNIPE, FAN_FIRE], {})\r\n\r\nexport const ANCIENT_PISTOL = () =>\r\n  createWeapon(type, 'ancient', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const CRYSTAL_PISTOL = () =>\r\n  createBreakableWeapon(type, 'crystal', [FIRE], {})\r\nexport const ELEMENTAL_PISTOL = () =>\r\n  createWeapon(type, 'elemental', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const CURSED_PISTOL = () =>\r\n  createWeapon(type, 'cursed', [FIRE, SNIPE, FAN_FIRE], {})\r\n\r\nexport const SHARP_PISTOL = () =>\r\n  createWeapon(type, 'sharp', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const HARDENED_PISTOL = () =>\r\n  createWeapon(type, 'hardened', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const ENGRAVED_PISTOL = () =>\r\n  createWeapon(type, 'engraved', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const ETHEREAL_PISTOL = () =>\r\n  createBreakableWeapon(type, 'ethereal', [FIRE], {})\r\n\r\nexport const EXQUISITE_PISTOL = () =>\r\n  createWeapon(type, 'exquisite', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const DIVINE_PISTOL = () =>\r\n  createWeapon(type, 'divine', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const ARCANE_PISTOL = () =>\r\n  createWeapon(type, 'arcane', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const CELESTIAL_PISTOL = () =>\r\n  createBreakableWeapon(type, 'celestial', [FIRE], {})\r\n\r\nexport const PISTOLS: tWeaponsByLevel = {\r\n  0: [PATRICIANS_PISTOL],\r\n  1: [\r\n    RUSTED_PISTOL,\r\n    TOMB_PISTOL,\r\n    BURRIED_PISTOL,\r\n    WITHERING_PISTOL,\r\n    GLASS_PISTOL,\r\n  ],\r\n  2: [IRON_PISTOL, STEEL_PISTOL, STAINLESS_PISTOL],\r\n  3: [ANCIENT_PISTOL, CRYSTAL_PISTOL, ELEMENTAL_PISTOL, CURSED_PISTOL],\r\n  4: [SHARP_PISTOL, HARDENED_PISTOL, ENGRAVED_PISTOL, ETHEREAL_PISTOL],\r\n  5: [EXQUISITE_PISTOL, DIVINE_PISTOL, ARCANE_PISTOL, CELESTIAL_PISTOL],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const STRIKE = createSkill('Strike', 2, 0)\r\nexport const WITHERING_STRIKE = createSkill('Strike', 2, 0)\r\nexport const GLASS_STRIKE = createSkill('Strike', 1, 0)\r\nexport const SWING = createSkill('Swing', 4, 0)\r\nexport const FLURRY = createSkill('Swipe', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const LUNGE = createSkill('Lunge', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const STAB = createSkill('Stab', 2, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  LUNGE,\r\n  FLURRY,\r\n  GLASS_STRIKE,\r\n  SLASH,\r\n  STAB,\r\n  SWING,\r\n  STRIKE,\r\n  WITHERING_STRIKE,\r\n} from '../../../Skill/skills/sword'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'sword'\r\nexport const RUSTED_SWORD = () => createWeapon(type, 'rusted', [STRIKE], {})\r\nexport const TOMB_SWORD = () => createWeapon(type, 'tomb', [SWING, FLURRY], {})\r\nexport const BURRIED_SWORD = () =>\r\n  createWeapon(type, 'buried', [SWING, STAB], {})\r\nexport const WITHERING_SWORD = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_STRIKE], {})\r\nexport const GLASS_SWORD = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_STRIKE], {})\r\n\r\nexport const IRON_SWORD = () => createWeapon(type, 'iron', [STRIKE, LUNGE], {})\r\nexport const STEEL_SWORD = () =>\r\n  createWeapon(type, 'steel', [STRIKE, SLASH], {})\r\nexport const STAINLESS_SWORD = () =>\r\n  createWeapon(type, 'stainless', [STRIKE, STAB], {})\r\n\r\nexport const ANCIENT_SWORD = () =>\r\n  createWeapon(type, 'ancient', [STRIKE, LUNGE], {})\r\nexport const CRYSTAL_SWORD = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_STRIKE], {})\r\nexport const ELEMENTAL_SWORD = () =>\r\n  createWeapon(type, 'elemental', [STRIKE], {})\r\nexport const CURSED_SWORD = () => createWeapon(type, 'cursed', [STRIKE], {})\r\n\r\nexport const SHARP_SWORD = () =>\r\n  createWeapon(type, 'sharp', [STRIKE, STAB, SLASH], {})\r\nexport const HARDENED_SWORD = () =>\r\n  createWeapon(type, 'hardened', [STRIKE, FLURRY, LUNGE], {})\r\nexport const ENGRAVED_SWORD = () =>\r\n  createWeapon(type, 'engraved', [STRIKE, FLURRY, SLASH, LUNGE], {})\r\nexport const ETHEREAL_SWORD = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_STRIKE], {})\r\n\r\nexport const EXQUISITE_SWORD = () =>\r\n  createWeapon(type, 'exquisite', [STRIKE, STAB, SLASH], {})\r\nexport const DIVINE_SWORD = () =>\r\n  createWeapon(type, 'divine', [STRIKE, STAB, SLASH], {})\r\nexport const ARCANE_SWORD = () => createWeapon(type, 'arcane', [STRIKE], {})\r\nexport const CELESTIAL_SWORD = () =>\r\n  createBreakableWeapon(type, 'celestial', [GLASS_STRIKE], {})\r\n\r\nexport const SWORDS: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [RUSTED_SWORD, TOMB_SWORD, BURRIED_SWORD, WITHERING_SWORD, GLASS_SWORD],\r\n  2: [IRON_SWORD, STEEL_SWORD, STAINLESS_SWORD],\r\n  3: [ANCIENT_SWORD, CRYSTAL_SWORD, ELEMENTAL_SWORD, CURSED_SWORD],\r\n  4: [SHARP_SWORD, HARDENED_SWORD, ENGRAVED_SWORD, ETHEREAL_SWORD],\r\n  5: [EXQUISITE_SWORD, DIVINE_SWORD, ARCANE_SWORD, CELESTIAL_SWORD],\r\n}\r\n","import { tWeapon } from '../../type'\r\nimport { tWeaponsByLevel } from '../type'\r\nimport { AXES } from './axe'\r\nimport { HAMMERS } from './hammer'\r\nimport { BOWS } from './bow'\r\nimport { CATALYSTS } from './catalyst'\r\nimport { CHIMES } from './chime'\r\nimport { DAGGERS } from './dagger'\r\nimport { GREATSWORDS } from './greatsword'\r\nimport { PISTOLS } from './pistol'\r\nimport { SCYTHES } from './scythe'\r\nimport { SWORDS } from './sword'\r\n\r\nexport const WEAPONS: tWeaponsByLevel = {\r\n  0: [\r\n    ...AXES[0],\r\n    ...HAMMERS[0],\r\n    ...BOWS[0],\r\n    ...CATALYSTS[0],\r\n    ...CHIMES[0],\r\n    ...DAGGERS[0],\r\n    ...GREATSWORDS[0],\r\n    ...PISTOLS[0],\r\n    ...SCYTHES[0],\r\n    ...SWORDS[0],\r\n  ],\r\n  1: [\r\n    ...AXES[1],\r\n    ...HAMMERS[1],\r\n    ...BOWS[1],\r\n    ...CATALYSTS[1],\r\n    ...CHIMES[1],\r\n    ...DAGGERS[1],\r\n    ...GREATSWORDS[1],\r\n    ...PISTOLS[1],\r\n    ...SCYTHES[1],\r\n    ...SWORDS[1],\r\n  ],\r\n  2: [\r\n    ...AXES[2],\r\n    ...HAMMERS[2],\r\n    ...BOWS[2],\r\n    ...CATALYSTS[2],\r\n    ...CHIMES[2],\r\n    ...DAGGERS[2],\r\n    ...GREATSWORDS[2],\r\n    ...PISTOLS[2],\r\n    ...SCYTHES[2],\r\n    ...SWORDS[2],\r\n  ],\r\n  3: [\r\n    ...AXES[3],\r\n    ...HAMMERS[3],\r\n    ...BOWS[3],\r\n    ...CATALYSTS[3],\r\n    ...CHIMES[3],\r\n    ...DAGGERS[3],\r\n    ...GREATSWORDS[3],\r\n    ...PISTOLS[3],\r\n    ...SCYTHES[3],\r\n    ...SWORDS[3],\r\n  ],\r\n  4: [\r\n    ...AXES[4],\r\n    ...HAMMERS[4],\r\n    ...BOWS[4],\r\n    ...CATALYSTS[4],\r\n    ...CHIMES[4],\r\n    ...DAGGERS[4],\r\n    ...GREATSWORDS[4],\r\n    ...PISTOLS[4],\r\n    ...SCYTHES[4],\r\n    ...SWORDS[4],\r\n  ],\r\n  5: [\r\n    ...AXES[5],\r\n    ...HAMMERS[5],\r\n    ...BOWS[5],\r\n    ...CATALYSTS[5],\r\n    ...CHIMES[5],\r\n    ...DAGGERS[5],\r\n    ...GREATSWORDS[5],\r\n    ...PISTOLS[5],\r\n    ...SCYTHES[5],\r\n    ...SWORDS[5],\r\n  ],\r\n}\r\n\r\nexport const ALL_WEAPONS = Object.keys(WEAPONS).reduce((allWeapons, level) => {\r\n  return [...allWeapons, ...WEAPONS[parseInt(level, 10)]]\r\n}, [] as (() => tWeapon)[])\r\n","import { getRandom } from '../../util'\r\nimport { ARMOR_BY_LEVEL } from '../Armor/builders/sets'\r\nimport { tArmor } from '../Armor/type'\r\nimport { WEAPONS } from '../Weapon/builders/objects'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { tItemType } from './type'\r\n\r\nexport const getRandomItem = (level: number): tWeapon | tArmor => {\r\n  const itemType: tItemType = getRandom(['weapon', 'armor'])\r\n  if (itemType === 'weapon') {\r\n    level = level === 0 ? 1 : level\r\n    let items = Array(level + 1)\r\n      .fill(null)\r\n      .reduce((result, _, index) => {\r\n        if (index === 0) return result\r\n        return [...result, ...WEAPONS[index]]\r\n      }, [] as (() => tWeapon)[]) as (() => tWeapon)[]\r\n\r\n    return getRandom(items)()\r\n  } else {\r\n    let items = Array(level + 1)\r\n      .fill(null)\r\n      .reduce((result, _, index) => {\r\n        return [...result, ...(ARMOR_BY_LEVEL[index] || [])]\r\n      }, [] as (() => tArmor)[]) as (() => tArmor)[]\r\n    return getRandom(items)()\r\n  }\r\n}\r\n","import { tEncounterReward, tEncounterChoice, tCombatEncounter } from './type'\r\nimport { getRandom } from '../../util'\r\nimport { stringArr } from '../../util/stringArr'\r\nimport { FLOOR_CONFIGS_BY_INDEX } from './floors'\r\nimport Forest1 from '../../assets/img/forests/7.png'\r\nimport Forest2 from '../../assets/img/forests/8.png'\r\nimport Forest3 from '../../assets/img/forests/1.png'\r\nimport Dungeon1 from '../../assets/img/dungeon/3.png'\r\nimport Dungeon2 from '../../assets/img/dungeon/1.png'\r\n\r\nexport const ZERO_REWARD: tEncounterReward = {\r\n  gold: 0,\r\n  xp: 0,\r\n  items: [],\r\n  status: [],\r\n  immunities: [],\r\n}\r\n\r\nconst poisoned: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['poisoned'],\r\n}\r\nconst burning: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['burning'],\r\n}\r\nconst bleeding: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['bleeding'],\r\n}\r\nconst armorDown: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['armor-down'],\r\n}\r\nconst resDown: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['resistance-down'],\r\n}\r\nconst attackDown: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['armor-down'],\r\n}\r\n\r\nconst armorUp: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['armor-up'],\r\n}\r\nconst attackUp: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['attack-up'],\r\n}\r\nconst resUp: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['resistance-up'],\r\n}\r\n\r\nconst justGold = (gold: number) => ({\r\n  ...ZERO_REWARD,\r\n  gold,\r\n})\r\nconst justXp = (xp: number) => ({\r\n  ...ZERO_REWARD,\r\n  xp,\r\n})\r\nconst justRandomItem = (floor: number = 0): tEncounterReward => ({\r\n  ...ZERO_REWARD,\r\n  items: [getRandom(FLOOR_CONFIGS_BY_INDEX()[floor].items)],\r\n})\r\n\r\nexport const POSSIBLE_SHINE_REWARDS = (): tEncounterReward[][] => [\r\n  [poisoned, ZERO_REWARD, armorUp],\r\n  [ZERO_REWARD, ZERO_REWARD, ZERO_REWARD, justGold(50)],\r\n  [burning, burning, ZERO_REWARD, justXp(25)],\r\n  [poisoned, burning, ZERO_REWARD, justRandomItem()],\r\n  [attackDown, ZERO_REWARD, ZERO_REWARD, justXp(25)],\r\n  [armorDown, resDown, ZERO_REWARD, justXp(10), justRandomItem()],\r\n  [attackDown, armorDown, resDown, justRandomItem()],\r\n  [poisoned, attackDown, ZERO_REWARD, justGold(100)],\r\n  [burning, burning, burning, justGold(10), justRandomItem()],\r\n  [poisoned, burning, bleeding, justRandomItem(), justRandomItem()],\r\n  [ZERO_REWARD, ZERO_REWARD, ZERO_REWARD, ZERO_REWARD, justRandomItem()],\r\n  [ZERO_REWARD, ZERO_REWARD, ZERO_REWARD, justXp(10), justGold(50)],\r\n  [resDown, armorDown, ZERO_REWARD, resUp, attackUp],\r\n  [ZERO_REWARD, ZERO_REWARD, attackUp],\r\n  [ZERO_REWARD, ZERO_REWARD, armorUp],\r\n  [ZERO_REWARD, ZERO_REWARD, resUp],\r\n  [armorDown, ZERO_REWARD, armorUp],\r\n  [resDown, ZERO_REWARD, resUp],\r\n  [attackDown, ZERO_REWARD, attackUp],\r\n  [poisoned, bleeding, resUp, attackUp],\r\n]\r\n\r\nexport const getChoiceText = (\r\n  currentChoice: tEncounterChoice | undefined,\r\n  previousChoice: tEncounterChoice | undefined,\r\n): string => {\r\n  let text = ''\r\n  const previousEncounter = previousChoice\r\n    ? previousChoice.choices[previousChoice.chosen || 0]\r\n    : undefined\r\n  if (previousChoice === undefined) {\r\n    text =\r\n      'As your party begins their journey, you travel down an empty road. You arrive at a split path, you must make a choice on which way to proceed.'\r\n  }\r\n  if (previousEncounter?.type === 'combat') {\r\n    text = getRandom([\r\n      `After the fierce battle against the ${stringArr(\r\n        (previousEncounter as tCombatEncounter).party.characters.map(\r\n          (c) => c.name,\r\n        ),\r\n      )}, your party again arrives at a choice:`,\r\n    ])\r\n  } else if (previousChoice) {\r\n    text =\r\n      'After a brief rest, your party continues their journey to dispel the evil. You feel it around you as your travel deeper. However, there now seem to be two options before you:'\r\n  }\r\n  if (currentChoice?.depth === 11) {\r\n    text =\r\n      'Your party has traveled far, but it is now time for the final fight.'\r\n  }\r\n  return text\r\n}\r\n\r\nexport const getEncounterBg = (\r\n  level: number,\r\n  floor: number,\r\n): { bg: string; overlay: string } => {\r\n  return [\r\n    [\r\n      {\r\n        // 0\r\n        bg: Forest1,\r\n        overlay: 'transparent',\r\n      },\r\n      {\r\n        // 1\r\n        bg: Forest1,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 2\r\n        bg: Forest1,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 3\r\n        bg: Forest1,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 4\r\n        bg: Forest1,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 5\r\n        bg: Forest2,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 6\r\n        bg: Forest2,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 7\r\n        bg: Forest2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 8\r\n        bg: Forest2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 9\r\n        bg: Forest3,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 10\r\n        bg: Dungeon1,\r\n        overlay: 'transparent',\r\n      },\r\n    ],\r\n    [\r\n      {\r\n        // 0\r\n        bg: Dungeon2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 1\r\n        bg: Dungeon2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 2\r\n        bg: Dungeon2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n    ],\r\n  ][floor][level]\r\n}\r\n","import { tArmor } from '../../Armor/type'\r\nimport { tConsumable } from '../../Consumable/type'\r\nimport { tDamageRange, tDamageType } from '../../Damage/type'\r\nimport { ZERO_REWARD } from '../../Encounter/constants'\r\nimport { tEncounterReward } from '../../Encounter/type'\r\nimport { tSkill } from '../../Skill/type'\r\nimport { BASE_C_STATS } from '../../Stats/constants'\r\nimport { tBaseStats, tStats } from '../../Stats/type'\r\nimport { tStatus, tStatusType } from '../../Status/type'\r\nimport { BASE_WEAPON } from '../../Weapon/constants'\r\nimport { tWeapon } from '../../Weapon/type'\r\nimport { BASE_CHARACTER } from '../constants'\r\nimport { tCharacter, tCharacterTag } from '../type'\r\n\r\nexport const makeEnemy = (\r\n  name: string,\r\n  icon: string,\r\n  level: number,\r\n  health: number,\r\n  weapon: tWeapon,\r\n  stats: Partial<tStats>,\r\n  tags: tCharacterTag[],\r\n  possibleRewards: tEncounterReward[],\r\n  immunities: tStatusType[] = [],\r\n  status: tStatus[] = [],\r\n): tCharacter => {\r\n  const maxHealthOffset = health - 25 - level\r\n  return {\r\n    ...BASE_CHARACTER(),\r\n    name,\r\n    icon,\r\n    level,\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      ...stats,\r\n      maxHealthOffset,\r\n      vigor: 0,\r\n    },\r\n    tags,\r\n    weapon,\r\n    immunities,\r\n    status,\r\n    possibleRewards,\r\n  }\r\n}\r\n\r\nexport const makeEnemyWeapon = (\r\n  stat: keyof tBaseStats,\r\n  damage: number,\r\n  range: tDamageRange,\r\n  type: tDamageType,\r\n  skills: tSkill[],\r\n): tWeapon => {\r\n  return {\r\n    ...BASE_WEAPON(),\r\n    name: '',\r\n    stat,\r\n    damage: {\r\n      value: damage,\r\n      range,\r\n      type,\r\n    },\r\n    skills,\r\n  }\r\n}\r\n\r\nexport const makeEnemyReward = (\r\n  gold: number,\r\n  xp: number,\r\n  items: (tConsumable | tWeapon | tArmor)[] = [],\r\n): tEncounterReward => {\r\n  return {\r\n    ...ZERO_REWARD,\r\n    gold,\r\n    xp,\r\n    items,\r\n  }\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Troll from '../../../icons/svg/skoll/troll.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_TROLL = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Troll',\r\n    Troll,\r\n    2,\r\n    24,\r\n    makeEnemyWeapon('strength', 12, 'melee', 'physical', [\r\n      createSkill('Smash', 4, 0),\r\n      createSkill('Quake', 5, -15, {\r\n        damageModifier: 0.5,\r\n        targetType: 'group',\r\n        perfectStatus: ['stunned'],\r\n      }),\r\n    ]),\r\n    {\r\n      strength: 76,\r\n      agility: getRandom([59, 60, 61, 62, 63, 64]),\r\n      armor: 3,\r\n      resistance: 0,\r\n      evasion: 10,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(5, 15),\r\n      makeEnemyReward(5, 15),\r\n      makeEnemyReward(8, 15),\r\n      makeEnemyReward(20, 15),\r\n      makeEnemyReward(20, 15, [getRandomItem(1)]),\r\n    ],\r\n  )\r\n}\r\n","import BeastMan from '../../../icons/svg/lorc/werewolf.svg'\r\nimport { tCharacter } from '../type'\r\nimport { BASE_C_STATS } from '../../Stats/constants'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_BEAST = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Beast',\r\n    BeastMan,\r\n    1,\r\n    12,\r\n    makeEnemyWeapon('strength', 10, 'melee', 'physical', [\r\n      createSkill('Strike', 2, 0),\r\n      createSkill('Impale', 4, -5, { perfectStatus: ['bleeding'] }),\r\n    ]),\r\n    {\r\n      ...BASE_C_STATS,\r\n      strength: 52,\r\n      agility: getRandom([55, 56, 57, 58, 59, 60, 61]),\r\n      armor: 3,\r\n      evasion: 10,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(6, 5),\r\n      makeEnemyReward(6, 6),\r\n      makeEnemyReward(7, 7),\r\n      makeEnemyReward(10, 10),\r\n      makeEnemyReward(10, 10),\r\n      makeEnemyReward(10, 10, [getRandomItem(0)]),\r\n      makeEnemyReward(10, 10, [getRandomItem(1)]),\r\n    ],\r\n  )\r\n}\r\n","import Bee from '../../../icons/svg/lorc/bee.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandom } from '../../../util'\r\nimport { GODSBEARD } from '../../Consumable/objects/godsbeard'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const BEE = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Bee',\r\n    Bee,\r\n    1,\r\n    6,\r\n    makeEnemyWeapon('dexterity', 12, 'melee', 'physical', [\r\n      createSkill('Sting', 3, 0),\r\n      createSkill('Infectious Sting', 3, -10, { perfectStatus: ['poisoned'] }),\r\n    ]),\r\n    {\r\n      dexterity: 52,\r\n      agility: getRandom([78, 79, 80, 81, 82, 83]),\r\n      evasion: 17,\r\n    },\r\n    ['flying'],\r\n    [\r\n      makeEnemyReward(1, 4),\r\n      makeEnemyReward(4, 8),\r\n      makeEnemyReward(4, 8),\r\n      makeEnemyReward(4, 8),\r\n      makeEnemyReward(8, 8, [getRandomItem(0)]),\r\n      makeEnemyReward(8, 10, [GODSBEARD()]),\r\n    ],\r\n  )\r\n}\r\n","import Cultist from '../../../icons/svg/lorc/cultist.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const CULTIST_BRUTE = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Cultist Brute',\r\n    Cultist,\r\n    4,\r\n    26,\r\n    makeEnemyWeapon('strength', 12, 'melee', 'physical', [\r\n      createSkill('Slice', 3, 0),\r\n      createSkill('Slash', 4, -5, { perfectStatus: ['bleeding'] }),\r\n    ]),\r\n    {\r\n      strength: 72,\r\n      agility: getRandom([75, 76, 77, 78, 79, 80, 81, 82]),\r\n      armor: 6,\r\n      resistance: 2,\r\n      evasion: 13,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(10, 12),\r\n      makeEnemyReward(15, 13),\r\n      makeEnemyReward(15, 13),\r\n      makeEnemyReward(15, 13),\r\n      makeEnemyReward(20, 20),\r\n      makeEnemyReward(25, 20, [getRandomItem(2)]),\r\n    ],\r\n  )\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Cultist from '../../../icons/svg/lorc/cultist.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const CULTIST = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Cultist',\r\n    Cultist,\r\n    2,\r\n    17,\r\n    makeEnemyWeapon('intelligence', 14, 'melee', 'magic', [\r\n      createSkill('Enflame', 4, -10, { perfectStatus: ['burning'] }),\r\n      createSkill('Blast', 3, 0),\r\n    ]),\r\n    {\r\n      intelligence: 75,\r\n      agility: getRandom([68, 69, 70, 71]),\r\n      armor: 1,\r\n      resistance: 4,\r\n      evasion: 15,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(10, 12),\r\n      makeEnemyReward(15, 13),\r\n      makeEnemyReward(15, 13),\r\n      makeEnemyReward(15, 13),\r\n      makeEnemyReward(30, 20),\r\n      makeEnemyReward(30, 20, [getRandomItem(2)]),\r\n    ],\r\n  )\r\n}\r\n","import Wolf from '../../../icons/svg/lorc/wolf-head.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_WOLF = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Wolf',\r\n    Wolf,\r\n    1,\r\n    9,\r\n    makeEnemyWeapon('dexterity', 7, 'melee', 'physical', [\r\n      createSkill('Bite', 3, 0),\r\n      createSkill('Chomp', 4, 0, { perfectPierce: true }),\r\n    ]),\r\n    {\r\n      dexterity: 52,\r\n      agility: getRandom([55, 56, 57, 58, 59, 60, 61, 62, 63, 64]),\r\n      evasion: 10,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(4, 3),\r\n      makeEnemyReward(4, 3),\r\n      makeEnemyReward(4, 3),\r\n      makeEnemyReward(4, 3),\r\n      makeEnemyReward(4, 3),\r\n      makeEnemyReward(4, 3, [getRandomItem(0)]),\r\n      makeEnemyReward(16, 6, [getRandomItem(0)]),\r\n    ],\r\n  )\r\n}\r\n","import Raven from '../../../icons/svg/lorc/raven.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_RAVEN = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Raven',\r\n    Raven,\r\n    1,\r\n    10,\r\n    makeEnemyWeapon('dexterity', 6, 'melee', 'physical', [\r\n      createSkill('Peck', 2, 0),\r\n      createSkill('Caw', 2, -5, { perfectStatus: ['resistance-down'] }),\r\n    ]),\r\n    {\r\n      dexterity: 56,\r\n      agility: getRandom([74, 75, 76, 77, 78]),\r\n      evasion: 10,\r\n    },\r\n    ['flying'],\r\n    [\r\n      makeEnemyReward(0, 5),\r\n      makeEnemyReward(3, 7),\r\n      makeEnemyReward(3, 7),\r\n      makeEnemyReward(3, 7),\r\n      makeEnemyReward(0, 7, [getRandomItem(0)]),\r\n      makeEnemyReward(0, 7, [getRandomItem(1)]),\r\n    ],\r\n    [],\r\n    [\r\n      {\r\n        duration: -1,\r\n        type: 'evasive',\r\n        stats: ZERO_STATS,\r\n        stack: 0,\r\n        immunities: [],\r\n      },\r\n    ],\r\n  )\r\n}\r\n","import Witch from '../../../icons/svg/lorc/witch-flight.svg'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { tStatusType } from '../../Status/type'\r\nimport { tCharacter } from '../type'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\n\r\nexport const FOREST_WITCH = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Witch',\r\n    Witch,\r\n    1,\r\n    9,\r\n    makeEnemyWeapon('intelligence', 9, 'ranged', 'magic', [\r\n      createSkill('Curse', 2, -10, {\r\n        perfectStatus: [\r\n          getRandom<tStatusType>([\r\n            'cursed-agility',\r\n            'cursed-charisma',\r\n            'cursed-dexterity',\r\n            'cursed-intelligence',\r\n            'cursed-luck',\r\n            'cursed-strength',\r\n          ]),\r\n        ],\r\n      }),\r\n      createSkill('Blast', 3, 0),\r\n    ]),\r\n    {\r\n      intelligence: 84,\r\n      agility: getRandom([60, 62, 64, 66, 68]),\r\n      resistance: 2,\r\n      evasion: 10,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(5, 15),\r\n      makeEnemyReward(5, 15),\r\n      makeEnemyReward(20, 15),\r\n      makeEnemyReward(20, 15),\r\n      makeEnemyReward(20, 15, [getRandomItem(1)]),\r\n    ],\r\n  )\r\n}\r\n","import Lich from '../../../icons/svg/delapouite/overlord-helm.svg'\r\nimport { tCharacter } from '../type'\r\nimport {\r\n  makeEnemy,\r\n  makeEnemyReward,\r\n  makeEnemyWeapon,\r\n} from '../enemies/_builder'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const LICH = (): tCharacter => {\r\n  return {\r\n    ...makeEnemy(\r\n      'Lich',\r\n      Lich,\r\n      5,\r\n      67,\r\n      makeEnemyWeapon('strength', 34, 'melee', 'magic', [\r\n        createSkill('Drain', 4, 0, {\r\n          damageModifier: 0.5,\r\n          targetType: 'group',\r\n          perfectStatus: ['speed-down'],\r\n        }),\r\n        createSkill('Screech', 4, -5, {\r\n          damageModifier: 0,\r\n          damage: false,\r\n          targetType: 'group',\r\n          perfectStatus: ['stunned'],\r\n        }),\r\n        createSkill('Smite', 4, 0, {\r\n          perfectStatus: ['armor-down'],\r\n        }),\r\n      ]),\r\n      {\r\n        strength: 85,\r\n        intelligence: 75,\r\n        agility: 80,\r\n        luck: 50,\r\n        armor: 7,\r\n        resistance: 8,\r\n        evasion: 16,\r\n      },\r\n      ['undead'],\r\n      [\r\n        makeEnemyReward(200, 120, [\r\n          getRandomItem(3),\r\n          getRandomItem(3),\r\n          getRandomItem(3),\r\n        ]),\r\n        makeEnemyReward(200, 120, [\r\n          getRandomItem(3),\r\n          getRandomItem(3),\r\n          getRandomItem(3),\r\n        ]),\r\n        makeEnemyReward(200, 120, [\r\n          getRandomItem(3),\r\n          getRandomItem(3),\r\n          getRandomItem(3),\r\n        ]),\r\n      ],\r\n      ['stunned', 'bleeding', 'poisoned'],\r\n    ),\r\n  }\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport { tCharacter } from '../../Character/type'\r\n\r\nexport const makeRandomFloorEncounter = (\r\n  characterList: (() => tCharacter)[],\r\n  enemyCount: number,\r\n): tCharacter[] => {\r\n  return Array(enemyCount)\r\n    .fill(null)\r\n    .map((_) => {\r\n      return getRandom(characterList)()\r\n    })\r\n}\r\n","import { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport Spirit from '../../../icons/svg/lorc/spectre.svg'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { getRandom } from '../../../util'\r\nimport { tStatusType } from '../../Status/type'\r\nimport { getRandomItem } from '../../Item/util'\r\n\r\nexport const TOMB_SPIRIT = () =>\r\n  makeEnemy(\r\n    'Tomb Spirit',\r\n    Spirit,\r\n    4,\r\n    26,\r\n    makeEnemyWeapon('intelligence', 16, 'ranged', 'magic', [\r\n      createSkill('Curse', 2, -10, {\r\n        perfectStatus: [\r\n          getRandom<tStatusType>([\r\n            'cursed-agility',\r\n            'cursed-charisma',\r\n            'cursed-dexterity',\r\n            'cursed-intelligence',\r\n            'cursed-luck',\r\n            'cursed-strength',\r\n          ]),\r\n        ],\r\n      }),\r\n      createSkill('Smite', 4, 0),\r\n    ]),\r\n    {\r\n      intelligence: 84,\r\n      agility: getRandom([75, 76, 77, 78, 79, 80]),\r\n      evasion: 23,\r\n      resistance: 6,\r\n    },\r\n    ['undead'],\r\n    [\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(80, 40),\r\n      makeEnemyReward(80, 40, [getRandomItem(2)]),\r\n      makeEnemyReward(100, 50, [getRandomItem(3)]),\r\n    ],\r\n    ['stunned', 'bleeding', 'poisoned'],\r\n  )\r\n","import { LICH } from '../../Character/bosses'\r\nimport { TOMB_SPIRIT } from '../../Character/enemies/tomb_spirit'\r\nimport { WEAPONS } from '../../Weapon/builders/objects'\r\nimport { tFloorConfig } from '../type'\r\n\r\nconst FLOOR_2_WEAPONS = () => [...WEAPONS[3], ...WEAPONS[4], ...WEAPONS[5]]\r\n\r\nexport const FloorConfig2: tFloorConfig = {\r\n  bosses: [LICH()],\r\n  items: [...FLOOR_2_WEAPONS().map((w) => w())],\r\n  enemies: {\r\n    0: [\r\n      [TOMB_SPIRIT(), TOMB_SPIRIT()],\r\n      [TOMB_SPIRIT(), TOMB_SPIRIT(), TOMB_SPIRIT()],\r\n    ],\r\n  },\r\n}\r\n","import { tFloorConfig } from '../type'\r\nimport { FloorConfig1 } from './floor-1'\r\nimport { FloorConfig2 } from './floor-2'\r\n\r\nexport const FLOOR_CONFIGS_BY_INDEX = (): Record<number, tFloorConfig> => ({\r\n  0: FloorConfig1(),\r\n  1: FloorConfig2,\r\n})\r\n","import { tFloorConfig } from '../type'\r\nimport {\r\n  FOREST_WOLF,\r\n  FOREST_BEAST,\r\n  FOREST_RAVEN,\r\n  BEE,\r\n  CULTIST,\r\n  FOREST_TROLL,\r\n  CULTIST_BRUTE,\r\n  FOREST_WITCH,\r\n} from '../../Character/enemies'\r\nimport { LICH } from '../../Character/bosses'\r\nimport { WEAPONS } from '../../Weapon/builders/objects'\r\nimport { ARMOR_BY_LEVEL } from '../../Armor/builders/sets'\r\nimport { makeRandomFloorEncounter } from './util'\r\nimport { TOMB_SPIRIT } from '../../Character/enemies/tomb_spirit'\r\n\r\nconst FLOOR_1_WEAPONS = () => [\r\n  ...WEAPONS[1],\r\n  ...WEAPONS[2],\r\n  ...WEAPONS[3],\r\n  ...WEAPONS[4],\r\n  ...WEAPONS[5],\r\n]\r\n\r\nconst FLOOR_1_ARMOR = () => [\r\n  ...ARMOR_BY_LEVEL[0],\r\n  ...ARMOR_BY_LEVEL[1],\r\n  ...ARMOR_BY_LEVEL[2],\r\n]\r\n\r\nexport const FloorConfig1 = (): tFloorConfig => ({\r\n  bosses: [LICH()],\r\n  items: [\r\n    ...FLOOR_1_WEAPONS().map((w) => w()),\r\n    ...FLOOR_1_ARMOR().map((a) => a()),\r\n  ],\r\n  enemies: {\r\n    0: [\r\n      makeRandomFloorEncounter([FOREST_WOLF, FOREST_BEAST, BEE], 1),\r\n      makeRandomFloorEncounter([FOREST_WOLF, FOREST_BEAST, FOREST_WITCH], 1),\r\n      makeRandomFloorEncounter([FOREST_WOLF, FOREST_BEAST, FOREST_WITCH], 2),\r\n      makeRandomFloorEncounter([FOREST_WOLF, FOREST_BEAST, FOREST_WITCH], 1),\r\n      makeRandomFloorEncounter([FOREST_WOLF, FOREST_BEAST, FOREST_WITCH], 2),\r\n      makeRandomFloorEncounter([FOREST_WOLF, FOREST_BEAST, BEE], 2),\r\n      makeRandomFloorEncounter(\r\n        [FOREST_WOLF, FOREST_WOLF, FOREST_BEAST, FOREST_WITCH, BEE],\r\n        3,\r\n      ),\r\n    ],\r\n    1: [\r\n      makeRandomFloorEncounter(\r\n        [\r\n          FOREST_WOLF,\r\n          FOREST_BEAST,\r\n          FOREST_WITCH,\r\n          BEE,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n        ],\r\n        3,\r\n      ),\r\n    ],\r\n    2: [\r\n      makeRandomFloorEncounter(\r\n        [\r\n          FOREST_BEAST,\r\n          FOREST_WITCH,\r\n          BEE,\r\n          BEE,\r\n          BEE,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n        ],\r\n        3,\r\n      ),\r\n      [CULTIST()],\r\n      [CULTIST_BRUTE()],\r\n      [FOREST_TROLL()],\r\n    ],\r\n    3: [\r\n      makeRandomFloorEncounter(\r\n        [\r\n          FOREST_WITCH,\r\n          BEE,\r\n          BEE,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_TROLL,\r\n        ],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [\r\n          FOREST_WITCH,\r\n          BEE,\r\n          BEE,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_TROLL,\r\n        ],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [\r\n          FOREST_WITCH,\r\n          BEE,\r\n          BEE,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_TROLL,\r\n        ],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [FOREST_RAVEN, FOREST_TROLL, CULTIST, CULTIST_BRUTE],\r\n        2,\r\n      ),\r\n    ],\r\n    4: [\r\n      makeRandomFloorEncounter(\r\n        [FOREST_RAVEN, FOREST_RAVEN, FOREST_WITCH, FOREST_WITCH, FOREST_TROLL],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [FOREST_RAVEN, FOREST_RAVEN, FOREST_WITCH, FOREST_WITCH, FOREST_TROLL],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [FOREST_RAVEN, FOREST_RAVEN, FOREST_WITCH, FOREST_WITCH, FOREST_TROLL],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_WITCH,\r\n          FOREST_WITCH,\r\n          FOREST_TROLL,\r\n          CULTIST,\r\n          CULTIST_BRUTE,\r\n        ],\r\n        3,\r\n      ),\r\n    ],\r\n    5: [\r\n      makeRandomFloorEncounter(\r\n        [FOREST_RAVEN, FOREST_WITCH, FOREST_TROLL, CULTIST, CULTIST_BRUTE],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [FOREST_RAVEN, FOREST_WITCH, FOREST_TROLL, CULTIST, CULTIST_BRUTE],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [FOREST_RAVEN, FOREST_WITCH, FOREST_TROLL, CULTIST, CULTIST_BRUTE],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [FOREST_RAVEN, FOREST_WITCH, FOREST_TROLL, CULTIST, CULTIST_BRUTE],\r\n        3,\r\n      ),\r\n      [TOMB_SPIRIT()],\r\n    ],\r\n    6: [\r\n      makeRandomFloorEncounter(\r\n        [FOREST_WITCH, FOREST_TROLL, CULTIST, CULTIST_BRUTE],\r\n        3,\r\n      ),\r\n    ],\r\n    7: [[TOMB_SPIRIT(), TOMB_SPIRIT()]],\r\n  },\r\n})\r\n","import { tParty, tProcessedParty } from './type'\r\nimport {\r\n  checkForProcessedCharacter,\r\n  processCharacter,\r\n  getRewardsFromCharacter,\r\n  addExperience,\r\n  addMultipleStatus,\r\n} from '../Character/util'\r\nimport { tCharacter, tProcessedCharacter } from '../Character/type'\r\nimport { v4 } from 'uuid'\r\nimport { getRandom } from '../../util'\r\nimport { tEncounterReward } from '../Encounter/type'\r\nimport { tArmor } from '../Armor/type'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { tConsumable } from '../Consumable/type'\r\nimport { FLOOR_CONFIGS_BY_INDEX } from '../Encounter/floors'\r\n\r\nexport const isParty = (obj: any): boolean =>\r\n  obj !== undefined && obj.isParty !== undefined\r\n\r\nexport const checkForProcessedParty = (party: tParty) => {\r\n  if ((party as tProcessedParty).processed) {\r\n    throw new Error('No Processed Parties Allowed')\r\n  }\r\n  party.characters.forEach((character) => {\r\n    checkForProcessedCharacter(character)\r\n  })\r\n}\r\n\r\nexport const findCharacterInParty = <\r\n  T extends tParty = tParty,\r\n  R extends tCharacter = tCharacter\r\n>(\r\n  party: T,\r\n  id: string,\r\n): R | undefined => {\r\n  return (party.characters as R[]).find((c) => c.id === id)\r\n}\r\n\r\nexport const getOtherCharacters = (\r\n  party: tParty,\r\n  characterId: string,\r\n): tCharacter[] => party.characters.filter((c) => c.id !== characterId)\r\n\r\nexport const processParty = (party: tParty): tProcessedParty => {\r\n  checkForProcessedParty(party)\r\n  return {\r\n    ...party,\r\n    processed: true,\r\n    characters: party.characters.map((c) => ({\r\n      ...processCharacter(c),\r\n      partyId: party.id,\r\n    })),\r\n  }\r\n}\r\n\r\nexport const updateCharacter = (\r\n  party: tParty,\r\n  characterId: string,\r\n  updater: (character: tCharacter) => tCharacter,\r\n): tParty => {\r\n  checkForProcessedParty(party)\r\n  return {\r\n    ...party,\r\n    characters: party.characters.map((c) =>\r\n      c.id === characterId ? updater(c) : c,\r\n    ),\r\n  }\r\n}\r\n\r\nexport const makeParty = (level: number, floor: number): tParty => {\r\n  const floorConfig = FLOOR_CONFIGS_BY_INDEX()[floor]\r\n  const length = Object.keys(floorConfig.enemies).length\r\n  level = level > length ? length : level\r\n\r\n  return {\r\n    isParty: true,\r\n    id: v4(),\r\n    gold: 0,\r\n    items: [],\r\n    characters: getRandom(floorConfig.enemies[level] || []),\r\n  }\r\n}\r\n\r\nexport const makeBossParty = (floor: number): tParty => {\r\n  const config = FLOOR_CONFIGS_BY_INDEX()[floor]\r\n  return {\r\n    isParty: true,\r\n    id: v4(),\r\n    gold: 0,\r\n    items: [],\r\n    characters: [getRandom(config.bosses)],\r\n  }\r\n}\r\n\r\nexport const getRolledRewards = (\r\n  party: tProcessedParty,\r\n  checkedCharacter: tProcessedCharacter,\r\n): tEncounterReward[] => {\r\n  return party.characters.reduce((r, character) => {\r\n    return [...r, ...getRewardsFromCharacter(character, checkedCharacter)]\r\n  }, [] as tEncounterReward[])\r\n}\r\n\r\nexport const commitRewards = (\r\n  party: tParty,\r\n  rewards: tEncounterReward,\r\n): tParty => {\r\n  checkForProcessedParty(party)\r\n  const goldMultiplier =\r\n    1 +\r\n    processParty(party).characters.reduce(\r\n      (r, c) => (r > c.stats.goldModifier ? r : c.stats.goldModifier),\r\n      0,\r\n    ) /\r\n      100\r\n  return {\r\n    ...party,\r\n    gold: party.gold + Math.floor(rewards.gold * goldMultiplier),\r\n    items: [\r\n      ...party.items,\r\n      ...(rewards.items.filter((i) => i.itemType !== 'consumable') as (\r\n        | tArmor\r\n        | tWeapon\r\n      )[]),\r\n    ],\r\n    characters: party.characters.map((c) =>\r\n      addMultipleStatus(\r\n        addExperience(\r\n          {\r\n            ...c,\r\n            consumables: [\r\n              ...c.consumables,\r\n              ...(rewards.items.filter(\r\n                (i) => i.itemType === 'consumable',\r\n              ) as tConsumable[]),\r\n            ],\r\n          },\r\n          rewards.xp,\r\n        ),\r\n        rewards.status,\r\n      ),\r\n    ),\r\n  }\r\n}\r\n","import { v4 } from 'uuid'\r\n\r\nexport const PLAYER_PARTY_ID = v4()\r\n","import { useSelector } from 'react-redux'\r\nimport { StateCoreT, StateActionT, StateT } from '../types'\r\nimport { Dispatch } from 'redux'\r\nimport { makeReducer } from '../util'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { checkForProcessedParty, updateCharacter } from '../../game/Party/util'\r\nimport { tCharacter } from '../../game/Character/type'\r\nimport { makeCharacter, addMultipleStatus } from '../../game/Character/util'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { ALL_WEAPONS } from '../../game/Weapon/builders/objects'\r\nimport { getRandomItem } from '../../game/Item/util'\r\nimport { ARMOR_BY_LEVEL } from '../../game/Armor/builders/sets'\r\n\r\nexport const UPDATE_PARTY = '@actions/parties/set-party'\r\nexport const UPSERT_CHARACTER = '@actions/parties/upsert-character'\r\nexport const DELETE_CHARACTER = '@actions/parties/delete-character'\r\nexport const UPSERT_ITEM = '@actions/parties/upsert-item'\r\nexport const SET_GOLD = '@actions/parties/set-gold'\r\n\r\nexport const actionCreators = {\r\n  updateParty: (party: tParty): StateActionT => {\r\n    return {\r\n      type: UPDATE_PARTY,\r\n      payload: {\r\n        party,\r\n      },\r\n    }\r\n  },\r\n  upsertCharacter: (character: tCharacter): StateActionT => {\r\n    return {\r\n      type: UPSERT_CHARACTER,\r\n      payload: {\r\n        character,\r\n      },\r\n    }\r\n  },\r\n  deleteCharacter: (characterId: string): StateActionT => {\r\n    return {\r\n      type: DELETE_CHARACTER,\r\n      payload: {\r\n        characterId,\r\n      },\r\n    }\r\n  },\r\n  upsertItem: (item: tArmor | tWeapon): StateActionT => {\r\n    return {\r\n      type: UPSERT_ITEM,\r\n      payload: {\r\n        item,\r\n      },\r\n    }\r\n  },\r\n  setGold: (gold: number): StateActionT => {\r\n    return {\r\n      type: SET_GOLD,\r\n      payload: {\r\n        gold,\r\n      },\r\n    }\r\n  },\r\n}\r\n\r\nexport const actions = {\r\n  updateParty: (party: tParty) => (dispatch: Dispatch) => {\r\n    checkForProcessedParty(party)\r\n    dispatch(actionCreators.updateParty(party))\r\n  },\r\n  upsertCharacter: (character: tCharacter) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.upsertCharacter(character))\r\n  },\r\n  deleteCharacter: (characterId: string) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.deleteCharacter(characterId))\r\n  },\r\n  upsertItem: (item: tArmor | tWeapon) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.upsertItem(item))\r\n  },\r\n  setGold: (gold: number) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.setGold(gold))\r\n  },\r\n}\r\n\r\nexport const core: StateCoreT<tParty> = {\r\n  [UPDATE_PARTY]: (state, action) => {\r\n    return {\r\n      ...action.payload.party,\r\n    }\r\n  },\r\n  [UPSERT_CHARACTER]: (state, action) => {\r\n    return updateCharacter(\r\n      state,\r\n      action.payload.character.id,\r\n      (c) => action.payload.character,\r\n    )\r\n  },\r\n  [DELETE_CHARACTER]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      characters: state.characters.filter(\r\n        (c) => c.id !== action.payload.characterId,\r\n      ),\r\n    }\r\n  },\r\n  [UPSERT_ITEM]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      items: [\r\n        ...state.items.filter((item) => item.id !== action.payload.item.id),\r\n        action.payload.item,\r\n      ],\r\n    }\r\n  },\r\n  [SET_GOLD]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      gold: action.payload.gold,\r\n    }\r\n  },\r\n}\r\nconst jack = { ...makeCharacter('executioner'), name: 'Jack' }\r\nconst jim = { ...makeCharacter('patrician'), name: 'Jim' }\r\nconst john = { ...makeCharacter('student'), name: 'Johnny' }\r\nexport const INITIAL_STATE: tParty = {\r\n  isParty: true,\r\n  id: PLAYER_PARTY_ID,\r\n  items: [],\r\n  gold: 100,\r\n  characters: [\r\n    addMultipleStatus(\r\n      {\r\n        ...jack,\r\n        // healthOffset: 30,\r\n      },\r\n      [\r\n        /*\r\n        'frozen',\r\n        'bleeding',\r\n        'burning',\r\n        'poisoned',\r\n        'stunned',\r\n        'speed-down',\r\n        'targeted',\r\n        'evasive',\r\n        'armor-down',\r\n        */\r\n      ],\r\n    ),\r\n    addMultipleStatus(\r\n      {\r\n        ...jim,\r\n        //healthOffset: 30\r\n      },\r\n      [],\r\n    ),\r\n    {\r\n      ...john,\r\n      //healthOffset: 30\r\n    },\r\n  ],\r\n}\r\nexport default makeReducer(core, INITIAL_STATE)\r\nexport const useParty = () => useSelector((state: StateT) => state.party)\r\nexport const usePartyActions = () =>\r\n  useActions(actions) as {\r\n    updateParty: (party: tParty) => void\r\n    upsertCharacter: (character: tCharacter) => void\r\n    deleteCharacter: (characterId: string) => void\r\n    upsertItem: (item: tArmor | tWeapon) => void\r\n    setGold: (gold: number) => void\r\n  }\r\n","import { v4 } from 'uuid'\r\nimport {\r\n  tEncounter,\r\n  tEncounterType,\r\n  tCombatEncounter,\r\n  tEncounterChoice,\r\n  tShopEncounter,\r\n  tShrineEncounter,\r\n  tBossEncounter,\r\n  tFloor,\r\n} from './type'\r\nimport { getRandom, noneg } from '../../util'\r\nimport { makeParty, makeBossParty } from '../Party/util'\r\nimport { tArmor } from '../Armor/type'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { GODSBEARD } from '../Consumable/objects/godsbeard'\r\nimport { tConsumable } from '../Consumable/type'\r\nimport { tBaseStats } from '../Stats/type'\r\nimport { POSSIBLE_SHINE_REWARDS, ZERO_REWARD } from './constants'\r\nimport { FLOOR_CONFIGS_BY_INDEX } from './floors'\r\n\r\nexport const makeEncounterType = (\r\n  depth: number,\r\n  max: number,\r\n): tEncounterType => {\r\n  // return 'shop'\r\n  if (depth === max - 2) {\r\n    return 'boss'\r\n  }\r\n  if (depth === max - 1) {\r\n    return 'reward'\r\n  }\r\n  if (depth === 0) {\r\n    return 'combat'\r\n  }\r\n  return getRandom([\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'shop',\r\n    'shrine',\r\n  ])\r\n}\r\n\r\nexport const makeRandomEncounter = (\r\n  depth: number,\r\n  max: number,\r\n  floor: number,\r\n) => {\r\n  let encounterType = makeEncounterType(depth, max)\r\n  const floorConfig = FLOOR_CONFIGS_BY_INDEX()[floor]\r\n  let encounter: tEncounter = {\r\n    id: v4(),\r\n    choiceId: '',\r\n    name: `Encounter ${depth}`,\r\n    type: encounterType,\r\n    reward: ZERO_REWARD,\r\n  }\r\n\r\n  if (encounter.type === 'combat') {\r\n    encounter = {\r\n      ...encounter,\r\n      party: makeParty(noneg(depth - 1), floor),\r\n    } as tCombatEncounter\r\n  }\r\n  if (encounter.type === 'boss') {\r\n    encounter = {\r\n      ...encounter,\r\n      boss: true,\r\n      party: makeBossParty(floor),\r\n    } as tBossEncounter\r\n  }\r\n  if (encounter.type === 'reward') {\r\n    encounter = {\r\n      ...encounter,\r\n    }\r\n  }\r\n  if (encounter.type === 'shop') {\r\n    const items = [GODSBEARD(), GODSBEARD(), GODSBEARD(), ...floorConfig.items]\r\n    encounter = {\r\n      ...encounter,\r\n      items,\r\n      consumables: [],\r\n      costs: items.reduce((r, i) => {\r\n        return {\r\n          ...r,\r\n          [i.id]: getItemCost(i),\r\n        }\r\n      }, {}),\r\n    } as tShopEncounter\r\n  }\r\n  if (encounter.type === 'shrine') {\r\n    const stat: keyof tBaseStats = getRandom<keyof tBaseStats>([\r\n      'vigor',\r\n      'strength',\r\n      'dexterity',\r\n      'intelligence',\r\n      'charisma',\r\n      'luck',\r\n    ])\r\n    const rewards = getRandom(POSSIBLE_SHINE_REWARDS())\r\n    encounter = {\r\n      ...encounter,\r\n      stat,\r\n      offset: 0,\r\n      rolls: rewards.length,\r\n      results: rewards,\r\n    } as tShrineEncounter\r\n  }\r\n\r\n  return encounter\r\n}\r\n\r\nexport const makeEncounterList = (\r\n  depth: number,\r\n  floor: number,\r\n): tEncounterChoice[] => {\r\n  return Array(depth)\r\n    .fill(undefined)\r\n    .map((_, index) => {\r\n      const id = v4()\r\n      return {\r\n        id,\r\n        depth: index,\r\n        chosen: undefined,\r\n        choices: Array(getRandom([1, 2, 3]))\r\n          .fill(null)\r\n          .map((_) => ({\r\n            ...makeRandomEncounter(index, depth, floor),\r\n            choiceId: id,\r\n          })),\r\n      }\r\n    })\r\n}\r\n\r\nexport const getItemCost = (item: tArmor | tWeapon | tConsumable): number => {\r\n  return item.goldValue * 3\r\n}\r\n\r\nexport const makeFloor = (depth: number, encounterCount: number): tFloor => {\r\n  let name = ''\r\n  if (depth === 0) {\r\n    name = 'The Forgotten Woods'\r\n  }\r\n  if (depth === 1) {\r\n    name = 'Tomb of the Formless One (in-progress)'\r\n  }\r\n  return {\r\n    id: v4(),\r\n    name,\r\n    encounters: makeEncounterList(encounterCount, depth),\r\n    depth,\r\n  }\r\n}\r\n","import { StateCoreT, StateT, StateActionT } from '../types'\r\nimport { makeReducer } from '../util'\r\nimport { useSelector } from 'react-redux'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport { Dispatch } from 'redux'\r\nimport { tShopEncounter, tFloor } from '../../game/Encounter/type'\r\nimport { makeFloor } from '../../game/Encounter/util'\r\n\r\nexport interface GameStateT {\r\n  level: number\r\n  floor: number\r\n  floors: tFloor[]\r\n}\r\n\r\nexport const RESET = '@action/game/reset'\r\nexport const CHOOSE_CURRENT = '@action/game/choose-current'\r\nexport const NEXT_LEVEL = '@action/game/next-level'\r\nexport const NEXT_FLOOR = '@action/game/next-floor'\r\nexport const REMOVE_ITEM = '@action/game/remove-item'\r\n\r\nexport const actionCreators = {\r\n  reset: (): StateActionT => ({\r\n    type: RESET,\r\n    payload: {},\r\n  }),\r\n  chooseCurrent: (value: number): StateActionT => ({\r\n    type: CHOOSE_CURRENT,\r\n    payload: {\r\n      value,\r\n    },\r\n  }),\r\n  nextLevel: (): StateActionT => ({\r\n    type: NEXT_LEVEL,\r\n    payload: {},\r\n  }),\r\n  nextFloor: (): StateActionT => ({\r\n    type: NEXT_FLOOR,\r\n    payload: {},\r\n  }),\r\n  removeItem: (\r\n    choiceId: string,\r\n    encounterId: string,\r\n    itemId: string,\r\n  ): StateActionT => ({\r\n    type: REMOVE_ITEM,\r\n    payload: {\r\n      choiceId,\r\n      encounterId,\r\n      itemId,\r\n    },\r\n  }),\r\n}\r\n\r\nexport const actions = {\r\n  reset: () => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.reset())\r\n  },\r\n  chooseCurrent: (value: number) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.chooseCurrent(value))\r\n  },\r\n  nextLevel: () => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.nextLevel())\r\n  },\r\n  nextFloor: () => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.nextFloor())\r\n  },\r\n  removeItem: (choiceId: string, encounterId: string, itemId: string) => (\r\n    dispatch: Dispatch,\r\n  ) => {\r\n    dispatch(actionCreators.removeItem(choiceId, encounterId, itemId))\r\n  },\r\n}\r\n\r\nconst updateCurrentFloor = (\r\n  state: GameStateT,\r\n  updater: (floor: tFloor) => tFloor,\r\n): GameStateT => {\r\n  return {\r\n    ...state,\r\n    floors: state.floors.map((floor) =>\r\n      floor.depth === state.floor ? updater(floor) : floor,\r\n    ),\r\n  }\r\n}\r\n\r\nexport const core: StateCoreT<GameStateT> = {\r\n  [RESET]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      level: 0,\r\n      floor: 0,\r\n      floors: [makeFloor(0, 11), makeFloor(1, 11)],\r\n    }\r\n  },\r\n  [CHOOSE_CURRENT]: (state, action) => {\r\n    return updateCurrentFloor(state, (floor) => {\r\n      return {\r\n        ...floor,\r\n        encounters: floor.encounters.map((e, i) => {\r\n          if (i === state.level) {\r\n            return {\r\n              ...e,\r\n              chosen: action.payload.value,\r\n            }\r\n          }\r\n          return e\r\n        }),\r\n      }\r\n    })\r\n  },\r\n  [NEXT_LEVEL]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      level: state.level + 1,\r\n    }\r\n  },\r\n  [NEXT_FLOOR]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      level: 0,\r\n      floor: state.floor + 1,\r\n    }\r\n  },\r\n  [REMOVE_ITEM]: (state, action) => {\r\n    return updateCurrentFloor(state, (floor) => {\r\n      return {\r\n        ...floor,\r\n        encounters: floor.encounters.map((choice) => {\r\n          if (choice.id === action.payload.choiceId) {\r\n            const chosen = choice.chosen\r\n              ? choice.choices[choice.chosen]\r\n              : undefined\r\n            if (\r\n              chosen &&\r\n              chosen.id === action.payload.encounterId &&\r\n              chosen.type === 'shop'\r\n            ) {\r\n              return {\r\n                ...choice,\r\n                choices: choice.choices.map(\r\n                  (c) =>\r\n                    ({\r\n                      ...c,\r\n                      items: (c as tShopEncounter).items.filter(\r\n                        (i) => i.id !== action.payload.itemId,\r\n                      ),\r\n                    } as tShopEncounter),\r\n                ),\r\n              }\r\n            }\r\n          }\r\n          return choice\r\n        }),\r\n      }\r\n    })\r\n  },\r\n}\r\n\r\nexport const INITIAL_STATE: GameStateT = {\r\n  level: 0,\r\n  floor: 0,\r\n  floors: [makeFloor(0, 11), makeFloor(1, 11)],\r\n}\r\n\r\nexport default makeReducer(core, INITIAL_STATE)\r\nexport const useGameState = () => useSelector((state: StateT) => state.game)\r\nexport const useGameStateActions = () =>\r\n  useActions(actions) as {\r\n    reset: () => void\r\n    chooseCurrent: (value: number) => void\r\n    nextLevel: () => void\r\n    nextFloor: () => void\r\n    removeItem: (choiceId: string, encounterId: string, itemId: string) => void\r\n  }\r\n","import React, { useContext, useMemo } from 'react'\r\nimport { useGameState, useGameStateActions } from '../../state/game'\r\nimport { tEncounterChoice, tEncounter, tFloor } from '../../game/Encounter/type'\r\n\r\nexport interface GameStateContextT {\r\n  encounters: tEncounterChoice[]\r\n  floors: tFloor[]\r\n  level: number\r\n  floor: number\r\n  currentChoice: tEncounterChoice | undefined\r\n  previousChoice: tEncounterChoice | undefined\r\n  currentEncounter: tEncounter | undefined\r\n  chooseCurrent: (value: number) => void\r\n  nextLevel: () => void\r\n  nextFloor: () => void\r\n  reset: () => void\r\n  removeItem: (choiceId: string, encounterId: string, itemId: string) => void\r\n}\r\n\r\nexport const defaultValue: GameStateContextT = {\r\n  encounters: [],\r\n  floors: [],\r\n  level: 0,\r\n  floor: 0,\r\n  currentChoice: undefined,\r\n  currentEncounter: undefined,\r\n  previousChoice: undefined,\r\n  chooseCurrent: (value) => {},\r\n  nextLevel: () => {},\r\n  nextFloor: () => {},\r\n  reset: () => {},\r\n  removeItem: (choiceId, encounterId, itemId) => {},\r\n}\r\nexport const GameStateContext = React.createContext<GameStateContextT>(\r\n  defaultValue,\r\n)\r\nexport const useGameStateContext = () => useContext(GameStateContext)\r\n\r\nexport interface GameStateProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const GameStateContextProvider = (props: GameStateProviderPropsT) => {\r\n  const { children } = props\r\n  const { floors, floor, level } = useGameState()\r\n  const currentFloor = floors[floor]\r\n  const encounters = currentFloor.encounters\r\n  const {\r\n    nextLevel,\r\n    nextFloor,\r\n    chooseCurrent,\r\n    reset,\r\n    removeItem,\r\n  } = useGameStateActions()\r\n  const currentChoice = useMemo(() => {\r\n    return encounters[level]\r\n  }, [encounters, level])\r\n  const previousChoice = useMemo(() => {\r\n    return encounters[level - 1]\r\n  }, [encounters, level])\r\n  const currentEncounter = useMemo(() => {\r\n    const choice = encounters[level]\r\n    if (choice && choice.chosen !== undefined) {\r\n      return choice.choices[choice.chosen]\r\n    }\r\n  }, [encounters, level])\r\n\r\n  return (\r\n    <GameStateContext.Provider\r\n      value={{\r\n        encounters,\r\n        floors,\r\n        level,\r\n        floor,\r\n        currentChoice,\r\n        previousChoice,\r\n        currentEncounter,\r\n        reset,\r\n        nextLevel,\r\n        nextFloor,\r\n        chooseCurrent,\r\n        removeItem,\r\n      }}\r\n    >\r\n      {children}\r\n    </GameStateContext.Provider>\r\n  )\r\n}\r\n","import React, { useMemo, useContext, useState } from 'react'\r\nimport { usePartyActions, useParty } from '../../state/party'\r\nimport { tProcessedParty, tParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter, tCharacter } from '../../game/Character/type'\r\nimport {\r\n  processParty,\r\n  makeParty,\r\n  findCharacterInParty,\r\n} from '../../game/Party/util'\r\nimport {\r\n  checkForProcessedCharacter,\r\n  processCharacter,\r\n  makeCharacter,\r\n  equipArmor,\r\n  equipWeapon,\r\n  unequipArmor,\r\n} from '../../game/Character/util'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { useGameStateContext } from '../GameStateContext'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { FISTS } from '../../game/Weapon/fists'\r\n\r\nexport interface PartyContextT {\r\n  party: tProcessedParty\r\n  rawParty: tParty\r\n  activeCharacter: tProcessedCharacter\r\n  updateParty: (party: tParty) => void\r\n  upsertCharacter: (character: tCharacter) => void\r\n  deleteCharacter: (characterId: string) => void\r\n  findCharacter: (characterId: string) => tProcessedCharacter | undefined\r\n  findRawCharacter: (characterId: string) => tCharacter | undefined\r\n  setActiveCharacter: (character: tProcessedCharacter) => void\r\n  equipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n  unequipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n  purchaseItem: (item: tArmor | tWeapon | tConsumable, cost: number) => void\r\n  sellItem: (itemId: string) => void\r\n  refreshParty: () => void\r\n}\r\nconst defaultContextValue: PartyContextT = {\r\n  rawParty: makeParty(0, 0),\r\n  party: processParty(makeParty(0, 0)),\r\n  activeCharacter: processCharacter(makeCharacter('executioner')),\r\n  updateParty: (party) => {},\r\n  upsertCharacter: (character) => {},\r\n  deleteCharacter: (characterId) => {},\r\n  findCharacter: (characterId) => undefined,\r\n  findRawCharacter: (characterId) => undefined,\r\n  setActiveCharacter: (character) => {},\r\n  equipItem: (characterId, item) => {},\r\n  unequipItem: (characterId, item) => {},\r\n  purchaseItem: (item, cost) => {},\r\n  sellItem: (itemId) => {},\r\n  refreshParty: () => {},\r\n}\r\nexport const PartyContext = React.createContext<PartyContextT>(\r\n  defaultContextValue,\r\n)\r\n\r\nexport interface PartyContextProviderPropsT {\r\n  children: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const PartyContextProvider = (props: PartyContextProviderPropsT) => {\r\n  const { children } = props\r\n  const actions = usePartyActions()\r\n  const rawParty = useParty()\r\n  const { currentChoice, currentEncounter, removeItem } = useGameStateContext()\r\n  const party = useMemo(() => processParty(rawParty), [rawParty])\r\n  const [activeCharacterId, setActiveCharacterId] = useState<string>(\r\n    party.characters[0].id,\r\n  )\r\n  const activeCharacter = useMemo(() => {\r\n    return party.characters.find(\r\n      (c) => c.id === activeCharacterId,\r\n    ) as tProcessedCharacter\r\n  }, [activeCharacterId, party.characters])\r\n  const setActiveCharacter = (character: tProcessedCharacter) =>\r\n    setActiveCharacterId(character.id)\r\n  const updateParty = (party: tParty) => {\r\n    actions.updateParty(party)\r\n  }\r\n  const upsertCharacter = (character: tCharacter) => {\r\n    if (!character) return\r\n    checkForProcessedCharacter(character)\r\n    actions.upsertCharacter(character)\r\n  }\r\n  const deleteCharacter = (characterId: string) => {\r\n    actions.deleteCharacter(characterId)\r\n  }\r\n  const findCharacter = (characterId: string) => {\r\n    return findCharacterInParty<tProcessedParty, tProcessedCharacter>(\r\n      party,\r\n      characterId,\r\n    )\r\n  }\r\n  const findRawCharacter = (characterId: string) => {\r\n    return findCharacterInParty(rawParty, characterId)\r\n  }\r\n\r\n  const equipItem = (characterId: string, item: tWeapon | tArmor) => {\r\n    const character = findRawCharacter(characterId)\r\n    if (!character) return\r\n    if (item.itemType === 'armor') {\r\n      const armor = item as tArmor\r\n      if (armor.resource === 'offhand' && (character.weapon || FISTS()).twoHand)\r\n        return\r\n      const result = equipArmor(character, armor)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.armor ? [result.armor] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n    if (item.itemType === 'weapon') {\r\n      const weapon = item as tWeapon\r\n      if ((character.weapon || FISTS()).twoHand) {\r\n        if (character.armor.find((a) => a.resource === 'offhand')) {\r\n          return\r\n        }\r\n      }\r\n      const result = equipWeapon(character, weapon)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.weapon ? [result.weapon] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n  }\r\n  const unequipItem = (characterId: string, item: tWeapon | tArmor) => {\r\n    const character = findRawCharacter(characterId)\r\n    if (!character) return\r\n    if (item.itemType === 'armor') {\r\n      const armor = item as tArmor\r\n      const result = unequipArmor(character, armor.resource)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.armor ? [result.armor] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n    if (item.itemType === 'weapon') {\r\n    }\r\n  }\r\n  const purchaseItem = (item: tArmor | tWeapon | tConsumable, cost: number) => {\r\n    if (party.gold > cost && currentChoice && currentEncounter) {\r\n      if (item.itemType === 'armor' || item.itemType === 'weapon') {\r\n        actions.upsertItem(item as tArmor | tWeapon)\r\n      }\r\n      if (item.itemType === 'consumable') {\r\n        updateParty({\r\n          ...rawParty,\r\n          characters: rawParty.characters.map((c) => ({\r\n            ...c,\r\n            consumables: [...c.consumables, item as tConsumable],\r\n          })),\r\n        })\r\n      }\r\n      actions.setGold(party.gold - cost)\r\n      removeItem(currentChoice.id, currentEncounter.id, item.id)\r\n    }\r\n  }\r\n  const sellItem = (itemId: string) => {\r\n    const item = rawParty.items.find((i) => i.id === itemId)\r\n    if (item) {\r\n      updateParty({\r\n        ...rawParty,\r\n        items: rawParty.items.filter((i) => i.id !== itemId),\r\n        gold: rawParty.gold + item.goldValue,\r\n      })\r\n    }\r\n  }\r\n  const refreshParty = () => {\r\n    updateParty({\r\n      ...rawParty,\r\n      characters: rawParty.characters.map((c) => ({\r\n        ...c,\r\n        healthOffset: 0,\r\n        status: [],\r\n      })),\r\n    })\r\n  }\r\n\r\n  return (\r\n    <PartyContext.Provider\r\n      value={{\r\n        party,\r\n        rawParty,\r\n        activeCharacter,\r\n        updateParty,\r\n        upsertCharacter,\r\n        deleteCharacter,\r\n        findCharacter,\r\n        findRawCharacter,\r\n        setActiveCharacter,\r\n        equipItem,\r\n        unequipItem,\r\n        purchaseItem,\r\n        sellItem,\r\n        refreshParty,\r\n      }}\r\n    >\r\n      {children}\r\n    </PartyContext.Provider>\r\n  )\r\n}\r\n\r\nexport const usePartyContext = () => useContext(PartyContext)\r\n","import { ModalStylesT } from '.'\r\n\r\nexport interface ModalContextStateT {\r\n  isOpen: boolean\r\n  contents: JSX.Element | null\r\n  callback: ((payload?: any) => void) | null\r\n  payload: any | null\r\n  blocking: boolean\r\n  styles: ModalStylesT\r\n}\r\nexport const initialState: ModalContextStateT = {\r\n  isOpen: false,\r\n  contents: null,\r\n  callback: null,\r\n  payload: null,\r\n  blocking: false,\r\n  styles: {},\r\n}\r\n\r\nexport const OPEN = 'modalContext/OPEN'\r\nexport const CLOSE = 'modalContext/CLOSE'\r\nexport const SET_CONTENTS = 'modalContext/SET_CONTENTS'\r\nexport const SET_CALLBACK = 'modalContext/SET_CALLBACK'\r\nexport const SET_PAYLOAD = 'modalContext/SET_PAYLOAD'\r\nexport const SET_BLOCKING = 'modalContext/SET_BLOCKING'\r\nexport const SET_STYLE = 'modalContext/SET_STYLE'\r\n\r\nexport const actions = {\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => ({\r\n    type: OPEN,\r\n    contents,\r\n    styles,\r\n    blocking,\r\n    callback,\r\n  }),\r\n  close: () => ({ type: CLOSE }),\r\n  setPayload: (payload: any) => ({ type: SET_PAYLOAD, payload }),\r\n  setContents: (contents: JSX.Element | null) => ({\r\n    type: SET_CONTENTS,\r\n    contents,\r\n  }),\r\n  setCallback: (callback: (() => void) | null) => ({\r\n    type: SET_CALLBACK,\r\n    callback,\r\n  }),\r\n  setBlocking: (blocking: boolean) => ({ type: SET_BLOCKING, blocking }),\r\n  setStyles: (styles: ModalStylesT) => ({ type: SET_STYLE, styles }),\r\n}\r\n\r\nconst core: Record<\r\n  string,\r\n  (state: ModalContextStateT, action: any) => ModalContextStateT\r\n> = {\r\n  [OPEN]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    isOpen: true,\r\n    contents: action.contents ? action.contents : state.contents,\r\n    styles: action.styles ? action.styles : state.styles || {},\r\n    blocking: action.blocking || false,\r\n    callback: action.callback ? action.callback : state.callback,\r\n  }),\r\n  [CLOSE]: (state: ModalContextStateT) => ({\r\n    ...state,\r\n    isOpen: false,\r\n  }),\r\n  [SET_PAYLOAD]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    payload: action.payload,\r\n  }),\r\n  [SET_CONTENTS]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: null,\r\n    payload: null,\r\n    contents: action.contents,\r\n    blocking: false,\r\n    style: {},\r\n  }),\r\n  [SET_CALLBACK]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: action.callback,\r\n  }),\r\n  [SET_BLOCKING]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    blocking: action.blocking,\r\n  }),\r\n  [SET_STYLE]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    styles: action.styles,\r\n  }),\r\n}\r\n\r\nexport const reducer = (\r\n  state: ModalContextStateT = initialState,\r\n  action: any,\r\n) => {\r\n  const coreFunction = core[action.type]\r\n  return coreFunction ? coreFunction(state, action) : state\r\n}\r\n","import React, { useContext, useReducer, useMemo, CSSProperties } from 'react'\r\nimport Modal from 'react-modal'\r\nimport { actions, reducer, initialState, ModalContextStateT } from './reducer'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ModalContextT {\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => void\r\n  close: (payload?: any) => void\r\n  setPayload: (payload: any) => void\r\n  setBlocking: (blocking: boolean) => void\r\n  setContents: (contents: JSX.Element) => void\r\n  setCallback: (callback: (payload?: any) => void) => void\r\n  setStyles: (styles: ModalStylesT) => void\r\n}\r\nconst defaultContext: ModalContextT = {\r\n  open: () => null,\r\n  close: () => null,\r\n  setBlocking: () => null,\r\n  setPayload: () => null,\r\n  setContents: () => null,\r\n  setCallback: () => null,\r\n  setStyles: () => null,\r\n}\r\nexport const ModalContext = React.createContext<ModalContextT>(defaultContext)\r\nexport const useModalContext = () => useContext(ModalContext)\r\n\r\nexport interface ModalStylesT {\r\n  modal?: CSSProperties\r\n  overlay?: CSSProperties\r\n}\r\n\r\nconst getContextValue = (\r\n  state: ModalContextStateT,\r\n  dispatch: React.Dispatch<any>,\r\n) => ({\r\n  isOpen: state.isOpen,\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => {\r\n    dispatch(actions.open(contents, styles, blocking, callback))\r\n  },\r\n  close: (payload?: any) => {\r\n    if (state.callback) state.callback(payload || state.payload)\r\n    dispatch(actions.close())\r\n  },\r\n  setPayload: (payload: any) => dispatch(actions.setPayload(payload)),\r\n  setContents: (contents: JSX.Element) =>\r\n    dispatch(actions.setContents(contents)),\r\n  setCallback: (callback: (payload?: any) => void) =>\r\n    dispatch(actions.setCallback(callback)),\r\n  setBlocking: (blocking: boolean) => dispatch(actions.setBlocking(blocking)),\r\n  setStyles: (styles: ModalStylesT) => dispatch(actions.setStyles(styles)),\r\n})\r\nModal.setAppElement('#root')\r\nexport interface ModalContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const ModalContextProvider = (props: ModalContextProviderPropsT) => {\r\n  const { children } = props\r\n  const reducerValue = useReducer(reducer, initialState)\r\n  const [state] = reducerValue\r\n  const context = useMemo(() => getContextValue(...reducerValue), [\r\n    reducerValue,\r\n  ])\r\n\r\n  return (\r\n    <ModalContext.Provider value={context}>\r\n      {children}\r\n      <Modal\r\n        isOpen={state.isOpen}\r\n        onRequestClose={() => {\r\n          if (!state.blocking) context.close()\r\n        }}\r\n        style={{\r\n          content: {\r\n            backgroundColor: Theme.darkBgColor,\r\n            color: 'white',\r\n            width: 400,\r\n            margin: '0 auto',\r\n            bottom: 'unset',\r\n            borderColor: Theme.lightBgColor,\r\n            ...state.styles.modal,\r\n          },\r\n          overlay: {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n            zIndex: 900,\r\n            ...state.styles.overlay,\r\n          },\r\n        }}\r\n      >\r\n        {state.contents || <div />}\r\n      </Modal>\r\n    </ModalContext.Provider>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport interface FlexContainerPropsT {\r\n  $direction?: 'row' | 'column' | 'column-reverse'\r\n  $full?: boolean\r\n}\r\nexport const FlexContainer = styled('div', (props: FlexContainerPropsT) => ({\r\n  display: 'flex',\r\n  flexDirection: props.$direction || 'row',\r\n  flex: props.$full ? 1 : 'default',\r\n}))\r\nexport const FullContainer = styled('div', () => ({\r\n  flex: 1,\r\n}))\r\n","import React from 'react'\r\nimport { styled, withStyle } from 'styletron-react'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { Theme } from '../theme'\r\n\r\nexport interface ButtonPropsT {\r\n  $direction?: 'up' | 'down'\r\n}\r\nexport const Button = styled('button', (props: ButtonPropsT) => {\r\n  return {\r\n    cursor: 'pointer',\r\n    background: Theme.mediumBgColor,\r\n    boxShadow: 'inset 0px 0px 3px black',\r\n    textShadow: '0px 1px 3px black',\r\n    border: '1px solid rgba(255,255,255,0.2)',\r\n    color: 'rgba(255,255,255,1)',\r\n    ':hover': {\r\n      border: '1px solid rgba(255,255,255,0.4)',\r\n    },\r\n    ':active': {\r\n      outline: 'none',\r\n      border: '1px solid rgba(255,255,255,0.7)',\r\n    },\r\n    ':focus': {\r\n      outline: 'none',\r\n    },\r\n    padding: '10px 30px',\r\n    userSelect: 'none',\r\n  }\r\n})\r\n\r\nexport const RedButton = withStyle(Button, (props: ButtonPropsT) => {\r\n  return {\r\n    // fontFamily: Theme.titleFont,\r\n    fontWeight: 'bold',\r\n    background:\r\n      'linear-gradient(0deg, rgba(157,30,30,1) 0%, rgba(110,23,23,1) 100%)',\r\n  }\r\n})\r\n\r\nexport const ConfirmButton = withStyle(Button, (props: ButtonPropsT) => {\r\n  const { $direction } = props\r\n  return {\r\n    // background: 'linear-gradient(0deg, rgba(157,0,0,1) 0%, rgba(110,0,0,1) 100%)',\r\n    // fontWeight: 'bold',\r\n    borderTop: $direction === 'down' ? 'none' : undefined,\r\n    borderBottom: $direction === 'up' ? 'none' : undefined,\r\n    padding: '10px 30px',\r\n    boxShadow: 'inset 0px 2px 8px black',\r\n    ':hover': {\r\n      borderTop: $direction === 'down' ? 'none' : undefined,\r\n      borderBottom: $direction === 'up' ? 'none' : undefined,\r\n    },\r\n    animationDirection: '1s',\r\n    animationIterationCount: 'infinite',\r\n    animationName: `\r\n      from: {\r\n        background: 'rgba(255,255,255,0.4)',\r\n      },\r\n\r\n      to: {\r\n        background: 'rgba(255,255,255,1)',\r\n      },\r\n    `,\r\n  }\r\n})\r\n\r\nexport const ConfirmButton2 = (props: any) => {\r\n  const styles = useSpring({\r\n    from: {\r\n      border: '1px solid rgba(255,255,255,0)',\r\n    },\r\n    to: async (next: any) => {\r\n      while (1) {\r\n        await next({\r\n          border: '1px solid rgba(255,255,255,0)',\r\n        })\r\n        await next({ border: '1px solid rgba(255,255,255,1)' })\r\n      }\r\n    },\r\n  })\r\n  return (\r\n    <animated.div style={styles}>\r\n      <ConfirmButton style={{ border: 'none' }}>{props.children}</ConfirmButton>\r\n    </animated.div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nexport interface IconPropsT {\r\n  src: string\r\n  size: number\r\n  fill?: string\r\n  style?: React.CSSProperties\r\n  shadow?: boolean\r\n  onClick?: () => void\r\n}\r\nexport const Icon = ({\r\n  src,\r\n  size,\r\n  style = {},\r\n  fill = 'white',\r\n  shadow,\r\n  onClick,\r\n}: IconPropsT) => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [svg, setSvg] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (src) {\r\n      fetch(src)\r\n        .then((res) => res.text())\r\n        .then((text) => setSvg(text))\r\n        .then(() => setLoading(false))\r\n    }\r\n  }, [src])\r\n\r\n  return !loading ? (\r\n    <div\r\n      className={`icon ${shadow ? 'shadow' : ''}`}\r\n      onClick={() => {\r\n        if (onClick) onClick()\r\n      }}\r\n      style={{ ...style, height: size, width: size, fill }}\r\n      dangerouslySetInnerHTML={{ __html: svg }}\r\n    />\r\n  ) : (\r\n    <div />\r\n  )\r\n}\r\n","import React, { useState, useLayoutEffect } from 'react'\r\nimport { v4 } from 'uuid'\r\n\r\nexport interface HoverChildrenT {\r\n  isHovering: boolean\r\n}\r\nexport interface HoverPropsT {\r\n  delay?: number\r\n  flex?: boolean\r\n  children: (props: HoverChildrenT) => JSX.Element\r\n}\r\nexport const Hover = (props: HoverPropsT) => {\r\n  const { delay = 500, flex, children } = props\r\n  const [internalHovering, setInternalHovering] = useState<boolean>(false)\r\n  const [isHovering, setIsHovering] = useState<boolean>(false)\r\n  const [guid, setGuid] = useState<string>(v4())\r\n  useLayoutEffect(() => {\r\n    const action = async () => {\r\n      if (internalHovering) {\r\n        setTimeout(() => {\r\n          setGuid(v4())\r\n        }, delay)\r\n      }\r\n    }\r\n    action()\r\n  }, [internalHovering])\r\n  useLayoutEffect(() => {\r\n    if (internalHovering) {\r\n      setIsHovering(true)\r\n    }\r\n  }, [guid])\r\n  const onMouseEnter = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(true)\r\n  }\r\n  const onMouseLeave = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(false)\r\n    setIsHovering(false)\r\n  }\r\n  return (\r\n    <div\r\n      style={{ display: flex ? 'flex' : 'block', flex: flex ? 1 : undefined }}\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n    >\r\n      {children({ isHovering })}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Hover } from '../components/Hover'\r\nimport { Theme } from '../theme'\r\n\r\nexport interface BoxContainerPropsT extends React.HTMLProps<HTMLDivElement> {\r\n  substyle?: React.CSSProperties\r\n  tag?: any\r\n  to?: string\r\n  dark?: boolean\r\n}\r\nexport const BoxContainer = (props: BoxContainerPropsT) => {\r\n  const {\r\n    style = {},\r\n    substyle = {},\r\n    children,\r\n    dark,\r\n    tag: Element = 'div',\r\n    ...rest\r\n  } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        border: '1px solid #000',\r\n        display: 'flex',\r\n        boxSizing: 'border-box',\r\n        ...style,\r\n      }}\r\n    >\r\n      <Element\r\n        style={{\r\n          border: substyle.border || `1px solid ${Theme.lightBgColor}`,\r\n          background: dark\r\n            ? Theme.darkBgColor\r\n            : `linear-gradient(0deg, ${Theme.mediumBgColor} 0%, rgba(42,42,44) 100%)`,\r\n          padding: 10,\r\n          color: '#ccc',\r\n          flex: 1,\r\n          boxShadow: 'inset 0px 0px 2px black',\r\n          ...substyle,\r\n        }}\r\n        {...rest}\r\n      >\r\n        {children}\r\n      </Element>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const SmallBox = (props: BoxContainerPropsT) => (\r\n  <BoxContainer\r\n    {...props}\r\n    style={{\r\n      height: 40,\r\n      width: 40,\r\n      ...props.style,\r\n    }}\r\n    substyle={{\r\n      display: 'flex',\r\n      padding: 0,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      background: Theme.darkBgColor,\r\n      ...props.substyle,\r\n    }}\r\n  >\r\n    {props.children}\r\n  </BoxContainer>\r\n)\r\n\r\nexport const BoxButton = (props: BoxContainerPropsT) => {\r\n  return (\r\n    <Hover delay={0}>\r\n      {({ isHovering }) => (\r\n        <BoxContainer\r\n          {...props}\r\n          tag='button'\r\n          style={{\r\n            margin: 0,\r\n            ...(props.style || {}),\r\n          }}\r\n          substyle={{\r\n            borderColor:\r\n              isHovering && !props.disabled ? '#999' : Theme.lightBgColor,\r\n            padding: '4px',\r\n            cursor: props.disabled ? 'default' : 'pointer',\r\n            background: props.disabled ? '#444' : Theme.darkBgColor,\r\n            boxShadow: props.disabled ? 'none' : undefined,\r\n            ...(props.substyle || {}),\r\n          }}\r\n        />\r\n      )}\r\n    </Hover>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tStats } from '../../game/Stats/type'\r\nimport {\r\n  DEFENSE_BONUS_KEYS,\r\n  STAT_KEY_LABELS,\r\n  DAMAGE_BONUS_KEYS,\r\n  STAT_BONUS_KEYS,\r\n  HEALTH_FOCUS_BONUS_KEYS,\r\n} from '../../game/Stats/constants'\r\nimport { tCharacterTag } from '../../game/Character/type'\r\n\r\nexport interface StatsPreviewPropsT {\r\n  stats: tStats\r\n}\r\n\r\nconst defense_key_colors: any = {\r\n  armor: 'lightblue',\r\n  resistance: 'plum',\r\n}\r\n\r\nexport const StatsPreview = (props: StatsPreviewPropsT) => {\r\n  const { stats } = props\r\n  return (\r\n    <FlexContainer $direction='column' style={{ fontSize: 14 }}>\r\n      {DEFENSE_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span\r\n              key={key}\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: defense_key_colors[key],\r\n              }}\r\n            >\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {DAMAGE_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span key={key} style={{ textTransform: 'capitalize' }}>\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {HEALTH_FOCUS_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span key={key} style={{ textTransform: 'capitalize' }}>\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {STAT_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] > 0 && (\r\n            <span\r\n              key={key}\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: 'lightgreen',\r\n              }}\r\n            >\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {STAT_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] < 0 && (\r\n            <span\r\n              key={key}\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: 'lightcoral',\r\n              }}\r\n            >\r\n              {stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {(Object.keys(stats.damageModifiers) as tCharacterTag[])\r\n        .filter((tag) => stats.damageModifiers[tag] > 0)\r\n        .map((tag) => (\r\n          <span key={tag}>\r\n            +{Math.floor(stats.damageModifiers[tag] * 100)}% damage against{' '}\r\n            {tag}\r\n          </span>\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import Shot from './svg/lorc/high-shot.svg'\r\nimport Headshot from './svg/delapouite/shield-impact.svg'\r\nimport PinDown from './svg/lorc/energy-arrow.svg'\r\n\r\nimport Arcane from './svg/lorc/fire-zone.svg'\r\nimport Blast from './svg/lorc/magic-swirl.svg'\r\nimport Nova from './svg/lorc/heavy-timer.svg'\r\nimport TimeJump from './svg/delapouite/extra-time.svg'\r\n\r\nimport Smash from './svg/lorc/flat-hammer.svg'\r\nimport Shockwave from './svg/lorc/hammer-drop.svg'\r\nimport Thrust from './svg/lorc/scythe.svg'\r\n\r\nimport Taunt from './svg/lorc/bordered-shield.svg'\r\n\r\nimport Ring from './svg/lorc/ringing-bell.svg'\r\nimport Reverberate from './svg/lorc/resonance.svg'\r\nimport Protect from './svg/lorc/shieldcomb.svg'\r\nimport Rush from './svg/lorc/sprint.svg'\r\n\r\nimport Fire from './svg/lorc/gunshot.svg'\r\nimport Snipe from './svg/delapouite/crosshair.svg'\r\nimport FanFire from './svg/delapouite/bullet-impacts.svg'\r\n\r\nimport Reset from './svg/delapouite/backward-time.svg'\r\nimport Slow from './svg/lorc/snail.svg'\r\nimport SpreadShot from './svg/lorc/double-shot.svg'\r\n\r\nimport Heal from './svg/sbed/health-normal.svg'\r\nimport Bless from './svg/lorc/embrassed-energy.svg'\r\nimport PoisonKnife from './svg/lorc/bone-knife.svg'\r\nimport Lunge from './svg/lorc/wave-strike.svg'\r\nimport Restore from './svg/lorc/life-support.svg'\r\nimport EvadeUp from './svg/lorc/dodging.svg'\r\nimport Chop from './svg/lorc/battered-axe.svg'\r\nimport Strike from './svg/lorc/plain-dagger.svg'\r\nimport Stab from './svg/lorc/knife-thrust.svg'\r\nimport Cleave from './svg/lorc/pointy-sword.svg'\r\nimport AxeSpin from './svg/lorc/axe-swing.svg'\r\nimport Slice from './svg/lorc/saber-slash.svg'\r\nimport ArmorUp from './svg/delapouite/vibrating-shield.svg'\r\nimport Punch from './svg/lorc/punch.svg'\r\n\r\nimport Stun from './svg/lorc/ubisoft-sun.svg'\r\n\r\nimport AttackUp from './svg/lorc/all-for-one.svg'\r\nimport CurePotion from './svg/lorc/drink-me.svg'\r\n\r\nexport const SKILL_ICONS: Record<string, string> = {\r\n  Punch: Punch,\r\n\r\n  Shot: Shot,\r\n  Headshot: Headshot,\r\n  'Pin Down': PinDown,\r\n  Flurry: SpreadShot,\r\n\r\n  Arcane: Arcane,\r\n  Nova: Nova,\r\n  Blast: Blast,\r\n  'Time Jump': TimeJump,\r\n\r\n  Ring: Ring,\r\n  Reverberate: Reverberate,\r\n\r\n  Smash: Smash,\r\n  Strike: Strike,\r\n  Swing: Chop,\r\n  Chop: Chop,\r\n  Thrust: Thrust,\r\n  Earthquake: Shockwave,\r\n  Ripple: Shockwave,\r\n  'Axe Spin': AxeSpin,\r\n  Cleave: Cleave,\r\n  Lunge: Lunge,\r\n  Stab: Stab,\r\n  Slice: Slice,\r\n  Swipe: Slice,\r\n\r\n  Fire: Fire,\r\n  Snipe: Snipe,\r\n  'Fan Fire': FanFire,\r\n\r\n  Stun: Stun,\r\n  Reset: Reset,\r\n  Taunt: Taunt,\r\n  Slow: Slow,\r\n  Protect: Protect,\r\n\r\n  Heal: Heal,\r\n  'Remove Curses': Bless,\r\n  'Poison Knife': PoisonKnife,\r\n  'Cure Potion': CurePotion,\r\n  Restore: Restore,\r\n  Rush: Rush,\r\n  Vanish: EvadeUp,\r\n  'Evade Up': EvadeUp,\r\n  'Armor Up': ArmorUp,\r\n  'Attack Up': AttackUp,\r\n  'Beast Drug': AttackUp,\r\n}\r\n","import Stunned from './svg/lorc/star-swirl.svg'\r\nimport Targeted from './svg/sbed/targeted.svg'\r\nimport Evasive from './svg/lorc/dodging.svg'\r\nimport SpeedDown from './svg/delapouite/sticky-boot.svg'\r\nimport Poisoned from './svg/lorc/biohazard.svg'\r\nimport Burning from './svg/carl-olsen/flame.svg'\r\nimport Bleeding from './svg/lorc/bleeding-wound.svg'\r\nimport Frozen from './svg/lorc/snowflake-2.svg'\r\nimport ArmorDown from './svg/lorc/broken-shield.svg'\r\nimport ResistanceDown from './svg/lorc/broken-shield.svg'\r\nimport Cursed from './svg/lorc/pentagram-rose.svg'\r\nimport Protected from './svg/lorc/shieldcomb.svg'\r\nimport AttackUp from './svg/lorc/all-for-one.svg'\r\nimport { tStatusType } from '../game/Status/type'\r\n\r\nexport const STATUS_ICONS: Partial<Record<tStatusType, string>> = {\r\n  evasive: Evasive,\r\n  stunned: Stunned,\r\n  targeted: Targeted,\r\n  protected: Protected,\r\n  poisoned: Poisoned,\r\n  burning: Burning,\r\n  bleeding: Bleeding,\r\n  frozen: Frozen,\r\n  'speed-down': SpeedDown,\r\n  'armor-down': ArmorDown,\r\n  'attack-up': AttackUp,\r\n  'resistance-down': ResistanceDown,\r\n  'cursed-agility': Cursed,\r\n  'cursed-charisma': Cursed,\r\n  'cursed-dexterity': Cursed,\r\n  'cursed-intelligence': Cursed,\r\n  'cursed-luck': Cursed,\r\n  'cursed-strength': Cursed,\r\n  'cursed-vigor': Cursed,\r\n}\r\n","import Vigor from './svg/delapouite/heart-beats.svg'\r\nimport Strength from './svg/delapouite/biceps.svg'\r\nimport Brain from './svg/lorc/brain.svg'\r\nimport Awareness from './svg/delapouite/eye-target.svg'\r\nimport Juggler from './svg/lorc/juggler.svg'\r\nimport Agility from './svg/lorc/sprint.svg'\r\nimport Clover from './svg/lorc/clover.svg'\r\n\r\nimport MagicArmor from './svg/lorc/robe.svg'\r\nimport ClothArmor from './svg/lorc/scale-mail.svg'\r\nimport Armor from './svg/delapouite/chest-armor.svg'\r\nimport Shield from './svg/delapouite/viking-shield.svg'\r\nimport MagicShield from './svg/lorc/lightning-shield.svg'\r\nimport Footwear from './svg/lorc/leather-boot.svg'\r\nimport Hat from './svg/delapouite/robin-hood-hat.svg'\r\nimport MagicHat from './svg/lorc/pointy-hat.svg'\r\nimport Helmet from './svg/lorc/visored-helm.svg'\r\nimport Weapon from './svg/lorc/broadsword.svg'\r\n\r\nimport Axe from './svg/lorc/battle-axe.svg'\r\nimport Blunt from './svg/lorc/gavel.svg'\r\nimport Bow from './svg/lorc/heavy-arrow.svg'\r\nimport Dagger from './svg/lorc/bowie-knife.svg'\r\nimport Handgun from './svg/skoll/revolver.svg'\r\nimport MagicStaff from './svg/lorc/wizard-staff.svg'\r\nimport Sword from './svg/lorc/broadsword.svg'\r\nimport Scythe from './svg/lorc/scythe.svg'\r\nimport Chime from './svg/lorc/ringing-bell.svg'\r\nimport Greatsword from './svg/lorc/croc-sword.svg'\r\nimport Fist from './svg/skoll/fist.svg'\r\n\r\nimport Godsbeard from './svg/delapouite/herbs-bundle.svg'\r\nimport Lotus from './svg/lorc/lotus-flower.svg'\r\nimport PoisonKnife from './svg/lorc/bone-knife.svg'\r\nimport BeastDrug from './svg/delapouite/medicine-pills.svg'\r\nimport CurePotion from './svg/lorc/drink-me.svg'\r\nimport { tBaseStats } from '../game/Stats/type'\r\nimport { GODSBEARD } from '../game/Consumable/objects/godsbeard'\r\nimport { tArmorResourceType, tArmorType } from '../game/Armor/type'\r\nimport { tWeaponType } from '../game/Weapon/type'\r\nimport { tCharacterClass } from '../game/Character/type'\r\n\r\nimport Executioner from './svg/delapouite/executioner-hood.svg'\r\nimport Hunter from './svg/lorc/cowled.svg'\r\nimport Bard from './svg/delapouite/female-vampire.svg'\r\nimport Scholar from './svg/delapouite/wizard-face.svg'\r\nimport Hobo from './svg/delapouite/perspective-dice-six.svg'\r\nimport Reaper from './svg/delapouite/kenku-head.svg'\r\nimport { CELESTIAL_LOTUS } from '../game/Consumable/objects/celestial_lotus'\r\nimport { POISON_KNIFE } from '../game/Consumable/objects/poison_knife'\r\nimport { BEAST_DRUG } from '../game/Consumable/objects/beast_drug'\r\nimport { CURE_POTION } from '../game/Consumable/objects/curing_potion'\r\n\r\nexport { SKILL_ICONS } from './skills'\r\nexport { STATUS_ICONS } from './status'\r\n\r\nexport const STAT_ICONS: Record<keyof tBaseStats, string> = {\r\n  vigor: Vigor,\r\n  strength: Strength,\r\n  intelligence: Brain,\r\n  dexterity: Awareness,\r\n  charisma: Juggler,\r\n  agility: Agility,\r\n  luck: Clover,\r\n  evasion: '',\r\n  criticalChance: '',\r\n}\r\n\r\nexport const ARMOR_TYPE_ICONS: Record<tArmorType, string> = {\r\n  'magic-armor': MagicArmor,\r\n  'light-armor': ClothArmor,\r\n  'heavy-armor': Armor,\r\n  shield: Shield,\r\n  ward: MagicShield,\r\n  footwear: Footwear,\r\n  hat: Hat,\r\n  'magic-hat': MagicHat,\r\n  helmet: Helmet,\r\n  charm: '',\r\n  ring: '',\r\n}\r\n\r\nexport const WEAPON_TYPE_ICONS: Record<tWeaponType, string> = {\r\n  enemy: '',\r\n  axe: Axe,\r\n  hammer: Blunt,\r\n  bow: Bow,\r\n  dagger: Dagger,\r\n  chime: Chime,\r\n  pistol: Handgun,\r\n  catalyst: MagicStaff,\r\n  scythe: Scythe,\r\n  sword: Sword,\r\n  greatsword: Greatsword,\r\n  fist: Fist,\r\n}\r\n\r\nexport const RESOURCE_ICONS: Record<tArmorResourceType | 'weapon', string> = {\r\n  weapon: Weapon,\r\n  offhand: Shield,\r\n  body: Armor,\r\n  head: Helmet,\r\n  feet: Footwear,\r\n}\r\n\r\nexport const CONSUMABLE_ITEM_ICONS: Record<string, string> = {\r\n  [GODSBEARD().cid]: Godsbeard,\r\n  [CELESTIAL_LOTUS().cid]: Lotus,\r\n  [POISON_KNIFE().cid]: PoisonKnife,\r\n  [BEAST_DRUG().cid]: BeastDrug,\r\n  [CURE_POTION().cid]: CurePotion,\r\n}\r\nexport const CONSUMABLE_ITEM_COLORS: Record<string, string> = {\r\n  [GODSBEARD().cid]: '#84a397',\r\n  [CELESTIAL_LOTUS().cid]: '#7a80a1',\r\n  [POISON_KNIFE().cid]: '#9c6c9e',\r\n  [BEAST_DRUG().cid]: '#b07171',\r\n  [CURE_POTION().cid]: '#8a8248',\r\n}\r\n\r\nexport const CHARACTER_CLASS_ICONS: Record<tCharacterClass, string> = {\r\n  enemy: '',\r\n  executioner: Executioner,\r\n  patrician: Bard,\r\n  ranger: Hunter,\r\n  reaper: Reaper,\r\n  student: Scholar,\r\n  drifter: Hobo,\r\n}\r\n","import React, { useState, useRef } from 'react'\r\nimport BaseTooltip, { TooltipProps } from 'react-tooltip-lite'\r\nimport { Hover } from '../Hover'\r\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\r\n\r\nexport interface ClickToolTipChildrenT {\r\n  onClick: (value?: boolean) => void\r\n  ref: React.MutableRefObject<HTMLElement | undefined>\r\n}\r\ninterface PropsT extends TooltipProps {\r\n  children: JSX.Element | ((props: ClickToolTipChildrenT) => JSX.Element)\r\n  content: JSX.Element | ((props: ClickToolTipChildrenT) => JSX.Element)\r\n  flex?: boolean\r\n}\r\nexport const Tooltip = (props: PropsT) => {\r\n  const { ...rest } = props\r\n  return (\r\n    <BaseTooltip\r\n      direction='up'\r\n      tagName='div'\r\n      padding='0'\r\n      arrow={false}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nexport const HoverToolTip = (props: PropsT) => {\r\n  return (\r\n    <Hover flex={props.flex}>\r\n      {({ isHovering }) => <Tooltip {...props} isOpen={isHovering} />}\r\n    </Hover>\r\n  )\r\n}\r\n\r\nexport const ClickToolTip = (props: PropsT) => {\r\n  const { children, content, ...rest } = props\r\n  const [isOpen, setIsOpen] = useState<boolean>(false)\r\n  const ref = useRef<HTMLElement>()\r\n  useOnClickOutside(ref, () => {\r\n    setIsOpen(false)\r\n  })\r\n  if (typeof children !== 'function') return null\r\n  if (typeof content !== 'function') return null\r\n  const p = {\r\n    onClick: (value?: boolean) => {\r\n      setIsOpen((v) => (value !== undefined ? value : !v))\r\n    },\r\n    ref,\r\n  }\r\n  return (\r\n    <Tooltip content={content(p)} {...rest} isOpen={isOpen}>\r\n      {children(p)}\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport const useOnClickOutside = (\r\n  ref: React.MutableRefObject<HTMLElement | undefined>,\r\n  handler: Function,\r\n) => {\r\n  useEffect(() => {\r\n    const listener = (event: any) => {\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return\r\n      }\r\n\r\n      setTimeout(() => handler(event), 150)\r\n    }\r\n\r\n    document.addEventListener('mousedown', listener)\r\n    document.addEventListener('touchstart', listener)\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', listener)\r\n      document.removeEventListener('touchstart', listener)\r\n    }\r\n  }, [ref, handler])\r\n}\r\n","import React from 'react'\r\nimport { styled, withWrapper } from 'styletron-react'\r\nimport { HoverToolTip } from '../components/Tooltip'\r\nimport { Theme } from '../theme'\r\n\r\nconst Div = styled('div', {\r\n  transform: 'rotateY(0deg) rotate(-45deg)',\r\n})\r\nexport const Badge = withWrapper(Div, (Element) => (props: any) => {\r\n  const { onClick, $style, ...rest } = props\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      style={{\r\n        position: props.$absolute === false ? 'relative' : 'absolute',\r\n        background: Theme.darkBgColorSolid,\r\n        padding: '4px',\r\n        fontFamily: 'New Rocker',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        boxShadow: '1px 1px 3px black',\r\n        height: props.$size || '20px',\r\n        width: props.$size || '20px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        lineHeight: '20px',\r\n        borderRadius: '30%',\r\n        transform: 'rotateY(0deg) rotate(45deg)',\r\n        textShadow: '1px 1px 3px black',\r\n        color: props.$color || 'white',\r\n        cursor: 'pointer',\r\n        top: props.$top,\r\n        userSelect: 'none',\r\n        bottom: props.$bottom,\r\n        right: props.$right,\r\n        left: props.$left,\r\n        transition: 'all 0.2s',\r\n        zIndex: 4,\r\n        ...($style || {}),\r\n      }}\r\n    >\r\n      <Element {...rest} />\r\n    </div>\r\n  )\r\n})\r\n\r\nexport interface HoverBadgePropsT {\r\n  children: JSX.Element\r\n  content: JSX.Element\r\n  badgeProps: any\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n}\r\nexport const HoverBadge = (props: HoverBadgePropsT) => {\r\n  const { children, content, badgeProps, direction } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        top: badgeProps.$top,\r\n        bottom: badgeProps.$bottom,\r\n        left: badgeProps.$left,\r\n        right: badgeProps.$right,\r\n      }}\r\n    >\r\n      <HoverToolTip\r\n        distance={2}\r\n        direction={direction || 'right'}\r\n        // styles={{ position: 'absolute' }}\r\n        content={content || <div />}\r\n      >\r\n        <Badge\r\n          $absolute={false}\r\n          $size={badgeProps.$size}\r\n          $color={badgeProps.$color}\r\n          $style={badgeProps.style}\r\n        >\r\n          {children}\r\n        </Badge>\r\n      </HoverToolTip>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Badge } from '../../elements/badge'\r\nimport { CheckKVT } from '../RoundResultRenderer'\r\nimport X from '../../icons/svg/lorc/split-cross.svg'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tBaseStats } from '../../game/Stats/type'\r\nimport { tStatusType } from '../../game/Status/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface SkillChecksPropsT {\r\n  stat: keyof tBaseStats\r\n  skill?: tSkill\r\n  rolls?: number\r\n  results?: boolean[]\r\n}\r\nexport const SkillChecks = (props: SkillChecksPropsT) => {\r\n  const { stat, skill, rolls, results = [] } = props\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        justifyContent: 'center',\r\n        minHeight: 46,\r\n        padding: '0px 0 24px 0',\r\n      }}\r\n    >\r\n      {Array(skill?.rolls || rolls || 0)\r\n        .fill(null)\r\n        .map((_, i) => (\r\n          <SkillCheck\r\n            key={i}\r\n            skill={skill}\r\n            perfect={\r\n              results.every((r) => r === true) && results.length === rolls\r\n            }\r\n            check={{ label: stat, result: results[i] }}\r\n          />\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface SkillCheckT {\r\n  check: CheckKVT\r\n  size?: number\r\n  padding?: number\r\n  perfect?: boolean\r\n  crit?: boolean\r\n  skill?: tSkill\r\n}\r\nexport const SkillCheck = (props: SkillCheckT) => {\r\n  const { check, size = 36, padding = 12, perfect = false, skill, crit } = props\r\n  const colors = getPerfectStatusColors(skill?.perfectStatus || [], crit)\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: `0px ${padding}px`,\r\n        opacity: check.result === undefined ? 0.75 : 1,\r\n      }}\r\n    >\r\n      <Badge\r\n        $absolute={false}\r\n        $size={size}\r\n        $style={{\r\n          borderColor: perfect ? colors.border : undefined,\r\n          background: perfect ? colors.background : Theme.darkBgColorSolid,\r\n        }}\r\n      >\r\n        <Icon\r\n          src={STAT_ICONS[check.label as keyof tBaseStats]}\r\n          fill={perfect ? colors.fill : getColor(check.result)}\r\n          size={size - 4}\r\n        />\r\n        {check.result === false && (\r\n          <Icon\r\n            src={X}\r\n            shadow\r\n            fill={'lightcoral'}\r\n            size={size - 4}\r\n            style={{ position: 'absolute', top: 0 }}\r\n          />\r\n        )}\r\n      </Badge>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst getColor = (result: boolean | undefined) => {\r\n  if (result === true) return 'white'\r\n  if (result === false) return 'rgba(255,255,255,0.3)'\r\n  return 'rgba(255,255,255,0.3)'\r\n}\r\ninterface SCColorsT {\r\n  border: string\r\n  background: string\r\n  fill: string\r\n}\r\nexport const getPerfectStatusColors = (\r\n  status: tStatusType[],\r\n  crit: boolean = false,\r\n): SCColorsT => {\r\n  if (crit) {\r\n    return {\r\n      border: '#white',\r\n      background: '#00134a',\r\n      fill: '#d9e3ff',\r\n    }\r\n  }\r\n  if (status.includes('burning')) {\r\n    return {\r\n      border: '#ff9100',\r\n      background: '#5c2c00',\r\n      fill: '#d48a46',\r\n    }\r\n  }\r\n  if (status.includes('poisoned')) {\r\n    return {\r\n      border: '#00870f',\r\n      background: '#001202',\r\n      fill: '#888f88',\r\n    }\r\n  }\r\n  if (status.includes('bleeding')) {\r\n    return {\r\n      border: '#ff0000',\r\n      background: '#120000',\r\n      fill: '#d19999',\r\n    }\r\n  }\r\n  if (status.includes('cursed-vigor')) {\r\n    return {\r\n      border: '#6400a3',\r\n      background: '#10001a',\r\n      fill: '#b093c2',\r\n    }\r\n  }\r\n  if (status.includes('frozen')) {\r\n    return {\r\n      border: '#009ac4',\r\n      background: '#00161c',\r\n      fill: '#a5c8d1',\r\n    }\r\n  }\r\n\r\n  return {\r\n    border: '#ffd400',\r\n    background: '#261d00',\r\n    fill: '#ede5be',\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Color from 'color'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { StatsPreview } from '../StatsPreview'\r\nimport { Icon } from '../Icon'\r\nimport { ARMOR_TYPE_ICONS } from '../../icons/maps'\r\nimport { Button } from '../../elements/button'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { STAT_KEY_LABELS } from '../../game/Stats/constants'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ArmorPreviewPropsT {\r\n  armor: tArmor\r\n  showEquipButton?: boolean\r\n  showBuyButton?: boolean\r\n  cost?: number\r\n  onEquipClick?: () => void\r\n  onBuyClick?: () => void\r\n}\r\nexport const ArmorPreview = (props: ArmorPreviewPropsT) => {\r\n  const {\r\n    armor,\r\n    showEquipButton,\r\n    showBuyButton,\r\n    cost,\r\n    onEquipClick,\r\n    onBuyClick,\r\n  } = props\r\n  const rarityColor = ITEM_RARITY_COLORS[armor.rarity]\r\n  const from = Color(rarityColor).darken(0.5).rgb().toString()\r\n  const to = Color(rarityColor).darken(0.7).rgb().toString()\r\n  const gradient = `linear-gradient(180deg, ${from} 0%, ${to} 100%)`\r\n  const skill = armor.skills[0]\r\n  return (\r\n    <BoxContainer\r\n      style={{ minWidth: 240 }}\r\n      substyle={{\r\n        background: gradient,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      }}\r\n    >\r\n      <FlexContainer $direction='column' $full>\r\n        <FullContainer />\r\n        {skill && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginBottom: 10 }}>\r\n            {Array(skill.rolls)\r\n              .fill(null)\r\n              .map((_, i) => (\r\n                <SkillCheck\r\n                  check={{\r\n                    label: skill.weaponStatOverride || 'strength',\r\n                    result: true,\r\n                  }}\r\n                  size={18}\r\n                  padding={4}\r\n                  skill={skill}\r\n                />\r\n              ))}\r\n          </FlexContainer>\r\n        )}\r\n        <FlexContainer $full style={{ marginBottom: 8 }}>\r\n          <Icon\r\n            src={ARMOR_TYPE_ICONS[armor.type]}\r\n            size={32}\r\n            style={{ marginRight: 10 }}\r\n            shadow\r\n          />\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              textShadow: '1px 1px 2px rgba(0,0,0,0.8)',\r\n            }}\r\n          >\r\n            <span style={{ fontWeight: 600 }}>{armor.name}</span>\r\n            <span style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n              {armor.rarity}\r\n            </span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n          {showEquipButton && (\r\n            <div style={{ marginLeft: 10 }}>\r\n              <Button onClick={onEquipClick} style={{ padding: 4 }}>\r\n                Equip\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </FlexContainer>\r\n        <BoxContainer\r\n          substyle={{\r\n            background: 'rgba(0,0,0,0.7)',\r\n            minHeight: 120,\r\n            textAlign: 'left',\r\n          }}\r\n        >\r\n          <FlexContainer $direction='column'>\r\n            <FlexContainer\r\n              style={{ justifyContent: 'space-between', marginBottom: 8 }}\r\n            >\r\n              <FlexContainer\r\n                $full\r\n                style={{\r\n                  textTransform: 'capitalize',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    color: Theme.physicalColor,\r\n                    fontSize: 24,\r\n                    fontWeight: 'bolder',\r\n                    marginRight: 8,\r\n                  }}\r\n                >\r\n                  {armor.stats.armor}\r\n                </div>\r\n                <div>{STAT_KEY_LABELS.armor}</div>\r\n              </FlexContainer>\r\n              <FlexContainer\r\n                $full\r\n                style={{\r\n                  textTransform: 'capitalize',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    color: 'plum',\r\n                    fontSize: 24,\r\n                    fontWeight: 'bolder',\r\n                    marginRight: 8,\r\n                  }}\r\n                >\r\n                  <span>{armor.stats.resistance}</span>\r\n                </span>\r\n                {STAT_KEY_LABELS.resistance}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n            {armor.skills.length > 0 && (\r\n              <span style={{ color: 'plum', marginBottom: 8 }}>\r\n                {armor.skills.map(\r\n                  (skill, i) => `${i > 0 ? ', ' : ''}${skill.name}`,\r\n                )}\r\n              </span>\r\n            )}\r\n            <StatsPreview stats={{ ...armor.stats, armor: 0, resistance: 0 }} />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        {showBuyButton && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginTop: 10 }}>\r\n            <Button onClick={onBuyClick} style={{ padding: '4px 16px' }}>\r\n              Buy ({cost || 0})\r\n            </Button>\r\n          </FlexContainer>\r\n        )}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\nimport { Theme } from '../theme'\r\n\r\nexport const FakeLink = styled('span', (props: any) => {\r\n  return {\r\n    whiteSpace: 'nowrap',\r\n    ':hover': {\r\n      textDecoration: 'underline',\r\n      cursor: 'pointer',\r\n    },\r\n  }\r\n})\r\n\r\nexport const HeadingSm = styled('span', (props: any) => {\r\n  return {\r\n    fontFamily: Theme.titleFont,\r\n    color: 'white',\r\n    fontSize: '20px',\r\n    display: 'inline-block',\r\n    marginBottom: '16px',\r\n  }\r\n})\r\n\r\nexport const Text = styled('span', (props: any) => {\r\n  return {\r\n    color: 'rgba(255,255,255,0.75)',\r\n    lineHeight: '1.4',\r\n    marginBottom: 16,\r\n  }\r\n})\r\n","import { tStatusType } from '../Status/type'\r\n\r\nexport type tPerfectKey = tStatusType | 'splash' | 'pierce' | 'heal'\r\nexport const PERFECT_DISPLAY_INFO: Partial<Record<tPerfectKey, string>> = {\r\n  splash: 'Splash Damage',\r\n  pierce: 'Ignore Resistances',\r\n  bleeding: 'Bleed',\r\n  burning: 'Burn',\r\n  frozen: 'Freeze',\r\n  poisoned: 'Poison',\r\n  targeted: 'Taunt Enemies',\r\n  stunned: 'Stun',\r\n  evasive: 'Become Evasive',\r\n  heal: 'Heal',\r\n  protected: 'Protect',\r\n  'attack-up': 'Attack Up',\r\n  'speed-down': 'Speed Down',\r\n  rushed: 'Rush Character',\r\n  reset: 'Reset Character',\r\n  cure: 'Cure Character',\r\n}\r\n","import { tProcessedCharacter } from '../Character/type'\r\nimport {\r\n  tSkill,\r\n  tSourceSkillResult,\r\n  tTargetSkillResult,\r\n  tSkillResult,\r\n  tSkillTarget,\r\n  tSkillTargetType,\r\n} from './type'\r\nimport { resolveCheck } from '../Roll/util'\r\nimport {\r\n  getRawDamage,\r\n  getReflectedDamage,\r\n  isCharacter,\r\n  hasStatus,\r\n  getDamageResistance,\r\n} from '../Character/util'\r\nimport { tProcessedParty } from '../Party/type'\r\nimport { isParty } from '../Party/util'\r\nimport { tDamage } from '../Damage/type'\r\nimport { tPerfectKey, PERFECT_DISPLAY_INFO } from './constants'\r\nimport { noneg } from '../../util'\r\n\r\nexport const getSourceSkillResult = (\r\n  source: tProcessedCharacter,\r\n  skill: tSkill,\r\n): tSourceSkillResult => {\r\n  const rollResults = Array(skill.rolls)\r\n    .fill(null)\r\n    .map((_, i) =>\r\n      resolveCheck(\r\n        source,\r\n        skill.weaponStatOverride || source.weapon.stat,\r\n        skill.offset,\r\n      ),\r\n    )\r\n  const passedCount = rollResults.filter((r) => r).length\r\n  const perfect = passedCount === skill.rolls\r\n  const criticalHitSuccess = resolveCheck(source, 'criticalChance')\r\n  const rollDamageModifier = passedCount / skill.rolls\r\n  const rawDamage = {\r\n    ...source.weapon.damage,\r\n    value: Math.round(\r\n      (source.weapon.damage.value + source.stats.attackDamageOffset) *\r\n        source.stats.attackDamageModifier *\r\n        skill.damageModifier *\r\n        rollDamageModifier *\r\n        (perfect && criticalHitSuccess ? 1.2 : 1),\r\n    ),\r\n    range: skill.weaponRangeOverride || source.weapon.damage.range,\r\n  }\r\n  return {\r\n    source,\r\n    skill,\r\n    rollResults,\r\n    passedCount,\r\n    perfect,\r\n    accuracySuccess: skill.damage ? passedCount > 0 : perfect,\r\n    criticalHitSuccess: perfect && criticalHitSuccess,\r\n    weaponDidBreak:\r\n      rollResults.every((r) => r === false) && source.weapon.breakable,\r\n    rawDamage,\r\n    splashDamage: {\r\n      ...source.weapon.damage,\r\n      value:\r\n        perfect && skill.perfectSplash\r\n          ? Math.round(rawDamage.value * skill.splashDamageModifier)\r\n          : 0,\r\n      range: skill.weaponRangeOverride || source.weapon.damage.range,\r\n    },\r\n    ignoreResistance: perfect && skill.perfectPierce,\r\n    addedStatus: perfect ? skill.perfectStatus : [],\r\n  }\r\n}\r\n\r\nexport const getTargetSkillResult = (\r\n  target: tProcessedCharacter,\r\n  sourceResult: tSourceSkillResult,\r\n): tTargetSkillResult => {\r\n  const dodgeResult = resolveCheck(target, 'evasion')\r\n  const dodgeSuccess = hasStatus(target, 'evasive')\r\n    ? !sourceResult.perfect\r\n    : !sourceResult.perfect && dodgeResult\r\n  const damage = getRawDamage(\r\n    sourceResult.source,\r\n    target,\r\n    sourceResult.rawDamage,\r\n  )\r\n  return {\r\n    ...sourceResult,\r\n    target,\r\n    dodgeSuccess,\r\n    totalDamage: {\r\n      ...damage,\r\n      value: dodgeSuccess ? 0 : damage.value,\r\n    },\r\n    reflectedDamage: getReflectedDamage(target, damage),\r\n    loggedDamgge: {\r\n      ...damage,\r\n      value: dodgeSuccess\r\n        ? 0\r\n        : noneg(damage.value - getDamageResistance(target, damage)),\r\n    },\r\n  }\r\n}\r\n\r\nexport const getSkillResult = (\r\n  source: tProcessedCharacter,\r\n  targets: tProcessedCharacter[],\r\n  skill: tSkill,\r\n): tSkillResult => {\r\n  const sourceResult = getSourceSkillResult(source, skill)\r\n  return {\r\n    sourceResult,\r\n    targetResults: targets.map((target) =>\r\n      getTargetSkillResult(target, sourceResult),\r\n    ),\r\n  }\r\n}\r\n\r\nexport const resolveSkillTarget = (\r\n  target: tSkillTarget,\r\n): tProcessedCharacter[] => {\r\n  switch (target.type) {\r\n    case 'single':\r\n      return target.character ? [target.character] : []\r\n    case 'ally':\r\n      return target.character ? [target.character] : []\r\n    case 'self':\r\n      return target.character ? [target.character] : []\r\n    case 'party':\r\n      return target.party?.characters || []\r\n    case 'group':\r\n      return target.party?.characters || []\r\n    default:\r\n      return []\r\n  }\r\n}\r\n\r\nexport const makeSkillTarget = (\r\n  type: tSkillTargetType,\r\n  target: tProcessedCharacter | tProcessedParty,\r\n): tSkillTarget => {\r\n  return {\r\n    type,\r\n    character: isCharacter(target)\r\n      ? (target as tProcessedCharacter)\r\n      : undefined,\r\n    party: isParty(target) ? (target as tProcessedParty) : undefined,\r\n  }\r\n}\r\n\r\nexport const getSkillTargetOptions = (\r\n  source: tProcessedCharacter,\r\n  sourceParty: tProcessedParty,\r\n  targetParty: tProcessedParty,\r\n  skill: tSkill,\r\n): tProcessedCharacter[] | tProcessedParty[] => {\r\n  switch (skill.targetType) {\r\n    case 'single':\r\n      return targetParty.characters.filter((c) => c.health > 0)\r\n    case 'ally':\r\n      return sourceParty.characters.filter((c) => c.health > 0)\r\n    case 'group':\r\n      return [targetParty]\r\n    case 'party':\r\n      return [sourceParty]\r\n    case 'self':\r\n      return [source]\r\n    default:\r\n      return []\r\n  }\r\n}\r\n\r\nexport const getSkillDamage = (\r\n  skill: tSkill,\r\n  source: tProcessedCharacter,\r\n): tDamage => {\r\n  return {\r\n    ...source.weapon.damage,\r\n    value:\r\n      (source.weapon.damage.value + source.stats.attackDamageOffset) *\r\n      (skill.damageModifier + source.stats.attackDamageModifier / 100),\r\n  }\r\n}\r\n\r\nexport const getPerfectKeys = (skill: tSkill): tPerfectKey[] => {\r\n  let base: tPerfectKey[] = [...skill.perfectStatus]\r\n  if (skill.perfectSplash) base = [...base, 'splash']\r\n  if (skill.perfectPierce) base = [...base, 'pierce']\r\n  if (skill.healing) base = [...base, 'heal']\r\n  return base\r\n}\r\n\r\nexport const getPerfectText = (\r\n  skill: tSkill,\r\n  character: tProcessedCharacter,\r\n): string => {\r\n  const perfectKeys = getPerfectKeys(skill)\r\n  const rawDamage = getSkillDamage(skill, character)\r\n\r\n  return perfectKeys.reduce((res, key, i) => {\r\n    let pre = `${res}${i > 0 ? ',' : ''}`\r\n    const text = PERFECT_DISPLAY_INFO[key]\r\n    switch (key) {\r\n      case 'splash':\r\n        return `${pre} ${Math.floor(skill.splashDamageModifier * 100)}% ${text}`\r\n      case 'heal':\r\n        return `${pre} ${text} ${character.stats.consumableHealthGainOffset} HP`\r\n      default:\r\n        return `${pre} ${text}`\r\n    }\r\n  }, '')\r\n}\r\n","import React from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { getSkillDamage, getPerfectText } from '../../game/Skill/util'\r\nimport { getChecksProbability } from '../../game/Roll/util'\r\nimport { Theme } from '../../theme'\r\nimport { Icon } from '../Icon'\r\nimport { SKILL_ICONS } from '../../icons/maps'\r\n\r\nexport interface SkillPreviewPropsT {\r\n  skill: tSkill\r\n  source: tProcessedCharacter\r\n  targets?: tProcessedCharacter[]\r\n}\r\nexport const SkillPreview = (props: SkillPreviewPropsT) => {\r\n  const { skill, source, targets } = props\r\n  const perfectChance = getChecksProbability(\r\n    source,\r\n    Array(skill.rolls)\r\n      .fill(null)\r\n      .map((_, i) => ({ key: source.weapon.stat, offset: skill.offset })),\r\n  )\r\n  const stat = skill.weaponStatOverride || source.weapon.stat\r\n  const damage = getSkillDamage(skill, source)\r\n  const perfectKeys = getPerfectText(skill, source)\r\n  return (\r\n    <BoxContainer\r\n      style={{ marginTop: 30, position: 'relative', minWidth: 300 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <FlexContainer $direction='column' style={{ alignItems: 'center' }}>\r\n        <FlexContainer style={{ marginTop: -27 }}>\r\n          <FullContainer />\r\n          <BoxContainer\r\n            substyle={{\r\n              padding: '4px 12px',\r\n              fontSize: 18,\r\n              background: Theme.otherGrey,\r\n              fontFamily: Theme.titleFont,\r\n              textShadow: '1px 1px 3px black',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Icon\r\n              src={SKILL_ICONS[skill.name]}\r\n              size={16}\r\n              style={{ marginRight: 8 }}\r\n            />\r\n            {skill.name}\r\n          </BoxContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n        <span\r\n          style={{\r\n            color: 'rgba(255,255,255,0.4)',\r\n            marginTop: 8,\r\n            marginBottom: 20,\r\n          }}\r\n        >\r\n          Perfect ({Math.floor(perfectChance * 100)}%){' '}\r\n          {perfectKeys.length > 0 && '='} {perfectKeys}\r\n        </span>\r\n        <FlexContainer $full style={{ width: '100%', marginBottom: 8 }}>\r\n          {damage.value > 0 && skill.damage && (\r\n            <FlexContainer\r\n              $full\r\n              $direction='column'\r\n              style={{ alignItems: 'center', marginRight: 10 }}\r\n            >\r\n              <span\r\n                style={{\r\n                  color: damage.type === 'physical' ? 'lightblue' : 'plum',\r\n                  fontFamily: 'New Rocker',\r\n                  fontSize: 32,\r\n                }}\r\n              >\r\n                {`${Math.floor(damage.value)}`}\r\n              </span>\r\n              <span style={{ color: 'rgba(255,255,255,0.2)' }}>Max DMG</span>\r\n            </FlexContainer>\r\n          )}\r\n          {skill.rolls > 0 && (\r\n            <FlexContainer\r\n              $full\r\n              $direction='column'\r\n              style={{ alignItems: 'center' }}\r\n            >\r\n              <span\r\n                style={{\r\n                  fontFamily: 'New Rocker',\r\n                  fontSize: 32,\r\n                }}\r\n              >\r\n                {source.stats[stat] + skill.offset}%\r\n              </span>\r\n              <span style={{ color: 'rgba(255,255,255,0.2)' }}>\r\n                Per Check ACC\r\n              </span>\r\n            </FlexContainer>\r\n          )}\r\n        </FlexContainer>\r\n        {skill.consumableId && (\r\n          <div\r\n            style={{\r\n              color: Theme.healthRedColor,\r\n              fontSize: 12,\r\n              fontWeight: 'bolder',\r\n              marginBottom: 8,\r\n            }}\r\n          >\r\n            consumable\r\n          </div>\r\n        )}\r\n        <FlexContainer style={{ marginBottom: -18 }}>\r\n          <FullContainer />\r\n          <BoxContainer\r\n            substyle={{\r\n              padding: '2px 8px',\r\n              background: Theme.otherGrey,\r\n              textShadow: '1px 1px 3px black',\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            {skill.targetType} target\r\n          </BoxContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Color from 'color'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { StatsPreview } from '../StatsPreview'\r\nimport { Button } from '../../elements/button'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { Icon } from '../Icon'\r\nimport { WEAPON_TYPE_ICONS } from '../../icons/maps'\r\nimport Hands from '../../icons/svg/lorc/hand.svg'\r\nimport Ranged from '../../icons/svg/delapouite/arrow-wings.svg'\r\nimport Melee from '../../icons/svg/lorc/battered-axe.svg'\r\nimport { FakeLink } from '../../elements/typography'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { SkillPreview } from '../SkillPreview'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\n\r\nexport const getDamageColor = (weapon: tWeapon) => {\r\n  if (weapon.damage.type === 'physical') return 'lightblue'\r\n  if (weapon.damage.type === 'magic') return 'plum'\r\n  return 'white'\r\n}\r\n\r\nexport interface WeaponPreviewPropsT {\r\n  character?: tProcessedCharacter\r\n  weapon: tWeapon\r\n  showEquipButton?: boolean\r\n  showBuyButton?: boolean\r\n  cost?: number\r\n  onEquipClick?: () => void\r\n  onBuyClick?: () => void\r\n}\r\nexport const WeaponPreview = (props: WeaponPreviewPropsT) => {\r\n  const {\r\n    character,\r\n    weapon,\r\n    showEquipButton,\r\n    showBuyButton,\r\n    cost = 0,\r\n    onEquipClick,\r\n    onBuyClick,\r\n  } = props\r\n  const basicAttack = weapon.skills[0]\r\n  const rarityColor = ITEM_RARITY_COLORS[weapon.rarity]\r\n  const from = Color(rarityColor).darken(0.5).rgb().toString()\r\n  const to = Color(rarityColor).darken(0.7).rgb().toString()\r\n  const gradient = `linear-gradient(180deg, ${from} 0%, ${to} 100%)`\r\n  return (\r\n    <BoxContainer style={{ width: 240 }} substyle={{ background: gradient }}>\r\n      <FlexContainer $direction='column'>\r\n        {basicAttack && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginBottom: 10 }}>\r\n            <FlexContainer $full style={{ alignItems: 'center' }}>\r\n              <Icon\r\n                src={weapon.damage.range === 'melee' ? Melee : Ranged}\r\n                size={16}\r\n              />\r\n            </FlexContainer>\r\n            {Array(basicAttack.rolls)\r\n              .fill(null)\r\n              .map((_, i) => (\r\n                <SkillCheck\r\n                  key={i}\r\n                  check={{ label: weapon.stat, result: true }}\r\n                  size={18}\r\n                  padding={4}\r\n                  skill={weapon.skills[0]}\r\n                />\r\n              ))}\r\n            <FlexContainer\r\n              $full\r\n              style={{\r\n                fontSize: 18,\r\n                justifyContent: 'flex-end',\r\n                fontWeight: 'bolder',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Icon\r\n                size={16}\r\n                src={Hands}\r\n                fill='rgba(255,255,255,0.8)'\r\n                style={{ marginRight: 4 }}\r\n              />\r\n              {weapon.twoHand && '2'}\r\n              {!weapon.twoHand && '1'}\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        )}\r\n        <FlexContainer style={{ alignItems: 'center' }}>\r\n          <Icon\r\n            src={WEAPON_TYPE_ICONS[weapon.type]}\r\n            size={32}\r\n            style={{ marginRight: 10 }}\r\n            shadow\r\n          />\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              margin: '8px 0',\r\n              textShadow: '1px 1px 2px rgba(0,0,0,0.8)',\r\n              textAlign: 'left',\r\n            }}\r\n          >\r\n            <span style={{ fontWeight: 600 }}>{weapon.name}</span>\r\n            <span style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n              {weapon.rarity} {weapon.type}\r\n            </span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n\r\n          {showEquipButton && (\r\n            <div style={{ marginLeft: 10 }}>\r\n              <Button onClick={onEquipClick} style={{ padding: 4 }}>\r\n                Equip\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </FlexContainer>\r\n        <BoxContainer\r\n          substyle={{\r\n            background: 'rgba(0,0,0,0.7)',\r\n            minHeight: 120,\r\n            textAlign: 'left',\r\n          }}\r\n        >\r\n          <FlexContainer $direction='column'>\r\n            <FlexContainer style={{ lineHeight: '24px', marginBottom: 4 }}>\r\n              <span\r\n                style={{\r\n                  color: getDamageColor(weapon),\r\n                  fontWeight: 'bolder',\r\n                  marginRight: 8,\r\n                  fontSize: 24,\r\n                }}\r\n              >\r\n                {weapon.damage.value}\r\n              </span>\r\n              <span style={{ textTransform: 'capitalize' }}>\r\n                {weapon.damage.type} Damage\r\n              </span>\r\n            </FlexContainer>\r\n            <span\r\n              style={{\r\n                color: 'plum',\r\n                marginBottom: 8,\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n              }}\r\n            >\r\n              {weapon.skills.map((skill, i) => (\r\n                <React.Fragment key={skill.id}>\r\n                  {i > 0 ? ', ' : ''}\r\n                  <HoverToolTip\r\n                    direction='down'\r\n                    content={\r\n                      character ? (\r\n                        <SkillPreview skill={skill} source={character} />\r\n                      ) : (\r\n                        <div />\r\n                      )\r\n                    }\r\n                  >\r\n                    <FakeLink style={{ paddingLeft: i === 0 ? 0 : 4 }}>\r\n                      {skill.name}\r\n                    </FakeLink>\r\n                  </HoverToolTip>\r\n                </React.Fragment>\r\n              ))}\r\n            </span>\r\n            {weapon.breakable && (\r\n              <div style={{ color: 'gold', fontSize: 12 }}>Breakable</div>\r\n            )}\r\n            <StatsPreview stats={weapon.stats} />\r\n            {weapon.immunities.map((status) => (\r\n              <span style={{ textTransform: 'capitalize', fontSize: 14 }}>\r\n                {status} immunity\r\n              </span>\r\n            ))}\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        {showBuyButton && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginTop: 10 }}>\r\n            <Button onClick={onBuyClick} style={{ padding: '4px 16px' }}>\r\n              Buy ({cost || 0})\r\n            </Button>\r\n          </FlexContainer>\r\n        )}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Color from 'color'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { CONSUMABLE_ITEM_ICONS } from '../../icons/maps'\r\nimport { Button } from '../../elements/button'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\n\r\nexport interface ConsumablePreviewPropsT {\r\n  item: tConsumable\r\n  showEquipButton?: boolean\r\n  showBuyButton?: boolean\r\n  cost?: number\r\n  onEquipClick?: () => void\r\n  onBuyClick?: () => void\r\n}\r\nexport const ConsumablePreview = (props: ConsumablePreviewPropsT) => {\r\n  const { item, showBuyButton, cost, onBuyClick } = props\r\n  const rarityColor = ITEM_RARITY_COLORS[item.rarity]\r\n  const from = Color(rarityColor).darken(0.5).rgb().toString()\r\n  const to = Color(rarityColor).darken(0.7).rgb().toString()\r\n  const gradient = `linear-gradient(180deg, ${from} 0%, ${to} 100%)`\r\n  const skill = item.skill\r\n  return (\r\n    <BoxContainer style={{ minWidth: 240 }} substyle={{ background: gradient }}>\r\n      <FlexContainer $direction='column'>\r\n        {skill && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginBottom: 10 }}>\r\n            {Array(skill.rolls)\r\n              .fill(null)\r\n              .map((_, i) => (\r\n                <SkillCheck\r\n                  check={{\r\n                    label: skill.weaponStatOverride || 'strength',\r\n                    result: true,\r\n                  }}\r\n                  size={18}\r\n                  padding={4}\r\n                  skill={skill}\r\n                />\r\n              ))}\r\n          </FlexContainer>\r\n        )}\r\n        <FlexContainer style={{ marginBottom: 8 }}>\r\n          <Icon\r\n            src={CONSUMABLE_ITEM_ICONS[item.id]}\r\n            size={32}\r\n            style={{ marginRight: 10 }}\r\n            shadow\r\n          />\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              textShadow: '1px 1px 2px rgba(0,0,0,0.8)',\r\n            }}\r\n          >\r\n            <span style={{ fontWeight: 600 }}>{item.name}</span>\r\n            <span style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n              {item.rarity}\r\n            </span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n        <BoxContainer\r\n          substyle={{\r\n            background: 'rgba(0,0,0,0.7)',\r\n            minHeight: 120,\r\n            textAlign: 'left',\r\n          }}\r\n        >\r\n          <FlexContainer $direction='column'>\r\n            <span style={{ color: 'plum', marginBottom: 8 }}>{skill.name}</span>\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        {showBuyButton && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginTop: 10 }}>\r\n            <Button onClick={onBuyClick} style={{ padding: '4px 16px' }}>\r\n              Buy ({cost || 0})\r\n            </Button>\r\n          </FlexContainer>\r\n        )}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ArmorPreview } from '../ArmorPreview'\r\nimport { WeaponPreview } from '../WeaponPreview'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { ConsumablePreview } from '../ConsumablePreview'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\n\r\nexport interface ItemPreviewPropsT {\r\n  item: tWeapon | tArmor | tConsumable\r\n}\r\n\r\nexport const ItemPreivew = (props: ItemPreviewPropsT) => {\r\n  const { item } = props\r\n\r\n  if (item.itemType === 'armor') return <ArmorPreview armor={item as tArmor} />\r\n  if (item.itemType === 'weapon')\r\n    return <WeaponPreview weapon={item as tWeapon} />\r\n  if (item.itemType === 'consumable') {\r\n    return <ConsumablePreview item={item as tConsumable} />\r\n  }\r\n  return <div />\r\n}\r\n","import React, { useMemo, useEffect, useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport Gold from '../../icons/svg/delapouite/coins.svg'\r\nimport XP from '../../icons/svg/lorc/laurel-crown.svg'\r\nimport { Icon } from '../Icon'\r\nimport { ItemPreivew } from '../ItemPreview'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { consolidateRewards } from '../../game/Other/util'\r\nimport { commitRewards } from '../../game/Party/util'\r\nimport { tEncounterReward } from '../../game/Encounter/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { HoverToolTip } from '../Tooltip'\r\n\r\nconst getItem = (\r\n  character: tProcessedCharacter,\r\n  item: tWeapon | tArmor,\r\n): tWeapon | tArmor | undefined => {\r\n  if (item.itemType === 'weapon') {\r\n    return character.weapon\r\n  } else {\r\n    const armor = item as tArmor\r\n    return character.armor.find((a) => a.resource === armor.resource)\r\n  }\r\n}\r\n\r\nexport interface CombatVictoryModalPropsT {\r\n  rewards: tEncounterReward[]\r\n}\r\n\r\nexport const CombatVictoryModal = (props: CombatVictoryModalPropsT) => {\r\n  const { rewards } = props\r\n  const { rawParty, party, updateParty, equipItem } = usePartyContext()\r\n  const { nextLevel } = useGameStateContext()\r\n  const { close } = useModalContext()\r\n  const consolidatedRewards = useMemo(() => consolidateRewards(rewards), [\r\n    rewards,\r\n  ])\r\n\r\n  const [items, setItems] = useState(consolidatedRewards.items)\r\n  const first = items[0]\r\n  const next = () => {\r\n    if (\r\n      (items.length === 1 && consolidatedRewards.items.length > 0) ||\r\n      consolidatedRewards.items.length === 0\r\n    ) {\r\n      close()\r\n      nextLevel()\r\n    } else {\r\n      setItems((i) => {\r\n        const [first, ...rest] = i\r\n        return rest\r\n      })\r\n    }\r\n  }\r\n  const equip = (characterId: string) => {\r\n    if (first) {\r\n      equipItem(characterId, first as tArmor | tWeapon)\r\n      next()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateParty(commitRewards(rawParty, consolidatedRewards))\r\n  }, [])\r\n\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ textAlign: 'center', minHeight: 420 }}\r\n    >\r\n      <h1>You Win!</h1>\r\n      <FlexContainer $direction='column' style={{ color: 'white' }}>\r\n        <FlexContainer style={{ marginBottom: 16 }}>\r\n          <FlexContainer>\r\n            <Icon src={Gold} size={18} style={{ marginRight: 8 }} />\r\n            <span>{consolidatedRewards.gold} Gold</span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n          <FlexContainer>\r\n            <Icon src={XP} size={18} style={{ marginRight: 8 }} />\r\n            <span>{consolidatedRewards.xp} XP</span>\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n        {first && (\r\n          <FlexContainer $direction='column'>\r\n            <FlexContainer style={{ marginBottom: 16 }}>\r\n              <FullContainer />\r\n              <FlexContainer $direction='column'>\r\n                <ItemPreivew item={first} />\r\n                <span\r\n                  style={{\r\n                    marginTop: 8,\r\n                    color: 'rgba(255,255,255,0.3)',\r\n                    fontWeight: 'bold',\r\n                    fontSize: 12,\r\n                  }}\r\n                >\r\n                  1 of {items.length}\r\n                </span>\r\n              </FlexContainer>\r\n              <FullContainer />\r\n            </FlexContainer>\r\n            {(first.itemType === 'armor' || first.itemType === 'weapon') && (\r\n              <FlexContainer\r\n                style={{ marginBottom: 8, justifyContent: 'center' }}\r\n              >\r\n                {party.characters.map((character) => (\r\n                  <HoverToolTip\r\n                    direction='down'\r\n                    content={\r\n                      <>\r\n                        {getItem(character, first as tWeapon | tArmor) && (\r\n                          <ItemPreivew\r\n                            item={\r\n                              getItem(character, first as tWeapon | tArmor) as\r\n                                | tWeapon\r\n                                | tArmor\r\n                            }\r\n                          />\r\n                        )}\r\n                      </>\r\n                    }\r\n                  >\r\n                    <Button\r\n                      style={{ padding: 8 }}\r\n                      onClick={() => equip(character.id)}\r\n                    >\r\n                      Equip to {character.name}\r\n                    </Button>\r\n                  </HoverToolTip>\r\n                ))}\r\n              </FlexContainer>\r\n            )}\r\n          </FlexContainer>\r\n        )}\r\n      </FlexContainer>\r\n      <FullContainer />\r\n      <Button\r\n        onClick={() => {\r\n          next()\r\n        }}\r\n      >\r\n        {items.length === 0 ? 'Close' : 'Next'}\r\n      </Button>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { tEncounterReward } from '../Encounter/type'\r\nimport { ZERO_REWARD } from '../Encounter/constants'\r\n\r\nexport const consolidateRewards = (\r\n  rewards: tEncounterReward[],\r\n): tEncounterReward => {\r\n  return rewards.reduce((res, reward) => {\r\n    return {\r\n      gold: res.gold + reward.gold,\r\n      xp: res.xp + reward.xp,\r\n      items: [...res.items, ...reward.items],\r\n      status: [...res.status, ...reward.status],\r\n      immunities: [...res.immunities, ...reward.immunities],\r\n    }\r\n  }, ZERO_REWARD)\r\n}\r\n","import { tQueue } from './type'\r\nimport { tProcessedCharacter, tCharacter } from '../Character/type'\r\nimport { processCharacter } from '../Character/util'\r\n\r\nconst AGILITY_OFFSET = 120\r\n\r\nexport const makeCombatQueue = (characters: tProcessedCharacter[]): tQueue => {\r\n  const sortedCharacters = characters.sort(\r\n    (a, b) => b.stats.agility - a.stats.agility,\r\n  )\r\n  return validateQueue(\r\n    sortedCharacters.reduce(\r\n      (r, c, i) => ({\r\n        ...r,\r\n        [c.id]: AGILITY_OFFSET / 2 - c.stats.agility,\r\n      }),\r\n      {},\r\n    ),\r\n    characters,\r\n  )\r\n}\r\n\r\nexport const getMax = (queue: tQueue): number => {\r\n  return Object.keys(queue).reduce((r: number, id: string) => {\r\n    if (r < queue[id]) return queue[id]\r\n    return r\r\n  }, Number.NEGATIVE_INFINITY)\r\n}\r\n\r\nexport const getMin = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): number => {\r\n  if (characters.length === 0) throw new Error('track this call down')\r\n  return Object.keys(queue).reduce((min: number, id: string) => {\r\n    if (queue[id] < min) {\r\n      const c = characters.find((c) => c.id === id) as tProcessedCharacter\r\n      if (c.stats.queueConsolidationModifier > 0) {\r\n        return queue[id]\r\n      } else {\r\n        return min\r\n      }\r\n    }\r\n    return min\r\n  }, Number.POSITIVE_INFINITY)\r\n}\r\n\r\nexport const consolidateQueue = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  let min = getMin(queue, characters)\r\n  return Object.keys(queue).reduce((r, id) => {\r\n    const character = characters.find((c) => c.id === id) as tCharacter\r\n    const offset = character.stats.queueConsolidationModifier * min\r\n    return {\r\n      ...r,\r\n      [id]: queue[id] - offset,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const shiftQueue = (\r\n  queue: tQueue,\r\n  character: tProcessedCharacter,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  const ret = consolidateQueue(\r\n    {\r\n      ...queue,\r\n      [character.id]: AGILITY_OFFSET - character.stats.agility,\r\n    },\r\n    characters,\r\n  )\r\n  return ret\r\n}\r\n\r\nexport const getFirst = (queue: tQueue): string => {\r\n  let min = Number.POSITIVE_INFINITY\r\n  let key = Object.keys(queue)[0]\r\n  Object.keys(queue).forEach((id) => {\r\n    if (min > queue[id]) {\r\n      min = queue[id]\r\n      key = id\r\n    }\r\n  })\r\n  return key\r\n}\r\n\r\nexport const validateQueue = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  return consolidateQueue(\r\n    characters.reduce((r, c) => {\r\n      return c.health <= 0 ? r : { ...r, [c.id]: queue[c.id] }\r\n    }, {}),\r\n    characters,\r\n  )\r\n}\r\n\r\nexport const getSortedIds = (queue: tQueue): string[] => {\r\n  return Object.keys(queue).sort((a, b) => queue[a] - queue[b])\r\n}\r\n\r\nexport const commitQueueUpdates = (\r\n  queue: tQueue,\r\n  source: tProcessedCharacter,\r\n  characters: tCharacter[],\r\n): tQueue => {\r\n  const pcs = characters.map((c) => processCharacter(c))\r\n  const shiftedQueue = shiftQueue(queue, source, pcs)\r\n  const ret = validateQueue(\r\n    Object.keys(shiftedQueue).reduce((q, id) => {\r\n      const character = pcs.find((c) => c.id === id)\r\n      return {\r\n        ...q,\r\n        [id]:\r\n          character?.stats?.queueValueSet !== undefined\r\n            ? character?.stats?.queueValueSet\r\n            : shiftedQueue[id],\r\n      }\r\n    }, {}),\r\n    pcs,\r\n  )\r\n  return ret\r\n}\r\n","import { tParty } from '../Party/type'\r\nimport { tCharacter } from '../Character/type'\r\nimport { updateCharacter, getOtherCharacters } from '../Party/util'\r\nimport { tQueue } from '../Queue/type'\r\nimport { tSkillResult, tSkillCommiterResult } from './type'\r\nimport {\r\n  commitDamage,\r\n  addMultipleStatus,\r\n  decrementStatusDurations,\r\n  processCharacter,\r\n  checkStatus,\r\n} from '../Character/util'\r\nimport { noneg } from '../../util/noneg'\r\nimport { commitQueueUpdates } from '../Queue/util'\r\nimport { PLAYER_PARTY_ID } from '../Party/constants'\r\n\r\nconst partyUpdater = (\r\n  party: tParty,\r\n  characterId: string,\r\n  updater: (c: tCharacter) => tCharacter,\r\n): tParty => {\r\n  return updateCharacter(party, characterId, updater)\r\n}\r\n\r\nexport const commitSkillResults = (\r\n  playerParty: tParty,\r\n  enemyParty: tParty,\r\n  queue: tQueue,\r\n) => (result: tSkillResult): tSkillCommiterResult => {\r\n  const { source } = result.sourceResult\r\n  result.targetResults.forEach((targetResult, index) => {\r\n    const { target } = targetResult\r\n    let sourceParty = [playerParty, enemyParty].find(\r\n      (p) => p.id === source.partyId,\r\n    ) as tParty\r\n    let targetParty = [playerParty, enemyParty].find(\r\n      (p) => p.id === target.partyId,\r\n    ) as tParty\r\n    const localUpdate = (\r\n      p: tParty,\r\n      id: string,\r\n      updater: (c: tCharacter) => tCharacter,\r\n    ) => {\r\n      if (p.id === sourceParty.id) {\r\n        sourceParty = partyUpdater(p, id, updater)\r\n        return\r\n      }\r\n      if (p.id === targetParty.id) {\r\n        targetParty = partyUpdater(p, id, updater)\r\n        return\r\n      }\r\n      throw new Error('bad party id')\r\n    }\r\n\r\n    if (index === 0) {\r\n      if (targetResult.weaponDidBreak) {\r\n        localUpdate(sourceParty, source.id, (c) => {\r\n          return {\r\n            ...c,\r\n            weapon: undefined,\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    // commit main damage\r\n    localUpdate(targetParty, target.id, (c) => {\r\n      return commitDamage(\r\n        c,\r\n        targetResult.totalDamage,\r\n        targetResult.ignoreResistance,\r\n      )\r\n    })\r\n\r\n    // commit main status\r\n    localUpdate(targetParty, target.id, (c) => {\r\n      return addMultipleStatus(c, targetResult.addedStatus)\r\n    })\r\n\r\n    // comit main heal\r\n    if (targetResult.skill.healing) {\r\n      localUpdate(targetParty, target.id, (c) => {\r\n        return {\r\n          ...c,\r\n          healthOffset: c.healthOffset - c.stats.consumableHealthGainOffset,\r\n        }\r\n      })\r\n    }\r\n\r\n    // commit splash damage\r\n    if (targetResult.splashDamage.value > 0) {\r\n      getOtherCharacters(targetParty, target.id).forEach((character) => {\r\n        localUpdate(targetParty, character.id, (c) => {\r\n          return commitDamage(c, targetResult.splashDamage, false)\r\n        })\r\n      })\r\n    }\r\n\r\n    // commit reflected damage\r\n    if (targetResult.reflectedDamage.value > 0) {\r\n      localUpdate(sourceParty, source.id, (c) => {\r\n        return commitDamage(c, targetResult.reflectedDamage, false)\r\n      })\r\n    }\r\n\r\n    // commet end-of-round actions\r\n    if (index === result.targetResults.length - 1) {\r\n      // source health regen\r\n      localUpdate(sourceParty, source.id, (c) => {\r\n        const pc = processCharacter(checkStatus(c))\r\n        return {\r\n          ...c,\r\n          healthOffset: noneg(c.healthOffset - pc.stats.healthRegeneration),\r\n          consumables: c.consumables.filter(\r\n            (i) => i.id !== targetResult.skill.consumableId,\r\n          ),\r\n        }\r\n      })\r\n    }\r\n\r\n    if (sourceParty.id === PLAYER_PARTY_ID) {\r\n      playerParty = sourceParty\r\n    } else {\r\n      enemyParty = sourceParty\r\n    }\r\n    if (targetParty.id === PLAYER_PARTY_ID) {\r\n      if (sourceParty.id !== targetParty.id) {\r\n        playerParty = targetParty\r\n      }\r\n    } else {\r\n      enemyParty = targetParty\r\n    }\r\n  })\r\n\r\n  return {\r\n    playerParty: {\r\n      ...playerParty,\r\n      characters: playerParty.characters.map((c) =>\r\n        decrementStatusDurations(checkStatus(c)),\r\n      ),\r\n    },\r\n    enemyParty: {\r\n      ...enemyParty,\r\n      characters: enemyParty.characters.map((c) =>\r\n        decrementStatusDurations(checkStatus(c)),\r\n      ),\r\n    },\r\n    queue: commitQueueUpdates(queue, source, [\r\n      ...playerParty.characters,\r\n      ...enemyParty.characters,\r\n    ]),\r\n  }\r\n}\r\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n} from 'react'\r\nimport { usePartyContext } from '../PartyContext'\r\nimport { v4 } from 'uuid'\r\nimport { useHistory } from 'react-router'\r\nimport { useModalContext } from '../ModalContext'\r\nimport { CombatVictoryModal } from '../../components/CombatVictoryModal'\r\nimport { tProcessedParty, tParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tSkill, tSkillResult, tSkillTarget } from '../../game/Skill/type'\r\nimport { tQueue } from '../../game/Queue/type'\r\nimport {\r\n  processParty,\r\n  makeParty,\r\n  getRolledRewards,\r\n} from '../../game/Party/util'\r\nimport {\r\n  processCharacter,\r\n  makeCharacter,\r\n  removeTemporaryStatus,\r\n} from '../../game/Character/util'\r\nimport { makeCombatQueue, getFirst, shiftQueue } from '../../game/Queue/util'\r\nimport {\r\n  makeSkillTarget,\r\n  resolveSkillTarget,\r\n  getSkillResult,\r\n} from '../../game/Skill/util'\r\nimport { commitSkillResults } from '../../game/Skill/committer'\r\nimport { getAIAction } from '../../game/AI/util'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\n\r\nexport interface CombatContextT {\r\n  party: tProcessedParty\r\n  enemyParty: tProcessedParty\r\n  activeCharacter: tProcessedCharacter\r\n  characters: tProcessedCharacter[]\r\n  queue: tQueue\r\n  selectedSkill: tSkill | undefined\r\n  selectedTargets: tProcessedCharacter[]\r\n  selectedConsumableIndex: number | undefined\r\n  roundResults: tSkillResult[]\r\n  activeRound: tSkillResult | undefined\r\n  isRunning: boolean\r\n  isRenderingResult: boolean\r\n  onSkillSelect: (skill: tSkill, consumableIndex?: number) => void\r\n  onTargetsSelect: (target: tProcessedCharacter | tProcessedParty) => void\r\n  onConsumableSelect: (consumableIndex: number | undefined) => void\r\n  reset: () => void\r\n  start: () => void\r\n  next: (nextTarget?: tProcessedCharacter | tProcessedParty) => void\r\n  commit: () => void\r\n  equipItemCombat: (characterId: string, item?: tArmor | tWeapon) => void\r\n}\r\nconst defaultValue: CombatContextT = {\r\n  party: processParty(makeParty(0, 0)),\r\n  enemyParty: processParty(makeParty(0, 0)),\r\n  activeCharacter: processCharacter(makeCharacter('executioner')),\r\n  characters: [],\r\n  queue: {},\r\n  selectedSkill: undefined,\r\n  selectedTargets: [],\r\n  selectedConsumableIndex: undefined,\r\n  roundResults: [],\r\n  activeRound: undefined,\r\n  isRunning: false,\r\n  isRenderingResult: false,\r\n  onSkillSelect: (skill: tSkill) => {},\r\n  onTargetsSelect: (target: tProcessedCharacter | tProcessedParty) => {},\r\n  onConsumableSelect: (consumableIndex) => {},\r\n  reset: () => {},\r\n  start: () => {},\r\n  next: () => {},\r\n  commit: () => {},\r\n  equipItemCombat: (characterId, item) => {},\r\n}\r\nexport const CombatContext = createContext<CombatContextT>(defaultValue)\r\nexport const useCombatContext = () => useContext(CombatContext)\r\n\r\nexport interface CombatContextProviderPropsT {\r\n  children: JSX.Element\r\n  enemyParty: tParty\r\n  setEnemyParty: (party: tParty) => void\r\n  onRequestNewParty: () => void\r\n}\r\nexport const CombatContextProvider = (props: CombatContextProviderPropsT) => {\r\n  const { children, setEnemyParty, onRequestNewParty } = props\r\n  const { party, rawParty, updateParty, equipItem } = usePartyContext()\r\n  const { open } = useModalContext()\r\n  const history = useHistory()\r\n  const enemyParty = useMemo(() => {\r\n    return processParty(props.enemyParty)\r\n  }, [props.enemyParty])\r\n  const [isRunning, setIsRunning] = useState<boolean>(false)\r\n  const [isRenderingResult, setIsRenderingResult] = useState<boolean>(false)\r\n  const characters = useMemo(\r\n    () => [...party.characters, ...enemyParty.characters],\r\n    [party, enemyParty],\r\n  )\r\n  const [queue, setQueue] = useState<tQueue>(\r\n    makeCombatQueue([...party.characters, ...enemyParty.characters]),\r\n  )\r\n  const resultCommitter = useMemo(\r\n    () => commitSkillResults(rawParty, props.enemyParty, queue),\r\n    [rawParty, props.enemyParty, queue],\r\n  )\r\n  const [roundId, setRoundId] = useState<string>(v4())\r\n  const [roundResults, setRoundResults] = useState<tSkillResult[]>([])\r\n  const [activeRound, setActiveRound] = useState<tSkillResult | undefined>()\r\n  const [selectedTarget, setSelectedTarget] = useState<\r\n    tSkillTarget | undefined\r\n  >()\r\n  const [selectedSkill, setSelectedSkill] = useState<tSkill | undefined>()\r\n  const [selectedConsumableIndex, setSelectedConsumableIndex] = useState<\r\n    number | undefined\r\n  >()\r\n  const activeCharacter = useMemo(\r\n    () =>\r\n      characters.find(\r\n        (c) => c.health > 0 && c.id === getFirst(queue),\r\n      ) as tProcessedCharacter,\r\n    [queue, characters],\r\n  )\r\n\r\n  const start = () => {\r\n    setIsRunning(true)\r\n    setQueue(makeCombatQueue([...party.characters, ...enemyParty.characters]))\r\n    setRoundId(v4())\r\n    setActiveRound(undefined)\r\n    setIsRenderingResult(false)\r\n  }\r\n\r\n  const reset = () => {\r\n    onRequestNewParty()\r\n    setIsRunning(false)\r\n    setActiveRound(undefined)\r\n    setSelectedSkill(undefined)\r\n    setSelectedTarget(undefined)\r\n    setSelectedConsumableIndex(undefined)\r\n    setIsRenderingResult(false)\r\n    setRoundResults([])\r\n    setQueue({})\r\n  }\r\n\r\n  const equipItemCombat = (characterId: string, item?: tArmor | tWeapon) => {\r\n    if (item) {\r\n      equipItem(activeCharacter.id, item)\r\n    }\r\n    setQueue((q) =>\r\n      shiftQueue(q, activeCharacter, [\r\n        ...party.characters,\r\n        ...enemyParty.characters,\r\n      ]),\r\n    )\r\n    completeRound()\r\n  }\r\n\r\n  const next = (nextTarget?: tProcessedCharacter | tProcessedParty) => {\r\n    if (selectedSkill) {\r\n      const roundTarget = nextTarget\r\n        ? makeSkillTarget(selectedSkill.targetType, nextTarget)\r\n        : selectedTarget\r\n      if (!selectedSkill || !roundTarget) return\r\n      const results = getSkillResult(\r\n        activeCharacter,\r\n        resolveSkillTarget(roundTarget).filter((c) => c.health > 0),\r\n        selectedSkill,\r\n      )\r\n      setActiveRound(results)\r\n      setSelectedSkill(undefined)\r\n      setSelectedTarget(undefined)\r\n      setSelectedConsumableIndex(undefined)\r\n      setIsRenderingResult(true)\r\n    }\r\n  }\r\n\r\n  const onSkillSelect = (skill: tSkill, consumableIndex?: number) => {\r\n    setSelectedSkill(skill)\r\n    if (consumableIndex !== undefined) {\r\n      setSelectedConsumableIndex(consumableIndex)\r\n    }\r\n    if (skill.targetType !== selectedSkill?.targetType) {\r\n      setSelectedTarget(undefined)\r\n    }\r\n  }\r\n\r\n  const onTargetsSelect = (target: tProcessedCharacter | tProcessedParty) => {\r\n    if (!selectedSkill) return\r\n    setSelectedTarget(makeSkillTarget(selectedSkill.targetType, target))\r\n  }\r\n\r\n  const completeRound = () => {\r\n    setRoundId(v4())\r\n    setActiveRound(undefined)\r\n    setIsRenderingResult(false)\r\n  }\r\n\r\n  const commit = useCallback(() => {\r\n    if (!activeRound) return\r\n    const result = resultCommitter(activeRound)\r\n    setRoundResults((r) => [...r, activeRound])\r\n    setEnemyParty(result.enemyParty)\r\n    updateParty(result.playerParty)\r\n    setQueue(result.queue)\r\n\r\n    completeRound()\r\n  }, [activeRound, queue])\r\n\r\n  const execEnemyTurn = (skill: tSkill, target: tSkillTarget) => {\r\n    const result = getSkillResult(\r\n      activeCharacter,\r\n      resolveSkillTarget(target),\r\n      skill,\r\n    )\r\n    setActiveRound(result)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activeCharacter && isRunning) {\r\n      if (activeCharacter.partyId === enemyParty.id) {\r\n        const { skill, target } = getAIAction(\r\n          activeCharacter,\r\n          party,\r\n          enemyParty,\r\n        )\r\n        execEnemyTurn(skill, makeSkillTarget(skill.targetType, target))\r\n      } else {\r\n        setSelectedSkill(activeCharacter.skills[0])\r\n      }\r\n    }\r\n  }, [roundId])\r\n\r\n  useEffect(() => {\r\n    if (!isRunning) return\r\n    if (enemyParty.characters.every((c) => c.health <= 0)) {\r\n      setIsRunning(false)\r\n      const rewards = getRolledRewards(\r\n        enemyParty,\r\n        party.characters.reduce((p, c) =>\r\n          p.stats.luck > c.stats.luck ? p : c,\r\n        ),\r\n      )\r\n      updateParty({\r\n        ...rawParty,\r\n        characters: rawParty.characters.map((c) => removeTemporaryStatus(c)),\r\n      })\r\n      open(<CombatVictoryModal rewards={rewards} />, {}, true)\r\n      return\r\n    }\r\n    if (party.characters.every((c) => c.health <= 0)) {\r\n      setIsRunning(false)\r\n      alert('you lose')\r\n      history.push('/JSFTK_combat/')\r\n      return\r\n    }\r\n  }, [party, enemyParty])\r\n\r\n  return (\r\n    <CombatContext.Provider\r\n      value={{\r\n        party,\r\n        enemyParty,\r\n        characters,\r\n        queue,\r\n        activeCharacter,\r\n        activeRound,\r\n        selectedSkill,\r\n        selectedTargets: selectedTarget\r\n          ? resolveSkillTarget(selectedTarget)\r\n          : [],\r\n        selectedConsumableIndex,\r\n        roundResults,\r\n        isRunning,\r\n        isRenderingResult,\r\n        onSkillSelect,\r\n        onTargetsSelect,\r\n        onConsumableSelect: setSelectedConsumableIndex,\r\n        start,\r\n        next,\r\n        commit,\r\n        reset,\r\n        equipItemCombat,\r\n      }}\r\n    >\r\n      {children}\r\n    </CombatContext.Provider>\r\n  )\r\n}\r\n","import { tSkill } from '../Skill/type'\r\nimport { tProcessedCharacter } from '../Character/type'\r\nimport { tProcessedParty } from '../Party/type'\r\nimport { getRandom } from '../../util'\r\nimport { getSkillTargetOptions } from '../Skill/util'\r\n\r\nexport interface tAIAction {\r\n  skill: tSkill\r\n  target: tProcessedCharacter | tProcessedParty\r\n}\r\nexport const getAIAction = (\r\n  source: tProcessedCharacter,\r\n  playerParty: tProcessedParty,\r\n  enemyParty: tProcessedParty,\r\n): tAIAction => {\r\n  const skill = getRandom(source.skills)\r\n  const targetedCharacters = playerParty.characters.filter(\r\n    (c) => c.status.map((t) => t.type).includes('targeted') && c.health > 0,\r\n  )\r\n  const target =\r\n    skill.targetType === 'single'\r\n      ? targetedCharacters.length > 0\r\n        ? getRandom(targetedCharacters)\r\n        : getRandom(playerParty.characters.filter((c) => c.health > 0))\r\n      : getRandom<tProcessedParty | tProcessedCharacter>(\r\n          getSkillTargetOptions(source, enemyParty, playerParty, skill),\r\n        )\r\n\r\n  return { skill, target }\r\n}\r\n","import React from 'react'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface PerfectPropsT {\r\n  show: boolean | undefined\r\n  partyId: string\r\n}\r\nexport const Perfect = (props: PerfectPropsT) => {\r\n  const { show, partyId } = props\r\n  const style = useSpring({ opacity: show ? 1 : 0 })\r\n  return show ? (\r\n    <animated.div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: 16,\r\n        fontSize: 42,\r\n        color: partyId === PLAYER_PARTY_ID ? 'rgba(255,255,255,1)' : '#c95738',\r\n        textShadow: '4px 4px 4px black',\r\n        fontFamily: Theme.titleFont,\r\n        ...style,\r\n      }}\r\n    >\r\n      Perfect!\r\n    </animated.div>\r\n  ) : null\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport Kefir from 'kefir'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport Color from 'color'\r\nimport { Perfect } from './Perfect'\r\nimport { Theme } from '../../theme'\r\nimport { CHARACTER_CLASS_COLORS } from '../../game/Character/constants'\r\n\r\nexport interface RoundResultRendererPropsT {\r\n  isModal?: boolean\r\n}\r\nexport const RoundResultRenderer = (props: RoundResultRendererPropsT) => {\r\n  const { isModal = true } = props\r\n  const { activeRound, isRunning, commit } = useCombatContext()\r\n  const { open, close } = useModalContext()\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (activeRound && !isOpen && isRunning) {\r\n      setIsOpen(true)\r\n      if (isModal) {\r\n        open(\r\n          <RoundResult\r\n            close={() => {\r\n              close(true)\r\n              setIsOpen(false)\r\n              commit()\r\n            }}\r\n          />,\r\n          {\r\n            overlay: {\r\n              background: 'transparent',\r\n            },\r\n          },\r\n          true,\r\n        )\r\n      }\r\n    }\r\n  }, [isRunning, isModal, isOpen, activeRound, open, close, commit])\r\n\r\n  if (!isModal && activeRound && isRunning) {\r\n    return (\r\n      <FlexContainer style={{ height: 269 }}>\r\n        <RoundResult\r\n          close={() => {\r\n            setIsOpen(false)\r\n            commit()\r\n          }}\r\n        />\r\n      </FlexContainer>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport interface RoundResultPropsT {\r\n  close: () => void\r\n}\r\nexport interface CheckKVT {\r\n  label: string\r\n  result: boolean | undefined\r\n}\r\nexport const RoundResult = (props: RoundResultPropsT) => {\r\n  const { close } = props\r\n  const { activeRound } = useCombatContext()\r\n  const [isDone, setIsDone] = useState(false)\r\n  const round = activeRound?.sourceResult\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n  const [roundResults, setRoundResults] = useState<CheckKVT[]>(\r\n    !round\r\n      ? []\r\n      : round.rollResults.map((result, i) => ({\r\n          label: round.skill.weaponStatOverride || round.source.weapon.stat,\r\n          result: undefined,\r\n        })),\r\n  )\r\n\r\n  const updateRoundResult = (value: CheckKVT, index: number) => {\r\n    setActiveIndex(index)\r\n    setRoundResults((r) => r.map((r, i) => (i === index ? value : r)))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!round) return\r\n    const stream = Kefir.sequentially(\r\n      200,\r\n      roundResults.map((r, i) => ({ ...r, index: i })),\r\n    )\r\n    stream.onValue((result) => {\r\n      updateRoundResult(\r\n        {\r\n          label: result.label,\r\n          result: round.rollResults[result.index],\r\n        },\r\n        result.index,\r\n      )\r\n    })\r\n    stream.onEnd(() => {\r\n      Kefir.later(round.perfect ? 1200 : 900, undefined).onValue(() => {\r\n        setIsDone(true)\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (isDone) {\r\n      close()\r\n    }\r\n  }, [isDone, close])\r\n\r\n  const showPerfect = activeIndex === roundResults.length - 1 && round?.perfect\r\n  const isPlayer = (partyId: string) => partyId === PLAYER_PARTY_ID\r\n  const targetResult = activeRound?.targetResults[0]\r\n  const showTarget =\r\n    round && targetResult && targetResult.target.id !== round.source.id\r\n  if (!round) return null\r\n  const color = Color(\r\n    CHARACTER_CLASS_COLORS[targetResult?.target?.class || 'enemy'],\r\n  )\r\n    .lighten(0.5)\r\n    //.saturate(2)\r\n    .hex()\r\n    .toString()\r\n  return (\r\n    <FlexContainer $direction='column' style={{ textAlign: 'center' }}>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        {roundResults.map((result, i) => (\r\n          <SkillCheck\r\n            key={i}\r\n            check={result}\r\n            perfect={showPerfect}\r\n            skill={round.skill}\r\n            crit={round.criticalHitSuccess}\r\n          />\r\n        ))}\r\n      </FlexContainer>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        <div\r\n          style={{\r\n            marginTop: 24,\r\n            //background: Theme.darkBgColor,\r\n            fontSize: 32,\r\n            padding: '16px 32px',\r\n            color: 'rgba(255,255,255,0.8)',\r\n            //fontWeight: 'bolder',\r\n            textShadow: '1px 1px 1px black',\r\n          }}\r\n        >\r\n          <strong\r\n            style={{\r\n              fontWeight: 'bold',\r\n              color: isPlayer(round.source.partyId)\r\n                ? Color(CHARACTER_CLASS_COLORS[round.source.class])\r\n                    .lighten(1)\r\n                    //.saturate(1)\r\n                    .hex()\r\n                    .toString()\r\n                : Theme.enemyPartyColor,\r\n            }}\r\n          >\r\n            {round.source.name}\r\n          </strong>{' '}\r\n          uses{' '}\r\n          <span style={{ color: 'rgba(255,255,255,0.9)', fontWeight: 'bold' }}>\r\n            {round.skill.name}\r\n          </span>\r\n          {showTarget && (\r\n            <span>\r\n              {' on '}\r\n              <strong\r\n                style={{\r\n                  fontWeight: 'bold',\r\n                  color: isPlayer(targetResult?.target.partyId || '')\r\n                    ? color\r\n                    : Theme.enemyPartyColor,\r\n                }}\r\n              >\r\n                {targetResult?.target.name}\r\n              </strong>\r\n            </span>\r\n          )}\r\n        </div>\r\n      </FlexContainer>\r\n      <Perfect show={showPerfect} partyId={round.source.partyId} />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { tStats } from '../../game/Stats/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { STAT_BONUS_KEYS } from '../../game/Stats/constants'\r\n\r\nconst getStatColor = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tStats,\r\n): string => {\r\n  const a = character.stats[key]\r\n  const b = character.rawStats[key]\r\n  if (a === undefined || b === undefined) return 'rgba(255,255,255,0.6)'\r\n  if (a > b) return 'lightgreen'\r\n  if (b > a) return 'lightcoral'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n\r\nexport interface StatBarPropsT {\r\n  character: tProcessedCharacter\r\n}\r\nexport const StatBar = (props: StatBarPropsT) => {\r\n  const { character } = props\r\n\r\n  return (\r\n    <BoxContainer>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-between',\r\n          width: 360,\r\n          paddingTop: 10,\r\n          paddingBottom: 6,\r\n        }}\r\n      >\r\n        {STAT_BONUS_KEYS.map((key) => (\r\n          <FlexContainer\r\n            key={key}\r\n            style={{\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Icon\r\n              src={STAT_ICONS[key] || ''}\r\n              size={20}\r\n              fill={getStatColor(character, key)}\r\n              style={{ marginRight: 4 }}\r\n            />\r\n            <span style={{ color: getStatColor(character, key) }}>\r\n              {character.stats[key]}\r\n            </span>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\n\r\nexport interface UIContextT {\r\n  playerCanEquipItem: boolean\r\n  openCharacterInventoryId: string | undefined\r\n  showSkillTooltips: boolean\r\n  onCharacterConsumableClick: (\r\n    c: tProcessedCharacter,\r\n    index: number,\r\n    item: tConsumable,\r\n  ) => void\r\n  setPlayerCanEquipItem: (v: boolean) => void\r\n  setOpenCharacterInventoryId: (id: string | undefined) => void\r\n  setOnCharacterConsumableClick: (\r\n    fn: (c: tProcessedCharacter, index: number, item: tConsumable) => void,\r\n  ) => void\r\n  setShowSkillTooltips: (v: boolean) => void\r\n}\r\n\r\nconst defaultValue: UIContextT = {\r\n  playerCanEquipItem: false,\r\n  openCharacterInventoryId: undefined,\r\n  showSkillTooltips: false,\r\n  onCharacterConsumableClick: (c, i, item) => {},\r\n  setPlayerCanEquipItem: (v) => {},\r\n  setOpenCharacterInventoryId: (id) => {},\r\n  setOnCharacterConsumableClick: (fn) => {},\r\n  setShowSkillTooltips: (v) => {},\r\n}\r\n\r\nexport const UIContext = React.createContext<UIContextT>(defaultValue)\r\nexport const useUIContext = () => useContext(UIContext)\r\n\r\nexport interface UIContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const UIContextProvider = (props: UIContextProviderPropsT) => {\r\n  const { children } = props\r\n  const [playerCanEquipItem, setPlayerCanEquipItem] = useState(false)\r\n  const [showSkillTooltips, setShowSkillTooltips] = useState(true)\r\n  const [openCharacterInventoryId, setOpenCharacterInventoryId] = useState<\r\n    string | undefined\r\n  >()\r\n  const [onCharacterConsumableClick, _setOnCharacterConsumableClick] = useState<\r\n    (c: tProcessedCharacter, i: number, item: tConsumable) => void\r\n  >((c, i, item) => {})\r\n\r\n  const setOnCharacterConsumableClick = (\r\n    fn: (c: tProcessedCharacter, index: number, item: tConsumable) => void,\r\n  ) => {\r\n    _setOnCharacterConsumableClick(() => fn)\r\n  }\r\n  return (\r\n    <UIContext.Provider\r\n      value={{\r\n        playerCanEquipItem,\r\n        openCharacterInventoryId,\r\n        showSkillTooltips,\r\n        onCharacterConsumableClick,\r\n        setPlayerCanEquipItem,\r\n        setOpenCharacterInventoryId,\r\n        setOnCharacterConsumableClick,\r\n        setShowSkillTooltips,\r\n      }}\r\n    >\r\n      {children}\r\n    </UIContext.Provider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { RESOURCE_ICONS, WEAPON_TYPE_ICONS } from '../../icons/maps'\r\nimport { styled } from 'styletron-react'\r\nimport { ClickToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Button } from '../../elements/button'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tArmor, tArmorResourceType } from '../../game/Armor/type'\r\nimport {\r\n  CHARACTER_RESOURCES,\r\n  ITEM_RARITY_COLORS,\r\n} from '../../game/Item/constants'\r\nimport { Theme } from '../../theme'\r\n\r\nconst ItemRow = styled(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    marginBottom: '4px',\r\n    textShadow: '1px 1px 1px black',\r\n    background: props.$disabled\r\n      ? 'rgba(255,255,255,0.05)'\r\n      : 'linear-gradient(90deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 100%)',\r\n    paddingLeft: '8px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    textTransform: 'capitalize',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n  }\r\n})\r\n\r\nexport interface ItemPropsT {\r\n  character: tProcessedCharacter\r\n  setActiveItem: (item: tWeapon | tArmor | undefined) => void\r\n}\r\nexport const Items = (props: ItemPropsT) => {\r\n  const { character, setActiveItem } = props\r\n  const { playerCanEquipItem } = useUIContext()\r\n  return (\r\n    <FlexContainer $full $direction='column'>\r\n      <Item\r\n        disabled={false}\r\n        character={character}\r\n        resource={'weapon'}\r\n        onHover={setActiveItem}\r\n        canUnequip={playerCanEquipItem}\r\n      />\r\n      {CHARACTER_RESOURCES.map((res) => {\r\n        const disabled = res === 'offhand' && character.weapon.twoHand\r\n        return (\r\n          <Item\r\n            key={res}\r\n            disabled={disabled}\r\n            character={character}\r\n            resource={res}\r\n            onHover={setActiveItem}\r\n            canUnequip={playerCanEquipItem}\r\n          />\r\n        )\r\n      })}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface ItemProps {\r\n  character: tProcessedCharacter\r\n  resource: tArmorResourceType | 'weapon'\r\n  canUnequip?: boolean\r\n  disabled?: boolean\r\n  onHover: (item: tArmor | tWeapon | undefined) => void\r\n}\r\nexport const Item = (props: ItemProps) => {\r\n  const {\r\n    character,\r\n    resource,\r\n    canUnequip = true,\r\n    disabled = false,\r\n    onHover,\r\n  } = props\r\n  const { unequipItem } = usePartyContext()\r\n  const item =\r\n    resource === 'weapon'\r\n      ? character.weapon\r\n      : character.armor.find((a) => a.resource === resource)\r\n  return (\r\n    <ClickToolTip\r\n      direction='down'\r\n      distance={-2}\r\n      content={() => (\r\n        <>\r\n          {canUnequip && (\r\n            <BoxContainer\r\n              substyle={{\r\n                padding: 4,\r\n                width: 190,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                background: Theme.otherGrey,\r\n              }}\r\n            >\r\n              <Button\r\n                style={{ padding: '4px 8px' }}\r\n                onClick={() => {\r\n                  if (item) {\r\n                    if (resource === 'weapon') {\r\n                    } else {\r\n                      unequipItem(character.id, item)\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                Unequip\r\n              </Button>\r\n              <Button style={{ padding: '4px 8px' }}>Cancel</Button>\r\n            </BoxContainer>\r\n          )}\r\n        </>\r\n      )}\r\n    >\r\n      {({ onClick, ref }) => (\r\n        <ItemRow\r\n          ref={ref}\r\n          $disabled={disabled}\r\n          onMouseEnter={() => onHover(item)}\r\n          onClick={() => {\r\n            if (item) onClick()\r\n          }}\r\n          style={{\r\n            color: ITEM_RARITY_COLORS[item?.rarity || 'common'],\r\n          }}\r\n        >\r\n          <Icon\r\n            src={\r\n              resource === 'weapon'\r\n                ? WEAPON_TYPE_ICONS[(item as tWeapon)?.type || 'fist']\r\n                : RESOURCE_ICONS[resource] || ''\r\n            }\r\n            size={16}\r\n            fill={disabled ? 'rgba(255,255,255,0.3)' : 'white'}\r\n            style={{ marginRight: 6 }}\r\n          />\r\n          {item?.name}\r\n        </ItemRow>\r\n      )}\r\n    </ClickToolTip>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface NamePropsT {\r\n  name: string\r\n}\r\n\r\nexport const Name = (props: NamePropsT) => {\r\n  const { name } = props\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        width: '100%',\r\n        height: 40,\r\n        marginBottom: -20,\r\n        marginTop: -20,\r\n      }}\r\n    >\r\n      <FullContainer />\r\n      <BoxContainer\r\n        style={{ zIndex: 2 }}\r\n        substyle={{ background: Theme.darkBgColor }}\r\n      >\r\n        {name}\r\n      </BoxContainer>\r\n      <FullContainer />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { CHARACTER_CLASS_COLORS } from '../../game/Character/constants'\r\nimport { tCharacter } from '../../game/Character/type'\r\nimport { Icon } from '../Icon'\r\nimport { CHARACTER_CLASS_ICONS } from '../../icons/maps'\r\n\r\nexport interface CharacterIconPropsT {\r\n  character: tCharacter\r\n  size: number\r\n  height?: number\r\n  width?: number\r\n  index?: number\r\n  style?: CSSProperties\r\n  iconStyle?: CSSProperties\r\n}\r\nexport const CharacterIcon = (props: CharacterIconPropsT) => {\r\n  const { character, size, height, width, index, style, iconStyle } = props\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        background: CHARACTER_CLASS_COLORS[character.class],\r\n        border: '2px solid rgba(255,255,255,0.8)',\r\n        height: height || size - 10,\r\n        width: width || size - 7,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        overflow: 'hidden',\r\n        ...(style || {}),\r\n      }}\r\n    >\r\n      <Icon\r\n        src={character.icon || CHARACTER_CLASS_ICONS[character.class]}\r\n        shadow\r\n        fill={'white'}\r\n        size={size - 7}\r\n        style={{\r\n          zIndex: index || 1,\r\n          position: 'relative',\r\n          ...(iconStyle || {}),\r\n        }}\r\n      />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { CharacterIcon } from '../CharacterIcon'\r\n\r\nexport interface ImagePropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Image = (props: ImagePropsT) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n      <div>\r\n        <FlexContainer style={{ marginRight: 20, marginBottom: 10 }}>\r\n          <CharacterIcon character={character} size={100} />\r\n        </FlexContainer>\r\n      </div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { FlexContainer } from '../../elements/flex'\r\nimport { withStyle } from 'styletron-react'\r\nimport { Theme } from '../../theme'\r\n\r\nexport const Row = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    textShadow: '1px 1px 1px black',\r\n    background: props.$active ? 'rgba(255,255,255,0.2)' : undefined,\r\n    paddingLeft: '8px',\r\n    paddingTop: '2px',\r\n    paddingBottom: '2px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    cursor: 'pointer',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n    textTransform: 'capitalize',\r\n  }\r\n})\r\nexport const ActionsRow = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    padding: '4px',\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    borderTop: '1px solid black',\r\n    borderBottom: '1px solid black',\r\n    background: Theme.otherGrey,\r\n  }\r\n})\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { condenseListToStack } from '.'\r\nimport { WEAPON_TYPE_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Row, ActionsRow } from './elements'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\n\r\nexport interface WeaponListPropsT {\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n  setActiveItem: (item: tWeapon | tArmor) => void\r\n  onEquipItem?: (characterId: string, item: tWeapon | tArmor) => void\r\n}\r\n\r\nexport const WeaponList = (props: WeaponListPropsT) => {\r\n  const { character, canEquip, setActiveItem, onEquipItem } = props\r\n  const { party, sellItem, equipItem } = usePartyContext()\r\n  const [activeItemId, setActiveItemId] = useState<string | undefined>()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {condenseListToStack(\r\n        party.items\r\n          .filter((i) => i.itemType === 'weapon')\r\n          .map((i) => i as tArmor)\r\n          .sort((a, b) => a.name.localeCompare(b.name)),\r\n      ).map(({ item, count }) => {\r\n        const weapon = item as tWeapon\r\n        return (\r\n          <FlexContainer $direction='column' key={weapon.id}>\r\n            <Row\r\n              $active={weapon.id === activeItemId}\r\n              onMouseEnter={() => setActiveItem(weapon)}\r\n              onClick={(e: MouseEvent) => {\r\n                e.stopPropagation()\r\n                e.preventDefault()\r\n                setActiveItemId(weapon.id)\r\n              }}\r\n            >\r\n              <div style={{ width: 24 }}>\r\n                <Icon\r\n                  src={WEAPON_TYPE_ICONS[weapon.type || 'fist']}\r\n                  size={16}\r\n                  fill={ITEM_RARITY_COLORS[weapon.rarity]}\r\n                  style={{ marginRight: 6 }}\r\n                />\r\n              </div>\r\n              <span style={{ color: ITEM_RARITY_COLORS[weapon.rarity] }}>\r\n                {count} {weapon.name}\r\n              </span>\r\n            </Row>\r\n            {canEquip && activeItemId === weapon.id && (\r\n              <ActionsRow>\r\n                <Button\r\n                  style={{ padding: '4px 8px', marginRight: 10 }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    if (onEquipItem) {\r\n                      onEquipItem(character.id, weapon)\r\n                    } else {\r\n                      equipItem(character.id, weapon)\r\n                    }\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Equip\r\n                </Button>\r\n                <FullContainer />\r\n                <Button\r\n                  style={{ padding: '4px 8px', marginRight: 10 }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    sellItem(item.id)\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Sell Item ({item.goldValue})\r\n                </Button>\r\n                <Button\r\n                  style={{ padding: '4px 8px' }}\r\n                  onClick={() => {\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </ActionsRow>\r\n            )}\r\n          </FlexContainer>\r\n        )\r\n      })}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport Weapons from '../../icons/svg/lorc/broadsword.svg'\r\nimport Armor from '../../icons/svg/delapouite/leather-armor.svg'\r\nimport { ArmorList } from './ArmorList'\r\nimport { WeaponList } from './WeaponList'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface MenuOptionT {\r\n  key: string\r\n  icon: string\r\n  count: (character: tProcessedCharacter, party: tProcessedParty) => number\r\n  render: (\r\n    character: tProcessedCharacter,\r\n    canEquip: boolean,\r\n    setActiveItem: (item: tWeapon | tArmor) => void,\r\n  ) => JSX.Element\r\n}\r\nexport const ACTIVE_CHARACTER_MENU_KEYS: MenuOptionT[] = [\r\n  /*{\r\n    key: 'items',\r\n    icon: Items,\r\n    count: (c) => c.consumables.length,\r\n    render: (character) => <div>items</div>,\r\n  }, */\r\n  {\r\n    key: 'weapons',\r\n    icon: Weapons,\r\n    count: (c, p) => p.items.filter((i) => i.itemType === 'weapon').length,\r\n    render: (character, canEquip, setActiveItem) => (\r\n      <WeaponList\r\n        character={character}\r\n        canEquip={canEquip}\r\n        setActiveItem={setActiveItem}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    key: 'armor',\r\n    icon: Armor,\r\n    count: (c, p) => p.items.filter((i) => i.itemType === 'armor').length,\r\n    render: (character, canEquip, setActiveItem) => (\r\n      <ArmorList\r\n        character={character}\r\n        canEquip={canEquip}\r\n        setActiveItem={setActiveItem}\r\n      />\r\n    ),\r\n  },\r\n]\r\n\r\nexport interface MenuSelectPropsT {\r\n  character: tProcessedCharacter\r\n  party: tProcessedParty\r\n  activeKey: string\r\n  onActiveKeyChange: (key: string) => void\r\n}\r\n\r\nexport const MenuSelect = (props: MenuSelectPropsT) => {\r\n  const { character, party, activeKey, onActiveKeyChange } = props\r\n\r\n  return (\r\n    <FlexContainer style={{ justifyContent: 'center', marginTop: 8 }}>\r\n      {ACTIVE_CHARACTER_MENU_KEYS.map((option) => (\r\n        <Button\r\n          key={option.key}\r\n          style={{\r\n            padding: '4px 8px',\r\n            //width: 56,\r\n            fontSize: 12,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            background:\r\n              option.key === activeKey ? Theme.lightBgColor : undefined,\r\n          }}\r\n          onClick={() => {\r\n            onActiveKeyChange(option.key)\r\n          }}\r\n        >\r\n          <FullContainer\r\n            style={{ marginRight: 8, textTransform: 'capitalize' }}\r\n          >\r\n            {option.key}\r\n          </FullContainer>\r\n          <FullContainer style={{ paddingRight: 2 }}>\r\n            {option.count(character, party)}\r\n          </FullContainer>\r\n        </Button>\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { ArmorPreview } from '../ArmorPreview'\r\nimport { WeaponPreview } from '../WeaponPreview'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\n\r\nexport interface HoverAreaPropsT {\r\n  character: tProcessedCharacter\r\n  activeItem: tWeapon | tArmor\r\n}\r\n\r\nexport const HoverArea = (props: HoverAreaPropsT) => {\r\n  const { character, activeItem } = props\r\n  const foundArmor = character.armor.find(\r\n    (a) => a.resource === (activeItem as tArmor).resource,\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {activeItem.itemType === 'armor' && (\r\n        <FlexContainer>\r\n          {foundArmor && (\r\n            <ArmorPreview armor={foundArmor} showEquipButton={false} />\r\n          )}\r\n          {foundArmor?.id !== activeItem.id && (\r\n            <ArmorPreview\r\n              armor={activeItem as tArmor}\r\n              showEquipButton={false}\r\n            />\r\n          )}\r\n        </FlexContainer>\r\n      )}\r\n      {activeItem.itemType === 'weapon' && (\r\n        <FlexContainer>\r\n          <WeaponPreview\r\n            weapon={character.weapon}\r\n            showEquipButton={false}\r\n            character={character}\r\n          />\r\n          {character.weapon.id !== activeItem.id && (\r\n            <WeaponPreview\r\n              character={character}\r\n              weapon={activeItem as tWeapon}\r\n              showEquipButton={false}\r\n            />\r\n          )}\r\n        </FlexContainer>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { FlexContainer } from './flex'\r\nimport { Theme } from '../theme'\r\nimport { HoverToolTip } from '../components/Tooltip'\r\n\r\nexport interface HexagonPropsT {\r\n  color: string\r\n  size: number\r\n  style?: CSSProperties\r\n  children?: JSX.Element | string | number\r\n  childStyle?: CSSProperties\r\n}\r\nexport const Hexagon = (props: HexagonPropsT) => {\r\n  const { color, size, children, childStyle } = props\r\n  const mod = size / 100\r\n  const boxW = mod * 100\r\n  const boxH = mod * 57.74\r\n  const triH = mod * 28.8774\r\n  const triW = mod * 50\r\n  const tHeight = boxH + 2 * triH\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <div\r\n        style={{\r\n          width: 0,\r\n          borderBottom: `${triH}px solid ${color}`,\r\n          borderRight: `${triW}px solid transparent`,\r\n          borderLeft: `${triW}px solid transparent`,\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          width: `${boxW}px`,\r\n          height: `${boxH}px`,\r\n          //marginBottom: '-1px',\r\n          background: color,\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          width: 0,\r\n          borderTop: `${triH}px solid ${color}`,\r\n          borderRight: `${triW}px solid transparent`,\r\n          borderLeft: `${triW}px solid transparent`,\r\n        }}\r\n      />\r\n      <FlexContainer\r\n        $direction='column'\r\n        style={{\r\n          width: `${boxW}px`,\r\n          height: `${tHeight}px`,\r\n          position: 'absolute',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          ...(childStyle || {}),\r\n        }}\r\n      >\r\n        {children}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface HexBadgePropsT extends HexagonPropsT {\r\n  rotate?: boolean\r\n  stroke?: number\r\n  onClick?: () => void\r\n}\r\nexport const HexBadge = (props: HexBadgePropsT) => {\r\n  const {\r\n    color,\r\n    size,\r\n    style,\r\n    children,\r\n    childStyle,\r\n    onClick,\r\n    stroke = 1.2,\r\n    rotate = false,\r\n  } = props\r\n  const angle = rotate ? 30 : 0\r\n  return (\r\n    <div\r\n      style={{\r\n        transform: `rotateY(0deg) rotate(-${angle}deg)`,\r\n        ...(style || {}),\r\n      }}\r\n      onClick={onClick}\r\n    >\r\n      <Hexagon size={size} color={Theme.darkBgColorSolid}>\r\n        <Hexagon size={size - stroke * 2} color={Theme.lightBgColor}>\r\n          <Hexagon size={size - stroke * 2 - 2} color={Theme.darkBgColorSolid}>\r\n            <Hexagon\r\n              size={size - stroke * 4 - 2}\r\n              color={color}\r\n              childStyle={{\r\n                fontFamily: Theme.titleFont,\r\n                color: 'white',\r\n                fontSize: `${size - 16}px`,\r\n                paddingTop: 2,\r\n                transform: `rotateY(0deg) rotate(${angle}deg)`,\r\n                ...(childStyle || {}),\r\n              }}\r\n            >\r\n              {children}\r\n            </Hexagon>\r\n          </Hexagon>\r\n        </Hexagon>\r\n      </Hexagon>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport interface HoverBadgePropsT {\r\n  children: JSX.Element | string | number\r\n  content: JSX.Element\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n  style?: CSSProperties\r\n  childStyle?: CSSProperties\r\n  size?: number\r\n  rotate?: boolean\r\n  stroke?: number\r\n  position?: {\r\n    top?: number\r\n    bottom?: number\r\n    left?: number\r\n    right?: number\r\n  }\r\n}\r\nexport const HoverHexBadge = (props: HoverBadgePropsT) => {\r\n  const {\r\n    children,\r\n    content,\r\n    direction,\r\n    style,\r\n    childStyle,\r\n    size,\r\n    rotate,\r\n    stroke,\r\n    position,\r\n  } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        position: position ? 'absolute' : 'relative',\r\n        top: position?.top,\r\n        bottom: position?.bottom,\r\n        left: position?.left,\r\n        right: position?.right,\r\n        zIndex: 4,\r\n      }}\r\n    >\r\n      <HoverToolTip\r\n        distance={2}\r\n        direction={direction || 'right'}\r\n        content={content || <div />}\r\n      >\r\n        <HexBadge\r\n          style={style}\r\n          rotate={rotate}\r\n          stroke={stroke}\r\n          childStyle={{ ...childStyle, textShadow: '1px 1px 3px black' }}\r\n          size={size || 20}\r\n          color={Theme.badgeBgColor}\r\n        >\r\n          {children}\r\n        </HexBadge>\r\n      </HoverToolTip>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { StatBar } from './StatBar'\r\nimport { Items } from './Items'\r\nimport { Name } from './Name'\r\nimport { Image } from './Image'\r\nimport { MenuSelect, ACTIVE_CHARACTER_MENU_KEYS } from './MenuSelect'\r\nimport { HoverArea } from './HoverArea'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { Theme } from '../../theme'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { HexBadge } from '../../elements/shapes'\r\n\r\nexport interface PartyActiveCharacterPropsT {\r\n  character: tProcessedCharacter\r\n  party: tProcessedParty\r\n  canEquip: boolean\r\n  onRequestClose: () => void\r\n}\r\n\r\nexport interface ItemStackT<T> {\r\n  count: number\r\n  item: T\r\n}\r\n\r\ntype ItemT = tConsumable | tArmor | tWeapon\r\nexport const condenseListToStack = (items: ItemT[]): ItemStackT<ItemT>[] => {\r\n  let stack: ItemStackT<ItemT>[] = []\r\n  items.forEach((i) => {\r\n    if (stack.map((s) => s.item.name).includes(i.name)) {\r\n      stack = stack.map((s) =>\r\n        s.item.name === i.name ? { ...s, count: s.count + 1 } : s,\r\n      )\r\n    } else {\r\n      stack = [...stack, { item: i, count: 1 }]\r\n    }\r\n  })\r\n  return stack\r\n}\r\n\r\nexport const PartyActiveCharacter = (props: PartyActiveCharacterPropsT) => {\r\n  const { character, party, canEquip, onRequestClose } = props\r\n  const [activeMenuKey, setActiveMenuKey] = useState('armor')\r\n  const [activeItem, setActiveItem] = useState<tArmor | tWeapon | undefined>()\r\n  const activeOption = ACTIVE_CHARACTER_MENU_KEYS.find(\r\n    (o) => o.key === activeMenuKey,\r\n  )\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        justifyContent: 'flex-end',\r\n      }}\r\n    >\r\n      <HexBadge\r\n        color={Theme.healthRedColor}\r\n        size={32}\r\n        onClick={onRequestClose}\r\n        style={{\r\n          position: 'absolute',\r\n          top: -16,\r\n          right: -9,\r\n          cursor: 'pointer',\r\n          userSelect: 'none',\r\n          textShadow: '1px 1px 3px black',\r\n        }}\r\n      >\r\n        X\r\n      </HexBadge>\r\n      <FlexContainer\r\n        style={{\r\n          maxHeight: 440,\r\n          padding: 10,\r\n          position: 'absolute',\r\n          left: '-6px',\r\n          width: 486,\r\n          justifyContent: 'flex-end',\r\n          zIndex: 1,\r\n        }}\r\n      >\r\n        {activeItem && (\r\n          <HoverArea character={character} activeItem={activeItem} />\r\n        )}\r\n      </FlexContainer>\r\n      <BoxContainer substyle={{ background: Theme.darkBgColor, padding: 0 }}>\r\n        <FlexContainer $direction='column'>\r\n          <Name name={character.name} />\r\n          <StatBar character={character} />\r\n          <BoxContainer\r\n            substyle={{\r\n              background: Theme.darkBgColor,\r\n              padding: '16px 0 2px 0',\r\n            }}\r\n          >\r\n            <FlexContainer>\r\n              <Items character={character} setActiveItem={setActiveItem} />\r\n              <Image character={character} />\r\n            </FlexContainer>\r\n            <MenuSelect\r\n              character={character}\r\n              party={party}\r\n              activeKey={activeMenuKey}\r\n              onActiveKeyChange={setActiveMenuKey}\r\n            />\r\n          </BoxContainer>\r\n          <BoxContainer\r\n            substyle={{\r\n              background: Theme.darkBgColor,\r\n              padding: '4px 0',\r\n              height: 200,\r\n              overflow: 'auto',\r\n            }}\r\n          >\r\n            {activeOption &&\r\n              activeOption.render(character, canEquip, setActiveItem)}\r\n          </BoxContainer>\r\n        </FlexContainer>\r\n      </BoxContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { ARMOR_TYPE_ICONS } from '../../icons/maps'\r\nimport { Button } from '../../elements/button'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { condenseListToStack } from '.'\r\nimport { Row, ActionsRow } from './elements'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\n\r\nexport interface ArmorListPropsT {\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n  setActiveItem: (item: tWeapon | tArmor) => void\r\n  onEquipItem?: (characterId: string, item: tWeapon | tArmor) => void\r\n}\r\n\r\nexport const ArmorList = (props: ArmorListPropsT) => {\r\n  const { character, canEquip, setActiveItem, onEquipItem } = props\r\n  const { party, sellItem, equipItem } = usePartyContext()\r\n  const [activeItemId, setActiveItemId] = useState<string | undefined>()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {condenseListToStack(\r\n        party.items\r\n          .filter((i) => i.itemType === 'armor')\r\n          .map((i) => i as tArmor)\r\n          .sort((a, b) => a.name.localeCompare(b.name)),\r\n      ).map(({ item, count }) => {\r\n        const armor = item as tArmor\r\n        return (\r\n          <FlexContainer key={armor.id} $direction='column'>\r\n            <Row\r\n              $active={item.id === activeItemId}\r\n              onMouseEnter={() => setActiveItem(armor)}\r\n              onClick={(e: MouseEvent) => {\r\n                e.stopPropagation()\r\n                e.preventDefault()\r\n                setActiveItemId(armor.id)\r\n              }}\r\n            >\r\n              <div style={{ width: 24 }}>\r\n                <Icon\r\n                  src={ARMOR_TYPE_ICONS[armor.type]}\r\n                  size={16}\r\n                  style={{ marginRight: 10 }}\r\n                  fill={ITEM_RARITY_COLORS[armor.rarity]}\r\n                  shadow\r\n                />\r\n              </div>\r\n              <span style={{ color: ITEM_RARITY_COLORS[armor.rarity] }}>\r\n                {count} {armor.name}\r\n              </span>\r\n            </Row>\r\n            {canEquip && activeItemId === armor.id && (\r\n              <ActionsRow>\r\n                <Button\r\n                  style={{ padding: '4px 8px', marginRight: 10 }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    if (onEquipItem) {\r\n                      onEquipItem(character.id, armor)\r\n                    } else {\r\n                      equipItem(character.id, armor)\r\n                    }\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Equip\r\n                </Button>\r\n                <FullContainer />\r\n                <Button\r\n                  style={{ padding: '4px 8px', marginRight: 10 }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    sellItem(item.id)\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Sell Item ({item.goldValue})\r\n                </Button>\r\n                <Button\r\n                  style={{ padding: '4px 8px' }}\r\n                  onClick={() => {\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </ActionsRow>\r\n            )}\r\n          </FlexContainer>\r\n        )\r\n      })}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Theme } from '../../theme'\r\nimport { ArmorList } from '../PartyActiveCharacter/ArmorList'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { WeaponList } from '../PartyActiveCharacter/WeaponList'\r\n\r\nexport interface EquipItemModalPropsT {\r\n  equipItemCombat: (characterId: string, item: tWeapon | tArmor) => void\r\n}\r\n\r\nexport const EquipItemModal = (props: EquipItemModalPropsT) => {\r\n  const { equipItemCombat } = props\r\n  const { activeCharacter } = useCombatContext()\r\n  const { close } = useModalContext()\r\n  const onEquipItem = (characterId: string, item: tWeapon | tArmor) => {\r\n    equipItemCombat(characterId, item)\r\n    close()\r\n  }\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ maxHeight: 300, overflow: 'auto' }}\r\n    >\r\n      <h3 style={{ margin: 0, marginBottom: 32, fontFamily: Theme.titleFont }}>\r\n        Choose an Item\r\n      </h3>\r\n      <WeaponList\r\n        character={activeCharacter}\r\n        setActiveItem={() => {}}\r\n        canEquip={true}\r\n        onEquipItem={onEquipItem}\r\n      />\r\n      <ArmorList\r\n        character={activeCharacter}\r\n        setActiveItem={() => {}}\r\n        canEquip={true}\r\n        onEquipItem={onEquipItem}\r\n      />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { Button } from '../../elements/button'\r\nimport { SkillPreview } from '../SkillPreview'\r\nimport { SkillChecks } from '../SkillChecks'\r\nimport { SKILL_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Hover } from '../Hover'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { Theme } from '../../theme'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { EquipItemModal } from '../EquipItemModal'\r\nimport Inventory from '../../icons/svg/lorc/knapsack.svg'\r\nimport { HEAL, REMOVE_CURSES } from '../../game/Skill/skills/consumables'\r\nimport { hasAnyStatus, hasStatus } from '../../game/Character/util'\r\nimport { CURE_POTION } from '../../game/Consumable/objects/curing_potion'\r\n\r\nexport const CombatActions = () => {\r\n  const {\r\n    party,\r\n    activeCharacter,\r\n    selectedSkill,\r\n    selectedTargets,\r\n    onSkillSelect,\r\n    equipItemCombat,\r\n  } = useCombatContext()\r\n  const { open } = useModalContext()\r\n\r\n  if (!activeCharacter || activeCharacter.partyId !== PLAYER_PARTY_ID)\r\n    return null\r\n\r\n  const stat = selectedSkill?.weaponStatOverride || activeCharacter.weapon.stat\r\n  const skills = activeCharacter.skills.filter((skill) => {\r\n    if (activeCharacter.healthOffset === 0 && skill.id === HEAL.id) {\r\n      return false\r\n    }\r\n    if (\r\n      !hasAnyStatus(activeCharacter, [\r\n        'cursed-agility',\r\n        'cursed-charisma',\r\n        'cursed-dexterity',\r\n        'cursed-intelligence',\r\n        'cursed-luck',\r\n        'cursed-strength',\r\n        'cursed-vigor',\r\n      ]) &&\r\n      skill.id === REMOVE_CURSES.id\r\n    ) {\r\n      return false\r\n    }\r\n    if (\r\n      !hasAnyStatus(activeCharacter, [\r\n        'bleeding',\r\n        'burning',\r\n        'frozen',\r\n        'poisoned',\r\n      ]) &&\r\n      skill.id === CURE_POTION().skill.id\r\n    ) {\r\n      return false\r\n    }\r\n    return true\r\n  })\r\n  return (\r\n    <FlexContainer $direction='column' style={{ minWidth: 340 }}>\r\n      {selectedSkill && <SkillChecks stat={stat} skill={selectedSkill} />}\r\n      <FlexContainer style={{ justifyContent: 'center', minHeight: 42 }}>\r\n        {skills.map((skill) => (\r\n          <React.Fragment key={skill.id}>\r\n            {SKILL_ICONS[skill.name] ? (\r\n              <Hover delay={0}>\r\n                {({ isHovering }) => (\r\n                  <Icon\r\n                    src={SKILL_ICONS[skill.name]}\r\n                    size={42}\r\n                    shadow={true}\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      padding: '0 12px',\r\n                    }}\r\n                    onClick={() => {\r\n                      onSkillSelect(skill)\r\n                    }}\r\n                    fill={\r\n                      skill.id === selectedSkill?.id\r\n                        ? 'lightsalmon'\r\n                        : isHovering\r\n                        ? 'white'\r\n                        : 'rgba(255,255,255,0.8)'\r\n                    }\r\n                  />\r\n                )}\r\n              </Hover>\r\n            ) : (\r\n              <Button\r\n                key={skill.id}\r\n                onClick={() => onSkillSelect(skill)}\r\n                style={{\r\n                  background: Theme.darkBgColor,\r\n                  borderColor:\r\n                    selectedSkill && skill.id === selectedSkill.id\r\n                      ? 'white'\r\n                      : undefined,\r\n                }}\r\n              >\r\n                {skill.name}\r\n              </Button>\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n        {party.items.length > 0 && (\r\n          <Hover delay={0}>\r\n            {({ isHovering }) => (\r\n              <Icon\r\n                src={Inventory}\r\n                size={42}\r\n                shadow={true}\r\n                style={{\r\n                  cursor: 'pointer',\r\n                  padding: '0 12px',\r\n                }}\r\n                onClick={() =>\r\n                  open(<EquipItemModal equipItemCombat={equipItemCombat} />)\r\n                }\r\n                fill={isHovering ? 'white' : 'rgba(255,255,255,0.8)'}\r\n              />\r\n            )}\r\n          </Hover>\r\n        )}\r\n      </FlexContainer>\r\n      {selectedSkill && (\r\n        <SkillPreview\r\n          skill={selectedSkill}\r\n          source={activeCharacter}\r\n          targets={selectedTargets}\r\n        />\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport const Monospace = styled('span', () => ({\r\n  fontFamily: 'Inconsolata, monospace',\r\n  fontWeight: 600,\r\n}))\r\nexport const Monodiv = styled('div', () => ({\r\n  fontFamily: 'Inconsolata, monospace',\r\n  fontWeight: 600,\r\n}))\r\n","import { GaugePropsT } from '.'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { FullContainer } from '../../elements/flex'\r\n\r\nexport const Gauge2 = (props: GaugePropsT) => {\r\n  const { name = '', value, color, height = 30, children, style } = props\r\n  const max = props.max < 1 ? 1 : props.max\r\n  const p = (value / max) * 100\r\n  const percentage = p > 100 ? 100 : p\r\n  const [oldPercentage, setOldPercentage] = useState(percentage)\r\n  useEffect(() => {\r\n    setOldPercentage(percentage)\r\n  }, [percentage])\r\n  return (\r\n    <BoxContainer\r\n      style={{ borderLeft: 'none', ...(style || {}) }}\r\n      substyle={{\r\n        padding: 0,\r\n        background: 'rgba(80,80,85,1)',\r\n        height: height - 2,\r\n        position: 'relative',\r\n        border: 'none',\r\n      }}\r\n    >\r\n      <Spring\r\n        from={{ value: oldPercentage || 0 }}\r\n        to={{ value: percentage }}\r\n        config={{ friction: 200, mass: 4, tension: 600 }}\r\n      >\r\n        {(p) => (\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              left: 0,\r\n              boxSizing: 'border-box',\r\n              height: height - 2,\r\n              maxWidth: `${p.value}%`,\r\n              minWidth: `${p.value}%`,\r\n              boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n              backgroundColor: 'rgba(255,255,255,0.5)',\r\n            }}\r\n          ></div>\r\n        )}\r\n      </Spring>\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          left: 0,\r\n          boxSizing: 'border-box',\r\n          height: height - 2,\r\n          maxWidth: `${percentage}%`,\r\n          minWidth: `${percentage}%`,\r\n          boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n          textShadow: '1px 1px 3px black',\r\n          backgroundColor: color,\r\n        }}\r\n      ></div>\r\n      <FullContainer\r\n        style={{\r\n          position: 'absolute',\r\n          height,\r\n          lineHeight: `${height - 2}px`,\r\n          right: 4,\r\n          top: 0,\r\n          fontSize: 12,\r\n          overflow: 'hidden',\r\n          textShadow: '0px 0px 3px black',\r\n          color: 'rgba(255,255,255,0.8)',\r\n        }}\r\n      >\r\n        <div>{children}</div>\r\n      </FullContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FullContainer } from '../../elements/flex'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { Monodiv } from '../../elements/monospace'\r\nimport { noneg } from '../../util'\r\nimport { usePrevious } from '../../hooks/usePrevious'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { CHARACTER_XP_MAX } from '../../game/Character/constants'\r\nimport { Gauge2 } from './v2'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface GaugePropsT {\r\n  name?: string\r\n  color: string\r\n  height?: number\r\n  max: number\r\n  value: number\r\n  style?: CSSProperties\r\n  children?: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const Gauge = (props: GaugePropsT) => {\r\n  const { name = '', value, color, height = 30, children, style } = props\r\n  const max = props.max < 1 ? 1 : props.max\r\n  const p = (value / max) * 100\r\n  const percentage = p > 100 ? 100 : p\r\n  const oldPercentage = usePrevious(percentage)\r\n  return (\r\n    <HoverToolTip\r\n      direction='right'\r\n      content={<BoxContainer>{`${name} (${value} / ${max})`}</BoxContainer>}\r\n    >\r\n      <BoxContainer\r\n        style={{\r\n          borderLeft: 'none',\r\n          background: Theme.darkBgColorSolid,\r\n          ...(style || {}),\r\n        }}\r\n        substyle={{\r\n          padding: 0,\r\n          background: 'rgba(255,255,255,0.2)',\r\n          height: height - 2,\r\n          position: 'relative',\r\n          border: 'none',\r\n        }}\r\n      >\r\n        <Spring\r\n          from={{ value: oldPercentage || 0 }}\r\n          to={{ value: percentage }}\r\n          config={{ friction: 70, mass: 5, tension: 300 }}\r\n        >\r\n          {(p) => (\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                left: 0,\r\n                boxSizing: 'border-box',\r\n                height: height - 2,\r\n                maxWidth: `${p.value}%`,\r\n                minWidth: `${p.value}%`,\r\n                boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n                textShadow: '1px 1px 1px black',\r\n                backgroundColor: color,\r\n                color: 'white',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n            ></div>\r\n          )}\r\n        </Spring>\r\n        <FullContainer\r\n          style={{\r\n            position: 'absolute',\r\n            height,\r\n            lineHeight: `${height - 2}px`,\r\n            right: 4,\r\n            top: 0,\r\n            fontSize: 10,\r\n            fontWeight: 'bold',\r\n            overflow: 'hidden',\r\n            textShadow: '0px 0px 3px black',\r\n          }}\r\n        >\r\n          <Monodiv>{children}</Monodiv>\r\n        </FullContainer>\r\n      </BoxContainer>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface HealthGaugePropsT {\r\n  character: tProcessedCharacter\r\n  height?: number\r\n  style?: CSSProperties\r\n  showNumbers?: boolean\r\n}\r\nexport const HealthGauge = (props: HealthGaugePropsT) => {\r\n  const { character, height = 16, style, showNumbers = true } = props\r\n  const health = noneg(character.health)\r\n  return (\r\n    <Gauge2\r\n      name='Health'\r\n      color={Theme.healthRedColor}\r\n      max={character.maxHealth}\r\n      value={health}\r\n      height={height}\r\n      style={style}\r\n    >\r\n      {showNumbers && (\r\n        <span>\r\n          {health}/{character.maxHealth}\r\n        </span>\r\n      )}\r\n    </Gauge2>\r\n  )\r\n}\r\nexport interface XPGaugePropsT {\r\n  character: tProcessedCharacter\r\n  style?: CSSProperties\r\n  showNumber?: boolean\r\n}\r\nexport const XPGauge = (props: HealthGaugePropsT) => {\r\n  const { character, style } = props\r\n  const value = character.experience\r\n  const max = CHARACTER_XP_MAX[character.level]\r\n  return (\r\n    <Gauge2\r\n      name='XP'\r\n      color='#5e8575'\r\n      max={max}\r\n      value={value}\r\n      height={16}\r\n      style={style}\r\n    >\r\n      {value}/{max}\r\n    </Gauge2>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Tooltip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STATUS_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { tStatus } from '../../game/Status/type'\r\nimport { STATUS_CONFIG } from '../../game/Status/constants'\r\n\r\nexport interface TagPreviewPropsT {\r\n  status: tStatus\r\n  immunity?: boolean\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n}\r\nexport const TagPreview = (props: TagPreviewPropsT) => {\r\n  const { status, direction, immunity } = props\r\n  const statusConfig = STATUS_CONFIG[status.type]\r\n  return (\r\n    <Tooltip\r\n      direction={direction || 'bottom'}\r\n      content={\r\n        <BoxContainer style={{ maxWidth: 200 }}>\r\n          <FlexContainer $direction='column'>\r\n            <strong style={{ marginBottom: statusConfig.description ? 8 : 0 }}>\r\n              {status.type} {immunity && 'immunity'}{' '}\r\n              {status.duration > 0 ? `(${status.duration})` : ''}\r\n            </strong>\r\n            {statusConfig.description && (\r\n              <>{!immunity && <span>{statusConfig.description}</span>}</>\r\n            )}\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n      }\r\n    >\r\n      <Icon\r\n        shadow\r\n        src={STATUS_ICONS[status.type] || ''}\r\n        size={20}\r\n        fill={immunity ? 'white' : 'Violet'}\r\n        style={{ marginLeft: 4 }}\r\n      />\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { tProcessedCharacter } from '../game/Character/type'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { Theme } from '../theme'\r\nimport { hasImmunity } from '../game/Character/util'\r\n\r\nexport const usePlayerCharacterNotifications = (\r\n  character: tProcessedCharacter,\r\n  push: (c: JSX.Element, type?: string) => void,\r\n  shake: () => void,\r\n) => {\r\n  const health = character.health\r\n  const level = character.level\r\n  const { roundResults } = useCombatContext()\r\n  const [previousHealth, setPreviousHealth] = useState(health)\r\n  const [previousLevel, setPreviousLevel] = useState(level)\r\n  useEffect(() => {\r\n    const healthDiff = previousHealth - health\r\n    if (healthDiff > 0) {\r\n      push(<span style={{ fontFamily: Theme.titleFont }}>- {healthDiff}</span>)\r\n      shake()\r\n    }\r\n    if (healthDiff < 0) {\r\n      push(\r\n        <span style={{ fontFamily: Theme.titleFont }}>\r\n          + {Math.abs(healthDiff)}\r\n        </span>,\r\n        'good',\r\n      )\r\n    }\r\n    if (level > previousLevel) {\r\n      push(\r\n        <span style={{ fontFamily: Theme.titleFont, fontSize: 36 }}>\r\n          Level Up!\r\n        </span>,\r\n        'good',\r\n      )\r\n    }\r\n    setPreviousLevel(level)\r\n    setPreviousHealth(health)\r\n  }, [health, level])\r\n\r\n  useEffect(() => {\r\n    const lastRound = roundResults[roundResults.length - 1]\r\n    if (lastRound) {\r\n      if (\r\n        lastRound.sourceResult.weaponDidBreak &&\r\n        lastRound.sourceResult.source.id === character.id\r\n      ) {\r\n        push(\r\n          <span style={{ fontFamily: Theme.titleFont, fontSize: 36 }}>\r\n            Weapon Break!\r\n          </span>,\r\n        )\r\n      }\r\n      const chResult = lastRound.targetResults.find(\r\n        (r) => r.target.id === character.id,\r\n      )\r\n      if (chResult) {\r\n        if (chResult.dodgeSuccess) {\r\n          push(\r\n            <span style={{ fontFamily: Theme.titleFont }}>Dodged!</span>,\r\n            'base',\r\n          )\r\n        }\r\n        if (\r\n          !chResult.dodgeSuccess &&\r\n          chResult.accuracySuccess &&\r\n          chResult.skill.damage &&\r\n          chResult.loggedDamgge.value <= 0\r\n        ) {\r\n          push(\r\n            <span style={{ fontFamily: Theme.titleFont }}>Blocked!</span>,\r\n            'base',\r\n          )\r\n        }\r\n        if (chResult.addedStatus.length > 0) {\r\n          chResult.addedStatus.forEach((status) => {\r\n            if (hasImmunity(character, status)) {\r\n              push(\r\n                <span style={{ fontFamily: Theme.titleFont }}>Immune</span>,\r\n                'base',\r\n              )\r\n            } else {\r\n              push(\r\n                <span\r\n                  style={{\r\n                    textTransform: 'capitalize',\r\n                    fontFamily: Theme.titleFont,\r\n                  }}\r\n                >\r\n                  {status}\r\n                </span>,\r\n                'base',\r\n              )\r\n            }\r\n          })\r\n        }\r\n        if (chResult.perfect && chResult.skill.perfectPierce) {\r\n          push(\r\n            <span style={{ fontFamily: Theme.titleFont }}>Pierced!</span>,\r\n            'base',\r\n          )\r\n        }\r\n        if (chResult.criticalHitSuccess && chResult.skill.damage) {\r\n          push(\r\n            <span style={{ fontFamily: Theme.titleFont }}>Critical!</span>,\r\n            'base',\r\n          )\r\n        }\r\n      }\r\n      if (\r\n        lastRound.sourceResult.source.id === character.id &&\r\n        !lastRound.sourceResult.accuracySuccess\r\n      ) {\r\n        push(\r\n          <span style={{ fontFamily: Theme.titleFont }}>Missed!</span>,\r\n          'base',\r\n        )\r\n      }\r\n    }\r\n  }, [roundResults])\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { noneg } from '../../util'\r\nimport { usePlayerCharacterNotifications } from '../../hooks/usePlayerCharacterNotifications'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface HealthPropsT {\r\n  character: tProcessedCharacter\r\n  push: (content: JSX.Element, type?: string) => void\r\n}\r\nexport const Health = (props: HealthPropsT) => {\r\n  const { character, push } = props\r\n  const health = noneg(character.health)\r\n  const [previousHealth, setPreviousHealth] = useState(character.health)\r\n  usePlayerCharacterNotifications(character, push, () => {})\r\n\r\n  useEffect(() => {\r\n    setPreviousHealth(health)\r\n  }, [health])\r\n\r\n  return (\r\n    <span\r\n      style={{\r\n        fontSize: 64,\r\n        height: 64,\r\n        width: 60,\r\n        textShadow: '1px 1px 10px black',\r\n        color: Theme.healthRedColor,\r\n        fontFamily: 'New Rocker',\r\n        userSelect: 'none',\r\n      }}\r\n    >\r\n      <Spring\r\n        from={{ hp: previousHealth || 0 }}\r\n        to={{ hp: health }}\r\n        config={{ friction: 70, mass: 5, tension: 300, clamp: true }}\r\n      >\r\n        {(hpp) => <span>{Math.floor(hpp.hp)}</span>}\r\n      </Spring>\r\n    </span>\r\n  )\r\n}\r\n","import React, { useContext, useState, useEffect, CSSProperties } from 'react'\r\nimport { animated, useTransition } from 'react-spring'\r\nimport { FullContainer } from '../../elements/flex'\r\nimport { v4 } from 'uuid'\r\n\r\nexport interface LocalToastContextT {\r\n  push: (content: JSX.Element) => void\r\n}\r\nexport const defaultValue: LocalToastContextT = {\r\n  push: (content) => {},\r\n}\r\nexport const LocalToastContext = React.createContext<LocalToastContextT>(\r\n  defaultValue,\r\n)\r\nexport const useLocalToast = () => useContext(LocalToastContext)\r\n\r\nexport interface LocalToastProviderProps {\r\n  children: JSX.Element\r\n}\r\nexport const LocalToastProvider = (props: LocalToastProviderProps) => {\r\n  const { children } = props\r\n  const [queue, setQueue] = useState<\r\n    {\r\n      id: string\r\n      content: JSX.Element\r\n    }[]\r\n  >([])\r\n\r\n  useEffect(() => {\r\n    const i = setInterval(() => {\r\n      setQueue((q) => {\r\n        const [f, ...rest] = q\r\n        return rest || []\r\n      })\r\n    }, 3000)\r\n    return () => {\r\n      clearInterval(i)\r\n    }\r\n  }, [])\r\n\r\n  const push = (c: JSX.Element, type?: string) => {\r\n    setQueue((q) => [\r\n      ...q,\r\n      {\r\n        id: v4(),\r\n        content: c,\r\n        type,\r\n      },\r\n    ])\r\n  }\r\n\r\n  return (\r\n    <LocalToastContext.Provider value={{ push }}>\r\n      <>\r\n        <div style={{ position: 'relative' }}>\r\n          <Toast queue={queue} />\r\n        </div>\r\n        {children}\r\n      </>\r\n    </LocalToastContext.Provider>\r\n  )\r\n}\r\n\r\ninterface ToastQT {\r\n  id: string\r\n  type?: string\r\n  content: JSX.Element\r\n}\r\nexport interface ToastPropsT {\r\n  queue: ToastQT[]\r\n  style?: CSSProperties\r\n}\r\nexport const Toast = (props: ToastPropsT) => {\r\n  const { queue, style } = props\r\n  const hasChildren = queue.length > 0\r\n  const animation = useTransition(queue, (q) => q.id, {\r\n    from: {\r\n      transform: 'translate3d(0,40px,0)',\r\n      maxWidth: 0,\r\n      maxHeight: 0,\r\n      opacity: 0,\r\n    },\r\n    enter: {\r\n      transform: 'translate3d(0,0px,0)',\r\n      maxWidth: 180,\r\n      maxHeight: 40,\r\n      opacity: 1,\r\n    },\r\n    leave: {\r\n      transform: 'translate3d(0,-80px,0)',\r\n      maxWidth: 0,\r\n      maxHeight: 0,\r\n      opacity: 0,\r\n    },\r\n  })\r\n\r\n  return (\r\n    <animated.div\r\n      style={{\r\n        position: 'absolute',\r\n        width: '100%',\r\n        display: 'flex',\r\n        height: 0,\r\n        top: -24,\r\n        zIndex: 3,\r\n        ...(style || {}),\r\n      }}\r\n    >\r\n      {animation.map((item) => (\r\n        <animated.div\r\n          key={item.key}\r\n          style={{\r\n            display: 'flex',\r\n            ...item.props,\r\n          }}\r\n        >\r\n          <FullContainer />\r\n          <div\r\n            style={{\r\n              marginBottom: 4,\r\n              marginRight: 4,\r\n              fontSize: 20,\r\n              padding: 2,\r\n              lineHeight: '20px',\r\n              whiteSpace: 'nowrap',\r\n              background:\r\n                'radial-gradient(circle, rgba(0,0,0,0.3) 0%, rgba(0,0,0,0) 100%)',\r\n              ...color(item.item.type),\r\n            }}\r\n          >\r\n            {item.item.content}\r\n          </div>\r\n          <FullContainer />\r\n        </animated.div>\r\n      ))}\r\n    </animated.div>\r\n  )\r\n}\r\n\r\nexport interface LocalToastRpPropsT {\r\n  children: (props: LocalToastContextT) => JSX.Element\r\n  style?: CSSProperties\r\n}\r\nexport const LocalToastRp = (props: LocalToastRpPropsT) => {\r\n  const { children, style } = props\r\n  const [queue, setQueue] = useState<ToastQT[]>([])\r\n\r\n  const push = (c: JSX.Element, type?: string) => {\r\n    setQueue((q) => [\r\n      ...q,\r\n      {\r\n        id: v4(),\r\n        content: c,\r\n        type,\r\n      },\r\n    ])\r\n    setTimeout(() => {\r\n      setQueue((q) => {\r\n        const [f, ...rest] = q\r\n        return rest || []\r\n      })\r\n    }, 4000)\r\n  }\r\n  return (\r\n    <>\r\n      <div style={{ position: 'relative' }}>\r\n        <Toast queue={queue} style={style} />\r\n      </div>\r\n      {children({ push })}\r\n    </>\r\n  )\r\n}\r\n\r\nconst color = (type: string | undefined) => {\r\n  switch (type) {\r\n    case 'good':\r\n      return {\r\n        color: '#aae6bf',\r\n        textShadow: '0px 3px 1px rgba(0,0,0,0.5)',\r\n      }\r\n    case 'base':\r\n      return {\r\n        color: 'rgba(255,255,255,0.8)',\r\n        textShadow: '0px 3px 1px rgba(0,0,0,0.5)',\r\n      }\r\n    default:\r\n      return {\r\n        // color: 'rgba(219, 114, 114, 0.8)',\r\n        // color: 'red',\r\n        color: 'rgba(255,158,158,0.8)',\r\n        textShadow: '0px 3px 1px rgba(0,0,0,1)',\r\n      }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { HealthGauge } from '../Gauge'\r\nimport { styled } from 'styletron-react'\r\nimport { HoverBadge } from '../../elements/badge'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { TagPreview } from '../TagPreview'\r\nimport { noneg } from '../../util'\r\nimport { Icon } from '../Icon'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Health } from './Health'\r\nimport { LocalToastRp } from '../../contexts/LocalToastContext'\r\nimport { ZERO_STATS } from '../../game/Stats/constants'\r\nimport { Theme } from '../../theme'\r\nimport { HoverHexBadge } from '../../elements/shapes'\r\n\r\nexport interface EnemyCharacterPropsT {\r\n  character: tProcessedCharacter\r\n  activeCharacter: tProcessedCharacter\r\n  hoverable?: boolean\r\n  selected?: boolean\r\n  isHovering?: boolean\r\n  isBoss?: boolean\r\n  onClick?: () => void\r\n}\r\nconst Wrapper = styled('div', (props: any) => {\r\n  const { $selected, $active } = props\r\n  return {\r\n    margin: 10,\r\n    boxShadow: $active ? '0px 0px 20px white' : 'none',\r\n    transition: 'all 0.1s',\r\n  }\r\n})\r\nexport const EnemyCharacter = (props: EnemyCharacterPropsT) => {\r\n  const { character, activeCharacter, isBoss = false, onClick } = props\r\n  const health = noneg(character.health)\r\n  const active = activeCharacter?.id === character?.id\r\n  return (\r\n    <div\r\n      onClick={() => (onClick && character.health > 0 ? onClick() : null)}\r\n      style={{\r\n        borderWidth: 2,\r\n        width: isBoss ? 600 : 320,\r\n        position: 'relative',\r\n        cursor: onClick ? 'pointer' : 'default',\r\n        color: 'rgba(255,255,255,0.8)',\r\n        opacity: character.health <= 0 ? 0.5 : 1,\r\n        transition: 'all 0.4s',\r\n        transform: active ? 'scale(1.05)' : 'scale(0.95)',\r\n      }}\r\n    >\r\n      <FlexContainer style={{ alignItems: 'center' }}>\r\n        <FlexContainer>\r\n          <Icon\r\n            src={character.icon || ''}\r\n            shadow\r\n            fill={\r\n              activeCharacter && character.id === activeCharacter.id\r\n                ? 'lightsalmon'\r\n                : 'white'\r\n            }\r\n            size={64}\r\n            style={{ zIndex: 1, position: 'relative', marginRight: -24 }}\r\n          />\r\n        </FlexContainer>\r\n        <FlexContainer $full $direction='column'>\r\n          <FlexContainer\r\n            style={{\r\n              justifyContent: 'flex-end',\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                padding: '2px 4px',\r\n                textAlign: 'right',\r\n                fontSize: 18,\r\n                lineHeight: '18px',\r\n                background: 'rgba(0,0,0,0.4)',\r\n                textShadow: '1px 1px 2px black',\r\n                fontFamily: Theme.titleFont,\r\n                color: isBoss ? 'red' : 'rgba(255,255,255,0.8)',\r\n              }}\r\n            >\r\n              {character.name}\r\n            </span>\r\n          </FlexContainer>\r\n          <div style={{ boxShadow: '0px 4px 15px rgba(0,0,0,1)' }}>\r\n            <HealthGauge\r\n              character={character}\r\n              height={20}\r\n              showNumbers={false}\r\n            />\r\n          </div>\r\n          <HoverHexBadge\r\n            direction='down'\r\n            content={<BoxContainer>Enemy Level</BoxContainer>}\r\n            position={{\r\n              left: -6,\r\n              bottom: -12,\r\n            }}\r\n            size={32}\r\n            childStyle={{\r\n              color: 'lightcoral',\r\n              paddingTop: 1,\r\n            }}\r\n          >\r\n            {character.level}\r\n          </HoverHexBadge>\r\n          <FlexContainer\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: '-12px',\r\n              left: '40px',\r\n            }}\r\n          >\r\n            {character.status.map((status, i) => (\r\n              <TagPreview key={i} status={status} />\r\n            ))}\r\n            {character.immunities.map((status, i) => (\r\n              <TagPreview\r\n                key={i}\r\n                immunity={true}\r\n                status={{\r\n                  type: status,\r\n                  immunities: [],\r\n                  stack: 0,\r\n                  stats: ZERO_STATS,\r\n                  duration: -1,\r\n                }}\r\n              />\r\n            ))}\r\n          </FlexContainer>\r\n          <FlexContainer\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: '-22px',\r\n              left: 'calc(100% - 58px)',\r\n              alignItems: 'center',\r\n              justifyContent: 'flex-start',\r\n            }}\r\n          >\r\n            {character.stats.armor > 0 && (\r\n              <HoverHexBadge\r\n                direction='down'\r\n                content={<BoxContainer>Armor</BoxContainer>}\r\n                size={28}\r\n                childStyle={{\r\n                  color: Theme.physicalColor,\r\n                  paddingTop: 1,\r\n                }}\r\n              >\r\n                <span>{character.stats.armor}</span>\r\n              </HoverHexBadge>\r\n            )}\r\n            {character.stats.resistance > 0 && (\r\n              <HoverHexBadge\r\n                direction='down'\r\n                content={<BoxContainer>Magic Resistance</BoxContainer>}\r\n                size={28}\r\n                childStyle={{\r\n                  color: Theme.magicColor,\r\n                  paddingTop: 1,\r\n                }}\r\n              >\r\n                <span>{character.stats.resistance}</span>\r\n              </HoverHexBadge>\r\n            )}\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n        <LocalToastRp style={{ top: -24, right: -30, flexDirection: 'column' }}>\r\n          {({ push }) => <Health character={character} push={push} />}\r\n        </LocalToastRp>\r\n      </FlexContainer>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { RedButton } from '../../elements/button'\r\nimport { EnemyCharacter } from '../EnemyCharacter'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\n\r\nexport interface CombatPartyPropsT {\r\n  party: tProcessedParty\r\n}\r\nexport const CombatParty = (props: CombatPartyPropsT) => {\r\n  const { party } = props\r\n  const { activeCharacter, selectedSkill, next } = useCombatContext()\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { setShowSkillTooltips } = useUIContext()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          padding: '0 120px',\r\n          cursor: selectedSkill?.targetType === 'group' ? 'pointer' : 'default',\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <div key={c.id}>\r\n            <EnemyCharacter\r\n              activeCharacter={activeCharacter}\r\n              character={c}\r\n              isBoss={currentEncounter?.type === 'boss'}\r\n            />\r\n            {selectedSkill &&\r\n              selectedSkill.targetType === 'single' &&\r\n              c.health > 0 &&\r\n              activeCharacter.partyId === PLAYER_PARTY_ID && (\r\n                <FlexContainer\r\n                  style={{ justifyContent: 'center', marginTop: -11 }}\r\n                >\r\n                  <div\r\n                    style={{ boxShadow: '0px 2px 5px black', marginTop: -2 }}\r\n                  >\r\n                    <RedButton\r\n                      onClick={() => {\r\n                        next(c)\r\n                        setShowSkillTooltips(false)\r\n                      }}\r\n                      $direction='down'\r\n                    >\r\n                      Attack\r\n                    </RedButton>\r\n                  </div>\r\n                </FlexContainer>\r\n              )}\r\n          </div>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && selectedSkill.targetType === 'group' && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n            <RedButton\r\n              onClick={() => {\r\n                next(party)\r\n                setShowSkillTooltips(false)\r\n              }}\r\n            >\r\n              Attack Group\r\n            </RedButton>\r\n          </div>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface AppHeaderPropsT {\r\n  children?: JSX.Element\r\n  left?: JSX.Element\r\n  right?: JSX.Element\r\n}\r\n\r\nexport const AppHeader = (props: AppHeaderPropsT) => {\r\n  const { children, left, right } = props\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'center',\r\n          background: Theme.darkBgColorSolid,\r\n          height: 52,\r\n          borderBottom: '2px solid rgba(255,255,255,0.3)',\r\n          boxShadow: '1px 1px 1px black',\r\n        }}\r\n      >\r\n        <FlexContainer $full>{left}</FlexContainer>\r\n        <FlexContainer $full>{children}</FlexContainer>\r\n        <FlexContainer $full>{right}</FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport Gold from '../../icons/svg/delapouite/coins.svg'\r\nimport { Icon } from '../Icon'\r\n\r\nexport const PartyResources = () => {\r\n  const { party } = usePartyContext()\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{ alignItems: 'center', paddingRight: 20, color: '#ded9a6' }}\r\n    >\r\n      <Icon src={Gold} size={18} style={{ marginRight: 8 }} fill='#ded9a6' />\r\n      {party.gold}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { AppHeader } from '../AppHeader'\r\nimport { PartyResources } from '../PartyResources'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { tQueue } from '../../game/Queue/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { getMax, getFirst, getSortedIds } from '../../game/Queue/util'\r\nimport { Theme } from '../../theme'\r\nimport { CharacterIcon } from '../CharacterIcon'\r\n\r\nconst size = 40\r\nexport interface CombatQueuePropsT {\r\n  queue: tQueue\r\n  characters: tProcessedCharacter[]\r\n}\r\nexport const CombatQueue = (props: CombatQueuePropsT) => {\r\n  const { queue, characters } = props\r\n  const { isRunning } = useCombatContext()\r\n  const history = useHistory()\r\n  const { level, nextLevel } = useGameStateContext()\r\n  const first = characters.find(\r\n    (c) => c.id === getFirst(queue),\r\n  ) as tProcessedCharacter\r\n  const sortedIds = getSortedIds(queue)\r\n  const bigList = [\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n  ]\r\n  const count = Math.floor((800 - 52) / size)\r\n  const [f, ...list] = Array(count)\r\n    .fill(null)\r\n    .map((_, i) => bigList[i])\r\n    .map((id) => characters.find((c) => c.id === id))\r\n    .filter((c) => c !== undefined)\r\n  const max = getMax(queue)\r\n  const min = 25\r\n  const widthCoef = max > min ? 100 / max : 100 / min\r\n  return (\r\n    <AppHeader\r\n      left={\r\n        <Button\r\n          onClick={() => history.push('/JSFTK_combat')}\r\n          style={{ borderBottom: 0 }}\r\n        >\r\n          Restart ({level})\r\n        </Button>\r\n      }\r\n      right={\r\n        <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n          <PartyResources />\r\n        </FlexContainer>\r\n      }\r\n    >\r\n      <>\r\n        {first && isRunning && (\r\n          <FlexContainer\r\n            style={{\r\n              width: 800,\r\n              flexDirection: 'row-reverse',\r\n              boxShadow: '0px 0px 3px black',\r\n              borderLeft: '1px solid rgba(255,255,255,0.3)',\r\n              background: Theme.mediumBgColor,\r\n            }}\r\n          >\r\n            <FlexContainer\r\n              style={{ position: 'relative', marginLeft: size, zIndex: 7 }}\r\n            >\r\n              <CharacterIcon\r\n                character={first}\r\n                size={64}\r\n                width={64}\r\n                height={64}\r\n                style={{ borderTop: 'none' }}\r\n              />\r\n              <FlexContainer\r\n                $direction='column'\r\n                style={{\r\n                  position: 'absolute',\r\n                  background: 'rgba(255,255,255,0.8)',\r\n                  color: Theme.darkBgColor,\r\n                  zIndex: 2,\r\n                  width: 120,\r\n                  top: 16,\r\n                  paddingLeft: 4,\r\n                  right: '-124px',\r\n                }}\r\n              >\r\n                {first && <span>{first.name}'s Turn</span>}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n            <FlexContainer $full $direction='column'>\r\n              <FullContainer />\r\n              <FlexContainer $full style={{ position: 'relative' }}>\r\n                {characters\r\n                  .filter((c) => c.id !== first?.id && c.health > 0)\r\n                  .map((c, i) => (\r\n                    <div\r\n                      key={`${c?.id}-${i}`}\r\n                      style={{\r\n                        height: size - 10,\r\n                        width: size - 7,\r\n                        position: 'absolute',\r\n                        bottom: '2px',\r\n                        right: `calc(${queue[c.id] * widthCoef}% - ${\r\n                          size - 6\r\n                        }px)`,\r\n                        transition: 'all 0.3s',\r\n                        zIndex: i,\r\n                      }}\r\n                    >\r\n                      <CharacterIcon\r\n                        character={c}\r\n                        size={size}\r\n                        width={size}\r\n                        index={i}\r\n                        style={{ borderBottom: 'none' }}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        )}\r\n      </>\r\n    </AppHeader>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { tCharacter } from '../../game/Character/type'\r\n\r\nexport const Span = (color: string, text: JSX.Element | string) => (\r\n  <span style={{ color, fontWeight: 'bold' }}>{text}</span>\r\n)\r\nexport const SkillSpan = (skill: tSkill) => Span('plum', skill.name)\r\n\r\nexport const NameSpanBuilder = (party: tParty, enemyParty: tParty) => (\r\n  character: tCharacter,\r\n) => {\r\n  const isUserParty = character.partyId === party.id\r\n  const isEnemyParty = character.partyId === enemyParty.id\r\n  const color = isUserParty\r\n    ? 'lightgreen'\r\n    : isEnemyParty\r\n    ? 'lightsalmon'\r\n    : 'white'\r\n\r\n  return Span(color, character.name)\r\n}\r\n","import React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport { useCombatContext } from '../CombatContext'\r\nimport { Monospace } from '../../elements/monospace'\r\nimport { NameSpanBuilder, SkillSpan, Span } from './util'\r\nimport { getDamageResistance } from '../../game/Character/util'\r\nimport { STATUS_CONFIG } from '../../game/Status/constants'\r\n\r\nexport interface CombatLogContextT {\r\n  combatLog: JSX.Element[]\r\n  clear: () => void\r\n}\r\nconst defualtValue: CombatLogContextT = {\r\n  combatLog: [],\r\n  clear: () => {},\r\n}\r\nexport const CombatLogContext = createContext<CombatLogContextT>(defualtValue)\r\nexport const useCombatLogContext = () => useContext(CombatLogContext)\r\n\r\ntype DeadLogT = Record<string, boolean | undefined>\r\n\r\nexport interface CombatLogContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const CombatLogContextProvider = (\r\n  props: CombatLogContextProviderPropsT,\r\n) => {\r\n  const { children } = props\r\n  const { activeRound, roundResults, enemyParty, party } = useCombatContext()\r\n  const [combatLog, setCombatLog] = useState<JSX.Element[]>([])\r\n  const clear = () => setCombatLog([])\r\n  const [deadLog, setDeadLog] = useState<DeadLogT>({})\r\n  const NameSpan = NameSpanBuilder(party, enemyParty)\r\n  const log = (line: JSX.Element) =>\r\n    setCombatLog((log) => [\r\n      ...log,\r\n      <Monospace style={{ display: 'inline-block', fontWeight: 'normal' }}>\r\n        {line}\r\n      </Monospace>,\r\n    ])\r\n\r\n  useEffect(() => {\r\n    const characters = [...enemyParty.characters, ...party.characters]\r\n    setTimeout(() => {\r\n      characters.forEach((character) => {\r\n        if (character.health <= 0 && !deadLog[character.id]) {\r\n          setDeadLog((dLog) => ({ ...dLog, [character.id]: true }))\r\n          log(<span>{Span('lightcoral', `${character.name} died.`)}</span>)\r\n        }\r\n      })\r\n    }, 5)\r\n  }, [enemyParty, party])\r\n\r\n  useEffect(() => {\r\n    if (activeRound && activeRound) {\r\n      log(\r\n        <span>\r\n          {NameSpan(activeRound.sourceResult.source)} uses{' '}\r\n          {SkillSpan(activeRound.sourceResult.skill)}.\r\n        </span>,\r\n      )\r\n    }\r\n  }, [activeRound])\r\n\r\n  useEffect(() => {\r\n    if (roundResults.length === 0) return\r\n    const latestRounds = roundResults[roundResults.length - 1]\r\n    const baseRound = latestRounds.sourceResult\r\n    if (!baseRound) return\r\n\r\n    if (baseRound.skill.damage && baseRound.passedCount === 0) {\r\n      log(<span>{baseRound.source.name}'s attack missed.</span>)\r\n    }\r\n    if (!baseRound.skill.damage && !baseRound.perfect) {\r\n      log(<span>{SkillSpan(baseRound.skill)} failed.</span>)\r\n    }\r\n    if (baseRound.criticalHitSuccess) {\r\n      log(<span>{Span('gold', 'Critical Hit!')}</span>)\r\n    }\r\n    if (baseRound.perfect && baseRound.rollResults.length > 0) {\r\n      log(<span>{Span('gold', 'Perfect!')}</span>)\r\n    }\r\n    latestRounds.targetResults.forEach((round) => {\r\n      const targetParty = party.id === round.source.partyId ? enemyParty : party\r\n      if (round.passedCount > 0) {\r\n        if (round.dodgeSuccess) {\r\n          log(<span>{NameSpan(round.target)} dodged the attack.</span>)\r\n        } else if (round.totalDamage.value > 0) {\r\n          log(\r\n            <span>\r\n              {SkillSpan(round.skill)} deals{' '}\r\n              {Span('white', `${round.loggedDamgge.value} damage`)} to{' '}\r\n              {NameSpan(round.target)}.\r\n            </span>,\r\n          )\r\n        } else if (round.skill.damage) {\r\n          log(\r\n            <span>\r\n              {SkillSpan(round.skill)} did no damage to {NameSpan(round.target)}\r\n              .\r\n            </span>,\r\n          )\r\n        }\r\n        if (round.splashDamage.value > 0) {\r\n          targetParty.characters\r\n            .filter((c) => c.id !== round.target.id && c.health > 0)\r\n            .forEach((subTarget) => {\r\n              const splashDamageResistance = getDamageResistance(\r\n                subTarget,\r\n                round.splashDamage,\r\n              )\r\n              log(\r\n                <span>\r\n                  {SkillSpan(round.skill)} deals{' '}\r\n                  {Span(\r\n                    'white',\r\n                    `${\r\n                      round.splashDamage.value - splashDamageResistance\r\n                    } splash damage`,\r\n                  )}{' '}\r\n                  to {NameSpan(subTarget)}.\r\n                </span>,\r\n              )\r\n            })\r\n        }\r\n\r\n        if (round.reflectedDamage.value > 0) {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} reflected{' '}\r\n              {Span('white', `${round.reflectedDamage.value} damage`)}\r\n            </span>,\r\n          )\r\n        }\r\n\r\n        /* TODO\r\n        if (round.healing > 0) {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} gained{' '}\r\n              {Span('white', `${round.healing} HP`)} from{' '}\r\n              {SkillSpan(round.skill)}\r\n            </span>,\r\n          )\r\n        }\r\n        */\r\n\r\n        round.addedStatus.forEach((status) => {\r\n          const statusConfig = STATUS_CONFIG[status]\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} became {status}\r\n              {statusConfig.duration > 0\r\n                ? ` (${statusConfig.duration} turns)`\r\n                : ''}\r\n              .\r\n            </span>,\r\n          )\r\n        })\r\n      }\r\n    })\r\n  }, [roundResults.length])\r\n\r\n  return (\r\n    <CombatLogContext.Provider value={{ combatLog, clear }}>\r\n      {children}\r\n    </CombatLogContext.Provider>\r\n  )\r\n}\r\n","import React, { useRef, useEffect, useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { useCombatLogContext } from '../../contexts/CombatLogContext'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport { Button } from '../../elements/button'\r\nimport { Theme } from '../../theme'\r\n\r\nexport const CombatLog = () => {\r\n  const { combatLog } = useCombatLogContext()\r\n  const scrollRef = useRef<HTMLDivElement>(null)\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n  useEffect(() => {\r\n    if (scrollRef.current && isExpanded) {\r\n      scrollRef.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n  }, [combatLog])\r\n  const style = useSpring({\r\n    minHeight: isExpanded ? 263 : 0,\r\n    maxHeight: isExpanded ? 263 : 0,\r\n  })\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{\r\n        minWidth: 300,\r\n        overflow: 'auto',\r\n        background: 'rgba(0,0,0,0.7)',\r\n        fontSize: 12,\r\n        color: 'rgba(255,255,255,0.8)',\r\n      }}\r\n    >\r\n      <FlexContainer\r\n        style={{\r\n          background: Theme.darkBgColor,\r\n          padding: 8,\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <FullContainer>Combat Log</FullContainer>\r\n        <Button\r\n          onClick={() => setIsExpanded((v) => !v)}\r\n          style={{ padding: '2px 8px' }}\r\n        >\r\n          {isExpanded ? '_' : '+'}\r\n        </Button>\r\n      </FlexContainer>\r\n      <animated.div\r\n        style={{\r\n          overflow: 'auto',\r\n          ...style,\r\n        }}\r\n      >\r\n        <FlexContainer $direction='column' style={{ padding: 8 }}>\r\n          {combatLog.map((line, i) => (\r\n            <span key={i}>{line}</span>\r\n          ))}\r\n        </FlexContainer>\r\n        <div ref={scrollRef} />\r\n      </animated.div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { FlexContainer, FullContainer } from '../elements/flex'\r\nimport { RoundResultRenderer } from '../components/RoundResultRenderer'\r\nimport { CombatActions } from '../components/CombatActions'\r\nimport { CombatParty } from '../components/CombatParty'\r\nimport { CombatQueue } from '../components/CombatQueue'\r\nimport { CombatLog } from '../components/CombatLog'\r\nimport { useUIContext } from '../contexts/UIContext'\r\nimport { useCombatStart } from '../hooks/useCombatStart'\r\nimport { useCombatLogContext } from '../contexts/CombatLogContext'\r\n\r\nexport const Combat = () => {\r\n  const {\r\n    enemyParty,\r\n    activeCharacter,\r\n    characters,\r\n    queue,\r\n    isRunning,\r\n    isRenderingResult,\r\n    onSkillSelect,\r\n  } = useCombatContext()\r\n\r\n  const { setOnCharacterConsumableClick } = useUIContext()\r\n  const { clear } = useCombatLogContext()\r\n  useCombatStart()\r\n  useEffect(() => {\r\n    setOnCharacterConsumableClick((c, index, item) => {\r\n      if (!c) return\r\n      if (c.id === activeCharacter.id) {\r\n        onSkillSelect(item.skill, index)\r\n      }\r\n    })\r\n  }, [onSkillSelect, activeCharacter])\r\n  useEffect(() => {\r\n    clear()\r\n  }, [])\r\n\r\n  return (\r\n    <FlexContainer $full style={{ height: '100%' }}>\r\n      <FlexContainer $full $direction='column'>\r\n        <CombatQueue queue={queue} characters={characters} />\r\n        <FlexContainer\r\n          $direction='column'\r\n          $full\r\n          style={{ padding: '30px 10px 0 10px' }}\r\n        >\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{ marginBottom: 40, minHeight: 90 }}\r\n          >\r\n            <CombatParty party={enemyParty} />\r\n          </FlexContainer>\r\n          <FlexContainer $full>\r\n            {isRunning && activeCharacter && (\r\n              <>\r\n                <FullContainer />\r\n                <FlexContainer $direction='column'>\r\n                  <div style={{ marginTop: 40 }}>\r\n                    {!isRenderingResult && <CombatActions />}\r\n                    <RoundResultRenderer isModal={false} />\r\n                  </div>\r\n                  <FullContainer />\r\n                </FlexContainer>\r\n                <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n                  <FlexContainer\r\n                    $direction='column'\r\n                    // style={{ justifyContent: 'center' }}\r\n                  >\r\n                    <CombatLog />\r\n                  </FlexContainer>\r\n                </FlexContainer>\r\n              </>\r\n            )}\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useModalContext } from '../contexts/ModalContext'\r\nimport { useCombatLogContext } from '../contexts/CombatLogContext'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { FlexContainer } from '../elements/flex'\r\nimport { Icon } from '../components/Icon'\r\nimport { Theme } from '../theme'\r\n\r\nexport const useCombatStart = (delay: number = 1000) => {\r\n  const { open, close } = useModalContext()\r\n  const { clear } = useCombatLogContext()\r\n  const { enemyParty, start, reset } = useCombatContext()\r\n  useEffect(() => {\r\n    clear()\r\n    open(\r\n      <div style={{ textAlign: 'center' }}>\r\n        <h1 style={{ fontFamily: Theme.titleFont }}>Combat Start!</h1>\r\n        <FlexContainer\r\n          style={{\r\n            justifyContent: 'space-around',\r\n            marginTop: 32,\r\n            marginBottom: 40,\r\n          }}\r\n        >\r\n          {enemyParty.characters.map((c) => (\r\n            <FlexContainer\r\n              key={c.id}\r\n              style={{\r\n                background: '#c27a5d',\r\n                border: '2px solid rgba(255,255,255,0.8)',\r\n                height: 60,\r\n                width: 60,\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              <Icon\r\n                src={c.icon || ''}\r\n                shadow\r\n                fill={'white'}\r\n                size={60}\r\n                style={{ zIndex: 1, position: 'relative' }}\r\n              />\r\n            </FlexContainer>\r\n          ))}\r\n        </FlexContainer>\r\n      </div>,\r\n    )\r\n    setTimeout(() => {\r\n      close()\r\n      start()\r\n    }, 1500)\r\n    return () => {\r\n      reset()\r\n      clear()\r\n    }\r\n  }, [])\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Route, useHistory } from 'react-router-dom'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport { useModalContext } from '../contexts/ModalContext'\r\nimport { Theme } from '../theme'\r\n\r\nexport const makeRoute = (path: string, Component: React.FC) => (\r\n  <Route path={`/JSFTK_combat${path}`}>\r\n    <Component />\r\n  </Route>\r\n)\r\n\r\nexport const RouteController = () => {\r\n  const { encounters, currentEncounter, level } = useGameStateContext()\r\n  const history = useHistory()\r\n  const { open } = useModalContext()\r\n  useEffect(() => {\r\n    if (level > encounters.length - 1) {\r\n      open(\r\n        <div style={{ textAlign: 'center', fontFamily: Theme.titleFont }}>\r\n          <h1>You've Defeated the Lich! You did it!</h1>\r\n        </div>,\r\n      )\r\n      history.push('/JSFTK_combat')\r\n    } else if (\r\n      currentEncounter &&\r\n      (currentEncounter.type === 'combat' || currentEncounter.type === 'boss')\r\n    ) {\r\n      history.push('/JSFTK_combat/combat')\r\n    } else if (!currentEncounter && level > 0) {\r\n      history.push('/JSFTK_combat/party')\r\n    }\r\n  }, [currentEncounter, level])\r\n  return null\r\n}\r\n","import React, { useState, CSSProperties } from 'react'\r\nimport { withStyle } from 'styletron-react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Button } from '../../elements/button'\r\nimport { tShopEncounter } from '../../game/Encounter/type'\r\nimport { WeaponPreview } from '../WeaponPreview'\r\nimport { ArmorPreview } from '../ArmorPreview'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { ConsumablePreview } from '../ConsumablePreview'\r\nimport { Theme } from '../../theme'\r\n\r\nconst CardList = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  }\r\n})\r\n\r\ninterface ShopTabT {\r\n  key: string\r\n  label: string\r\n  render: (\r\n    encounter: tShopEncounter,\r\n    purchaseItem: (item: tArmor | tWeapon | tConsumable, cost: number) => void,\r\n  ) => JSX.Element\r\n}\r\nconst tabs: ShopTabT[] = [\r\n  {\r\n    key: 'all',\r\n    label: 'All',\r\n    render: (encounter: tShopEncounter, purchaseItem) => (\r\n      <FlexContainer $direction='column'>\r\n        <h3>Consumables</h3>\r\n        <CardList>\r\n          {encounter.items\r\n            .filter((i) => i.itemType === 'consumable')\r\n            .map((a) => (\r\n              <ConsumablePreview\r\n                item={a as tConsumable}\r\n                showBuyButton={true}\r\n                cost={encounter.costs[a.id]}\r\n                onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n              />\r\n            ))}\r\n        </CardList>\r\n        <h3>Weaopns</h3>\r\n        <CardList>\r\n          {encounter.items\r\n            .filter((i) => i.itemType === 'weapon')\r\n            .map((w) => (\r\n              <WeaponPreview\r\n                weapon={w as tWeapon}\r\n                showBuyButton={true}\r\n                cost={encounter.costs[w.id]}\r\n                onBuyClick={() => purchaseItem(w, encounter.costs[w.id])}\r\n              />\r\n            ))}\r\n        </CardList>\r\n        <h3>Armor</h3>\r\n        <CardList>\r\n          {encounter.items\r\n            .filter((i) => i.itemType === 'armor')\r\n            .map((a) => (\r\n              <ArmorPreview\r\n                armor={a as tArmor}\r\n                showBuyButton={true}\r\n                cost={encounter.costs[a.id]}\r\n                onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n              />\r\n            ))}\r\n        </CardList>\r\n      </FlexContainer>\r\n    ),\r\n  },\r\n  {\r\n    key: 'weapons',\r\n    label: 'Weaons',\r\n    render: (encounter: tShopEncounter, purchaseItem) => (\r\n      <CardList>\r\n        {encounter.items\r\n          .filter((i) => i.itemType === 'weapon')\r\n          .map((w) => (\r\n            <WeaponPreview\r\n              weapon={w as tWeapon}\r\n              showBuyButton={true}\r\n              cost={encounter.costs[w.id]}\r\n              onBuyClick={() => purchaseItem(w, encounter.costs[w.id])}\r\n            />\r\n          ))}\r\n      </CardList>\r\n    ),\r\n  },\r\n  {\r\n    key: 'armor',\r\n    label: 'Armor',\r\n    render: (encounter: tShopEncounter, purchaseItem) => (\r\n      <CardList>\r\n        {encounter.items\r\n          .filter((i) => i.itemType === 'armor')\r\n          .map((a) => (\r\n            <ArmorPreview\r\n              armor={a as tArmor}\r\n              showBuyButton={true}\r\n              cost={encounter.costs[a.id]}\r\n              onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n            />\r\n          ))}\r\n      </CardList>\r\n    ),\r\n  },\r\n  {\r\n    key: 'consumables',\r\n    label: 'Consumables',\r\n    render: (encounter: tShopEncounter, purchaseItem) => (\r\n      <CardList>\r\n        {encounter.items\r\n          .filter((i) => i.itemType === 'consumable')\r\n          .map((a) => (\r\n            <ConsumablePreview\r\n              item={a as tConsumable}\r\n              showBuyButton={true}\r\n              cost={encounter.costs[a.id]}\r\n              onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n            />\r\n          ))}\r\n      </CardList>\r\n    ),\r\n  },\r\n]\r\n\r\nexport interface ShopPropsT {}\r\nexport const Shop = (props: ShopPropsT) => {\r\n  const {} = props\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { purchaseItem } = usePartyContext()\r\n  const [activeTab, setActiveTab] = useState(\r\n    tabs.find((t) => t.key === 'all') as ShopTabT,\r\n  )\r\n  const active = (tab: ShopTabT): CSSProperties =>\r\n    tab.key === activeTab.key\r\n      ? {\r\n          borderColor: 'white',\r\n        }\r\n      : {}\r\n  return (\r\n    <BoxContainer\r\n      style={{ margin: '20px 20px 20px 0', flex: 1, minWidth: 762 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <FlexContainer style={{ alignItems: 'center' }}>\r\n        <FullContainer>\r\n          <h1 style={{ margin: 0, fontFamily: Theme.titleFont }}>\r\n            Black Market\r\n          </h1>\r\n        </FullContainer>\r\n        <FlexContainer>\r\n          {tabs.map((tab) => (\r\n            <Button style={active(tab)} onClick={() => setActiveTab(tab)}>\r\n              {tab.label}\r\n            </Button>\r\n          ))}\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n      <FlexContainer\r\n        $direction='column'\r\n        $full\r\n        style={{\r\n          overflow: 'auto',\r\n          marginTop: 10,\r\n          height: 'calc(100vh - 374px)',\r\n          overflowY: 'auto',\r\n        }}\r\n      >\r\n        {activeTab.render(currentEncounter as tShopEncounter, purchaseItem)}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Kefir from 'kefir'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { tShrineEncounter } from '../../game/Encounter/type'\r\nimport { SkillChecks } from '../SkillChecks'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { resolveCheck } from '../../game/Roll/util'\r\nimport { ZERO_REWARD } from '../../game/Encounter/constants'\r\nimport { commitRewards } from '../../game/Party/util'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ShrinePropsT {}\r\nexport const Shrine = (props: ShrinePropsT) => {\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { party, rawParty, updateParty } = usePartyContext()\r\n  const encounter = currentEncounter as tShrineEncounter\r\n  const [results, setResults] = useState<boolean[]>([])\r\n  const onClick = (c: tProcessedCharacter) => {\r\n    const stream = Kefir.sequentially(\r\n      200,\r\n      Array(encounter.rolls)\r\n        .fill(0)\r\n        .map((_, i) => ({\r\n          index: i,\r\n          result: resolveCheck(c, encounter.stat),\r\n        })),\r\n    )\r\n    stream.onValue((value) => {\r\n      setResults((r) => [...r, value.result])\r\n    })\r\n    stream.onEnd(() => {})\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (results.length === encounter.rolls) {\r\n      const rewards =\r\n        encounter.results[results.filter((r) => r === true).length - 1]\r\n      if (!rewards) {\r\n        return\r\n      }\r\n      updateParty(commitRewards(rawParty, rewards))\r\n    }\r\n  }, [results])\r\n\r\n  return (\r\n    <BoxContainer\r\n      style={{ margin: '20px 20px 20px 0', flex: 1 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <FlexContainer>\r\n        <FlexContainer $direction='column'>\r\n          <h1 style={{ margin: '0 0 24px 0', textTransform: 'capitalize' }}>\r\n            {encounter.stat} Shrine\r\n          </h1>\r\n          <div style={{ maxWidth: 300, marginBottom: 48 }}>\r\n            Shines are optional encounters that test one character in your\r\n            party's stats. Be careful, as if you fail, you may get a negative\r\n            outcome!\r\n          </div>\r\n          <FlexContainer>\r\n            <FlexContainer $direction='column'>\r\n              <SkillChecks\r\n                stat={encounter.stat}\r\n                rolls={encounter.rolls}\r\n                results={results}\r\n              />\r\n              <FlexContainer style={{ justifyContent: 'center' }}>\r\n                {party.characters.map((c) => (\r\n                  <Button\r\n                    onClick={() => onClick(c)}\r\n                    disabled={results.length > 0}\r\n                  >\r\n                    {c.name} ({c.stats[encounter.stat]})\r\n                  </Button>\r\n                ))}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n        <FlexContainer\r\n          $direction='column'\r\n          $full\r\n          style={{ padding: '86px 16px 0 16px' }}\r\n        >\r\n          {encounter.results.map((reward, index) => (\r\n            <FlexContainer\r\n              style={{\r\n                padding: 8,\r\n                alignItems: 'center',\r\n                marginBottom: 4,\r\n                background:\r\n                  results.length === encounter.rolls &&\r\n                  index + 1 === results.filter((r) => r === true).length\r\n                    ? 'rgba(144, 238, 144, 0.3)'\r\n                    : 'linear-gradient(90deg, rgba(255,255,255,0.3) 0%, rgba(255,255,255,0) 100%)',\r\n              }}\r\n            >\r\n              <span style={{ fontSize: 24 }}>{index + 1}</span>\r\n              <span\r\n                style={{\r\n                  display: 'inline-block',\r\n                  marginLeft: 8,\r\n                  textTransform: 'capitalize',\r\n                }}\r\n              >\r\n                {reward.gold > 0 && ` ${reward.gold} Gold`}\r\n                {reward.xp > 0 && ` +${reward.xp} Experience`}\r\n                {reward.status.length > 0 && ` ${reward.status}`}\r\n                {reward.items.length > 0 && ` Random Item`}\r\n                {JSON.stringify(reward) === JSON.stringify(ZERO_REWARD) &&\r\n                  ' No Effect'}\r\n              </span>\r\n            </FlexContainer>\r\n          ))}\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tEncounterType, tFloor } from '../../game/Encounter/type'\r\n\r\nimport Unknown from '../../icons/svg/delapouite/perspective-dice-six.svg'\r\nimport Shop from '../../icons/svg/delapouite/coins.svg'\r\nimport Combat from '../../icons/svg/lorc/crossed-swords.svg'\r\nimport Shrine from '../../icons/svg/lorc/divided-spiral.svg'\r\nimport Boss from '../../icons/svg/lorc/crowned-skull.svg'\r\nimport Reward from '../../icons/svg/lorc/laurel-crown.svg'\r\nimport { Icon } from '../Icon'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Theme } from '../../theme'\r\nimport { HeadingSm } from '../../elements/typography'\r\n\r\nexport interface EncounterHistoryPropsT {}\r\n\r\nexport const EncounterHistory = (props: EncounterHistoryPropsT) => {\r\n  const { floors, floor, level } = useGameStateContext()\r\n  const chosenEncounters = (floor: tFloor) =>\r\n    floor.encounters.map((e) => (e.chosen ? e.choices[e.chosen] : undefined))\r\n\r\n  const getIcon = (type: tEncounterType | undefined): string => {\r\n    switch (type) {\r\n      case 'combat':\r\n        return Combat\r\n      case 'shop':\r\n        return Shop\r\n      case 'shrine':\r\n        return Shrine\r\n      case 'boss':\r\n        return Boss\r\n      case 'reward':\r\n        return Reward\r\n      default:\r\n        return Unknown\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {floors.map((f, fi) => (\r\n        <FlexContainer\r\n          $direction='column'\r\n          style={{\r\n            background: Theme.darkBgColor,\r\n            padding: 16,\r\n            margin: '16px 32px 16px 0',\r\n          }}\r\n        >\r\n          <FlexContainer>\r\n            <HeadingSm style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n              {f.name}\r\n            </HeadingSm>\r\n          </FlexContainer>\r\n          <FlexContainer\r\n            key={f.id}\r\n            style={{\r\n              justifyContent: 'space-between',\r\n            }}\r\n          >\r\n            {chosenEncounters(f).map((e, i) => (\r\n              <FlexContainer\r\n                key={i}\r\n                $full={i !== chosenEncounters(f).length - 1}\r\n              >\r\n                <BoxContainer\r\n                  substyle={{\r\n                    padding: 4,\r\n                    borderColor:\r\n                      level === i && fi === floor\r\n                        ? 'white'\r\n                        : e === undefined\r\n                        ? Theme.lightBgColor\r\n                        : '#8b9e96',\r\n                  }}\r\n                >\r\n                  <Icon\r\n                    src={getIcon(\r\n                      i === f.encounters.length - 2\r\n                        ? 'boss'\r\n                        : i === f.encounters.length - 1\r\n                        ? 'reward'\r\n                        : e?.type,\r\n                    )}\r\n                    size={32}\r\n                    fill={e === undefined ? 'rgba(255,255,255,0.5)' : '#8b9e96'}\r\n                  />\r\n                </BoxContainer>\r\n                {i !== chosenEncounters(f).length - 1 && (\r\n                  <FlexContainer\r\n                    $direction='column'\r\n                    $full\r\n                    style={{ justifyContent: 'center' }}\r\n                  >\r\n                    <FlexContainer\r\n                      $full\r\n                      style={{\r\n                        maxHeight: 1,\r\n                        background:\r\n                          e === undefined ? Theme.lightBgColor : 'white',\r\n                        borderTop: '1px solid black',\r\n                        borderBottom: '1px solid black',\r\n                      }}\r\n                    />\r\n                  </FlexContainer>\r\n                )}\r\n              </FlexContainer>\r\n            ))}\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\n\r\nexport const BossRewards = () => {\r\n  return <FlexContainer></FlexContainer>\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Shop } from '../Shop'\r\nimport { Shrine } from '../Shrine'\r\nimport { EncounterHistory } from '../EncounterHistory'\r\nimport { BossRewards } from '../BossRewards'\r\n\r\nexport const NonCombatEncounter = () => {\r\n  const { currentEncounter, currentChoice } = useGameStateContext()\r\n  return (\r\n    <FlexContainer $direction='column' $full style={{ marginLeft: '60px' }}>\r\n      {currentEncounter && currentEncounter.type === 'shop' && <Shop />}\r\n      {currentEncounter && currentEncounter.type === 'shrine' && <Shrine />}\r\n      {currentEncounter && currentEncounter.type === 'reward' && (\r\n        <BossRewards />\r\n      )}\r\n      {!currentEncounter && currentChoice && <EncounterHistory />}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tEncounterChoice } from '../../game/Encounter/type'\r\nimport { getChoiceText } from '../../game/Encounter/constants'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Button } from '../../elements/button'\r\nimport { HeadingSm, Text } from '../../elements/typography'\r\n\r\nexport interface ChoicePropsT {\r\n  currentChoice: tEncounterChoice\r\n}\r\n\r\nexport const Choice = (props: ChoicePropsT) => {\r\n  const { currentChoice } = props\r\n  const {\r\n    level,\r\n    previousChoice,\r\n    encounters,\r\n    chooseCurrent,\r\n  } = useGameStateContext()\r\n  return (\r\n    <FlexContainer $direction='column' style={{ paddingTop: 24 }}>\r\n      <HeadingSm\r\n        style={{\r\n          textAlign: 'center',\r\n        }}\r\n      >\r\n        Your Journey {level === 0 ? 'Begins' : 'Continues'}.\r\n      </HeadingSm>\r\n      <Text\r\n        style={{\r\n          marginBottom: 24,\r\n          padding: 8,\r\n        }}\r\n      >\r\n        {getChoiceText(currentChoice, previousChoice)}\r\n      </Text>\r\n      {encounters.length - 1 !== level && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          {encounters[level].choices.map((e, i) => (\r\n            <Button\r\n              onClick={() => chooseCurrent(i)}\r\n              style={{ whiteSpace: 'nowrap', padding: '8px 12px' }}\r\n            >\r\n              {getNextText(encounters[level].choices.length, i)}\r\n            </Button>\r\n          ))}\r\n        </FlexContainer>\r\n      )}\r\n      {encounters.length - 1 === level && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          <Button onClick={() => chooseCurrent(0)}>Proceed</Button>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nconst getNextText = (size: number, index: number): string => {\r\n  switch (size) {\r\n    case 1:\r\n      return 'Proceed'\r\n    case 2: {\r\n      return index === 0 ? 'Go Left' : 'Go Right'\r\n    }\r\n    case 3: {\r\n      return index === 0 ? 'Go Left' : index === 1 ? 'Go Straight' : 'Go Right'\r\n    }\r\n    default:\r\n      return 'Proceed'\r\n  }\r\n}\r\n","export const stringArr = (arr: string[]): string => {\r\n  return arr.reduce((text, item, index) => {\r\n    const f = index === 0\r\n    const l = index === arr.length - 1 && !f\r\n    return `${text}${!f && arr.length > 2 ? ', ' : ' '}${\r\n      l ? ' and ' : ''\r\n    }${item}`\r\n  })\r\n}\r\n","import React from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Button } from '../../elements/button'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tShopEncounter } from '../../game/Encounter/type'\r\n\r\nexport interface ShopPropsT {\r\n  currentEncounter: tShopEncounter\r\n}\r\nexport const Shop = (props: ShopPropsT) => {\r\n  const { currentEncounter } = props\r\n  const { nextLevel } = useGameStateContext()\r\n  return (\r\n    <FlexContainer $direction='column' style={{ justifyContent: 'center' }}>\r\n      {currentEncounter.type === 'shop' && (\r\n        <>\r\n          <h3\r\n            style={{\r\n              margin: '0 0 16px 0',\r\n              color: 'white',\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            You found a shop!\r\n          </h3>\r\n          <span\r\n            style={{\r\n              color: 'rgba(255,255,255,0.7)',\r\n              marginBottom: 24,\r\n            }}\r\n          >\r\n            Amidst your journey, you discover a merchant, a traveling salemen\r\n            with all manor of wares to assist in your adventure.\r\n          </span>\r\n        </>\r\n      )}\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        <Button onClick={() => nextLevel()}>Travel Deeper</Button>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { Button } from '../../elements/button'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tRewardEncounter } from '../../game/Encounter/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface RewardPropsT {\r\n  currentEncounter: tRewardEncounter\r\n}\r\n\r\nexport const Reward = (props: RewardPropsT) => {\r\n  const { currentEncounter } = props\r\n  const { floor, floors, nextFloor } = useGameStateContext()\r\n  const { refreshParty } = usePartyContext()\r\n  const history = useHistory()\r\n  const { open } = useModalContext()\r\n  const onClick = () => {\r\n    if (floor === floors.length - 1) {\r\n      history.push('/JSFTK_combat')\r\n      open(\r\n        <div style={{ textAlign: 'center', fontFamily: Theme.titleFont }}>\r\n          <h1>You've Defeated the Lich! You did it!</h1>\r\n        </div>,\r\n      )\r\n    } else {\r\n      nextFloor()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    refreshParty()\r\n  }, [])\r\n\r\n  return (\r\n    <FlexContainer $direction='column' style={{ justifyContent: 'center' }}>\r\n      <h3 style={{ fontFamily: Theme.titleFont, fontWeight: 'normal' }}>\r\n        You've cleansed an evil.\r\n      </h3>\r\n      <span style={{ marginBottom: 40, padding: 8 }}>\r\n        You've defeated the Lich Lord of the Forest, but you discoved what he\r\n        was guarding. A tomb, sealed for centuries, a relic of civilizations\r\n        past.\r\n      </span>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        <Button onClick={onClick}>Enter the Tomb</Button>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Button } from '../../elements/button'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tShrineEncounter } from '../../game/Encounter/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ShrinePropsT {\r\n  currentEncounter: tShrineEncounter\r\n}\r\n\r\nexport const Shrine = (props: ShrinePropsT) => {\r\n  const { currentEncounter } = props\r\n  const { nextLevel } = useGameStateContext()\r\n  return (\r\n    <FlexContainer $direction='column' style={{ justifyContent: 'center' }}>\r\n      <h3 style={{ fontFamily: Theme.titleFont, fontWeight: 'normal' }}>\r\n        You've discoved a secret shrine.\r\n      </h3>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        <Button onClick={() => nextLevel()}>Travel Deeper</Button>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Choice } from './Choice'\r\nimport { Shop } from './Shop'\r\nimport {\r\n  tRewardEncounter,\r\n  tShopEncounter,\r\n  tShrineEncounter,\r\n} from '../../game/Encounter/type'\r\nimport { Reward } from './Reward'\r\nimport { Shrine } from './Shrine'\r\n\r\nexport const EncounterActions = () => {\r\n  const {\r\n    currentChoice,\r\n    currentEncounter,\r\n    chooseCurrent,\r\n  } = useGameStateContext()\r\n  useEffect(() => {\r\n    if (currentChoice?.choices[0].type === 'reward') {\r\n      chooseCurrent(0)\r\n    }\r\n  }, [])\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{\r\n        background:\r\n          'linear-gradient(0deg, rgba(0,7,12,0) 0%, rgba(0,7,12,0.68) 10%, rgba(0,7,18,1) 35%)',\r\n        marginRight: '60px',\r\n        padding: '16px 8px',\r\n        width: 300,\r\n        color: 'rgba(255,255,255,0.8)',\r\n      }}\r\n    >\r\n      {currentChoice && !currentEncounter && (\r\n        <Choice currentChoice={currentChoice} />\r\n      )}\r\n      {currentEncounter && (\r\n        <>\r\n          {currentEncounter.type === 'shop' && (\r\n            <Shop currentEncounter={currentEncounter as tShopEncounter} />\r\n          )}\r\n          {currentEncounter.type === 'reward' && (\r\n            <Reward currentEncounter={currentEncounter as tRewardEncounter} />\r\n          )}\r\n          {currentEncounter.type === 'shrine' && (\r\n            <Shrine currentEncounter={currentEncounter as tShrineEncounter} />\r\n          )}\r\n        </>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { usePartyContext } from '../contexts/PartyContext'\r\nimport { FlexContainer, FullContainer } from '../elements/flex'\r\nimport { Button } from '../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { AppHeader } from '../components/AppHeader'\r\nimport { PartyResources } from '../components/PartyResources'\r\nimport { useUIContext } from '../contexts/UIContext'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport { getSkillResult } from '../game/Skill/util'\r\nimport { commitSkillResults } from '../game/Skill/committer'\r\nimport { NonCombatEncounter } from '../components/NonCombatEncounter'\r\nimport { EncounterActions } from '../components/EncounterActions'\r\nimport { Theme } from '../theme'\r\nimport { HeadingSm } from '../elements/typography'\r\n\r\nexport const Party = () => {\r\n  const { party, rawParty, updateParty } = usePartyContext()\r\n  const { level, floors, floor } = useGameStateContext()\r\n  const currentFloor = floors[floor]\r\n  const history = useHistory()\r\n  const {\r\n    setPlayerCanEquipItem,\r\n    setOnCharacterConsumableClick,\r\n  } = useUIContext()\r\n\r\n  useEffect(() => {\r\n    setPlayerCanEquipItem(true)\r\n    setOnCharacterConsumableClick((character, consumableIndex) => {\r\n      if (!character) return\r\n      const consumable = character.consumables[consumableIndex]\r\n      const targets =\r\n        consumable.skill.targetType === 'self'\r\n          ? [character]\r\n          : consumable.skill.targetType === 'party'\r\n          ? party.characters\r\n          : []\r\n      const result = getSkillResult(character, targets, consumable.skill)\r\n      const parties = commitSkillResults(rawParty, rawParty, {})(result)\r\n      updateParty(parties.playerParty)\r\n    })\r\n    return () => {\r\n      setPlayerCanEquipItem(false)\r\n      setOnCharacterConsumableClick((c, i, item) => {})\r\n    }\r\n  }, [party, rawParty, updateParty])\r\n\r\n  return (\r\n    <FlexContainer $full $direction='column' style={{ height: '100%' }}>\r\n      <AppHeader\r\n        left={\r\n          <>\r\n            <Button\r\n              onClick={() => history.push('/JSFTK_combat')}\r\n              style={{ borderBottom: 0 }}\r\n            >\r\n              Restart\r\n            </Button>\r\n            <FullContainer />\r\n          </>\r\n        }\r\n        right={\r\n          <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n            <PartyResources />\r\n          </FlexContainer>\r\n        }\r\n      >\r\n        <FlexContainer\r\n          $full\r\n          style={{\r\n            color: 'white',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <HeadingSm style={{ margin: 0 }}>\r\n            {currentFloor.name} - Level {level}\r\n          </HeadingSm>\r\n        </FlexContainer>\r\n      </AppHeader>\r\n      <FlexContainer $full $direction='column'>\r\n        <FlexContainer $full>\r\n          <NonCombatEncounter />\r\n          <EncounterActions />\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { FullContainer, FlexContainer } from '../elements/flex'\r\nimport { BoxContainer } from '../elements/box'\r\nimport { usePartyContext } from '../contexts/PartyContext'\r\nimport { Gauge } from '../components/Gauge'\r\nimport { RedButton } from '../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { INITIAL_STATE } from '../state/party'\r\nimport { Monospace } from '../elements/monospace'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport {\r\n  tProcessedCharacter,\r\n  tCharacter,\r\n  tCharacterClass,\r\n} from '../game/Character/type'\r\nimport { makeCharacter } from '../game/Character/util'\r\nimport { STAT_BONUS_KEYS } from '../game/Stats/constants'\r\nimport { Theme } from '../theme'\r\nimport { AppHeader } from '../components/AppHeader'\r\nimport { HeadingSm } from '../elements/typography'\r\nimport { Gauge2 } from '../components/Gauge/v2'\r\n\r\nexport const Start = () => {\r\n  const {\r\n    party,\r\n    updateParty,\r\n    upsertCharacter,\r\n    findRawCharacter,\r\n  } = usePartyContext()\r\n  const history = useHistory()\r\n  const { reset } = useGameStateContext()\r\n  useEffect(() => {\r\n    updateParty(INITIAL_STATE)\r\n    reset()\r\n  }, [])\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{ height: '100%', overflow: 'hidden' }}\r\n    >\r\n      <AppHeader\r\n        left={\r\n          <Monospace\r\n            style={{\r\n              fontWeight: 'normal',\r\n              color: 'rgba(255,255,255,0.5)',\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            alpha-0.0.4.14\r\n          </Monospace>\r\n        }\r\n      >\r\n        <span\r\n          style={{ color: 'white', lineHeight: '52px', whiteSpace: 'nowrap' }}\r\n        >\r\n          I am looking for help with: item, and enemy, and general design! If\r\n          you would like to help, shoot me a message or head over to{' '}\r\n          <a href='https://github.com/mpm1900/JSFTK_combat' target='_blank'>\r\n            my github\r\n          </a>\r\n        </span>\r\n      </AppHeader>\r\n      <FullContainer />\r\n      <FlexContainer $full>\r\n        <FullContainer />\r\n        <BoxContainer\r\n          style={{ maxWidth: 340, marginRight: 8 }}\r\n          substyle={{\r\n            padding: 16,\r\n            background: Theme.darkBgColor,\r\n            lineHeight: 1.4,\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          <HeadingSm\r\n            style={{\r\n              marginTop: 8,\r\n            }}\r\n          >\r\n            About this game\r\n          </HeadingSm>\r\n          <p>\r\n            Each character class has different stats and starting items. Your\r\n            stats determine your character's chances of succeeding in various\r\n            checks during combat.\r\n          </p>\r\n          <p>\r\n            For example, if your character has 76 Strength, then each Strength\r\n            check has a 76% chance of succeeding.\r\n          </p>\r\n          <p>\r\n            So if an attack has 4 Strength checks at 76% each, then that attack\r\n            has a 33% chance of being \"perfect.\" Some attacks will have special\r\n            bonus actions when they are \"perfect.\" Such as splash damage, or\r\n            status effects.\r\n          </p>\r\n          <p>\r\n            More power attacks may require more checks or use negative-offset\r\n            stat values\r\n          </p>\r\n        </BoxContainer>\r\n        <BoxContainer>\r\n          <h1\r\n            style={{\r\n              marginTop: 8,\r\n              textAlign: 'center',\r\n              fontFamily: Theme.titleFont,\r\n              textShadow: '1px 3px 3px black',\r\n              color: 'rgba(255,255,255,1)',\r\n            }}\r\n          >\r\n            Choose your Party!\r\n          </h1>\r\n          <FlexContainer>\r\n            {party.characters.map((character) => (\r\n              <FlexContainer\r\n                key={character.id}\r\n                $direction='column'\r\n                style={{ padding: 4 }}\r\n              >\r\n                <StartCharacterCard\r\n                  character={character}\r\n                  onChange={(characterId, updater) => {\r\n                    const rc = findRawCharacter(characterId)\r\n                    if (rc) {\r\n                      upsertCharacter(updater(rc))\r\n                    }\r\n                  }}\r\n                />\r\n              </FlexContainer>\r\n            ))}\r\n          </FlexContainer>\r\n          <FlexContainer>\r\n            <FullContainer />\r\n            <RedButton\r\n              style={{ margin: '16px 0 12px 0' }}\r\n              onClick={() => {\r\n                history.push('/JSFTK_combat/party')\r\n              }}\r\n            >\r\n              Begin Adventure\r\n            </RedButton>\r\n            <FullContainer />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        <FullContainer />\r\n      </FlexContainer>\r\n      <FullContainer />\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface StartCharacterCardPropsT {\r\n  character: tProcessedCharacter\r\n  onChange: (\r\n    characterId: string,\r\n    updater: (c: tCharacter) => tCharacter,\r\n  ) => void\r\n}\r\nexport const StartCharacterCard = (props: StartCharacterCardPropsT) => {\r\n  const { character, onChange } = props\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <input\r\n        style={{\r\n          background: Theme.mediumBgColor,\r\n          border: '1px solid rgba(255,255,255,0.4)',\r\n          padding: 8,\r\n          color: 'white',\r\n          marginBottom: 8,\r\n        }}\r\n        value={character.name}\r\n        onChange={(e) => {\r\n          onChange(character.id, (c) => ({\r\n            ...c,\r\n            name: e.target.value,\r\n          }))\r\n        }}\r\n      />\r\n      <select\r\n        style={{\r\n          background: Theme.mediumBgColor,\r\n          border: '1px solid rgba(255,255,255,0.4)',\r\n          padding: 8,\r\n          color: 'white',\r\n          marginBottom: 8,\r\n        }}\r\n        value={character.class}\r\n        onChange={(e) => {\r\n          onChange(character.id, (c) => ({\r\n            ...makeCharacter(e.target.value as tCharacterClass),\r\n            id: character.id,\r\n            name: character.name,\r\n          }))\r\n        }}\r\n      >\r\n        <option value='executioner'>Executioner</option>\r\n        <option value='ranger'>Ranger</option>\r\n        <option value='student'>Student</option>\r\n        <option value='patrician'>Patrician</option>\r\n        <option value='reaper'>Reaper</option>\r\n        <option value='drifter'>Drifter</option>\r\n      </select>\r\n      <FlexContainer $direction='column' style={{ padding: 8 }}>\r\n        {STAT_BONUS_KEYS.map((key) => (\r\n          <FlexContainer key={key} style={{ height: 20 }}>\r\n            <div\r\n              style={{\r\n                width: 60,\r\n                fontSize: 12,\r\n                textTransform: 'capitalize',\r\n                marginRight: 4,\r\n              }}\r\n            >\r\n              {key}\r\n            </div>\r\n            <FullContainer>\r\n              <Gauge2\r\n                max={40}\r\n                value={character.stats[key] - 40}\r\n                color='rgba(255,255,255,0.6)'\r\n                height={15}\r\n              />\r\n            </FullContainer>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { tProcessedCharacter } from '../Character/type'\r\nimport { CELESTIAL_LOTUS } from './objects/celestial_lotus'\r\nimport { GODSBEARD } from './objects/godsbeard'\r\nimport { POISON_KNIFE } from './objects/poison_knife'\r\nimport { BEAST_DRUG } from './objects/beast_drug'\r\nimport { CURE_POTION } from './objects/curing_potion'\r\n\r\nexport const CONSUMABLE_DESCRIPTIONS: Record<\r\n  string,\r\n  (character: tProcessedCharacter) => string\r\n> = {\r\n  [GODSBEARD().cid]: (c) => `Heal for ${c.stats.consumableHealthGainOffset} HP`,\r\n  [CELESTIAL_LOTUS().cid]: () => 'Remove all Curses',\r\n  [POISON_KNIFE().cid]: () => `Inflict Poison`,\r\n  [BEAST_DRUG().cid]: () => `+5 Attack Damage`,\r\n  [CURE_POTION().cid]: () => `Cure Buring, Bleeding, Frozen and Poison`,\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { CONSUMABLE_ITEM_ICONS, CONSUMABLE_ITEM_COLORS } from '../../icons/maps'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { considateConsumableListToStack } from '../../game/Consumable/util'\r\nimport { Theme } from '../../theme'\r\nimport { CELESTIAL_LOTUS } from '../../game/Consumable/objects/celestial_lotus'\r\nimport { REMOVE_CURSES } from '../../game/Skill/skills/consumables'\r\nimport { hasAnyStatus } from '../../game/Character/util'\r\nimport { CONSUMABLE_DESCRIPTIONS } from '../../game/Consumable/constants'\r\n\r\nconst HEIGHT = 64\r\nexport interface PartyCharacterConsumablesPropsT {\r\n  character: tProcessedCharacter\r\n  consumables: tConsumable[]\r\n  onClick?: (consumable: tConsumable, index: number) => void\r\n}\r\nexport const PartyCharacterConsumables = (\r\n  props: PartyCharacterConsumablesPropsT,\r\n) => {\r\n  const { character, consumables, onClick } = props\r\n  const stack = useMemo(() => considateConsumableListToStack(consumables), [\r\n    consumables,\r\n  ])\r\n  const onStackClick = (consumable: tConsumable) => {\r\n    let index = undefined\r\n    consumables.forEach((c, i) => {\r\n      if (c.id === consumable.id) index = i\r\n    })\r\n    if (consumable.skill.healing && !(character.healthOffset === 0))\r\n      return onClick && onClick(consumable, index || 0)\r\n    if (\r\n      consumable.skill.id === REMOVE_CURSES.id &&\r\n      hasAnyStatus(character, [\r\n        'cursed-vigor',\r\n        'cursed-strength',\r\n        'cursed-luck',\r\n        'cursed-intelligence',\r\n        'cursed-dexterity',\r\n        'cursed-charisma',\r\n        'cursed-agility',\r\n      ])\r\n    ) {\r\n      return onClick && onClick(consumable, index || 0)\r\n    }\r\n  }\r\n  const filler = Array(10 - stack.length).fill(null)\r\n\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ flexWrap: 'wrap', height: HEIGHT }}\r\n    >\r\n      {stack.map((s) => (\r\n        <PartyCharacterConsumable\r\n          key={s.consumable.id}\r\n          character={character}\r\n          consumable={s.consumable}\r\n          count={s.count}\r\n          onClick={onStackClick}\r\n        />\r\n      ))}\r\n      {filler.map((f, i) => (\r\n        <ConsumableBox key={i} />\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\ninterface ConsumableBoxPropsT {\r\n  children?: JSX.Element\r\n  onClick?: () => void\r\n}\r\nconst ConsumableBox = (props: ConsumableBoxPropsT) => {\r\n  const { children, onClick } = props\r\n  return (\r\n    <FlexContainer\r\n      onClick={() => onClick && onClick()}\r\n      style={{\r\n        height: HEIGHT / 2,\r\n        width: HEIGHT / 2,\r\n        boxSizing: 'border-box',\r\n        border: '1px solid rgba(0,0,0,0.5)',\r\n        background: Theme.otherGrey,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        cursor: onClick ? 'pointer' : 'default',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      {children}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface PartyCharacterConsumablePropsT {\r\n  consumable: tConsumable\r\n  character: tProcessedCharacter\r\n  count: number\r\n  onClick?: (consumable: tConsumable) => void\r\n}\r\nexport const PartyCharacterConsumable = (\r\n  props: PartyCharacterConsumablePropsT,\r\n) => {\r\n  const { character, consumable, count, onClick } = props\r\n  return (\r\n    <HoverToolTip\r\n      content={\r\n        <PartyCharacterConsumableTooltip\r\n          character={character}\r\n          consumable={consumable}\r\n        />\r\n      }\r\n    >\r\n      <ConsumableBox onClick={() => onClick && onClick(consumable)}>\r\n        <>\r\n          <Icon\r\n            src={CONSUMABLE_ITEM_ICONS[consumable.cid]}\r\n            fill={CONSUMABLE_ITEM_COLORS[consumable.cid]}\r\n            size={24}\r\n          />\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              textShadow: '-1px 1px 1px black',\r\n              bottom: -2,\r\n              zIndex: 2,\r\n              right: 1,\r\n            }}\r\n          >\r\n            {count}\r\n          </div>\r\n        </>\r\n      </ConsumableBox>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface PartyCharacterConsumableTooltipProps {\r\n  character: tProcessedCharacter\r\n  consumable: tConsumable\r\n}\r\nexport const PartyCharacterConsumableTooltip = (\r\n  props: PartyCharacterConsumableTooltipProps,\r\n) => {\r\n  const { character, consumable } = props\r\n  const getText = CONSUMABLE_DESCRIPTIONS[consumable.cid]\r\n  return (\r\n    <BoxContainer\r\n      style={{ maxWidth: 200 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <strong>{consumable.name}</strong>\r\n      {getText && <div>{getText(character)}</div>}\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { styled } from 'styletron-react'\r\nimport { Icon } from '../Icon'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tBaseStats } from '../../game/Stats/type'\r\nimport { Theme } from '../../theme'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\n\r\ninterface CharacterStatPropsT {\r\n  statKey: keyof tBaseStats\r\n  character: tProcessedCharacter\r\n}\r\nconst CharacterStat = (props: CharacterStatPropsT) => {\r\n  const { statKey, character } = props\r\n  return (\r\n    <HoverToolTip\r\n      flex\r\n      content={\r\n        <BoxContainer\r\n          substyle={{\r\n            textTransform: 'capitalize',\r\n            background: Theme.darkBgColor,\r\n          }}\r\n        >\r\n          {statKey}\r\n        </BoxContainer>\r\n      }\r\n    >\r\n      <ResourceE $color={getStatColor(character, statKey)}>\r\n        <Icon\r\n          src={STAT_ICONS[statKey] || ''}\r\n          fill={getStatColor(character, statKey)}\r\n          size={14}\r\n          style={{ marginRight: 3, marginTop: 0 }}\r\n        />\r\n        {character.stats[statKey]}\r\n      </ResourceE>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface StatsProps {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Stats = (props: StatsProps) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      style={{ paddingTop: 4, background: Theme.darkBgColor, paddingLeft: 42 }}\r\n    >\r\n      <CharacterStat statKey='vigor' character={character} />\r\n      <CharacterStat statKey='strength' character={character} />\r\n      <CharacterStat statKey='intelligence' character={character} />\r\n      <CharacterStat statKey='dexterity' character={character} />\r\n      <CharacterStat statKey='charisma' character={character} />\r\n      <CharacterStat statKey='agility' character={character} />\r\n      <CharacterStat statKey='luck' character={character} />\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nconst ResourceE = styled('div', (props: any) => ({\r\n  height: 15,\r\n  color: props.$color,\r\n  fontSize: '15px',\r\n  padding: '0px 4px',\r\n  lineHeight: '14px',\r\n  flex: 1,\r\n  textAlign: 'center',\r\n  background: Theme.darkBgColor,\r\n  display: 'flex',\r\n}))\r\n\r\nconst getStatColor = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n): string => {\r\n  const a = character.stats[key]\r\n  const b = character.rawStats[key]\r\n  if (a > b) return Theme.evasionColor\r\n  if (b > a) return 'lightcoral'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Theme } from '../../theme'\r\nexport interface NamePropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Name = (props: NamePropsT) => {\r\n  const { character } = props\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        marginTop: -3,\r\n        marginRight: -3,\r\n        marginLeft: -3,\r\n        paddingLeft: 52,\r\n        paddingRight: 8,\r\n        background: Theme.otherGrey2,\r\n        height: 24,\r\n        alignItems: 'center',\r\n        lineHeight: '24px',\r\n        borderBottom: '1px solid rgba(255,255,255,0.1)',\r\n        boxShadow: '0px 4px 5px black',\r\n        zIndex: 2,\r\n      }}\r\n    >\r\n      <FullContainer\r\n        style={{\r\n          fontFamily: Theme.titleFont,\r\n          textShadow: '1px 1px 3px black',\r\n          flex: 1,\r\n          fontSize: 18,\r\n          lineHeight: '20px',\r\n        }}\r\n      >\r\n        {character.name}\r\n      </FullContainer>\r\n      <div\r\n        style={{\r\n          fontSize: 12,\r\n          color: 'rgba(255,255,255,0.3)',\r\n        }}\r\n      >\r\n        {character.class}\r\n      </div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Inventory from '../../icons/svg/lorc/knapsack.svg'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Tooltip } from '../Tooltip'\r\nimport { PartyActiveCharacter } from '../PartyActiveCharacter'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { Hover } from '../Hover'\r\nimport { Icon } from '../Icon'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ActionsPropsT {\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n}\r\n\r\nexport const Actions = (props: ActionsPropsT) => {\r\n  const { character, canEquip } = props\r\n  const { party } = usePartyContext()\r\n  const {\r\n    openCharacterInventoryId,\r\n    setOpenCharacterInventoryId,\r\n  } = useUIContext()\r\n  const inventoryOpen = character.id === openCharacterInventoryId\r\n  const inventoryStyle = useSpring({\r\n    opacity: inventoryOpen ? 1 : 0,\r\n    config: { tension: 500 },\r\n  })\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{ justifyContent: 'center' }}\r\n    >\r\n      <FlexContainer\r\n        $full\r\n        style={{ alignItems: 'center', justifyContent: 'center' }}\r\n      >\r\n        <Tooltip\r\n          isOpen={inventoryOpen}\r\n          direction='up'\r\n          distance={60}\r\n          background={Theme.darkBgColor}\r\n          arrow\r\n          content={\r\n            <animated.div\r\n              style={{ minWidth: 887, minHeight: 435, ...inventoryStyle }}\r\n            >\r\n              {inventoryOpen && (\r\n                <PartyActiveCharacter\r\n                  character={character}\r\n                  party={party}\r\n                  canEquip={canEquip}\r\n                  onRequestClose={() => {\r\n                    setOpenCharacterInventoryId(undefined)\r\n                  }}\r\n                />\r\n              )}\r\n            </animated.div>\r\n          }\r\n        >\r\n          <Hover delay={0}>\r\n            {({ isHovering }) => (\r\n              <Icon\r\n                src={Inventory}\r\n                fill={\r\n                  isHovering ? 'rgba(255,255,255,1)' : 'rgba(255,255,255,0.7)'\r\n                }\r\n                size={18}\r\n                shadow\r\n                onClick={() => {\r\n                  if (character.id === openCharacterInventoryId) {\r\n                    return setOpenCharacterInventoryId(undefined)\r\n                  }\r\n                  setOpenCharacterInventoryId(character.id)\r\n                }}\r\n                style={{ padding: 6, cursor: 'pointer' }}\r\n              />\r\n            )}\r\n          </Hover>\r\n        </Tooltip>\r\n      </FlexContainer>\r\n      {/*<FlexContainer\r\n        $full\r\n        style={{ alignItems: 'center', justifyContent: 'center' }}\r\n      >\r\n        <Icon\r\n          src={Details}\r\n          fill={'rgba(255,255,255,0.7)'}\r\n          size={18}\r\n          shadow\r\n          style={{ padding: 6, cursor: 'pointer' }}\r\n        />\r\n      </FlexContainer>*/}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { noneg } from '../../util'\r\nimport { usePrevious } from '../../hooks/usePrevious'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface HealthPropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Health = (props: HealthPropsT) => {\r\n  const { character } = props\r\n  const health = noneg(character.health)\r\n  const [storedHealth, setStoredHealth] = useState(0)\r\n\r\n  useEffect(() => {\r\n    setStoredHealth(health)\r\n  }, [health])\r\n\r\n  return (\r\n    <div style={{ position: 'relative', zIndex: 3 }}>\r\n      <span\r\n        style={{\r\n          padding: '4px 0',\r\n          paddingLeft: 44,\r\n          fontSize: 56,\r\n          height: 56,\r\n          minWidth: 86,\r\n          lineHeight: '64px',\r\n          color: Theme.healthRedColor,\r\n          fontFamily: 'New Rocker',\r\n          display: 'flex',\r\n          textAlign: 'center',\r\n          textShadow: '1px 1px 3px black',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <Spring\r\n          from={{ hp: storedHealth || 0 }}\r\n          to={{ hp: health }}\r\n          config={{ friction: 70, mass: 5, tension: 300, clamp: true }}\r\n        >\r\n          {(hpp) => <span style={{}}>{Math.floor(hpp.hp)}</span>}\r\n        </Spring>\r\n      </span>\r\n      <ToastContainer />\r\n    </div>\r\n  )\r\n}\r\n","import { useSpring } from 'react-spring'\r\n\r\nconst springConfig = {\r\n  mass: 1,\r\n  tension: 1000,\r\n  friction: 15,\r\n}\r\nconst from = () => ({\r\n  transform: `rotate(0deg)`,\r\n})\r\nconst to = () => ({\r\n  transform: `rotate(3deg)`,\r\n})\r\n\r\nexport const useElementShake = () => {\r\n  const [shakeStyles, dispatch] = useSpring(() => ({\r\n    to: async (next: Function) => {\r\n      await next(to())\r\n    },\r\n\r\n    config: springConfig,\r\n    from: from(),\r\n    immediate: true,\r\n    reset: true,\r\n    reverse: true,\r\n  }))\r\n\r\n  const exec = () => {\r\n    dispatch({\r\n      ...to(),\r\n      config: springConfig,\r\n      from: from(),\r\n      immediate: false,\r\n      reset: true,\r\n      reverse: true,\r\n    } as any)\r\n  }\r\n\r\n  return { styles: shakeStyles, exec }\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { XPGauge, HealthGauge } from '../Gauge'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { styled } from 'styletron-react'\r\nimport { TagPreview } from '../TagPreview'\r\nimport { PartyCharacterConsumables } from '../PartyCharacterConsumables'\r\nimport { Stats } from './Stats'\r\nimport { Name } from './Name'\r\nimport { Actions } from './Actions'\r\nimport { Health } from './Health'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { usePlayerCharacterNotifications } from '../../hooks/usePlayerCharacterNotifications'\r\nimport { Icon } from '../Icon'\r\nimport { CHARACTER_CLASS_ICONS } from '../../icons/maps'\r\nimport { CHARACTER_CLASS_COLORS } from '../../game/Character/constants'\r\nimport { Theme } from '../../theme'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { ZERO_STATS } from '../../game/Stats/constants'\r\nimport { HoverHexBadge, HexBadge } from '../../elements/shapes'\r\nimport { animated } from 'react-spring'\r\nimport { useElementShake } from '../../hooks/useElementShake'\r\n\r\nexport interface PartyCharacterProps {\r\n  character: tProcessedCharacter\r\n  selected?: boolean\r\n  showActions?: boolean\r\n  onClick?: () => void\r\n  onConsumableClick?: (consumable: tConsumable, index: number) => void\r\n  push: (contents: JSX.Element, type?: string) => void\r\n}\r\nconst Wrapper = styled(animated.div, (props: any) => {\r\n  const { $active } = props\r\n  return {\r\n    margin: 10,\r\n    display: 'flex',\r\n    position: 'relative',\r\n    transform: $active ? 'scale(1.05)' : 'scale(1)',\r\n    transition: 'all 0.4s',\r\n    userSelect: 'none',\r\n  }\r\n})\r\n\r\nconst Halo = styled('div', (props: any) => {\r\n  const { $active, $targeted, $light } = props\r\n  const left = $light ? -20 : 0\r\n  const leftR = $light ? -10 : 0\r\n  return {\r\n    boxShadow: $active\r\n      ? `${left}px 0px 20px ${$light ? 'rgba(255,255,255,0.4)' : 'white'}`\r\n      : $targeted\r\n      ? `${leftR}px 0px 20px #ff6224  `\r\n      : 'none',\r\n  }\r\n})\r\n\r\nexport const PartyCharacter = (props: PartyCharacterProps) => {\r\n  const {\r\n    character,\r\n    selected,\r\n    showActions = true,\r\n    onConsumableClick,\r\n    push,\r\n  } = props\r\n  const { playerCanEquipItem } = useUIContext()\r\n  const { activeRound, activeCharacter } = useCombatContext()\r\n  const targetIds = activeRound?.targetResults.map((r) => r.target.id)\r\n  const active = activeCharacter?.id === character.id\r\n  const targeted = targetIds?.includes(character.id)\r\n  const { styles, exec } = useElementShake()\r\n  usePlayerCharacterNotifications(character, push, exec)\r\n  return (\r\n    <animated.div style={styles}>\r\n      <Wrapper\r\n        $active={active}\r\n        style={{\r\n          opacity: character.health <= 0 ? 0.5 : 1,\r\n        }}\r\n      >\r\n        <HexBadge\r\n          size={110}\r\n          stroke={2}\r\n          color={CHARACTER_CLASS_COLORS[character.class] || Theme.darkBgColor}\r\n          style={{\r\n            padding: 8,\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            transition: 'all 0.3s',\r\n            marginRight: -58,\r\n            marginTop: -11,\r\n            zIndex: 3,\r\n          }}\r\n          childStyle={{\r\n            marginTop: -20,\r\n          }}\r\n        >\r\n          <Icon\r\n            src={CHARACTER_CLASS_ICONS[character.class]}\r\n            size={72}\r\n            shadow\r\n            style={{ marginRight: -4 }}\r\n            fill={selected ? 'white' : 'rgba(255,255,255,0.5)'}\r\n          />\r\n        </HexBadge>\r\n        <Halo $active={active} $targeted={targeted}>\r\n          <BoxContainer\r\n            style={{\r\n              borderWidth: 2,\r\n              transition: 'all 1s',\r\n            }}\r\n            substyle={{\r\n              padding: 0,\r\n              minWidth: 312,\r\n              background: Theme.darkBgColorSolid,\r\n            }}\r\n          >\r\n            <FlexContainer style={{ border: '2px solid black' }}>\r\n              <FlexContainer $full $direction='column'>\r\n                <Name character={character} />\r\n                <FlexContainer style={{ background: Theme.mediumBgColor }}>\r\n                  <Health character={character} />\r\n                  <FlexContainer $full style={{ maxWidth: 160, minWidth: 160 }}>\r\n                    <PartyCharacterConsumables\r\n                      character={character}\r\n                      consumables={character.consumables}\r\n                      onClick={onConsumableClick}\r\n                    />\r\n                  </FlexContainer>\r\n                  <FlexContainer $full $direction='column'>\r\n                    {showActions && (\r\n                      <Actions\r\n                        character={character}\r\n                        canEquip={playerCanEquipItem}\r\n                      />\r\n                    )}\r\n                  </FlexContainer>\r\n                </FlexContainer>\r\n                <FullContainer />\r\n                <FlexContainer $direction='column' style={{ paddingLeft: 38 }}>\r\n                  <HealthGauge\r\n                    character={character}\r\n                    style={{ borderRight: 'none' }}\r\n                  />\r\n                  <XPGauge\r\n                    character={character}\r\n                    style={{ borderRight: 'none' }}\r\n                  />\r\n                </FlexContainer>\r\n                <HoverHexBadge\r\n                  position={{ bottom: 15, left: 88 }}\r\n                  size={42}\r\n                  rotate\r\n                  childStyle={{ paddingTop: 1 }}\r\n                  content={<BoxContainer dark>Character Level</BoxContainer>}\r\n                >\r\n                  <span\r\n                    style={{\r\n                      color: 'rgba(98, 128, 116,1)',\r\n                      fontSize: 24,\r\n                      lineHeight: '28px',\r\n                    }}\r\n                  >\r\n                    {character.level}\r\n                  </span>\r\n                </HoverHexBadge>\r\n                <Stats character={character} />\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          </BoxContainer>\r\n        </Halo>\r\n        <FlexContainer\r\n          style={{\r\n            position: 'absolute',\r\n            top: '-24px',\r\n            right: '4px',\r\n          }}\r\n        >\r\n          <>\r\n            {character.status.map((status) => (\r\n              <TagPreview direction='up' status={status} />\r\n            ))}\r\n            {character.immunities.map((status, i) => (\r\n              <TagPreview\r\n                key={i}\r\n                immunity={true}\r\n                status={{\r\n                  type: status,\r\n                  immunities: [],\r\n                  stack: 0,\r\n                  stats: ZERO_STATS,\r\n                  duration: -1,\r\n                }}\r\n              />\r\n            ))}\r\n          </>\r\n        </FlexContainer>\r\n        <HoverHexBadge\r\n          position={{\r\n            bottom: 64,\r\n            left: -1,\r\n          }}\r\n          rotate\r\n          size={32}\r\n          childStyle={{\r\n            color: Theme.physicalColor,\r\n            fontSize: 18,\r\n            paddingTop: 1,\r\n          }}\r\n          content={<BoxContainer dark>Armor</BoxContainer>}\r\n        >\r\n          <span>{character.stats.armor}</span>\r\n        </HoverHexBadge>\r\n        <HoverHexBadge\r\n          position={{\r\n            bottom: 33,\r\n            left: -1,\r\n          }}\r\n          rotate\r\n          size={32}\r\n          childStyle={{\r\n            color: Theme.magicColor,\r\n            fontSize: 18,\r\n            paddingTop: 1,\r\n          }}\r\n          content={<BoxContainer dark>Magic Resistance</BoxContainer>}\r\n        >\r\n          <span>{character.stats.resistance}</span>\r\n        </HoverHexBadge>\r\n        <HoverHexBadge\r\n          position={{\r\n            bottom: 18,\r\n            left: 25,\r\n          }}\r\n          rotate\r\n          size={32}\r\n          childStyle={{\r\n            color: Theme.evasionColor,\r\n            fontSize: 18,\r\n            paddingTop: 1,\r\n          }}\r\n          content={<BoxContainer dark>Evasion</BoxContainer>}\r\n        >\r\n          <span>{character.stats.evasion}</span>\r\n        </HoverHexBadge>\r\n        <HoverHexBadge\r\n          direction='up'\r\n          rotate={true}\r\n          content={<BoxContainer dark>Weapon Damage</BoxContainer>}\r\n          position={{\r\n            bottom: -4,\r\n            left: 52,\r\n          }}\r\n          size={42}\r\n          childStyle={{\r\n            color:\r\n              character.weapon.damage.type === 'physical'\r\n                ? Theme.physicalColor\r\n                : Theme.magicColor,\r\n            fontSize: 24,\r\n            paddingTop: 1,\r\n          }}\r\n        >\r\n          <span>\r\n            {(character.weapon.damage.value +\r\n              character.stats.attackDamageOffset) *\r\n              character.stats.attackDamageModifier}\r\n          </span>\r\n        </HoverHexBadge>\r\n      </Wrapper>\r\n    </animated.div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { PartyCharacter } from '../PartyCharacter'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { RedButton } from '../../elements/button'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { LocalToastRp } from '../../contexts/LocalToastContext'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\n\r\nexport interface PlayerPartyPropsT {\r\n  party: tProcessedParty\r\n  onCharacterClick?: (character: tProcessedCharacter) => void\r\n  onConsumableClick?: (\r\n    character: tProcessedCharacter,\r\n    consumableIndex: number,\r\n    consumable: tConsumable,\r\n  ) => void\r\n}\r\nexport const PlayerParty = (props: PlayerPartyPropsT) => {\r\n  const { party, onCharacterClick, onConsumableClick } = props\r\n  const {\r\n    activeCharacter,\r\n    selectedSkill,\r\n    next,\r\n    onSkillSelect,\r\n  } = useCombatContext()\r\n  const { currentEncounter } = useGameStateContext()\r\n\r\n  const showConfirmButton = (c: tProcessedCharacter) =>\r\n    selectedSkill &&\r\n    activeCharacter &&\r\n    c.health > 0 &&\r\n    ((selectedSkill.targetType === 'self' && c.id === activeCharacter.id) ||\r\n      selectedSkill.targetType === 'ally')\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          alignItems: 'flex-end',\r\n          cursor: selectedSkill?.targetType === 'party' ? 'pointer' : 'default',\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <FlexContainer\r\n            $direction='column'\r\n            key={c.id}\r\n            style={{ height: 177, justifyContent: 'flex-end' }}\r\n          >\r\n            {showConfirmButton(c) && (\r\n              <FlexContainer style={{ justifyContent: 'center' }}>\r\n                <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n                  <RedButton onClick={() => next(c)} $direction='up'>\r\n                    {c.id === activeCharacter.id\r\n                      ? 'Target Self'\r\n                      : 'Target Ally'}\r\n                  </RedButton>\r\n                </div>\r\n              </FlexContainer>\r\n            )}\r\n            <LocalToastRp>\r\n              {({ push }) => (\r\n                <PartyCharacter\r\n                  push={push}\r\n                  selected={\r\n                    currentEncounter &&\r\n                    currentEncounter.type !== 'shop' &&\r\n                    activeCharacter &&\r\n                    c &&\r\n                    c.id === activeCharacter.id\r\n                  }\r\n                  character={c}\r\n                  onClick={() => onCharacterClick && onCharacterClick(c)}\r\n                  onConsumableClick={(consumable, index) => {\r\n                    try {\r\n                      if (!c || !consumable || index === undefined) return\r\n                      if (onConsumableClick) {\r\n                        onConsumableClick(c, index, consumable)\r\n                      }\r\n                      if (c && c.id === activeCharacter.id) {\r\n                        onSkillSelect(consumable.skill, index)\r\n                      }\r\n                    } catch (e) {}\r\n                  }}\r\n                />\r\n              )}\r\n            </LocalToastRp>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && selectedSkill.targetType === 'party' && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n            <RedButton onClick={() => next(party)}>Target Party</RedButton>\r\n          </div>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useGameStateContext } from '../GameStateContext'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { makeParty } from '../../game/Party/util'\r\nimport { tCombatEncounter } from '../../game/Encounter/type'\r\nimport { CombatContextProvider } from '.'\r\n\r\nexport interface LinkedCombatContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const LinkedCombatContext = (\r\n  props: LinkedCombatContextProviderPropsT,\r\n) => {\r\n  const { children } = props\r\n  const { currentEncounter, level, floor } = useGameStateContext()\r\n  const [combatParty, setCombatParty] = useState<tParty>(\r\n    makeParty(level, floor),\r\n  )\r\n  useEffect(() => {\r\n    if (currentEncounter && (currentEncounter as tCombatEncounter).party)\r\n      setCombatParty((currentEncounter as tCombatEncounter).party)\r\n  }, [currentEncounter])\r\n\r\n  return (\r\n    <CombatContextProvider\r\n      enemyParty={combatParty}\r\n      setEnemyParty={setCombatParty}\r\n      onRequestNewParty={() => {}}\r\n    >\r\n      {children}\r\n    </CombatContextProvider>\r\n  )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { getEncounterBg } from '../../game/Encounter/constants'\r\n\r\nexport interface AppBgPropsT {\r\n  children: JSX.Element | JSX.Element[]\r\n}\r\nexport const AppBg = (props: AppBgPropsT) => {\r\n  const { children } = props\r\n  const { floor, level } = useGameStateContext()\r\n  const bg = useMemo(() => {\r\n    return getEncounterBg(level, floor)\r\n  }, [floor, level])\r\n\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        background: `url(${bg.bg}) center center fixed no-repeat`,\r\n        backgroundSize: 'cover',\r\n        transition: 'all 2s',\r\n      }}\r\n    >\r\n      <FlexContainer\r\n        $full\r\n        $direction='column'\r\n        style={{ background: bg.overlay, transition: 'all 2s' }}\r\n      >\r\n        {children}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ForestBg from './assets/img/forests/flat-forestred.jpg'\r\nimport Forest2 from './assets/img/forests/8.png'\r\nimport Dungeon1 from './assets/img/dungeon/4.png'\r\nimport { Switch } from 'react-router-dom'\r\nimport { Combat } from './domain/Combat'\r\nimport { CombatLogContextProvider } from './contexts/CombatLogContext'\r\nimport { ModalContextProvider } from './contexts/ModalContext'\r\nimport { makeRoute, RouteController } from './routes'\r\nimport { Party } from './domain/Party'\r\nimport { Start } from './domain/Start'\r\nimport { UIContextProvider, useUIContext } from './contexts/UIContext'\r\nimport { usePartyContext } from './contexts/PartyContext'\r\nimport { PlayerParty } from './components/PlayerParty'\r\nimport { FlexContainer, FullContainer } from './elements/flex'\r\nimport { LinkedCombatContext } from './contexts/CombatContext/context'\r\nimport { AppBg } from './components/AppBg'\r\n\r\nconst CombatDomain = () => {\r\n  return (\r\n    <CombatLogContextProvider>\r\n      <Combat />\r\n    </CombatLogContextProvider>\r\n  )\r\n}\r\n\r\nconst GlobalCharacters = () => {\r\n  const { party } = usePartyContext()\r\n  const { onCharacterConsumableClick } = useUIContext()\r\n  return (\r\n    <div style={{ marginBottom: 30 }}>\r\n      <PlayerParty\r\n        party={party}\r\n        onConsumableClick={(c, i, item) => {\r\n          if (onCharacterConsumableClick) {\r\n            onCharacterConsumableClick(c, i, item)\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const App = () => {\r\n  return (\r\n    <ModalContextProvider>\r\n      <LinkedCombatContext>\r\n        <UIContextProvider>\r\n          <AppBg>\r\n            <RouteController />\r\n            <FullContainer>\r\n              <Switch>\r\n                {makeRoute('/party', Party)}\r\n                {makeRoute('/combat', CombatDomain)}\r\n                {makeRoute('/', Start)}\r\n              </Switch>\r\n            </FullContainer>\r\n            <GlobalCharacters />\r\n          </AppBg>\r\n        </UIContextProvider>\r\n      </LinkedCombatContext>\r\n    </ModalContextProvider>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './index.css'\n\nimport { Provider as StyletronProvider, DebugEngine } from 'styletron-react'\nimport { Client as Styletron } from 'styletron-engine-atomic'\nimport { Provider as ReduxProvider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { makeStore } from './state'\nimport { PartyContextProvider } from './contexts/PartyContext'\nimport { GameStateContextProvider } from './contexts/GameStateContext'\n\nconst debug = process.env.NODE_ENV === 'production' ? void 0 : new DebugEngine()\nconst engine: Styletron = new Styletron()\nconst store = makeStore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n        <GameStateContextProvider>\n          <PartyContextProvider>\n            <Router>\n              <App />\n            </Router>\n          </PartyContextProvider>\n        </GameStateContextProvider>\n      </StyletronProvider>\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport party from './party'\r\nimport game from './game'\r\n\r\nexport const makeStore = () =>\r\n  createStore(combineReducers({ party, game }), compose(applyMiddleware(thunk)))\r\n"],"sourceRoot":""}