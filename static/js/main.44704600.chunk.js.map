{"version":3,"sources":["icons/svg/delapouite/heart-beats.svg","icons/svg/delapouite/biceps.svg","icons/svg/lorc/brain.svg","icons/svg/delapouite/eye-target.svg","icons/svg/lorc/juggler.svg","icons/svg/lorc/sprint.svg","icons/svg/lorc/clover.svg","icons/svg/delapouite/convergence-target.svg","icons/svg/lorc/star-swirl.svg","icons/svg/sbed/targeted.svg","icons/svg/lorc/dodging.svg","icons/svg/delapouite/sticky-boot.svg","icons/svg/lorc/high-shot.svg","icons/svg/delapouite/shield-impact.svg","icons/svg/lorc/fire-zone.svg","icons/svg/lorc/ubisoft-sun.svg","icons/svg/lorc/flat-hammer.svg","icons/svg/lorc/hammer-drop.svg","icons/svg/lorc/bordered-shield.svg","icons/svg/lorc/robe.svg","icons/svg/lorc/scale-mail.svg","icons/svg/lorc/lightning-shield.svg","icons/svg/delapouite/robin-hood-hat.svg","icons/svg/lorc/pointy-hat.svg","icons/svg/delapouite/herbs-bundle.svg","icons/svg/delapouite/skills.svg","icons/svg/lorc/knapsack.svg","icons/svg/delapouite/light-backpack.svg","icons/svg/delapouite/leather-armor.svg","icons/svg/lorc/split-cross.svg","icons/svg/delapouite/coins.svg","util/getRandom.ts","util/noneg.ts","objects/Stats.ts","functions/Entity.ts","objects/Status.ts","objects/Traits.ts","functions/Stats.ts","functions/Traits.ts","functions/makeCheck.ts","objects/skills/smash.ts","objects/skills/shockwave.ts","objects/weapons/blacksmiths_hammer.ts","objects/skills/shot.ts","objects/skills/snipe_shot.ts","objects/weapons/hunting_bow.ts","objects/skills/surge.ts","objects/skills/area_blast.ts","objects/weapons/scholars_book.ts","objects/skills/alto.ts","objects/skills/dazzle.ts","objects/Weapon.ts","objects/weapons/simple_lute.ts","objects/skills/taunt.ts","objects/armor/simple_iron_shield.ts","objects/Armor.ts","objects/skills/enemy/bite.ts","objects/enemies/timberwolf.ts","objects/skills/enemy/slap.ts","objects/enemies/vale_imp.ts","objects/skills/enemy/impale.ts","objects/enemies/beastman.ts","objects/consumables/godsbeard.ts","objects/Item.ts","functions/Character.ts","functions/Weapon.ts","functions/Roll.ts","objects/skills/enemy/sting.ts","objects/enemies/bee.ts","objects/skills/enemy/stab.ts","objects/armor/adventure_boots.ts","objects/armor/fur_boots.ts","objects/armor/fur_armor.ts","objects/armor/explorers_boots.ts","objects/armor/explorers_hat.ts","objects/armor/explorers_cloak.ts","objects/enemies/bandit.ts","objects/Party.ts","objects/enemies/buccaneer.ts","functions/Party.ts","objects/Skills.ts","functions/Damage.ts","functions/Skill.ts","functions/CombatCommitter.ts","objects/armor/adventure_cloak.ts","objects/armor/performers_boots.ts","objects/armor/performers_vest.ts","objects/armor/index.ts","objects/skills/protect.ts","objects/weapons/dusty_book.ts","objects/skills/ritardando.ts","objects/skills/symphony.ts","objects/weapons/index.ts","objects/weapons/barbat.ts","state/party/index.ts","state/util.ts","hooks/useActions.ts","contexts/PartyContext/index.tsx","types/CombatQueue.ts","contexts/ModalContext/reducer.ts","contexts/ModalContext/index.tsx","elements/button.tsx","elements/flex.ts","contexts/CombatContext/index.tsx","functions/AI.ts","components/Hover/index.tsx","elements/box.tsx","components/Tooltip/index.tsx","hooks/useOnClickOutside.ts","elements/monospace.tsx","objects/Character.ts","components/Gauge/index.tsx","elements/badge.tsx","components/Icon/index.tsx","icons/maps.tsx","components/TagPreview/index.tsx","components/CharacterImage/index.tsx","functions/Consumable.ts","components/PartyCharacterConsumables/index.tsx","hooks/usePrevious.ts","components/PartyActiveCharacter/StatBar.tsx","components/PartyActiveCharacter/Items.tsx","components/PartyActiveCharacter/Name.tsx","components/PartyActiveCharacter/Image.tsx","components/PartyActiveCharacter/ArmorList.tsx","components/PartyActiveCharacter/WeaponList.tsx","components/PartyActiveCharacter/MenuSelect.tsx","components/StatsPreview/index.tsx","components/ArmorPreview/index.tsx","components/SkillChecks/index.tsx","components/WeaponPreview/index.tsx","components/PartyActiveCharacter/HoverArea.tsx","components/PartyActiveCharacter/index.tsx","components/PartyCharacter/index.tsx","components/CombatPlayerParty/index.tsx","components/RoundResultRenderer/index.tsx","components/SkillPreview/index.tsx","components/CombatActions/index.tsx","components/EnemyCharacter/index.tsx","components/CombatParty/index.tsx","components/AppHeader/index.tsx","components/PartyResources/index.tsx","components/CombatQueue/index.tsx","contexts/CombatLogContext/util.tsx","contexts/CombatLogContext/index.tsx","components/CombatLog/index.tsx","domain/Combat.tsx","routes/index.tsx","components/PartyCharacters/index.tsx","domain/Party.tsx","domain/Start.tsx","App.tsx","serviceWorker.ts","index.tsx","state/index.ts","icons/svg/lorc/broadsword.svg","assets/img/flat-forestred.jpg","icons/svg/lorc/heavy-timer.svg","icons/svg/delapouite/g-clef.svg","icons/svg/lorc/shieldcomb.svg","icons/svg/delapouite/chest-armor.svg","icons/svg/delapouite/viking-shield.svg","icons/svg/lorc/leather-boot.svg","icons/svg/lorc/visored-helm.svg"],"names":["module","exports","getRandom","items","Math","floor","random","length","noneg","value","ZERO_STATS","vigor","strength","intelligence","perception","talent","agility","luck","armor","resistance","evasion","healthRegen","healthOffset","health","criticalChance","damageModifier","damageOffset","damageReflection","weaknessModifier","goldModifier","consumableHealthGainOffset","CLASS_STARTING_STATS","blacksmith","hunter","scholar","bard","enemy","DAMAGE_BONUS_KEYS","DEFENSE_BONUS_KEYS","STAT_BONUS_KEYS","STAT_KEY_LABELS","makeEntity","name","id","v4","STATUS_EFFECTS","bleeding","type","canStack","duration","traits","persist","commitChance","committedTraits","stats","burning","frozen","poisoned","targeted","description","dazed","evasive","protected","ZERO_TRAIT","combineStats","reduce","p","c","combineTraits","getTraitsFromObjects","parents","makeCheck","key","offset","SMASH","targetType","damage","healing","isBasicAttack","rolls","perfectSplash","perfectPierce","perfectStatus","SHOCKWAVE","BLACKSMITHS_HAMMER","itemType","rarity","twoHand","attackType","skills","SHOT","SNIPE_SHOT","HUNTING_BOW","SURGE","AREA_BLAST","SCHOLARS_BOOK","ALTO","DAZZLE","CLASS_STARTING_WEAPONS","TAUNT","SIMPLE_IRON_SHIELD","resource","CLASS_STARTING_ARMOR","BITE","TIMBERWOLF","isCharacter","partyId","level","xp","class","consumables","status","immunities","weapon","possibleRewards","gold","SLAP","VALE_IMP","IMPALE","BEASTMAN","GODSBEARD","skill","ITEM_RARITY_COLORS","common","uncommon","rare","mythic","CLASS_STARTING_CONSUMABLES","CHARACTER_RESOURCES","checkForProcessedCharacter","character","processed","Error","getStatusEffects","map","processCharacter","statusEffects","getTraits","combinedTrait","processWeapon","getSkillsFromObjects","getSkills","hVigor","startingHealth","rawStats","dead","makeCharacter","characterClass","decrementStatusDurations","filter","hasStatus","statusType","s","includes","addMultipleStatus","statusTypes","char","statusEffect","existingStatus","find","findStatus","i","hasImmunity","t","stack","addStatus","getCharacterStat","statValue","getDamageResistance","damageType","addStatusAndTags","commitDamage","resolveCheck","check","roll","DiceRoll","input","result","total","averageTotal","maxTotal","minTotal","output","getPassedCount","results","r","didAllPass","every","STING","INFECTIOUS_STING","BEE","STAB","ADVENTURE_BOOTS","FUR_BOOTS","FUR_ARMOR","EXPLORERS_BOOTS","EXPLORERS_HAT","EXPLORERS_CLOAK","BANDIT","PLAYER_PARTY_ID","ALL_ENEMY_PARTY_COMBOS","isParty","e","checkForProcessedParty","party","characters","forEach","makeParty","findCharacterInParty","updateCharacter","characterId","updater","processParty","getRolledRewards","checkedCharacter","index","undefined","rewards","getRewardsFromCharacter","PERFECT_DISPLAY_INFO","splash","pierce","heal","getSplashDamage","rawDamage","resolveSkillTarget","target","makeSkillTarget","getPerfectText","perfectKeys","base","getPerfectKeys","getSkillDamage","splashDamage","res","pre","text","source","damageResistances","round","getSkillResults","targets","consumableIndex","sourceResult","rollResults","passedCount","perfect","criticalHitResult","criticalSuccess","accuracySuccess","addedStatus","getSourceSkillResult","console","log","dodgeResult","isEvasive","dodgeSuccess","totalDamage","reflectedDamage","healthRegenMaximum","regeneratedHealth","blockedDamage","willDie","getTargetSkillResult","localUpdater","commitSkillResults","enemyParty","commitRoundActions","sourceParty","targetParty","localUpdate","splashDamageResistance","ADVENTURE_CLOAK","PERFORMERS_BOOTS","PERFORMERS_VEST","ALL_ARMOR","PROTECT","DUSTY_BOOK","RITARDANDO","SYMPHONY","ALL_WEAPONS","actionCreators","payload","actions","updateParty","dispatch","upsertCharacter","deleteCharacter","core","state","action","jack","INITIAL_STATE","makeReducer","initialState","coreFn","usePartyActions","useDispatch","useMemo","bindActionCreators","useActions","defaultContextValue","rawParty","activeCharacter","findCharacter","findRawCharacter","setActiveCharacter","equipItem","item","PartyContext","React","createContext","PartyContextProvider","props","children","useSelector","useState","activeCharacterId","setActiveCharacterId","Provider","existingArmor","a","equipArmor","existingWeapon","equipWeapon","usePartyContext","useContext","makeCombatQueue","sort","b","getMin","queue","Object","keys","Number","POSITIVE_INFINITY","consolidateQueue","min","getFirst","isOpen","contents","callback","blocking","styles","OPEN","CLOSE","style","reducer","coreFunction","ModalContext","open","close","setBlocking","setPayload","setContents","setCallback","setStyles","useModalContext","getContextValue","Modal","setAppElement","ModalContextProvider","reducerValue","useReducer","context","onRequestClose","content","backgroundColor","color","width","margin","bottom","borderColor","modal","overlay","zIndex","Button","styled","cursor","background","boxShadow","textShadow","border","outline","padding","RedButton","withStyle","ConfirmButton","$direction","borderTop","borderBottom","animationDirection","animationIterationCount","animationName","FlexContainer","display","flexDirection","flex","$full","FullContainer","defaultValue","selectedSkill","selectedTargets","selectedConsumableIndex","roundResults","activeRound","isRunning","isDone","isRenderingResult","onSkillSelect","onTargetsSelect","onConsumableSelect","start","next","commit","CombatContext","useCombatContext","CombatContextProvider","setEnemyParty","history","useHistory","resultCommitter","setIsRunning","setIsDone","setIsRenderingResult","setQueue","roundId","setRoundId","setRoundResults","setActiveRound","selectedTarget","setSelectedTarget","setSelectedSkill","setSelectedConsumableIndex","useCallback","useEffect","completeRound","updatedCharacters","validateQueue","shiftQueue","parties","playerParty","targetedCharacters","getSkillTargetOptions","getAIAction","execEnemyTurn","reward","consolidateRewards","commitRewards","textAlign","onClick","push","alert","nextTarget","roundTarget","Hover","delay","internalHovering","setInternalHovering","isHovering","setIsHovering","guid","setGuid","useLayoutEffect","setTimeout","onMouseEnter","preventDefault","stopPropagation","onMouseLeave","BoxContainer","substyle","tag","Element","rest","boxSizing","Tooltip","direction","tagName","arrow","HoverToolTip","ClickToolTip","setIsOpen","ref","useRef","handler","listener","event","current","contains","document","addEventListener","removeEventListener","useOnClickOutside","v","Monospace","fontFamily","fontWeight","Monodiv","CHARACTER_XP_MAX","1","2","3","Gauge","max","height","percentage","borderLeft","position","left","maxWidth","minWidth","alignItems","justifyContent","transition","lineHeight","right","top","fontSize","overflow","HealthGauge","XPGauge","Div","transform","Badge","withWrapper","$absolute","$size","borderRadius","$color","$top","$bottom","$right","$left","HoverBadge","badgeProps","distance","Icon","src","size","fill","shadow","loading","setLoading","svg","setSvg","fetch","then","className","dangerouslySetInnerHTML","__html","STATI_ICONS","Vigor","Strength","Brain","Awareness","Juggler","Agility","Clover","accuracy","Accuracy","STATUS_ICONS","Dazed","Targeted","Evasive","Protect","SpeedDown","SKILL_ICONS","Shot","SnipeShot","Surge","AreaBast","Dazzle","Smash","Shockwave","Taunt","Alto","ARMOR_TYPE_ICONS","MagicArmor","ClothArmor","Armor","Shield","MagicShield","Footwear","Hat","MagicHat","Helmet","RESOURCE_ICONS","Weapon","offhand","body","head","feet","CONSUMABLE_ITEM_ICONS","Godsbeard","CONSUMABLE_ITEM_COLORS","TagPreview","marginBottom","CharacterImage","alt","considateConsumableListToStack","consumable","count","updateStackItem","PartyCharacterConsumables","onStackClick","filler","Array","flexWrap","f","ConsumableBox","HEIGHT","PartyCharacterConsumable","PartyCharacterConsumableTooltip","usePrevious","getStatColor","StatBar","paddingTop","paddingBottom","marginRight","ItemRow","paddingLeft","userSelect","Items","setActiveItem","Name","marginTop","Image","ArmorItem","$active","ArmorList","canEquip","activeItemId","setActiveItemId","localeCompare","WeaponItem","WeaponList","ACTIVE_CHARACTER_MENU_KEYS","icon","render","Weapons","MenuSelect","activeKey","onActiveKeyChange","option","paddingRight","defense_key_colors","StatsPreview","textTransform","ArmorPreview","showEquipButton","onEquipClick","rarityColor","from","Color","darken","rgb","toString","to","gradient","marginLeft","minHeight","SkillChecks","label","SkillCheck","opacity","getColor","X","getDamageColor","WeaponPreview","basicAttack","HoverArea","activeItem","foundArmor","PartyActiveCharacter","activeMenuKey","setActiveMenuKey","activeOption","o","maxHeight","ResourceE","Wrapper","$selected","$hoverable","$isHovering","CharacterStat","statKey","PartyCharacter","hoverable","selected","onConsumableClick","previousHealth","borderWidth","borderRight","hp","hpp","Inventory","Details","CombatPlayerParty","RoundResultRenderer","isModal","RoundResult","rounds","stream","Kefir","sequentially","onValue","onEnd","later","SkillPreview","perfectChance","damageString","getSkillDamageRange","CombatActions","Fragment","EnemyCharacter","CombatParty","AppHeader","PartyResources","Gold","CombatQueue","first","sortedIds","getSortedIds","bigList","_","NEGATIVE_INFINITY","getMax","widthCoef","Span","SkillSpan","CombatLogContext","combatLog","CombatLogContextProvider","setCombatLog","deadLog","setDeadLog","NameSpan","isUserParty","isEnemyParty","NameSpanBuilder","line","dLog","latestRounds","baseRound","subTarget","CombatLog","scrollRef","scrollIntoView","behavior","Combat","ForestBg","backgroundSize","makeRoute","path","Component","PartyCharacters","onCharacterClick","Party","Start","onChange","rc","StartCharacterCard","CombatDomain","rawEnemyParty","setRawEnemyParty","onRequestNewParty","PartyDomain","App","Boolean","window","location","hostname","match","engine","Styletron","store","createStore","combineReducers","compose","applyMiddleware","thunk","ReactDOM","StrictMode","debug","debugAfterHydration","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.44704600.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heart-beats.6b1fff9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/biceps.e62c221f.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain.ce65603a.svg\";","module.exports = __webpack_public_path__ + \"static/media/eye-target.4c5ae680.svg\";","module.exports = __webpack_public_path__ + \"static/media/juggler.1188c0be.svg\";","module.exports = __webpack_public_path__ + \"static/media/sprint.968b443a.svg\";","module.exports = __webpack_public_path__ + \"static/media/clover.df6a0d57.svg\";","module.exports = __webpack_public_path__ + \"static/media/convergence-target.0d2998bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/star-swirl.3045bd1f.svg\";","module.exports = __webpack_public_path__ + \"static/media/targeted.b4ce8dd7.svg\";","module.exports = __webpack_public_path__ + \"static/media/dodging.3c689d6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/sticky-boot.f097559f.svg\";","module.exports = __webpack_public_path__ + \"static/media/high-shot.eed9def8.svg\";","module.exports = __webpack_public_path__ + \"static/media/shield-impact.54fdc5c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire-zone.42e13657.svg\";","module.exports = __webpack_public_path__ + \"static/media/ubisoft-sun.30335592.svg\";","module.exports = __webpack_public_path__ + \"static/media/flat-hammer.dff14efb.svg\";","module.exports = __webpack_public_path__ + \"static/media/hammer-drop.120a92c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/bordered-shield.56c12b47.svg\";","module.exports = __webpack_public_path__ + \"static/media/robe.5b61ecba.svg\";","module.exports = __webpack_public_path__ + \"static/media/scale-mail.cb5ff7d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/lightning-shield.85367254.svg\";","module.exports = __webpack_public_path__ + \"static/media/robin-hood-hat.6bab1449.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointy-hat.d042ac98.svg\";","module.exports = __webpack_public_path__ + \"static/media/herbs-bundle.e02bcec1.svg\";","module.exports = __webpack_public_path__ + \"static/media/skills.60519e24.svg\";","module.exports = __webpack_public_path__ + \"static/media/knapsack.62049a62.svg\";","module.exports = __webpack_public_path__ + \"static/media/light-backpack.6ad63d45.svg\";","module.exports = __webpack_public_path__ + \"static/media/leather-armor.f3d5462f.svg\";","module.exports = __webpack_public_path__ + \"static/media/split-cross.fa0be1a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/coins.97dc8c40.svg\";","export const getRandom = <T>(items: T[]) =>\r\n  items[Math.floor(Math.random() * items.length)]\r\n","export const noneg = (value: number) => (value > 0 ? value : 0)\r\n","import { StatsT, CharacterClassT } from '../types'\r\n\r\nexport const ZERO_STATS: StatsT = {\r\n  vigor: 0,\r\n  strength: 0,\r\n  intelligence: 0,\r\n  perception: 0,\r\n  talent: 0,\r\n  agility: 0,\r\n  luck: 0,\r\n\r\n  armor: 0,\r\n  resistance: 0,\r\n  evasion: 0,\r\n  healthRegen: 0,\r\n\r\n  healthOffset: 0,\r\n  health: 0,\r\n\r\n  criticalChance: 0,\r\n  damageModifier: 0,\r\n  damageOffset: 0,\r\n  damageReflection: 0,\r\n  weaknessModifier: 0,\r\n  goldModifier: 0,\r\n  consumableHealthGainOffset: 0,\r\n}\r\n\r\nexport const CLASS_STARTING_STATS: Record<CharacterClassT, StatsT> = {\r\n  blacksmith: {\r\n    strength: 76,\r\n    vigor: 80,\r\n    intelligence: 40,\r\n    perception: 52,\r\n    talent: 72,\r\n    agility: 56,\r\n    luck: 50,\r\n    armor: 2,\r\n    resistance: 0,\r\n    evasion: 7,\r\n    healthOffset: 0,\r\n    health: 0,\r\n    healthRegen: 0,\r\n    criticalChance: 5,\r\n    damageModifier: 0,\r\n    damageOffset: 0,\r\n    damageReflection: 0,\r\n    weaknessModifier: 0,\r\n    goldModifier: 0,\r\n    consumableHealthGainOffset: 15,\r\n  },\r\n  hunter: {\r\n    strength: 52,\r\n    vigor: 66,\r\n    intelligence: 46,\r\n    perception: 78,\r\n    talent: 64,\r\n    agility: 78,\r\n    luck: 50,\r\n    armor: 1,\r\n    resistance: 0,\r\n    evasion: 20,\r\n    healthOffset: 0,\r\n    health: 0,\r\n    healthRegen: 0,\r\n    criticalChance: 5,\r\n    damageModifier: 0,\r\n    damageOffset: 0,\r\n    damageReflection: 0,\r\n    weaknessModifier: 0,\r\n    goldModifier: 0,\r\n    consumableHealthGainOffset: 15,\r\n  },\r\n  scholar: {\r\n    strength: 42,\r\n    vigor: 60,\r\n    intelligence: 78,\r\n    perception: 66,\r\n    talent: 70,\r\n    agility: 70,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 1,\r\n    evasion: 13,\r\n    healthOffset: 0,\r\n    health: 0,\r\n    healthRegen: 0,\r\n    criticalChance: 5,\r\n    damageModifier: 0,\r\n    damageOffset: 0,\r\n    damageReflection: 0,\r\n    weaknessModifier: 0,\r\n    goldModifier: 0,\r\n    consumableHealthGainOffset: 15,\r\n  },\r\n  bard: {\r\n    strength: 44,\r\n    vigor: 50,\r\n    intelligence: 70,\r\n    perception: 68,\r\n    talent: 78,\r\n    agility: 68,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 1,\r\n    evasion: 11,\r\n    healthOffset: 0,\r\n    health: 0,\r\n    healthRegen: 0,\r\n    criticalChance: 5,\r\n    damageModifier: 0,\r\n    damageOffset: 0,\r\n    damageReflection: 0,\r\n    weaknessModifier: 0,\r\n    goldModifier: 0,\r\n    consumableHealthGainOffset: 15,\r\n  },\r\n  enemy: ZERO_STATS,\r\n}\r\n\r\nexport const DAMAGE_BONUS_KEYS: (keyof StatsT)[] = [\r\n  'goldModifier',\r\n  'damageOffset',\r\n  'damageModifier',\r\n  'criticalChance',\r\n]\r\nexport const DEFENSE_BONUS_KEYS: (keyof StatsT)[] = [\r\n  'armor',\r\n  'resistance',\r\n  'evasion',\r\n  'healthRegen',\r\n  'damageReflection',\r\n]\r\nexport const HEALTH_FOCUS_BONUS_KEYS: (keyof StatsT)[] = ['health']\r\nexport const STAT_BONUS_KEYS: (keyof StatsT)[] = [\r\n  'vigor',\r\n  'strength',\r\n  'intelligence',\r\n  'perception',\r\n  'talent',\r\n  'agility',\r\n  'luck',\r\n]\r\n\r\nexport const STAT_KEY_LABELS: Record<keyof StatsT, string> = {\r\n  strength: ' Strength',\r\n  vigor: ' Vigor',\r\n  intelligence: ' Intelligence',\r\n  perception: ' Perception',\r\n  talent: ' Talent',\r\n  agility: ' Agility',\r\n  luck: ' Luck',\r\n  armor: ' Armor',\r\n  resistance: ' Resistance',\r\n  evasion: ' Evasion',\r\n  healthOffset: ' ERROR!',\r\n  health: ' Health',\r\n  healthRegen: ' Health Regen',\r\n  criticalChance: '% Crit Chance',\r\n  damageOffset: ' Raw Damage',\r\n  damageModifier: '% Attack Damage',\r\n  damageReflection: ' Damage Reflection',\r\n  weaknessModifier: '% Recieved Damage',\r\n  goldModifier: '% Gold Recieved',\r\n  consumableHealthGainOffset: ' HP from Consumables',\r\n}\r\n","import { v4 } from 'uuid'\r\n\r\nexport const makeEntity = (name: string = '') => ({\r\n  id: v4(),\r\n  name,\r\n})\r\n","import { StatusTypeT, StatusT } from '../types'\r\nimport { makeEntity } from '../functions/Entity'\r\nimport { ZERO_STATS } from './Stats'\r\n\r\nconst STATUS_DURATION = 5\r\nexport const STATUS_EFFECTS: Record<StatusTypeT, StatusT> = {\r\n  bleeding: {\r\n    ...makeEntity('Bleeding'),\r\n    type: 'bleeding',\r\n    canStack: false,\r\n    duration: STATUS_DURATION,\r\n    traits: [],\r\n    persist: true,\r\n    commitChance: 50,\r\n    committedTraits: [\r\n      {\r\n        duration: STATUS_DURATION,\r\n        stats: {\r\n          ...ZERO_STATS,\r\n          healthOffset: -10,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  burning: {\r\n    ...makeEntity('Burning'),\r\n    type: 'burning',\r\n    canStack: false,\r\n    duration: STATUS_DURATION,\r\n    traits: [],\r\n    persist: true,\r\n    commitChance: 100,\r\n    committedTraits: [\r\n      {\r\n        duration: STATUS_DURATION,\r\n        stats: {\r\n          ...ZERO_STATS,\r\n          healthOffset: -10,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  frozen: {\r\n    ...makeEntity('Frozen'),\r\n    type: 'frozen',\r\n    canStack: false,\r\n    persist: true,\r\n    duration: STATUS_DURATION,\r\n    traits: [\r\n      {\r\n        duration: STATUS_DURATION,\r\n        stats: {\r\n          ...ZERO_STATS,\r\n          weaknessModifier: 0.25,\r\n        },\r\n      },\r\n    ],\r\n    commitChance: 0,\r\n    committedTraits: [],\r\n  },\r\n  poisoned: {\r\n    ...makeEntity('Poisoned'),\r\n    type: 'poisoned',\r\n    canStack: true,\r\n    persist: true,\r\n    duration: STATUS_DURATION,\r\n    traits: [\r\n      {\r\n        duration: STATUS_DURATION,\r\n        stats: {\r\n          ...ZERO_STATS,\r\n          strength: -5,\r\n          intelligence: -5,\r\n          perception: -5,\r\n          talent: -5,\r\n        },\r\n      },\r\n    ],\r\n    commitChance: 100,\r\n    committedTraits: [\r\n      {\r\n        duration: STATUS_DURATION,\r\n        stats: {\r\n          ...ZERO_STATS,\r\n          healthOffset: -5,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  targeted: {\r\n    ...makeEntity('Targeted'),\r\n    type: 'targeted',\r\n    duration: 5,\r\n    traits: [],\r\n    persist: false,\r\n    committedTraits: [],\r\n    commitChance: 100,\r\n    canStack: false,\r\n    description: 'All enemies will attack this character, if able.',\r\n  },\r\n  dazed: {\r\n    ...makeEntity('Dazed'),\r\n    type: 'dazed',\r\n    duration: 5,\r\n    traits: [],\r\n    persist: false,\r\n    committedTraits: [],\r\n    commitChance: 100,\r\n    canStack: false,\r\n    description: 'Character is temporarily halted on the combat queue.',\r\n  },\r\n  evasive: {\r\n    ...makeEntity('Evasive'),\r\n    type: 'evasive',\r\n    duration: 5,\r\n    traits: [],\r\n    persist: true,\r\n    committedTraits: [],\r\n    commitChance: 100,\r\n    canStack: false,\r\n    description: 'Non-perfect attacks will miss when targeting this character.',\r\n  },\r\n  protected: {\r\n    ...makeEntity('Protected'),\r\n    type: 'protected',\r\n    duration: -1,\r\n    traits: [],\r\n    persist: false,\r\n    committedTraits: [],\r\n    commitChance: 100,\r\n    canStack: false,\r\n    description: 'Negate the next damage that targets this character.',\r\n  },\r\n  ['speed-down']: {\r\n    ...makeEntity('Speed Down'),\r\n    type: 'speed-down',\r\n    duration: 5,\r\n    persist: false,\r\n    traits: [\r\n      {\r\n        duration: 5,\r\n        stats: {\r\n          ...ZERO_STATS,\r\n          agility: -20,\r\n        },\r\n      },\r\n    ],\r\n    committedTraits: [],\r\n    commitChance: 100,\r\n    canStack: false,\r\n    description: '-20 to Speed.',\r\n  },\r\n}\r\n","import { TraitT } from '../types'\r\nimport { ZERO_STATS } from './Stats'\r\n\r\nexport const ZERO_TRAIT: TraitT = {\r\n  duration: -1,\r\n  stats: ZERO_STATS,\r\n}\r\n","import { StatsT } from '../types'\r\nimport { ZERO_STATS } from '../objects'\r\n\r\nexport const combineStats = (...stats: StatsT[]): StatsT => {\r\n  return stats.reduce(\r\n    (p, c) => ({\r\n      vigor: p.vigor + c.vigor,\r\n      strength: p.strength + c.strength,\r\n      intelligence: p.intelligence + c.intelligence,\r\n      perception: p.perception + c.perception,\r\n      talent: p.talent + c.talent,\r\n      agility: p.agility + c.agility,\r\n      luck: p.luck + c.luck,\r\n      armor: p.armor + c.armor,\r\n      resistance: p.resistance + c.resistance,\r\n      evasion: p.evasion + c.evasion,\r\n      criticalChance: p.criticalChance + c.criticalChance,\r\n      damageModifier: p.damageModifier + c.damageModifier,\r\n      damageOffset: p.damageOffset + c.damageOffset,\r\n      damageReflection: p.damageReflection + c.damageReflection,\r\n      healthOffset: p.healthOffset + c.healthOffset,\r\n      health: p.health + c.health,\r\n      healthRegen: p.healthRegen + c.healthRegen,\r\n      weaknessModifier: p.weaknessModifier + c.weaknessModifier,\r\n      goldModifier: p.goldModifier + c.goldModifier,\r\n      consumableHealthGainOffset:\r\n        p.consumableHealthGainOffset + c.consumableHealthGainOffset,\r\n    }),\r\n    ZERO_STATS,\r\n  )\r\n}\r\n","import { TraitT, HasTraitsT, HasCommittedTraits } from '../types'\r\nimport { combineStats } from './Stats'\r\nimport { ZERO_TRAIT } from '../objects'\r\n\r\nexport const combineTraits = (...traits: TraitT[]): TraitT => {\r\n  return traits.reduce(\r\n    (p, c) => ({\r\n      stats: combineStats(p.stats, c.stats),\r\n      duration: -1,\r\n    }),\r\n    ZERO_TRAIT,\r\n  )\r\n}\r\n\r\nexport const getTraitsFromObjects = (parents: HasTraitsT[]) => {\r\n  return parents.reduce((p, c) => {\r\n    return [...p, ...c.traits]\r\n  }, [] as TraitT[])\r\n}\r\nexport const getCommittedTraitsFromObjects = (\r\n  parents: HasCommittedTraits[],\r\n) => {\r\n  return parents.reduce((p, c) => {\r\n    return [...p, ...c.committedTraits]\r\n  }, [] as TraitT[])\r\n}\r\n","import { StatsT, CheckT } from '../types'\r\n\r\nexport const makeCheck = (key: keyof StatsT, offset?: number): CheckT => ({\r\n  key,\r\n  offset,\r\n})\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const SMASH: SkillT = {\r\n  ...makeEntity('Smash'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [makeCheck('strength'), makeCheck('strength'), makeCheck('strength')],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const SHOCKWAVE: SkillT = {\r\n  ...makeEntity('Shockwave'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: false,\r\n  rolls: [\r\n    makeCheck('strength', -10),\r\n    makeCheck('strength', -10),\r\n    makeCheck('strength', -10),\r\n    makeCheck('strength', -10),\r\n  ],\r\n  perfectSplash: true,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { WeaponT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { SMASH } from '../skills/smash'\r\nimport { SHOCKWAVE } from '../skills/shockwave'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const BLACKSMITHS_HAMMER: WeaponT = {\r\n  ...makeEntity(`Blacksmith's Hammer`),\r\n  itemType: 'weapon',\r\n  type: 'hammer',\r\n  rarity: 'common',\r\n  twoHand: false,\r\n  attackType: 'melee',\r\n  damage: { type: 'physical', damage: 10 },\r\n  traits: [],\r\n  skills: [SMASH, SHOCKWAVE],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const SHOT: SkillT = {\r\n  ...makeEntity('Shot'),\r\n  // TODO Damage Modifier for flying, etc...\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const SNIPE_SHOT: SkillT = {\r\n  ...makeEntity('Snipe Shot'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: false,\r\n  rolls: [\r\n    makeCheck('perception', -10),\r\n    makeCheck('perception', -10),\r\n    makeCheck('perception', -10),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { WeaponT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\nimport { SHOT } from '../skills/shot'\r\nimport { SNIPE_SHOT } from '../skills/snipe_shot'\r\n\r\nexport const HUNTING_BOW: WeaponT = {\r\n  ...makeEntity(`Hunting Bow`),\r\n  itemType: 'weapon',\r\n  type: 'bow',\r\n  rarity: 'common',\r\n  twoHand: true,\r\n  attackType: 'ranged',\r\n  damage: { type: 'physical', damage: 6 },\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        evasion: 3,\r\n      },\r\n    },\r\n  ],\r\n  skills: [SHOT, SNIPE_SHOT],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const SURGE: SkillT = {\r\n  ...makeEntity('Surge'),\r\n  damageModifier: -0.2,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [\r\n    makeCheck('intelligence'),\r\n    makeCheck('intelligence'),\r\n    makeCheck('intelligence'),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const AREA_BLAST: SkillT = {\r\n  ...makeEntity('Area Blast'),\r\n  damageModifier: -0.5,\r\n  targetType: 'group',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: false,\r\n  rolls: [\r\n    makeCheck('intelligence', -5),\r\n    makeCheck('intelligence', -5),\r\n    makeCheck('intelligence', -5),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { WeaponT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { SURGE } from '../skills/surge'\r\nimport { AREA_BLAST } from '../skills/area_blast'\r\n\r\nexport const SCHOLARS_BOOK: WeaponT = {\r\n  ...makeEntity(`Scholar's Book`),\r\n  itemType: 'weapon',\r\n  type: 'tome',\r\n  rarity: 'common',\r\n  twoHand: true,\r\n  attackType: 'ranged',\r\n  damage: { type: 'magic', damage: 6 },\r\n  traits: [],\r\n  skills: [SURGE, AREA_BLAST],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const ALTO: SkillT = {\r\n  ...makeEntity('Alto'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [makeCheck('talent'), makeCheck('talent'), makeCheck('talent')],\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const DAZZLE: SkillT = {\r\n  ...makeEntity('Dazzle'),\r\n  damageModifier: -0.5,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: false,\r\n  rolls: [makeCheck('talent', -6), makeCheck('talent', -5)],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [{ type: 'dazed', duration: 4 }],\r\n}\r\n","import { CharacterClassT, WeaponT } from '../types'\r\nimport { BLACKSMITHS_HAMMER } from './weapons/blacksmiths_hammer'\r\nimport { HUNTING_BOW } from './weapons/hunting_bow'\r\nimport { SCHOLARS_BOOK } from './weapons/scholars_book'\r\nimport { SIMPLE_LUTE } from './weapons/simple_lute'\r\n\r\nexport const CLASS_STARTING_WEAPONS: Partial<Record<\r\n  CharacterClassT,\r\n  WeaponT\r\n>> = {\r\n  blacksmith: BLACKSMITHS_HAMMER,\r\n  hunter: HUNTING_BOW,\r\n  scholar: SCHOLARS_BOOK,\r\n  bard: SIMPLE_LUTE,\r\n}\r\n","import { WeaponT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ALTO } from '../skills/alto'\r\nimport { DAZZLE } from '../skills/dazzle'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const SIMPLE_LUTE: WeaponT = {\r\n  ...makeEntity(`Simple Lute`),\r\n  itemType: 'weapon',\r\n  type: 'lute',\r\n  rarity: 'common',\r\n  twoHand: true,\r\n  attackType: 'ranged',\r\n  damage: { type: 'magic', damage: 6 },\r\n  // TODO: Gold Multiplier\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        goldModifier: 12,\r\n      },\r\n    },\r\n  ],\r\n  skills: [ALTO, DAZZLE],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const TAUNT: SkillT = {\r\n  ...makeEntity('Taunt'),\r\n  damageModifier: 0,\r\n  targetType: 'self',\r\n  damage: false,\r\n  healing: false,\r\n  isBasicAttack: false,\r\n  rolls: [makeCheck('vigor'), makeCheck('vigor')],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [\r\n    {\r\n      type: 'targeted',\r\n      duration: 5,\r\n    },\r\n  ],\r\n}\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\nimport { TAUNT } from '../skills/taunt'\r\n\r\nexport const SIMPLE_IRON_SHIELD: ArmorT = {\r\n  ...makeEntity('Simple Iron Shield'),\r\n  itemType: 'armor',\r\n  resource: 'offhand',\r\n  rarity: 'common',\r\n  type: 'shield',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 1,\r\n      },\r\n    },\r\n  ],\r\n  skills: [TAUNT],\r\n}\r\n","import { CharacterClassT, ArmorT } from '../types'\r\nimport { SIMPLE_IRON_SHIELD } from './armor/simple_iron_shield'\r\nimport { EXPLORERS_CLOAK } from './armor/explorers_cloak'\r\nimport { EXPLORERS_HAT } from './armor/explorers_hat'\r\nimport { FUR_ARMOR } from './armor/fur_armor'\r\nimport { ADVENTURE_BOOTS } from './armor/adventure_boots'\r\nimport { ADVENTURE_CLOAK } from './armor/adventure_cloak'\r\nimport { FUR_BOOTS } from './armor/fur_boots'\r\nimport { PERFORMERS_VEST } from './armor/performers_vest'\r\nimport { PERFORMERS_BOOTS } from './armor/performers_boots'\r\nimport { EXPLORERS_BOOTS } from './armor/explorers_boots'\r\n\r\nexport const CLASS_STARTING_ARMOR: Record<CharacterClassT, ArmorT[]> = {\r\n  blacksmith: [SIMPLE_IRON_SHIELD],\r\n  hunter: [],\r\n  scholar: [],\r\n  bard: [],\r\n  enemy: [],\r\n}\r\n","import { SkillT } from '../../../types'\r\nimport { makeEntity } from '../../../functions/Entity'\r\nimport { makeCheck } from '../../../functions/makeCheck'\r\n\r\nexport const BITE: SkillT = {\r\n  ...makeEntity('Bite'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { CharacterT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { BITE } from '../skills/enemy/bite'\r\n\r\nexport const TIMBERWOLF = (): CharacterT => {\r\n  return {\r\n    ...makeEntity('Timberwolf'),\r\n    isCharacter: true,\r\n    partyId: '',\r\n    level: 1,\r\n    xp: 0,\r\n    class: 'enemy',\r\n    stats: {\r\n      vigor: -80,\r\n      strength: 52,\r\n      intelligence: 40,\r\n      perception: 52,\r\n      talent: 30,\r\n      agility: 65,\r\n      luck: 50,\r\n      armor: 0,\r\n      resistance: 0,\r\n      evasion: 10,\r\n      healthOffset: 0,\r\n      health: -1,\r\n      healthRegen: 0,\r\n      criticalChance: 5,\r\n      damageModifier: 0,\r\n      damageOffset: 0,\r\n      damageReflection: 0,\r\n      weaknessModifier: 0,\r\n      goldModifier: 0,\r\n      consumableHealthGainOffset: 0,\r\n    },\r\n    traits: [],\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      ...makeEntity('Wolf Fangs'),\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'wolf-fangs',\r\n      twoHand: true,\r\n      attackType: 'melee',\r\n      damage: {\r\n        damage: 7,\r\n        type: 'physical',\r\n      },\r\n      traits: [],\r\n      skills: [BITE],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 4,\r\n        xp: 10,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { SkillT } from '../../../types'\r\nimport { makeEntity } from '../../../functions/Entity'\r\nimport { makeCheck } from '../../../functions/makeCheck'\r\n\r\nexport const SLAP: SkillT = {\r\n  ...makeEntity('Slap'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { CharacterT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { SLAP } from '../skills/enemy/slap'\r\n\r\nexport const VALE_IMP = (): CharacterT => {\r\n  return {\r\n    ...makeEntity('Vale Imp'),\r\n    isCharacter: true,\r\n    partyId: '',\r\n    level: 1,\r\n    xp: 0,\r\n    class: 'enemy',\r\n    stats: {\r\n      vigor: -80,\r\n      strength: 40,\r\n      intelligence: 40,\r\n      perception: 52,\r\n      talent: 30,\r\n      agility: 76,\r\n      luck: 50,\r\n      armor: 0,\r\n      resistance: 0,\r\n      evasion: 10,\r\n      health: 0,\r\n      healthOffset: 0,\r\n      healthRegen: 0,\r\n      criticalChance: 5,\r\n      damageModifier: 0,\r\n      damageOffset: 0,\r\n      damageReflection: 0,\r\n      weaknessModifier: 0,\r\n      goldModifier: 0,\r\n      consumableHealthGainOffset: 0,\r\n    },\r\n    traits: [],\r\n    armor: [],\r\n    consumables: [],\r\n    status: [\r\n      {\r\n        duration: -1,\r\n        type: 'evasive',\r\n      },\r\n    ],\r\n    immunities: [],\r\n    weapon: {\r\n      ...makeEntity('Imp Fists'),\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'imp-fists',\r\n      twoHand: true,\r\n      attackType: 'melee',\r\n      damage: {\r\n        damage: 6,\r\n        type: 'physical',\r\n      },\r\n      traits: [],\r\n      skills: [SLAP],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 0,\r\n        xp: 15,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { SkillT } from '../../../types'\r\nimport { makeEntity } from '../../../functions/Entity'\r\nimport { makeCheck } from '../../../functions/makeCheck'\r\n\r\nexport const IMPALE: SkillT = {\r\n  ...makeEntity('Impale'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [makeCheck('strength'), makeCheck('strength'), makeCheck('strength')],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { CharacterT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { IMPALE } from '../skills/enemy/impale'\r\n\r\nexport const BEASTMAN = (): CharacterT => {\r\n  return {\r\n    ...makeEntity('Beastman'),\r\n    isCharacter: true,\r\n    partyId: '',\r\n    level: 1,\r\n    xp: 0,\r\n    class: 'enemy',\r\n    stats: {\r\n      vigor: -80,\r\n      strength: 52,\r\n      intelligence: 40,\r\n      perception: 52,\r\n      talent: 30,\r\n      agility: 60,\r\n      luck: 50,\r\n      armor: 2,\r\n      resistance: 0,\r\n      evasion: 10,\r\n      healthOffset: 0,\r\n      health: 0,\r\n      healthRegen: 0,\r\n      criticalChance: 5,\r\n      damageModifier: 0,\r\n      damageOffset: 0,\r\n      damageReflection: 0,\r\n      weaknessModifier: 0,\r\n      goldModifier: 0,\r\n      consumableHealthGainOffset: 0,\r\n    },\r\n    traits: [],\r\n    armor: [],\r\n    status: [],\r\n    consumables: [],\r\n    immunities: [],\r\n    weapon: {\r\n      ...makeEntity('Beastman Spear'),\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'spear',\r\n      twoHand: true,\r\n      attackType: 'melee',\r\n      damage: {\r\n        damage: 8,\r\n        type: 'physical',\r\n      },\r\n      traits: [],\r\n      skills: [IMPALE],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 6,\r\n        xp: 15,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { ConsumableT } from '../../types/Consumable'\r\nimport { makeEntity } from '../../functions/Entity'\r\n\r\nexport const GODSBEARD: ConsumableT = {\r\n  ...makeEntity('Godsbeard'),\r\n  itemType: 'consumable',\r\n  rarity: 'common',\r\n  skill: {\r\n    ...makeEntity('Godsbeard'),\r\n    damageModifier: 0,\r\n    targetType: 'self',\r\n    rolls: [],\r\n    damage: false,\r\n    healing: true,\r\n    isBasicAttack: false,\r\n    perfectSplash: false,\r\n    perfectPierce: false,\r\n    perfectStatus: [],\r\n  },\r\n}\r\n","import { ItemRarityT, CharacterClassT, ArmorResourceType } from '../types'\r\nimport { ConsumableT } from '../types/Consumable'\r\nimport { GODSBEARD } from './consumables/godsbeard'\r\n\r\nexport const ITEM_RARITY_COLORS: Record<ItemRarityT, string> = {\r\n  common: 'rgba(255,255,255,0.8)',\r\n  uncommon: 'rgba(173,216,230,1)',\r\n  rare: 'rgba(221,160,221,1)',\r\n  mythic: 'rgb(255,160,122,1)',\r\n}\r\n\r\nexport const CLASS_STARTING_CONSUMABLES: Record<\r\n  CharacterClassT,\r\n  ConsumableT[]\r\n> = {\r\n  blacksmith: [GODSBEARD],\r\n  hunter: [GODSBEARD],\r\n  scholar: [GODSBEARD],\r\n  bard: [GODSBEARD],\r\n  enemy: [],\r\n}\r\n\r\nexport const CHARACTER_RESOURCES: ArmorResourceType[] = [\r\n  'offhand',\r\n  'body',\r\n  'head',\r\n  'feet',\r\n]\r\n","import {\r\n  CharacterT,\r\n  ProcessedCharacterT,\r\n  StatsT,\r\n  TraitT,\r\n  DamageTypeT,\r\n  StatusTypeT,\r\n  CheckT,\r\n  CharacterClassT,\r\n  EntityT,\r\n  WeaponT,\r\n  StatusT,\r\n  ArmorT,\r\n} from '../types'\r\nimport { STATUS_EFFECTS, CLASS_STARTING_STATS } from '../objects'\r\nimport {\r\n  combineTraits,\r\n  getTraitsFromObjects,\r\n  getCommittedTraitsFromObjects,\r\n} from './Traits'\r\nimport { processWeapon } from './Weapon'\r\nimport { getSkillsFromObjects } from './Skill'\r\nimport { makeEntity } from './Entity'\r\nimport { combineStats } from './Stats'\r\nimport { CLASS_STARTING_WEAPONS } from '../objects/Weapon'\r\nimport { CLASS_STARTING_ARMOR } from '../objects/Armor'\r\nimport { ALL_ENEMIES } from '../objects/enemies'\r\nimport { getRandom, noneg } from '../util'\r\nimport { CLASS_STARTING_CONSUMABLES } from '../objects/Item'\r\nimport { makeCheck } from './makeCheck'\r\nimport { resolveCheck } from './Roll'\r\nimport { PROTECT } from '../objects/skills/protect'\r\nimport { CombatRewardT } from '../types/CombatReward'\r\n\r\nexport const checkForProcessedCharacter = (character: CharacterT) => {\r\n  if ((character as ProcessedCharacterT).processed) {\r\n    throw new Error('No Processed Characters Allowed')\r\n  }\r\n}\r\n\r\nexport const isCharacter = (e: EntityT) => e && (e as CharacterT).isCharacter\r\n\r\nexport const getStatusEffects = (character: CharacterT): StatusT[] => {\r\n  return character.status.map((status) => ({\r\n    ...STATUS_EFFECTS[status.type],\r\n    duration: status.duration,\r\n  }))\r\n}\r\n\r\nexport const getTraits = (character: CharacterT): TraitT[] => {\r\n  checkForProcessedCharacter(character)\r\n  const statusEffects = getStatusEffects(character)\r\n  const ret = [\r\n    ...character.traits,\r\n    ...character.weapon.traits,\r\n    ...getTraitsFromObjects(statusEffects),\r\n    ...getTraitsFromObjects(character.armor),\r\n    ...getTraitsFromObjects(getStatusEffects(character)),\r\n  ]\r\n  return ret\r\n}\r\n\r\nexport const getSkills = (character: CharacterT) => {\r\n  checkForProcessedCharacter(character)\r\n  return [...character.weapon.skills, ...getSkillsFromObjects(character.armor)]\r\n}\r\n\r\nexport const processCharacter = (\r\n  character: CharacterT,\r\n): ProcessedCharacterT => {\r\n  checkForProcessedCharacter(character)\r\n  const traits = getTraits(character)\r\n  const combinedTrait = combineTraits(...traits)\r\n  const stats: StatsT = combineStats(character.stats, combinedTrait.stats)\r\n  const weapon = processWeapon(character.weapon)\r\n  const statusEffects = getStatusEffects(character)\r\n  const skills = getSkills(character)\r\n  const hVigor =\r\n    CLASS_STARTING_STATS[character.class].vigor || character.stats.vigor\r\n  const startingHealth = 25 + Math.floor(0.1 * hVigor)\r\n  const health =\r\n    Math.floor(\r\n      startingHealth + character.level + 0.1 * character.level * stats.vigor,\r\n    ) + stats.health\r\n\r\n  return {\r\n    ...character,\r\n    health,\r\n    stats,\r\n    rawStats: character.stats,\r\n    weapon,\r\n    statusEffects,\r\n    skills,\r\n    dead: stats.healthOffset >= health,\r\n    processed: true,\r\n  }\r\n}\r\n\r\nexport const makeCharacter = (\r\n  characterClass: CharacterClassT,\r\n  partyId: string = '',\r\n): CharacterT => {\r\n  return {\r\n    ...makeEntity(),\r\n    isCharacter: true,\r\n    partyId,\r\n    level: 1,\r\n    xp: 0,\r\n    class: characterClass,\r\n    stats: CLASS_STARTING_STATS[characterClass],\r\n    traits: [],\r\n    weapon: CLASS_STARTING_WEAPONS[characterClass] as WeaponT,\r\n    armor: CLASS_STARTING_ARMOR[characterClass],\r\n    consumables: CLASS_STARTING_CONSUMABLES[characterClass],\r\n    status: [],\r\n    immunities: [],\r\n    possibleRewards: [],\r\n  }\r\n}\r\n\r\nexport const makeEnemy = () => {\r\n  const staicEnemy = getRandom(ALL_ENEMIES)\r\n  if (staicEnemy) return staicEnemy()\r\n  return makeCharacter(getRandom(['blacksmith', 'hunter', 'scholar']))\r\n}\r\n\r\nexport const commitTrait = (\r\n  character: CharacterT,\r\n  trait: TraitT,\r\n): CharacterT => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    stats: combineStats(character.stats, trait.stats),\r\n  }\r\n}\r\nexport const commitStatusEffects = (character: CharacterT): CharacterT => {\r\n  checkForProcessedCharacter(character)\r\n  const statusEffects = getStatusEffects(character)\r\n  const traits = getCommittedTraitsFromObjects(statusEffects)\r\n  return traits.reduce(\r\n    (char, trait) => {\r\n      return commitTrait(char, trait)\r\n    },\r\n    { ...character },\r\n  )\r\n}\r\nexport const decrementStatusDurations = (character: CharacterT): CharacterT => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    status: character.status\r\n      .map((status) => ({ ...status, duration: status.duration - 1 }))\r\n      .filter((status) => status.duration !== 0),\r\n  }\r\n}\r\nexport const hasStatus = (character: CharacterT, statusType: StatusTypeT) => {\r\n  return character.status.map((s) => s.type).includes(statusType)\r\n}\r\nexport const hasImmunity = (character: CharacterT, statusType: StatusTypeT) => {\r\n  return character.immunities.map((i) => i.type).includes(statusType)\r\n}\r\nexport const findStatus = (character: CharacterT, statusType: StatusTypeT) => {\r\n  return character.status.find((s) => s.type === statusType)\r\n}\r\nexport const addStatus = (\r\n  character: CharacterT,\r\n  statusType: StatusTypeT,\r\n  duration?: number,\r\n) => {\r\n  const statusEffect = STATUS_EFFECTS[statusType]\r\n  const existingStatus = findStatus(character, statusType)\r\n  if (hasImmunity(character, statusType)) {\r\n    return character\r\n  }\r\n  if (existingStatus && !statusEffect.canStack) {\r\n    return {\r\n      ...character,\r\n      status: [\r\n        ...character.status.filter((t) => t.type !== statusType),\r\n        { type: statusType, duration: duration || statusEffect.duration },\r\n      ],\r\n    }\r\n  }\r\n  if (existingStatus && statusEffect.canStack) {\r\n    return {\r\n      ...character,\r\n      status: [\r\n        ...character.status.filter((t) => t.type !== statusType),\r\n        {\r\n          type: statusType,\r\n          duration: duration || statusEffect.duration,\r\n          stack: (existingStatus.stack || 0) + 1,\r\n        },\r\n      ],\r\n    }\r\n  }\r\n  return {\r\n    ...character,\r\n    status: [\r\n      ...character.status,\r\n      {\r\n        type: statusType,\r\n        duration: duration || statusEffect.duration,\r\n        stack: 0,\r\n      },\r\n    ],\r\n  }\r\n}\r\nexport const addMultipleStatus = (\r\n  character: CharacterT,\r\n  statusTypes: StatusTypeT[],\r\n) => {\r\n  return statusTypes.reduce(\r\n    (char, statusType) => {\r\n      return addStatus(char, statusType)\r\n    },\r\n    { ...character },\r\n  )\r\n}\r\n\r\nexport const removeTemporaryStatus = (character: CharacterT): CharacterT => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    status: character.status\r\n      .map((s) => STATUS_EFFECTS[s.type])\r\n      .filter((s) => s.persist),\r\n  }\r\n}\r\n\r\nexport const getCharacterStat = (character: CharacterT, statValue: CheckT) => {\r\n  const resolvedStatValue = statValue.key ? character.stats[statValue.key] : 0\r\n  return resolvedStatValue + (statValue.offset || 0)\r\n}\r\n\r\nexport const getDamageResistance = (\r\n  character: ProcessedCharacterT,\r\n  damageType: DamageTypeT,\r\n) => {\r\n  if (damageType === 'physical') return character.stats.armor\r\n  if (damageType === 'magic') return character.stats.resistance\r\n  return 0\r\n}\r\n\r\nexport const addStatusAndTags = (\r\n  character: CharacterT,\r\n  status: StatusTypeT[],\r\n) => {\r\n  return addMultipleStatus(character, status)\r\n}\r\n\r\nexport const equipArmor = (\r\n  character: CharacterT,\r\n  armor: ArmorT,\r\n): { character: CharacterT; armor: ArmorT | undefined } => {\r\n  checkForProcessedCharacter(character)\r\n  const existingArmor = character.armor.find(\r\n    (a) => a.resource === armor.resource,\r\n  )\r\n  return {\r\n    character: {\r\n      ...character,\r\n      armor: existingArmor\r\n        ? [...character.armor.filter((a) => a.id !== existingArmor.id), armor]\r\n        : [...character.armor, armor],\r\n    },\r\n    armor: existingArmor,\r\n  }\r\n}\r\n\r\nexport const equipWeapon = (\r\n  character: CharacterT,\r\n  weapon: WeaponT,\r\n): { character: CharacterT; weapon: WeaponT | undefined } => {\r\n  const existingWeapon = character.weapon\r\n  return {\r\n    character: {\r\n      ...character,\r\n      weapon,\r\n    },\r\n    weapon: existingWeapon,\r\n  }\r\n}\r\n\r\nexport const commitDamage = (\r\n  character: CharacterT,\r\n  damage: number,\r\n): CharacterT => {\r\n  checkForProcessedCharacter(character)\r\n  if (hasStatus(character, 'protected')) {\r\n    return {\r\n      ...character,\r\n      status: character.status.filter((s) => s.type !== 'protected'),\r\n    }\r\n  } else {\r\n    return {\r\n      ...character,\r\n      stats: {\r\n        ...character.stats,\r\n        healthOffset: noneg(character.stats.healthOffset + damage),\r\n      },\r\n    }\r\n  }\r\n}\r\n\r\nexport const getRewardsFromCharacter = (\r\n  character: ProcessedCharacterT,\r\n  checkedCharacter: ProcessedCharacterT,\r\n): CombatRewardT[] => {\r\n  let index: number | undefined = undefined\r\n  character.possibleRewards.forEach((rewards, i) => {\r\n    const luckReslt = resolveCheck(checkedCharacter, makeCheck('luck'))\r\n    if (luckReslt.result) {\r\n      index = i\r\n    }\r\n  })\r\n  if (index !== undefined) {\r\n    return character.possibleRewards[index]\r\n      ? [character.possibleRewards[index]]\r\n      : []\r\n  }\r\n  return []\r\n}\r\n\r\nexport const consolidateRewards = (rewards: CombatRewardT[]): CombatRewardT => {\r\n  return rewards.reduce(\r\n    (res, reward) => {\r\n      return {\r\n        gold: res.gold + reward.gold,\r\n        xp: res.xp + reward.xp,\r\n        items: [...res.items, ...reward.items],\r\n        consumables: [...res.consumables, ...reward.consumables],\r\n      }\r\n    },\r\n    {\r\n      gold: 0,\r\n      xp: 0,\r\n      items: [],\r\n      consumables: [],\r\n    },\r\n  )\r\n}\r\n","import { WeaponT, ProcessedWeaponT } from '../types'\r\n\r\nexport const processWeapon = (weapon: WeaponT): ProcessedWeaponT => {\r\n  return {\r\n    ...weapon,\r\n    processed: true,\r\n  }\r\n}\r\n","import { DiceRoll } from 'rpg-dice-roller'\r\nimport { ProcessedCharacterT, CheckResultT, CheckT, StatsT } from '../types'\r\nimport { getCharacterStat } from './Character'\r\n\r\nexport const resolveCheck = (\r\n  character: ProcessedCharacterT,\r\n  check: CheckT,\r\n): CheckResultT => {\r\n  const statValue = getCharacterStat(character, check)\r\n  const roll = new DiceRoll('1d100')\r\n  return {\r\n    input: check,\r\n    result: roll.total <= statValue,\r\n    total: roll.total,\r\n    averageTotal: roll.averageTotal,\r\n    maxTotal: roll.maxTotal,\r\n    minTotal: roll.minTotal,\r\n    output: roll.output,\r\n  }\r\n}\r\n\r\nexport const getChecksProbability = (\r\n  character: ProcessedCharacterT,\r\n  checks: CheckT[],\r\n): number => {\r\n  const statValues = checks.map((check) => getCharacterStat(character, check))\r\n  const result = statValues.reduce((p, c) => {\r\n    return p * (c / 100)\r\n  }, 1)\r\n  return result\r\n}\r\n\r\nexport const getPassedCount = (results: CheckResultT[]): number =>\r\n  results.filter((r) => r.result).length\r\n\r\nexport const didAllPass = (results: CheckResultT[]): boolean =>\r\n  results.every((r) => r.result)\r\n","import { SkillT } from '../../../types'\r\nimport { makeEntity } from '../../../functions/Entity'\r\nimport { makeCheck } from '../../../functions/makeCheck'\r\n\r\nexport const STING: SkillT = {\r\n  ...makeEntity('Sting'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n\r\nexport const INFECTIOUS_STING: SkillT = {\r\n  ...makeEntity('Infectious Sting'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [\r\n    makeCheck('perception', -10),\r\n    makeCheck('perception', -10),\r\n    makeCheck('perception', -10),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [\r\n    {\r\n      type: 'poisoned',\r\n      duration: 10,\r\n    },\r\n  ],\r\n}\r\n","import { CharacterT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { STING, INFECTIOUS_STING } from '../skills/enemy/sting'\r\n\r\nexport const BEE = (): CharacterT => {\r\n  return {\r\n    ...makeEntity('Bee'),\r\n    isCharacter: true,\r\n    partyId: '',\r\n    level: 1,\r\n    xp: 0,\r\n    class: 'enemy',\r\n    stats: {\r\n      vigor: -80,\r\n      strength: 30,\r\n      intelligence: 30,\r\n      perception: 52,\r\n      talent: 30,\r\n      agility: 80,\r\n      luck: 0,\r\n      armor: 0,\r\n      resistance: 0,\r\n      evasion: 17,\r\n      health: -4,\r\n      healthOffset: 0,\r\n      healthRegen: 0,\r\n      criticalChance: 5,\r\n      damageModifier: 0,\r\n      damageOffset: 0,\r\n      damageReflection: 0,\r\n      weaknessModifier: 0,\r\n      goldModifier: 0,\r\n      consumableHealthGainOffset: 0,\r\n    },\r\n    traits: [],\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      ...makeEntity('Bee Stinger'),\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'bee-stinger',\r\n      twoHand: true,\r\n      attackType: 'melee',\r\n      damage: {\r\n        damage: 12,\r\n        type: 'physical',\r\n      },\r\n      traits: [],\r\n      skills: [STING, INFECTIOUS_STING],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 1,\r\n        xp: 12,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { SkillT } from '../../../types'\r\nimport { makeEntity } from '../../../functions/Entity'\r\nimport { makeCheck } from '../../../functions/makeCheck'\r\n\r\nexport const STAB: SkillT = {\r\n  ...makeEntity('Stab'),\r\n  damageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n    makeCheck('perception'),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const ADVENTURE_BOOTS: ArmorT = {\r\n  ...makeEntity(`Adventure Boots`),\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 3,\r\n        evasion: 4,\r\n        agility: 3,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n}\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const FUR_BOOTS: ArmorT = {\r\n  ...makeEntity(`Fur Boots`),\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 2,\r\n        resistance: 2,\r\n        healthRegen: 1,\r\n        vigor: 4,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n}\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const FUR_ARMOR: ArmorT = {\r\n  ...makeEntity(`Fur Armor`),\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'cloth-armor',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 5,\r\n        resistance: 5,\r\n        health: 5,\r\n        healthRegen: 2,\r\n        vigor: 4,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n}\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const EXPLORERS_BOOTS: ArmorT = {\r\n  ...makeEntity(`Explorer's Boots`),\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 2,\r\n        evasion: 3,\r\n        agility: 2,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n}\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const EXPLORERS_HAT: ArmorT = {\r\n  ...makeEntity(`Explorer's Hat`),\r\n  itemType: 'armor',\r\n  resource: 'head',\r\n  rarity: 'common',\r\n  type: 'hat',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        resistance: 3,\r\n        evasion: 3,\r\n        perception: 2,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n}\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const EXPLORERS_CLOAK: ArmorT = {\r\n  ...makeEntity(`Explorer's Cloak`),\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'magic-armor',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 3,\r\n        resistance: 6,\r\n        evasion: 6,\r\n        perception: 3,\r\n        talent: -3,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n}\r\n","import { CharacterT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { STAB } from '../skills/enemy/stab'\r\nimport { EXPLORERS_BOOTS } from '../armor/explorers_boots'\r\nimport { EXPLORERS_HAT } from '../armor/explorers_hat'\r\nimport { EXPLORERS_CLOAK } from '../armor/explorers_cloak'\r\n\r\nexport const BANDIT = (): CharacterT => {\r\n  return {\r\n    ...makeEntity('Bandit'),\r\n    isCharacter: true,\r\n    partyId: '',\r\n    level: 2,\r\n    xp: 0,\r\n    class: 'enemy',\r\n    stats: {\r\n      strength: 76,\r\n      vigor: 50,\r\n      intelligence: 40,\r\n      perception: 52,\r\n      talent: 72,\r\n      agility: 61,\r\n      luck: 50,\r\n      armor: 4,\r\n      resistance: 0,\r\n      evasion: 10,\r\n      healthOffset: 0,\r\n      health: -20,\r\n      healthRegen: 0,\r\n      criticalChance: 5,\r\n      damageModifier: 0,\r\n      damageOffset: 0,\r\n      damageReflection: 0,\r\n      weaknessModifier: 0,\r\n      goldModifier: 0,\r\n      consumableHealthGainOffset: 15,\r\n    },\r\n    traits: [],\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      ...makeEntity('Buccaneer Dagger'),\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'dagger',\r\n      twoHand: false,\r\n      attackType: 'melee',\r\n      damage: {\r\n        damage: 12,\r\n        type: 'physical',\r\n      },\r\n      traits: [],\r\n      skills: [STAB],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [EXPLORERS_BOOTS],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [EXPLORERS_HAT],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [EXPLORERS_CLOAK],\r\n        consumables: [],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { TIMBERWOLF } from './enemies/timberwolf'\r\nimport { VALE_IMP } from './enemies/vale_imp'\r\nimport { BEASTMAN } from './enemies/beastman'\r\nimport { BEE } from './enemies/bee'\r\nimport { BUCCANEER } from './enemies/buccaneer'\r\nimport { BANDIT } from './enemies/bandit'\r\n\r\nexport const PLAYER_PARTY_ID = v4()\r\n\r\nexport const ALL_ENEMY_PARTY_COMBOS = [\r\n  [TIMBERWOLF(), TIMBERWOLF(), TIMBERWOLF()],\r\n  [VALE_IMP(), TIMBERWOLF(), BEASTMAN()],\r\n  [BEASTMAN(), BEASTMAN(), BEE()],\r\n  [BEE(), BEE(), BEE()],\r\n  [BUCCANEER()],\r\n  [BANDIT(), BANDIT()],\r\n]\r\n","import { CharacterT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { STAB } from '../skills/enemy/stab'\r\nimport { ADVENTURE_BOOTS } from '../armor/adventure_boots'\r\nimport { FUR_BOOTS } from '../armor/fur_boots'\r\nimport { FUR_ARMOR } from '../armor/fur_armor'\r\n\r\nexport const BUCCANEER = (): CharacterT => {\r\n  return {\r\n    ...makeEntity('Buccaneer'),\r\n    isCharacter: true,\r\n    partyId: '',\r\n    level: 4,\r\n    xp: 0,\r\n    class: 'enemy',\r\n    stats: {\r\n      strength: 52,\r\n      vigor: 66,\r\n      intelligence: 46,\r\n      perception: 78,\r\n      talent: 64,\r\n      agility: 78,\r\n      luck: 50,\r\n      armor: 1,\r\n      resistance: 0,\r\n      evasion: 20,\r\n      healthOffset: 0,\r\n      health: -31,\r\n      healthRegen: 0,\r\n      criticalChance: 5,\r\n      damageModifier: 0,\r\n      damageOffset: 0,\r\n      damageReflection: 0,\r\n      weaknessModifier: 0,\r\n      goldModifier: 0,\r\n      consumableHealthGainOffset: 15,\r\n    },\r\n    traits: [],\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      ...makeEntity('Buccaneer Dagger'),\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'dagger',\r\n      twoHand: false,\r\n      attackType: 'melee',\r\n      damage: {\r\n        damage: 12,\r\n        type: 'physical',\r\n      },\r\n      traits: [],\r\n      skills: [STAB],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [ADVENTURE_BOOTS],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [FUR_BOOTS],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 80,\r\n        xp: 20,\r\n        items: [FUR_ARMOR],\r\n        consumables: [],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import {\r\n  CharacterT,\r\n  PartyT,\r\n  ProcessedPartyT,\r\n  EntityT,\r\n  ProcessedCharacterT,\r\n} from '../types'\r\nimport {\r\n  checkForProcessedCharacter,\r\n  processCharacter,\r\n  makeEnemy,\r\n  getRewardsFromCharacter,\r\n} from './Character'\r\nimport { makeEntity } from './Entity'\r\nimport { TIMBERWOLF } from '../objects/enemies/timberwolf'\r\nimport { VALE_IMP } from '../objects/enemies/vale_imp'\r\nimport { BEASTMAN } from '../objects/enemies/beastman'\r\nimport { getRandom } from '../util'\r\nimport { ALL_ENEMY_PARTY_COMBOS } from '../objects/Party'\r\nimport { CombatRewardT } from '../types/CombatReward'\r\n\r\nexport const isParty = (e: EntityT) => e && (e as PartyT).isParty\r\n\r\nexport const checkForProcessedParty = (party: PartyT) => {\r\n  if ((party as ProcessedPartyT).processed) {\r\n    throw new Error('No Processed Parties Allowed')\r\n  }\r\n  party.characters.forEach((character) => {\r\n    checkForProcessedCharacter(character)\r\n  })\r\n}\r\n\r\nexport const makeParty = (characterCount: number = 0): PartyT => {\r\n  return {\r\n    ...makeEntity(),\r\n    isParty: true,\r\n    items: [],\r\n    gold: 0,\r\n    characters: getRandom(ALL_ENEMY_PARTY_COMBOS),\r\n  }\r\n}\r\n\r\nexport const findCharacterInParty = <\r\n  T extends PartyT = PartyT,\r\n  R extends CharacterT = CharacterT\r\n>(\r\n  party: T,\r\n  id: string,\r\n): R | undefined => {\r\n  return (party.characters as R[]).find((c) => c.id === id)\r\n}\r\n\r\nexport const updateCharacter = (\r\n  party: PartyT,\r\n  characterId: string,\r\n  updater: (character: CharacterT) => CharacterT,\r\n): PartyT => {\r\n  checkForProcessedParty(party)\r\n  return {\r\n    ...party,\r\n    characters: party.characters.map((c) =>\r\n      c.id === characterId ? updater(c) : c,\r\n    ),\r\n  }\r\n}\r\n\r\nexport const processParty = (party: PartyT): ProcessedPartyT => {\r\n  return {\r\n    ...party,\r\n    processed: true,\r\n    characters: party.characters.map((c) => ({\r\n      ...processCharacter(c),\r\n      partyId: party.id,\r\n    })),\r\n  }\r\n}\r\n\r\nexport const getRolledRewards = (\r\n  party: ProcessedPartyT,\r\n  checkedCharacter: ProcessedCharacterT,\r\n): CombatRewardT[] => {\r\n  return party.characters.reduce((r, character) => {\r\n    return [...r, ...getRewardsFromCharacter(character, checkedCharacter)]\r\n  }, [] as CombatRewardT[])\r\n}\r\n\r\nexport const commitRewards = (\r\n  party: PartyT,\r\n  rewards: CombatRewardT,\r\n): PartyT => {\r\n  checkForProcessedParty(party)\r\n  return {\r\n    ...party,\r\n    gold: party.gold + rewards.gold,\r\n    items: [...party.items, ...rewards.items],\r\n    characters: party.characters.map((c) => ({\r\n      ...c,\r\n      consumables: [...c.consumables, ...rewards.consumables],\r\n      xp: c.xp + rewards.xp,\r\n    })),\r\n  }\r\n}\r\n","import { StatusTypeT } from '../types'\r\n\r\nexport type PerfectKeyT = StatusTypeT | 'splash' | 'pierce' | 'heal'\r\nexport const PERFECT_DISPLAY_INFO: Record<PerfectKeyT, string> = {\r\n  splash: 'Splash Damage',\r\n  pierce: 'Ignore Resistances',\r\n  bleeding: 'Bleed',\r\n  burning: 'Burn',\r\n  frozen: 'Freeze',\r\n  poisoned: 'Poison',\r\n  targeted: 'Taunt Enemies',\r\n  dazed: 'Daze',\r\n  evasive: 'Become Evasive',\r\n  heal: 'Heal',\r\n  protected: 'Protect',\r\n  ['speed-down']: 'Speed Down',\r\n}\r\n","import { DamageT } from '../types'\r\n\r\nexport const getSplashDamage = (rawDamage: DamageT) => {\r\n  return {\r\n    type: rawDamage.type,\r\n    damage: Math.floor(rawDamage.damage / 2),\r\n  }\r\n}\r\n","import {\r\n  ProcessedCharacterT,\r\n  SourceSkillResultT,\r\n  HasSkillsT,\r\n  SkillT,\r\n  DamageT,\r\n  TargetSkillResultT,\r\n  SkillTargetT,\r\n  ProcessedPartyT,\r\n  TargetTypeT,\r\n} from '../types'\r\nimport { resolveCheck, getPassedCount, didAllPass } from './Roll'\r\nimport { getDamageResistance, isCharacter, hasStatus } from './Character'\r\nimport { isParty } from './Party'\r\nimport { noneg } from '../util'\r\nimport { PerfectKeyT, PERFECT_DISPLAY_INFO } from '../objects/Skills'\r\nimport { getSplashDamage } from './Damage'\r\nimport { PLAYER_PARTY_ID } from '../objects/Party'\r\n\r\nexport const getSkillsFromObjects = (parents: HasSkillsT[]) => {\r\n  return parents.reduce((p, c) => {\r\n    return [...p, ...c.skills]\r\n  }, [] as SkillT[])\r\n}\r\n\r\nexport const resolveSkillTarget = (\r\n  target: SkillTargetT,\r\n): ProcessedCharacterT[] => {\r\n  switch (target.type) {\r\n    case 'single':\r\n      return target.character ? [target.character] : []\r\n    case 'ally':\r\n      return target.character ? [target.character] : []\r\n    case 'self':\r\n      return target.character ? [target.character] : []\r\n    case 'party':\r\n      return target.party?.characters || []\r\n    case 'group':\r\n      return target.party?.characters || []\r\n    default:\r\n      return []\r\n  }\r\n}\r\n\r\nexport const makeSkillTarget = (\r\n  type: TargetTypeT,\r\n  target: ProcessedCharacterT | ProcessedPartyT,\r\n): SkillTargetT => {\r\n  return {\r\n    type,\r\n    character: isCharacter(target)\r\n      ? (target as ProcessedCharacterT)\r\n      : undefined,\r\n    party: isParty(target) ? (target as ProcessedPartyT) : undefined,\r\n  }\r\n}\r\n\r\nexport const getSourceSkillResult = (\r\n  source: ProcessedCharacterT,\r\n  skill: SkillT,\r\n  consumableIndex: number | undefined,\r\n): SourceSkillResultT => {\r\n  const rollResults = skill.rolls.map((check) => resolveCheck(source, check))\r\n  const passedCount = getPassedCount(rollResults)\r\n  const perfect = didAllPass(rollResults)\r\n  const criticalHitResult = resolveCheck(source, {\r\n    offset: source.stats.criticalChance,\r\n  })\r\n  const criticalSuccess = skill.damage\r\n    ? perfect\r\n      ? criticalHitResult.result\r\n      : false\r\n    : false\r\n  const accuracySuccess =\r\n    skill.healing || (skill.damage ? passedCount >= 1 : perfect)\r\n\r\n  const rawDamage: DamageT = {\r\n    damage: skill.damage\r\n      ? Math.round(\r\n          (passedCount * getSkillDamage(skill, source).damage) /\r\n            rollResults.length,\r\n        )\r\n      : 0,\r\n    type: source.weapon.damage.type,\r\n  }\r\n  const splashDamage: DamageT =\r\n    skill.perfectSplash && perfect\r\n      ? getSplashDamage(rawDamage)\r\n      : { type: rawDamage.type, damage: 0 }\r\n\r\n  return {\r\n    rollResults,\r\n    skill,\r\n    source,\r\n    accuracySuccess,\r\n    criticalSuccess,\r\n    passedCount,\r\n    perfect,\r\n    rawDamage,\r\n    pierce: (perfect && skill.perfectPierce) || criticalHitResult.result,\r\n    splashDamage,\r\n    addedStatus: perfect ? skill.perfectStatus : [],\r\n    healing:\r\n      perfect && skill.healing ? source.stats.consumableHealthGainOffset : 0,\r\n    consumableIndex,\r\n  }\r\n}\r\n\r\nexport const getTargetSkillResult = (\r\n  target: ProcessedCharacterT,\r\n  sourceResult: SourceSkillResultT,\r\n): TargetSkillResultT => {\r\n  console.log(sourceResult)\r\n  if (sourceResult.accuracySuccess) {\r\n    const dodgeResult = resolveCheck(target, { key: 'evasion' })\r\n    const damageResistances = sourceResult.pierce\r\n      ? 0\r\n      : getDamageResistance(target, sourceResult.rawDamage.type)\r\n    const isEvasive = hasStatus(target, 'evasive')\r\n    const dodgeSuccess =\r\n      sourceResult.criticalSuccess ||\r\n      (sourceResult.perfect && sourceResult.source.partyId === PLAYER_PARTY_ID)\r\n        ? false\r\n        : dodgeResult.result || (isEvasive && !sourceResult.perfect)\r\n    const totalDamage = {\r\n      type: sourceResult.rawDamage.type,\r\n      damage: dodgeSuccess\r\n        ? 0\r\n        : noneg(Math.round(sourceResult.rawDamage.damage - damageResistances)),\r\n    }\r\n    const reflectedDamage = {\r\n      damage: sourceResult.source.stats.damageReflection,\r\n      type: sourceResult.rawDamage.type,\r\n    }\r\n    const healthRegenMaximum =\r\n      sourceResult.source.stats.healthOffset + reflectedDamage.damage\r\n    const regeneratedHealth =\r\n      healthRegenMaximum > sourceResult.source.stats.healthRegen\r\n        ? sourceResult.source.stats.healthRegen\r\n        : healthRegenMaximum\r\n\r\n    return {\r\n      ...sourceResult,\r\n      target,\r\n      dodgeSuccess,\r\n      blockedDamage: {\r\n        type: sourceResult.rawDamage.type,\r\n        damage: sourceResult.pierce ? 0 : damageResistances,\r\n      },\r\n      reflectedDamage,\r\n      totalDamage,\r\n      regeneratedHealth,\r\n      willDie: target.health <= target.stats.healthOffset + totalDamage.damage,\r\n    }\r\n  } else {\r\n    return {\r\n      ...sourceResult,\r\n      target,\r\n      dodgeSuccess: false,\r\n      reflectedDamage: sourceResult.rawDamage,\r\n      blockedDamage: sourceResult.rawDamage,\r\n      totalDamage: sourceResult.rawDamage,\r\n      regeneratedHealth: noneg(\r\n        sourceResult.source.stats.healthOffset -\r\n          (sourceResult.source.stats.healthOffset +\r\n            sourceResult.source.stats.healthRegen),\r\n      ),\r\n      willDie: false,\r\n    }\r\n  }\r\n}\r\n\r\nexport const getPerfectKeys = (skill: SkillT): PerfectKeyT[] => {\r\n  let base: PerfectKeyT[] = [...skill.perfectStatus.map((t) => t.type)]\r\n  if (skill.perfectSplash) base = [...base, 'splash']\r\n  if (skill.perfectPierce) base = [...base, 'pierce']\r\n  if (skill.healing) base = [...base, 'heal']\r\n  return base\r\n}\r\n\r\nexport const getPerfectText = (\r\n  skill: SkillT,\r\n  character: ProcessedCharacterT,\r\n): string => {\r\n  const perfectKeys = getPerfectKeys(skill)\r\n  const rawDamage = getSkillDamage(skill, character)\r\n  const splashDamage = getSplashDamage(rawDamage)\r\n\r\n  return perfectKeys.reduce((res, key, i) => {\r\n    let pre = `${res}${i > 0 ? ',' : ''}`\r\n    const text = PERFECT_DISPLAY_INFO[key]\r\n    switch (key) {\r\n      case 'splash':\r\n        return `${pre} ${Math.floor(\r\n          (splashDamage.damage / rawDamage.damage) * 100,\r\n        )}% ${text}`\r\n      case 'heal':\r\n        return `${pre} ${text} ${character.stats.consumableHealthGainOffset} HP`\r\n      default:\r\n        return `${pre} ${text}`\r\n    }\r\n  }, '')\r\n}\r\n\r\nexport const getSkillDamage = (\r\n  skill: SkillT,\r\n  source: ProcessedCharacterT,\r\n  target?: ProcessedCharacterT,\r\n): DamageT => {\r\n  const rawDamage: DamageT = {\r\n    type: source.weapon.damage.type,\r\n    damage:\r\n      (source.weapon.damage.damage + source.stats.damageOffset) *\r\n      (1 + skill.damageModifier + source.stats.damageModifier / 100),\r\n  }\r\n  const damageResistances = target\r\n    ? getDamageResistance(target, rawDamage.type)\r\n    : 0\r\n  return {\r\n    type: rawDamage.type,\r\n    damage: noneg(Math.round(rawDamage.damage - damageResistances)),\r\n  }\r\n}\r\n\r\nexport const getSkillDamageRange = (\r\n  skill: SkillT,\r\n  source: ProcessedCharacterT,\r\n  targets?: ProcessedCharacterT[],\r\n) => {\r\n  let min: number | undefined = undefined\r\n  let max: number | undefined = undefined\r\n  if (!targets) return `${getSkillDamage(skill, source).damage}`\r\n  targets.forEach((target) => {\r\n    const damage = getSkillDamage(skill, source, target).damage\r\n    if (max === undefined || damage > max) max = damage\r\n    if (min === undefined || damage < min) min = damage\r\n  })\r\n  if (min === max) return `${max || 0}`\r\n  return `${min}-${max}`\r\n}\r\n\r\nexport const getSkillResults = (\r\n  skill: SkillT,\r\n  source: ProcessedCharacterT,\r\n  targets: ProcessedCharacterT[],\r\n  consumableIndex?: number,\r\n): TargetSkillResultT[] => {\r\n  const sourceResult = getSourceSkillResult(source, skill, consumableIndex)\r\n  return targets.map((target) => getTargetSkillResult(target, sourceResult))\r\n}\r\n\r\nexport const getSkillTargetOptions = (\r\n  source: ProcessedCharacterT,\r\n  sourceParty: ProcessedPartyT,\r\n  targetParty: ProcessedPartyT,\r\n  skill: SkillT,\r\n): ProcessedCharacterT[] | ProcessedPartyT[] => {\r\n  switch (skill.targetType) {\r\n    case 'single':\r\n      return targetParty.characters.filter((c) => !c.dead)\r\n    case 'ally':\r\n      return sourceParty.characters.filter((c) => !c.dead)\r\n    case 'group':\r\n      return [targetParty]\r\n    case 'party':\r\n      return [sourceParty]\r\n    case 'self':\r\n      return [source]\r\n    default:\r\n      return []\r\n  }\r\n}\r\n","import { PartyT, TargetSkillResultT, CharacterT } from '../types'\r\nimport { updateCharacter } from './Party'\r\nimport {\r\n  addStatusAndTags,\r\n  getDamageResistance,\r\n  processCharacter,\r\n  decrementStatusDurations,\r\n  commitDamage,\r\n} from './Character'\r\nimport { PLAYER_PARTY_ID } from '../objects/Party'\r\nimport { noneg } from '../util'\r\n\r\nconst localUpdater = (\r\n  p: PartyT,\r\n  id: string,\r\n  updater: (c: CharacterT) => CharacterT,\r\n) => {\r\n  return updateCharacter(p, id, updater)\r\n}\r\n\r\ninterface CommitSkillResultsT {\r\n  party: PartyT\r\n  enemyParty: PartyT\r\n}\r\nexport const commitSkillResults = (party: PartyT, enemyParty: PartyT) => (\r\n  results: TargetSkillResultT[],\r\n  commitRoundActions: boolean = true,\r\n): CommitSkillResultsT => {\r\n  results.forEach((result, index) => {\r\n    const { source, target } = result\r\n    let sourceParty = [party, enemyParty].find(\r\n      (p) => p.id === source.partyId,\r\n    ) as PartyT\r\n    let targetParty = [party, enemyParty].find(\r\n      (p) => p.id === target.partyId,\r\n    ) as PartyT\r\n    const localUpdate = (\r\n      p: PartyT,\r\n      id: string,\r\n      updater: (c: CharacterT) => CharacterT,\r\n    ) => {\r\n      if (p.id === sourceParty.id) {\r\n        sourceParty = localUpdater(p, id, updater)\r\n        return\r\n      }\r\n      if (p.id === targetParty.id) {\r\n        targetParty = localUpdater(p, id, updater)\r\n        return\r\n      }\r\n    }\r\n\r\n    localUpdate(targetParty, target.id, (c) => {\r\n      return addStatusAndTags(\r\n        commitDamage(c, result.totalDamage.damage - result.healing),\r\n        result.addedStatus.map((s) => s.type),\r\n      )\r\n    })\r\n\r\n    if (result.splashDamage.damage > 0) {\r\n      targetParty.characters\r\n        .filter((c) => c.id !== result.target.id)\r\n        .forEach((character) => {\r\n          localUpdate(targetParty, character.id, (c) => {\r\n            const splashDamageResistance = getDamageResistance(\r\n              processCharacter(character),\r\n              result.splashDamage.type,\r\n            )\r\n            return commitDamage(\r\n              c,\r\n              result.splashDamage.damage - splashDamageResistance,\r\n            )\r\n          })\r\n        })\r\n    }\r\n\r\n    if (\r\n      result.skill.targetType === 'self' &&\r\n      result.consumableIndex !== undefined\r\n    ) {\r\n      localUpdate(sourceParty, source.id, (c) => {\r\n        return {\r\n          ...c,\r\n          consumables: c.consumables.filter(\r\n            (c, i) => i !== result.consumableIndex,\r\n          ),\r\n        }\r\n      })\r\n    }\r\n\r\n    if (result.reflectedDamage.damage > 0 && !result.willDie) {\r\n      localUpdate(sourceParty, source.id, (c) => {\r\n        // TODO: consider adding in reflected resistance here\r\n        return commitDamage(c, result.reflectedDamage.damage)\r\n      })\r\n    }\r\n\r\n    if (index === results.length - 1 && commitRoundActions) {\r\n      if (result.regeneratedHealth > 0) {\r\n        localUpdate(sourceParty, source.id, (c) => {\r\n          return {\r\n            ...c,\r\n            stats: {\r\n              ...c.stats,\r\n              healthOffset: noneg(\r\n                c.stats.healthOffset - result.regeneratedHealth,\r\n              ),\r\n            },\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    if (sourceParty.id === PLAYER_PARTY_ID) {\r\n      party = sourceParty\r\n    } else {\r\n      enemyParty = sourceParty\r\n    }\r\n    if (targetParty.id === PLAYER_PARTY_ID) {\r\n      if (sourceParty.id !== PLAYER_PARTY_ID) {\r\n        party = targetParty\r\n      }\r\n    } else {\r\n      enemyParty = targetParty\r\n    }\r\n  })\r\n  return {\r\n    party: {\r\n      ...party,\r\n      characters: party.characters.map((c) => decrementStatusDurations(c)),\r\n    },\r\n    enemyParty: {\r\n      ...enemyParty,\r\n      characters: enemyParty.characters.map((c) => decrementStatusDurations(c)),\r\n    },\r\n  }\r\n}\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const ADVENTURE_CLOAK: ArmorT = {\r\n  ...makeEntity(`Adventure Cloak`),\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'magic-armor',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 5,\r\n        resistance: 5,\r\n        perception: 4,\r\n        talent: -3,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n}\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const PERFORMERS_BOOTS: ArmorT = {\r\n  ...makeEntity(`Performer's Boots`),\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 2,\r\n        resistance: 3,\r\n        perception: -3,\r\n        talent: 3,\r\n        luck: 3,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n}\r\n","import { ArmorT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\n\r\nexport const PERFORMERS_VEST: ArmorT = {\r\n  ...makeEntity(`Performer's Vest`),\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'cloth-armor',\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        armor: 6,\r\n        resistance: 6,\r\n        perception: -4,\r\n        talent: 4,\r\n        luck: 4,\r\n      },\r\n    },\r\n  ],\r\n  skills: [],\r\n}\r\n","import { ArmorT } from '../../types'\r\nimport { ADVENTURE_BOOTS } from './adventure_boots'\r\nimport { ADVENTURE_CLOAK } from './adventure_cloak'\r\nimport { EXPLORERS_BOOTS } from './explorers_boots'\r\nimport { EXPLORERS_CLOAK } from './explorers_cloak'\r\nimport { EXPLORERS_HAT } from './explorers_hat'\r\nimport { FUR_ARMOR } from './fur_armor'\r\nimport { FUR_BOOTS } from './fur_boots'\r\nimport { PERFORMERS_BOOTS } from './performers_boots'\r\nimport { PERFORMERS_VEST } from './performers_vest'\r\nimport { SIMPLE_IRON_SHIELD } from './simple_iron_shield'\r\n\r\nexport const ALL_ARMOR: ArmorT[] = [\r\n  ADVENTURE_BOOTS,\r\n  ADVENTURE_CLOAK,\r\n\r\n  EXPLORERS_BOOTS,\r\n  EXPLORERS_CLOAK,\r\n  EXPLORERS_HAT,\r\n\r\n  FUR_ARMOR,\r\n  FUR_BOOTS,\r\n\r\n  PERFORMERS_BOOTS,\r\n  PERFORMERS_VEST,\r\n\r\n  SIMPLE_IRON_SHIELD,\r\n]\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const PROTECT: SkillT = {\r\n  ...makeEntity('Protect'),\r\n  damageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  healing: false,\r\n  isBasicAttack: false,\r\n  rolls: [makeCheck('intelligence'), makeCheck('intelligence')],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [\r\n    {\r\n      type: 'protected',\r\n      duration: -1,\r\n    },\r\n  ],\r\n}\r\n","import { WeaponT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { SURGE } from '../skills/surge'\r\nimport { AREA_BLAST } from '../skills/area_blast'\r\nimport { PROTECT } from '../skills/protect'\r\n\r\nexport const DUSTY_BOOK: WeaponT = {\r\n  ...makeEntity(`Dusty Book`),\r\n  itemType: 'weapon',\r\n  type: 'tome',\r\n  rarity: 'common',\r\n  twoHand: true,\r\n  attackType: 'ranged',\r\n  damage: { type: 'magic', damage: 9 },\r\n  traits: [],\r\n  skills: [SURGE, AREA_BLAST, PROTECT],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const RITARDANDO: SkillT = {\r\n  ...makeEntity('Ritardando'),\r\n  damageModifier: -0.5,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: true,\r\n  rolls: [\r\n    makeCheck('talent'),\r\n    makeCheck('talent'),\r\n    makeCheck('talent'),\r\n    makeCheck('talent'),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [\r\n    {\r\n      type: 'speed-down',\r\n      duration: -1,\r\n    },\r\n  ],\r\n}\r\n","import { SkillT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { makeCheck } from '../../functions/makeCheck'\r\n\r\nexport const SYMPHONY: SkillT = {\r\n  ...makeEntity('Ritardando'),\r\n  damageModifier: -0.4,\r\n  targetType: 'group',\r\n  damage: true,\r\n  healing: false,\r\n  isBasicAttack: false,\r\n  rolls: [\r\n    makeCheck('talent', -4),\r\n    makeCheck('talent', -4),\r\n    makeCheck('talent', -4),\r\n    makeCheck('talent', -4),\r\n  ],\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { WeaponT } from '../../types'\r\nimport { BLACKSMITHS_HAMMER } from './blacksmiths_hammer'\r\nimport { HUNTING_BOW } from './hunting_bow'\r\nimport { SCHOLARS_BOOK } from './scholars_book'\r\nimport { SIMPLE_LUTE } from './simple_lute'\r\nimport { DUSTY_BOOK } from './dusty_book'\r\nimport { BARBAT } from './barbat'\r\n\r\nexport const ALL_WEAPONS: WeaponT[] = [DUSTY_BOOK, BARBAT]\r\n","import { WeaponT } from '../../types'\r\nimport { makeEntity } from '../../functions/Entity'\r\nimport { ZERO_STATS } from '../Stats'\r\nimport { RITARDANDO } from '../skills/ritardando'\r\nimport { SYMPHONY } from '../skills/symphony'\r\nimport { DAZZLE } from '../skills/dazzle'\r\n\r\nexport const BARBAT: WeaponT = {\r\n  ...makeEntity(`Barbat`),\r\n  itemType: 'weapon',\r\n  type: 'lute',\r\n  rarity: 'common',\r\n  twoHand: true,\r\n  attackType: 'ranged',\r\n  damage: { type: 'magic', damage: 9 },\r\n  traits: [\r\n    {\r\n      duration: -1,\r\n      stats: {\r\n        ...ZERO_STATS,\r\n        goldModifier: 10,\r\n      },\r\n    },\r\n  ],\r\n  skills: [RITARDANDO, SYMPHONY, DAZZLE],\r\n}\r\n","import { useSelector } from 'react-redux'\r\nimport { StateCoreT, StateActionT, StateT } from '../types'\r\nimport { PartyT, CharacterT } from '../../types'\r\nimport { Dispatch } from 'redux'\r\nimport { makeReducer } from '../util'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport {\r\n  updateCharacter,\r\n  makeCharacter,\r\n  checkForProcessedParty,\r\n} from '../../functions'\r\nimport { PLAYER_PARTY_ID } from '../../objects/Party'\r\nimport { ALL_ARMOR } from '../../objects/armor/index'\r\nimport { ALL_WEAPONS } from '../../objects/weapons/index'\r\n\r\nexport const UPDATE_PARTY = '@actions/parties/set-party'\r\nexport const UPSERT_CHARACTER = '@actions/parties/upsert-character'\r\nexport const DELETE_CHARACTER = '@actions/parties/delete-character'\r\nexport const UPSERT_ITEM = '@actions/parties/upsert-item'\r\nexport const DELETE_ITEM = '@actions/parties/delete-item'\r\nexport const UPSERT_MOD = '@actions/parties/upsert-mod'\r\nexport const DELETE_MOD = '@actions/parties/delete-mod'\r\n\r\nexport const actionCreators = {\r\n  updateParty: (party: PartyT): StateActionT => {\r\n    return {\r\n      type: UPDATE_PARTY,\r\n      payload: {\r\n        party,\r\n      },\r\n    }\r\n  },\r\n  upsertCharacter: (character: CharacterT): StateActionT => {\r\n    return {\r\n      type: UPSERT_CHARACTER,\r\n      payload: {\r\n        character,\r\n      },\r\n    }\r\n  },\r\n  deleteCharacter: (characterId: string): StateActionT => {\r\n    return {\r\n      type: DELETE_CHARACTER,\r\n      payload: {\r\n        characterId,\r\n      },\r\n    }\r\n  },\r\n}\r\n\r\nexport const actions = {\r\n  updateParty: (party: PartyT) => (dispatch: Dispatch) => {\r\n    checkForProcessedParty(party)\r\n    dispatch(actionCreators.updateParty(party))\r\n  },\r\n  upsertCharacter: (character: CharacterT) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.upsertCharacter(character))\r\n  },\r\n  deleteCharacter: (characterId: string) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.deleteCharacter(characterId))\r\n  },\r\n}\r\n\r\nexport const core: StateCoreT<PartyT> = {\r\n  [UPDATE_PARTY]: (state, action) => {\r\n    return {\r\n      ...action.payload.party,\r\n    }\r\n  },\r\n  [UPSERT_CHARACTER]: (state, action) => {\r\n    return updateCharacter(\r\n      state,\r\n      action.payload.character.id,\r\n      (c) => action.payload.character,\r\n    )\r\n  },\r\n  [DELETE_CHARACTER]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      characters: state.characters.filter(\r\n        (c) => c.id !== action.payload.characterId,\r\n      ),\r\n    }\r\n  },\r\n}\r\nconst jack = { ...makeCharacter('blacksmith'), name: 'Jack' }\r\nexport const INITIAL_STATE: PartyT = {\r\n  isParty: true,\r\n  id: PLAYER_PARTY_ID,\r\n  name: 'PlayerParty',\r\n  items: [...ALL_ARMOR, ...ALL_WEAPONS],\r\n  gold: 0,\r\n  characters: [\r\n    {\r\n      ...jack,\r\n      stats: {\r\n        ...jack.stats,\r\n        consumableHealthGainOffset: 15,\r\n      },\r\n    },\r\n    { ...makeCharacter('bard'), name: 'Jim' },\r\n    { ...makeCharacter('scholar'), name: 'Johnny' },\r\n  ],\r\n}\r\nexport default makeReducer(core, INITIAL_STATE)\r\nexport const useParty = () => useSelector((state: StateT) => state.party)\r\nexport const usePartyActions = () =>\r\n  useActions(actions) as {\r\n    updateParty: (party: PartyT) => void\r\n    upsertCharacter: (character: CharacterT) => void\r\n    deleteCharacter: (characterId: string) => void\r\n  }\r\n","import { StateCoreT, StateReducerT } from './types'\r\n\r\nexport const makeReducer = (\r\n  core: StateCoreT,\r\n  initialState: any,\r\n): StateReducerT => {\r\n  return (state = initialState, action) => {\r\n    const coreFn = core[action.type]\r\n    if (coreFn) return coreFn(state, action)\r\n    return state\r\n  }\r\n}\r\n","import { useMemo } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nexport const useActions = (actions: any) => {\r\n  const dispatch = useDispatch()\r\n  return useMemo(() => bindActionCreators(actions, dispatch), [\r\n    dispatch,\r\n    actions,\r\n  ])\r\n}\r\n","import React, { useMemo, useContext, useState } from 'react'\r\nimport {\r\n  PartyT,\r\n  ProcessedPartyT,\r\n  CharacterT,\r\n  ProcessedCharacterT,\r\n  WeaponT,\r\n  ArmorT,\r\n} from '../../types'\r\nimport { usePartyActions, useParty } from '../../state/party'\r\nimport {\r\n  findCharacterInParty,\r\n  processParty,\r\n  makeParty,\r\n  processCharacter,\r\n  makeCharacter,\r\n  equipArmor,\r\n  equipWeapon,\r\n} from '../../functions'\r\n\r\nexport interface PartyContextT {\r\n  party: ProcessedPartyT\r\n  rawParty: PartyT\r\n  activeCharacter: ProcessedCharacterT\r\n  updateParty: (party: PartyT) => void\r\n  upsertCharacter: (character: CharacterT) => void\r\n  deleteCharacter: (characterId: string) => void\r\n  findCharacter: (characterId: string) => ProcessedCharacterT | undefined\r\n  findRawCharacter: (characterId: string) => CharacterT | undefined\r\n  setActiveCharacter: (character: ProcessedCharacterT) => void\r\n  equipItem: (characterId: string, item: WeaponT | ArmorT) => void\r\n}\r\nconst defaultContextValue: PartyContextT = {\r\n  rawParty: makeParty(),\r\n  party: processParty(makeParty()),\r\n  activeCharacter: processCharacter(makeCharacter('blacksmith')),\r\n  updateParty: (party) => {},\r\n  upsertCharacter: (character) => {},\r\n  deleteCharacter: (characterId) => {},\r\n  findCharacter: (characterId) => undefined,\r\n  findRawCharacter: (characterId) => undefined,\r\n  setActiveCharacter: (character) => {},\r\n  equipItem: (characterId, item) => {},\r\n}\r\nexport const PartyContext = React.createContext<PartyContextT>(\r\n  defaultContextValue,\r\n)\r\n\r\nexport interface PartyContextProviderPropsT {\r\n  children: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const PartyContextProvider = (props: PartyContextProviderPropsT) => {\r\n  const { children } = props\r\n  const actions = usePartyActions()\r\n  const rawParty = useParty()\r\n  const party = useMemo(() => processParty(rawParty), [rawParty])\r\n  const [activeCharacterId, setActiveCharacterId] = useState<string>(\r\n    party.characters[0].id,\r\n  )\r\n  const activeCharacter = useMemo(() => {\r\n    return party.characters.find(\r\n      (c) => c.id === activeCharacterId,\r\n    ) as ProcessedCharacterT\r\n  }, [activeCharacterId, party.characters])\r\n  const setActiveCharacter = (character: ProcessedCharacterT) =>\r\n    setActiveCharacterId(character.id)\r\n  const updateParty = (party: PartyT) => {\r\n    actions.updateParty(party)\r\n  }\r\n  const upsertCharacter = (character: CharacterT) => {\r\n    if (!character) return\r\n    if ((character as ProcessedCharacterT).processed) {\r\n      throw new Error('No processed Characters Allowed')\r\n    }\r\n    actions.upsertCharacter(character)\r\n  }\r\n  const deleteCharacter = (characterId: string) => {\r\n    actions.deleteCharacter(characterId)\r\n  }\r\n  const findCharacter = (characterId: string) => {\r\n    return findCharacterInParty<ProcessedPartyT, ProcessedCharacterT>(\r\n      party,\r\n      characterId,\r\n    )\r\n  }\r\n  const findRawCharacter = (characterId: string) => {\r\n    return findCharacterInParty(rawParty, characterId)\r\n  }\r\n\r\n  const equipItem = (characterId: string, item: WeaponT | ArmorT) => {\r\n    const character = findRawCharacter(activeCharacter.id)\r\n    if (!character) return\r\n    if (item.itemType === 'armor') {\r\n      const armor = item as ArmorT\r\n      const result = equipArmor(character, armor)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.armor ? [result.armor] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n    if (item.itemType === 'weapon') {\r\n      const weapon = item as WeaponT\r\n      const result = equipWeapon(character, weapon)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.weapon ? [result.weapon] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PartyContext.Provider\r\n      value={{\r\n        party,\r\n        rawParty,\r\n        activeCharacter,\r\n        updateParty,\r\n        upsertCharacter,\r\n        deleteCharacter,\r\n        findCharacter,\r\n        findRawCharacter,\r\n        setActiveCharacter,\r\n        equipItem,\r\n      }}\r\n    >\r\n      {children}\r\n    </PartyContext.Provider>\r\n  )\r\n}\r\n\r\nexport const usePartyContext = () => useContext(PartyContext)\r\n","import { ProcessedCharacterT } from './Character'\r\nimport { hasStatus } from '../functions'\r\n\r\nexport interface CombatQueueT {\r\n  [characterId: string]: number\r\n}\r\n\r\nexport const makeCombatQueue = (\r\n  characters: ProcessedCharacterT[],\r\n): CombatQueueT => {\r\n  const sortedCharacters = characters.sort(\r\n    (a, b) => b.stats.agility - a.stats.agility,\r\n  )\r\n  return sortedCharacters.reduce(\r\n    (r, c, i) => ({\r\n      ...r,\r\n      [c.id]: 100 - c.stats.agility,\r\n    }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const getMax = (queue: CombatQueueT): number => {\r\n  return Object.keys(queue).reduce((r: number, id: string) => {\r\n    if (r < queue[id]) return queue[id]\r\n    return r\r\n  }, Number.NEGATIVE_INFINITY)\r\n}\r\n\r\nexport const getMin = (\r\n  queue: CombatQueueT,\r\n  characters?: ProcessedCharacterT[],\r\n): number => {\r\n  return Object.keys(queue).reduce((r: number, id: string) => {\r\n    if (queue[id] < r) {\r\n      if (characters) {\r\n        const c = characters.find((c) => c.id === id)\r\n        if (c && hasStatus(c, 'dazed')) {\r\n          return r\r\n        } else {\r\n          return queue[id]\r\n        }\r\n      } else return queue[id]\r\n    }\r\n    return r\r\n  }, Number.POSITIVE_INFINITY)\r\n}\r\n\r\nexport const consolidateQueue = (\r\n  queue: CombatQueueT,\r\n  characters: ProcessedCharacterT[] = [],\r\n): CombatQueueT => {\r\n  let min = getMin(queue, characters)\r\n  return Object.keys(queue).reduce((r, id) => {\r\n    const character = characters.find((c) => c.id === id)\r\n    const offset = character && hasStatus(character, 'dazed') ? 0 : min\r\n    return {\r\n      ...r,\r\n      [id]: queue[id] - offset,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const shiftQueue = (\r\n  queue: CombatQueueT,\r\n  character: ProcessedCharacterT,\r\n  characters: ProcessedCharacterT[],\r\n): CombatQueueT => {\r\n  const ret = consolidateQueue(\r\n    {\r\n      ...queue,\r\n      [character.id]: 200 - character.stats.agility,\r\n    },\r\n    characters,\r\n  )\r\n  return ret\r\n}\r\n\r\nexport const getFirst = (queue: CombatQueueT): string => {\r\n  let min = Number.POSITIVE_INFINITY\r\n  let key = Object.keys(queue)[0]\r\n  Object.keys(queue).forEach((id) => {\r\n    if (min > queue[id]) {\r\n      min = queue[id]\r\n      key = id\r\n    }\r\n  })\r\n  return key\r\n}\r\n\r\nexport const removeFromQueue = (\r\n  queue: CombatQueueT,\r\n  id: string,\r\n): CombatQueueT => {\r\n  return consolidateQueue(\r\n    Object.keys(queue)\r\n      .filter((key) => key !== id)\r\n      .reduce(\r\n        (r, id) => ({\r\n          ...r,\r\n          [id]: queue[id],\r\n        }),\r\n        {},\r\n      ),\r\n  )\r\n}\r\n\r\nexport const validateQueue = (\r\n  queue: CombatQueueT,\r\n  characters: ProcessedCharacterT[],\r\n): CombatQueueT => {\r\n  return consolidateQueue(\r\n    characters.reduce((r, c) => {\r\n      return c.dead ? r : { ...r, [c.id]: queue[c.id] }\r\n    }, {}),\r\n  )\r\n}\r\n\r\nexport const getSortedIds = (queue: CombatQueueT): string[] => {\r\n  return Object.keys(queue).sort((a, b) => queue[a] - queue[b])\r\n}\r\n","import { ModalStylesT } from '.'\r\n\r\nexport interface ModalContextStateT {\r\n  isOpen: boolean\r\n  contents: JSX.Element | null\r\n  callback: ((payload?: any) => void) | null\r\n  payload: any | null\r\n  blocking: boolean\r\n  styles: ModalStylesT\r\n}\r\nexport const initialState: ModalContextStateT = {\r\n  isOpen: false,\r\n  contents: null,\r\n  callback: null,\r\n  payload: null,\r\n  blocking: false,\r\n  styles: {},\r\n}\r\n\r\nexport const OPEN = 'modalContext/OPEN'\r\nexport const CLOSE = 'modalContext/CLOSE'\r\nexport const SET_CONTENTS = 'modalContext/SET_CONTENTS'\r\nexport const SET_CALLBACK = 'modalContext/SET_CALLBACK'\r\nexport const SET_PAYLOAD = 'modalContext/SET_PAYLOAD'\r\nexport const SET_BLOCKING = 'modalContext/SET_BLOCKING'\r\nexport const SET_STYLE = 'modalContext/SET_STYLE'\r\n\r\nexport const actions = {\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => ({\r\n    type: OPEN,\r\n    contents,\r\n    styles,\r\n    blocking,\r\n    callback,\r\n  }),\r\n  close: () => ({ type: CLOSE }),\r\n  setPayload: (payload: any) => ({ type: SET_PAYLOAD, payload }),\r\n  setContents: (contents: JSX.Element | null) => ({\r\n    type: SET_CONTENTS,\r\n    contents,\r\n  }),\r\n  setCallback: (callback: (() => void) | null) => ({\r\n    type: SET_CALLBACK,\r\n    callback,\r\n  }),\r\n  setBlocking: (blocking: boolean) => ({ type: SET_BLOCKING, blocking }),\r\n  setStyles: (styles: ModalStylesT) => ({ type: SET_STYLE, styles }),\r\n}\r\n\r\nconst core: Record<\r\n  string,\r\n  (state: ModalContextStateT, action: any) => ModalContextStateT\r\n> = {\r\n  [OPEN]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    isOpen: true,\r\n    contents: action.contents ? action.contents : state.contents,\r\n    styles: action.styles ? action.styles : state.styles || {},\r\n    blocking: action.blocking || false,\r\n    callback: action.callback ? action.callback : state.callback,\r\n  }),\r\n  [CLOSE]: (state: ModalContextStateT) => ({\r\n    ...state,\r\n    isOpen: false,\r\n  }),\r\n  [SET_PAYLOAD]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    payload: action.payload,\r\n  }),\r\n  [SET_CONTENTS]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: null,\r\n    payload: null,\r\n    contents: action.contents,\r\n    blocking: false,\r\n    style: {},\r\n  }),\r\n  [SET_CALLBACK]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: action.callback,\r\n  }),\r\n  [SET_BLOCKING]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    blocking: action.blocking,\r\n  }),\r\n  [SET_STYLE]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    styles: action.styles,\r\n  }),\r\n}\r\n\r\nexport const reducer = (\r\n  state: ModalContextStateT = initialState,\r\n  action: any,\r\n) => {\r\n  const coreFunction = core[action.type]\r\n  return coreFunction ? coreFunction(state, action) : state\r\n}\r\n","import React, { useContext, useReducer, useMemo, CSSProperties } from 'react'\r\nimport Modal from 'react-modal'\r\nimport { actions, reducer, initialState, ModalContextStateT } from './reducer'\r\n\r\nexport interface ModalContextT {\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => void\r\n  close: (payload?: any) => void\r\n  setPayload: (payload: any) => void\r\n  setBlocking: (blocking: boolean) => void\r\n  setContents: (contents: JSX.Element) => void\r\n  setCallback: (callback: (payload?: any) => void) => void\r\n  setStyles: (styles: ModalStylesT) => void\r\n}\r\nconst defaultContext: ModalContextT = {\r\n  open: () => null,\r\n  close: () => null,\r\n  setBlocking: () => null,\r\n  setPayload: () => null,\r\n  setContents: () => null,\r\n  setCallback: () => null,\r\n  setStyles: () => null,\r\n}\r\nexport const ModalContext = React.createContext<ModalContextT>(defaultContext)\r\nexport const useModalContext = () => useContext(ModalContext)\r\n\r\nexport interface ModalStylesT {\r\n  modal?: CSSProperties\r\n  overlay?: CSSProperties\r\n}\r\n\r\nconst getContextValue = (\r\n  state: ModalContextStateT,\r\n  dispatch: React.Dispatch<any>,\r\n) => ({\r\n  isOpen: state.isOpen,\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => {\r\n    dispatch(actions.open(contents, styles, blocking, callback))\r\n  },\r\n  close: (payload?: any) => {\r\n    if (state.callback) state.callback(payload || state.payload)\r\n    dispatch(actions.close())\r\n  },\r\n  setPayload: (payload: any) => dispatch(actions.setPayload(payload)),\r\n  setContents: (contents: JSX.Element) =>\r\n    dispatch(actions.setContents(contents)),\r\n  setCallback: (callback: (payload?: any) => void) =>\r\n    dispatch(actions.setCallback(callback)),\r\n  setBlocking: (blocking: boolean) => dispatch(actions.setBlocking(blocking)),\r\n  setStyles: (styles: ModalStylesT) => dispatch(actions.setStyles(styles)),\r\n})\r\nModal.setAppElement('#root')\r\nexport interface ModalContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const ModalContextProvider = (props: ModalContextProviderPropsT) => {\r\n  const { children } = props\r\n  const reducerValue = useReducer(reducer, initialState)\r\n  const [state] = reducerValue\r\n  const context = useMemo(() => getContextValue(...reducerValue), [\r\n    reducerValue,\r\n  ])\r\n\r\n  return (\r\n    <ModalContext.Provider value={context}>\r\n      {children}\r\n      <Modal\r\n        isOpen={state.isOpen}\r\n        onRequestClose={() => {\r\n          if (!state.blocking) context.close()\r\n        }}\r\n        style={{\r\n          content: {\r\n            backgroundColor: '#111',\r\n            color: 'white',\r\n            width: 400,\r\n            margin: '0 auto',\r\n            bottom: 'unset',\r\n            borderColor: '#555',\r\n            ...state.styles.modal,\r\n          },\r\n          overlay: {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n            zIndex: 900,\r\n            ...state.styles.overlay,\r\n          },\r\n        }}\r\n      >\r\n        {state.contents || <div />}\r\n      </Modal>\r\n    </ModalContext.Provider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { styled, withStyle } from 'styletron-react'\r\nimport { animated, useSpring } from 'react-spring'\r\n\r\nexport interface ButtonPropsT {\r\n  $direction?: 'up' | 'down'\r\n}\r\nexport const Button = styled('button', (props: ButtonPropsT) => {\r\n  return {\r\n    cursor: 'pointer',\r\n    background: '#222',\r\n    boxShadow: 'inset 0px 0px 3px black',\r\n    textShadow: '0px 1px 3px black',\r\n    border: '1px solid rgba(255,255,255,0.2)',\r\n    color: 'rgba(255,255,255,1)',\r\n    ':hover': {\r\n      border: '1px solid rgba(255,255,255,0.4)',\r\n    },\r\n    ':active': {\r\n      outline: 'none',\r\n      border: '1px solid rgba(255,255,255,0.7)',\r\n    },\r\n    ':focus': {\r\n      outline: 'none',\r\n    },\r\n    padding: '10px 30px',\r\n  }\r\n})\r\n\r\nexport const RedButton = withStyle(Button, (props: ButtonPropsT) => {\r\n  return {\r\n    background:\r\n      'linear-gradient(0deg, rgba(157,0,0,1) 0%, rgba(110,0,0,1) 100%)',\r\n  }\r\n})\r\n\r\nexport const ConfirmButton = withStyle(Button, (props: ButtonPropsT) => {\r\n  const { $direction } = props\r\n  return {\r\n    // background: 'linear-gradient(0deg, rgba(157,0,0,1) 0%, rgba(110,0,0,1) 100%)',\r\n    // fontWeight: 'bold',\r\n    borderTop: $direction === 'down' ? 'none' : undefined,\r\n    borderBottom: $direction === 'up' ? 'none' : undefined,\r\n    padding: '10px 30px',\r\n    boxShadow: 'inset 0px 2px 8px black',\r\n    ':hover': {\r\n      borderTop: $direction === 'down' ? 'none' : undefined,\r\n      borderBottom: $direction === 'up' ? 'none' : undefined,\r\n    },\r\n    animationDirection: '1s',\r\n    animationIterationCount: 'infinite',\r\n    animationName: `\r\n      from: {\r\n        background: 'rgba(255,255,255,0.4)',\r\n      },\r\n\r\n      to: {\r\n        background: 'rgba(255,255,255,1)',\r\n      },\r\n    `,\r\n  }\r\n})\r\n\r\nexport const ConfirmButton2 = (props: any) => {\r\n  const styles = useSpring({\r\n    from: {\r\n      border: '1px solid rgba(255,255,255,0)',\r\n    },\r\n    to: async (next: any) => {\r\n      while (1) {\r\n        await next({\r\n          border: '1px solid rgba(255,255,255,0)',\r\n        })\r\n        await next({ border: '1px solid rgba(255,255,255,1)' })\r\n      }\r\n    },\r\n  })\r\n  return (\r\n    <animated.div style={styles}>\r\n      <ConfirmButton style={{ border: 'none' }}>{props.children}</ConfirmButton>\r\n    </animated.div>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport interface FlexContainerPropsT {\r\n  $direction?: 'row' | 'column' | 'column-reverse'\r\n  $full?: boolean\r\n}\r\nexport const FlexContainer = styled('div', (props: FlexContainerPropsT) => ({\r\n  display: 'flex',\r\n  flexDirection: props.$direction || 'row',\r\n  flex: props.$full ? 1 : 'default',\r\n}))\r\nexport const FullContainer = styled('div', () => ({\r\n  flex: 1,\r\n}))\r\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n} from 'react'\r\nimport {\r\n  ProcessedPartyT,\r\n  PartyT,\r\n  SkillT,\r\n  ProcessedCharacterT,\r\n  TargetSkillResultT,\r\n  SkillTargetT,\r\n} from '../../types'\r\nimport {\r\n  makeParty,\r\n  processParty,\r\n  getSkillResults,\r\n  commitSkillResults,\r\n  processCharacter,\r\n  makeCharacter,\r\n  resolveSkillTarget,\r\n  makeSkillTarget,\r\n  removeTemporaryStatus,\r\n  getRolledRewards,\r\n  consolidateRewards,\r\n  commitRewards,\r\n} from '../../functions'\r\nimport { usePartyContext } from '../PartyContext'\r\nimport {\r\n  CombatQueueT,\r\n  makeCombatQueue,\r\n  getFirst,\r\n  shiftQueue,\r\n  validateQueue,\r\n} from '../../types/CombatQueue'\r\nimport { getAIAction } from '../../functions/AI'\r\nimport { v4 } from 'uuid'\r\nimport { useHistory } from 'react-router'\r\nimport { useModalContext } from '../ModalContext'\r\nimport { Button } from '../../elements/button'\r\nimport { FlexContainer } from '../../elements/flex'\r\n\r\nexport interface CombatContextT {\r\n  party: ProcessedPartyT\r\n  enemyParty: ProcessedPartyT\r\n  activeCharacter: ProcessedCharacterT\r\n  characters: ProcessedCharacterT[]\r\n  queue: CombatQueueT\r\n  selectedSkill: SkillT | undefined\r\n  selectedTargets: ProcessedCharacterT[]\r\n  selectedConsumableIndex: number | undefined\r\n  roundResults: TargetSkillResultT[][]\r\n  activeRound: TargetSkillResultT[] | undefined\r\n  isRunning: boolean\r\n  isDone: boolean\r\n  isRenderingResult: boolean\r\n  onSkillSelect: (skill: SkillT, consumableIndex?: number) => void\r\n  onTargetsSelect: (target: ProcessedCharacterT | ProcessedPartyT) => void\r\n  onConsumableSelect: (consumableIndex: number | undefined) => void\r\n  start: () => void\r\n  next: (nextTarget?: ProcessedCharacterT | ProcessedPartyT) => void\r\n  commit: () => void\r\n}\r\nconst defaultValue: CombatContextT = {\r\n  party: processParty(makeParty()),\r\n  enemyParty: processParty(makeParty()),\r\n  activeCharacter: processCharacter(makeCharacter('blacksmith')),\r\n  characters: [],\r\n  queue: {},\r\n  selectedSkill: undefined,\r\n  selectedTargets: [],\r\n  selectedConsumableIndex: undefined,\r\n  roundResults: [],\r\n  activeRound: undefined,\r\n  isRunning: false,\r\n  isDone: false,\r\n  isRenderingResult: false,\r\n  onSkillSelect: (skill: SkillT) => {},\r\n  onTargetsSelect: (target: ProcessedCharacterT | ProcessedPartyT) => {},\r\n  onConsumableSelect: (consumableIndex) => {},\r\n  start: () => {},\r\n  next: () => {},\r\n  commit: () => {},\r\n}\r\nexport const CombatContext = createContext<CombatContextT>(defaultValue)\r\nexport const useCombatContext = () => useContext(CombatContext)\r\n\r\nexport interface CombatContextProviderPropsT {\r\n  children: JSX.Element\r\n  enemyParty: PartyT\r\n  setEnemyParty: (party: PartyT) => void\r\n  onRequestNewParty: () => void\r\n}\r\nexport const CombatContextProvider = (props: CombatContextProviderPropsT) => {\r\n  const { children, setEnemyParty } = props\r\n  const { party, rawParty, updateParty } = usePartyContext()\r\n  const { open, close } = useModalContext()\r\n  const history = useHistory()\r\n  const resultCommitter = useMemo(\r\n    () => commitSkillResults(rawParty, props.enemyParty),\r\n    [rawParty, props.enemyParty],\r\n  )\r\n  const enemyParty = useMemo(() => processParty(props.enemyParty), [\r\n    props.enemyParty,\r\n  ])\r\n  const [isRunning, setIsRunning] = useState<boolean>(false)\r\n  const [isDone, setIsDone] = useState<boolean>(false)\r\n  const [isRenderingResult, setIsRenderingResult] = useState<boolean>(false)\r\n  const characters = useMemo(\r\n    () => [...party.characters, ...enemyParty.characters],\r\n    [party, enemyParty],\r\n  )\r\n  const [queue, setQueue] = useState<CombatQueueT>(\r\n    makeCombatQueue([...party.characters, ...enemyParty.characters]),\r\n  )\r\n  const [roundId, setRoundId] = useState<string>(v4())\r\n  const [roundResults, setRoundResults] = useState<TargetSkillResultT[][]>([])\r\n  const [activeRound, setActiveRound] = useState<\r\n    TargetSkillResultT[] | undefined\r\n  >()\r\n  const [selectedTarget, setSelectedTarget] = useState<\r\n    SkillTargetT | undefined\r\n  >()\r\n  const [selectedSkill, setSelectedSkill] = useState<SkillT | undefined>()\r\n  const [selectedConsumableIndex, setSelectedConsumableIndex] = useState<\r\n    number | undefined\r\n  >()\r\n  const activeCharacter = useMemo(\r\n    () =>\r\n      characters.find(\r\n        (c) => !c.dead && c.id === getFirst(queue),\r\n      ) as ProcessedCharacterT,\r\n    [queue, characters],\r\n  )\r\n\r\n  const start = useCallback(() => {\r\n    setIsDone(false)\r\n    setIsRunning(true)\r\n  }, [activeCharacter])\r\n\r\n  // temp code\r\n  useEffect(() => {\r\n    if (isRunning) {\r\n      setQueue(makeCombatQueue([...party.characters, ...enemyParty.characters]))\r\n    }\r\n  }, [isRunning])\r\n\r\n  const next = (nextTarget?: ProcessedCharacterT | ProcessedPartyT) => {\r\n    if (!selectedSkill) return\r\n    const roundTarget = nextTarget\r\n      ? makeSkillTarget(selectedSkill.targetType, nextTarget)\r\n      : selectedTarget\r\n    if (!selectedSkill || !roundTarget) return\r\n    const results = getSkillResults(\r\n      selectedSkill,\r\n      activeCharacter,\r\n      resolveSkillTarget(roundTarget).filter((c) => !c.dead),\r\n      selectedConsumableIndex,\r\n    )\r\n    setActiveRound(results)\r\n    setSelectedSkill(undefined)\r\n    setSelectedTarget(undefined)\r\n    setSelectedConsumableIndex(undefined)\r\n    setIsRenderingResult(true)\r\n  }\r\n\r\n  const onSkillSelect = (skill: SkillT, consumableIndex?: number) => {\r\n    setSelectedSkill(skill)\r\n    if (consumableIndex !== undefined) {\r\n      setSelectedConsumableIndex(consumableIndex)\r\n    }\r\n    if (skill.targetType !== selectedSkill?.targetType) {\r\n      setSelectedTarget(undefined)\r\n    }\r\n  }\r\n\r\n  const onTargetsSelect = (target: ProcessedCharacterT | ProcessedPartyT) => {\r\n    if (!selectedSkill) return\r\n    setSelectedTarget(makeSkillTarget(selectedSkill.targetType, target))\r\n  }\r\n\r\n  const completeRound = (\r\n    source: ProcessedCharacterT,\r\n    updatedCharacters: ProcessedCharacterT[],\r\n  ) => {\r\n    setQueue(\r\n      validateQueue(\r\n        shiftQueue(queue, source, updatedCharacters),\r\n        updatedCharacters,\r\n      ),\r\n    )\r\n    setRoundId(v4())\r\n    setActiveRound(undefined)\r\n    setIsRenderingResult(false)\r\n  }\r\n\r\n  const commit = useCallback(() => {\r\n    if (!activeRound || activeRound.length === 0) return\r\n    const parties = resultCommitter(activeRound)\r\n    setRoundResults((r) => [...r, activeRound])\r\n    setEnemyParty(parties.enemyParty)\r\n    updateParty(parties.party)\r\n    const updatedCharacters = [\r\n      ...parties.party.characters,\r\n      ...parties.enemyParty.characters,\r\n    ].map((c) => processCharacter(c))\r\n    completeRound(activeRound[0].source, updatedCharacters)\r\n  }, [activeRound, queue])\r\n\r\n  const execEnemyTurn = (skill: SkillT, target: SkillTargetT) => {\r\n    const results = getSkillResults(\r\n      skill,\r\n      activeCharacter,\r\n      resolveSkillTarget(target),\r\n    )\r\n    setActiveRound(results)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activeCharacter) {\r\n      if (activeCharacter.partyId === enemyParty.id) {\r\n        const { skill, target } = getAIAction(\r\n          activeCharacter,\r\n          party,\r\n          enemyParty,\r\n        )\r\n\r\n        execEnemyTurn(skill, makeSkillTarget(skill.targetType, target))\r\n      } else {\r\n        setSelectedSkill(activeCharacter.skills[0])\r\n      }\r\n    }\r\n  }, [roundId])\r\n\r\n  useEffect(() => {\r\n    if (isDone) return\r\n    if (enemyParty.characters.every((c) => c.dead)) {\r\n      setIsDone(true)\r\n      const rewards = consolidateRewards(\r\n        getRolledRewards(\r\n          enemyParty,\r\n          party.characters.reduce((p, c) =>\r\n            p.stats.luck > c.stats.luck ? p : c,\r\n          ),\r\n        ),\r\n      )\r\n      updateParty(\r\n        commitRewards(\r\n          {\r\n            ...rawParty,\r\n            characters: rawParty.characters.map((c) =>\r\n              removeTemporaryStatus(c),\r\n            ),\r\n          },\r\n          rewards,\r\n        ),\r\n      )\r\n      open(\r\n        <div style={{ textAlign: 'center' }}>\r\n          <h1>You Win!</h1>\r\n          <FlexContainer $direction='column' style={{ color: 'white' }}>\r\n            <span>{rewards.gold} Gold</span>\r\n            <span>{rewards.xp} XP</span>\r\n            {rewards.items.map((item) => (\r\n              <span>\r\n                {item.name} {item.rarity} {item.itemType}\r\n              </span>\r\n            ))}\r\n          </FlexContainer>\r\n          <Button\r\n            onClick={() => {\r\n              close()\r\n              history.push('/JSFTK_combat/party')\r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n        </div>,\r\n        {},\r\n        true,\r\n      )\r\n      setIsDone(true)\r\n      return\r\n    }\r\n    if (party.characters.every((c) => c.dead)) {\r\n      alert('you lose')\r\n      setIsDone(true)\r\n      history.push('/JSFTK_combat/')\r\n      return\r\n    }\r\n  }, [party, enemyParty])\r\n\r\n  useEffect(() => {\r\n    if (activeCharacter && activeCharacter.skills[0]) {\r\n      setSelectedSkill(activeCharacter.skills[0])\r\n    }\r\n  }, [activeCharacter])\r\n\r\n  return (\r\n    <CombatContext.Provider\r\n      value={{\r\n        party,\r\n        enemyParty,\r\n        characters,\r\n        queue,\r\n        activeCharacter,\r\n        activeRound,\r\n        selectedSkill,\r\n        selectedTargets: selectedTarget\r\n          ? resolveSkillTarget(selectedTarget)\r\n          : [],\r\n        selectedConsumableIndex,\r\n        roundResults,\r\n        isDone,\r\n        isRunning,\r\n        isRenderingResult,\r\n        onSkillSelect,\r\n        onTargetsSelect,\r\n        onConsumableSelect: setSelectedConsumableIndex,\r\n        start,\r\n        next,\r\n        commit,\r\n      }}\r\n    >\r\n      {children}\r\n    </CombatContext.Provider>\r\n  )\r\n}\r\n","import { ProcessedCharacterT, ProcessedPartyT, SkillT } from '../types'\r\nimport { getRandom } from '../util'\r\nimport { getSkillTargetOptions } from './Skill'\r\n\r\nexport interface AIActionT {\r\n  skill: SkillT\r\n  target: ProcessedCharacterT | ProcessedPartyT\r\n}\r\nexport const getAIAction = (\r\n  source: ProcessedCharacterT,\r\n  playerParty: ProcessedPartyT,\r\n  enemyParty: ProcessedPartyT,\r\n): AIActionT => {\r\n  const skill = getRandom(source.skills)\r\n  const targetedCharacters = playerParty.characters.filter(\r\n    (c) => c.status.map((t) => t.type).includes('targeted') && !c.dead,\r\n  )\r\n  const target =\r\n    skill.targetType === 'single'\r\n      ? targetedCharacters.length > 0\r\n        ? getRandom(targetedCharacters)\r\n        : getRandom(playerParty.characters.filter((c) => !c.dead))\r\n      : getRandom<ProcessedPartyT | ProcessedCharacterT>(\r\n          getSkillTargetOptions(source, enemyParty, playerParty, skill),\r\n        )\r\n\r\n  return { skill, target }\r\n}\r\n","import React, { useState, useLayoutEffect } from 'react'\r\nimport { v4 } from 'uuid'\r\n\r\nexport interface HoverChildrenT {\r\n  isHovering: boolean\r\n}\r\nexport interface HoverPropsT {\r\n  delay?: number\r\n  children: (props: HoverChildrenT) => JSX.Element\r\n}\r\nexport const Hover = (props: HoverPropsT) => {\r\n  const { delay = 500, children } = props\r\n  const [internalHovering, setInternalHovering] = useState<boolean>(false)\r\n  const [isHovering, setIsHovering] = useState<boolean>(false)\r\n  const [guid, setGuid] = useState<string>(v4())\r\n  useLayoutEffect(() => {\r\n    const action = async () => {\r\n      if (internalHovering) {\r\n        setTimeout(() => {\r\n          setGuid(v4())\r\n        }, delay)\r\n      }\r\n    }\r\n    action()\r\n  }, [internalHovering])\r\n  useLayoutEffect(() => {\r\n    if (internalHovering) {\r\n      setIsHovering(true)\r\n    }\r\n  }, [guid])\r\n  const onMouseEnter = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(true)\r\n  }\r\n  const onMouseLeave = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(false)\r\n    setIsHovering(false)\r\n  }\r\n  return (\r\n    <div onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\r\n      {children({ isHovering })}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Hover } from '../components/Hover'\r\n\r\nexport interface BoxContainerPropsT extends React.HTMLProps<HTMLDivElement> {\r\n  substyle?: React.CSSProperties\r\n  tag?: any\r\n  to?: string\r\n}\r\nexport const BoxContainer = (props: BoxContainerPropsT) => {\r\n  const {\r\n    style = {},\r\n    substyle = {},\r\n    children,\r\n    tag: Element = 'div',\r\n    ...rest\r\n  } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        border: '1px solid #000',\r\n        display: 'flex',\r\n        boxSizing: 'border-box',\r\n        ...style,\r\n      }}\r\n    >\r\n      <Element\r\n        style={{\r\n          border: substyle.border || '1px solid #555',\r\n          background: 'linear-gradient(0deg, #222222 0%, #2a2a2a 100%)',\r\n          padding: 10,\r\n          color: '#ccc',\r\n          flex: 1,\r\n          boxShadow: 'inset 0px 0px 2px black',\r\n          ...substyle,\r\n        }}\r\n        {...rest}\r\n      >\r\n        {children}\r\n      </Element>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const SmallBox = (props: BoxContainerPropsT) => (\r\n  <BoxContainer\r\n    {...props}\r\n    style={{\r\n      height: 40,\r\n      width: 40,\r\n      ...props.style,\r\n    }}\r\n    substyle={{\r\n      display: 'flex',\r\n      padding: 0,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      background: '#111',\r\n      ...props.substyle,\r\n    }}\r\n  >\r\n    {props.children}\r\n  </BoxContainer>\r\n)\r\n\r\nexport const BoxButton = (props: BoxContainerPropsT) => {\r\n  return (\r\n    <Hover delay={0}>\r\n      {({ isHovering }) => (\r\n        <BoxContainer\r\n          {...props}\r\n          tag='button'\r\n          style={{\r\n            margin: 0,\r\n            ...(props.style || {}),\r\n          }}\r\n          substyle={{\r\n            borderColor: isHovering && !props.disabled ? '#999' : '#555',\r\n            padding: '4px',\r\n            cursor: props.disabled ? 'default' : 'pointer',\r\n            background: props.disabled ? '#444' : '#111',\r\n            boxShadow: props.disabled ? 'none' : undefined,\r\n            ...(props.substyle || {}),\r\n          }}\r\n        />\r\n      )}\r\n    </Hover>\r\n  )\r\n}\r\n","import React, { useState, useRef } from 'react'\r\nimport BaseTooltip, { TooltipProps } from 'react-tooltip-lite'\r\nimport { Hover } from '../Hover'\r\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\r\n\r\nexport interface ClickToolTipChildrenT {\r\n  onClick: () => void\r\n  ref: React.MutableRefObject<HTMLElement | undefined>\r\n}\r\ninterface PropsT extends TooltipProps {\r\n  children: JSX.Element | ((props: ClickToolTipChildrenT) => JSX.Element)\r\n  content: JSX.Element | ((props: ClickToolTipChildrenT) => JSX.Element)\r\n}\r\nexport const Tooltip = (props: PropsT) => {\r\n  const { ...rest } = props\r\n  return (\r\n    <BaseTooltip\r\n      direction='up'\r\n      tagName='div'\r\n      padding='0'\r\n      arrow={false}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nexport const HoverToolTip = (props: PropsT) => {\r\n  return (\r\n    <Hover>\r\n      {({ isHovering }) => <Tooltip {...props} isOpen={isHovering} />}\r\n    </Hover>\r\n  )\r\n}\r\n\r\nexport const ClickToolTip = (props: PropsT) => {\r\n  const { children, content, ...rest } = props\r\n  const [isOpen, setIsOpen] = useState<boolean>(false)\r\n  const ref = useRef<HTMLElement>()\r\n  useOnClickOutside(ref, () => {\r\n    setIsOpen(false)\r\n  })\r\n  if (typeof children !== 'function') return null\r\n  if (typeof content !== 'function') return null\r\n  const p = {\r\n    onClick: () => {\r\n      setIsOpen((v) => !v)\r\n    },\r\n    ref,\r\n  }\r\n  return (\r\n    <Tooltip content={content(p)} {...rest} isOpen={isOpen}>\r\n      {children(p)}\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport const useOnClickOutside = (\r\n  ref: React.MutableRefObject<HTMLElement | undefined>,\r\n  handler: Function,\r\n) => {\r\n  useEffect(() => {\r\n    const listener = (event: any) => {\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return\r\n      }\r\n\r\n      setTimeout(() => handler(event), 150)\r\n    }\r\n\r\n    document.addEventListener('mousedown', listener)\r\n    document.addEventListener('touchstart', listener)\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', listener)\r\n      document.removeEventListener('touchstart', listener)\r\n    }\r\n  }, [ref, handler])\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport const Monospace = styled('span', () => ({\r\n  fontFamily: 'Inconsolata, monospace',\r\n  fontWeight: 600,\r\n}))\r\nexport const Monodiv = styled('div', () => ({\r\n  fontFamily: 'Inconsolata, monospace',\r\n  fontWeight: 600,\r\n}))\r\n","export const CHARACTER_XP_MAX: Record<number, number> = {\r\n  1: 120,\r\n  2: 400,\r\n  3: 900,\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { Monodiv } from '../../elements/monospace'\r\nimport { ProcessedCharacterT } from '../../types'\r\nimport { noneg } from '../../util'\r\nimport { CHARACTER_XP_MAX } from '../../objects/Character'\r\n\r\nexport interface GaugePropsT {\r\n  name?: string\r\n  color: string\r\n  height?: number\r\n  max: number\r\n  value: number\r\n  style?: CSSProperties\r\n  children?: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const Gauge = (props: GaugePropsT) => {\r\n  const { name = '', value, max, color, height = 30, children } = props\r\n  const p = (value / max) * 100\r\n  const percentage = p > 100 ? 100 : p\r\n  return (\r\n    <HoverToolTip\r\n      direction='right'\r\n      content={<BoxContainer>{`${name} (${value} / ${max})`}</BoxContainer>}\r\n    >\r\n      <BoxContainer\r\n        style={{ borderLeft: 'none' }}\r\n        substyle={{\r\n          padding: 0,\r\n          background: '#555',\r\n          height: height - 2,\r\n          position: 'relative',\r\n          borderColor: '1px rgba(255,255,255,0.3)',\r\n        }}\r\n      >\r\n        <FlexContainer\r\n          style={{\r\n            position: 'absolute',\r\n            left: 0,\r\n            boxSizing: 'border-box',\r\n            height: height - 2,\r\n            maxWidth: `${percentage}%`,\r\n            minWidth: `${percentage}%`,\r\n            boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n            textShadow: '1px 1px 1px black',\r\n            backgroundColor: color,\r\n            color: 'white',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            transition: 'all 0.5s',\r\n          }}\r\n        ></FlexContainer>\r\n        <FullContainer\r\n          style={{\r\n            position: 'absolute',\r\n            height,\r\n            lineHeight: `${height - 2}px`,\r\n            right: 4,\r\n            top: 0,\r\n            fontSize: 10,\r\n            fontWeight: 'bold',\r\n            overflow: 'hidden',\r\n            textShadow: '0px 0px 3px black',\r\n          }}\r\n        >\r\n          <Monodiv>{children}</Monodiv>\r\n        </FullContainer>\r\n      </BoxContainer>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface HealthGaugePropsT {\r\n  character: ProcessedCharacterT\r\n  height?: number\r\n}\r\nexport const HealthGauge = (props: HealthGaugePropsT) => {\r\n  const { character, height = 12 } = props\r\n  const health = noneg(character.health - character.stats.healthOffset)\r\n  return (\r\n    <Gauge\r\n      name='Health'\r\n      color='#8f4e4d'\r\n      max={character.health}\r\n      value={health}\r\n      height={height}\r\n    >\r\n      {health}/{character.health}\r\n    </Gauge>\r\n  )\r\n}\r\nexport interface XPGaugePropsT {\r\n  character: ProcessedCharacterT\r\n}\r\nexport const XPGauge = (props: HealthGaugePropsT) => {\r\n  const { character } = props\r\n  const value = character.xp\r\n  const max = CHARACTER_XP_MAX[character.level]\r\n  return (\r\n    <Gauge name='XP' color='#5e8575' max={max} value={value} height={12}>\r\n      {value}/{max}\r\n    </Gauge>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { styled, withWrapper } from 'styletron-react'\r\nimport { HoverToolTip } from '../components/Tooltip'\r\n\r\nconst Div = styled('div', {\r\n  transform: 'rotateY(0deg) rotate(-45deg)',\r\n})\r\nexport const Badge = withWrapper(Div, (Element) => (props: any) => {\r\n  const { onClick, ...rest } = props\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      style={{\r\n        position: props.$absolute === false ? 'relative' : 'absolute',\r\n        background: '#111',\r\n        padding: '4px',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        boxShadow: '1px 1px 0px black',\r\n        height: props.$size || '20px',\r\n        width: props.$size || '20px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        lineHeight: '20px',\r\n        fontWeight: 'bolder',\r\n        borderRadius: '30%',\r\n        transform: 'rotateY(0deg) rotate(45deg)',\r\n        color: props.$color || 'white',\r\n        cursor: 'pointer',\r\n        top: props.$top,\r\n        bottom: props.$bottom,\r\n        right: props.$right,\r\n        left: props.$left,\r\n      }}\r\n    >\r\n      <Element {...rest} />\r\n    </div>\r\n  )\r\n})\r\n\r\nexport interface HoverBadgePropsT {\r\n  children: JSX.Element\r\n  content: JSX.Element\r\n  badgeProps: any\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n}\r\nexport const HoverBadge = (props: HoverBadgePropsT) => {\r\n  const { children, content, badgeProps, direction } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        top: badgeProps.$top,\r\n        bottom: badgeProps.$bottom,\r\n        left: badgeProps.$left,\r\n        right: badgeProps.$right,\r\n      }}\r\n    >\r\n      <HoverToolTip\r\n        distance={2}\r\n        direction={direction || 'right'}\r\n        // styles={{ position: 'absolute' }}\r\n        content={content || <div />}\r\n      >\r\n        <Badge\r\n          $absolute={false}\r\n          $size={badgeProps.$size}\r\n          $color={badgeProps.$color}\r\n          style={badgeProps.style}\r\n        >\r\n          {children}\r\n        </Badge>\r\n      </HoverToolTip>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nexport interface IconPropsT {\r\n  src: string\r\n  size: number\r\n  fill?: string\r\n  style?: React.CSSProperties\r\n  shadow?: boolean\r\n  onClick?: () => void\r\n}\r\nexport const Icon = ({\r\n  src,\r\n  size,\r\n  style = {},\r\n  fill = 'white',\r\n  shadow,\r\n  onClick,\r\n}: IconPropsT) => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [svg, setSvg] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (src) {\r\n      fetch(src)\r\n        .then((res) => res.text())\r\n        .then((text) => setSvg(text))\r\n        .then(() => setLoading(false))\r\n    }\r\n  }, [src])\r\n\r\n  return !loading ? (\r\n    <div\r\n      className={`icon ${shadow ? 'shadow' : ''}`}\r\n      onClick={() => {\r\n        if (onClick) onClick()\r\n      }}\r\n      style={{ ...style, height: size, width: size, fill }}\r\n      dangerouslySetInnerHTML={{ __html: svg }}\r\n    />\r\n  ) : (\r\n    <div />\r\n  )\r\n}\r\n","import { StatsT, ArmorTypeT, StatusTypeT, ArmorResourceType } from '../types'\r\n\r\nimport Vigor from './svg/delapouite/heart-beats.svg'\r\nimport Strength from './svg/delapouite/biceps.svg'\r\nimport Brain from './svg/lorc/brain.svg'\r\nimport Awareness from './svg/delapouite/eye-target.svg'\r\nimport Juggler from './svg/lorc/juggler.svg'\r\nimport Agility from './svg/lorc/sprint.svg'\r\nimport Clover from './svg/lorc/clover.svg'\r\nimport Accuracy from './svg/delapouite/convergence-target.svg'\r\n\r\nimport Dazed from './svg/lorc/star-swirl.svg'\r\nimport Targeted from './svg/sbed/targeted.svg'\r\nimport Evasive from './svg/lorc/dodging.svg'\r\nimport SpeedDown from './svg/delapouite/sticky-boot.svg'\r\n\r\nimport Shot from './svg/lorc/high-shot.svg'\r\nimport SnipeShot from './svg/delapouite/shield-impact.svg'\r\nimport Surge from './svg/lorc/fire-zone.svg'\r\nimport AreaBast from './svg/lorc/heavy-timer.svg'\r\nimport Dazzle from './svg/lorc/ubisoft-sun.svg'\r\nimport Smash from './svg/lorc/flat-hammer.svg'\r\nimport Shockwave from './svg/lorc/hammer-drop.svg'\r\nimport Taunt from './svg/lorc/bordered-shield.svg'\r\nimport Alto from './svg/delapouite/g-clef.svg'\r\nimport Protect from './svg/lorc/shieldcomb.svg'\r\nimport { SHOT } from '../objects/skills/shot'\r\nimport { SNIPE_SHOT } from '../objects/skills/snipe_shot'\r\nimport { SURGE } from '../objects/skills/surge'\r\nimport { AREA_BLAST } from '../objects/skills/area_blast'\r\nimport { DAZZLE } from '../objects/skills/dazzle'\r\nimport { SMASH } from '../objects/skills/smash'\r\nimport { SHOCKWAVE } from '../objects/skills/shockwave'\r\nimport { TAUNT } from '../objects/skills/taunt'\r\nimport { ALTO } from '../objects/skills/alto'\r\nimport { SYMPHONY } from '../objects/skills/symphony'\r\n\r\nimport MagicArmor from './svg/lorc/robe.svg'\r\nimport ClothArmor from './svg/lorc/scale-mail.svg'\r\nimport Armor from './svg/delapouite/chest-armor.svg'\r\nimport Shield from './svg/delapouite/viking-shield.svg'\r\nimport MagicShield from './svg/lorc/lightning-shield.svg'\r\nimport Footwear from './svg/lorc/leather-boot.svg'\r\nimport Hat from './svg/delapouite/robin-hood-hat.svg'\r\nimport MagicHat from './svg/lorc/pointy-hat.svg'\r\nimport Helmet from './svg/lorc/visored-helm.svg'\r\nimport Weapon from './svg/lorc/broadsword.svg'\r\n\r\nimport Godsbeard from './svg/delapouite/herbs-bundle.svg'\r\nimport { GODSBEARD } from '../objects/consumables/godsbeard'\r\nimport { PROTECT } from '../objects/skills/protect'\r\nimport { RITARDANDO } from '../objects/skills/ritardando'\r\n\r\nexport const STATI_ICONS: Partial<Record<keyof StatsT | 'accuracy', string>> = {\r\n  vigor: Vigor,\r\n  strength: Strength,\r\n  intelligence: Brain,\r\n  perception: Awareness,\r\n  talent: Juggler,\r\n  agility: Agility,\r\n  luck: Clover,\r\n  accuracy: Accuracy,\r\n}\r\n\r\nexport const STATUS_ICONS: Partial<Record<StatusTypeT, string>> = {\r\n  dazed: Dazed,\r\n  targeted: Targeted,\r\n  evasive: Evasive,\r\n  protected: Protect,\r\n  ['speed-down']: SpeedDown,\r\n}\r\n\r\nexport const SKILL_ICONS: Record<string, string> = {\r\n  [SHOT.id]: Shot,\r\n  [SNIPE_SHOT.id]: SnipeShot,\r\n  [SURGE.id]: Surge,\r\n  [AREA_BLAST.id]: AreaBast,\r\n  [SYMPHONY.id]: AreaBast,\r\n  [DAZZLE.id]: Dazzle,\r\n  [SMASH.id]: Smash,\r\n  [SHOCKWAVE.id]: Shockwave,\r\n  [TAUNT.id]: Taunt,\r\n  [ALTO.id]: Alto,\r\n  [RITARDANDO.id]: Alto,\r\n  [PROTECT.id]: Protect,\r\n}\r\n\r\nexport const ARMOR_TYPE_ICONS: Record<ArmorTypeT, string> = {\r\n  ['magic-armor']: MagicArmor,\r\n  ['cloth-armor']: ClothArmor,\r\n  armor: Armor,\r\n  shield: Shield,\r\n  ['magic-shield']: MagicShield,\r\n  footwear: Footwear,\r\n  hat: Hat,\r\n  ['magic-hat']: MagicHat,\r\n  helmet: Helmet,\r\n  charm: '',\r\n  ring: '',\r\n}\r\n\r\nexport const RESOURCE_ICONS: Record<ArmorResourceType | 'weapon', string> = {\r\n  weapon: Weapon,\r\n  offhand: Shield,\r\n  body: Armor,\r\n  head: Helmet,\r\n  feet: Footwear,\r\n}\r\n\r\nexport const CONSUMABLE_ITEM_ICONS: Record<string, string> = {\r\n  [GODSBEARD.id]: Godsbeard,\r\n}\r\nexport const CONSUMABLE_ITEM_COLORS: Record<string, string> = {\r\n  [GODSBEARD.id]: '#84a397',\r\n}\r\n","import React from 'react'\r\nimport { Tooltip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STATUS_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { StatusT } from '../../types'\r\n\r\nexport interface TagPreviewPropsT {\r\n  tag: StatusT\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n}\r\nexport const TagPreview = (props: TagPreviewPropsT) => {\r\n  const { tag, direction } = props\r\n  return (\r\n    <Tooltip\r\n      direction={direction || 'bottom'}\r\n      content={\r\n        <BoxContainer style={{ maxWidth: 200 }}>\r\n          <FlexContainer $direction='column'>\r\n            <strong style={{ marginBottom: 8 }}>\r\n              {tag.type} {tag.duration > 0 ? `(${tag.duration})` : ''}\r\n            </strong>\r\n            {tag.description && <span>{tag.description}</span>}\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n      }\r\n    >\r\n      <Icon shadow src={STATUS_ICONS[tag.type] || ''} size={20} />\r\n    </Tooltip>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { CharacterT } from '../../types'\r\n\r\nexport interface CharacterImagePropsT {\r\n  character: CharacterT\r\n  size: number\r\n}\r\nexport const CharacterImage = (props: CharacterImagePropsT) => {\r\n  const { character, size } = props\r\n  return (\r\n    <img\r\n      alt='profile'\r\n      height={size}\r\n      width={size}\r\n      src={`https://picsum.photos/seed/${character.name}/94/94`}\r\n      style={{\r\n        height: size,\r\n        width: size,\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import {\r\n  ProcessedCharacterT,\r\n  SourceSkillResultT,\r\n  TargetSkillResultT,\r\n} from '../types'\r\nimport { ConsumableT } from '../types/Consumable'\r\nimport { resolveCheck, getPassedCount, didAllPass } from './Roll'\r\n\r\n/**\r\n * THESE AREE NOT BEING USED\r\n * @param source\r\n * @param consumable\r\n */\r\n\r\nexport const getSourceConsumableResult = (\r\n  source: ProcessedCharacterT,\r\n  consumable: ConsumableT,\r\n): SourceSkillResultT => {\r\n  const { skill } = consumable\r\n  const rollResults = skill.rolls.map((check) => resolveCheck(source, check))\r\n  const passedCount = getPassedCount(rollResults)\r\n  const perfect = didAllPass(rollResults)\r\n\r\n  return {\r\n    rollResults,\r\n    skill,\r\n    source,\r\n    accuracySuccess: true,\r\n    criticalSuccess: false,\r\n    passedCount,\r\n    perfect,\r\n    rawDamage: { damage: 0, type: 'magic' },\r\n    pierce: false,\r\n    splashDamage: { damage: 0, type: 'magic' },\r\n    addedStatus: perfect ? skill.perfectStatus : [],\r\n    healing:\r\n      perfect && skill.healing ? source.stats.consumableHealthGainOffset : 0,\r\n    consumableIndex: 0,\r\n  }\r\n}\r\n\r\nexport const getTargetConsumableResult = (\r\n  target: ProcessedCharacterT,\r\n  sourceResult: SourceSkillResultT,\r\n): TargetSkillResultT => {\r\n  return {\r\n    ...sourceResult,\r\n    target,\r\n    dodgeSuccess: false,\r\n    reflectedDamage: sourceResult.rawDamage,\r\n    blockedDamage: sourceResult.rawDamage,\r\n    totalDamage: sourceResult.rawDamage,\r\n    regeneratedHealth: 0,\r\n    willDie: false,\r\n  }\r\n}\r\n\r\nexport interface ConsumableStackT {\r\n  consumable: ConsumableT\r\n  count: number\r\n}\r\nexport const considateConsumableListToStack = (\r\n  consumables: ConsumableT[],\r\n): ConsumableStackT[] => {\r\n  let stack: ConsumableStackT[] = []\r\n  const updateStackItem = (id: string) =>\r\n    stack.map((s) =>\r\n      s.consumable.id === id ? { ...s, count: s.count + 1 } : s,\r\n    )\r\n  const containsId = (id: string) =>\r\n    stack.map((s) => s.consumable.id).includes(id)\r\n  consumables.forEach((c) => {\r\n    if (containsId(c.id)) {\r\n      stack = updateStackItem(c.id)\r\n    } else {\r\n      stack = [...stack, { consumable: c, count: 1 }]\r\n    }\r\n  })\r\n  return stack\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { ConsumableT } from '../../types/Consumable'\r\nimport { considateConsumableListToStack } from '../../functions/Consumable'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { CONSUMABLE_ITEM_ICONS, CONSUMABLE_ITEM_COLORS } from '../../icons/maps'\r\nimport { ProcessedCharacterT } from '../../types'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\n\r\nconst HEIGHT = 70\r\nexport interface PartyCharacterConsumablesPropsT {\r\n  character: ProcessedCharacterT\r\n  consumables: ConsumableT[]\r\n  onClick?: (consumable: ConsumableT, index: number) => void\r\n}\r\nexport const PartyCharacterConsumables = (\r\n  props: PartyCharacterConsumablesPropsT,\r\n) => {\r\n  const { character, consumables, onClick } = props\r\n  const stack = useMemo(() => considateConsumableListToStack(consumables), [\r\n    consumables,\r\n  ])\r\n  const onStackClick = (consumable: ConsumableT) => {\r\n    let index = undefined\r\n    consumables.forEach((c, i) => {\r\n      if (c.id === consumable.id) index = i\r\n    })\r\n    if (consumable.skill.healing && !(character.stats.healthOffset === 0))\r\n      return onClick && onClick(consumable, index || 0)\r\n  }\r\n  const filler = Array(10 - stack.length).fill(null)\r\n\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ flexWrap: 'wrap', height: HEIGHT }}\r\n    >\r\n      {stack.map((s) => (\r\n        <PartyCharacterConsumable\r\n          key={s.consumable.id}\r\n          character={character}\r\n          consumable={s.consumable}\r\n          count={s.count}\r\n          onClick={onStackClick}\r\n        />\r\n      ))}\r\n      {filler.map((f) => (\r\n        <ConsumableBox />\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\ninterface ConsumableBoxPropsT {\r\n  children?: JSX.Element\r\n  onClick?: () => void\r\n}\r\nconst ConsumableBox = (props: ConsumableBoxPropsT) => {\r\n  const { children, onClick } = props\r\n  return (\r\n    <FlexContainer\r\n      onClick={() => onClick && onClick()}\r\n      style={{\r\n        height: HEIGHT / 2,\r\n        width: HEIGHT / 2,\r\n        boxSizing: 'border-box',\r\n        border: '1px solid rgba(0,0,0,0.5)',\r\n        background: '#333',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        cursor: onClick ? 'pointer' : 'default',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      {children}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface PartyCharacterConsumablePropsT {\r\n  consumable: ConsumableT\r\n  character: ProcessedCharacterT\r\n  count: number\r\n  onClick?: (consumable: ConsumableT) => void\r\n}\r\nexport const PartyCharacterConsumable = (\r\n  props: PartyCharacterConsumablePropsT,\r\n) => {\r\n  const { character, consumable, count, onClick } = props\r\n  return (\r\n    <HoverToolTip\r\n      content={\r\n        <PartyCharacterConsumableTooltip\r\n          character={character}\r\n          consumable={consumable}\r\n        />\r\n      }\r\n    >\r\n      <ConsumableBox onClick={() => onClick && onClick(consumable)}>\r\n        <>\r\n          <Icon\r\n            src={CONSUMABLE_ITEM_ICONS[consumable.id]}\r\n            fill={CONSUMABLE_ITEM_COLORS[consumable.id]}\r\n            size={24}\r\n          />\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: -2,\r\n              right: 1,\r\n            }}\r\n          >\r\n            {count}\r\n          </div>\r\n        </>\r\n      </ConsumableBox>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface PartyCharacterConsumableTooltipProps {\r\n  character: ProcessedCharacterT\r\n  consumable: ConsumableT\r\n}\r\nexport const PartyCharacterConsumableTooltip = (\r\n  props: PartyCharacterConsumableTooltipProps,\r\n) => {\r\n  const { character, consumable } = props\r\n  return (\r\n    <BoxContainer>\r\n      <strong>{consumable.name}</strong>\r\n      {consumable.skill.healing && (\r\n        <div>Heal for {character.stats.consumableHealthGainOffset} HP</div>\r\n      )}\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import { useState, useEffect, useRef } from 'react'\r\n\r\nexport const usePrevious = <T = any>(value: T) => {\r\n  const ref = useRef<T>()\r\n\r\n  useEffect(() => {\r\n    ref.current = value\r\n  }, [value])\r\n\r\n  return ref.current\r\n}\r\n","import React from 'react'\r\nimport { ProcessedCharacterT, StatsT } from '../../types'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STAT_BONUS_KEYS } from '../../objects'\r\nimport { STATI_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\n\r\nconst getStatColor = (\r\n  character: ProcessedCharacterT,\r\n  key: keyof StatsT,\r\n): string => {\r\n  const a = character.stats[key]\r\n  const b = character.rawStats[key]\r\n  if (a > b) return 'lightgreen'\r\n  if (b > a) return 'lightcoral'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n\r\nexport interface StatBarPropsT {\r\n  character: ProcessedCharacterT\r\n}\r\nexport const StatBar = (props: StatBarPropsT) => {\r\n  const { character } = props\r\n\r\n  return (\r\n    <BoxContainer>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-between',\r\n          width: 360,\r\n          paddingTop: 10,\r\n          paddingBottom: 6,\r\n        }}\r\n      >\r\n        {STAT_BONUS_KEYS.map((key) => (\r\n          <FlexContainer\r\n            key={key}\r\n            style={{\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Icon\r\n              src={STATI_ICONS[key] || ''}\r\n              size={20}\r\n              fill={getStatColor(character, key)}\r\n              style={{ marginRight: 4 }}\r\n            />\r\n            <span style={{ color: getStatColor(character, key) }}>\r\n              {character.stats[key]}\r\n            </span>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ProcessedCharacterT, WeaponT, ArmorT } from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { CHARACTER_RESOURCES } from '../../objects/Item'\r\nimport { Icon } from '../Icon'\r\nimport { RESOURCE_ICONS } from '../../icons/maps'\r\nimport { styled } from 'styletron-react'\r\n\r\nconst ItemRow = styled(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    marginBottom: '4px',\r\n    textShadow: '1px 1px 1px black',\r\n    background:\r\n      'linear-gradient(90deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 100%)',\r\n    paddingLeft: '8px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n  }\r\n})\r\n\r\nexport interface ItemPropsT {\r\n  character: ProcessedCharacterT\r\n  setActiveItem: (item: WeaponT | ArmorT | undefined) => void\r\n}\r\nexport const Items = (props: ItemPropsT) => {\r\n  const { character, setActiveItem } = props\r\n  return (\r\n    <FlexContainer $full $direction='column'>\r\n      <ItemRow onMouseEnter={() => setActiveItem(character.weapon)}>\r\n        <Icon\r\n          src={RESOURCE_ICONS.weapon || ''}\r\n          size={16}\r\n          style={{ marginRight: 6 }}\r\n        />\r\n        {character.weapon.name}\r\n      </ItemRow>\r\n      {CHARACTER_RESOURCES.map((res) => (\r\n        <ItemRow\r\n          onMouseEnter={() =>\r\n            setActiveItem(character.armor.find((a) => a.resource === res))\r\n          }\r\n        >\r\n          <Icon\r\n            src={RESOURCE_ICONS[res] || ''}\r\n            size={16}\r\n            style={{ marginRight: 6 }}\r\n          />\r\n          {character.armor.find((a) => a.resource === res)?.name}\r\n        </ItemRow>\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\n\r\nexport interface NamePropsT {\r\n  name: string\r\n}\r\n\r\nexport const Name = (props: NamePropsT) => {\r\n  const { name } = props\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        width: '100%',\r\n        height: 40,\r\n        marginBottom: -20,\r\n        marginTop: -20,\r\n      }}\r\n    >\r\n      <FullContainer />\r\n      <BoxContainer style={{ zIndex: 2 }} substyle={{ background: '#444' }}>\r\n        {name}\r\n      </BoxContainer>\r\n      <FullContainer />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ProcessedCharacterT } from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { CharacterImage } from '../CharacterImage'\r\n\r\nconst SIZE = 100\r\nexport interface ImagePropsT {\r\n  character: ProcessedCharacterT\r\n}\r\n\r\nexport const Image = (props: ImagePropsT) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n      <div>\r\n        <BoxContainer\r\n          style={{ marginRight: 20, marginBottom: 10 }}\r\n          substyle={{ padding: 0, height: SIZE, width: SIZE }}\r\n        >\r\n          <CharacterImage character={character} size={100} />\r\n        </BoxContainer>\r\n      </div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport {\r\n  ProcessedPartyT,\r\n  ArmorT,\r\n  WeaponT,\r\n  ProcessedCharacterT,\r\n} from '../../types'\r\nimport { withStyle } from 'styletron-react'\r\nimport { Icon } from '../Icon'\r\nimport { ARMOR_TYPE_ICONS } from '../../icons/maps'\r\nimport { ITEM_RARITY_COLORS } from '../../objects/Item'\r\nimport { ClickToolTip } from '../Tooltip'\r\nimport { Button } from '../../elements/button'\r\n\r\nexport interface ArmorListPropsT {\r\n  party: ProcessedPartyT\r\n  character: ProcessedCharacterT\r\n  canEquip: boolean\r\n  equipItem: (characterId: string, item: WeaponT | ArmorT) => void\r\n  setActiveItem: (item: WeaponT | ArmorT) => void\r\n}\r\n\r\nconst ArmorItem = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    marginBottom: '4px',\r\n    textShadow: '1px 1px 1px black',\r\n    background: props.$active ? 'rgba(255,255,255,0.2)' : undefined,\r\n    paddingLeft: '8px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    cursor: 'pointer',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n  }\r\n})\r\n\r\nexport const ArmorList = (props: ArmorListPropsT) => {\r\n  const { party, character, canEquip, equipItem, setActiveItem } = props\r\n  const [activeItemId, setActiveItemId] = useState<string | undefined>()\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {party.items\r\n        .filter((i) => i.itemType === 'armor')\r\n        .map((i) => i as ArmorT)\r\n        .sort((a, b) => a.name.localeCompare(b.name))\r\n        .map((armor) => (\r\n          <ClickToolTip\r\n            direction='down'\r\n            distance={-2}\r\n            content={() => (\r\n              <>\r\n                {canEquip && (\r\n                  <BoxContainer\r\n                    substyle={{\r\n                      padding: 4,\r\n                      width: 346,\r\n                      display: 'flex',\r\n                      justifyContent: 'center',\r\n                      background: '#333',\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      style={{ padding: '4px 8px' }}\r\n                      onClick={() => {\r\n                        equipItem(character.id, armor)\r\n                        setActiveItemId(undefined)\r\n                      }}\r\n                    >\r\n                      Equip\r\n                    </Button>\r\n                  </BoxContainer>\r\n                )}\r\n              </>\r\n            )}\r\n          >\r\n            {({ onClick, ref }) => (\r\n              <ArmorItem\r\n                $active={armor.id === activeItemId}\r\n                onMouseEnter={() => setActiveItem(armor)}\r\n                ref={ref}\r\n                onClick={(e: MouseEvent) => {\r\n                  e.stopPropagation()\r\n                  e.preventDefault()\r\n                  setActiveItemId(armor.id)\r\n                  onClick()\r\n                }}\r\n              >\r\n                <Icon\r\n                  src={ARMOR_TYPE_ICONS[armor.type]}\r\n                  size={14}\r\n                  style={{ marginRight: 10 }}\r\n                  fill={ITEM_RARITY_COLORS[armor.rarity]}\r\n                  shadow\r\n                />\r\n                <span style={{ color: ITEM_RARITY_COLORS[armor.rarity] }}>\r\n                  {armor.name}\r\n                </span>\r\n              </ArmorItem>\r\n            )}\r\n          </ClickToolTip>\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport {\r\n  ProcessedPartyT,\r\n  ArmorT,\r\n  WeaponT,\r\n  ProcessedCharacterT,\r\n} from '../../types'\r\nimport { withStyle } from 'styletron-react'\r\nimport { ITEM_RARITY_COLORS } from '../../objects/Item'\r\nimport { ClickToolTip } from '../Tooltip'\r\nimport { Button } from '../../elements/button'\r\n\r\nexport interface WeaponListPropsT {\r\n  party: ProcessedPartyT\r\n  character: ProcessedCharacterT\r\n  canEquip: boolean\r\n  equipItem: (characterId: string, item: WeaponT | ArmorT) => void\r\n  setActiveItem: (item: WeaponT | ArmorT) => void\r\n}\r\n\r\nconst WeaponItem = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    marginBottom: '4px',\r\n    textShadow: '1px 1px 1px black',\r\n    background: props.$active ? 'rgba(255,255,255,0.2)' : undefined,\r\n    paddingLeft: '8px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    cursor: 'pointer',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n  }\r\n})\r\n\r\nexport const WeaponList = (props: WeaponListPropsT) => {\r\n  const { party, character, canEquip, equipItem, setActiveItem } = props\r\n  const [activeItemId, setActiveItemId] = useState<string | undefined>()\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {party.items\r\n        .filter((i) => i.itemType === 'weapon')\r\n        .map((i) => i as ArmorT)\r\n        .sort((a, b) => a.name.localeCompare(b.name))\r\n        .map((weapon) => (\r\n          <ClickToolTip\r\n            direction='down'\r\n            distance={-2}\r\n            content={() => (\r\n              <>\r\n                {canEquip && (\r\n                  <BoxContainer\r\n                    substyle={{\r\n                      padding: 4,\r\n                      width: 346,\r\n                      display: 'flex',\r\n                      justifyContent: 'center',\r\n                      background: '#333',\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      style={{ padding: '4px 8px' }}\r\n                      onClick={() => {\r\n                        equipItem(character.id, weapon)\r\n                        setActiveItemId(undefined)\r\n                      }}\r\n                    >\r\n                      Equip\r\n                    </Button>\r\n                  </BoxContainer>\r\n                )}\r\n              </>\r\n            )}\r\n          >\r\n            {({ onClick, ref }) => (\r\n              <WeaponItem\r\n                $active={weapon.id === activeItemId}\r\n                onMouseEnter={() => setActiveItem(weapon)}\r\n                ref={ref}\r\n                onClick={(e: MouseEvent) => {\r\n                  e.stopPropagation()\r\n                  e.preventDefault()\r\n                  setActiveItemId(weapon.id)\r\n                  onClick()\r\n                }}\r\n              >\r\n                <span style={{ color: ITEM_RARITY_COLORS[weapon.rarity] }}>\r\n                  {weapon.name}\r\n                </span>\r\n              </WeaponItem>\r\n            )}\r\n          </ClickToolTip>\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport {\r\n  ProcessedCharacterT,\r\n  ProcessedPartyT,\r\n  WeaponT,\r\n  ArmorT,\r\n} from '../../types'\r\n\r\nimport Items from '../../icons/svg/delapouite/light-backpack.svg'\r\nimport Weapons from '../../icons/svg/lorc/broadsword.svg'\r\nimport Armor from '../../icons/svg/delapouite/leather-armor.svg'\r\nimport { Icon } from '../Icon'\r\nimport { ArmorList } from './ArmorList'\r\nimport { WeaponList } from './WeaponList'\r\n\r\nexport interface MenuOptionT {\r\n  key: string\r\n  icon: string\r\n  count: (character: ProcessedCharacterT, party: ProcessedPartyT) => number\r\n  render: (\r\n    character: ProcessedCharacterT,\r\n    party: ProcessedPartyT,\r\n    canEquip: boolean,\r\n    equipItem: (characterId: string, item: WeaponT | ArmorT) => void,\r\n    setActiveItem: (item: WeaponT | ArmorT) => void,\r\n  ) => JSX.Element\r\n}\r\nexport const ACTIVE_CHARACTER_MENU_KEYS: MenuOptionT[] = [\r\n  {\r\n    key: 'items',\r\n    icon: Items,\r\n    count: (c) => c.consumables.length,\r\n    render: (character) => <div>items</div>,\r\n  },\r\n  {\r\n    key: 'weapons',\r\n    icon: Weapons,\r\n    count: (c, p) => p.items.filter((i) => i.itemType === 'weapon').length,\r\n    render: (character, party, canEquip, equipItem, setActiveItem) => (\r\n      <WeaponList\r\n        character={character}\r\n        party={party}\r\n        canEquip={canEquip}\r\n        equipItem={equipItem}\r\n        setActiveItem={setActiveItem}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    key: 'armor',\r\n    icon: Armor,\r\n    count: (c, p) => p.items.filter((i) => i.itemType === 'armor').length,\r\n    render: (character, party, canEquip, equipItem, setActiveItem) => (\r\n      <ArmorList\r\n        character={character}\r\n        party={party}\r\n        canEquip={canEquip}\r\n        equipItem={equipItem}\r\n        setActiveItem={setActiveItem}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    key: 'ot1',\r\n    icon: '',\r\n    count: (c) => 0,\r\n    render: (character) => <div>ot1</div>,\r\n  },\r\n  {\r\n    key: 'ot2',\r\n    icon: '',\r\n    count: (c) => 0,\r\n    render: (character) => <div>ot2</div>,\r\n  },\r\n  {\r\n    key: 'ot3',\r\n    icon: '',\r\n    count: (c) => 0,\r\n    render: (character) => <div>ot3</div>,\r\n  },\r\n]\r\n\r\nexport interface MenuSelectPropsT {\r\n  character: ProcessedCharacterT\r\n  party: ProcessedPartyT\r\n  activeKey: string\r\n  onActiveKeyChange: (key: string) => void\r\n}\r\n\r\nexport const MenuSelect = (props: MenuSelectPropsT) => {\r\n  const { character, party, activeKey, onActiveKeyChange } = props\r\n\r\n  return (\r\n    <FlexContainer style={{ justifyContent: 'center', marginTop: 8 }}>\r\n      {ACTIVE_CHARACTER_MENU_KEYS.map((option) => (\r\n        <Button\r\n          style={{\r\n            padding: '4px 0',\r\n            width: 56,\r\n            fontSize: 12,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            background: option.key === activeKey ? '#444' : undefined,\r\n          }}\r\n          onClick={() => {\r\n            onActiveKeyChange(option.key)\r\n          }}\r\n        >\r\n          <FullContainer />\r\n          <FullContainer>\r\n            <Icon src={option.icon} size={14} />\r\n          </FullContainer>\r\n          <FullContainer style={{ paddingRight: 2 }}>\r\n            {option.count(character, party)}\r\n          </FullContainer>\r\n        </Button>\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StatsT } from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport {\r\n  DEFENSE_BONUS_KEYS,\r\n  DAMAGE_BONUS_KEYS,\r\n  STAT_KEY_LABELS,\r\n  STAT_BONUS_KEYS,\r\n} from '../../objects'\r\n\r\nexport interface StatsPreviewPropsT {\r\n  stats: StatsT\r\n}\r\n\r\nconst defense_key_colors: any = {\r\n  armor: 'lightblue',\r\n  resistance: 'plum',\r\n}\r\n\r\nexport const StatsPreview = (props: StatsPreviewPropsT) => {\r\n  const { stats } = props\r\n  return (\r\n    <FlexContainer $direction='column' style={{ fontSize: 14 }}>\r\n      {DEFENSE_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] > 0 && (\r\n            <span\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: defense_key_colors[key],\r\n              }}\r\n            >\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {DAMAGE_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] > 0 && (\r\n            <span style={{ textTransform: 'capitalize' }}>\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {STAT_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] > 0 && (\r\n            <span\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: 'lightgreen',\r\n              }}\r\n            >\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {STAT_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] < 0 && (\r\n            <span\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: 'lightcoral',\r\n              }}\r\n            >\r\n              {stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Color from 'color'\r\nimport { ArmorT } from '../../types'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { combineTraits } from '../../functions'\r\nimport { StatsPreview } from '../StatsPreview'\r\nimport { Icon } from '../Icon'\r\nimport { ARMOR_TYPE_ICONS } from '../../icons/maps'\r\nimport { ITEM_RARITY_COLORS } from '../../objects/Item'\r\nimport { Button } from '../../elements/button'\r\n\r\nexport interface ArmorPreviewPropsT {\r\n  armor: ArmorT\r\n  showEquipButton?: boolean\r\n  onEquipClick?: () => void\r\n}\r\nexport const ArmorPreview = (props: ArmorPreviewPropsT) => {\r\n  const { armor, showEquipButton, onEquipClick } = props\r\n  const combinedTrait = combineTraits(...armor.traits)\r\n  const rarityColor = ITEM_RARITY_COLORS[armor.rarity]\r\n  const from = Color(rarityColor).darken(0.5).rgb().toString()\r\n  const to = Color(rarityColor).darken(0.7).rgb().toString()\r\n  const gradient = `linear-gradient(180deg, ${from} 0%, ${to} 100%)`\r\n  return (\r\n    <BoxContainer style={{ minWidth: 200 }} substyle={{ background: gradient }}>\r\n      <FlexContainer $direction='column'>\r\n        <FlexContainer style={{ marginBottom: 8 }}>\r\n          <Icon\r\n            src={ARMOR_TYPE_ICONS[armor.type]}\r\n            size={32}\r\n            style={{ marginRight: 10 }}\r\n            shadow\r\n          />\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              textShadow: '1px 1px 2px rgba(0,0,0,0.8)',\r\n            }}\r\n          >\r\n            <span style={{ fontWeight: 600 }}>{armor.name}</span>\r\n            <span style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n              {armor.rarity}\r\n            </span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n          {showEquipButton && (\r\n            <div style={{ marginLeft: 10 }}>\r\n              <Button onClick={onEquipClick} style={{ padding: 4 }}>\r\n                Equip\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </FlexContainer>\r\n        <BoxContainer\r\n          substyle={{ background: 'rgba(0,0,0,0.7)', minHeight: 120 }}\r\n        >\r\n          <FlexContainer $direction='column'>\r\n            {armor.skills.length > 0 && (\r\n              <span style={{ color: 'plum', marginBottom: 8 }}>\r\n                {armor.skills.map(\r\n                  (skill, i) => `${i > 0 ? ', ' : ''}${skill.name}`,\r\n                )}\r\n              </span>\r\n            )}\r\n            <StatsPreview stats={combinedTrait.stats} />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { SkillT, StatsT } from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STATI_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Badge } from '../../elements/badge'\r\nimport { CheckKVT } from '../RoundResultRenderer'\r\nimport X from '../../icons/svg/lorc/split-cross.svg'\r\n\r\nexport interface SkillChecksPropsT {\r\n  skill: SkillT\r\n}\r\nexport const SkillChecks = (props: SkillChecksPropsT) => {\r\n  const { skill } = props\r\n  return (\r\n    <FlexContainer\r\n      style={{ justifyContent: 'center', padding: '0px 0 24px 0' }}\r\n    >\r\n      {skill.rolls.map((roll, i) => (\r\n        <SkillCheck\r\n          key={i}\r\n          check={{ label: roll.key || 'strength', result: undefined }}\r\n        />\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface SkillCheckT {\r\n  check: CheckKVT\r\n  size?: number\r\n  padding?: number\r\n}\r\nexport const SkillCheck = (props: SkillCheckT) => {\r\n  const { check, size = 36, padding = 12 } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: `0px ${padding}px`,\r\n        opacity: check.result === undefined ? 0.5 : 1,\r\n      }}\r\n    >\r\n      <Badge $absolute={false} $size={size}>\r\n        <Icon\r\n          src={STATI_ICONS[(check.label as keyof StatsT) || 'strength'] || ''}\r\n          fill={getColor(check.result)}\r\n          size={size - 4}\r\n        />\r\n        {check.result === false && (\r\n          <Icon\r\n            src={X}\r\n            fill={'lightcoral'}\r\n            size={size - 4}\r\n            style={{ position: 'absolute', top: 0 }}\r\n          />\r\n        )}\r\n      </Badge>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst getColor = (result: boolean | undefined) => {\r\n  if (result === true) return 'white'\r\n  if (result === false) return 'rgba(255,255,255,0.6)'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n","import React from 'react'\r\nimport Color from 'color'\r\nimport { ProcessedWeaponT } from '../../types'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { combineTraits } from '../../functions'\r\nimport { StatsPreview } from '../StatsPreview'\r\nimport { ITEM_RARITY_COLORS } from '../../objects/Item'\r\nimport { Button } from '../../elements/button'\r\n\r\nexport const getDamageColor = (weapon: ProcessedWeaponT) => {\r\n  if (weapon.damage.type === 'physical') return 'lightblue'\r\n  if (weapon.damage.type === 'magic') return 'plum'\r\n  return 'white'\r\n}\r\n\r\nexport interface WeaponPreviewPropsT {\r\n  weapon: ProcessedWeaponT\r\n  showEquipButton?: boolean\r\n  onEquipClick?: () => void\r\n}\r\nexport const WeaponPreview = (props: WeaponPreviewPropsT) => {\r\n  const { weapon, showEquipButton, onEquipClick } = props\r\n  const basicAttack = weapon.skills.find((s) => s.isBasicAttack)\r\n  const combinedTrait = combineTraits(...weapon.traits)\r\n  const rarityColor = ITEM_RARITY_COLORS[weapon.rarity]\r\n  const from = Color(rarityColor).darken(0.5).rgb().toString()\r\n  const to = Color(rarityColor).darken(0.7).rgb().toString()\r\n  const gradient = `linear-gradient(180deg, ${from} 0%, ${to} 100%)`\r\n  return (\r\n    <BoxContainer style={{ width: 240 }} substyle={{ background: gradient }}>\r\n      <FlexContainer $direction='column'>\r\n        {basicAttack && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginBottom: 10 }}>\r\n            {basicAttack.rolls.map((roll) => (\r\n              <SkillCheck\r\n                check={{ label: roll.key || 'strength', result: true }}\r\n                size={18}\r\n                padding={4}\r\n              />\r\n            ))}\r\n          </FlexContainer>\r\n        )}\r\n        <FlexContainer>\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              margin: '8px 0',\r\n              textShadow: '1px 1px 2px rgba(0,0,0,0.8)',\r\n            }}\r\n          >\r\n            <span style={{ fontWeight: 600 }}>{weapon.name}</span>\r\n            <span style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n              {weapon.rarity} {weapon.type}\r\n            </span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n          {showEquipButton && (\r\n            <div style={{ marginLeft: 10 }}>\r\n              <Button onClick={onEquipClick} style={{ padding: 4 }}>\r\n                Equip\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </FlexContainer>\r\n        <BoxContainer\r\n          substyle={{ background: 'rgba(0,0,0,0.7)', minHeight: 120 }}\r\n        >\r\n          <FlexContainer $direction='column'>\r\n            <FlexContainer style={{ lineHeight: '24px', marginBottom: 4 }}>\r\n              <span\r\n                style={{\r\n                  color: getDamageColor(weapon),\r\n                  fontWeight: 'bolder',\r\n                  marginRight: 8,\r\n                  fontSize: 24,\r\n                }}\r\n              >\r\n                {weapon.damage.damage}\r\n              </span>\r\n              <span style={{ textTransform: 'capitalize' }}>\r\n                {weapon.damage.type} Damage\r\n              </span>\r\n            </FlexContainer>\r\n            <span style={{ color: 'plum', marginBottom: 8 }}>\r\n              {weapon.skills.map(\r\n                (skill, i) => `${i > 0 ? ', ' : ''}${skill.name}`,\r\n              )}\r\n            </span>\r\n            <StatsPreview stats={combinedTrait.stats} />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  ProcessedCharacterT,\r\n  WeaponT,\r\n  ArmorT,\r\n  ProcessedWeaponT,\r\n} from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { ArmorPreview } from '../ArmorPreview'\r\nimport { WeaponPreview } from '../WeaponPreview'\r\n\r\nexport interface HoverAreaPropsT {\r\n  character: ProcessedCharacterT\r\n  activeItem: WeaponT | ArmorT\r\n}\r\n\r\nexport const HoverArea = (props: HoverAreaPropsT) => {\r\n  const { character, activeItem } = props\r\n  const foundArmor = character.armor.find(\r\n    (a) => a.resource === (activeItem as ArmorT).resource,\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {activeItem.itemType === 'armor' && (\r\n        <FlexContainer>\r\n          {foundArmor && (\r\n            <ArmorPreview armor={foundArmor} showEquipButton={false} />\r\n          )}\r\n          {foundArmor?.id !== activeItem.id && (\r\n            <ArmorPreview\r\n              armor={activeItem as ArmorT}\r\n              showEquipButton={false}\r\n            />\r\n          )}\r\n        </FlexContainer>\r\n      )}\r\n      {activeItem.itemType === 'weapon' && (\r\n        <FlexContainer>\r\n          <WeaponPreview weapon={character.weapon} showEquipButton={false} />\r\n          {character.weapon.id !== activeItem.id && (\r\n            <WeaponPreview\r\n              weapon={activeItem as ProcessedWeaponT}\r\n              showEquipButton={false}\r\n            />\r\n          )}\r\n        </FlexContainer>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport {\r\n  ProcessedCharacterT,\r\n  ProcessedPartyT,\r\n  WeaponT,\r\n  ArmorT,\r\n} from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { StatBar } from './StatBar'\r\nimport { Items } from './Items'\r\nimport { Name } from './Name'\r\nimport { Image } from './Image'\r\nimport { MenuSelect, ACTIVE_CHARACTER_MENU_KEYS } from './MenuSelect'\r\nimport { HoverArea } from './HoverArea'\r\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\r\nimport { Badge } from '../../elements/badge'\r\n\r\nexport interface PartyActiveCharacterPropsT {\r\n  character: ProcessedCharacterT\r\n  party: ProcessedPartyT\r\n  equipItem: (characterId: string, item: WeaponT | ArmorT) => void\r\n  canEquip: boolean\r\n  onRequestClose: () => void\r\n}\r\n\r\nexport const PartyActiveCharacter = (props: PartyActiveCharacterPropsT) => {\r\n  const { character, party, canEquip, equipItem, onRequestClose } = props\r\n  const [activeMenuKey, setActiveMenuKey] = useState('armor')\r\n  const [activeItem, setActiveItem] = useState<ArmorT | WeaponT | undefined>()\r\n  const activeOption = ACTIVE_CHARACTER_MENU_KEYS.find(\r\n    (o) => o.key === activeMenuKey,\r\n  )\r\n\r\n  return (\r\n    <FlexContainer style={{ width: 880, justifyContent: 'flex-end' }}>\r\n      <Badge\r\n        onClick={onRequestClose}\r\n        $top={-10}\r\n        $right={-2}\r\n        style={{ cursor: 'pointer', userSelect: 'none' }}\r\n      >\r\n        X\r\n      </Badge>\r\n      <FlexContainer\r\n        style={{\r\n          maxHeight: 440,\r\n          padding: 10,\r\n          position: 'absolute',\r\n          left: '-10px',\r\n          width: 486,\r\n          justifyContent: 'flex-end',\r\n          zIndex: -1,\r\n        }}\r\n      >\r\n        {activeItem && (\r\n          <HoverArea character={character} activeItem={activeItem} />\r\n        )}\r\n      </FlexContainer>\r\n      <BoxContainer substyle={{ background: '#111', padding: 0 }}>\r\n        <FlexContainer $direction='column'>\r\n          <Name name={character.name} />\r\n          <StatBar character={character} />\r\n          <BoxContainer\r\n            substyle={{ background: '#111', padding: '16px 0 2px 0' }}\r\n          >\r\n            <FlexContainer>\r\n              <Items character={character} setActiveItem={setActiveItem} />\r\n              <Image character={character} />\r\n            </FlexContainer>\r\n            <MenuSelect\r\n              character={character}\r\n              party={party}\r\n              activeKey={activeMenuKey}\r\n              onActiveKeyChange={setActiveMenuKey}\r\n            />\r\n          </BoxContainer>\r\n          <BoxContainer\r\n            substyle={{\r\n              background: '#111',\r\n              padding: '4px 0',\r\n              height: 200,\r\n              overflow: 'auto',\r\n            }}\r\n          >\r\n            {activeOption &&\r\n              activeOption.render(\r\n                character,\r\n                party,\r\n                canEquip,\r\n                equipItem,\r\n                setActiveItem,\r\n              )}\r\n          </BoxContainer>\r\n        </FlexContainer>\r\n      </BoxContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ProcessedCharacterT, StatsT } from '../../types'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { XPGauge, HealthGauge } from '../Gauge'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Monodiv } from '../../elements/monospace'\r\nimport { styled, withStyle } from 'styletron-react'\r\nimport { HoverBadge } from '../../elements/badge'\r\nimport { Icon } from '../Icon'\r\nimport { STATI_ICONS } from '../../icons/maps'\r\nimport Details from '../../icons/svg/delapouite/skills.svg'\r\nimport Inventory from '../../icons/svg/lorc/knapsack.svg'\r\nimport { TagPreview } from '../TagPreview'\r\nimport { CharacterImage } from '../CharacterImage'\r\nimport { ConsumableT } from '../../types/Consumable'\r\nimport { PartyCharacterConsumables } from '../PartyCharacterConsumables'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { noneg } from '../../util'\r\nimport { usePrevious } from '../../hooks/usePrevious'\r\nimport { HoverToolTip, ClickToolTip } from '../Tooltip'\r\nimport { PartyActiveCharacter } from '../PartyActiveCharacter'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { Hover } from '../Hover'\r\n\r\nconst ResourceE = withStyle(Monodiv, (props: any) => ({\r\n  height: 15,\r\n  color: props.$color,\r\n  fontSize: '12px',\r\n  fontWeight: 'bolder',\r\n  padding: '0px 4px',\r\n  lineHeight: '15px',\r\n  flex: 1,\r\n  textAlign: 'center',\r\n  background: '#111',\r\n  display: 'flex',\r\n}))\r\n\r\nexport interface PartyCharacterProps {\r\n  character: ProcessedCharacterT\r\n  activeCharacter: ProcessedCharacterT\r\n  hoverable?: boolean\r\n  selected?: boolean\r\n  isHovering?: boolean\r\n  canEquip?: boolean\r\n  onClick?: () => void\r\n  onConsumableClick?: (consumable: ConsumableT, index: number) => void\r\n}\r\nconst Wrapper = styled('div', (props: any) => {\r\n  const { $selected, $active, $hoverable, $isHovering } = props\r\n  const hoverable = $hoverable && !$selected\r\n  return {\r\n    margin: 10,\r\n    position: 'relative',\r\n    boxShadow: $active ? '0px 0px 20px white' : 'none',\r\n    transition: 'all 0.4s',\r\n    userSelect: 'none',\r\n  }\r\n})\r\n\r\ninterface CharacterStatPropsT {\r\n  statKey: keyof StatsT\r\n  character: ProcessedCharacterT\r\n}\r\nconst CharacterStat = (props: CharacterStatPropsT) => {\r\n  const { statKey, character } = props\r\n  return (\r\n    <ResourceE $color={getStatColor(character, statKey)}>\r\n      <Icon\r\n        src={STATI_ICONS[statKey] || ''}\r\n        fill={getStatColor(character, statKey)}\r\n        size={14}\r\n        style={{ marginRight: 4 }}\r\n      />\r\n      {character.stats[statKey]}\r\n    </ResourceE>\r\n  )\r\n}\r\n\r\nconst getStatColor = (\r\n  character: ProcessedCharacterT,\r\n  key: keyof StatsT,\r\n): string => {\r\n  const a = character.stats[key]\r\n  const b = character.rawStats[key]\r\n  if (a > b) return 'lightgreen'\r\n  if (b > a) return 'lightcoral'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n\r\nexport const PartyCharacter = (props: PartyCharacterProps) => {\r\n  const {\r\n    character,\r\n    activeCharacter,\r\n    hoverable,\r\n    selected,\r\n    isHovering,\r\n    canEquip = false,\r\n    onClick,\r\n    onConsumableClick,\r\n  } = props\r\n  const { party, equipItem } = usePartyContext()\r\n  const health = noneg(character.health - character.stats.healthOffset)\r\n  const previousHealth = usePrevious<number>(health)\r\n  return (\r\n    <Wrapper\r\n      $hoverable={hoverable && !character.dead}\r\n      $active={character.id === activeCharacter.id}\r\n      $selected={selected}\r\n      $isHovering={isHovering}\r\n      style={{\r\n        opacity: character.dead ? 0.5 : 1,\r\n      }}\r\n    >\r\n      <BoxContainer\r\n        onClick={() => (onClick && !character.dead ? onClick() : null)}\r\n        style={{\r\n          borderWidth: 2,\r\n          cursor: onClick ? 'pointer' : 'default',\r\n        }}\r\n        substyle={{ padding: 0, minWidth: 420 }}\r\n      >\r\n        <FlexContainer style={{ border: '2px solid black' }}>\r\n          <FlexContainer style={{ borderRight: '2px solid black' }}>\r\n            <CharacterImage character={character} size={115} />\r\n          </FlexContainer>\r\n          <FlexContainer $full $direction='column'>\r\n            <FlexContainer\r\n              style={{\r\n                marginTop: -3,\r\n                marginRight: -3,\r\n                padding: '0 4px',\r\n                paddingLeft: 8,\r\n                background: '#555',\r\n                height: 20,\r\n                lineHeight: '24px',\r\n                borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n                boxShadow: '0px 4px 5px black',\r\n                zIndex: 2,\r\n              }}\r\n            >\r\n              <span\r\n                style={{\r\n                  fontWeight: 'bolder',\r\n                  textShadow: '0px 0px 2px black',\r\n                }}\r\n              >\r\n                {character.name}\r\n              </span>\r\n            </FlexContainer>\r\n            <FlexContainer>\r\n              <span\r\n                style={{\r\n                  fontWeight: 'bolder',\r\n                  padding: 4,\r\n                  fontSize: 42,\r\n                  height: 62,\r\n                  lineHeight: '70px',\r\n                  color: '#b55553',\r\n                }}\r\n              >\r\n                <Spring\r\n                  from={{ hp: previousHealth || health }}\r\n                  to={{ hp: health }}\r\n                >\r\n                  {(hpp) => <span>{Math.floor(hpp.hp)}</span>}\r\n                </Spring>\r\n              </span>\r\n              <FlexContainer $full style={{ maxWidth: 175, minWidth: 175 }}>\r\n                <PartyCharacterConsumables\r\n                  character={character}\r\n                  consumables={character.consumables}\r\n                  onClick={onConsumableClick}\r\n                />\r\n              </FlexContainer>\r\n              <FlexContainer $full $direction='column'>\r\n                <FullContainer />\r\n                <FlexContainer>\r\n                  <FlexContainer\r\n                    $full\r\n                    style={{ alignItems: 'center', justifyContent: 'center' }}\r\n                  >\r\n                    <ClickToolTip\r\n                      distance={80}\r\n                      content={({ onClick }) => (\r\n                        <PartyActiveCharacter\r\n                          character={character}\r\n                          party={party}\r\n                          equipItem={equipItem}\r\n                          canEquip={canEquip}\r\n                          onRequestClose={onClick}\r\n                        />\r\n                      )}\r\n                    >\r\n                      {({ onClick, ref }) => (\r\n                        <div onClick={onClick}>\r\n                          <Hover delay={0}>\r\n                            {({ isHovering }) => (\r\n                              <Icon\r\n                                src={Inventory}\r\n                                fill={\r\n                                  isHovering\r\n                                    ? 'rgba(255,255,255,1)'\r\n                                    : 'rgba(255,255,255,0.7)'\r\n                                }\r\n                                size={18}\r\n                                shadow\r\n                                style={{ padding: 6, cursor: 'pointer' }}\r\n                              />\r\n                            )}\r\n                          </Hover>\r\n                        </div>\r\n                      )}\r\n                    </ClickToolTip>\r\n                  </FlexContainer>\r\n                  <FlexContainer\r\n                    $full\r\n                    style={{ alignItems: 'center', justifyContent: 'center' }}\r\n                  >\r\n                    <Icon\r\n                      src={Details}\r\n                      fill={'rgba(255,255,255,0.7)'}\r\n                      size={18}\r\n                      shadow\r\n                      style={{ padding: 6, cursor: 'pointer' }}\r\n                    />\r\n                  </FlexContainer>\r\n                </FlexContainer>\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n            <FullContainer />\r\n            <HealthGauge character={character} />\r\n            <XPGauge character={character} />\r\n            <HoverBadge\r\n              badgeProps={{ $bottom: '18px', $left: '105px' }}\r\n              content={<BoxContainer>Character Level</BoxContainer>}\r\n            >\r\n              <span>{character.level}</span>\r\n            </HoverBadge>\r\n            <FlexContainer>\r\n              <CharacterStat statKey='strength' character={character} />\r\n              <CharacterStat statKey='vigor' character={character} />\r\n              <CharacterStat statKey='intelligence' character={character} />\r\n              <CharacterStat statKey='perception' character={character} />\r\n              <CharacterStat statKey='talent' character={character} />\r\n              <CharacterStat statKey='agility' character={character} />\r\n              <CharacterStat statKey='luck' character={character} />\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </BoxContainer>\r\n      <FlexContainer\r\n        style={{\r\n          position: 'absolute',\r\n          top: '-24px',\r\n          right: '4px',\r\n        }}\r\n      >\r\n        {character.statusEffects.map((tag) => (\r\n          <TagPreview direction='up' tag={tag} />\r\n        ))}\r\n      </FlexContainer>\r\n      <HoverBadge\r\n        badgeProps={{ $bottom: '64px', $left: '-12px', $color: 'lightblue' }}\r\n        content={<BoxContainer>Armor</BoxContainer>}\r\n      >\r\n        <span>{character.stats.armor}</span>\r\n      </HoverBadge>\r\n      <HoverBadge\r\n        badgeProps={{ $bottom: '26px', $left: '-12px', $color: 'plum' }}\r\n        content={<BoxContainer>Magic Resistance</BoxContainer>}\r\n      >\r\n        <span>{character.stats.resistance}</span>\r\n      </HoverBadge>\r\n      <HoverBadge\r\n        badgeProps={{ $bottom: '-10px', $left: '-12px', $color: 'lightgreen' }}\r\n        content={<BoxContainer>Evasion</BoxContainer>}\r\n      >\r\n        <span>{character.stats.evasion}</span>\r\n      </HoverBadge>\r\n      <HoverBadge\r\n        direction='up'\r\n        content={<BoxContainer>Weapon Damage</BoxContainer>}\r\n        badgeProps={{\r\n          $bottom: '-12px',\r\n          $left: '40px',\r\n          $size: '35px',\r\n          $color:\r\n            character.weapon.damage.type === 'physical'\r\n              ? 'rgba(255,255,255,0.8)'\r\n              : 'plum',\r\n          style: { fontSize: 24 },\r\n        }}\r\n      >\r\n        <span>\r\n          {character.weapon.damage.damage + character.stats.damageModifier}\r\n        </span>\r\n      </HoverBadge>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { ProcessedPartyT } from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { PartyCharacter } from '../PartyCharacter'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { ConfirmButton } from '../../elements/button'\r\n\r\nexport interface CombatPartyPlayerPropsT {\r\n  party: ProcessedPartyT\r\n}\r\nexport const CombatPlayerParty = (props: CombatPartyPlayerPropsT) => {\r\n  const { party } = props\r\n  const {\r\n    activeCharacter,\r\n    selectedSkill,\r\n    onTargetsSelect,\r\n    onSkillSelect,\r\n    next,\r\n  } = useCombatContext()\r\n\r\n  const [isHovering, setIsHovering] = useState<boolean>(false)\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          alignItems: 'flex-end',\r\n          cursor: selectedSkill?.targetType === 'party' ? 'pointer' : 'default',\r\n        }}\r\n        onMouseEnter={() => setIsHovering(true)}\r\n        onMouseLeave={() => setIsHovering(false)}\r\n        onClick={() => {\r\n          if (selectedSkill && selectedSkill.targetType === 'party') {\r\n            onTargetsSelect(party)\r\n          }\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <div key={c.id}>\r\n            {selectedSkill &&\r\n              !c.dead &&\r\n              ((selectedSkill.targetType === 'self' &&\r\n                c.id === activeCharacter.id) ||\r\n                selectedSkill.targetType === 'ally') && (\r\n                <FlexContainer style={{ justifyContent: 'center' }}>\r\n                  <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n                    <ConfirmButton onClick={() => next(c)} $direction='up'>\r\n                      Confirm Target\r\n                    </ConfirmButton>\r\n                  </div>\r\n                </FlexContainer>\r\n              )}\r\n            <PartyCharacter\r\n              activeCharacter={activeCharacter}\r\n              character={c}\r\n              onConsumableClick={(consumable, index) => {\r\n                if (c.id === activeCharacter.id) {\r\n                  onSkillSelect(consumable.skill, index)\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && selectedSkill.targetType === 'party' && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n            <ConfirmButton\r\n              onClick={() => next(party)}\r\n              onMouseEnter={() => setIsHovering(true)}\r\n              onMouseLeave={() => setIsHovering(false)}\r\n            >\r\n              Confirm Group Target\r\n            </ConfirmButton>\r\n          </div>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { NameSpanBuilder } from '../../contexts/CombatLogContext/util'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport Kefir from 'kefir'\r\nimport { SkillCheck } from '../SkillChecks'\r\n\r\nexport interface RoundResultRendererPropsT {\r\n  isModal?: boolean\r\n}\r\nexport const RoundResultRenderer = (props: RoundResultRendererPropsT) => {\r\n  const { isModal = true } = props\r\n  const { activeRound, isRunning, commit } = useCombatContext()\r\n  const { open, close } = useModalContext()\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (activeRound && !isOpen && isRunning) {\r\n      setIsOpen(true)\r\n      if (isModal) {\r\n        open(\r\n          <RoundResult\r\n            close={() => {\r\n              close(true)\r\n              setIsOpen(false)\r\n              commit()\r\n            }}\r\n          />,\r\n          {\r\n            overlay: {\r\n              background: 'transparent',\r\n            },\r\n          },\r\n          true,\r\n        )\r\n      }\r\n    }\r\n  }, [isRunning, isModal, isOpen, activeRound, open, close, commit])\r\n\r\n  if (!isModal && activeRound && activeRound[0] && isRunning) {\r\n    return (\r\n      <FlexContainer style={{ height: 315 }}>\r\n        <RoundResult\r\n          close={() => {\r\n            setIsOpen(false)\r\n            commit()\r\n          }}\r\n        />\r\n      </FlexContainer>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport interface RoundResultPropsT {\r\n  close: () => void\r\n}\r\nexport interface CheckKVT {\r\n  label: string\r\n  result: boolean | undefined\r\n}\r\nexport const RoundResult = (props: RoundResultPropsT) => {\r\n  const { close } = props\r\n  const { activeRound } = useCombatContext()\r\n  const [isDone, setIsDone] = useState(false)\r\n  const rounds = activeRound || []\r\n  const round = rounds[0]\r\n  const [roundResults, setRoundResults] = useState<CheckKVT[]>(\r\n    !round\r\n      ? []\r\n      : round.rollResults.map((result, i) => ({\r\n          label: round.skill.rolls[i].key || '<NULL>',\r\n          result: undefined,\r\n        })),\r\n  )\r\n\r\n  const updateRoundResult = (value: CheckKVT, index: number) =>\r\n    setRoundResults((r) => r.map((r, i) => (i === index ? value : r)))\r\n\r\n  useEffect(() => {\r\n    const stream = Kefir.sequentially(\r\n      200,\r\n      roundResults.map((r, i) => ({ ...r, index: i })),\r\n    )\r\n    stream.onValue((result) => {\r\n      updateRoundResult(\r\n        {\r\n          label: result.label,\r\n          result:\r\n            result.label === 'accuracy'\r\n              ? round.accuracySuccess\r\n              : round.rollResults[result.index].result,\r\n        },\r\n        result.index,\r\n      )\r\n    })\r\n    stream.onEnd(() => {\r\n      Kefir.later(500, undefined).onValue(() => {\r\n        setIsDone(true)\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (isDone) {\r\n      close()\r\n    }\r\n  }, [isDone, close])\r\n\r\n  if (!round) return null\r\n\r\n  const target = {\r\n    ...round.target,\r\n    name: rounds.length > 1 ? `${rounds.length} characters` : round.target.name,\r\n  }\r\n\r\n  return (\r\n    <FlexContainer $direction='column' style={{ textAlign: 'center' }}>\r\n      <FlexContainer style={{ justifyContent: 'space-evenly' }}>\r\n        {roundResults.map((result, i) => (\r\n          <SkillCheck key={i} check={result} />\r\n        ))}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { SkillT, ProcessedCharacterT } from '../../types'\r\nimport {\r\n  getChecksProbability,\r\n  getSkillDamageRange,\r\n  getSkillDamage,\r\n  getPerfectText,\r\n} from '../../functions'\r\n\r\nexport interface SkillPreviewPropsT {\r\n  skill: SkillT\r\n  source: ProcessedCharacterT\r\n  targets: ProcessedCharacterT[]\r\n}\r\nexport const SkillPreview = (props: SkillPreviewPropsT) => {\r\n  const { skill, source, targets } = props\r\n  const perfectChance = getChecksProbability(source, skill.rolls)\r\n  const damage = getSkillDamage(skill, source)\r\n  const damageString = getSkillDamageRange(\r\n    skill,\r\n    source,\r\n    targets.length === 0 ? undefined : targets,\r\n  )\r\n  const perfectKeys = getPerfectText(skill, source)\r\n  return (\r\n    <BoxContainer\r\n      style={{ marginTop: 30, position: 'relative' }}\r\n      substyle={{ background: '#111' }}\r\n    >\r\n      <FlexContainer $direction='column' style={{ alignItems: 'center' }}>\r\n        <FlexContainer style={{ marginTop: -27 }}>\r\n          <FullContainer />\r\n          <BoxContainer\r\n            substyle={{\r\n              padding: '4px 12px',\r\n              background: '#555',\r\n              fontWeight: 'bolder',\r\n            }}\r\n          >\r\n            {skill.name}\r\n          </BoxContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n        <span\r\n          style={{\r\n            color: 'rgba(255,255,255,0.4)',\r\n            marginTop: 8,\r\n            marginBottom: 8,\r\n          }}\r\n        >\r\n          Perfect ({Math.floor(perfectChance * 100)}%){' '}\r\n          {perfectKeys.length > 0 && '='} {perfectKeys}\r\n        </span>\r\n        <FlexContainer $full style={{ width: '100%', marginBottom: 8 }}>\r\n          {damage.damage > 0 && skill.damage && (\r\n            <FlexContainer\r\n              $full\r\n              $direction='column'\r\n              style={{ alignItems: 'center', marginRight: 10 }}\r\n            >\r\n              <span\r\n                style={{\r\n                  color: damage.type === 'physical' ? 'lightblue' : 'plum',\r\n                  fontWeight: 'bolder',\r\n                  fontSize: 32,\r\n                }}\r\n              >\r\n                {damageString}\r\n              </span>\r\n              <span style={{ color: 'rgba(255,255,255,0.2)' }}>Max DMG</span>\r\n            </FlexContainer>\r\n          )}\r\n          {skill.rolls.length > 0 && (\r\n            <FlexContainer\r\n              $full\r\n              $direction='column'\r\n              style={{ alignItems: 'center' }}\r\n            >\r\n              <span\r\n                style={{\r\n                  fontWeight: 'bolder',\r\n                  fontSize: 32,\r\n                }}\r\n              >\r\n                {source.stats[skill.rolls[0].key || 'strength'] +\r\n                  (skill.rolls[0].offset || 0)}\r\n                %\r\n              </span>\r\n              <span style={{ color: 'rgba(255,255,255,0.2)' }}>\r\n                Per Check ACC\r\n              </span>\r\n            </FlexContainer>\r\n          )}\r\n        </FlexContainer>\r\n        <FlexContainer style={{ marginBottom: -18 }}>\r\n          <FullContainer />\r\n          <BoxContainer\r\n            substyle={{ padding: '0px 12px', background: '#555', fontSize: 10 }}\r\n          >\r\n            {skill.targetType}\r\n          </BoxContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { Button } from '../../elements/button'\r\nimport { SkillPreview } from '../SkillPreview'\r\nimport { SkillChecks } from '../SkillChecks'\r\nimport { PLAYER_PARTY_ID } from '../../objects/Party'\r\nimport { SKILL_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Hover } from '../Hover'\r\n\r\nexport const CombatActions = () => {\r\n  const {\r\n    activeCharacter,\r\n    selectedSkill,\r\n    selectedTargets,\r\n    onSkillSelect,\r\n  } = useCombatContext()\r\n\r\n  if (!activeCharacter || activeCharacter.partyId !== PLAYER_PARTY_ID)\r\n    return null\r\n\r\n  return (\r\n    <FlexContainer $direction='column' style={{ minWidth: 340 }}>\r\n      {selectedSkill && <SkillChecks skill={selectedSkill} />}\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        {activeCharacter.skills.map((skill) => (\r\n          <React.Fragment key={skill.id}>\r\n            {SKILL_ICONS[skill.id] ? (\r\n              <Hover delay={0}>\r\n                {({ isHovering }) => (\r\n                  <Icon\r\n                    src={SKILL_ICONS[skill.id]}\r\n                    size={42}\r\n                    shadow={true}\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      padding: '0 12px',\r\n                    }}\r\n                    onClick={() => onSkillSelect(skill)}\r\n                    fill={\r\n                      skill.id === selectedSkill?.id\r\n                        ? 'lightsalmon'\r\n                        : isHovering\r\n                        ? 'white'\r\n                        : 'rgba(255,255,255,0.8)'\r\n                    }\r\n                  />\r\n                )}\r\n              </Hover>\r\n            ) : (\r\n              <Button\r\n                key={skill.id}\r\n                onClick={() => onSkillSelect(skill)}\r\n                style={{\r\n                  background: '#111',\r\n                  borderColor:\r\n                    selectedSkill && skill.id === selectedSkill.id\r\n                      ? 'white'\r\n                      : undefined,\r\n                }}\r\n              >\r\n                {skill.name}\r\n              </Button>\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && (\r\n        <SkillPreview\r\n          skill={selectedSkill}\r\n          source={activeCharacter}\r\n          targets={selectedTargets}\r\n        />\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ProcessedCharacterT } from '../../types'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { HealthGauge } from '../Gauge'\r\nimport { styled } from 'styletron-react'\r\nimport { Badge, HoverBadge } from '../../elements/badge'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { TagPreview } from '../TagPreview'\r\nimport { CharacterImage } from '../CharacterImage'\r\nimport { usePrevious } from '../../hooks/usePrevious'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { noneg } from '../../util'\r\n\r\nexport interface EnemyCharacterPropsT {\r\n  character: ProcessedCharacterT\r\n  activeCharacter: ProcessedCharacterT\r\n  hoverable?: boolean\r\n  selected?: boolean\r\n  isHovering?: boolean\r\n  onClick?: () => void\r\n}\r\nconst Wrapper = styled('div', (props: any) => {\r\n  const { $selected, $active, $hoverable, $isHovering } = props\r\n  const hoverable = $hoverable && !$selected\r\n  return {\r\n    margin: 10,\r\n    boxShadow: $active ? '0px 0px 20px white' : 'none',\r\n    transition: 'all 0.1s',\r\n  }\r\n})\r\nexport const EnemyCharacter = (props: EnemyCharacterPropsT) => {\r\n  const { character, activeCharacter, onClick } = props\r\n  const health = noneg(character.health - character.stats.healthOffset)\r\n  const previousHealth = usePrevious<number>(health)\r\n  return (\r\n    <div\r\n      onClick={() => (onClick && !character.dead ? onClick() : null)}\r\n      style={{\r\n        borderWidth: 2,\r\n        width: 380,\r\n        position: 'relative',\r\n        cursor: onClick ? 'pointer' : 'default',\r\n        color: 'rgba(255,255,255,0.8)',\r\n        opacity: character.dead ? 0.5 : 1,\r\n      }}\r\n    >\r\n      <FlexContainer style={{ alignItems: 'center' }}>\r\n        <FlexContainer style={{ border: '1px solid black' }}>\r\n          <Wrapper\r\n            $active={character.id === activeCharacter.id}\r\n            style={{\r\n              height: 64,\r\n              width: 64,\r\n            }}\r\n          >\r\n            <CharacterImage character={character} size={64} />\r\n          </Wrapper>\r\n        </FlexContainer>\r\n        <FlexContainer $full $direction='column'>\r\n          <FlexContainer\r\n            style={{\r\n              justifyContent: 'flex-end',\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                padding: '2px 4px',\r\n                textAlign: 'right',\r\n                fontSize: 18,\r\n                lineHeight: '18px',\r\n                background: 'rgba(0,0,0,0.4)',\r\n                textShadow: '1px 1px 2px black',\r\n              }}\r\n            >\r\n              {character.name}\r\n            </span>\r\n          </FlexContainer>\r\n          <div style={{ boxShadow: '0px 5px 15px rgba(0,0,0,0.4)' }}>\r\n            <HealthGauge character={character} height={20} />\r\n          </div>\r\n          <HoverBadge\r\n            direction='down'\r\n            content={<BoxContainer>Enemy Level</BoxContainer>}\r\n            badgeProps={{\r\n              $left: '-6px',\r\n              $bottom: '-6px',\r\n              $size: '20px',\r\n              $color: 'lightcoral',\r\n            }}\r\n          >\r\n            <span>{character.level}</span>\r\n          </HoverBadge>\r\n          <FlexContainer\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: '-10px',\r\n              left: '70px',\r\n            }}\r\n          >\r\n            {character.statusEffects.map((tag, i) => (\r\n              <TagPreview key={i} tag={tag} />\r\n            ))}\r\n          </FlexContainer>\r\n          <FlexContainer\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: '-6px',\r\n              right: '16px',\r\n              width: 52,\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <FullContainer />\r\n            {character.stats.armor > 0 && (\r\n              <Badge\r\n                $absolute={false}\r\n                $right='4px'\r\n                $size='12px'\r\n                $color='lightblue'\r\n              >\r\n                {character.stats.armor}\r\n              </Badge>\r\n            )}\r\n            {character.stats.resistance > 0 && (\r\n              <Badge $absolute={false} $size='12px' $color='plum'>\r\n                {character.stats.resistance}\r\n              </Badge>\r\n            )}\r\n            <FullContainer />\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n        <span\r\n          style={{\r\n            fontWeight: 'bolder',\r\n            fontSize: 52,\r\n            height: 52,\r\n            width: 60,\r\n            textShadow: '1px 1px 10px black',\r\n            color: '#b55553',\r\n          }}\r\n        >\r\n          <Spring from={{ hp: previousHealth || health }} to={{ hp: health }}>\r\n            {(hpp) => <span>{Math.floor(hpp.hp)}</span>}\r\n          </Spring>\r\n        </span>\r\n      </FlexContainer>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { ProcessedPartyT } from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { ConfirmButton2, ConfirmButton } from '../../elements/button'\r\nimport { EnemyCharacter } from '../EnemyCharacter'\r\nimport { PLAYER_PARTY_ID } from '../../objects/Party'\r\n\r\nexport interface CombatPartyPropsT {\r\n  party: ProcessedPartyT\r\n}\r\nexport const CombatParty = (props: CombatPartyPropsT) => {\r\n  const { party } = props\r\n  const {\r\n    activeCharacter,\r\n    selectedSkill,\r\n    onTargetsSelect,\r\n    next,\r\n  } = useCombatContext()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          cursor: selectedSkill?.targetType === 'group' ? 'pointer' : 'default',\r\n        }}\r\n        onClick={() => {\r\n          if (selectedSkill && selectedSkill.targetType === 'group') {\r\n            onTargetsSelect(party)\r\n          }\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <div key={c.id}>\r\n            <EnemyCharacter activeCharacter={activeCharacter} character={c} />\r\n            {selectedSkill &&\r\n              selectedSkill.targetType === 'single' &&\r\n              !c.dead &&\r\n              activeCharacter.partyId === PLAYER_PARTY_ID && (\r\n                <FlexContainer\r\n                  style={{ justifyContent: 'center', marginTop: -13 }}\r\n                >\r\n                  <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n                    <ConfirmButton onClick={() => next(c)} $direction='down'>\r\n                      Attack\r\n                    </ConfirmButton>\r\n                  </div>\r\n                </FlexContainer>\r\n              )}\r\n          </div>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && selectedSkill.targetType === 'group' && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n            <ConfirmButton onClick={() => next(party)}>\r\n              Attack Group\r\n            </ConfirmButton>\r\n          </div>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\n\r\nexport interface AppHeaderPropsT {\r\n  children?: JSX.Element\r\n  left?: JSX.Element\r\n  right?: JSX.Element\r\n}\r\n\r\nexport const AppHeader = (props: AppHeaderPropsT) => {\r\n  const { children, left, right } = props\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'center',\r\n          background: '#111',\r\n          height: 52,\r\n          borderBottom: '2px solid rgba(255,255,255,0.3)',\r\n          boxShadow: '1px 1px 1px black',\r\n        }}\r\n      >\r\n        <FlexContainer $full>{left}</FlexContainer>\r\n        <FlexContainer $full>{children}</FlexContainer>\r\n        <FlexContainer $full>{right}</FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport Gold from '../../icons/svg/delapouite/coins.svg'\r\nimport { Icon } from '../Icon'\r\n\r\nexport const PartyResources = () => {\r\n  const { party } = usePartyContext()\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{ alignItems: 'center', color: 'white', paddingRight: 20 }}\r\n    >\r\n      <Icon src={Gold} size={18} style={{ marginRight: 8 }} />\r\n      {party.gold}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  CombatQueueT,\r\n  getFirst,\r\n  getSortedIds,\r\n  getMax,\r\n} from '../../types/CombatQueue'\r\nimport { ProcessedCharacterT } from '../../types'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button, RedButton } from '../../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { AppHeader } from '../AppHeader'\r\nimport { PartyResources } from '../PartyResources'\r\n\r\nconst size = 40\r\nexport interface CombatQueuePropsT {\r\n  queue: CombatQueueT\r\n  characters: ProcessedCharacterT[]\r\n}\r\nexport const CombatQueue = (props: CombatQueuePropsT) => {\r\n  const { queue, characters } = props\r\n  const history = useHistory()\r\n  const first = characters.find(\r\n    (c) => c.id === getFirst(queue),\r\n  ) as ProcessedCharacterT\r\n  const sortedIds = getSortedIds(queue)\r\n  const bigList = [\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n  ]\r\n  const count = Math.floor((800 - 52) / size)\r\n  const [f, ...list] = Array(count)\r\n    .fill(null)\r\n    .map((_, i) => bigList[i])\r\n    .map((id) => characters.find((c) => c.id === id))\r\n    .filter((c) => c !== undefined)\r\n  const max = getMax(queue)\r\n  const min = 50\r\n  const widthCoef = max > min ? 100 / max : 100 / min\r\n  return (\r\n    <AppHeader\r\n      left={\r\n        <>\r\n          <RedButton onClick={() => history.push('/JSFTK_combat/party')}>\r\n            Edit Party\r\n          </RedButton>\r\n          <Button onClick={() => history.push('/JSFTK_combat')}>Restart</Button>\r\n        </>\r\n      }\r\n      right={\r\n        <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n          <PartyResources />\r\n        </FlexContainer>\r\n      }\r\n    >\r\n      <FlexContainer\r\n        style={{\r\n          width: 800,\r\n          flexDirection: 'row-reverse',\r\n          boxShadow: '0px 0px 3px black',\r\n          borderLeft: '1px solid rgba(255,255,255,0.3)',\r\n          background: '#222',\r\n        }}\r\n      >\r\n        <FlexContainer>\r\n          <img\r\n            alt='profile'\r\n            height='64'\r\n            width='64'\r\n            src={`https://picsum.photos/seed/${first.name}/115/115`}\r\n            style={{\r\n              height: 64,\r\n              width: 64,\r\n              border: '2px solid rgba(255,255,255,0.8)',\r\n              borderTop: 'none',\r\n              boxShadow: '1px 1px 1px black',\r\n              zIndex: 2,\r\n            }}\r\n          />\r\n        </FlexContainer>\r\n        <FlexContainer $full $direction='column'>\r\n          <FullContainer />\r\n          <FlexContainer $full style={{ position: 'relative' }}>\r\n            {characters\r\n              .filter((c) => c.id !== first.id && !c.dead)\r\n              .map((c, i) => (\r\n                <div\r\n                  key={`${c?.id}-${i}`}\r\n                  style={{\r\n                    height: size - 10,\r\n                    width: size - 7,\r\n                    position: 'absolute',\r\n                    bottom: '0px',\r\n                    right: `calc(${queue[c.id] * widthCoef}% - ${size - 6}px)`,\r\n                    transition: 'all 0.3s',\r\n                  }}\r\n                >\r\n                  <img\r\n                    alt={`${queue[c?.id || '']}`}\r\n                    height={size}\r\n                    width={size}\r\n                    src={`https://picsum.photos/seed/${c?.name}/115/115`}\r\n                    style={{\r\n                      height: size - 10,\r\n                      width: size - 7,\r\n                      border: '1px solid rgba(255,255,255,0.5)',\r\n                      borderBottom: 'none',\r\n                    }}\r\n                  />\r\n                </div>\r\n              ))}\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </AppHeader>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { CharacterT, PartyT, SkillT } from '../../types'\r\n\r\nexport const Span = (color: string, text: JSX.Element | string) => (\r\n  <span style={{ color, fontWeight: 'bold' }}>{text}</span>\r\n)\r\nexport const SkillSpan = (skill: SkillT) => Span('plum', skill.name)\r\n\r\nexport const NameSpanBuilder = (party: PartyT, enemyParty: PartyT) => (\r\n  character: CharacterT,\r\n) => {\r\n  const isUserParty = character.partyId === party.id\r\n  const isEnemyParty = character.partyId === enemyParty.id\r\n  const color = isUserParty\r\n    ? 'lightgreen'\r\n    : isEnemyParty\r\n    ? 'lightsalmon'\r\n    : 'white'\r\n\r\n  return Span(color, character.name)\r\n}\r\n","import React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport { useCombatContext } from '../CombatContext'\r\nimport { Monospace } from '../../elements/monospace'\r\nimport { NameSpanBuilder, SkillSpan, Span } from './util'\r\nimport { getDamageResistance } from '../../functions'\r\nimport { noneg } from '../../util'\r\n\r\nexport interface CombatLogContextT {\r\n  combatLog: JSX.Element[]\r\n}\r\nconst defualtValue: CombatLogContextT = {\r\n  combatLog: [],\r\n}\r\nexport const CombatLogContext = createContext<CombatLogContextT>(defualtValue)\r\nexport const useCombatLogContext = () => useContext(CombatLogContext)\r\n\r\ntype DeadLogT = Record<string, boolean | undefined>\r\n\r\nexport interface CombatLogContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const CombatLogContextProvider = (\r\n  props: CombatLogContextProviderPropsT,\r\n) => {\r\n  const { children } = props\r\n  const { activeRound, roundResults, enemyParty, party } = useCombatContext()\r\n  const [combatLog, setCombatLog] = useState<JSX.Element[]>([])\r\n  const [deadLog, setDeadLog] = useState<DeadLogT>({})\r\n  const NameSpan = NameSpanBuilder(party, enemyParty)\r\n  const log = (line: JSX.Element) =>\r\n    setCombatLog((log) => [\r\n      ...log,\r\n      <Monospace style={{ display: 'inline-block', fontWeight: 'normal' }}>\r\n        {line}\r\n      </Monospace>,\r\n    ])\r\n\r\n  useEffect(() => {\r\n    const characters = [...enemyParty.characters, ...party.characters]\r\n    setTimeout(() => {\r\n      characters.forEach((character) => {\r\n        if (character.dead && !deadLog[character.id]) {\r\n          setDeadLog((dLog) => ({ ...dLog, [character.id]: true }))\r\n          log(<span>{Span('lightcoral', `${character.name} died.`)}</span>)\r\n        }\r\n      })\r\n    }, 5)\r\n  }, [enemyParty, party])\r\n\r\n  useEffect(() => {\r\n    if (activeRound && activeRound[0]) {\r\n      log(\r\n        <span>\r\n          {NameSpan(activeRound[0].source)} uses{' '}\r\n          {SkillSpan(activeRound[0].skill)}.\r\n        </span>,\r\n      )\r\n    }\r\n  }, [activeRound])\r\n\r\n  useEffect(() => {\r\n    if (roundResults.length === 0) return\r\n    const latestRounds = roundResults[roundResults.length - 1]\r\n    const baseRound = latestRounds[0]\r\n    if (!baseRound) return\r\n\r\n    if (!baseRound.accuracySuccess) {\r\n      if (baseRound.skill.damage) {\r\n        {\r\n          log(<span>{baseRound.source.name}'s attack missed.</span>)\r\n        }\r\n      } else {\r\n        log(<span>{SkillSpan(baseRound.skill)} failed.</span>)\r\n      }\r\n    }\r\n    if (baseRound.criticalSuccess) {\r\n      log(<span>{Span('gold', 'Critical Hit!')}</span>)\r\n    }\r\n    if (baseRound.perfect && baseRound.rollResults.length > 0) {\r\n      log(<span>{Span('gold', 'Perfect!')}</span>)\r\n    }\r\n    latestRounds.forEach((round) => {\r\n      const targetParty = party.id === round.source.partyId ? enemyParty : party\r\n      if (round.accuracySuccess) {\r\n        if (round.dodgeSuccess) {\r\n          log(<span>{NameSpan(round.target)} dodged the attack.</span>)\r\n        } else if (round.totalDamage.damage > 0) {\r\n          log(\r\n            <span>\r\n              {SkillSpan(round.skill)} deals{' '}\r\n              {Span('white', `${round.totalDamage.damage} damage`)} to{' '}\r\n              {NameSpan(round.target)}.\r\n            </span>,\r\n          )\r\n        } else if (round.skill.damage) {\r\n          log(\r\n            <span>\r\n              {SkillSpan(round.skill)} did no damage to {NameSpan(round.target)}\r\n              .\r\n            </span>,\r\n          )\r\n        }\r\n        if (round.splashDamage.damage > 0) {\r\n          targetParty.characters\r\n            .filter((c) => c.id !== round.target.id && !c.dead)\r\n            .forEach((subTarget) => {\r\n              const splashDamageResistance = getDamageResistance(\r\n                subTarget,\r\n                round.splashDamage.type,\r\n              )\r\n              log(\r\n                <span>\r\n                  {SkillSpan(round.skill)} deals{' '}\r\n                  {Span(\r\n                    'white',\r\n                    `${\r\n                      round.splashDamage.damage - splashDamageResistance\r\n                    } splash damage`,\r\n                  )}{' '}\r\n                  to {NameSpan(subTarget)}.\r\n                </span>,\r\n              )\r\n            })\r\n        }\r\n\r\n        if (round.reflectedDamage.damage > 0) {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} reflected{' '}\r\n              {Span('white', `${round.reflectedDamage.damage} damage`)}\r\n            </span>,\r\n          )\r\n        }\r\n\r\n        if (round.healing > 0) {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} gained{' '}\r\n              {Span('white', `${round.healing} HP`)} from{' '}\r\n              {SkillSpan(round.skill)}\r\n            </span>,\r\n          )\r\n        }\r\n\r\n        round.addedStatus.forEach((tag) => {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} became {tag.type}\r\n              {tag.duration > 0 ? ` (${tag.duration} turns)` : ''}.\r\n            </span>,\r\n          )\r\n        })\r\n      }\r\n    })\r\n    if (baseRound.regeneratedHealth > 0) {\r\n      log(\r\n        <span>\r\n          {NameSpan(baseRound.source)} gained{' '}\r\n          {Span('white', `${baseRound.regeneratedHealth} HP`)} from HP regen.\r\n        </span>,\r\n      )\r\n    }\r\n  }, [roundResults.length])\r\n\r\n  return (\r\n    <CombatLogContext.Provider value={{ combatLog }}>\r\n      {children}\r\n    </CombatLogContext.Provider>\r\n  )\r\n}\r\n","import React, { useRef, useEffect } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatLogContext } from '../../contexts/CombatLogContext'\r\n\r\nexport const CombatLog = () => {\r\n  const { combatLog } = useCombatLogContext()\r\n  const scrollRef = useRef<HTMLDivElement>(null)\r\n  useEffect(() => {\r\n    if (scrollRef.current) {\r\n      scrollRef.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n  }, [combatLog])\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{\r\n        padding: 8,\r\n        minWidth: 300,\r\n        height: 300,\r\n        overflow: 'auto',\r\n        background: 'rgba(0,0,0,0.7)',\r\n        fontSize: 12,\r\n        color: 'rgba(255,255,255,0.8)',\r\n      }}\r\n    >\r\n      {combatLog.map((line, i) => (\r\n        <span key={i}>{line}</span>\r\n      ))}\r\n      <div ref={scrollRef} />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { BoxContainer } from '../elements/box'\r\nimport { FlexContainer, FullContainer } from '../elements/flex'\r\nimport { useCombatLogContext } from '../contexts/CombatLogContext'\r\nimport { CombatPlayerParty } from '../components/CombatPlayerParty'\r\nimport { RoundResultRenderer } from '../components/RoundResultRenderer'\r\nimport { CombatActions } from '../components/CombatActions'\r\nimport { CombatParty } from '../components/CombatParty'\r\nimport { useModalContext } from '../contexts/ModalContext'\r\nimport { CombatQueue } from '../components/CombatQueue'\r\nimport ForestBg from '../assets/img/flat-forestred.jpg'\r\nimport { CombatLog } from '../components/CombatLog'\r\n\r\nexport const Combat = () => {\r\n  const {\r\n    party,\r\n    enemyParty,\r\n    activeCharacter,\r\n    characters,\r\n    queue,\r\n    isDone,\r\n    isRunning,\r\n    isRenderingResult,\r\n    start,\r\n  } = useCombatContext()\r\n  const { open, close } = useModalContext()\r\n  useEffect(() => {\r\n    if (!isRunning) {\r\n      open(\r\n        <div style={{ textAlign: 'center' }}>\r\n          <h1>Combat Start!</h1>\r\n        </div>,\r\n      )\r\n      setTimeout(() => {\r\n        close()\r\n        start()\r\n      }, 1000)\r\n    }\r\n  }, [])\r\n\r\n  if (!activeCharacter) return <span>Loading...</span>\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        height: '100vh',\r\n        background: `url(${ForestBg}) center center fixed no-repeat`,\r\n        backgroundSize: 'cover',\r\n      }}\r\n    >\r\n      <FlexContainer $full $direction='column'>\r\n        <CombatQueue queue={queue} characters={characters} />\r\n        <FlexContainer\r\n          $direction='column'\r\n          $full\r\n          style={{ padding: '30px 10px' }}\r\n        >\r\n          <FlexContainer $direction='column' $full>\r\n            <CombatParty party={enemyParty} />\r\n          </FlexContainer>\r\n          <FlexContainer $full>\r\n            {!isDone && (\r\n              <>\r\n                <FullContainer />\r\n                <FlexContainer $direction='column'>\r\n                  {!isRenderingResult && <CombatActions />}\r\n                  <RoundResultRenderer isModal={false} />\r\n                </FlexContainer>\r\n                <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n                  <CombatLog />\r\n                </FlexContainer>\r\n              </>\r\n            )}\r\n          </FlexContainer>\r\n          <FlexContainer\r\n            $direction='column'\r\n            $full\r\n            style={{ justifyContent: 'flex-end' }}\r\n          >\r\n            <CombatPlayerParty party={party} />\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\n\r\nexport const makeRoute = (path: string, Component: React.FC) => (\r\n  <Route path={`/JSFTK_combat${path}`}>\r\n    <Component />\r\n  </Route>\r\n)\r\n","import React from 'react'\r\nimport { ProcessedPartyT, ProcessedCharacterT } from '../../types'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { PartyCharacter } from '../PartyCharacter'\r\n\r\nexport interface PartyCharactersProps {\r\n  party: ProcessedPartyT\r\n  activeCharacter: ProcessedCharacterT\r\n  canEquip: boolean\r\n  onCharacterClick: (character: ProcessedCharacterT) => void\r\n  onConsumableClick: (\r\n    character: ProcessedCharacterT,\r\n    consumableIndex: number,\r\n  ) => void\r\n}\r\nexport const PartyCharacters = (props: PartyCharactersProps) => {\r\n  const {\r\n    party,\r\n    activeCharacter,\r\n    canEquip,\r\n    onCharacterClick,\r\n    onConsumableClick,\r\n  } = props\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          alignItems: 'flex-end',\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <div key={c.id}>\r\n            <PartyCharacter\r\n              canEquip={canEquip}\r\n              hoverable={true}\r\n              activeCharacter={activeCharacter}\r\n              character={c}\r\n              onClick={() => onCharacterClick(c)}\r\n              onConsumableClick={(consumable, index) =>\r\n                onConsumableClick(c, index)\r\n              }\r\n            />\r\n          </div>\r\n        ))}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { usePartyContext } from '../contexts/PartyContext'\r\nimport { FlexContainer, FullContainer } from '../elements/flex'\r\nimport { PartyCharacters } from '../components/PartyCharacters'\r\nimport { BoxContainer } from '../elements/box'\r\nimport { RedButton } from '../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { getSkillResults, commitSkillResults } from '../functions'\r\nimport ForestBg from '../assets/img/flat-forestred.jpg'\r\nimport { AppHeader } from '../components/AppHeader'\r\nimport { PartyResources } from '../components/PartyResources'\r\n\r\nexport const Party = () => {\r\n  const {\r\n    party,\r\n    rawParty,\r\n    activeCharacter,\r\n    updateParty,\r\n    setActiveCharacter,\r\n  } = usePartyContext()\r\n  const history = useHistory()\r\n  const enterCombat = () => {\r\n    history.push('/JSFTK_combat/combat')\r\n  }\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        background: `url(${ForestBg}) center center fixed no-repeat`,\r\n        backgroundSize: 'cover',\r\n      }}\r\n    >\r\n      <AppHeader\r\n        left={\r\n          <>\r\n            <RedButton onClick={enterCombat}>Enter Combat</RedButton>\r\n            <FullContainer />\r\n          </>\r\n        }\r\n        right={\r\n          <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n            <PartyResources />\r\n          </FlexContainer>\r\n        }\r\n      >\r\n        <FlexContainer\r\n          $full\r\n          style={{\r\n            color: 'white',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          Edit Party\r\n        </FlexContainer>\r\n      </AppHeader>\r\n      <FlexContainer $full $direction='column' style={{ padding: '30px 10px' }}>\r\n        <FlexContainer $full></FlexContainer>\r\n        <div>\r\n          <PartyCharacters\r\n            party={party}\r\n            activeCharacter={activeCharacter}\r\n            canEquip={true}\r\n            onCharacterClick={(c) => setActiveCharacter(c)}\r\n            onConsumableClick={(character, consumableIndex) => {\r\n              const consumable = character.consumables[consumableIndex]\r\n              const targets =\r\n                consumable.skill.targetType === 'self'\r\n                  ? [character]\r\n                  : consumable.skill.targetType === 'party'\r\n                  ? party.characters\r\n                  : []\r\n              const result = getSkillResults(\r\n                consumable.skill,\r\n                character,\r\n                targets,\r\n                consumableIndex,\r\n              )\r\n              const parties = commitSkillResults(rawParty, rawParty)(\r\n                result,\r\n                false,\r\n              )\r\n              updateParty(parties.party)\r\n            }}\r\n          />\r\n        </div>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { FullContainer, FlexContainer } from '../elements/flex'\r\nimport { BoxContainer } from '../elements/box'\r\nimport { usePartyContext } from '../contexts/PartyContext'\r\nimport { ProcessedCharacterT, CharacterT, CharacterClassT } from '../types'\r\nimport { makeCharacter } from '../functions'\r\nimport { STAT_BONUS_KEYS } from '../objects'\r\nimport { Gauge } from '../components/Gauge'\r\nimport { RedButton } from '../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { INITIAL_STATE } from '../state/party'\r\nimport { Monospace } from '../elements/monospace'\r\n\r\nexport const Start = () => {\r\n  const {\r\n    party,\r\n    updateParty,\r\n    upsertCharacter,\r\n    findRawCharacter,\r\n  } = usePartyContext()\r\n  const history = useHistory()\r\n  useEffect(() => {\r\n    updateParty(INITIAL_STATE)\r\n  }, [])\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{ height: '100%', overflow: 'hidden' }}\r\n    >\r\n      <FullContainer />\r\n      <FlexContainer $full>\r\n        <FullContainer />\r\n        <BoxContainer>\r\n          <h1 style={{ marginTop: 0, textAlign: 'center' }}>\r\n            Choose your Party!\r\n          </h1>\r\n          <FlexContainer>\r\n            {party.characters.map((character) => (\r\n              <BoxContainer substyle={{ background: '#111' }}>\r\n                <StartCharacterCard\r\n                  character={character}\r\n                  onChange={(characterId, updater) => {\r\n                    const rc = findRawCharacter(characterId)\r\n                    if (rc) {\r\n                      upsertCharacter(updater(rc))\r\n                    }\r\n                  }}\r\n                />\r\n              </BoxContainer>\r\n            ))}\r\n          </FlexContainer>\r\n          <FlexContainer>\r\n            <FullContainer />\r\n            <RedButton\r\n              style={{ marginTop: 16 }}\r\n              onClick={() => {\r\n                history.push('/JSFTK_combat/combat')\r\n              }}\r\n            >\r\n              Begin Adventure\r\n            </RedButton>\r\n            <FullContainer />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        <FullContainer />\r\n      </FlexContainer>\r\n      <FullContainer />\r\n      <Monospace\r\n        style={{\r\n          fontWeight: 'normal',\r\n          color: 'rgba(255,255,255,0.5)',\r\n          fontSize: 12,\r\n        }}\r\n      >\r\n        pre-pre-pre-pre alpha v0.0.0.1\r\n      </Monospace>\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface StartCharacterCardPropsT {\r\n  character: ProcessedCharacterT\r\n  onChange: (\r\n    characterId: string,\r\n    updater: (c: CharacterT) => CharacterT,\r\n  ) => void\r\n}\r\nexport const StartCharacterCard = (props: StartCharacterCardPropsT) => {\r\n  const { character, onChange } = props\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <input\r\n        style={{\r\n          background: '#333',\r\n          border: '1px solid rgba(255,255,255,0.4)',\r\n          padding: 8,\r\n          color: 'white',\r\n          marginBottom: 8,\r\n        }}\r\n        value={character.name}\r\n        onChange={(e) => {\r\n          onChange(character.id, (c) => ({\r\n            ...c,\r\n            name: e.target.value,\r\n          }))\r\n        }}\r\n      />\r\n      <select\r\n        style={{\r\n          background: '#333',\r\n          border: '1px solid rgba(255,255,255,0.4)',\r\n          padding: 8,\r\n          color: 'white',\r\n          marginBottom: 8,\r\n        }}\r\n        value={character.class}\r\n        onChange={(e) => {\r\n          onChange(character.id, (c) => ({\r\n            ...makeCharacter(e.target.value as CharacterClassT),\r\n            id: character.id,\r\n            name: character.name,\r\n          }))\r\n        }}\r\n      >\r\n        <option value='blacksmith'>blacksmith</option>\r\n        <option value='hunter'>hunter</option>\r\n        <option value='scholar'>scholar</option>\r\n        <option value='bard'>bard</option>\r\n      </select>\r\n      <BoxContainer>\r\n        {STAT_BONUS_KEYS.map((key) => (\r\n          <FlexContainer style={{ height: 20 }}>\r\n            <div\r\n              style={{ width: 60, fontSize: 12, textTransform: 'capitalize' }}\r\n            >\r\n              {key}\r\n            </div>\r\n            <FullContainer>\r\n              <Gauge\r\n                max={100}\r\n                value={character.stats[key]}\r\n                color='white'\r\n                height={15}\r\n              />\r\n            </FullContainer>\r\n          </FlexContainer>\r\n        ))}\r\n      </BoxContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { CombatContextProvider } from './contexts/CombatContext'\nimport { PartyT } from './types'\nimport { makeParty } from './functions'\nimport { Combat } from './domain/Combat'\nimport { CombatLogContextProvider } from './contexts/CombatLogContext'\nimport { ModalContextProvider } from './contexts/ModalContext'\nimport { makeRoute } from './routes'\nimport { Party } from './domain/Party'\nimport { Start } from './domain/Start'\n\nconst CombatDomain = () => {\n  const [rawEnemyParty, setRawEnemyParty] = useState<PartyT>(makeParty(3))\n  return (\n    <ModalContextProvider>\n      <CombatContextProvider\n        enemyParty={rawEnemyParty}\n        setEnemyParty={setRawEnemyParty}\n        onRequestNewParty={() => setRawEnemyParty(makeParty(3))}\n      >\n        <CombatLogContextProvider>\n          <ModalContextProvider>\n            <Combat />\n          </ModalContextProvider>\n        </CombatLogContextProvider>\n      </CombatContextProvider>\n    </ModalContextProvider>\n  )\n}\n\nconst PartyDomain = () => {\n  return <Party />\n}\n\nexport const App = () => {\n  return (\n    <Switch>\n      {makeRoute('/party', PartyDomain)}\n      {makeRoute('/combat', CombatDomain)}\n      {makeRoute('/', Start)}\n    </Switch>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './index.css'\n\nimport { Provider as StyletronProvider, DebugEngine } from 'styletron-react'\nimport { Client as Styletron } from 'styletron-engine-atomic'\nimport { Provider as ReduxProvider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { makeStore } from './state'\nimport { PartyContextProvider } from './contexts/PartyContext'\n\nconst debug = process.env.NODE_ENV === 'production' ? void 0 : new DebugEngine()\nconst engine: Styletron = new Styletron()\nconst store = makeStore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n        <PartyContextProvider>\n          <Router>\n            <App />\n          </Router>\n        </PartyContextProvider>\n      </StyletronProvider>\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport party from './party'\r\n\r\nexport const makeStore = () =>\r\n  createStore(combineReducers({ party }), compose(applyMiddleware(thunk)))\r\n","module.exports = __webpack_public_path__ + \"static/media/broadsword.47ecfebc.svg\";","module.exports = __webpack_public_path__ + \"static/media/flat-forestred.951e7322.jpg\";","module.exports = __webpack_public_path__ + \"static/media/heavy-timer.1072a406.svg\";","module.exports = __webpack_public_path__ + \"static/media/g-clef.77d209b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/shieldcomb.802f20f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/chest-armor.f1f52a3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/viking-shield.a61f8230.svg\";","module.exports = __webpack_public_path__ + \"static/media/leather-boot.89b85474.svg\";","module.exports = __webpack_public_path__ + \"static/media/visored-helm.1f2ced7f.svg\";"],"sourceRoot":""}