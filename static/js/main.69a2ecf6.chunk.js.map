{"version":3,"sources":["assets/img/forests/7.png","icons/svg/lorc/pentagram-rose.svg","icons/svg/lorc/cultist.svg","icons/svg/delapouite/coins.svg","icons/svg/lorc/broadsword.svg","assets/img/dungeon/4.png","icons/svg/lorc/battered-axe.svg","icons/svg/lorc/dodging.svg","icons/svg/lorc/all-for-one.svg","assets/img/forests/8.png","assets/img/dungeon/1.png","icons/svg/lorc/sprint.svg","icons/svg/lorc/scythe.svg","icons/svg/lorc/ringing-bell.svg","icons/svg/lorc/bone-knife.svg","icons/svg/lorc/drink-me.svg","icons/svg/lorc/molotov.svg","icons/svg/delapouite/perspective-dice-six.svg","icons/svg/lorc/high-shot.svg","icons/svg/lorc/shieldcomb.svg","icons/svg/delapouite/armor-upgrade.svg","icons/svg/delapouite/armor-downgrade.svg","icons/svg/lorc/knapsack.svg","icons/svg/lorc/hammer-drop.svg","assets/img/forests/1.png","assets/img/dungeon/3.png","assets/img/dungeon/2.png","icons/svg/delapouite/chest-armor.svg","icons/svg/delapouite/cross-shield.svg","icons/svg/lorc/leather-boot.svg","icons/svg/lorc/visored-helm.svg","icons/svg/delapouite/ring.svg","icons/svg/delapouite/heart-necklace.svg","icons/svg/lorc/knife-thrust.svg","icons/svg/delapouite/overlord-helm.svg","icons/svg/lorc/wolf-head.svg","icons/svg/lorc/raven.svg","icons/svg/lorc/snake.svg","icons/svg/lorc/witch-flight.svg","icons/svg/skoll/troll.svg","icons/svg/lorc/werewolf.svg","icons/svg/lorc/boar-tusks.svg","icons/svg/lorc/unfriendly-fire.svg","icons/svg/lorc/haunting.svg","icons/svg/lorc/daemon-skull.svg","icons/svg/lorc/spectre.svg","icons/svg/delapouite/mimic-chest.svg","icons/svg/lorc/diablo-skull.svg","icons/svg/lorc/harry-potter-skull.svg","icons/svg/delapouite/spider-eye.svg","icons/svg/lorc/laurel-crown.svg","icons/svg/delapouite/heart-beats.svg","icons/svg/delapouite/biceps.svg","icons/svg/lorc/brain.svg","icons/svg/sbed/hand.svg","icons/svg/lorc/lyre.svg","icons/svg/lorc/clover.svg","icons/svg/lorc/robe.svg","icons/svg/lorc/scale-mail.svg","icons/svg/lorc/lightning-shield.svg","icons/svg/delapouite/robin-hood-hat.svg","icons/svg/lorc/pointy-hat.svg","icons/svg/lorc/battle-axe.svg","icons/svg/lorc/gavel.svg","icons/svg/lorc/heavy-arrow.svg","icons/svg/lorc/bowie-knife.svg","icons/svg/skoll/revolver.svg","icons/svg/lorc/wizard-staff.svg","icons/svg/lorc/croc-sword.svg","icons/svg/skoll/fist.svg","icons/svg/delapouite/herbs-bundle.svg","icons/svg/lorc/lotus-flower.svg","icons/svg/delapouite/medicine-pills.svg","icons/svg/delapouite/executioner-hood.svg","icons/svg/lorc/cowled.svg","icons/svg/delapouite/female-vampire.svg","icons/svg/delapouite/wizard-face.svg","icons/svg/delapouite/kenku-head.svg","icons/svg/delapouite/shield-impact.svg","icons/svg/lorc/energy-arrow.svg","icons/svg/lorc/fire-zone.svg","icons/svg/lorc/magic-swirl.svg","icons/svg/lorc/heavy-timer.svg","icons/svg/delapouite/extra-time.svg","icons/svg/sbed/lucifer-cannon.svg","icons/svg/delapouite/firewall.svg","icons/svg/lorc/flat-hammer.svg","icons/svg/lorc/plain-dagger.svg","icons/svg/lorc/pointy-sword.svg","icons/svg/lorc/axe-swing.svg","icons/svg/lorc/saber-slash.svg","icons/svg/lorc/wave-strike.svg","icons/svg/lorc/sparkling-sabre.svg","icons/svg/lorc/bordered-shield.svg","icons/svg/lorc/resonance.svg","icons/svg/lorc/gunshot.svg","icons/svg/delapouite/crosshair.svg","icons/svg/delapouite/bullet-impacts.svg","icons/svg/delapouite/backward-time.svg","icons/svg/lorc/snail.svg","icons/svg/lorc/double-shot.svg","icons/svg/sbed/health-normal.svg","icons/svg/lorc/embrassed-energy.svg","icons/svg/lorc/life-support.svg","icons/svg/lorc/punch.svg","icons/svg/lorc/ubisoft-sun.svg","icons/svg/lorc/star-swirl.svg","icons/svg/sbed/targeted.svg","icons/svg/delapouite/sticky-boot.svg","icons/svg/lorc/biohazard.svg","icons/svg/carl-olsen/flame.svg","icons/svg/lorc/bleeding-wound.svg","icons/svg/lorc/snowflake-2.svg","icons/svg/lorc/broken-shield.svg","icons/svg/lorc/split-cross.svg","icons/svg/lorc/broken-bone.svg","icons/svg/delapouite/leather-armor.svg","icons/svg/lorc/locked-chest.svg","icons/svg/lorc/crowned-skull.svg","icons/svg/lorc/campfire.svg","state/util.ts","hooks/useActions.ts","game/Stats/constants.ts","util/undefAdd.ts","util/getRandom.ts","util/noneg.ts","game/Stats/util.ts","game/Status/constants.ts","game/Weapon/builders/damage.ts","game/Weapon/builders/goldValue.ts","game/Weapon/builders/rarity.ts","game/Weapon/builders/stats.ts","game/Weapon/builders/typeConfig.ts","game/Weapon/builders/index.ts","game/Skill/skills/index.ts","game/Skill/skills/axe.ts","game/Weapon/builders/objects/axe.ts","game/Skill/skills/bow.ts","game/Weapon/builders/objects/bow.ts","game/Skill/skills/catalyst.ts","game/Weapon/builders/objects/catalyst.ts","game/Skill/skills/chime.ts","game/Weapon/builders/objects/chime.ts","game/Skill/skills/scythe.ts","game/Weapon/builders/objects/scythe.ts","game/Skill/skills/blunt.ts","game/Weapon/builders/objects/hammer.ts","game/Skill/skills/dagger.ts","game/Weapon/builders/objects/dagger.ts","game/Skill/skills/greatsword.ts","game/Weapon/builders/objects/greatsword.ts","game/Skill/skills/pistol.ts","game/Weapon/builders/objects/pistol.ts","game/Skill/skills/sword.ts","game/Weapon/builders/objects/sword.ts","game/Weapon/builders/objects/index.ts","game/Armor/builders/index.ts","game/Skill/skills/armor.ts","game/Armor/builders/constants.ts","game/Armor/builders/pendants/index.ts","game/Armor/builders/rings/index.ts","game/Armor/builders/shields/level_0.ts","game/Armor/builders/shields/level_1.ts","game/Armor/builders/shields/level_2.ts","game/Armor/builders/sets/index.tsx","game/Armor/builders/sets/ranger.ts","game/Armor/builders/sets/patrician.ts","game/Armor/builders/sets/executioner.ts","game/Armor/builders/sets/student.ts","game/Armor/builders/sets/tomb.ts","game/Armor/builders/sets/adventure.ts","game/Armor/builders/sets/aristocrat.ts","game/Armor/builders/sets/graveguard.ts","game/Armor/builders/sets/apprentice.ts","game/Armor/builders/sets/hunter.ts","game/Armor/builders/sets/antiquated.ts","game/Armor/builders/sets/iron.ts","game/Armor/builders/sets/bone.ts","game/Armor/builders/sets/novice.ts","game/Armor/builders/sets/rogue.ts","game/Armor/builders/sets/necromancer.ts","game/Armor/builders/sets/fallen_raider.ts","game/Armor/builders/sets/noble.ts","game/Armor/builders/sets/assassin.ts","game/Armor/builders/sets/old_knight.ts","game/Armor/builders/sets/reaper.ts","game/Armor/builders/sets/bishop.ts","game/Encounter/floors/util.tsx","game/Item/util.ts","game/Character/enemies/cultist_scholar.ts","game/Character/enemies/flame_wisp.ts","game/Character/enemies/banshee.ts","game/Character/enemies/consecrated_guard.ts","game/Character/enemies/tomb_spirit.ts","game/Encounter/floors/floor-1-config.tsx","game/Character/enemies/forest_wolf.ts","game/Character/enemies/forest_beast.ts","game/Character/enemies/forest_snake.ts","game/Character/enemies/forest_witch.ts","game/Character/enemies/forest_raven.ts","game/Character/enemies/forest_troll.ts","game/Character/enemies/forest_boar.ts","game/Character/enemies/cultist.ts","game/Character/enemies/cultist_brute.ts","game/Skill/skills/consumables.ts","game/Consumable/objects/godsbeard.ts","game/Character/enemies/mimic_floor_1.ts","game/Character/bosses/consecrated_beast.ts","game/Character/enemies/tomb_guardian.ts","game/Character/enemies/tomb_spider.ts","game/Encounter/floors/index.tsx","game/Encounter/floors/floor-1.tsx","game/Encounter/floors/floor-2.tsx","game/Encounter/floors/floor-3.tsx","game/Encounter/constants.ts","theme/index.ts","game/Character/constants.ts","game/Character/enemies/_builder.ts","game/Character/bosses/lich.ts","game/Weapon/builders/unique/boss_lich.ts","game/Weapon/constants.ts","game/Armor/builders/uniques/heart_of_the_beast.ts","game/Roll/util.ts","game/Armor/constants.ts","game/Consumable/util.ts","game/Weapon/fists.ts","game/Consumable/objects/celestial_lotus.ts","game/Consumable/objects/poison_knife.ts","game/Consumable/objects/beast_drug.ts","game/Consumable/objects/curing_potion.ts","game/Consumable/objects/firebomb.ts","game/Item/constants.ts","game/Character/util.ts","util/makeRandom.ts","game/Party/util.ts","game/Party/constants.ts","state/party/index.ts","game/Encounter/builders.ts","grid/util.ts","game/Encounter/util.ts","state/game2/index.ts","contexts/GameStateContext/index.tsx","contexts/PartyContext/index.tsx","contexts/ModalContext/reducer.ts","contexts/ModalContext/index.tsx","elements/flex.ts","elements/button.tsx","components/Icon/index.tsx","components/Hover/index.tsx","components/Tooltip/index.tsx","hooks/useOnClickOutside.ts","elements/box.tsx","icons/skills.ts","icons/status.ts","icons/maps.tsx","elements/badge.tsx","components/SkillChecks/index.tsx","components/StatsPreview/index.tsx","components/ItemCard/index.tsx","components/CombatVictoryModal/pure.tsx","components/CombatVictoryModal/index.tsx","game/Other/util.ts","game/Queue/util.ts","game/Skill/constants.ts","game/Skill/util.ts","game/Skill/committer.ts","contexts/CombatContext/index.tsx","game/AI/util.ts","components/RoundResultRenderer/Perfect.tsx","components/RoundResultRenderer/index.tsx","components/SkillPreview/index.tsx","components/PartyActiveCharacter/StatBar.tsx","contexts/UIContext/index.tsx","components/PartyActiveCharacter/Items.tsx","components/PartyActiveCharacter/Name.tsx","components/CharacterIcon/index.tsx","components/PartyActiveCharacter/Image.tsx","components/PartyActiveCharacter/elements.tsx","components/PartyActiveCharacter/WeaponList.tsx","components/PartyActiveCharacter/Stats.tsx","components/PartyActiveCharacter/MenuSelect.tsx","components/PartyActiveCharacter/HoverArea.tsx","elements/shapes.tsx","components/PartyActiveCharacter/index.tsx","components/PartyActiveCharacter/ArmorList.tsx","components/EquipItemModal/index.tsx","components/CombatActions/index.tsx","elements/monospace.tsx","components/Gauge/v2.tsx","components/NumberChange/index.tsx","components/Gauge/index.tsx","components/TagPreview/index.tsx","hooks/usePlayerCharacterNotifications.tsx","components/EnemyCharacter/Health.tsx","contexts/LocalToastContext/index.tsx","hooks/useElementShake.tsx","components/EnemyCharacter/index.tsx","components/CombatParty/index.tsx","components/AppHeader/index.tsx","components/PartyResources/index.tsx","components/CombatQueue/index.tsx","contexts/CombatLogContext/util.tsx","contexts/CombatLogContext/index.tsx","components/CombatLog/index.tsx","domain/Combat.tsx","hooks/useCombatStart.tsx","routes/index.tsx","components/Shop/index.tsx","components/Shrine/index.tsx","components/BossRewards/index.tsx","components/Chest/index.tsx","components/NonCombatEncounter/index.tsx","elements/typography.tsx","game/Encounter/text/index.ts","components/EncounterActions/Choice.tsx","components/EncounterActions/Shop.tsx","components/EncounterActions/Shrine.tsx","components/EncounterActions/index.tsx","icons/static/Boss.tsx","icons/static/Combat.tsx","icons/static/Random.tsx","icons/static/Shine.tsx","icons/static/Shop.tsx","icons/static/Start.tsx","icons/static/Chest.tsx","domain/Grid/hex.tsx","domain/Grid/index.tsx","domain/Party.tsx","domain/Start.tsx","game/Weapon/builders/unique/test_weapon.ts","game/Consumable/constants.ts","components/PartyCharacterConsumables/index.tsx","components/PartyCharacter/Stats.tsx","components/PartyCharacter/Name.tsx","components/PartyCharacter/Actions.tsx","components/PartyCharacter/Health.tsx","components/PartyCharacter/index.tsx","components/PlayerParty/index.tsx","contexts/CombatContext/context.tsx","components/AppBg/index.tsx","App.tsx","serviceWorker.ts","index.tsx","state/index.ts"],"names":["module","exports","makeReducer","core","initialState","state","action","coreFn","type","useActions","actions","dispatch","useDispatch","useMemo","bindActionCreators","ZERO_STATS","vigor","strength","intelligence","dexterity","charisma","agility","luck","armor","resistance","evasion","maxHealthOffset","healthRegeneration","damageTakenModifier","damageTakenRangeModifiers","melee","ranged","damageReflection","attackDamageOffset","attackDamageModifier","criticalChance","damageModifiers","flying","undead","beast","queueConsolidationModifier","queueValueSet","undefined","goldModifier","maxInspirationOffset","consumableHealthGainOffset","minHealthOffset","BASE_C_STATS","CLASS_STATS","executioner","ranger","reaper","student","patrician","drifter","enemy","DAMAGE_BONUS_KEYS","DEFENSE_BONUS_KEYS","HEALTH_FOCUS_BONUS_KEYS","STAT_BONUS_KEYS","STAT_KEY_LABELS","undefAdd","a","b","getRandom","items","Math","floor","random","length","noneg","value","combineStats","stats","reduce","result","STATUS_CONFIG","bleeding","name","description","canStack","isTemporary","duration","immunities","burning","frozen","poisoned","shocked","stunned","wet","rushed","interrupted","reset","evasive","resilient","protected","targeted","cure","blessed","GLOBAL_DAMAGE_OFFSETS","axe","hammer","sword","greatsword","bow","dagger","scythe","catalyst","chime","pistol","fist","WEAPON_DAMAGE_CONFIG","starting","rusted","tomb","buried","withering","glass","iron","steel","stainless","ancient","crystal","elemental","cursed","sharp","hardened","engraved","ethereal","exquisite","divine","arcane","celestial","mythic","unique","BASE_WEAPON_TYPES_GOLD","WEAPON_CLASS_GOLD_OFFSETS","WEAPON_CLASS_RARIES","DEFAULT_WEAPON_TYPE_STATS","DEFAULT_WEAPON_TYPE_CONFIG","stat","twoHand","range","damageType","createWeapon","weaponType","weaponClass","skills","goldValue","damageValue","rarity","defaultStats","id","v4","itemType","breakable","damage","createBreakableWeapon","createSkill","rolls","offset","rest","damageModifier","splashDamageModifier","targetType","healing","perfectSplash","perfectPierce","perfectStatus","CHOP","SWING","WITHERING_SWING","GLASS_SWING","AXE_SPIN","FLURRY","STUN","CLEAVE","SLICE","SLASH","EXECUTIONER_AXE","AXES","0","1","2","3","4","5","SHOT","WITHERING_SHOT","GLASS_SHOT","HEADSHOT","PIN_DOWN","WOUNDING_SHOT","RANGERS_BOW","BOWS","BLAST","GLASS_BLAST","ARCANE","NOVA","ENFLAME","ENGULF","PROTECT","TIME_JUMP","STUDENTS_CATALYST","CATALYSTS","RING","WITHERING_RING","GLASS_RING","REVERBERATE","SLOW","VANISH","RUSH","RESET","PATRICIANS_CHIME","CHIMES","THRUST","ARMOR_UP","EVADE_UP","SCYTHES","SMASH","WITHERING_SMASH","GLASS_SMASH","RIPPLE","EARTHQUAKE","CRUSH","HAMMERS","STRIKE","WITHERING_STRIKE","GLASS_STRIKE","LUNGE","STAB","DAGGERS","WIDE_SWING","GREATSWORDS","FIRE","SNIPE","FAN_FIRE","PISTOLS","SWORDS","WEAPONS_BY_LEVEL","createArmor","Object","keys","allWeapons","level","parseInt","resource","createFootwear","createHat","createHeavyArmor","createHelmet","createLightArmor","createMagicArmor","createMagicHat","createShield","createRing","createPendant","TAUNT","weaponStatOverride","PENDANTS_BY_LEVEL","RINGS_BY_LEVEL","SHIELDS_BY_LEVEL","ARMOR_BY_LEVEL","makeRandomFloorEncounter","characterList","enemyCount","Array","fill","map","_","buildFloorEnemeis","configs","encounterSizes","size","depth","enemies","filter","c","depths","includes","res","current","index","getRandomItem","min","CULTIST_SCHOLAR","makeEnemy","Cultist","makeEnemyWeapon","makeEnemyReward","FLAME_WISP","FireWhisp","stack","BANSHEE","Banshee","CONSECRATED_GUARD","Skull","TOMB_SPIRIT","Spirit","Floor1EnemyConfigs","Wolf","BeastMan","Bee","Witch","Raven","Troll","Boar","Floor1EncounterSizes","6","7","8","9","HEAL","REMOVE_CURSES","POISON_KNIFE","cid","GODSBEARD","skill","consumableId","MIMIC_FLOOR_1","Mimic","CONSECRATED_BEAST","Beast","TOMB_GUARDIAN","TOMB_SPIDER","Spider","FLOOR_CONFIGS_BY_INDEX","bosses","LICH","w","mimic","altEnemies","ZERO_REWARD","gold","xp","status","armorDown","resDown","attackDown","armorUp","attackUp","resUp","justGold","justXp","justRandomItem","Theme","CHARACTER_XP_MAX","CHARACTER_CLASS_COLORS","BASE_CHARACTER","isCharacter","icon","partyId","experience","class","healthOffset","inspirationOffset","tags","weapon","consumables","possibleRewards","health","BASE_WEAPON","Lich","LICH_SWORD","CLASS_WEAPONS","BOSS_ITEMS","resolveCheck","character","key","statValue","getBaseStatValue","roll","DiceRoll","total","CLASS_ARMOR","considateConsumableListToStack","forEach","s","consumable","count","updateStackItem","FISTS","CELESTIAL_LOTUS","BEAST_DRUG","CURE","CURE_POTION","FIREBOMB","weaponDamageOverride","ITEM_RARITY_COLORS","common","uncommon","rare","CLASS_STARTING_CONSUMABLES","CHARACTER_RESOURCES","checkForProcessedCharacter","processed","Error","makeCharacter","characterClass","processCharacter","isCapKey","capStats","r","getSkills","statusImmunities","baseVigor","startingHealth","maxHealth","maxInspiration","inspiration","rawStats","getDamageResistance","hasStatus","statusType","hasAnyStatus","statusTypes","some","hasImmunity","getReflectedDamage","target","rawDamage","commitDamage","ignoreResistance","pc","rawDamageValue","ceil","decrementStatusDurations","addMultipleStatus","types","durationOverride","statusConfig","existingStatus","find","findStatus","addStatus","checkStatus","levelUp","makeRandom","max","isParty","obj","checkForProcessedParty","party","characters","findCharacterInParty","processParty","updateCharacter","characterId","updater","makeParty","sideIndex","floorConfig","makeBossParty","config","getRolledRewards","checkedCharacter","failed","rewards","i","getRewardsFromCharacter","commitRewards","goldMultiplier","addExperience","xpToNextLevel","PLAYER_PARTY_ID","SET_GOLD","actionCreators","payload","item","updateParty","upsertCharacter","deleteCharacter","upsertItem","setGold","jack","jim","john","INITIAL_STATE","buildRandomEncounter","hex","isShop","getDepth","getSideIndex","isSide","q","isCenter","isValueEqual","CENTER_HEX","MIN_HEX","isEnd","buildRandomEncounterType","FLOOR_SIZE","encounter","reward","completed","boss","isMimic","isOpened","costs","getItemCost","results","makeHex","makeEncounterArray","maxQ","maxR","shopIndex","ri","e","makeFloor2","encounters","loading","itemId","setTimeout","chooseNext","nextFloor","removeItem","completeCurrent","openCurrent","updateCurrentFloor","floors","defaultValue","started","currentHex","currentEncounter","previousEncounter","GameStateContext","React","createContext","useGameStateContext","useContext","GameStateContextProvider","props","children","useSelector","game","useState","setStarted","JSON","stringify","setPreviousEncounter","useEffect","Provider","defaultContextValue","rawParty","activeCharacter","findCharacter","findRawCharacter","setActiveCharacter","equipItem","unequipItem","purchaseItem","cost","sellItem","refreshParty","PartyContext","PartyContextProvider","activeCharacterId","setActiveCharacterId","existingArmor","equipArmor","existingWeapon","equipWeapon","unequipArmor","usePartyContext","isOpen","contents","callback","blocking","styles","OPEN","CLOSE","style","reducer","coreFunction","ModalContext","open","close","setBlocking","setPayload","setContents","setCallback","setStyles","useModalContext","getContextValue","Modal","setAppElement","ModalContextProvider","reducerValue","useReducer","context","onRequestClose","content","backgroundColor","color","width","margin","bottom","borderColor","modal","overlay","zIndex","FlexContainer","styled","display","flexDirection","$direction","flex","$full","justifyContent","$center","FullContainer","Button","cursor","background","boxShadow","textShadow","border","outline","padding","userSelect","RedButton","withStyle","fontWeight","borderTop","borderBottom","animationDirection","animationIterationCount","animationName","Icon","src","shadow","onClick","setLoading","svg","setSvg","fetch","then","text","className","height","dangerouslySetInnerHTML","__html","Hover","delay","internalHovering","setInternalHovering","isHovering","setIsHovering","guid","setGuid","useLayoutEffect","onMouseEnter","preventDefault","stopPropagation","onMouseLeave","Tooltip","direction","tagName","arrow","HoverToolTip","ClickToolTip","setIsOpen","ref","useRef","handler","listener","event","contains","document","addEventListener","removeEventListener","useOnClickOutside","p","v","BoxContainer","substyle","dark","tag","Element","boxSizing","SKILL_ICONS","Punch","Shot","Headshot","PinDown","Flurry","SpreadShot","Arcane","Nova","Blast","TimeJump","Enflame","Engulf","Ring","Reverberate","Smash","Strike","Swing","Chop","Thrust","Earthquake","Shockwave","Ripple","Crush","AxeSpin","Cleave","Slash","Lunge","Stab","Slice","Swipe","Fire","Snipe","FanFire","Stun","Reset","Taunt","Slow","Protect","Heal","Bless","PoisonKnife","Firebomb","CurePotion","Restore","Rush","Vanish","EvadeUp","ArmorUp","AttackUp","ArmorDown","STATUS_ICONS","Evasive","Stunned","Targeted","Protected","Poisoned","Burning","Bleeding","Frozen","SpeedDown","ResistanceDown","Cursed","STAT_ICONS","Vigor","Strength","Brain","Hand","Masks","Agility","Clover","ARMOR_TYPE_ICONS","MagicArmor","ClothArmor","Armor","shield","Shield","ward","MagicShield","footwear","Footwear","hat","Hat","MagicHat","helmet","Helmet","pendant","Pendant","ring","WEAPON_TYPE_ICONS","Axe","Blunt","Bow","Dagger","Chime","Handgun","MagicStaff","Scythe","Sword","Greatsword","Fist","RESOURCE_ICONS","Weapon","offhand","body","head","feet","CONSUMABLE_ITEM_ICONS","Godsbeard","Lotus","BeastDrug","CONSUMABLE_ITEM_COLORS","CHARACTER_CLASS_ICONS","Executioner","Bard","Hunter","Reaper","Scholar","Hobo","Div","transform","Badge","withWrapper","$style","position","$absolute","fontFamily","$size","alignItems","lineHeight","borderRadius","$color","top","$top","$bottom","right","$right","left","$left","transition","SkillChecks","perfect","every","check","label","SkillCheck","iconSize","crit","colors","getPerfectStatusColors","opacity","getColor","X","defense_key_colors","StatsPreview","fontSize","textTransform","getDamageColor","ItemTitle","$rarity","ItemSubtitle","ItemCard","showBuyButton","buyText","onBuyClick","isArmor","isWeapon","rarityColor","textAlign","borderWidth","whiteSpace","marginBottom","marginTop","marginRight","marginLeft","minHeight","Melee","Ranged","Breakable","getItem","CombatVictoryModalPure","title","showOther","onEquipClick","onNextClick","setItems","first","next","Gold","XP","CombatVictoryModal","consolidatedRewards","consolidateRewards","makeCombatQueue","sortedCharacters","sort","validateQueue","AGILITY_OFFSET","consolidateQueue","queue","Number","POSITIVE_INFINITY","getMin","shiftQueue","getFirst","commitQueueUpdates","source","pcs","shiftedQueue","PERFECT_DISPLAY_INFO","splash","pierce","heal","getTargetSkillResult","sourceResult","dodgeResult","dodgeSuccess","getRawDamage","totalDamage","reflectedDamage","loggedDamgge","getSkillResult","targets","inspirationUsed","rollResults","passedCount","criticalHitSuccess","rollDamageModifier","round","weaponRangeOverride","accuracySuccess","weaponDidBreak","splashDamage","addedStatus","getSourceSkillResult","targetResults","resolveSkillTarget","makeSkillTarget","getSkillDamage","getPerfectText","perfectKeys","base","getPerfectKeys","pre","partyUpdater","commitSkillResults","playerParty","enemyParty","targetResult","sourceParty","targetParty","localUpdate","selectedSkill","selectedTargets","roundResults","activeRound","isRunning","isRenderingResult","onSkillSelect","onTargetsSelect","start","commit","equipItemCombat","CombatContext","useCombatContext","CombatContextProvider","setEnemyParty","history","useHistory","setIsRunning","setIsRenderingResult","setQueue","resultCommitter","roundId","setRoundId","setRoundResults","setActiveRound","selectedTarget","setSelectedTarget","setSelectedSkill","completeRound","useCallback","targetedCharacters","t","getSkillTargetOptions","getAIAction","execEnemyTurn","push","consumableIndex","nextTarget","roundTarget","Perfect","show","useSpring","div","RoundResultRenderer","isModal","RoundResult","isDone","setIsDone","activeIndex","setActiveIndex","stream","Kefir","sequentially","onValue","onEnd","later","showPerfect","isPlayer","showTarget","SkillPreview","perfectChance","minWidth","getStatColor","StatBar","paddingTop","paddingBottom","playerCanEquipItem","openCharacterInventoryId","showSkillTooltips","hoverQueueCharacterId","onCharacterConsumableClick","setPlayerCanEquipItem","setOpenCharacterInventoryId","setOnCharacterConsumableClick","fn","setShowSkillTooltips","setHoverQueueCharacterId","UIContext","useUIContext","UIContextProvider","_setOnCharacterConsumableClick","ItemRow","$disabled","paddingLeft","Items","setActiveItem","disabled","onHover","canUnequip","Item","distance","Name","CharacterIcon","iconStyle","overflow","Image","Row","$active","ActionsRow","WeaponList","canEquip","onEquipItem","activeItemId","setActiveItemId","condenseListToStack","localeCompare","StatRow","withStyleDeep","Stats","k","Stat","ACTIVE_CHARACTER_MENU_KEYS","render","Weapons","MenuSelect","activeKey","onActiveKeyChange","option","paddingRight","HoverArea","activeItem","foundArmor","Hexagon","childStyle","mod","boxW","boxH","triH","triW","tHeight","borderRight","borderLeft","HexBadge","stroke","rotate","angle","HoverHexBadge","PartyActiveCharacter","activeMenuKey","setActiveMenuKey","activeOption","o","maxHeight","ArmorList","EquipItemModal","CombatActions","Fragment","Inventory","Monospace","Gauge2","percentage","oldPercentage","setOldPercentage","from","to","friction","mass","tension","maxWidth","NumberChange","previousValue","setPreviousValue","n","clamp","HealthGauge","showNumbers","XPGauge","TagPreview","immunity","usePlayerCharacterNotifications","shake","previousHealth","setPreviousHealth","previousLevel","setPreviousLevel","healthDiff","abs","lastRound","chResult","Health","Toast","animation","useTransition","enter","leave","LocalToastRp","springConfig","useElementShake","immediate","reverse","shakeStyles","exec","EnemyCharacter","isBoss","active","CombatParty","AppHeader","PartyResources","CombatQueue","sortedIds","getSortedIds","bigList","NEGATIVE_INFINITY","getMax","widthCoef","Span","SkillSpan","CombatLogContext","combatLog","clear","useCombatLogContext","CombatLogContextProvider","setCombatLog","deadLog","setDeadLog","NameSpan","isUserParty","isEnemyParty","NameSpanBuilder","log","line","dLog","latestRounds","baseRound","subTarget","splashDamageResistance","CombatLog","scrollRef","isExpanded","setIsExpanded","scrollIntoView","behavior","Combat","useCombatStart","makeRoute","path","Component","RouteController","CardList","flexWrap","tabs","query","toLowerCase","Shop","setQuery","activeTab","setActiveTab","tab","placeholder","onChange","overflowY","Shrine","setResults","BossRewards","chosenReward","setChosenReward","Chest","ChestIcon","NonCombatEncounter","HeadingSm","textDecoration","Text","ENCOUNTER_TEXTS","Choice","currentFloor","EncounterActions","Boss","d","fill-rule","Random","Start","Hex","adjacent","cellStyle","Color","darken","rgb","toString","h","getHexIcon","Grid","hexagons","GridGenerator","triangle","activeHex","setActiveHex","dx","dy","stdDeviation","x","y","origin","spacing","flat","Unknown","Party","parties","rc","StartCharacterCard","CONSUMABLE_DESCRIPTIONS","PartyCharacterConsumables","onStackClick","filler","f","ConsumableBox","HEIGHT","PartyCharacterConsumable","PartyCharacterConsumableTooltip","getText","CharacterStat","statKey","ResourceE","Actions","inventoryOpen","inventoryStyle","Wrapper","animated","Halo","$targeted","$light","leftR","PartyCharacter","selected","showActions","onConsumableClick","targetIds","PlayerParty","onCharacterClick","showConfirmButton","LinkedCombatContext","combatParty","setCombatParty","AppBg","baseBg","bg","Forest1","Forest2","Forest3","Dungeon1","Dungeon2","Dungeon3","Dungeon4","getEncounterBg","backgroundSize","App","Boolean","window","location","hostname","match","engine","Styletron","store","createStore","combineReducers","compose","applyMiddleware","thunk","ReactDOM","StrictMode","debug","debugAfterHydration","basename","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,4C,qBCA3CD,EAAOC,QAAU,IAA0B,qC,iBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,kBCA3CD,EAAOC,QAAU,IAA0B,+B,yBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,iBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,2BCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,kD,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,iBCA3CD,EAAOC,QAAU,IAA0B,yC,sCCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,iBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,mECA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,gD,gBCA3CD,EAAOC,QAAU,IAA0B,wC,iBCA3CD,EAAOC,QAAU,IAA0B,0C,iBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IA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","file":"static/js/main.69a2ecf6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/7.d2e528ea.png\";","module.exports = __webpack_public_path__ + \"static/media/pentagram-rose.d7458af6.svg\";","module.exports = __webpack_public_path__ + \"static/media/cultist.998af3b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/coins.97dc8c40.svg\";","module.exports = __webpack_public_path__ + \"static/media/broadsword.47ecfebc.svg\";","module.exports = __webpack_public_path__ + \"static/media/4.56cbed86.png\";","module.exports = __webpack_public_path__ + \"static/media/battered-axe.819d2726.svg\";","module.exports = __webpack_public_path__ + \"static/media/dodging.3c689d6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/all-for-one.33b25b62.svg\";","module.exports = __webpack_public_path__ + \"static/media/8.d80166bd.png\";","module.exports = __webpack_public_path__ + \"static/media/1.31fafbe8.png\";","module.exports = __webpack_public_path__ + \"static/media/sprint.968b443a.svg\";","module.exports = __webpack_public_path__ + \"static/media/scythe.f0a97d33.svg\";","module.exports = __webpack_public_path__ + \"static/media/ringing-bell.f8953cca.svg\";","module.exports = __webpack_public_path__ + \"static/media/bone-knife.8d6d549d.svg\";","module.exports = __webpack_public_path__ + \"static/media/drink-me.2ee1fbb7.svg\";","module.exports = __webpack_public_path__ + \"static/media/molotov.7ba33ac3.svg\";","module.exports = __webpack_public_path__ + \"static/media/perspective-dice-six.8b7e2589.svg\";","module.exports = __webpack_public_path__ + \"static/media/high-shot.eed9def8.svg\";","module.exports = __webpack_public_path__ + \"static/media/shieldcomb.802f20f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/armor-upgrade.c51f9198.svg\";","module.exports = __webpack_public_path__ + \"static/media/armor-downgrade.71dd2b83.svg\";","module.exports = __webpack_public_path__ + \"static/media/knapsack.62049a62.svg\";","module.exports = __webpack_public_path__ + \"static/media/hammer-drop.120a92c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.a7dcd7d0.png\";","module.exports = __webpack_public_path__ + \"static/media/3.5b81afea.png\";","module.exports = __webpack_public_path__ + \"static/media/2.22bba3d5.png\";","module.exports = __webpack_public_path__ + \"static/media/chest-armor.f1f52a3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross-shield.6feb257e.svg\";","module.exports = __webpack_public_path__ + \"static/media/leather-boot.89b85474.svg\";","module.exports = __webpack_public_path__ + \"static/media/visored-helm.1f2ced7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/ring.5187be72.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-necklace.fad66171.svg\";","module.exports = __webpack_public_path__ + \"static/media/knife-thrust.1e29ef7c.svg\";","module.exports = __webpack_public_path__ + \"static/media/overlord-helm.03e5b513.svg\";","module.exports = __webpack_public_path__ + \"static/media/wolf-head.4e7bf362.svg\";","module.exports = __webpack_public_path__ + \"static/media/raven.581ee1b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/snake.03f8f0ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/witch-flight.4d7f9b27.svg\";","module.exports = __webpack_public_path__ + \"static/media/troll.8e45be35.svg\";","module.exports = __webpack_public_path__ + \"static/media/werewolf.fa211e2a.svg\";","module.exports = __webpack_public_path__ + \"static/media/boar-tusks.bb1e24d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/unfriendly-fire.8437b1a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/haunting.ecedf8b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/daemon-skull.ec5b5916.svg\";","module.exports = __webpack_public_path__ + \"static/media/spectre.a7c36843.svg\";","module.exports = __webpack_public_path__ + \"static/media/mimic-chest.dc67da5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/diablo-skull.18710d12.svg\";","module.exports = __webpack_public_path__ + \"static/media/harry-potter-skull.c9854d9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/spider-eye.03f932c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/laurel-crown.00b6e803.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-beats.6b1fff9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/biceps.e62c221f.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain.ce65603a.svg\";","module.exports = __webpack_public_path__ + \"static/media/hand.9a950e42.svg\";","module.exports = __webpack_public_path__ + \"static/media/lyre.b0409ce1.svg\";","module.exports = __webpack_public_path__ + \"static/media/clover.df6a0d57.svg\";","module.exports = __webpack_public_path__ + \"static/media/robe.5b61ecba.svg\";","module.exports = __webpack_public_path__ + \"static/media/scale-mail.cb5ff7d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/lightning-shield.85367254.svg\";","module.exports = __webpack_public_path__ + \"static/media/robin-hood-hat.6bab1449.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointy-hat.d042ac98.svg\";","module.exports = __webpack_public_path__ + \"static/media/battle-axe.47a5ba50.svg\";","module.exports = __webpack_public_path__ + \"static/media/gavel.e0256fff.svg\";","module.exports = __webpack_public_path__ + \"static/media/heavy-arrow.56b29a8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/bowie-knife.e7821736.svg\";","module.exports = __webpack_public_path__ + \"static/media/revolver.25251236.svg\";","module.exports = __webpack_public_path__ + \"static/media/wizard-staff.3e6091b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/croc-sword.dfa5ecf6.svg\";","module.exports = __webpack_public_path__ + \"static/media/fist.d1b25a44.svg\";","module.exports = __webpack_public_path__ + \"static/media/herbs-bundle.e02bcec1.svg\";","module.exports = __webpack_public_path__ + \"static/media/lotus-flower.4b207eda.svg\";","module.exports = __webpack_public_path__ + \"static/media/medicine-pills.ef75e681.svg\";","module.exports = __webpack_public_path__ + \"static/media/executioner-hood.6e796b5c.svg\";","module.exports = __webpack_public_path__ + \"static/media/cowled.d0cad9db.svg\";","module.exports = __webpack_public_path__ + \"static/media/female-vampire.27d5f882.svg\";","module.exports = __webpack_public_path__ + \"static/media/wizard-face.2a49683a.svg\";","module.exports = __webpack_public_path__ + \"static/media/kenku-head.3292e596.svg\";","module.exports = __webpack_public_path__ + \"static/media/shield-impact.54fdc5c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/energy-arrow.514fc56c.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire-zone.42e13657.svg\";","module.exports = __webpack_public_path__ + \"static/media/magic-swirl.854dc419.svg\";","module.exports = __webpack_public_path__ + \"static/media/heavy-timer.1072a406.svg\";","module.exports = __webpack_public_path__ + \"static/media/extra-time.4d418333.svg\";","module.exports = __webpack_public_path__ + \"static/media/lucifer-cannon.34d680ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/firewall.6efb9f12.svg\";","module.exports = __webpack_public_path__ + \"static/media/flat-hammer.dff14efb.svg\";","module.exports = __webpack_public_path__ + \"static/media/plain-dagger.0509dd2c.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointy-sword.bd82b38d.svg\";","module.exports = __webpack_public_path__ + \"static/media/axe-swing.6958cc19.svg\";","module.exports = __webpack_public_path__ + \"static/media/saber-slash.54b5f3f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/wave-strike.1fe6dbab.svg\";","module.exports = __webpack_public_path__ + \"static/media/sparkling-sabre.3a0fdc2b.svg\";","module.exports = __webpack_public_path__ + \"static/media/bordered-shield.56c12b47.svg\";","module.exports = __webpack_public_path__ + \"static/media/resonance.4c1d217b.svg\";","module.exports = __webpack_public_path__ + \"static/media/gunshot.cf3eceba.svg\";","module.exports = __webpack_public_path__ + \"static/media/crosshair.d2c9a9ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/bullet-impacts.00562b6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/backward-time.d0246d45.svg\";","module.exports = __webpack_public_path__ + \"static/media/snail.bbbe7b78.svg\";","module.exports = __webpack_public_path__ + \"static/media/double-shot.70211522.svg\";","module.exports = __webpack_public_path__ + \"static/media/health-normal.0da85e24.svg\";","module.exports = __webpack_public_path__ + \"static/media/embrassed-energy.58fa9df0.svg\";","module.exports = __webpack_public_path__ + \"static/media/life-support.c0c7c040.svg\";","module.exports = __webpack_public_path__ + \"static/media/punch.2811bb9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/ubisoft-sun.30335592.svg\";","module.exports = __webpack_public_path__ + \"static/media/star-swirl.3045bd1f.svg\";","module.exports = __webpack_public_path__ + \"static/media/targeted.b4ce8dd7.svg\";","module.exports = __webpack_public_path__ + \"static/media/sticky-boot.f097559f.svg\";","module.exports = __webpack_public_path__ + \"static/media/biohazard.cdfb567d.svg\";","module.exports = __webpack_public_path__ + \"static/media/flame.332be8c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/bleeding-wound.8d92779f.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowflake-2.a0b68bb3.svg\";","module.exports = __webpack_public_path__ + \"static/media/broken-shield.c26ddd72.svg\";","module.exports = __webpack_public_path__ + \"static/media/split-cross.fa0be1a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/broken-bone.d1c4182c.svg\";","module.exports = __webpack_public_path__ + \"static/media/leather-armor.f3d5462f.svg\";","module.exports = __webpack_public_path__ + \"static/media/locked-chest.4fef2a91.svg\";","module.exports = __webpack_public_path__ + \"static/media/crowned-skull.458d8f78.svg\";","module.exports = __webpack_public_path__ + \"static/media/campfire.7030ad48.svg\";","import { StateCoreT, StateReducerT } from './types'\r\n\r\nexport const makeReducer = (\r\n  core: StateCoreT,\r\n  initialState: any,\r\n): StateReducerT => {\r\n  return (state = initialState, action) => {\r\n    const coreFn = core[action.type]\r\n    if (coreFn) return coreFn(state, action)\r\n    return state\r\n  }\r\n}\r\n","import { useMemo } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nexport const useActions = (actions: any) => {\r\n  const dispatch = useDispatch()\r\n  return useMemo(() => bindActionCreators(actions, dispatch), [\r\n    dispatch,\r\n    actions,\r\n  ])\r\n}\r\n","import { tStats, tBaseStats } from './type'\r\nimport { tCharacterClass } from '../Character/type'\r\n\r\nexport const ZERO_STATS: tStats = {\r\n  vigor: 0,\r\n  strength: 0,\r\n  intelligence: 0,\r\n  dexterity: 0,\r\n  charisma: 0,\r\n  agility: 0,\r\n  luck: 0,\r\n\r\n  armor: 0,\r\n  resistance: 0,\r\n  evasion: 0,\r\n\r\n  maxHealthOffset: 0,\r\n  healthRegeneration: 0,\r\n  damageTakenModifier: 0,\r\n  damageTakenRangeModifiers: {\r\n    melee: 0,\r\n    ranged: 0,\r\n  },\r\n  damageReflection: {\r\n    melee: 0,\r\n    ranged: 0,\r\n  },\r\n\r\n  attackDamageOffset: 0,\r\n  attackDamageModifier: 0,\r\n  criticalChance: 0,\r\n  damageModifiers: {\r\n    flying: 0,\r\n    undead: 0,\r\n    beast: 0,\r\n  },\r\n\r\n  queueConsolidationModifier: 0,\r\n  queueValueSet: undefined,\r\n\r\n  goldModifier: 0,\r\n  maxInspirationOffset: 0,\r\n  consumableHealthGainOffset: 0,\r\n  minHealthOffset: 0,\r\n}\r\n\r\nexport const BASE_C_STATS: tStats = {\r\n  ...ZERO_STATS,\r\n  damageTakenModifier: 1,\r\n  attackDamageModifier: 1,\r\n  criticalChance: 5,\r\n  queueConsolidationModifier: 1,\r\n  consumableHealthGainOffset: 15,\r\n}\r\n\r\nexport const CLASS_STATS: Record<tCharacterClass, tStats> = {\r\n  executioner: {\r\n    ...BASE_C_STATS,\r\n    strength: 78,\r\n    vigor: 75,\r\n    intelligence: 44,\r\n    dexterity: 70,\r\n    charisma: 52,\r\n    agility: 58,\r\n    luck: 50,\r\n    armor: 1,\r\n    resistance: 0,\r\n    evasion: 8,\r\n  },\r\n  ranger: {\r\n    ...BASE_C_STATS,\r\n    strength: 52,\r\n    vigor: 66,\r\n    intelligence: 46,\r\n    dexterity: 78,\r\n    charisma: 64,\r\n    agility: 78,\r\n    luck: 50,\r\n    armor: 1,\r\n    resistance: 0,\r\n    evasion: 20,\r\n  },\r\n  reaper: {\r\n    ...BASE_C_STATS,\r\n    strength: 48,\r\n    vigor: 60,\r\n    intelligence: 42,\r\n    dexterity: 76,\r\n    charisma: 72,\r\n    agility: 74,\r\n    luck: 50,\r\n    armor: 1,\r\n    resistance: 0,\r\n    evasion: 17,\r\n  },\r\n  student: {\r\n    ...BASE_C_STATS,\r\n    strength: 42,\r\n    vigor: 60,\r\n    intelligence: 78,\r\n    dexterity: 66,\r\n    charisma: 70,\r\n    agility: 70,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 1,\r\n    evasion: 13,\r\n  },\r\n  patrician: {\r\n    ...BASE_C_STATS,\r\n    strength: 44,\r\n    vigor: 50,\r\n    intelligence: 70,\r\n    dexterity: 68,\r\n    charisma: 78,\r\n    agility: 68,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 1,\r\n    evasion: 11,\r\n  },\r\n  drifter: {\r\n    ...BASE_C_STATS,\r\n    strength: 70,\r\n    vigor: 70,\r\n    intelligence: 70,\r\n    dexterity: 70,\r\n    charisma: 70,\r\n    agility: 70,\r\n    luck: 30,\r\n    armor: 1,\r\n    resistance: 1,\r\n    evasion: 13,\r\n  },\r\n  enemy: BASE_C_STATS,\r\n}\r\n\r\nexport const DAMAGE_BONUS_KEYS: (keyof tStats)[] = [\r\n  'goldModifier',\r\n  'attackDamageOffset',\r\n  'attackDamageModifier',\r\n  'criticalChance',\r\n]\r\nexport const DEFENSE_BONUS_KEYS: (keyof tStats)[] = [\r\n  'armor',\r\n  'resistance',\r\n  'evasion',\r\n  'healthRegeneration',\r\n  'damageReflection',\r\n]\r\nexport const HEALTH_FOCUS_BONUS_KEYS: (keyof tStats)[] = [\r\n  'maxHealthOffset',\r\n  'maxInspirationOffset',\r\n]\r\nexport const STAT_BONUS_KEYS: (keyof tBaseStats)[] = [\r\n  'vigor',\r\n  'strength',\r\n  'intelligence',\r\n  'dexterity',\r\n  'charisma',\r\n  'agility',\r\n  'luck',\r\n]\r\n\r\nexport const STAT_KEY_LABELS: Record<keyof tStats, string> = {\r\n  strength: ' Strength',\r\n  vigor: ' Vigor',\r\n  intelligence: ' Intelligence',\r\n  dexterity: ' Dexterity',\r\n  charisma: ' Charisma',\r\n  agility: ' Agility',\r\n  luck: ' Luck',\r\n  evasion: ' Evasion',\r\n  criticalChance: '% Crit Chance',\r\n\r\n  armor: ' Armor',\r\n  resistance: ' Resistance',\r\n\r\n  maxHealthOffset: ' Health',\r\n  healthRegeneration: ' Health Regen',\r\n  damageReflection: ' Damage Reflection',\r\n  damageTakenModifier: '% Recieved Damage',\r\n  damageTakenRangeModifiers: '% Recieved Damage from certain sources',\r\n\r\n  damageModifiers: ' Damage to certain Enemeies',\r\n\r\n  queueConsolidationModifier: ' Queue Consolidation Modifier',\r\n  queueValueSet: ' Queue Value Set',\r\n\r\n  attackDamageOffset: ' Raw Damage',\r\n  attackDamageModifier: '% Attack Damage',\r\n\r\n  goldModifier: '% Gold Recieved',\r\n  maxInspirationOffset: ' Max Inspiration',\r\n  minHealthOffset: ' Minumum Health',\r\n  consumableHealthGainOffset: ' HP from Consumables',\r\n}\r\n","export const undefAdd = (\r\n  a: number | undefined,\r\n  b: number | undefined,\r\n): number | undefined => {\r\n  if (a === undefined && b === undefined) return undefined\r\n  if (a === undefined && b !== undefined) return b\r\n  if (a !== undefined && b === undefined) return a\r\n  if (a !== undefined && b !== undefined) return a + b\r\n}\r\n","export const getRandom = <T>(items: T[]) =>\r\n  items[Math.floor(Math.random() * items.length)]\r\n","export const noneg = (value: number) => (value > 0 ? value : 0)\r\n","import { tStats } from './type'\r\nimport { ZERO_STATS } from './constants'\r\nimport { undefAdd } from '../../util/undefAdd'\r\nimport { noneg } from '../../util'\r\n\r\nexport const combineStats = (...stats: tStats[]) => {\r\n  return stats.reduce(\r\n    (result, stats) => ({\r\n      vigor: result.vigor + stats.vigor,\r\n      strength: result.strength + stats.strength,\r\n      intelligence: result.intelligence + stats.intelligence,\r\n      dexterity: result.dexterity + stats.dexterity,\r\n      charisma: result.charisma + stats.charisma,\r\n      agility: result.agility + stats.agility,\r\n      luck: result.luck + stats.luck,\r\n\r\n      armor: result.armor + stats.armor,\r\n      resistance: result.resistance + stats.resistance,\r\n      evasion: result.evasion + stats.evasion,\r\n\r\n      maxHealthOffset: result.maxHealthOffset + stats.maxHealthOffset,\r\n      healthRegeneration: result.healthRegeneration + stats.healthRegeneration,\r\n      damageTakenModifier:\r\n        result.damageTakenModifier + stats.damageTakenModifier,\r\n      damageTakenRangeModifiers: {\r\n        melee:\r\n          result.damageTakenRangeModifiers.melee +\r\n          stats.damageTakenRangeModifiers.melee,\r\n        ranged:\r\n          result.damageTakenRangeModifiers.ranged +\r\n          stats.damageTakenRangeModifiers.ranged,\r\n      },\r\n      damageReflection: {\r\n        melee: result.damageReflection.melee + stats.damageReflection.melee,\r\n        ranged: result.damageReflection.ranged + stats.damageReflection.ranged,\r\n      },\r\n\r\n      attackDamageOffset: result.attackDamageOffset + stats.attackDamageOffset,\r\n      attackDamageModifier:\r\n        result.attackDamageModifier + stats.attackDamageModifier,\r\n      criticalChance: result.criticalChance + stats.criticalChance,\r\n      damageModifiers: {\r\n        flying: result.damageModifiers.flying + stats.damageModifiers.flying,\r\n        undead: result.damageModifiers.undead + stats.damageModifiers.undead,\r\n        beast: result.damageModifiers.beast + stats.damageModifiers.beast,\r\n      },\r\n\r\n      queueConsolidationModifier:\r\n        result.queueConsolidationModifier + stats.queueConsolidationModifier,\r\n      queueValueSet: undefAdd(result.queueValueSet, stats.queueValueSet),\r\n\r\n      goldModifier: result.goldModifier + stats.goldModifier,\r\n      maxInspirationOffset:\r\n        result.maxInspirationOffset + stats.maxInspirationOffset,\r\n      consumableHealthGainOffset:\r\n        result.consumableHealthGainOffset + stats.consumableHealthGainOffset,\r\n      minHealthOffset: result.minHealthOffset + stats.minHealthOffset,\r\n    }),\r\n    ZERO_STATS,\r\n  )\r\n}\r\n\r\nexport const multiplyStats = (stats: tStats, modifier: number): tStats => ({\r\n  vigor: stats.vigor * modifier,\r\n  strength: stats.strength * modifier,\r\n  intelligence: stats.intelligence * modifier,\r\n  dexterity: stats.dexterity * modifier,\r\n  charisma: stats.charisma * modifier,\r\n  agility: stats.agility * modifier,\r\n  luck: stats.luck * modifier,\r\n\r\n  armor: stats.armor * modifier,\r\n  resistance: stats.resistance * modifier,\r\n  evasion: stats.evasion * modifier,\r\n\r\n  maxHealthOffset: stats.maxHealthOffset * modifier,\r\n  healthRegeneration: stats.healthRegeneration * modifier,\r\n  damageTakenModifier: stats.damageTakenModifier * modifier,\r\n  damageTakenRangeModifiers: {\r\n    melee: stats.damageTakenRangeModifiers.melee * modifier,\r\n    ranged: stats.damageTakenRangeModifiers.ranged * modifier,\r\n  },\r\n  damageReflection: {\r\n    melee: stats.damageReflection.melee * modifier,\r\n    ranged: stats.damageReflection.ranged * modifier,\r\n  },\r\n\r\n  attackDamageOffset: stats.attackDamageOffset * modifier,\r\n  attackDamageModifier: stats.attackDamageModifier * modifier,\r\n  criticalChance: stats.criticalChance * modifier,\r\n  damageModifiers: {\r\n    flying: stats.damageModifiers.flying * modifier,\r\n    undead: stats.damageModifiers.undead * modifier,\r\n    beast: stats.damageModifiers.beast * modifier,\r\n  },\r\n\r\n  queueConsolidationModifier: stats.queueConsolidationModifier * modifier,\r\n  queueValueSet: stats.queueValueSet,\r\n\r\n  goldModifier: stats.goldModifier * modifier,\r\n  maxInspirationOffset: stats.maxInspirationOffset * modifier,\r\n  consumableHealthGainOffset: stats.consumableHealthGainOffset * modifier,\r\n  minHealthOffset: stats.minHealthOffset * modifier,\r\n})\r\n\r\nconst isCapKey = (key: keyof tStats) => {\r\n  const keys: (keyof tStats)[] = [\r\n    'vigor',\r\n    'strength',\r\n    'dexterity',\r\n    'intelligence',\r\n    'charisma',\r\n    'agility',\r\n    'luck',\r\n    'evasion',\r\n    'criticalChance',\r\n  ]\r\n  return keys.includes(key)\r\n}\r\n\r\nexport const capStats = (stats: tStats): tStats => {\r\n  return (Object.keys(stats) as (keyof tStats)[]).reduce((result, key) => {\r\n    if (isCapKey(key) && stats[key]) {\r\n      return {\r\n        ...result,\r\n        [key]: (stats[key] as number) > 95 ? 95 : stats[key],\r\n      }\r\n    }\r\n    return {\r\n      ...result,\r\n      armor: noneg(result.armor),\r\n      resistance: noneg(result.resistance),\r\n    }\r\n  }, stats)\r\n}\r\n","import { tStatusType, tStatusConfig } from './type'\r\nimport { ZERO_STATS } from '../Stats/constants'\r\n\r\nexport const STATUS_CONFIG: Record<tStatusType, tStatusConfig> = {\r\n  bleeding: {\r\n    name: 'Bleeding',\r\n    description: '-10 HP on your turn.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      healthRegeneration: -6,\r\n    },\r\n    immunities: [],\r\n  },\r\n  burning: {\r\n    name: 'Burning',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      healthRegeneration: -6,\r\n    },\r\n    immunities: [],\r\n  },\r\n  // TODO: Different cursed status' for different stats\r\n  'cursed-vigor': {\r\n    name: 'Cursed',\r\n    description: '-15 to Vigor',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      vigor: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-strength': {\r\n    name: 'Cursed',\r\n    description: '-15 to Strength',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      strength: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-dexterity': {\r\n    name: 'Cursed',\r\n    description: '-15 to Dexterity',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      dexterity: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-intelligence': {\r\n    name: 'Cursed',\r\n    description: '-15 to Intelligence',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      intelligence: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-charisma': {\r\n    name: 'Cursed',\r\n    description: '-15 to Charisma',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      charisma: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-agility': {\r\n    name: 'Cursed',\r\n    description: '-15 to Agility',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      agility: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-luck': {\r\n    name: 'Cursed',\r\n    description: '-15 to Luck',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      luck: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  frozen: {\r\n    name: 'Frozen',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      damageTakenModifier: 25,\r\n    },\r\n    immunities: [],\r\n  },\r\n  poisoned: {\r\n    name: 'Poisoned',\r\n    description: \"-5 HP on this character's turn and -5 to each stat.\",\r\n    canStack: true,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      vigor: -5,\r\n      strength: -5,\r\n      intelligence: -5,\r\n      dexterity: -5,\r\n      charisma: -5,\r\n      healthRegeneration: -3,\r\n    },\r\n    immunities: [],\r\n  },\r\n  // TODO: Shocked status\r\n  shocked: {\r\n    name: 'Shocked',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  stunned: {\r\n    name: 'Stunned',\r\n    description: 'This character will not progress on the battle timeline.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 2,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueConsolidationModifier: -1,\r\n    },\r\n    immunities: [],\r\n  },\r\n  // TODO: Wet Status\r\n  wet: {\r\n    name: 'Wet',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'armor-up': {\r\n    name: 'Armor Up',\r\n    description: '+5 Armor',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      armor: 5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'attack-up': {\r\n    name: 'Attack Up',\r\n    description: '+15 Attack Damage',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      attackDamageOffset: 15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'evade-up': {\r\n    name: 'Evade Up',\r\n    description: '+15 Evasion',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      evasion: 15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'resistance-up': {\r\n    name: 'Resistance Up',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      resistance: 5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'speed-up': {\r\n    name: 'Speed Up',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      agility: 15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'armor-down': {\r\n    name: 'Armor Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      armor: -5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'attack-down': {\r\n    name: 'Attack Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      attackDamageOffset: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'evade-down': {\r\n    name: 'Evade Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      evasion: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'resistance-down': {\r\n    name: 'Resistance Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      resistance: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'speed-down': {\r\n    name: 'Speed Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      agility: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  rushed: {\r\n    name: 'Rushed',\r\n    description: 'Bring to front of queue.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 0,\r\n    },\r\n    immunities: [],\r\n  },\r\n  interrupted: {\r\n    name: 'Interrupted',\r\n    description: 'Set back 70 unites.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 70,\r\n    },\r\n    immunities: [],\r\n  },\r\n  reset: {\r\n    name: 'Reset',\r\n    description: 'Set back 100 units.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 100,\r\n    },\r\n    immunities: [],\r\n  },\r\n  evasive: {\r\n    name: 'Evasive',\r\n    description: 'Non-perfect attacks will miss when targeting this character.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  resilient: {\r\n    name: 'Resilient',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  protected: {\r\n    name: 'Protected',\r\n    description: 'Negate the next bit of damage.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  targeted: {\r\n    name: 'Targeted',\r\n    description: 'All enemies will attack this player.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 6,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  cure: {\r\n    name: 'Cure',\r\n    description: 'Remove Poisoned, Bleeding, and Burning',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: ['poisoned', 'bleeding', 'burning', 'frozen', 'wet', 'shocked'],\r\n  },\r\n  blessed: {\r\n    name: 'Blessed',\r\n    description: 'Temporary Curse Immunity',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: ZERO_STATS,\r\n    immunities: [\r\n      'cursed-agility',\r\n      'cursed-charisma',\r\n      'cursed-dexterity',\r\n      'cursed-intelligence',\r\n      'cursed-luck',\r\n      'cursed-strength',\r\n      'cursed-vigor',\r\n    ],\r\n  },\r\n}\r\n","import { tWeaponClassDamageConfig, tWeaponTypeDamageConfig } from './type'\r\n\r\nexport const GLOBAL_DAMAGE_OFFSETS: tWeaponTypeDamageConfig = {\r\n  axe: 0,\r\n  hammer: 0,\r\n  sword: 0,\r\n  greatsword: 0,\r\n  bow: 0,\r\n  dagger: 0,\r\n  scythe: 0,\r\n  catalyst: 0,\r\n  chime: 0,\r\n  pistol: 0,\r\n  fist: 0,\r\n  enemy: 0,\r\n}\r\nexport const WEAPON_DAMAGE_CONFIG: tWeaponClassDamageConfig = {\r\n  starting: {\r\n    axe: 11,\r\n    hammer: 9,\r\n    sword: 8,\r\n    greatsword: 12,\r\n    bow: 6,\r\n    dagger: 5,\r\n    scythe: 7,\r\n    catalyst: 6,\r\n    chime: 6,\r\n    pistol: 5,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  // LEVEL 1 ccc ur\r\n  rusted: {\r\n    // higher damage than tomb, but worse skills\r\n    axe: 13,\r\n    hammer: 11,\r\n    sword: 10,\r\n    greatsword: 13,\r\n    bow: 12,\r\n    dagger: 7,\r\n    scythe: 10,\r\n    catalyst: 9,\r\n    chime: 9,\r\n    pistol: 7,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  tomb: {\r\n    axe: 15,\r\n    hammer: 12,\r\n    sword: 12,\r\n    greatsword: 15,\r\n    bow: 13,\r\n    dagger: 8,\r\n    scythe: 12,\r\n    catalyst: 12,\r\n    chime: 12,\r\n    pistol: 8,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  buried: {\r\n    axe: 16,\r\n    hammer: 13,\r\n    sword: 12,\r\n    greatsword: 16,\r\n    bow: 14,\r\n    dagger: 9,\r\n    scythe: 13,\r\n    catalyst: 13,\r\n    chime: 13,\r\n    pistol: 9,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  withering: {\r\n    axe: 18,\r\n    hammer: 15,\r\n    sword: 15,\r\n    greatsword: 18,\r\n    bow: 17,\r\n    dagger: 12,\r\n    scythe: 15,\r\n    catalyst: 16,\r\n    chime: 16,\r\n    pistol: 10,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  glass: {\r\n    axe: 22,\r\n    hammer: 18,\r\n    sword: 18,\r\n    greatsword: 22,\r\n    bow: 21,\r\n    dagger: 16,\r\n    scythe: 21,\r\n    catalyst: 21,\r\n    chime: 21,\r\n    pistol: 16,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 2 ccc\r\n  iron: {\r\n    axe: 19,\r\n    hammer: 16,\r\n    sword: 16,\r\n    greatsword: 20,\r\n    bow: 18,\r\n    dagger: 12,\r\n    scythe: 16,\r\n    catalyst: 16,\r\n    chime: 16,\r\n    pistol: 12,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  steel: {\r\n    axe: 20,\r\n    hammer: 17,\r\n    sword: 17,\r\n    greatsword: 20,\r\n    bow: 19,\r\n    dagger: 13,\r\n    scythe: 17,\r\n    catalyst: 17,\r\n    chime: 17,\r\n    pistol: 13,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  stainless: {\r\n    axe: 21,\r\n    hammer: 18,\r\n    sword: 18,\r\n    greatsword: 21,\r\n    bow: 20,\r\n    dagger: 14,\r\n    scythe: 18,\r\n    catalyst: 18,\r\n    chime: 18,\r\n    pistol: 14,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 3 ur rr\r\n  ancient: {\r\n    axe: 24,\r\n    hammer: 21,\r\n    sword: 21,\r\n    greatsword: 25,\r\n    bow: 23,\r\n    dagger: 17,\r\n    scythe: 21,\r\n    catalyst: 21,\r\n    chime: 21,\r\n    pistol: 17,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  crystal: {\r\n    axe: 26,\r\n    hammer: 23,\r\n    sword: 23,\r\n    greatsword: 27,\r\n    bow: 25,\r\n    dagger: 20,\r\n    scythe: 23,\r\n    catalyst: 23,\r\n    chime: 23,\r\n    pistol: 20,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  elemental: {\r\n    axe: 24,\r\n    hammer: 21,\r\n    sword: 21,\r\n    greatsword: 25,\r\n    bow: 23,\r\n    dagger: 17,\r\n    scythe: 21,\r\n    catalyst: 21,\r\n    chime: 21,\r\n    pistol: 17,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  cursed: {\r\n    axe: 25,\r\n    hammer: 22,\r\n    sword: 22,\r\n    greatsword: 26,\r\n    bow: 24,\r\n    dagger: 18,\r\n    scythe: 22,\r\n    catalyst: 22,\r\n    chime: 22,\r\n    pistol: 18,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 4 cuu r\r\n  sharp: {\r\n    axe: 28,\r\n    hammer: 25,\r\n    sword: 25,\r\n    greatsword: 29,\r\n    bow: 26,\r\n    dagger: 21,\r\n    scythe: 25,\r\n    catalyst: 26,\r\n    chime: 26,\r\n    pistol: 21,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  hardened: {\r\n    axe: 30,\r\n    hammer: 27,\r\n    sword: 27,\r\n    greatsword: 31,\r\n    bow: 28,\r\n    dagger: 23,\r\n    scythe: 27,\r\n    catalyst: 28,\r\n    chime: 28,\r\n    pistol: 23,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  engraved: {\r\n    axe: 31,\r\n    hammer: 28,\r\n    sword: 28,\r\n    greatsword: 32,\r\n    bow: 29,\r\n    dagger: 24,\r\n    scythe: 28,\r\n    catalyst: 29,\r\n    chime: 29,\r\n    pistol: 24,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  ethereal: {\r\n    axe: 34,\r\n    hammer: 32,\r\n    sword: 32,\r\n    greatsword: 35,\r\n    bow: 33,\r\n    dagger: 27,\r\n    scythe: 31,\r\n    catalyst: 32,\r\n    chime: 32,\r\n    pistol: 27,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 5 ur mm\r\n  exquisite: {\r\n    axe: 33,\r\n    hammer: 31,\r\n    sword: 31,\r\n    greatsword: 34,\r\n    bow: 32,\r\n    dagger: 26,\r\n    scythe: 30,\r\n    catalyst: 31,\r\n    chime: 31,\r\n    pistol: 26,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  divine: {\r\n    axe: 35,\r\n    hammer: 33,\r\n    sword: 33,\r\n    greatsword: 36,\r\n    bow: 34,\r\n    dagger: 28,\r\n    scythe: 32,\r\n    catalyst: 33,\r\n    chime: 33,\r\n    pistol: 28,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  arcane: {\r\n    axe: 36,\r\n    hammer: 33,\r\n    sword: 33,\r\n    greatsword: 37,\r\n    bow: 35,\r\n    dagger: 29,\r\n    scythe: 33,\r\n    catalyst: 34,\r\n    chime: 34,\r\n    pistol: 29,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  celestial: {\r\n    axe: 38,\r\n    hammer: 35,\r\n    sword: 35,\r\n    greatsword: 39,\r\n    bow: 37,\r\n    dagger: 31,\r\n    scythe: 35,\r\n    catalyst: 36,\r\n    chime: 36,\r\n    pistol: 31,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 6\r\n  mythic: {\r\n    axe: 40,\r\n    hammer: 37,\r\n    sword: 37,\r\n    greatsword: 41,\r\n    bow: 39,\r\n    dagger: 33,\r\n    scythe: 37,\r\n    catalyst: 38,\r\n    chime: 38,\r\n    pistol: 33,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  unique: {\r\n    axe: 40,\r\n    hammer: 37,\r\n    sword: 37,\r\n    greatsword: 41,\r\n    bow: 39,\r\n    dagger: 33,\r\n    scythe: 37,\r\n    catalyst: 38,\r\n    chime: 38,\r\n    pistol: 33,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n}\r\n","import { tWeaponType } from '../type'\r\nimport { tWeaponClass } from './type'\r\n\r\nexport const BASE_WEAPON_TYPES_GOLD: Record<tWeaponType, number> = {\r\n  axe: 30,\r\n  bow: 35,\r\n  catalyst: 30,\r\n  chime: 30,\r\n  dagger: 10,\r\n  greatsword: 40,\r\n  hammer: 25,\r\n  pistol: 15,\r\n  scythe: 35,\r\n  sword: 25,\r\n  fist: 0,\r\n  enemy: 0,\r\n}\r\n\r\nexport const WEAPON_CLASS_GOLD_OFFSETS: Record<tWeaponClass, number> = {\r\n  starting: -20,\r\n  rusted: 0,\r\n  tomb: 5,\r\n  buried: 30,\r\n  withering: 40,\r\n  glass: 60,\r\n\r\n  iron: 75,\r\n  steel: 80,\r\n  stainless: 85,\r\n\r\n  ancient: 100,\r\n  crystal: 150,\r\n  elemental: 155,\r\n  cursed: 155,\r\n\r\n  sharp: 200,\r\n  hardened: 225,\r\n  engraved: 250,\r\n  ethereal: 265,\r\n\r\n  exquisite: 300,\r\n  divine: 320,\r\n  arcane: 340,\r\n  celestial: 350,\r\n\r\n  mythic: 400,\r\n  unique: 400,\r\n}\r\n","import { tWeaponRarityConfig } from './type'\r\n\r\nexport const WEAPON_CLASS_RARIES: tWeaponRarityConfig = {\r\n  starting: 'common',\r\n  rusted: 'common',\r\n  tomb: 'common',\r\n  buried: 'common',\r\n  withering: 'uncommon',\r\n  glass: 'rare',\r\n  iron: 'common',\r\n  steel: 'common',\r\n  stainless: 'common',\r\n  ancient: 'common',\r\n  crystal: 'rare',\r\n  elemental: 'rare',\r\n  cursed: 'rare',\r\n  sharp: 'common',\r\n  hardened: 'uncommon',\r\n  engraved: 'uncommon',\r\n  ethereal: 'rare',\r\n  exquisite: 'uncommon',\r\n  divine: 'rare',\r\n  arcane: 'mythic',\r\n  celestial: 'mythic',\r\n  mythic: 'mythic',\r\n  unique: 'mythic',\r\n}\r\n","import { tWeaponStatsConfig } from './type'\r\n\r\nexport const DEFAULT_WEAPON_TYPE_STATS: tWeaponStatsConfig = {\r\n  axe: {},\r\n  hammer: {},\r\n  sword: {},\r\n  greatsword: {\r\n    agility: -2,\r\n  },\r\n  bow: {\r\n    damageModifiers: {\r\n      flying: 0.1,\r\n      undead: 0,\r\n      beast: 0,\r\n    },\r\n  },\r\n  dagger: {\r\n    agility: 2,\r\n    criticalChance: 10,\r\n  },\r\n  scythe: {\r\n    evasion: 2,\r\n    resistance: 1,\r\n  },\r\n  catalyst: {},\r\n  chime: {\r\n    damageModifiers: {\r\n      flying: 0,\r\n      undead: 0.02,\r\n      beast: 0,\r\n    },\r\n  },\r\n  pistol: {},\r\n  fist: {},\r\n  enemy: {},\r\n}\r\n","import { tWeaponTypeConfig } from './type'\r\n\r\nexport const DEFAULT_WEAPON_TYPE_CONFIG: tWeaponTypeConfig = {\r\n  axe: {\r\n    stat: 'strength',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  hammer: {\r\n    stat: 'strength',\r\n    twoHand: false,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  sword: {\r\n    stat: 'strength',\r\n    twoHand: false,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  greatsword: {\r\n    stat: 'strength',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  bow: {\r\n    stat: 'dexterity',\r\n    twoHand: true,\r\n    range: 'ranged',\r\n    damageType: 'physical',\r\n  },\r\n  dagger: {\r\n    stat: 'dexterity',\r\n    twoHand: false,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  scythe: {\r\n    stat: 'dexterity',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  catalyst: {\r\n    stat: 'intelligence',\r\n    twoHand: true,\r\n    range: 'ranged',\r\n    damageType: 'magic',\r\n  },\r\n  chime: {\r\n    stat: 'charisma',\r\n    twoHand: true,\r\n    range: 'ranged',\r\n    damageType: 'magic',\r\n  },\r\n  pistol: {\r\n    stat: 'charisma',\r\n    twoHand: false,\r\n    range: 'ranged',\r\n    damageType: 'physical',\r\n  },\r\n  fist: {\r\n    stat: 'vigor',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  enemy: {\r\n    stat: 'vigor',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { tSkill } from '../../Skill/type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { tStats } from '../../Stats/type'\r\nimport { tStatusType } from '../../Status/type'\r\nimport { tWeapon, tWeaponType } from '../type'\r\nimport { GLOBAL_DAMAGE_OFFSETS, WEAPON_DAMAGE_CONFIG } from './damage'\r\nimport { BASE_WEAPON_TYPES_GOLD, WEAPON_CLASS_GOLD_OFFSETS } from './goldValue'\r\nimport { WEAPON_CLASS_RARIES } from './rarity'\r\nimport { DEFAULT_WEAPON_TYPE_STATS } from './stats'\r\nimport { tWeaponClass } from './type'\r\nimport { DEFAULT_WEAPON_TYPE_CONFIG } from './typeConfig'\r\n\r\nexport const createWeapon = (\r\n  weaponType: tWeaponType,\r\n  weaponClass: tWeaponClass,\r\n  skills: tSkill[],\r\n  stats: Partial<tStats>,\r\n  immunities: tStatusType[] = [],\r\n  goldValue?: number,\r\n): tWeapon => {\r\n  const damageValue =\r\n    WEAPON_DAMAGE_CONFIG[weaponClass][weaponType] +\r\n    GLOBAL_DAMAGE_OFFSETS[weaponType]\r\n  const { stat, twoHand, range, damageType } = DEFAULT_WEAPON_TYPE_CONFIG[\r\n    weaponType\r\n  ]\r\n  const rarity = WEAPON_CLASS_RARIES[weaponClass]\r\n  const defaultStats = DEFAULT_WEAPON_TYPE_STATS[weaponType]\r\n  return {\r\n    id: v4(),\r\n    name: `${weaponClass} ${weaponType}`,\r\n    rarity,\r\n    itemType: 'weapon',\r\n    goldValue:\r\n      goldValue ||\r\n      BASE_WEAPON_TYPES_GOLD[weaponType] +\r\n        WEAPON_CLASS_GOLD_OFFSETS[weaponClass],\r\n    type: weaponType,\r\n    twoHand,\r\n    breakable: false,\r\n    damage: {\r\n      value: damageValue,\r\n      type: damageType,\r\n      range,\r\n    },\r\n    stat,\r\n    skills,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      ...defaultStats,\r\n      ...stats,\r\n    },\r\n    immunities,\r\n  }\r\n}\r\n\r\nexport const createBreakableWeapon = (\r\n  weaponType: tWeaponType,\r\n  weaponClass: tWeaponClass,\r\n  skills: tSkill[],\r\n  stats: Partial<tStats>,\r\n  immunities: tStatusType[] = [],\r\n  goldValue?: number,\r\n): tWeapon => {\r\n  return {\r\n    ...createWeapon(\r\n      weaponType,\r\n      weaponClass,\r\n      skills,\r\n      stats,\r\n      immunities,\r\n      goldValue,\r\n    ),\r\n    breakable: true,\r\n  }\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { tSkill } from '../type'\r\n\r\nexport const createSkill = (\r\n  name: string,\r\n  rolls: number,\r\n  offset: number,\r\n  rest: Partial<tSkill> = {},\r\n): tSkill => {\r\n  return {\r\n    id: v4(),\r\n    name,\r\n    damageModifier: 1,\r\n    splashDamageModifier: 0,\r\n    targetType: 'single',\r\n    damage: true,\r\n    healing: false,\r\n    rolls,\r\n    offset,\r\n    perfectSplash: false,\r\n    perfectPierce: false,\r\n    perfectStatus: [],\r\n    ...rest,\r\n  }\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const CHOP = createSkill('Chop', 3, 0)\r\nexport const SWING = createSkill('Swing', 4, 0)\r\nexport const WITHERING_SWING = createSkill('Swing', 2, 0)\r\nexport const GLASS_SWING = createSkill('Swing', 1, 0)\r\nexport const AXE_SPIN = createSkill('Axe Spin', 5, -10, {\r\n  perfectSplash: true,\r\n  splashDamageModifier: 0.5,\r\n})\r\nexport const FLURRY = createSkill('Swipe', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const CLEAVE = createSkill('Cleave', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const SLICE = createSkill('Slice', 4, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  AXE_SPIN,\r\n  CHOP,\r\n  CLEAVE,\r\n  FLURRY,\r\n  GLASS_SWING,\r\n  SLASH,\r\n  SLICE,\r\n  STUN,\r\n  SWING,\r\n  WITHERING_SWING,\r\n} from '../../../Skill/skills/axe'\r\nimport { tWeapon } from '../../type'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'axe'\r\nexport const EXECUTIONER_AXE = (): tWeapon => ({\r\n  ...createWeapon(type, 'starting', [CHOP, AXE_SPIN], {}),\r\n  name: `Executioner Axe`,\r\n})\r\n\r\nexport const RUSTED_AXE = () => createWeapon(type, 'rusted', [CHOP, SWING], {})\r\nexport const TOMB_AXE = () => createWeapon(type, 'tomb', [SWING, FLURRY], {})\r\nexport const BURRIED_AXE = () =>\r\n  createWeapon(type, 'buried', [CHOP, FLURRY, SLICE], {})\r\nexport const WITHERING_AXE = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_SWING], {})\r\nexport const GLASS_AXE = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_SWING], {})\r\n\r\nexport const IRON_AXE = () => createWeapon(type, 'iron', [CHOP, STUN], {})\r\nexport const STEEL_AXE = () =>\r\n  createWeapon(type, 'steel', [CHOP, SLICE, CLEAVE], {})\r\nexport const STAINLESS_AXE = () =>\r\n  createWeapon(type, 'stainless', [SLICE, CLEAVE, SLASH], {})\r\n\r\nexport const ANCIENT_AXE = () =>\r\n  createWeapon(type, 'ancient', [SWING, CLEAVE], {})\r\nexport const CRYSTAL_AXE = () =>\r\n  createWeapon(type, 'crystal', [GLASS_SWING], {})\r\nexport const ELEMENTAL_AXE = () => createWeapon(type, 'elemental', [CHOP], {})\r\nexport const CURSED_AXE = () => createWeapon(type, 'cursed', [CHOP], {})\r\n\r\nexport const SHARP_AXE = () =>\r\n  createWeapon(type, 'sharp', [SLICE, SLASH, AXE_SPIN], {})\r\nexport const HARDENED_AXE = () =>\r\n  createWeapon(type, 'hardened', [SLICE, SLASH, STUN], {})\r\nexport const ENGRAVED_AXE = () =>\r\n  createWeapon(type, 'engraved', [SLICE, SLASH, FLURRY], {})\r\nexport const ETHEREAL_AXE = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_SWING], {})\r\n\r\nexport const EXQUISITE_AXE = () =>\r\n  createWeapon(type, 'exquisite', [SLICE, SLASH, CLEAVE], {})\r\nexport const DIVINE_AXE = () =>\r\n  createWeapon(type, 'divine', [SLICE, SLICE, STUN], {})\r\nexport const ARCANE_AXE = () => createWeapon(type, 'arcane', [CHOP], {})\r\nexport const CELESTIAL_AXE = () =>\r\n  createBreakableWeapon(type, 'celestial', [GLASS_SWING], {})\r\n\r\nexport const AXES: tWeaponsByLevel = {\r\n  0: [EXECUTIONER_AXE],\r\n  1: [RUSTED_AXE, TOMB_AXE, BURRIED_AXE, WITHERING_AXE, GLASS_AXE],\r\n  2: [IRON_AXE, STEEL_AXE, STAINLESS_AXE],\r\n  3: [ANCIENT_AXE, CRYSTAL_AXE, ELEMENTAL_AXE, CURSED_AXE],\r\n  4: [SHARP_AXE, HARDENED_AXE, ENGRAVED_AXE, ETHEREAL_AXE],\r\n  5: [EXQUISITE_AXE, DIVINE_AXE, ARCANE_AXE, CELESTIAL_AXE],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const SHOT = createSkill('Shot', 3, 0)\r\nexport const WITHERING_SHOT = createSkill('Shot', 2, 0)\r\nexport const GLASS_SHOT = createSkill('Shot', 1, 0)\r\nexport const HEADSHOT = createSkill('Headshot', 3, -10, {\r\n  perfectPierce: true,\r\n})\r\nexport const FLURRY = createSkill('Flurry', 2, -5, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const PIN_DOWN = createSkill('Pin Down', 2, -10, {\r\n  perfectStatus: ['speed-down'],\r\n})\r\nexport const WOUNDING_SHOT = createSkill('Wounding Shot', 2, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  HEADSHOT,\r\n  SHOT,\r\n  GLASS_SHOT,\r\n  FLURRY,\r\n  PIN_DOWN,\r\n  WITHERING_SHOT,\r\n  STUN,\r\n  WOUNDING_SHOT,\r\n} from '../../../Skill/skills/bow'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'bow'\r\nexport const RANGERS_BOW = () => ({\r\n  ...createWeapon(type, 'starting', [SHOT, HEADSHOT], {}),\r\n  name: `Ranger Bow`,\r\n})\r\nexport const RUSTED_BOW = () =>\r\n  createWeapon(type, 'rusted', [SHOT, HEADSHOT], {})\r\nexport const TOMB_BOW = () =>\r\n  createWeapon(type, 'tomb', [SHOT, HEADSHOT, FLURRY], {})\r\nexport const BURRIED_BOW = () =>\r\n  createWeapon(type, 'buried', [SHOT, FLURRY, PIN_DOWN], {})\r\nexport const WITHERING_BOW = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_SHOT], {})\r\nexport const GLASS_BOW = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_SHOT], {})\r\n\r\nexport const IRON_BOW = () => createWeapon(type, 'iron', [SHOT, STUN], {})\r\nexport const STEEL_BOW = () =>\r\n  createWeapon(type, 'steel', [SHOT, HEADSHOT, WOUNDING_SHOT], {})\r\nexport const STAINLESS_BOW = () =>\r\n  createWeapon(type, 'stainless', [SHOT, FLURRY, PIN_DOWN], {})\r\n\r\nexport const ANCIENT_BOW = () =>\r\n  createWeapon(type, 'ancient', [SHOT, FLURRY, WOUNDING_SHOT], {})\r\nexport const CRYSTAL_BOW = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_SHOT], {})\r\nexport const ELEMENTAL_BOW = () => createWeapon(type, 'elemental', [SHOT], {})\r\nexport const CURSED_BOW = () => createWeapon(type, 'cursed', [SHOT], {})\r\n\r\nexport const SHARP_BOW = () =>\r\n  createWeapon(type, 'sharp', [SHOT, HEADSHOT, WOUNDING_SHOT], {})\r\nexport const HARDENED_BOW = () =>\r\n  createWeapon(type, 'hardened', [SHOT, FLURRY, PIN_DOWN], {})\r\nexport const ENGRAVED_BOW = () =>\r\n  createWeapon(type, 'engraved', [SHOT, HEADSHOT, STUN, WOUNDING_SHOT], {})\r\nexport const ETHEREAL_BOW = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_SHOT], {})\r\n\r\nexport const EXQUISITE_BOW = () =>\r\n  createWeapon(type, 'exquisite', [SHOT, HEADSHOT], {})\r\nexport const DIVINE_BOW = () =>\r\n  createWeapon(type, 'divine', [SHOT, HEADSHOT], {})\r\nexport const ARCANE_BOW = () => createWeapon(type, 'arcane', [SHOT], {})\r\nexport const CELESTIAL_BOW = () => createWeapon(type, 'celestial', [SHOT], {})\r\n\r\nexport const BOWS: tWeaponsByLevel = {\r\n  0: [RANGERS_BOW],\r\n  1: [RUSTED_BOW, TOMB_BOW, BURRIED_BOW, WITHERING_BOW, GLASS_BOW],\r\n  2: [IRON_BOW, STEEL_BOW, STAINLESS_BOW],\r\n  3: [ANCIENT_BOW, CRYSTAL_BOW, ELEMENTAL_BOW, CURSED_BOW],\r\n  4: [SHARP_BOW, HARDENED_BOW, ENGRAVED_BOW, ETHEREAL_BOW],\r\n  5: [EXQUISITE_BOW, DIVINE_BOW, ARCANE_BOW, CELESTIAL_BOW],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const BLAST = createSkill('Blast', 2, 0)\r\nexport const GLASS_BLAST = createSkill('Blast', 1, 0)\r\nexport const ARCANE = createSkill('Arcane', 3, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const NOVA = createSkill('Nova', 3, -5, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const ENFLAME = createSkill('Enflame', 4, 0, {\r\n  perfectStatus: ['burning'],\r\n})\r\nexport const ENGULF = createSkill('Engulf', 4, -10, {\r\n  damageModifier: 0.7,\r\n  perfectStatus: ['burning'],\r\n  targetType: 'group',\r\n})\r\nexport const FREEZE = createSkill('Freeze', 4, 0, {\r\n  perfectStatus: ['frozen'],\r\n})\r\nexport const SHOCK = createSkill('Shock', 4, 0, {\r\n  perfectStatus: ['shocked'],\r\n})\r\nexport const STUN = createSkill('Stun', 2, 0, {\r\n  damageModifier: 0.5,\r\n  damage: false,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const PROTECT = createSkill('Protect', 2, 0, {\r\n  damageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  perfectStatus: ['protected'],\r\n})\r\nexport const TIME_JUMP = createSkill('Time Jump', 3, -5, {\r\n  damageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  perfectStatus: ['rushed'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  ARCANE,\r\n  BLAST,\r\n  ENFLAME,\r\n  ENGULF,\r\n  GLASS_BLAST,\r\n  NOVA,\r\n  PROTECT,\r\n  STUN,\r\n  TIME_JUMP,\r\n} from '../../../Skill/skills/catalyst'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'catalyst'\r\nexport const STUDENTS_CATALYST = () => ({\r\n  ...createWeapon(type, 'starting', [ARCANE, NOVA], {}),\r\n  name: `Student Catalyst`,\r\n})\r\nexport const RUSTED_CATALYST = () =>\r\n  createWeapon(type, 'rusted', [BLAST, ARCANE], {})\r\nexport const TOMB_CATALYST = () =>\r\n  createWeapon(type, 'tomb', [BLAST, ARCANE, NOVA], {})\r\nexport const BURRIED_CATALYST = () =>\r\n  createWeapon(type, 'buried', [BLAST, ARCANE, PROTECT], {})\r\nexport const WITHERING_CATALYST = () =>\r\n  createBreakableWeapon(type, 'withering', [BLAST], {})\r\nexport const GLASS_CATALYST = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_BLAST], {})\r\n\r\nexport const IRON_CATALYST = () =>\r\n  createWeapon(type, 'iron', [ARCANE, NOVA, STUN], {})\r\nexport const STEEL_CATALYST = () =>\r\n  createWeapon(type, 'steel', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const STAINLESS_CATALYST = () =>\r\n  createWeapon(type, 'stainless', [BLAST, ARCANE, NOVA, PROTECT], {})\r\n\r\nexport const ANCIENT_CATALYST = () =>\r\n  createWeapon(type, 'ancient', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const CRYSTAL_CATALYST = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_BLAST], {})\r\nexport const ELEMENTAL_CATALYST = () =>\r\n  createWeapon(type, 'elemental', [ARCANE, ENFLAME, ENGULF], {})\r\nexport const CURSED_CATALYST = () => createWeapon(type, 'cursed', [ARCANE], {})\r\n\r\nexport const SHARP_CATALYST = () =>\r\n  createWeapon(type, 'sharp', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const HARDENED_CATALYST = () =>\r\n  createWeapon(type, 'hardened', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const ENGRAVED_CATALYST = () =>\r\n  createWeapon(type, 'engraved', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const ETHEREAL_CATALYST = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_BLAST], {})\r\n\r\nexport const EXQUISITE_CATALYST = () =>\r\n  createWeapon(type, 'exquisite', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const DIVINE_CATALYST = () =>\r\n  createWeapon(type, 'divine', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const ARCANE_CATALYST = () =>\r\n  createWeapon(type, 'arcane', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const CELESTIAL_CATALYST = () =>\r\n  createBreakableWeapon(\r\n    type,\r\n    'celestial',\r\n    [ARCANE, NOVA, PROTECT, TIME_JUMP],\r\n    {},\r\n  )\r\n\r\nexport const CATALYSTS: tWeaponsByLevel = {\r\n  0: [STUDENTS_CATALYST],\r\n  1: [\r\n    RUSTED_CATALYST,\r\n    TOMB_CATALYST,\r\n    BURRIED_CATALYST,\r\n    WITHERING_CATALYST,\r\n    GLASS_CATALYST,\r\n  ],\r\n  2: [IRON_CATALYST, STEEL_CATALYST, STAINLESS_CATALYST],\r\n  3: [ANCIENT_CATALYST, CRYSTAL_CATALYST, ELEMENTAL_CATALYST, CURSED_CATALYST],\r\n  4: [SHARP_CATALYST, HARDENED_CATALYST, ENGRAVED_CATALYST, ETHEREAL_CATALYST],\r\n  5: [EXQUISITE_CATALYST, DIVINE_CATALYST, ARCANE_CATALYST, CELESTIAL_CATALYST],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const RING = createSkill('Ring', 3, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const WITHERING_RING = createSkill('Ring', 2, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const GLASS_RING = createSkill('Ring', 1, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const REVERBERATE = createSkill('Reverberate', 4, -5, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 2, -5, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const SLOW = createSkill('Slow', 4, 0, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['speed-down'],\r\n})\r\nexport const VANISH = createSkill('Vanish', 2, 0, {\r\n  damageModifier: 0,\r\n  damage: false,\r\n  targetType: 'ally',\r\n  perfectStatus: ['evade-up'],\r\n})\r\nexport const RUSH = createSkill('Rush', 2, 0, {\r\n  damageModifier: 0,\r\n  damage: false,\r\n  targetType: 'ally',\r\n  perfectStatus: ['rushed'],\r\n})\r\nexport const RESET = createSkill('Reset', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['reset'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  GLASS_RING,\r\n  RESET,\r\n  REVERBERATE,\r\n  RING,\r\n  RUSH,\r\n  SLOW,\r\n  STUN,\r\n  VANISH,\r\n  WITHERING_RING,\r\n} from '../../../Skill/skills/chime'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'chime'\r\nexport const PATRICIANS_CHIME = () => ({\r\n  ...createWeapon(type, 'starting', [RING, STUN], {}),\r\n  name: `Patrician Chime`,\r\n})\r\nexport const RUSTED_CHIME = () =>\r\n  createWeapon(type, 'rusted', [RING, REVERBERATE], {})\r\nexport const TOMB_CHIME = () =>\r\n  createWeapon(type, 'tomb', [RING, SLOW, VANISH], {})\r\nexport const BURRIED_CHIME = () =>\r\n  createWeapon(type, 'buried', [RING, STUN, VANISH], {})\r\nexport const WITHERING_CHIME = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_RING], {})\r\nexport const GLASS_CHIME = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_RING], {})\r\n\r\nexport const IRON_CHIME = () =>\r\n  createWeapon(type, 'iron', [RING, REVERBERATE, STUN], {})\r\nexport const STEEL_CHIME = () =>\r\n  createWeapon(type, 'steel', [RING, RUSH, RESET], {})\r\nexport const STAINLESS_CHIME = () =>\r\n  createWeapon(type, 'stainless', [RING, REVERBERATE, RUSH, RESET], {})\r\n\r\nexport const ANCIENT_CHIME = () =>\r\n  createWeapon(type, 'ancient', [RING, REVERBERATE, STUN], {})\r\nexport const CRYSTAL_CHIME = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_RING], {})\r\nexport const ELEMENTAL_CHIME = () => createWeapon(type, 'elemental', [RING], {})\r\nexport const CURSED_CHIME = () => createWeapon(type, 'cursed', [RING], {})\r\n\r\nexport const SHARP_CHIME = () =>\r\n  createWeapon(type, 'sharp', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const HARDENED_CHIME = () =>\r\n  createWeapon(type, 'hardened', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const ENGRAVED_CHIME = () =>\r\n  createWeapon(type, 'engraved', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const ETHEREAL_CHIME = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_RING], {})\r\n\r\nexport const EXQUISITE_CHIME = () =>\r\n  createWeapon(type, 'exquisite', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const DIVINE_CHIME = () =>\r\n  createWeapon(type, 'divine', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const ARCANE_CHIME = () =>\r\n  createWeapon(type, 'arcane', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const CELESTIAL_CHIME = () =>\r\n  createBreakableWeapon(type, 'celestial', [RING, REVERBERATE, STUN, SLOW], {})\r\n\r\nexport const CHIMES: tWeaponsByLevel = {\r\n  0: [PATRICIANS_CHIME],\r\n  1: [RUSTED_CHIME, TOMB_CHIME, BURRIED_CHIME, WITHERING_CHIME, GLASS_CHIME],\r\n  2: [IRON_CHIME, STEEL_CHIME, STAINLESS_CHIME],\r\n  3: [ANCIENT_CHIME, CRYSTAL_CHIME, ELEMENTAL_CHIME, CURSED_CHIME],\r\n  4: [SHARP_CHIME, HARDENED_CHIME, ENGRAVED_CHIME, ETHEREAL_CHIME],\r\n  5: [EXQUISITE_CHIME, DIVINE_CHIME, ARCANE_CHIME, CELESTIAL_CHIME],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const THRUST = createSkill('Thrust', 3, 0)\r\nexport const SWING = createSkill('Swing', 4, 0)\r\nexport const WITHERING_SWING = createSkill('Swing', 2, 0)\r\nexport const GLASS_SWING = createSkill('Swing', 1, 0)\r\nexport const FLURRY = createSkill('Flurry', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const CLEAVE = createSkill('Cleave', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const SLICE = createSkill('Slice', 4, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\nexport const ARMOR_UP = createSkill('Armor Up', 2, 0, {\r\n  targetType: 'self',\r\n  perfectStatus: ['armor-up'],\r\n})\r\nexport const EVADE_UP = createSkill('Evade Up', 2, 0, {\r\n  targetType: 'self',\r\n  perfectStatus: ['evade-up'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  ARMOR_UP,\r\n  CLEAVE,\r\n  EVADE_UP,\r\n  FLURRY,\r\n  GLASS_SWING,\r\n  SLASH,\r\n  SLICE,\r\n  SWING,\r\n  THRUST,\r\n  WITHERING_SWING,\r\n} from '../../../Skill/skills/scythe'\r\nimport { tWeapon } from '../../type'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'scythe'\r\nexport const FARMER_SCYTHE = (): tWeapon => ({\r\n  ...createWeapon(type, 'starting', [SLICE], {}),\r\n  name: `Farmer Scythe`,\r\n})\r\nexport const RUSTED_SCYTHE = () => createWeapon(type, 'rusted', [THRUST], {})\r\nexport const TOMB_SCYTHE = () => createWeapon(type, 'tomb', [SWING, FLURRY], {})\r\nexport const BURRIED_SCYTHE = () =>\r\n  createWeapon(type, 'buried', [SWING, SLICE], {})\r\nexport const WITHERING_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_SWING], {})\r\nexport const GLASS_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_SWING], {})\r\n\r\nexport const IRON_SCYTHE = () =>\r\n  createWeapon(type, 'iron', [THRUST, ARMOR_UP, EVADE_UP], {})\r\nexport const STEEL_SCYTHE = () =>\r\n  createWeapon(type, 'steel', [THRUST, SLASH], {})\r\nexport const STAINLESS_SCYTHE = () =>\r\n  createWeapon(type, 'stainless', [THRUST, SLICE], {})\r\n\r\nexport const ANCIENT_SCYTHE = () =>\r\n  createWeapon(type, 'ancient', [SWING, CLEAVE, ARMOR_UP], {})\r\nexport const CRYSTAL_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_SWING], {})\r\nexport const ELEMENTAL_SCYTHE = () =>\r\n  createWeapon(type, 'elemental', [THRUST], {})\r\nexport const CURSED_SCYTHE = () => createWeapon(type, 'cursed', [THRUST], {})\r\n\r\nexport const SHARP_SCYTHE = () =>\r\n  createWeapon(type, 'sharp', [THRUST, SLICE, SLASH], {})\r\nexport const HARDENED_SCYTHE = () =>\r\n  createWeapon(type, 'hardened', [THRUST, FLURRY, ARMOR_UP, EVADE_UP], {})\r\nexport const ENGRAVED_SCYTHE = () =>\r\n  createWeapon(type, 'engraved', [THRUST, FLURRY, SLASH, CLEAVE], {})\r\nexport const ETHEREAL_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_SWING], {})\r\n\r\nexport const EXQUISITE_SCYTHE = () =>\r\n  createWeapon(type, 'exquisite', [THRUST, SLICE, SLASH], {})\r\nexport const DIVINE_SCYTHE = () =>\r\n  createWeapon(type, 'divine', [THRUST, SLICE, ARMOR_UP, EVADE_UP], {})\r\nexport const ARCANE_SCYTHE = () => createWeapon(type, 'arcane', [THRUST], {})\r\nexport const CELESTIAL_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'celestial', [GLASS_SWING], {})\r\n\r\nexport const SCYTHES: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [\r\n    RUSTED_SCYTHE,\r\n    TOMB_SCYTHE,\r\n    BURRIED_SCYTHE,\r\n    WITHERING_SCYTHE,\r\n    GLASS_SCYTHE,\r\n  ],\r\n  2: [IRON_SCYTHE, STEEL_SCYTHE, STAINLESS_SCYTHE],\r\n  3: [ANCIENT_SCYTHE, CRYSTAL_SCYTHE, ELEMENTAL_SCYTHE, CURSED_SCYTHE],\r\n  4: [SHARP_SCYTHE, HARDENED_SCYTHE, ENGRAVED_SCYTHE, ETHEREAL_SCYTHE],\r\n  5: [EXQUISITE_SCYTHE, DIVINE_SCYTHE, ARCANE_SCYTHE, CELESTIAL_SCYTHE],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const SMASH = createSkill('Smash', 3, 0)\r\nexport const WITHERING_SMASH = createSkill('Smash', 2, 0)\r\nexport const GLASS_SMASH = createSkill('Smash', 1, 0)\r\nexport const RIPPLE = createSkill('Ripple', 4, -10, {\r\n  perfectSplash: true,\r\n})\r\nexport const EARTHQUAKE = createSkill('Earthquake', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const CRUSH = createSkill('Crush', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const STAB = createSkill('Stab', 4, 0, {\r\n  perfectPierce: true,\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  CRUSH,\r\n  EARTHQUAKE,\r\n  GLASS_SMASH,\r\n  RIPPLE,\r\n  SMASH,\r\n  WITHERING_SMASH,\r\n  STUN,\r\n} from '../../../Skill/skills/blunt'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'hammer'\r\nexport const RUSTED_HAMMER = () =>\r\n  createWeapon(type, 'rusted', [SMASH, RIPPLE], {})\r\nexport const TOMB_HAMMER = () =>\r\n  createWeapon(type, 'tomb', [SMASH, EARTHQUAKE], {})\r\nexport const BURRIED_HAMMER = () =>\r\n  createWeapon(type, 'buried', [SMASH, CRUSH], {})\r\nexport const WITHERING_HAMMER = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_SMASH], {})\r\nexport const GLASS_HAMMER = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_SMASH], {})\r\n\r\nexport const IRON_HAMMER = () => createWeapon(type, 'iron', [SMASH, STUN], {})\r\nexport const STEEL_HAMMER = () =>\r\n  createWeapon(type, 'steel', [SMASH, EARTHQUAKE, RIPPLE], {})\r\nexport const STAINLESS_HAMMER = () =>\r\n  createWeapon(type, 'stainless', [SMASH, CRUSH, RIPPLE], {})\r\n\r\nexport const ANCIENT_HAMMER = () =>\r\n  createWeapon(type, 'ancient', [SMASH, STUN], {})\r\nexport const CRYSTAL_HAMMER = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_SMASH], {})\r\nexport const ELEMENTAL_HAMMER = () =>\r\n  createWeapon(type, 'elemental', [SMASH], {})\r\nexport const CURSED_HAMMER = () => createWeapon(type, 'cursed', [SMASH], {})\r\n\r\nexport const SHARP_HAMMER = () =>\r\n  createWeapon(type, 'sharp', [SMASH, STUN, CRUSH], {})\r\nexport const HARDENED_HAMMER = () =>\r\n  createWeapon(type, 'hardened', [SMASH, CRUSH, EARTHQUAKE, RIPPLE], {})\r\nexport const ENGRAVED_HAMMER = () =>\r\n  createWeapon(type, 'engraved', [SMASH, CRUSH, EARTHQUAKE, RIPPLE], {})\r\nexport const ETHEREAL_HAMMER = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_SMASH], {})\r\n\r\nexport const EXQUISITE_HAMMER = () =>\r\n  createWeapon(type, 'exquisite', [SMASH], {})\r\nexport const DIVINE_HAMMER = () => createWeapon(type, 'divine', [SMASH], {})\r\nexport const ARCANE_HAMMER = () => createWeapon(type, 'arcane', [SMASH], {})\r\nexport const CELESTIAL_HAMMER = () =>\r\n  createBreakableWeapon(type, 'celestial', [SMASH], {})\r\n\r\nexport const HAMMERS: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [\r\n    RUSTED_HAMMER,\r\n    TOMB_HAMMER,\r\n    BURRIED_HAMMER,\r\n    WITHERING_HAMMER,\r\n    GLASS_HAMMER,\r\n  ],\r\n  2: [IRON_HAMMER, STEEL_HAMMER, STAINLESS_HAMMER],\r\n  3: [ANCIENT_HAMMER, CRYSTAL_HAMMER, ELEMENTAL_HAMMER, CURSED_HAMMER],\r\n  4: [SHARP_HAMMER, HARDENED_HAMMER, ENGRAVED_HAMMER, ETHEREAL_HAMMER],\r\n  5: [EXQUISITE_HAMMER, DIVINE_HAMMER, ARCANE_HAMMER, CELESTIAL_HAMMER],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const STRIKE = createSkill('Strike', 4, 0)\r\nexport const WITHERING_STRIKE = createSkill('Strike', 2, 0)\r\nexport const GLASS_STRIKE = createSkill('Strike', 1, 0)\r\nexport const SWING = createSkill('Swing', 5, 0)\r\nexport const FLURRY = createSkill('Flurry', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const LUNGE = createSkill('Lunge', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const STAB = createSkill('Stab', 2, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  GLASS_STRIKE,\r\n  LUNGE,\r\n  SLASH,\r\n  STAB,\r\n  STRIKE,\r\n  SWING,\r\n  WITHERING_STRIKE,\r\n} from '../../../Skill/skills/dagger'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'dagger'\r\nexport const RUSTED_DAGGER = () =>\r\n  createWeapon(type, 'rusted', [STRIKE, SWING], {})\r\nexport const TOMB_DAGGER = () => createWeapon(type, 'tomb', [SWING, LUNGE], {})\r\nexport const BURRIED_DAGGER = () =>\r\n  createWeapon(type, 'buried', [STRIKE, STAB], {})\r\nexport const WITHERING_DAGGER = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_STRIKE], {})\r\nexport const GLASS_DAGGER = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_STRIKE], {})\r\n\r\nexport const IRON_DAGGER = () =>\r\n  createWeapon(type, 'iron', [STRIKE, LUNGE, STAB], {})\r\nexport const STEEL_DAGGER = () =>\r\n  createWeapon(type, 'steel', [STRIKE, LUNGE, SLASH], {})\r\nexport const STAINLESS_DAGGER = () =>\r\n  createWeapon(type, 'stainless', [STRIKE, LUNGE, SLASH], {})\r\n\r\nexport const ANCIENT_DAGGER = () =>\r\n  createWeapon(type, 'ancient', [STRIKE, LUNGE, STAB], {})\r\nexport const CRYSTAL_DAGGER = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_STRIKE], {})\r\nexport const ELEMENTAL_DAGGER = () =>\r\n  createWeapon(type, 'elemental', [STRIKE, LUNGE, STAB], {})\r\nexport const CURSED_DAGGER = () =>\r\n  createWeapon(type, 'cursed', [STRIKE, LUNGE, SLASH], {})\r\n\r\nexport const SHARP_DAGGER = () =>\r\n  createWeapon(type, 'sharp', [STRIKE, LUNGE, STAB], {})\r\nexport const HARDENED_DAGGER = () =>\r\n  createWeapon(type, 'hardened', [STRIKE, LUNGE, SLASH], {})\r\nexport const ENGRAVED_DAGGER = () =>\r\n  createWeapon(type, 'engraved', [STRIKE, LUNGE, STAB], {})\r\nexport const ETHEREAL_DAGGER = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_STRIKE], {})\r\n\r\nexport const EXQUISITE_DAGGER = () =>\r\n  createWeapon(type, 'exquisite', [STRIKE, LUNGE, SLASH], {})\r\nexport const DIVINE_DAGGER = () =>\r\n  createWeapon(type, 'divine', [STRIKE, LUNGE, STAB], {})\r\nexport const ARCANE_DAGGER = () =>\r\n  createWeapon(type, 'arcane', [STRIKE, LUNGE, SLASH], {})\r\nexport const CELESTIAL_DAGGER = () =>\r\n  createBreakableWeapon(type, 'celestial', [STRIKE, LUNGE, STAB], {})\r\n\r\nexport const DAGGERS: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [\r\n    RUSTED_DAGGER,\r\n    TOMB_DAGGER,\r\n    BURRIED_DAGGER,\r\n    WITHERING_DAGGER,\r\n    GLASS_DAGGER,\r\n  ],\r\n  2: [IRON_DAGGER, STEEL_DAGGER, STAINLESS_DAGGER],\r\n  3: [ANCIENT_DAGGER, CRYSTAL_DAGGER, ELEMENTAL_DAGGER, CURSED_DAGGER],\r\n  4: [SHARP_DAGGER, HARDENED_DAGGER, ENGRAVED_DAGGER, ETHEREAL_DAGGER],\r\n  5: [EXQUISITE_DAGGER, DIVINE_DAGGER, ARCANE_DAGGER, CELESTIAL_DAGGER],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const STRIKE = createSkill('Strike', 3, 0)\r\nexport const WITHERING_STRIKE = createSkill('Strike', 2, 0)\r\nexport const GLASS_STRIKE = createSkill('Strike', 1, 0)\r\nexport const SWING = createSkill('Swing', 4, 0)\r\nexport const WIDE_SWING = createSkill('Wide Swing', 4, -5, {\r\n  damageModifier: 0.8,\r\n  splashDamageModifier: 0.8,\r\n  perfectSplash: true,\r\n})\r\nexport const FLURRY = createSkill('Swipe', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const LUNGE = createSkill('Lunge', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const SLICE = createSkill('Stab', 2, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  FLURRY,\r\n  STRIKE,\r\n  LUNGE,\r\n  WIDE_SWING,\r\n  GLASS_STRIKE,\r\n  WITHERING_STRIKE,\r\n  SLASH,\r\n  SLICE,\r\n  STUN,\r\n  SWING,\r\n} from '../../../Skill/skills/greatsword'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'greatsword'\r\nexport const RUSTED_GREATSWORD = () =>\r\n  createWeapon(type, 'rusted', [STRIKE], {})\r\nexport const TOMB_GREATSWORD = () =>\r\n  createWeapon(type, 'tomb', [SWING, FLURRY], {})\r\nexport const BURRIED_GREATSWORD = () =>\r\n  createWeapon(type, 'buried', [STRIKE, FLURRY, SLICE], {})\r\nexport const WITHERING_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_STRIKE], {})\r\nexport const GLASS_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_STRIKE], {})\r\n\r\nexport const IRON_GREATSWORD = () =>\r\n  createWeapon(type, 'iron', [STRIKE, STUN], {})\r\nexport const STEEL_GREATSWORD = () =>\r\n  createWeapon(type, 'steel', [STRIKE, SLICE, LUNGE], {})\r\nexport const STAINLESS_GREATSWORD = () =>\r\n  createWeapon(type, 'stainless', [SLICE, LUNGE, SLASH], {})\r\n\r\nexport const ANCIENT_GREATSWORD = () =>\r\n  createWeapon(type, 'ancient', [SWING, LUNGE, WIDE_SWING], {})\r\nexport const CRYSTAL_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_STRIKE], {})\r\nexport const ELEMENTAL_GREATSWORD = () =>\r\n  createWeapon(type, 'elemental', [STRIKE], {})\r\nexport const CURSED_GREATSWORD = () =>\r\n  createWeapon(type, 'cursed', [STRIKE], {})\r\n\r\nexport const SHARP_GREATSWORD = () =>\r\n  createWeapon(type, 'sharp', [SLICE, SLASH, WIDE_SWING], {})\r\nexport const HARDENED_GREATSWORD = () =>\r\n  createWeapon(type, 'hardened', [SLICE, SLICE, STUN], {})\r\nexport const ENGRAVED_GREATSWORD = () =>\r\n  createWeapon(type, 'engraved', [SLICE, SLASH, FLURRY], {})\r\nexport const ETHEREAL_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_STRIKE], {})\r\n\r\nexport const EXQUISITE_GREATSWORD = () =>\r\n  createWeapon(type, 'exquisite', [SLICE, SLASH, LUNGE], {})\r\nexport const DIVINE_GREATSWORD = () =>\r\n  createWeapon(type, 'divine', [SLICE, SLASH, LUNGE], {})\r\nexport const ARCANE_GREATSWORD = () =>\r\n  createWeapon(type, 'arcane', [STRIKE], {})\r\nexport const CELESTIAL_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'celestial', [GLASS_STRIKE], {})\r\n\r\nexport const GREATSWORDS: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [\r\n    RUSTED_GREATSWORD,\r\n    TOMB_GREATSWORD,\r\n    BURRIED_GREATSWORD,\r\n    WITHERING_GREATSWORD,\r\n    GLASS_GREATSWORD,\r\n  ],\r\n  2: [IRON_GREATSWORD, STEEL_GREATSWORD, STAINLESS_GREATSWORD],\r\n  3: [\r\n    ANCIENT_GREATSWORD,\r\n    CRYSTAL_GREATSWORD,\r\n    ELEMENTAL_GREATSWORD,\r\n    CURSED_GREATSWORD,\r\n  ],\r\n  4: [\r\n    SHARP_GREATSWORD,\r\n    HARDENED_GREATSWORD,\r\n    ENGRAVED_GREATSWORD,\r\n    ETHEREAL_GREATSWORD,\r\n  ],\r\n  5: [\r\n    EXQUISITE_GREATSWORD,\r\n    DIVINE_GREATSWORD,\r\n    ARCANE_GREATSWORD,\r\n    CELESTIAL_GREATSWORD,\r\n  ],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const FIRE = createSkill('Fire', 1, 0, {\r\n  perfectSplash: true,\r\n})\r\nexport const SNIPE = createSkill('Snipe', 2, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const FAN_FIRE = createSkill('Fan Fire', 1, 0, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport { FAN_FIRE, FIRE, SNIPE } from '../../../Skill/skills/pistol'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'pistol'\r\nexport const PATRICIANS_PISTOL = () => ({\r\n  ...createWeapon(type, 'starting', [], {}),\r\n  name: `Patrician Pistol`,\r\n})\r\nexport const RUSTED_PISTOL = () =>\r\n  createWeapon(type, 'rusted', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const TOMB_PISTOL = () =>\r\n  createWeapon(type, 'tomb', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const BURRIED_PISTOL = () =>\r\n  createWeapon(type, 'buried', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const WITHERING_PISTOL = () =>\r\n  createBreakableWeapon(type, 'withering', [FIRE], {})\r\nexport const GLASS_PISTOL = () =>\r\n  createBreakableWeapon(type, 'glass', [FIRE], {})\r\n\r\nexport const IRON_PISTOL = () =>\r\n  createWeapon(type, 'iron', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const STEEL_PISTOL = () =>\r\n  createWeapon(type, 'steel', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const STAINLESS_PISTOL = () =>\r\n  createWeapon(type, 'stainless', [FIRE, SNIPE, FAN_FIRE], {})\r\n\r\nexport const ANCIENT_PISTOL = () =>\r\n  createWeapon(type, 'ancient', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const CRYSTAL_PISTOL = () =>\r\n  createBreakableWeapon(type, 'crystal', [FIRE], {})\r\nexport const ELEMENTAL_PISTOL = () =>\r\n  createWeapon(type, 'elemental', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const CURSED_PISTOL = () =>\r\n  createWeapon(type, 'cursed', [FIRE, SNIPE, FAN_FIRE], {})\r\n\r\nexport const SHARP_PISTOL = () =>\r\n  createWeapon(type, 'sharp', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const HARDENED_PISTOL = () =>\r\n  createWeapon(type, 'hardened', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const ENGRAVED_PISTOL = () =>\r\n  createWeapon(type, 'engraved', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const ETHEREAL_PISTOL = () =>\r\n  createBreakableWeapon(type, 'ethereal', [FIRE], {})\r\n\r\nexport const EXQUISITE_PISTOL = () =>\r\n  createWeapon(type, 'exquisite', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const DIVINE_PISTOL = () =>\r\n  createWeapon(type, 'divine', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const ARCANE_PISTOL = () =>\r\n  createWeapon(type, 'arcane', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const CELESTIAL_PISTOL = () =>\r\n  createBreakableWeapon(type, 'celestial', [FIRE], {})\r\n\r\nexport const PISTOLS: tWeaponsByLevel = {\r\n  0: [PATRICIANS_PISTOL],\r\n  1: [\r\n    RUSTED_PISTOL,\r\n    TOMB_PISTOL,\r\n    BURRIED_PISTOL,\r\n    WITHERING_PISTOL,\r\n    GLASS_PISTOL,\r\n  ],\r\n  2: [IRON_PISTOL, STEEL_PISTOL, STAINLESS_PISTOL],\r\n  3: [ANCIENT_PISTOL, CRYSTAL_PISTOL, ELEMENTAL_PISTOL, CURSED_PISTOL],\r\n  4: [SHARP_PISTOL, HARDENED_PISTOL, ENGRAVED_PISTOL, ETHEREAL_PISTOL],\r\n  5: [EXQUISITE_PISTOL, DIVINE_PISTOL, ARCANE_PISTOL, CELESTIAL_PISTOL],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const STRIKE = createSkill('Strike', 2, 0)\r\nexport const WITHERING_STRIKE = createSkill('Strike', 2, 0)\r\nexport const GLASS_STRIKE = createSkill('Strike', 1, 0)\r\nexport const SWING = createSkill('Swing', 4, 0)\r\nexport const FLURRY = createSkill('Swipe', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const LUNGE = createSkill('Lunge', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const STAB = createSkill('Stab', 2, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  LUNGE,\r\n  FLURRY,\r\n  GLASS_STRIKE,\r\n  SLASH,\r\n  STAB,\r\n  SWING,\r\n  STRIKE,\r\n  WITHERING_STRIKE,\r\n} from '../../../Skill/skills/sword'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'sword'\r\nexport const RUSTED_SWORD = () => createWeapon(type, 'rusted', [STRIKE], {})\r\nexport const TOMB_SWORD = () => createWeapon(type, 'tomb', [SWING, FLURRY], {})\r\nexport const BURRIED_SWORD = () =>\r\n  createWeapon(type, 'buried', [SWING, STAB], {})\r\nexport const WITHERING_SWORD = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_STRIKE], {})\r\nexport const GLASS_SWORD = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_STRIKE], {})\r\n\r\nexport const IRON_SWORD = () => createWeapon(type, 'iron', [STRIKE, LUNGE], {})\r\nexport const STEEL_SWORD = () =>\r\n  createWeapon(type, 'steel', [STRIKE, SLASH], {})\r\nexport const STAINLESS_SWORD = () =>\r\n  createWeapon(type, 'stainless', [STRIKE, STAB], {})\r\n\r\nexport const ANCIENT_SWORD = () =>\r\n  createWeapon(type, 'ancient', [STRIKE, LUNGE], {})\r\nexport const CRYSTAL_SWORD = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_STRIKE], {})\r\nexport const ELEMENTAL_SWORD = () =>\r\n  createWeapon(type, 'elemental', [STRIKE], {})\r\nexport const CURSED_SWORD = () => createWeapon(type, 'cursed', [STRIKE], {})\r\n\r\nexport const SHARP_SWORD = () =>\r\n  createWeapon(type, 'sharp', [STRIKE, STAB, SLASH], {})\r\nexport const HARDENED_SWORD = () =>\r\n  createWeapon(type, 'hardened', [STRIKE, FLURRY, LUNGE], {})\r\nexport const ENGRAVED_SWORD = () =>\r\n  createWeapon(type, 'engraved', [STRIKE, FLURRY, SLASH, LUNGE], {})\r\nexport const ETHEREAL_SWORD = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_STRIKE], {})\r\n\r\nexport const EXQUISITE_SWORD = () =>\r\n  createWeapon(type, 'exquisite', [STRIKE, STAB, SLASH], {})\r\nexport const DIVINE_SWORD = () =>\r\n  createWeapon(type, 'divine', [STRIKE, STAB, SLASH], {})\r\nexport const ARCANE_SWORD = () => createWeapon(type, 'arcane', [STRIKE], {})\r\nexport const CELESTIAL_SWORD = () =>\r\n  createBreakableWeapon(type, 'celestial', [GLASS_STRIKE], {})\r\n\r\nexport const SWORDS: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [RUSTED_SWORD, TOMB_SWORD, BURRIED_SWORD, WITHERING_SWORD, GLASS_SWORD],\r\n  2: [IRON_SWORD, STEEL_SWORD, STAINLESS_SWORD],\r\n  3: [ANCIENT_SWORD, CRYSTAL_SWORD, ELEMENTAL_SWORD, CURSED_SWORD],\r\n  4: [SHARP_SWORD, HARDENED_SWORD, ENGRAVED_SWORD, ETHEREAL_SWORD],\r\n  5: [EXQUISITE_SWORD, DIVINE_SWORD, ARCANE_SWORD, CELESTIAL_SWORD],\r\n}\r\n","import { tWeapon } from '../../type'\r\nimport { tWeaponsByLevel } from '../type'\r\nimport { AXES } from './axe'\r\nimport { HAMMERS } from './hammer'\r\nimport { BOWS } from './bow'\r\nimport { CATALYSTS } from './catalyst'\r\nimport { CHIMES } from './chime'\r\nimport { DAGGERS } from './dagger'\r\nimport { GREATSWORDS } from './greatsword'\r\nimport { PISTOLS } from './pistol'\r\nimport { SCYTHES } from './scythe'\r\nimport { SWORDS } from './sword'\r\n\r\nexport const WEAPONS_BY_LEVEL: tWeaponsByLevel = {\r\n  0: [\r\n    ...AXES[0],\r\n    ...HAMMERS[0],\r\n    ...BOWS[0],\r\n    ...CATALYSTS[0],\r\n    ...CHIMES[0],\r\n    ...DAGGERS[0],\r\n    ...GREATSWORDS[0],\r\n    ...PISTOLS[0],\r\n    ...SCYTHES[0],\r\n    ...SWORDS[0],\r\n  ],\r\n  1: [\r\n    ...AXES[1],\r\n    ...HAMMERS[1],\r\n    ...BOWS[1],\r\n    ...CATALYSTS[1],\r\n    ...CHIMES[1],\r\n    ...DAGGERS[1],\r\n    ...GREATSWORDS[1],\r\n    ...PISTOLS[1],\r\n    ...SCYTHES[1],\r\n    ...SWORDS[1],\r\n  ],\r\n  2: [\r\n    ...AXES[2],\r\n    ...HAMMERS[2],\r\n    ...BOWS[2],\r\n    ...CATALYSTS[2],\r\n    ...CHIMES[2],\r\n    ...DAGGERS[2],\r\n    ...GREATSWORDS[2],\r\n    ...PISTOLS[2],\r\n    ...SCYTHES[2],\r\n    ...SWORDS[2],\r\n  ],\r\n  3: [\r\n    ...AXES[3],\r\n    ...HAMMERS[3],\r\n    ...BOWS[3],\r\n    ...CATALYSTS[3],\r\n    ...CHIMES[3],\r\n    ...DAGGERS[3],\r\n    ...GREATSWORDS[3],\r\n    ...PISTOLS[3],\r\n    ...SCYTHES[3],\r\n    ...SWORDS[3],\r\n  ],\r\n  4: [\r\n    ...AXES[4],\r\n    ...HAMMERS[4],\r\n    ...BOWS[4],\r\n    ...CATALYSTS[4],\r\n    ...CHIMES[4],\r\n    ...DAGGERS[4],\r\n    ...GREATSWORDS[4],\r\n    ...PISTOLS[4],\r\n    ...SCYTHES[4],\r\n    ...SWORDS[4],\r\n  ],\r\n  5: [\r\n    ...AXES[5],\r\n    ...HAMMERS[5],\r\n    ...BOWS[5],\r\n    ...CATALYSTS[5],\r\n    ...CHIMES[5],\r\n    ...DAGGERS[5],\r\n    ...GREATSWORDS[5],\r\n    ...PISTOLS[5],\r\n    ...SCYTHES[5],\r\n    ...SWORDS[5],\r\n  ],\r\n}\r\n\r\nexport const ALL_WEAPONS = Object.keys(WEAPONS_BY_LEVEL).reduce(\r\n  (allWeapons, level) => {\r\n    return [...allWeapons, ...WEAPONS_BY_LEVEL[parseInt(level, 10)]]\r\n  },\r\n  [] as (() => tWeapon)[],\r\n)\r\n","import { v4 } from 'uuid'\r\nimport { tItemRarity } from '../../Item/type'\r\nimport { tSkill } from '../../Skill/type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { tStats } from '../../Stats/type'\r\nimport { tStatusType } from '../../Status/type'\r\nimport { tArmor, tArmorResourceType, tArmorType } from '../type'\r\n\r\nexport const createArmor = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  resource: tArmorResourceType,\r\n  type: tArmorType,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n): tArmor => {\r\n  return {\r\n    id: v4(),\r\n    name,\r\n    rarity,\r\n    itemType: 'armor',\r\n    resource,\r\n    type,\r\n    stat: 'vigor',\r\n    goldValue,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      ...stats,\r\n    },\r\n    skills,\r\n    immunities,\r\n  }\r\n}\r\n\r\nexport const createFootwear = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'feet',\r\n    'footwear',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createHat = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(name, rarity, 'head', 'hat', goldValue, stats, skills, immunities)\r\n\r\nexport const createHeavyArmor = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'body',\r\n    'heavy-armor',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createHelmet = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'head',\r\n    'helmet',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createLightArmor = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'body',\r\n    'light-armor',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createMagicArmor = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'body',\r\n    'magic-armor',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createMagicHat = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'head',\r\n    'magic-hat',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createShield = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'offhand',\r\n    'shield',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createWard = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'offhand',\r\n    'ward',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createRing = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'ring',\r\n    'ring',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createPendant = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'pendant',\r\n    'pendant',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n","import { createSkill } from '.'\r\n\r\nexport const TAUNT = createSkill('Taunt', 2, 0, {\r\n  damageModifier: 0,\r\n  damage: false,\r\n  targetType: 'self',\r\n  weaponStatOverride: 'vigor',\r\n  perfectStatus: ['targeted'],\r\n})\r\n","import { FOREST_PENDANT, IRON_CHARM, RANGER_CHARM } from './pendants'\r\nimport { DRAINED_RING, LUCKY_RING, RING_OF_FOCUS, SIMPLE_RING } from './rings'\r\nimport {\r\n  BROKEN_SHIELD,\r\n  FOREST_BUCKLER,\r\n  LEATHER_BUCKLER,\r\n  STUDENT_WARD,\r\n  VILLAGER_SHIELD,\r\n  WOODEN_WAR_SHIELD,\r\n} from './shields/level_0'\r\nimport {\r\n  APPRENTICE_WARD,\r\n  CULTIST_SHIELD,\r\n  IRON_BUCKLER,\r\n  IRON_WAR_SHIELD,\r\n  WOODEN_BUCKLER,\r\n  WOODEN_PLANK_SHIELD,\r\n} from './shields/level_1'\r\nimport {\r\n  CULTIST_WARD,\r\n  GRAVEGUARD_SHIELD,\r\n  HEAVY_IRON_SHIELD,\r\n  NOVICE_WARD,\r\n  OLD_FOREST_SHIELD,\r\n} from './shields/level_2'\r\n\r\nexport const PENDANTS_BY_LEVEL = {\r\n  0: [FOREST_PENDANT, RANGER_CHARM, IRON_CHARM],\r\n}\r\nexport const RINGS_BY_LEVEL = {\r\n  0: [LUCKY_RING, RING_OF_FOCUS, DRAINED_RING, SIMPLE_RING],\r\n}\r\nexport const SHIELDS_BY_LEVEL = {\r\n  0: [\r\n    FOREST_BUCKLER,\r\n    STUDENT_WARD,\r\n    VILLAGER_SHIELD,\r\n    WOODEN_WAR_SHIELD,\r\n    LEATHER_BUCKLER,\r\n    BROKEN_SHIELD,\r\n  ],\r\n  1: [\r\n    WOODEN_PLANK_SHIELD,\r\n    CULTIST_SHIELD,\r\n    WOODEN_BUCKLER,\r\n    IRON_BUCKLER,\r\n    APPRENTICE_WARD,\r\n    IRON_WAR_SHIELD,\r\n  ],\r\n  2: [\r\n    GRAVEGUARD_SHIELD,\r\n    OLD_FOREST_SHIELD,\r\n    HEAVY_IRON_SHIELD,\r\n    NOVICE_WARD,\r\n    CULTIST_WARD,\r\n  ],\r\n}\r\n","import { createPendant } from '..'\r\n\r\nexport const FOREST_PENDANT = () =>\r\n  createPendant('Forest Pendant', 'rare', 60, {\r\n    resistance: 1,\r\n    healthRegeneration: 3,\r\n  })\r\n\r\nexport const RANGER_CHARM = () =>\r\n  createPendant('Ranger Charm', 'common', 30, {\r\n    dexterity: 1,\r\n  })\r\n\r\nexport const IRON_CHARM = () =>\r\n  createPendant('Iron Charm', 'uncommon', 45, {\r\n    armor: 1,\r\n    strength: 1,\r\n    agility: -2,\r\n  })\r\n","import { createRing } from '..'\r\n\r\nexport const LUCKY_RING = () =>\r\n  createRing('Lucky Ring', 'uncommon', 50, { luck: 20 })\r\n\r\nexport const RING_OF_FOCUS = () =>\r\n  createRing('Ring of Focus', 'uncommon', 50, {\r\n    attackDamageOffset: 1,\r\n    criticalChance: 4,\r\n  })\r\n\r\nexport const DRAINED_RING = () =>\r\n  createRing('Drained Ring', 'uncommon', 40, {\r\n    resistance: 2,\r\n  })\r\n\r\nexport const SIMPLE_RING = () =>\r\n  createRing('Simple Ring', 'common', 30, {\r\n    armor: 1,\r\n  })\r\n","import { createShield } from '..'\r\nimport { TAUNT } from '../../../Skill/skills/armor'\r\n\r\nexport const FOREST_BUCKLER = () =>\r\n  createShield('Forest Buckler', 'uncommon', 20, {\r\n    armor: 1,\r\n    evasion: 4,\r\n  })\r\n\r\nexport const LEATHER_BUCKLER = () =>\r\n  createShield('Leather Buckler', 'common', 10, {\r\n    evasion: 2,\r\n  })\r\n\r\nexport const STUDENT_WARD = () =>\r\n  createShield(\r\n    'Student Ward',\r\n    'uncommon',\r\n    20,\r\n    {\r\n      resistance: 2,\r\n    },\r\n    [TAUNT],\r\n  )\r\n\r\nexport const BROKEN_SHIELD = () =>\r\n  createShield(\r\n    'Broken Shield',\r\n    'common',\r\n    14,\r\n    {\r\n      armor: 1,\r\n    },\r\n    [TAUNT],\r\n  )\r\n\r\nexport const VILLAGER_SHIELD = () =>\r\n  createShield(\r\n    'Villager Shield',\r\n    'common',\r\n    20,\r\n    {\r\n      armor: 2,\r\n      resistance: 2,\r\n    },\r\n    [TAUNT],\r\n  )\r\n\r\nexport const WOODEN_WAR_SHIELD = () =>\r\n  createShield(\r\n    'Wooden War Shield',\r\n    'common',\r\n    20,\r\n    {\r\n      armor: 1,\r\n      resistance: 1,\r\n      agility: -5,\r\n    },\r\n    [TAUNT],\r\n    ['stunned'],\r\n  )\r\n","import { createShield } from '..'\r\nimport { TAUNT } from '../../../Skill/skills/armor'\r\n\r\nexport const WOODEN_PLANK_SHIELD = () =>\r\n  createShield(\r\n    'Wooden Plank Shield',\r\n    'common',\r\n    25,\r\n    {\r\n      armor: 4,\r\n      resistance: 2,\r\n    },\r\n    [TAUNT],\r\n  )\r\n\r\nexport const CULTIST_SHIELD = () =>\r\n  createShield(\r\n    'Cultist Shield',\r\n    'common',\r\n    25,\r\n    {\r\n      armor: 3,\r\n      resistance: 1,\r\n    },\r\n    [TAUNT],\r\n  )\r\n\r\nexport const WOODEN_BUCKLER = () =>\r\n  createShield('Wooden Buckler', 'common', 15, {\r\n    evasion: 3,\r\n  })\r\n\r\nexport const IRON_BUCKLER = () =>\r\n  createShield('Iron Buckler', 'common', 25, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    evasion: 5,\r\n  })\r\n\r\nexport const APPRENTICE_WARD = () =>\r\n  createShield(\r\n    'Apprentice Shield',\r\n    'common',\r\n    25,\r\n    {\r\n      armor: 2,\r\n      resistance: 3,\r\n    },\r\n    [TAUNT],\r\n  )\r\n\r\nexport const IRON_WAR_SHIELD = () =>\r\n  createShield(\r\n    'Iron War Shield',\r\n    'uncommon',\r\n    30,\r\n    {\r\n      armor: 2,\r\n      resistance: 2,\r\n      agility: -5,\r\n    },\r\n    [TAUNT],\r\n    ['stunned'],\r\n  )\r\n","import { createShield } from '..'\r\nimport { TAUNT } from '../../../Skill/skills/armor'\r\n\r\nexport const GRAVEGUARD_SHIELD = () =>\r\n  createShield(\r\n    'Graveguard Shield',\r\n    'uncommon',\r\n    40,\r\n    {\r\n      armor: 2,\r\n      resistance: 2,\r\n      attackDamageOffset: 2,\r\n    },\r\n    [TAUNT],\r\n  )\r\n\r\nexport const OLD_FOREST_SHIELD = () =>\r\n  createShield('Old Forest Shield', 'rare', 50, {\r\n    armor: 6,\r\n    strength: 5,\r\n    agility: -3,\r\n  })\r\n\r\nexport const HEAVY_IRON_SHIELD = () =>\r\n  createShield(\r\n    'Heavy Iron Shield',\r\n    'uncommon',\r\n    40,\r\n    {\r\n      armor: 5,\r\n      resistance: 5,\r\n      agility: -2,\r\n    },\r\n    [TAUNT],\r\n  )\r\n\r\nexport const NOVICE_WARD = () =>\r\n  createShield('Novice Ward', 'uncommon', 40, {\r\n    armor: 1,\r\n    resistance: 3,\r\n    damageReflection: {\r\n      melee: 0,\r\n      ranged: 6,\r\n    },\r\n  })\r\n\r\nexport const CULTIST_WARD = () =>\r\n  createShield('Cultist Ward', 'uncommon', 40, {\r\n    armor: 2,\r\n    resistance: 6,\r\n  })\r\n","import { tArmor } from '../../type'\r\nimport {\r\n  PENDANTS_BY_LEVEL,\r\n  RINGS_BY_LEVEL,\r\n  SHIELDS_BY_LEVEL,\r\n} from '../constants'\r\nimport {\r\n  ADVENTURER_BOOTS,\r\n  ADVENTURER_CLOAK,\r\n  ADVENTURER_HOOD,\r\n} from './adventure'\r\nimport {\r\n  ANTIQUATED_ATTIRE,\r\n  ANTIQUATED_HAT,\r\n  ANTIQUATED_SHOES,\r\n} from './antiquated'\r\nimport { APPRENTICE_CAP, APPRENTICE_ROBE, APPRENTICE_SHOES } from './apprentice'\r\nimport {\r\n  ARISTOCRAT_ATTIRE,\r\n  ARISTOCRAT_HAT,\r\n  ARISTOCRAT_SHOES,\r\n} from './aristocrat'\r\nimport { ASSASSIN_BOOTS, ASSASSIN_CLOAK, ASSASSIN_HOOD } from './assassin'\r\nimport { BISHOP_MITRE, BISHOP_ROBES, BISHOP_SHOES } from './bishop'\r\nimport { BONE_ARMOR, BONE_BOOTS, BONE_HELMET } from './bone'\r\nimport {\r\n  EXECUTIONER_ARMOR,\r\n  EXECUTIONER_BOOTS,\r\n  EXECUTIONER_HELMET,\r\n} from './executioner'\r\nimport {\r\n  FALLEN_RAIDER_ARMOR,\r\n  FALLEN_RAIDER_BOOTS,\r\n  FALLEN_RAIDER_HELMENT,\r\n} from './fallen_raider'\r\nimport {\r\n  GRAVEGUARD_ARMOR,\r\n  GRAVEGUARD_BOOTS,\r\n  GRAVEGUARD_HELMET,\r\n} from './graveguard'\r\nimport { HUNTER_BOOTS, HUNTER_CLOAK, HUNTER_HOOD } from './hunter'\r\nimport { IRON_ARMOR, IRON_BOOTS, IRON_HELMET } from './iron'\r\nimport {\r\n  NECROMANCER_COWL,\r\n  NECROMANCER_ROBES,\r\n  NECROMANCER_WRAPS,\r\n} from './necromancer'\r\nimport { NOBLE_HAT, NOBLE_OUTFIT, NOBLE_SHOES } from './noble'\r\nimport { NOVICE_HAT, NOVICE_ROBES, NOVICE_SHOES } from './novice'\r\nimport {\r\n  OLD_KNIGHT_ARMOR,\r\n  OLD_KNIGHT_BOOTS,\r\n  OLD_KNIGHT_HELMET,\r\n} from './old_knight'\r\nimport { PATRICIAN_ATTIRE, PATRICIAN_HAT, PATRICIAN_SHOES } from './patrician'\r\nimport { RANGER_BOOTS, RANGER_CLOAK, RANGER_HOOD } from './ranger'\r\nimport { REAPER_BOOTS, REAPER_HOOD, REAPER_ROBES } from './reaper'\r\nimport { ROGUE_BOOTS, ROGUE_CLOAK, ROGUE_HOOD } from './rogue'\r\nimport { STUDENT_BOOTS, STUDENT_CAP, STUDENT_ROBES } from './student'\r\nimport { TOMB_ARMOR, TOMB_BOOTS, TOMB_HELMET } from './tomb'\r\n\r\nexport const ARMOR_BY_LEVEL: Record<number, (() => tArmor)[]> = {\r\n  0: [\r\n    RANGER_HOOD,\r\n    RANGER_CLOAK,\r\n    RANGER_BOOTS,\r\n    PATRICIAN_HAT,\r\n    PATRICIAN_ATTIRE,\r\n    PATRICIAN_SHOES,\r\n    EXECUTIONER_HELMET,\r\n    EXECUTIONER_ARMOR,\r\n    EXECUTIONER_BOOTS,\r\n    STUDENT_CAP,\r\n    STUDENT_ROBES,\r\n    STUDENT_BOOTS,\r\n    TOMB_HELMET,\r\n    TOMB_ARMOR,\r\n    TOMB_BOOTS,\r\n    ...RINGS_BY_LEVEL[0],\r\n    ...PENDANTS_BY_LEVEL[0],\r\n    ...SHIELDS_BY_LEVEL[0],\r\n  ],\r\n  1: [\r\n    ADVENTURER_HOOD,\r\n    ADVENTURER_CLOAK,\r\n    ADVENTURER_BOOTS,\r\n    ARISTOCRAT_HAT,\r\n    ARISTOCRAT_ATTIRE,\r\n    ARISTOCRAT_SHOES,\r\n    GRAVEGUARD_HELMET,\r\n    GRAVEGUARD_ARMOR,\r\n    GRAVEGUARD_BOOTS,\r\n    APPRENTICE_CAP,\r\n    APPRENTICE_ROBE,\r\n    APPRENTICE_SHOES,\r\n    ...SHIELDS_BY_LEVEL[1],\r\n  ],\r\n  2: [\r\n    HUNTER_HOOD,\r\n    HUNTER_CLOAK,\r\n    HUNTER_BOOTS,\r\n    ANTIQUATED_HAT,\r\n    ANTIQUATED_ATTIRE,\r\n    ANTIQUATED_SHOES,\r\n    IRON_HELMET,\r\n    IRON_ARMOR,\r\n    IRON_BOOTS,\r\n    BONE_HELMET,\r\n    BONE_ARMOR,\r\n    BONE_BOOTS,\r\n    NOVICE_HAT,\r\n    NOVICE_ROBES,\r\n    NOVICE_SHOES,\r\n    ...SHIELDS_BY_LEVEL[2],\r\n  ],\r\n  3: [\r\n    ROGUE_HOOD,\r\n    ROGUE_CLOAK,\r\n    ROGUE_BOOTS,\r\n    NECROMANCER_COWL,\r\n    NECROMANCER_ROBES,\r\n    NECROMANCER_WRAPS,\r\n    FALLEN_RAIDER_HELMENT,\r\n    FALLEN_RAIDER_ARMOR,\r\n    FALLEN_RAIDER_BOOTS,\r\n    NOBLE_HAT,\r\n    NOBLE_OUTFIT,\r\n    NOBLE_SHOES,\r\n  ],\r\n  4: [\r\n    ASSASSIN_HOOD,\r\n    ASSASSIN_CLOAK,\r\n    ASSASSIN_BOOTS,\r\n    OLD_KNIGHT_HELMET,\r\n    OLD_KNIGHT_ARMOR,\r\n    OLD_KNIGHT_BOOTS,\r\n    REAPER_HOOD,\r\n    REAPER_ROBES,\r\n    REAPER_BOOTS,\r\n    BISHOP_MITRE,\r\n    BISHOP_ROBES,\r\n    BISHOP_SHOES,\r\n  ],\r\n}\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const RANGER_HOOD = () =>\r\n  createHat('Ranger Hood', 'common', 15, {\r\n    resistance: 1,\r\n    evasion: 3,\r\n    dexterity: 1,\r\n  })\r\nexport const RANGER_CLOAK = () =>\r\n  createLightArmor('Ranger Cloak', 'common', 30, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    evasion: 5,\r\n    dexterity: 2,\r\n    charisma: -2,\r\n  })\r\nexport const RANGER_BOOTS = () =>\r\n  createFootwear('Ranger Boots', 'common', 15, {\r\n    armor: 1,\r\n    evasion: 2,\r\n    dexterity: 1,\r\n    agility: 1,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const PATRICIAN_HAT = () =>\r\n  createHat('Patrician Hat', 'common', 25, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    charisma: 1,\r\n  })\r\n\r\nexport const PATRICIAN_ATTIRE = () =>\r\n  createLightArmor('Patrician Attire', 'common', 70, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    charisma: 2,\r\n    luck: 2,\r\n  })\r\n\r\nexport const PATRICIAN_SHOES = () =>\r\n  createFootwear('Patrician Shoes', 'common', 25, {\r\n    armor: 1,\r\n    resistance: 2,\r\n    charisma: 1,\r\n    dexterity: -2,\r\n    luck: 1,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const EXECUTIONER_HELMET = () =>\r\n  createHelmet('Executioner Helmet', 'common', 15, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    vigor: 1,\r\n  })\r\n\r\nexport const EXECUTIONER_ARMOR = () =>\r\n  createHeavyArmor('Executioner Armor', 'common', 40, {\r\n    armor: 3,\r\n    resistance: 2,\r\n    strength: 2,\r\n    intelligence: -2,\r\n  })\r\n\r\nexport const EXECUTIONER_BOOTS = () =>\r\n  createFootwear('Executioner Boots', 'common', 15, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    strength: 1,\r\n    vigor: 1,\r\n  })\r\n","import { createFootwear, createMagicArmor, createMagicHat } from '..'\r\n\r\nexport const STUDENT_CAP = () =>\r\n  createMagicHat('Student Cap', 'common', 15, {\r\n    resistance: 2,\r\n    intelligence: 1,\r\n  })\r\n\r\nexport const STUDENT_ROBES = () =>\r\n  createMagicArmor('Student Robes', 'common', 20, {\r\n    armor: 1,\r\n    resistance: 3,\r\n    strength: -2,\r\n    intelligence: 2,\r\n  })\r\n\r\nexport const STUDENT_BOOTS = () =>\r\n  createFootwear('Student Boots', 'common', 15, {\r\n    resistance: 2,\r\n    intelligence: 1,\r\n    strength: -2,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const TOMB_HELMET = () =>\r\n  createHelmet('Tomb Helment', 'common', 30, {\r\n    armor: 3,\r\n    resistance: 3,\r\n  })\r\n\r\nexport const TOMB_ARMOR = () =>\r\n  createHeavyArmor('Tomb Armor', 'common', 70, {\r\n    armor: 7,\r\n    resistance: 5,\r\n  })\r\n\r\nexport const TOMB_BOOTS = () =>\r\n  createFootwear('Tomb Boots', 'common', 35, {\r\n    armor: 3,\r\n    resistance: 2,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const ADVENTURER_HOOD = () =>\r\n  createHat('Adventurer Hood', 'common', 20, {\r\n    resistance: 2,\r\n    evasion: 3,\r\n    dexterity: 2,\r\n  })\r\n\r\nexport const ADVENTURER_CLOAK = () =>\r\n  createLightArmor('Adventurer Cloak', 'uncommon', 70, {\r\n    armor: 3,\r\n    resistance: 3,\r\n    evasion: 6,\r\n    dexterity: 3,\r\n    charisma: -4,\r\n  })\r\n\r\nexport const ADVENTURER_BOOTS = () =>\r\n  createFootwear('Adventurer Boots', 'common', 20, {\r\n    armor: 2,\r\n    evasion: 3,\r\n    dexterity: 2,\r\n    agility: 2,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const ARISTOCRAT_HAT = () =>\r\n  createHat('Aristocrat Hat', 'common', 25, {\r\n    armor: 1,\r\n    resistance: 2,\r\n    maxInspirationOffset: 1,\r\n    charisma: 2,\r\n    luck: 2,\r\n  })\r\n\r\nexport const ARISTOCRAT_ATTIRE = () =>\r\n  createLightArmor('Aristocrat Attire', 'uncommon', 80, {\r\n    armor: 4,\r\n    resistance: 4,\r\n    charisma: 3,\r\n    luck: 3,\r\n  })\r\n\r\nexport const ARISTOCRAT_SHOES = () =>\r\n  createFootwear('Aristocrat Shoes', 'common', 30, {\r\n    armor: 1,\r\n    resistance: 2,\r\n    dexterity: -2,\r\n    charisma: 2,\r\n    luck: 2,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const GRAVEGUARD_HELMET = () =>\r\n  createHelmet('Graveguard Helmet', 'common', 25, {\r\n    armor: 2,\r\n    resistance: 1,\r\n    healthRegeneration: 1,\r\n  })\r\n\r\nexport const GRAVEGUARD_ARMOR = () =>\r\n  createHeavyArmor('Graveguard Armor', 'uncommon', 80, {\r\n    armor: 6,\r\n    resistance: 1,\r\n    strength: 2,\r\n    vigor: 2,\r\n  })\r\n\r\nexport const GRAVEGUARD_BOOTS = () =>\r\n  createFootwear('Graveguard Boots', 'common', 15, {\r\n    armor: 2,\r\n    resistance: 1,\r\n    vigor: 2,\r\n  })\r\n","import { createFootwear, createMagicArmor, createMagicHat } from '..'\r\n\r\nexport const APPRENTICE_CAP = () =>\r\n  createMagicHat('Apprentice Cap', 'common', 25, {\r\n    resistance: 4,\r\n    maxInspirationOffset: 1,\r\n    intelligence: 2,\r\n  }) // confuse immunity\r\n\r\nexport const APPRENTICE_ROBE = () =>\r\n  createMagicArmor(\r\n    'Apprentice Robe',\r\n    'uncommon',\r\n    90,\r\n    {\r\n      armor: 2,\r\n      resistance: 6,\r\n      maxInspirationOffset: 1,\r\n      strength: -3,\r\n      intelligence: 3,\r\n    },\r\n    [],\r\n    [\r\n      'cursed-agility',\r\n      'cursed-charisma',\r\n      'cursed-dexterity',\r\n      'cursed-intelligence',\r\n      'cursed-luck',\r\n      'cursed-strength',\r\n      'cursed-vigor',\r\n    ],\r\n  )\r\n\r\nexport const APPRENTICE_SHOES = () =>\r\n  createFootwear('Apprentice Shoes', 'common', 25, {\r\n    armor: 1,\r\n    resistance: 3,\r\n    strength: -2,\r\n    intelligence: 2,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const HUNTER_HOOD = () =>\r\n  createHat('Hunter Hood', 'common', 35, {\r\n    resistance: 3,\r\n    evasion: 4,\r\n    dexterity: 3,\r\n  })\r\n\r\nexport const HUNTER_CLOAK = () =>\r\n  createLightArmor('Hunter Cloak', 'uncommon', 80, {\r\n    armor: 5,\r\n    resistance: 5,\r\n    evasion: 7,\r\n    dexterity: 4,\r\n    charisma: -4,\r\n    agility: 2,\r\n  })\r\n\r\nexport const HUNTER_BOOTS = () =>\r\n  createFootwear('Hunter Boots', 'common', 35, {\r\n    armor: 3,\r\n    evasion: 4,\r\n    dexterity: 3,\r\n    agility: 3,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const ANTIQUATED_HAT = () =>\r\n  createHat('Antiquated Hat', 'common', 35, {\r\n    armor: 2,\r\n    resistance: 3,\r\n    maxInspirationOffset: 1,\r\n    charisma: 3,\r\n    luck: 3,\r\n  })\r\n\r\nexport const ANTIQUATED_ATTIRE = () =>\r\n  createLightArmor('Antiquated Attire', 'uncommon', 80, {\r\n    armor: 6,\r\n    resistance: 6,\r\n    dexterity: -4,\r\n    charisma: 4,\r\n    luck: 4,\r\n  })\r\n\r\nexport const ANTIQUATED_SHOES = () =>\r\n  createFootwear('Antiquated Shoes', 'common', 35, {\r\n    armor: 2,\r\n    resistance: 3,\r\n    dexterity: -4,\r\n    charisma: 3,\r\n    luck: 3,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const IRON_HELMET = () =>\r\n  createHelmet(\r\n    'Iron Helmet',\r\n    'common',\r\n    40,\r\n    {\r\n      armor: 4,\r\n      strength: 2,\r\n      dexterity: -4,\r\n    },\r\n    [],\r\n    ['stunned'],\r\n  )\r\n\r\nexport const IRON_ARMOR = () =>\r\n  createHeavyArmor('Iron Armor', 'uncommon', 90, {\r\n    armor: 7,\r\n    resistance: 1,\r\n    strength: 3,\r\n    intelligence: -3,\r\n  })\r\n\r\nexport const IRON_BOOTS = () =>\r\n  createFootwear('Iron Boots', 'common', 40, {\r\n    armor: 2,\r\n    resistance: 2,\r\n    healthRegeneration: 1,\r\n    vigor: 4,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const BONE_HELMET = () =>\r\n  createHelmet('Bone Helmet', 'common', 35, {\r\n    armor: 2,\r\n    resistance: 2,\r\n    healthRegeneration: 1,\r\n    vigor: 3,\r\n  }) // bonus damage\r\n\r\nexport const BONE_ARMOR = () =>\r\n  createHeavyArmor(\r\n    'Bone Armor',\r\n    'uncommon',\r\n    80,\r\n    {\r\n      armor: 5,\r\n      resistance: 5,\r\n      maxHealthOffset: 5,\r\n      healthRegeneration: 2,\r\n      vigor: 5,\r\n    },\r\n    [],\r\n    ['frozen'],\r\n  )\r\n\r\nexport const BONE_BOOTS = () =>\r\n  createFootwear('Bone Boots', 'common', 35, {\r\n    armor: 2,\r\n    resistance: 2,\r\n    healthRegeneration: 1,\r\n    vigor: 4,\r\n  })\r\n","import { createFootwear, createMagicArmor, createMagicHat } from '..'\r\n\r\nexport const NOVICE_HAT = () =>\r\n  createMagicHat('Novice Hat', 'common', 35, {\r\n    resistance: 6,\r\n    intelligence: 3,\r\n  }) // confuse immunity\r\n\r\nexport const NOVICE_ROBES = () =>\r\n  createMagicArmor('Novice Robes', 'uncommon', 90, {\r\n    armor: 3,\r\n    resistance: 9,\r\n    maxInspirationOffset: 1,\r\n    strength: -4,\r\n    intelligence: 4,\r\n  })\r\n\r\nexport const NOVICE_SHOES = () =>\r\n  createFootwear('Novice Shoes', 'common', 25, {\r\n    armor: 2,\r\n    resistance: 4,\r\n    strength: -3,\r\n    intelligence: 3,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const ROGUE_HOOD = () =>\r\n  createHat('Rogue Hood', 'uncommon', 100, {\r\n    armor: 1,\r\n    resistance: 3,\r\n    evasion: 3,\r\n  })\r\n\r\nexport const ROGUE_CLOAK = () =>\r\n  createLightArmor('Rogue Cloak', 'rare', 200, {\r\n    armor: 5,\r\n    resistance: 5,\r\n    evasion: 10,\r\n    dexterity: 5,\r\n    charisma: 5,\r\n  })\r\n\r\nexport const ROGUE_BOOTS = () =>\r\n  createFootwear('Rogue Boots', 'uncommon', 110, {\r\n    armor: 3,\r\n    evasion: 3,\r\n    dexterity: 4,\r\n    agility: 4,\r\n  })\r\n","import { createFootwear, createHat, createMagicArmor } from '..'\r\n\r\nexport const NECROMANCER_COWL = () =>\r\n  createHat('Necromancer Cowl', 'uncommon', 100, {\r\n    resistance: 8,\r\n    intelligence: 4,\r\n    maxInspirationOffset: 1,\r\n  })\r\n\r\nexport const NECROMANCER_ROBES = () =>\r\n  createMagicArmor(\r\n    'Necromancer Robes',\r\n    'rare',\r\n    180,\r\n    {\r\n      armor: 4,\r\n      resistance: 12,\r\n      maxInspirationOffset: 1,\r\n      strength: -5,\r\n      intelligence: 5,\r\n    },\r\n    [],\r\n    [\r\n      'cursed-agility',\r\n      'cursed-charisma',\r\n      'cursed-dexterity',\r\n      'cursed-intelligence',\r\n      'cursed-luck',\r\n      'cursed-strength',\r\n      'cursed-vigor',\r\n    ],\r\n  )\r\n\r\nexport const NECROMANCER_WRAPS = () =>\r\n  createFootwear('Necromancer Wraps', 'uncommon', 90, {\r\n    armor: 3,\r\n    evasion: 5,\r\n    strength: -4,\r\n    intelligence: 4,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const FALLEN_RAIDER_HELMENT = () =>\r\n  createHelmet('Fallen Raider Helmet', 'uncommon', 100, {\r\n    armor: 6,\r\n    resistance: 2,\r\n    strength: 3,\r\n    intelligence: -3,\r\n  })\r\n\r\nexport const FALLEN_RAIDER_ARMOR = () =>\r\n  createHeavyArmor(\r\n    'Fallen Raider Armor',\r\n    'rare',\r\n    200,\r\n    {\r\n      armor: 10,\r\n      resistance: 2,\r\n      strength: 4,\r\n      intelligence: -4,\r\n    },\r\n    [],\r\n  )\r\n\r\nexport const FALLEN_RAIDER_BOOTS = () =>\r\n  createFootwear('Fallen Raider Boots', 'uncommon', 100, {\r\n    armor: 5,\r\n    evasion: 3,\r\n    vigor: 4,\r\n    strength: 3,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const NOBLE_HAT = () =>\r\n  createHat('Noble Hat', 'uncommon', 150, {\r\n    armor: 3,\r\n    resistance: 5,\r\n    maxInspirationOffset: 1,\r\n    charisma: 5,\r\n    luck: 5,\r\n  })\r\n\r\nexport const NOBLE_OUTFIT = () =>\r\n  createLightArmor('Noble Outfit', 'rare', 250, {\r\n    armor: 8,\r\n    resistance: 8,\r\n    dexterity: -5,\r\n    charisma: 5,\r\n    luck: 5,\r\n  })\r\n\r\nexport const NOBLE_SHOES = () =>\r\n  createFootwear('Noble Shoes', 'uncommon', 100, {\r\n    armor: 3,\r\n    resistance: 4,\r\n    dexterity: -4,\r\n    charisma: 4,\r\n    luck: 4,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const ASSASSIN_HOOD = () =>\r\n  createHat('Assassin Hood', 'uncommon', 120, {\r\n    resistance: 5,\r\n    evasion: 5,\r\n    dexterity: 3,\r\n  })\r\n\r\nexport const ASSASSIN_CLOAK = () =>\r\n  createLightArmor('Assassin Cloak', 'rare', 200, {\r\n    armor: 9,\r\n    resistance: 9,\r\n    evasion: 10,\r\n    dexterity: 7,\r\n    charisma: -5,\r\n  })\r\n\r\nexport const ASSASSIN_BOOTS = () =>\r\n  createFootwear('Rogue Boots', 'uncommon', 120, {\r\n    armor: 5,\r\n    evasion: 5,\r\n    dexterity: 5,\r\n    agility: 5,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const OLD_KNIGHT_HELMET = () =>\r\n  createHelmet('Old Knight Helmet', 'uncommon', 100, {\r\n    armor: 8,\r\n    resistance: 2,\r\n    strength: 5,\r\n    intelligence: -5,\r\n  })\r\n\r\nexport const OLD_KNIGHT_ARMOR = () =>\r\n  createHeavyArmor(\r\n    'Old Knight Armor',\r\n    'rare',\r\n    250,\r\n    {\r\n      armor: 13,\r\n      resistance: 3,\r\n      strength: 5,\r\n      intelligence: -5,\r\n    },\r\n    [],\r\n  )\r\n\r\nexport const OLD_KNIGHT_BOOTS = () =>\r\n  createFootwear('Old Knight Boots', 'uncommon', 100, {\r\n    armor: 7,\r\n    evasion: 4,\r\n    vigor: 6,\r\n    strength: 5,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const REAPER_HOOD = () =>\r\n  createHat(\r\n    'Reaper Hood',\r\n    'uncommon',\r\n    150,\r\n    {\r\n      armor: 1,\r\n      resistance: 1,\r\n      evasion: 5,\r\n      criticalChance: 5,\r\n      goldModifier: 5,\r\n    },\r\n    [],\r\n    ['stunned'],\r\n  )\r\n\r\nexport const REAPER_ROBES = () =>\r\n  createLightArmor('Reaper Robes', 'rare', 300, {\r\n    armor: 4,\r\n    resistance: 4,\r\n    evasion: 4,\r\n    goldModifier: 10,\r\n  })\r\n\r\nexport const REAPER_BOOTS = () =>\r\n  createFootwear('Reaper Boots', 'uncommon', 200, {\r\n    armor: 2,\r\n    resistance: 2,\r\n    evasion: 4,\r\n    attackDamageModifier: 3,\r\n  })\r\n","import { createFootwear, createMagicArmor, createMagicHat } from '..'\r\n\r\nexport const BISHOP_MITRE = () =>\r\n  createMagicHat('Bishop Mitre', 'rare', 100, {\r\n    resistance: 10,\r\n    maxInspirationOffset: 1,\r\n    intelligence: 5,\r\n  })\r\n\r\nexport const BISHOP_ROBES = () =>\r\n  createMagicArmor(\r\n    'Bishop Robes',\r\n    'rare',\r\n    200,\r\n    {\r\n      armor: 4,\r\n      resistance: 15,\r\n      maxInspirationOffset: 1,\r\n      strength: -7,\r\n      intelligence: 5,\r\n    },\r\n    [],\r\n    [\r\n      'cursed-agility',\r\n      'cursed-charisma',\r\n      'cursed-dexterity',\r\n      'cursed-intelligence',\r\n      'cursed-luck',\r\n      'cursed-strength',\r\n      'cursed-vigor',\r\n    ],\r\n  )\r\n\r\nexport const BISHOP_SHOES = () =>\r\n  createFootwear('Bishop Shoes', 'rare', 120, {\r\n    armor: 4,\r\n    resistance: 6,\r\n    strength: -7,\r\n    intelligence: 4,\r\n  })\r\n","import { getRandom } from '../../../util'\r\nimport { tCharacter } from '../../Character/type'\r\n\r\nexport const makeRandomFloorEncounter = (\r\n  characterList: (() => tCharacter)[],\r\n  enemyCount: number,\r\n): tCharacter[] => {\r\n  return Array(enemyCount)\r\n    .fill(null)\r\n    .map((_) => {\r\n      return getRandom(characterList)()\r\n    })\r\n}\r\n\r\nexport interface tFloorEnemyConfig {\r\n  enemy: () => tCharacter\r\n  depths: number[]\r\n}\r\n\r\nexport type tFloorEncounterSizes = Record<number, number>\r\n\r\nexport const buildFloorEnemeis = (\r\n  configs: tFloorEnemyConfig[],\r\n  encounterSizes: tFloorEncounterSizes,\r\n  size: number,\r\n) => {\r\n  const result = Array(size)\r\n    .fill(null)\r\n    .map((_, depth) => {\r\n      const enemies = configs\r\n        .filter((c) => c.depths.includes(depth))\r\n        .map((c) => c.enemy)\r\n      return makeRandomFloorEncounter(enemies, encounterSizes[depth])\r\n    })\r\n    .reduce((res, current, index) => {\r\n      return {\r\n        ...res,\r\n        [index]: [current],\r\n      }\r\n    }, {})\r\n\r\n  return result\r\n}\r\n","import { getRandom } from '../../util'\r\nimport { ARMOR_BY_LEVEL } from '../Armor/builders/sets'\r\nimport { tArmor } from '../Armor/type'\r\nimport { WEAPONS_BY_LEVEL } from '../Weapon/builders/objects'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { tItemType } from './type'\r\n\r\nexport const getRandomItem = (\r\n  level: number,\r\n  min: number = 0,\r\n): tWeapon | tArmor => {\r\n  const itemType: tItemType = getRandom(['weapon', 'armor'])\r\n  if (itemType === 'weapon') {\r\n    level = level === 0 ? 1 : level\r\n    let items = Array(level + 1)\r\n      .fill(null)\r\n      .reduce((result, _, index) => {\r\n        if (index === 0) return result\r\n        if (index < min) return result\r\n        return [...result, ...WEAPONS_BY_LEVEL[index]]\r\n      }, [] as (() => tWeapon)[]) as (() => tWeapon)[]\r\n\r\n    const random = getRandom(items)\r\n    return random()\r\n  } else {\r\n    let items = Array(level + 1)\r\n      .fill(null)\r\n      .reduce((result, _, index) => {\r\n        if (index < min) return result\r\n        return [...result, ...(ARMOR_BY_LEVEL[index] || [])]\r\n      }, [] as (() => tArmor)[]) as (() => tArmor)[]\r\n    const random = getRandom(items)\r\n    if (!random) return getRandomItem(level, min)\r\n    return random()\r\n  }\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Cultist from '../../../icons/svg/lorc/cultist.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const CULTIST_SCHOLAR = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Cultist Scholar',\r\n    Cultist,\r\n    2,\r\n    29,\r\n    makeEnemyWeapon('intelligence', 28, 'melee', 'magic', [\r\n      createSkill('Enflame', 4, -10, { perfectStatus: ['burning'] }),\r\n      createSkill('Arcane', 3, 0, { perfectPierce: true }),\r\n    ]),\r\n    {\r\n      intelligence: 80,\r\n      agility: getRandom([68, 69, 70, 71]),\r\n      armor: 3,\r\n      resistance: 8,\r\n      evasion: 17,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(70, 40),\r\n      makeEnemyReward(70, 40),\r\n      makeEnemyReward(90, 50, [getRandomItem(4, 3)]),\r\n    ],\r\n  )\r\n}\r\n","import { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport FireWhisp from '../../../icons/svg/lorc/unfriendly-fire.svg'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const FLAME_WISP = () =>\r\n  makeEnemy(\r\n    'Flame Wisp',\r\n    FireWhisp,\r\n    4,\r\n    19,\r\n    makeEnemyWeapon('intelligence', 30, 'ranged', 'magic', [\r\n      createSkill('Ember', 3, 0),\r\n      createSkill('Engulf', 3, -10, { perfectStatus: ['burning'] }),\r\n      createSkill('Fire Blast', 4, -10, {\r\n        perfectStatus: ['burning'],\r\n        targetType: 'group',\r\n      }),\r\n    ]),\r\n    {\r\n      intelligence: 75,\r\n      agility: getRandom([70, 71, 72, 73, 74, 75]),\r\n      evasion: 20,\r\n      resistance: 7,\r\n      armor: 7,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(80, 40, [getRandomItem(3, 3)]),\r\n      makeEnemyReward(100, 50, [getRandomItem(4, 3)]),\r\n    ],\r\n    ['burning'],\r\n    [\r\n      {\r\n        duration: -1,\r\n        type: 'evasive',\r\n        stats: ZERO_STATS,\r\n        stack: 0,\r\n        immunities: [],\r\n      },\r\n    ],\r\n  )\r\n","import { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport Banshee from '../../../icons/svg/lorc/haunting.svg'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\n\r\nexport const BANSHEE = () =>\r\n  makeEnemy(\r\n    'Banshee',\r\n    Banshee,\r\n    6,\r\n    32,\r\n    makeEnemyWeapon('intelligence', 32, 'ranged', 'magic', [\r\n      createSkill('Nova', 3, -5, {\r\n        damageModifier: 0.5,\r\n      }),\r\n      createSkill('Swipe', 3, 0, { perfectPierce: true }),\r\n      createSkill('Attack Down', 3, -15, {\r\n        damage: false,\r\n        damageModifier: 0,\r\n        perfectStatus: ['attack-down'],\r\n      }),\r\n    ]),\r\n    {\r\n      intelligence: 78,\r\n      strength: 70,\r\n      agility: getRandom([77, 78, 79, 80, 81, 82]),\r\n      evasion: 30,\r\n      resistance: 8,\r\n      armor: 1,\r\n    },\r\n    ['undead'],\r\n    [\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(80, 40, [getRandomItem(4, 3)]),\r\n      makeEnemyReward(100, 50, [getRandomItem(4, 4)]),\r\n    ],\r\n    ['burning', 'bleeding', 'poisoned', 'stunned'],\r\n  )\r\n","import { getRandom } from '../../../util'\r\nimport Skull from '../../../icons/svg/lorc/daemon-skull.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const CONSECRATED_GUARD = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Consecrated Guard',\r\n    Skull,\r\n    6,\r\n    48,\r\n    makeEnemyWeapon('strength', 34, 'melee', 'physical', [\r\n      createSkill('Beast Claw', 4, 0, { perfectStatus: ['attack-down'] }),\r\n      createSkill('Beast Bite', 3, -10, { perfectPierce: true }),\r\n    ]),\r\n    {\r\n      strength: 78,\r\n      agility: getRandom([69, 70, 71, 72, 73, 74]),\r\n      armor: 8,\r\n      resistance: 8,\r\n      evasion: 17,\r\n    },\r\n    ['undead'],\r\n    [\r\n      makeEnemyReward(100, 40),\r\n      makeEnemyReward(180, 40, [getRandomItem(3, 3)]),\r\n      makeEnemyReward(200, 50, [getRandomItem(4, 3)]),\r\n    ],\r\n  )\r\n}\r\n","import { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport Spirit from '../../../icons/svg/lorc/spectre.svg'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { getRandom } from '../../../util'\r\nimport { tStatusType } from '../../Status/type'\r\nimport { getRandomItem } from '../../Item/util'\r\n\r\nexport const TOMB_SPIRIT = () =>\r\n  makeEnemy(\r\n    'Tomb Spirit',\r\n    Spirit,\r\n    4,\r\n    26,\r\n    makeEnemyWeapon('intelligence', 18, 'ranged', 'magic', [\r\n      createSkill('Curse', 2, -10, {\r\n        perfectStatus: [\r\n          getRandom<tStatusType>([\r\n            'cursed-agility',\r\n            'cursed-charisma',\r\n            'cursed-dexterity',\r\n            'cursed-intelligence',\r\n            'cursed-luck',\r\n            'cursed-strength',\r\n          ]),\r\n        ],\r\n      }),\r\n      createSkill('Smite', 4, 0),\r\n    ]),\r\n    {\r\n      intelligence: 84,\r\n      agility: getRandom([75, 76, 77, 78, 79, 80]),\r\n      evasion: 23,\r\n      resistance: 6,\r\n    },\r\n    ['undead'],\r\n    [\r\n      makeEnemyReward(50, 20),\r\n      makeEnemyReward(50, 20),\r\n      makeEnemyReward(80, 40, [getRandomItem(2, 2)]),\r\n      makeEnemyReward(100, 50, [getRandomItem(3, 3)]),\r\n    ],\r\n    ['stunned', 'bleeding', 'poisoned'],\r\n  )\r\n","import {\r\n  CULTIST,\r\n  CULTIST_BRUTE,\r\n  FOREST_BEAST,\r\n  FOREST_BOAR,\r\n  FOREST_RAVEN,\r\n  FOREST_SNAKE,\r\n  FOREST_TROLL,\r\n  FOREST_WITCH,\r\n  FOREST_WOLF,\r\n} from '../../Character/enemies'\r\nimport { TOMB_SPIDER } from '../../Character/enemies/tomb_spider'\r\nimport { TOMB_SPIRIT } from '../../Character/enemies/tomb_spirit'\r\nimport { tFloorEncounterSizes, tFloorEnemyConfig } from './util'\r\n\r\nexport const Floor1EnemyConfigs: tFloorEnemyConfig[] = [\r\n  {\r\n    enemy: FOREST_WOLF,\r\n    depths: [0, 1, 2],\r\n  },\r\n  {\r\n    enemy: FOREST_BEAST,\r\n    depths: [0, 1, 2, 3],\r\n  },\r\n  {\r\n    enemy: FOREST_SNAKE,\r\n    depths: [0, 1, 2, 3, 4],\r\n  },\r\n  {\r\n    enemy: FOREST_WITCH,\r\n    depths: [1, 2, 3, 4, 5, 6, 7],\r\n  },\r\n  {\r\n    enemy: FOREST_RAVEN,\r\n    depths: [2, 3, 4, 5, 6],\r\n  },\r\n  {\r\n    enemy: FOREST_TROLL,\r\n    depths: [3, 4, 5, 6, 7],\r\n  },\r\n  {\r\n    enemy: FOREST_BOAR,\r\n    depths: [4, 5, 6, 7],\r\n  },\r\n  {\r\n    enemy: CULTIST,\r\n    depths: [3, 4, 5, 6, 7],\r\n  },\r\n  {\r\n    enemy: CULTIST_BRUTE,\r\n    depths: [4, 5, 6, 7],\r\n  },\r\n  {\r\n    enemy: TOMB_SPIRIT,\r\n    depths: [8, 9],\r\n  },\r\n]\r\n\r\nexport const Floor1AltEnemyConfigs: tFloorEnemyConfig[] = []\r\n\r\nexport const Floor1EncounterSizes: tFloorEncounterSizes = {\r\n  0: 1,\r\n  1: 2,\r\n  2: 3,\r\n  3: 3,\r\n  4: 3,\r\n  5: 3,\r\n  6: 3,\r\n  7: 3,\r\n  8: 2,\r\n  9: 2,\r\n}\r\n","import Wolf from '../../../icons/svg/lorc/wolf-head.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_WOLF = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Wolf',\r\n    Wolf,\r\n    1,\r\n    9,\r\n    makeEnemyWeapon('dexterity', 9, 'melee', 'physical', [\r\n      createSkill('Bite', 3, 0),\r\n      createSkill('Chomp', 4, 0, { perfectPierce: true }),\r\n    ]),\r\n    {\r\n      dexterity: 52,\r\n      agility: getRandom([55, 56, 57, 58, 59, 60, 61, 62, 63, 64]),\r\n      evasion: 10,\r\n    },\r\n    ['beast'],\r\n    [\r\n      makeEnemyReward(4, 3),\r\n      makeEnemyReward(4, 3),\r\n      makeEnemyReward(5, 6, [getRandomItem(0)]),\r\n    ],\r\n  )\r\n}\r\n","import BeastMan from '../../../icons/svg/lorc/werewolf.svg'\r\nimport { tCharacter } from '../type'\r\nimport { BASE_C_STATS } from '../../Stats/constants'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_BEAST = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Beast',\r\n    BeastMan,\r\n    1,\r\n    12,\r\n    makeEnemyWeapon('strength', 10, 'melee', 'physical', [\r\n      createSkill('Strike', 2, 0),\r\n      createSkill('Impale', 4, -5, { perfectStatus: ['bleeding'] }),\r\n    ]),\r\n    {\r\n      ...BASE_C_STATS,\r\n      strength: 52,\r\n      agility: getRandom([55, 56, 57, 58, 59, 60, 61]),\r\n      armor: 3,\r\n      evasion: 10,\r\n    },\r\n    ['beast'],\r\n    [\r\n      makeEnemyReward(6, 5),\r\n      makeEnemyReward(9, 10, [getRandomItem(0)]),\r\n      makeEnemyReward(10, 10, [getRandomItem(1)]),\r\n    ],\r\n  )\r\n}\r\n","import Bee from '../../../icons/svg/lorc/snake.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandom } from '../../../util'\r\nimport { GODSBEARD } from '../../Consumable/objects/godsbeard'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_SNAKE = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Snake',\r\n    Bee,\r\n    1,\r\n    6,\r\n    makeEnemyWeapon('dexterity', 12, 'melee', 'physical', [\r\n      createSkill('Bite', 3, 0),\r\n      createSkill('Venomous Bite', 3, -10, { perfectStatus: ['poisoned'] }),\r\n    ]),\r\n    {\r\n      dexterity: 52,\r\n      agility: getRandom([78, 79, 80, 81, 82, 83]),\r\n      evasion: 17,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(1, 4),\r\n      makeEnemyReward(5, 8, [getRandomItem(0)]),\r\n      makeEnemyReward(5, 10, [getRandomItem(1)]),\r\n    ],\r\n  )\r\n}\r\n","import Witch from '../../../icons/svg/lorc/witch-flight.svg'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { tStatusType } from '../../Status/type'\r\nimport { tCharacter } from '../type'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\n\r\nexport const FOREST_WITCH = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Witch',\r\n    Witch,\r\n    1,\r\n    9,\r\n    makeEnemyWeapon('intelligence', 9, 'ranged', 'magic', [\r\n      createSkill('Curse', 2, -10, {\r\n        damage: false,\r\n        damageModifier: 0,\r\n        perfectStatus: [\r\n          getRandom<tStatusType>([\r\n            'cursed-agility',\r\n            'cursed-charisma',\r\n            'cursed-dexterity',\r\n            'cursed-intelligence',\r\n            'cursed-luck',\r\n            'cursed-strength',\r\n          ]),\r\n        ],\r\n      }),\r\n      createSkill('Blast', 3, 0),\r\n    ]),\r\n    {\r\n      intelligence: 84,\r\n      agility: getRandom([60, 62, 64, 66, 68]),\r\n      resistance: 2,\r\n      evasion: 10,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(5, 10),\r\n      makeEnemyReward(5, 10),\r\n      makeEnemyReward(20, 15, [getRandomItem(1)]),\r\n    ],\r\n  )\r\n}\r\n","import Raven from '../../../icons/svg/lorc/raven.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_RAVEN = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Raven',\r\n    Raven,\r\n    1,\r\n    10,\r\n    makeEnemyWeapon('dexterity', 6, 'melee', 'physical', [\r\n      createSkill('Peck', 2, 0),\r\n      createSkill('Caw', 2, -5, {\r\n        perfectStatus: ['resistance-down', 'armor-down'],\r\n      }),\r\n    ]),\r\n    {\r\n      dexterity: 56,\r\n      agility: getRandom([74, 75, 76, 77, 78]),\r\n      evasion: 10,\r\n    },\r\n    ['flying'],\r\n    [\r\n      makeEnemyReward(3, 5),\r\n      makeEnemyReward(4, 5, [getRandomItem(0)]),\r\n      makeEnemyReward(4, 7, [getRandomItem(1)]),\r\n    ],\r\n    [],\r\n    [\r\n      {\r\n        duration: -1,\r\n        type: 'evasive',\r\n        stats: ZERO_STATS,\r\n        stack: 0,\r\n        immunities: [],\r\n      },\r\n    ],\r\n  )\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Troll from '../../../icons/svg/skoll/troll.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_TROLL = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Troll',\r\n    Troll,\r\n    2,\r\n    24,\r\n    makeEnemyWeapon('strength', 16, 'melee', 'physical', [\r\n      createSkill('Smash', 4, 0),\r\n      createSkill('Quake', 5, -15, {\r\n        damageModifier: 0.5,\r\n        targetType: 'group',\r\n        perfectStatus: ['stunned'],\r\n      }),\r\n    ]),\r\n    {\r\n      strength: 76,\r\n      agility: getRandom([59, 60, 61, 62, 63, 64]),\r\n      armor: 3,\r\n      resistance: 0,\r\n      evasion: 10,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(5, 15),\r\n      makeEnemyReward(5, 15, [getRandomItem(0)]),\r\n      makeEnemyReward(20, 15, [getRandomItem(1)]),\r\n    ],\r\n  )\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Boar from '../../../icons/svg/lorc/boar-tusks.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_BOAR = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Boar',\r\n    Boar,\r\n    2,\r\n    27,\r\n    makeEnemyWeapon('strength', 16, 'melee', 'physical', [\r\n      createSkill('Ram', 4, 0),\r\n      createSkill('Impale', 4, -15, {\r\n        perfectPierce: true,\r\n      }),\r\n    ]),\r\n    {\r\n      strength: 76,\r\n      agility: getRandom([59, 60, 61, 62, 63, 64]),\r\n      armor: 0,\r\n      resistance: 0,\r\n      evasion: 17,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(5, 10, [getRandomItem(0)]),\r\n      makeEnemyReward(5, 15, [getRandomItem(1)]),\r\n      makeEnemyReward(20, 15, [getRandomItem(2, 2)]),\r\n    ],\r\n  )\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Cultist from '../../../icons/svg/lorc/cultist.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const CULTIST = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Cultist',\r\n    Cultist,\r\n    2,\r\n    17,\r\n    makeEnemyWeapon('intelligence', 11, 'melee', 'magic', [\r\n      createSkill('Enflame', 4, -10, { perfectStatus: ['burning'] }),\r\n      createSkill('Arcane', 3, 0, { perfectPierce: true }),\r\n    ]),\r\n    {\r\n      intelligence: 75,\r\n      agility: getRandom([68, 69, 70, 71]),\r\n      armor: 1,\r\n      resistance: 4,\r\n      evasion: 15,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(10, 10),\r\n      makeEnemyReward(15, 11),\r\n      makeEnemyReward(20, 15, [getRandomItem(2)]),\r\n    ],\r\n  )\r\n}\r\n","import Cultist from '../../../icons/svg/lorc/cultist.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const CULTIST_BRUTE = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Cultist Brute',\r\n    Cultist,\r\n    4,\r\n    26,\r\n    makeEnemyWeapon('strength', 14, 'melee', 'physical', [\r\n      createSkill('Slice', 3, 0),\r\n      createSkill('Slash', 4, -5, { perfectStatus: ['bleeding'] }),\r\n    ]),\r\n    {\r\n      strength: 72,\r\n      agility: getRandom([75, 76, 77, 78, 79, 80, 81, 82]),\r\n      armor: 4,\r\n      resistance: 2,\r\n      evasion: 13,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(10, 10),\r\n      makeEnemyReward(15, 11),\r\n      makeEnemyReward(20, 15, [getRandomItem(2)]),\r\n    ],\r\n  )\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const HEAL = createSkill('Heal', 0, 0, {\r\n  damageModifier: 0,\r\n  targetType: 'self',\r\n  damage: false,\r\n  healing: true,\r\n})\r\n\r\nexport const REMOVE_CURSES = createSkill('Remove Curses', 0, 0, {\r\n  targetType: 'self',\r\n  damage: false,\r\n  damageModifier: 0,\r\n  perfectStatus: ['blessed'],\r\n})\r\n\r\nexport const POISON_KNIFE = createSkill('Poison Knife', 0, 0, {\r\n  damage: false,\r\n  damageModifier: 0,\r\n  perfectStatus: ['poisoned'],\r\n})\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { HEAL } from '../../Skill/skills/consumables'\r\n\r\nconst cid = v4()\r\nexport const GODSBEARD = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Mellow Grass',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...HEAL,\r\n      consumableId: id,\r\n    },\r\n    goldValue: 50,\r\n  }\r\n}\r\n","import { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport Mimic from '../../../icons/svg/delapouite/mimic-chest.svg'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { GODSBEARD } from '../../Consumable/objects/godsbeard'\r\n\r\nexport const MIMIC_FLOOR_1 = () =>\r\n  makeEnemy(\r\n    'Mimic',\r\n    Mimic,\r\n    4,\r\n    60,\r\n    makeEnemyWeapon('strength', 24, 'melee', 'magic', [\r\n      createSkill('Bite', 5, 0),\r\n    ]),\r\n    {\r\n      strength: 40,\r\n      agility: getRandom([65, 66, 67, 68, 69, 70]),\r\n      evasion: 7,\r\n      armor: 4,\r\n      resistance: 4,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(150, 60, [\r\n        getRandomItem(3, 2),\r\n        getRandomItem(3, 2),\r\n        GODSBEARD(),\r\n      ]),\r\n    ],\r\n    ['bleeding', 'poisoned'],\r\n  )\r\n","import Beast from '../../../icons/svg/lorc/diablo-skull.svg'\r\nimport { tCharacter } from '../type'\r\nimport {\r\n  makeEnemy,\r\n  makeEnemyReward,\r\n  makeEnemyWeapon,\r\n} from '../enemies/_builder'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { v4 } from 'uuid'\r\n\r\nconst id = v4()\r\nexport const CONSECRATED_BEAST = (): tCharacter => {\r\n  return {\r\n    ...makeEnemy(\r\n      'The Consecrated Beast',\r\n      Beast,\r\n      8,\r\n      112,\r\n      makeEnemyWeapon('strength', 38, 'melee', 'physical', [\r\n        createSkill('Swipe', 4, -5, {\r\n          perfectPierce: true,\r\n        }),\r\n        createSkill('Wide Swipe', 5, 0, {\r\n          damageModifier: 0.75,\r\n          targetType: 'group',\r\n          perfectStatus: ['bleeding'],\r\n        }),\r\n        createSkill('Howl', 4, -15, {\r\n          damageModifier: 0,\r\n          damage: false,\r\n          targetType: 'group',\r\n          perfectStatus: ['stunned'],\r\n        }),\r\n      ]),\r\n      {\r\n        strength: 85,\r\n        agility: 80,\r\n        luck: 50,\r\n        armor: 12,\r\n        resistance: 12,\r\n        evasion: 10,\r\n      },\r\n      ['undead'],\r\n      [\r\n        makeEnemyReward(200, 120, [\r\n          getRandomItem(5, 5),\r\n          getRandomItem(5, 5),\r\n          getRandomItem(5, 5),\r\n        ]),\r\n      ],\r\n      ['stunned', 'poisoned'],\r\n    ),\r\n    id,\r\n  }\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Skull from '../../../icons/svg/lorc/harry-potter-skull.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const TOMB_GUARDIAN = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Tomb Guardian',\r\n    Skull,\r\n    5,\r\n    36,\r\n    makeEnemyWeapon('strength', 28, 'melee', 'physical', [\r\n      createSkill('Smash', 4, 0),\r\n      createSkill('Stun', 3, -5, {\r\n        damage: false,\r\n        damageModifier: 0,\r\n        perfectStatus: ['stunned'],\r\n      }),\r\n      createSkill('Quake', 4, -15, {\r\n        damageModifier: 0.5,\r\n        targetType: 'group',\r\n        perfectStatus: ['stunned'],\r\n      }),\r\n    ]),\r\n    {\r\n      strength: 78,\r\n      agility: getRandom([59, 60, 61, 62, 63, 64]),\r\n      armor: 10,\r\n      resistance: 3,\r\n      evasion: 10,\r\n    },\r\n    ['undead'],\r\n    [\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(80, 40, [getRandomItem(3, 3)]),\r\n      makeEnemyReward(100, 50, [getRandomItem(4, 3)]),\r\n    ],\r\n  )\r\n}\r\n","import { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport Spider from '../../../icons/svg/delapouite/spider-eye.svg'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\n\r\nexport const TOMB_SPIDER = () =>\r\n  makeEnemy(\r\n    'Tomb Spider',\r\n    Spider,\r\n    4,\r\n    22,\r\n    makeEnemyWeapon('dexterity', 26, 'ranged', 'magic', [\r\n      createSkill('Bite', 3, 0),\r\n      createSkill('Venomous Bite', 3, -10, { perfectStatus: ['poisoned'] }),\r\n      createSkill('Blood Bite', 3, -5, { perfectStatus: ['bleeding'] }),\r\n    ]),\r\n    {\r\n      dexterity: 75,\r\n      agility: getRandom([70, 71, 72, 73, 74, 75]),\r\n      evasion: 20,\r\n      resistance: 5,\r\n      armor: 4,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(80, 40, [getRandomItem(3, 3)]),\r\n      makeEnemyReward(100, 50, [getRandomItem(4, 3)]),\r\n    ],\r\n    ['poisoned'],\r\n  )\r\n","import { tFloorConfig } from '../type'\r\nimport { FloorConfig1 } from './floor-1'\r\nimport { FloorConfig2 } from './floor-2'\r\nimport { FloorConfig3 } from './floor-3'\r\n\r\nexport const FLOOR_SIZE = 10\r\nexport const FLOOR_CONFIGS_BY_INDEX = (): Record<number, tFloorConfig> => ({\r\n  0: FloorConfig1(FLOOR_SIZE),\r\n  1: FloorConfig2(),\r\n  2: FloorConfig3(),\r\n})\r\n","import { tFloorConfig } from '../type'\r\nimport { LICH } from '../../Character/bosses'\r\nimport { WEAPONS_BY_LEVEL } from '../../Weapon/builders/objects'\r\nimport { ARMOR_BY_LEVEL } from '../../Armor/builders/sets'\r\nimport { buildFloorEnemeis } from './util'\r\nimport {\r\n  Floor1AltEnemyConfigs,\r\n  Floor1EncounterSizes,\r\n  Floor1EnemyConfigs,\r\n} from './floor-1-config'\r\nimport { MIMIC_FLOOR_1 } from '../../Character/enemies/mimic_floor_1'\r\n\r\nconst FLOOR_1_WEAPONS = () => [\r\n  ...WEAPONS_BY_LEVEL[1],\r\n  ...WEAPONS_BY_LEVEL[2],\r\n  ...WEAPONS_BY_LEVEL[3],\r\n]\r\n\r\nconst FLOOR_1_ARMOR = () => [\r\n  ...ARMOR_BY_LEVEL[0],\r\n  ...ARMOR_BY_LEVEL[1],\r\n  ...ARMOR_BY_LEVEL[2],\r\n]\r\n\r\nexport const FloorConfig1 = (size: number): tFloorConfig => ({\r\n  bosses: [LICH()],\r\n  items: [\r\n    ...FLOOR_1_WEAPONS().map((w) => w()),\r\n    ...FLOOR_1_ARMOR().map((a) => a()),\r\n  ],\r\n  mimic: MIMIC_FLOOR_1,\r\n  altEnemies: buildFloorEnemeis(\r\n    // Floor1AltEnemyConfigs,\r\n    Floor1EnemyConfigs,\r\n    Floor1EncounterSizes,\r\n    size,\r\n  ),\r\n  enemies: buildFloorEnemeis(Floor1EnemyConfigs, Floor1EncounterSizes, size),\r\n})\r\n","import { ARMOR_BY_LEVEL } from '../../Armor/builders/sets'\r\nimport { CONSECRATED_BEAST } from '../../Character/bosses/consecrated_beast'\r\nimport { BANSHEE, CONSECRATED_GUARD, FLAME_WISP } from '../../Character/enemies'\r\nimport { CULTIST_SCHOLAR } from '../../Character/enemies/cultist_scholar'\r\nimport { TOMB_GUARDIAN } from '../../Character/enemies/tomb_guardian'\r\nimport { TOMB_SPIDER } from '../../Character/enemies/tomb_spider'\r\nimport { TOMB_SPIRIT } from '../../Character/enemies/tomb_spirit'\r\nimport { WEAPONS_BY_LEVEL } from '../../Weapon/builders/objects'\r\nimport { MIMIC_FLOOR_1 } from '../../Character/enemies/mimic_floor_1'\r\nimport { tFloorConfig } from '../type'\r\nimport { makeRandomFloorEncounter } from './util'\r\n\r\nconst FLOOR_2_WEAPONS = () => [\r\n  ...WEAPONS_BY_LEVEL[3],\r\n  ...WEAPONS_BY_LEVEL[4],\r\n  ...WEAPONS_BY_LEVEL[5],\r\n]\r\n\r\nconst FLOOR_2_ARMOR = () => [...ARMOR_BY_LEVEL[3], ...ARMOR_BY_LEVEL[4]]\r\n\r\nexport const FloorConfig2 = (): tFloorConfig => ({\r\n  bosses: [CONSECRATED_BEAST()],\r\n  items: [\r\n    ...FLOOR_2_WEAPONS().map((w) => w()),\r\n    ...FLOOR_2_ARMOR().map((w) => w()),\r\n  ],\r\n  mimic: MIMIC_FLOOR_1,\r\n  altEnemies: {},\r\n  enemies: {\r\n    0: [\r\n      makeRandomFloorEncounter([TOMB_SPIRIT, TOMB_SPIDER], 2),\r\n      makeRandomFloorEncounter([TOMB_SPIRIT, TOMB_SPIDER], 3),\r\n    ],\r\n    1: [\r\n      makeRandomFloorEncounter([TOMB_SPIDER, TOMB_SPIRIT, CULTIST_SCHOLAR], 2),\r\n      makeRandomFloorEncounter([TOMB_SPIDER, TOMB_SPIRIT, CULTIST_SCHOLAR], 3),\r\n    ],\r\n    2: [\r\n      makeRandomFloorEncounter(\r\n        [TOMB_SPIDER, TOMB_SPIRIT, CULTIST_SCHOLAR, FLAME_WISP, FLAME_WISP],\r\n        3,\r\n      ),\r\n    ],\r\n    3: [\r\n      makeRandomFloorEncounter(\r\n        [TOMB_SPIDER, TOMB_SPIRIT, CULTIST_SCHOLAR, FLAME_WISP, TOMB_GUARDIAN],\r\n        3,\r\n      ),\r\n    ],\r\n    4: [\r\n      makeRandomFloorEncounter(\r\n        [TOMB_SPIRIT, CULTIST_SCHOLAR, FLAME_WISP, TOMB_GUARDIAN],\r\n        3,\r\n      ),\r\n    ],\r\n    5: [\r\n      makeRandomFloorEncounter(\r\n        [CULTIST_SCHOLAR, FLAME_WISP, TOMB_GUARDIAN, BANSHEE],\r\n        3,\r\n      ),\r\n    ],\r\n    // add more enemies here\r\n    6: [\r\n      makeRandomFloorEncounter(\r\n        [CULTIST_SCHOLAR, FLAME_WISP, TOMB_GUARDIAN, BANSHEE],\r\n        3,\r\n      ),\r\n    ],\r\n    7: [\r\n      makeRandomFloorEncounter(\r\n        [CULTIST_SCHOLAR, FLAME_WISP, TOMB_GUARDIAN, BANSHEE],\r\n        3,\r\n      ),\r\n    ],\r\n    8: [[CONSECRATED_GUARD(), CONSECRATED_GUARD()]],\r\n    9: [[CONSECRATED_GUARD(), CONSECRATED_GUARD()]],\r\n  },\r\n})\r\n","import { LICH } from '../../Character/bosses'\r\nimport { CONSECRATED_BEAST } from '../../Character/bosses/consecrated_beast'\r\nimport { CONSECRATED_GUARD } from '../../Character/enemies'\r\nimport { WEAPONS_BY_LEVEL } from '../../Weapon/builders/objects'\r\nimport { tFloorConfig } from '../type'\r\nimport { MIMIC_FLOOR_1 } from '../../Character/enemies/mimic_floor_1'\r\nimport { makeRandomFloorEncounter } from './util'\r\n\r\nconst FLOOR_3_WEAPONS = () => [\r\n  ...WEAPONS_BY_LEVEL[3],\r\n  ...WEAPONS_BY_LEVEL[4],\r\n  ...WEAPONS_BY_LEVEL[5],\r\n]\r\n\r\nexport const FloorConfig3 = (): tFloorConfig => ({\r\n  bosses: [],\r\n  items: [...FLOOR_3_WEAPONS().map((w) => w())],\r\n  mimic: MIMIC_FLOOR_1,\r\n  altEnemies: {},\r\n  enemies: {\r\n    0: [[CONSECRATED_GUARD(), CONSECRATED_GUARD(), CONSECRATED_GUARD()]],\r\n    1: [makeRandomFloorEncounter([CONSECRATED_GUARD, LICH], 3)],\r\n  },\r\n})\r\n","import { tEncounterReward, tCombatEncounter, tEncounter } from './type'\r\nimport { getRandom } from '../../util'\r\nimport { stringArr } from '../../util/stringArr'\r\nimport { FLOOR_CONFIGS_BY_INDEX } from './floors'\r\nimport Forest1 from '../../assets/img/forests/7.png'\r\nimport Forest2 from '../../assets/img/forests/8.png'\r\nimport Forest3 from '../../assets/img/forests/1.png'\r\nimport Dungeon1 from '../../assets/img/dungeon/3.png'\r\nimport Dungeon2 from '../../assets/img/dungeon/1.png'\r\nimport Dungeon3 from '../../assets/img/dungeon/4.png'\r\nimport Dungeon4 from '../../assets/img/dungeon/2.png'\r\n\r\nexport const ZERO_REWARD: tEncounterReward = {\r\n  gold: 0,\r\n  xp: 0,\r\n  items: [],\r\n  status: [],\r\n  immunities: [],\r\n}\r\n\r\nconst poisoned: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['poisoned'],\r\n}\r\nconst burning: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['burning'],\r\n}\r\nconst bleeding: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['bleeding'],\r\n}\r\nconst armorDown: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['armor-down'],\r\n}\r\nconst resDown: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['resistance-down'],\r\n}\r\nconst attackDown: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['armor-down'],\r\n}\r\n\r\nconst armorUp: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['armor-up'],\r\n}\r\nconst attackUp: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['attack-up'],\r\n}\r\nconst resUp: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['resistance-up'],\r\n}\r\n\r\nconst justGold = (gold: number) => ({\r\n  ...ZERO_REWARD,\r\n  gold,\r\n})\r\nconst justXp = (xp: number) => ({\r\n  ...ZERO_REWARD,\r\n  xp,\r\n})\r\nconst justRandomItem = (floor: number = 0): tEncounterReward => ({\r\n  ...ZERO_REWARD,\r\n  items: [getRandom(FLOOR_CONFIGS_BY_INDEX()[floor].items)],\r\n})\r\n\r\nexport const POSSIBLE_SHINE_REWARDS = (): tEncounterReward[][] => [\r\n  [poisoned, poisoned, ZERO_REWARD, armorUp],\r\n  [bleeding, ZERO_REWARD, ZERO_REWARD, ZERO_REWARD, justGold(50)],\r\n  [burning, burning, burning, ZERO_REWARD, justXp(25)],\r\n  [poisoned, poisoned, burning, ZERO_REWARD, justRandomItem()],\r\n  [attackDown, attackDown, ZERO_REWARD, ZERO_REWARD, justXp(25)],\r\n  [attackDown, armorDown, resDown, ZERO_REWARD, justXp(10), justRandomItem()],\r\n  [poisoned, attackDown, armorDown, resDown, justRandomItem()],\r\n  [poisoned, poisoned, attackDown, ZERO_REWARD, justGold(100)],\r\n  [burning, burning, burning, burning, justGold(10), justRandomItem()],\r\n  [poisoned, poisoned, burning, bleeding, justRandomItem(), justRandomItem()],\r\n  [\r\n    burning,\r\n    ZERO_REWARD,\r\n    ZERO_REWARD,\r\n    ZERO_REWARD,\r\n    ZERO_REWARD,\r\n    justRandomItem(),\r\n  ],\r\n  [\r\n    ZERO_REWARD,\r\n    ZERO_REWARD,\r\n    ZERO_REWARD,\r\n    ZERO_REWARD,\r\n    justXp(10),\r\n    justGold(50),\r\n  ],\r\n  [bleeding, resDown, armorDown, ZERO_REWARD, resUp, attackUp],\r\n  [poisoned, ZERO_REWARD, ZERO_REWARD, attackUp],\r\n  [poisoned, ZERO_REWARD, ZERO_REWARD, armorUp],\r\n  [burning, ZERO_REWARD, ZERO_REWARD, resUp],\r\n  [attackDown, armorDown, ZERO_REWARD, armorUp],\r\n  [attackDown, resDown, ZERO_REWARD, resUp],\r\n  [poisoned, attackDown, ZERO_REWARD, attackUp],\r\n  [poisoned, burning, bleeding, resUp, attackUp],\r\n]\r\n\r\nexport const getChoiceText = (\r\n  currentEncounter: tEncounter | undefined,\r\n  previousEncounter: tEncounter | undefined,\r\n): string => {\r\n  let text = ''\r\n  if (currentEncounter === undefined) {\r\n    text =\r\n      'As your party begins their journey, you travel down an empty road. You arrive at a split path, you must make a choice on which way to proceed.'\r\n  }\r\n  if (previousEncounter?.type === 'combat') {\r\n    text = getRandom([\r\n      `After the fierce battle against the ${stringArr(\r\n        (previousEncounter as tCombatEncounter).party.characters.map(\r\n          (c) => c.name,\r\n        ),\r\n      )}, your party again arrives at a choice:`,\r\n    ])\r\n  } else if (currentEncounter) {\r\n    text =\r\n      'After a brief rest, your party continues their journey to dispel the evil. You feel it around you as your travel deeper. However, there now seem to be two options before you:'\r\n  }\r\n  return text\r\n}\r\n\r\ninterface BgConfig {\r\n  bg: string\r\n  overlay: string\r\n}\r\ninterface RootBgConfig extends BgConfig {\r\n  completed?: BgConfig\r\n}\r\nexport const getEncounterBg = (level: number, floor: number): RootBgConfig => {\r\n  return ([\r\n    [\r\n      {\r\n        // 0\r\n        bg: Forest1,\r\n        overlay: 'transparent',\r\n        completed: {\r\n          bg: Forest1,\r\n          overlay: 'rgba(20,0,50,0.4)',\r\n        },\r\n      },\r\n      {\r\n        // 1\r\n        bg: Forest1,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 2\r\n        bg: Forest1,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 3\r\n        bg: Forest1,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 4\r\n        bg: Forest1,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 5\r\n        bg: Forest2,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 6\r\n        bg: Forest2,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 7\r\n        bg: Forest2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 8\r\n        bg: Forest2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n        completed: {\r\n          bg: Forest3,\r\n          overlay: 'rgba(20,0,50,0.5)',\r\n        },\r\n      },\r\n      {\r\n        // 9\r\n        bg: Forest3,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n        completed: {\r\n          bg: Dungeon1,\r\n          overlay: 'transparent',\r\n        },\r\n      },\r\n      {\r\n        // 10\r\n        bg: Dungeon1,\r\n        overlay: 'transparent',\r\n      },\r\n    ],\r\n    [\r\n      {\r\n        // 0\r\n        bg: Dungeon2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 1\r\n        bg: Dungeon2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 2\r\n        bg: Dungeon2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 3\r\n        bg: Dungeon2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 4\r\n        bg: Dungeon3,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 5\r\n        bg: Dungeon3,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 6\r\n        bg: Dungeon3,\r\n        overlay: 'rgba(20,0,50,0.6)',\r\n      },\r\n      {\r\n        // 7\r\n        bg: Dungeon3,\r\n        overlay: 'rgba(20,0,50,0.7)',\r\n      },\r\n      {\r\n        // 8\r\n        bg: Dungeon3,\r\n        overlay: 'rgba(20,0,50,0.7)',\r\n      },\r\n      {\r\n        // 9\r\n        bg: Dungeon4,\r\n        overlay: 'rgba(20,0,50,0.2)',\r\n      },\r\n      {\r\n        // 10\r\n        bg: Dungeon4,\r\n        overlay: 'rgba(20,0,50,0.3)',\r\n      },\r\n    ],\r\n    [\r\n      {\r\n        // 0\r\n        bg: Forest1,\r\n        overlay: 'transparent',\r\n      },\r\n    ],\r\n  ][floor] || [])[level]\r\n}\r\n","export const Theme = {\r\n  darkBgColor: 'rgba(0,7,18,0.9)',\r\n  darkBgColorSolid: 'rgba(0,7,18,1)',\r\n  mediumBgColor: 'rgb(34,34,39)',\r\n  otherGrey: 'rgb(51,51,58)',\r\n  otherGrey2: 'rgb(72,72,80)',\r\n  badgeBgColor: 'rgba(0,7,18,0.9)',\r\n  badgeBorderColor: 'rgba(140,150,160,1)',\r\n  lightBgColor: 'rgba(255,255,255,0.4)',\r\n  textColor: 'rgba(255,255,255,0.8)',\r\n  physicalColor: '#adcae6',\r\n  magicColor: 'plum',\r\n  evasionColor: 'rgb(133, 199, 133)',\r\n  playerPartyColor: '#adcae6',\r\n  enemyPartyColor: 'lightsalmon',\r\n  meleeRangeColor: 'rgba(255,255,255,0.8)',\r\n  rangedRangeColor: 'rgba(255,255,255,0.8)',\r\n  healthRedColor: 'rgb(151,75,75)',\r\n\r\n  paddingS: '4px',\r\n  padding: '8px',\r\n  paddingL: '16px',\r\n  paddingXL: '24px',\r\n\r\n  titleFont: 'New Rocker',\r\n}\r\n","import { tCharacter, tCharacterClass } from './type'\r\nimport { Theme } from '../../theme'\r\nimport { v4 } from 'uuid'\r\nimport { BASE_C_STATS } from '../Stats/constants'\r\n\r\nexport const CHARACTER_XP_MAX: Record<number, number> = {\r\n  [-1]: 0,\r\n  0: 25,\r\n  1: 45,\r\n  2: 85,\r\n  3: 135,\r\n  4: 215,\r\n  5: 295,\r\n  6: 425,\r\n  7: 675,\r\n  8: 925,\r\n  9: 1257,\r\n  10: 1925,\r\n  11: 1400,\r\n  12: 2200,\r\n}\r\n\r\nexport const CHARACTER_CLASS_COLORS: Record<tCharacterClass, string> = {\r\n  enemy: Theme.enemyPartyColor,\r\n  executioner: '#313d47',\r\n  patrician: '#381c1c',\r\n  student: '#382838',\r\n  ranger: '#202e20',\r\n  reaper: 'rgb(22, 25, 33)',\r\n  drifter: '#111',\r\n}\r\n\r\nexport const BASE_CHARACTER = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: '',\r\n    isCharacter: true,\r\n    icon: '',\r\n    partyId: '',\r\n    level: 0,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: BASE_C_STATS,\r\n    weapon: undefined,\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    possibleRewards: [],\r\n  }\r\n}\r\n","import { tArmor } from '../../Armor/type'\r\nimport { tConsumable } from '../../Consumable/type'\r\nimport { tDamageRange, tDamageType } from '../../Damage/type'\r\nimport { ZERO_REWARD } from '../../Encounter/constants'\r\nimport { tEncounterReward } from '../../Encounter/type'\r\nimport { tSkill } from '../../Skill/type'\r\nimport { BASE_C_STATS } from '../../Stats/constants'\r\nimport { tBaseStats, tStats } from '../../Stats/type'\r\nimport { tStatus, tStatusType } from '../../Status/type'\r\nimport { BASE_WEAPON } from '../../Weapon/constants'\r\nimport { tWeapon } from '../../Weapon/type'\r\nimport { BASE_CHARACTER } from '../constants'\r\nimport { tCharacter, tCharacterTag } from '../type'\r\n\r\nexport const makeEnemy = (\r\n  name: string,\r\n  icon: string,\r\n  level: number,\r\n  health: number,\r\n  weapon: tWeapon,\r\n  stats: Partial<tStats>,\r\n  tags: tCharacterTag[],\r\n  possibleRewards: tEncounterReward[],\r\n  immunities: tStatusType[] = [],\r\n  status: tStatus[] = [],\r\n): tCharacter => {\r\n  const maxHealthOffset = health - 25 - level\r\n  return {\r\n    ...BASE_CHARACTER(),\r\n    name,\r\n    icon,\r\n    level,\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      ...stats,\r\n      maxHealthOffset,\r\n      vigor: 0,\r\n    },\r\n    tags,\r\n    weapon,\r\n    immunities,\r\n    status,\r\n    possibleRewards,\r\n  }\r\n}\r\n\r\nexport const makeEnemyWeapon = (\r\n  stat: keyof tBaseStats,\r\n  damage: number,\r\n  range: tDamageRange,\r\n  type: tDamageType,\r\n  skills: tSkill[],\r\n): tWeapon => {\r\n  return {\r\n    ...BASE_WEAPON(),\r\n    name: '',\r\n    stat,\r\n    damage: {\r\n      value: damage,\r\n      range,\r\n      type,\r\n    },\r\n    skills,\r\n  }\r\n}\r\n\r\nexport const makeEnemyReward = (\r\n  gold: number,\r\n  xp: number,\r\n  items: (tConsumable | tWeapon | tArmor)[] = [],\r\n): tEncounterReward => {\r\n  return {\r\n    ...ZERO_REWARD,\r\n    gold,\r\n    xp,\r\n    items,\r\n  }\r\n}\r\n","import Lich from '../../../icons/svg/delapouite/overlord-helm.svg'\r\nimport { tCharacter } from '../type'\r\nimport {\r\n  makeEnemy,\r\n  makeEnemyReward,\r\n  makeEnemyWeapon,\r\n} from '../enemies/_builder'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { v4 } from 'uuid'\r\n\r\nconst id = v4()\r\nexport const LICH = (): tCharacter => {\r\n  return {\r\n    ...makeEnemy(\r\n      'Lich',\r\n      Lich,\r\n      5,\r\n      67,\r\n      makeEnemyWeapon('strength', 34, 'melee', 'magic', [\r\n        createSkill('Drain', 4, 0, {\r\n          damageModifier: 0.5,\r\n          targetType: 'group',\r\n          perfectStatus: ['speed-down'],\r\n        }),\r\n        createSkill('Screech', 4, -5, {\r\n          damageModifier: 0,\r\n          damage: false,\r\n          targetType: 'group',\r\n          perfectStatus: ['stunned'],\r\n        }),\r\n        createSkill('Smite', 4, 0, {\r\n          perfectStatus: ['armor-down'],\r\n        }),\r\n      ]),\r\n      {\r\n        strength: 85,\r\n        intelligence: 75,\r\n        agility: 80,\r\n        luck: 50,\r\n        armor: 7,\r\n        resistance: 8,\r\n        evasion: 16,\r\n      },\r\n      ['undead'],\r\n      [\r\n        makeEnemyReward(200, 120, [\r\n          getRandomItem(3, 3),\r\n          getRandomItem(3, 3),\r\n          getRandomItem(3, 3),\r\n        ]),\r\n      ],\r\n      ['stunned', 'bleeding', 'poisoned'],\r\n    ),\r\n    id,\r\n  }\r\n}\r\n","import { createWeapon } from '..'\r\nimport { createSkill } from '../../../Skill/skills'\r\nimport { tWeapon } from '../../type'\r\n\r\nexport const LICH_SWORD: tWeapon = {\r\n  ...createWeapon(\r\n    'sword',\r\n    'sharp',\r\n    [createSkill('Strike', 2, 0)],\r\n    {\r\n      strength: 3,\r\n      intelligence: 3,\r\n    },\r\n    [\r\n      'cursed-agility',\r\n      'cursed-charisma',\r\n      'cursed-dexterity',\r\n      'cursed-intelligence',\r\n      'cursed-luck',\r\n      'cursed-strength',\r\n      'cursed-vigor',\r\n    ],\r\n  ),\r\n  name: `Lich's Magic Sword`,\r\n  rarity: 'mythic',\r\n}\r\n","import { tCharacterClass } from '../Character/type'\r\nimport { tWeapon } from './type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../Stats/constants'\r\nimport { EXECUTIONER_AXE, IRON_AXE } from './builders/objects/axe'\r\nimport { IRON_BOW, RANGERS_BOW } from './builders/objects/bow'\r\nimport { IRON_CATALYST, STUDENTS_CATALYST } from './builders/objects/catalyst'\r\nimport { IRON_CHIME, PATRICIANS_CHIME } from './builders/objects/chime'\r\nimport { FARMER_SCYTHE, IRON_SCYTHE } from './builders/objects/scythe'\r\nimport { TEST_WEAPON } from './builders/unique/test_weapon'\r\nimport { tArmor } from '../Armor/type'\r\nimport { CONSECRATED_BEAST, LICH } from '../Character/bosses'\r\nimport { LICH_SWORD } from './builders/unique/boss_lich'\r\nimport { HEART_OF_THE_BEAST } from '../Armor/builders/uniques/heart_of_the_beast'\r\n\r\nexport const CLASS_WEAPONS: Record<tCharacterClass, tWeapon | undefined> = {\r\n  /*\r\n  executioner: TEST_WEAPON(),\r\n  ranger: IRON_BOW(),\r\n  reaper: IRON_SCYTHE(),\r\n  student: IRON_CATALYST(),\r\n  patrician: IRON_CHIME(),\r\n  */\r\n  executioner: EXECUTIONER_AXE(),\r\n  ranger: RANGERS_BOW(),\r\n  reaper: FARMER_SCYTHE(),\r\n  student: STUDENTS_CATALYST(),\r\n  patrician: PATRICIANS_CHIME(),\r\n  drifter: undefined,\r\n  enemy: undefined,\r\n}\r\n\r\nexport const BASE_WEAPON = (): tWeapon => {\r\n  return {\r\n    id: v4(),\r\n    name: '',\r\n    itemType: 'weapon',\r\n    rarity: 'common',\r\n    type: 'fist',\r\n    stat: 'strength',\r\n    goldValue: 0,\r\n    twoHand: false,\r\n    breakable: false,\r\n    damage: {\r\n      value: 0,\r\n      range: 'melee',\r\n      type: 'physical',\r\n    },\r\n    stats: ZERO_STATS,\r\n    skills: [],\r\n    immunities: [],\r\n  }\r\n}\r\n\r\nexport const BOSS_ITEMS: Record<string, (tWeapon | tArmor)[]> = {\r\n  [LICH().id]: [LICH_SWORD],\r\n  [CONSECRATED_BEAST().id]: [HEART_OF_THE_BEAST()],\r\n}\r\n","import { createHeavyArmor } from '..'\r\n\r\nexport const HEART_OF_THE_BEAST = () => ({\r\n  ...createHeavyArmor(\r\n    'Heart of the Beast',\r\n    'mythic',\r\n    500,\r\n    {\r\n      armor: 10,\r\n      resistance: 10,\r\n      attackDamageOffset: 6,\r\n      criticalChance: 6,\r\n      healthRegeneration: 6,\r\n    },\r\n    [],\r\n    ['burning'],\r\n  ),\r\n})\r\n","import { tProcessedCharacter } from '../Character/type'\r\nimport { tBaseStats } from '../Stats/type'\r\nimport { getBaseStatValue } from '../Character/util'\r\nimport { DiceRoll } from 'rpg-dice-roller'\r\n\r\nexport const resolveCheck = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n  offset: number = 0,\r\n): boolean => {\r\n  const statValue = getBaseStatValue(character, key, offset)\r\n  const roll = new DiceRoll('1d100')\r\n  return roll.total <= statValue\r\n}\r\n\r\nexport const getChecksProbability = (\r\n  character: tProcessedCharacter,\r\n  checks: { key: keyof tBaseStats; offset: number }[],\r\n): number => {\r\n  const statValues = checks.map(({ key, offset }) =>\r\n    getBaseStatValue(character, key, offset),\r\n  )\r\n  const result = statValues.reduce((p, c) => {\r\n    return p * (c / 100)\r\n  }, 1)\r\n  return result\r\n}\r\n","import { tCharacterClass } from '../Character/type'\r\nimport {\r\n  ANTIQUATED_ATTIRE,\r\n  ANTIQUATED_HAT,\r\n  ANTIQUATED_SHOES,\r\n} from './builders/sets/antiquated'\r\nimport { BONE_ARMOR, BONE_BOOTS, BONE_HELMET } from './builders/sets/bone'\r\nimport { HUNTER_BOOTS, HUNTER_CLOAK, HUNTER_HOOD } from './builders/sets/hunter'\r\nimport { NOVICE_HAT, NOVICE_ROBES, NOVICE_SHOES } from './builders/sets/novice'\r\nimport { tArmor } from './type'\r\n\r\nexport const CLASS_ARMOR: Record<tCharacterClass, tArmor[]> = {\r\n  /*\r\n  executioner: [BONE_HELMET(), BONE_ARMOR(), BONE_BOOTS()],\r\n  ranger: [HUNTER_HOOD(), HUNTER_CLOAK(), HUNTER_BOOTS()],\r\n  reaper: [HUNTER_HOOD(), HUNTER_CLOAK(), HUNTER_BOOTS()],\r\n  student: [NOVICE_HAT(), NOVICE_ROBES(), NOVICE_SHOES()],\r\n  patrician: [ANTIQUATED_HAT(), ANTIQUATED_ATTIRE(), ANTIQUATED_SHOES()],\r\n  */\r\n  executioner: [],\r\n  ranger: [],\r\n  reaper: [],\r\n  student: [],\r\n  patrician: [],\r\n  drifter: [],\r\n  enemy: [],\r\n}\r\n","import { tConsumable, tConsumableStack } from './type'\r\n\r\nexport const considateConsumableListToStack = (\r\n  consumables: tConsumable[],\r\n): tConsumableStack[] => {\r\n  let stack: tConsumableStack[] = []\r\n  const updateStackItem = (cid: string) =>\r\n    stack.map((s) =>\r\n      s.consumable.cid === cid ? { ...s, count: s.count + 1 } : s,\r\n    )\r\n  const containsId = (cid: string) =>\r\n    stack.map((s) => s.consumable.cid).includes(cid)\r\n  consumables.forEach((c) => {\r\n    if (containsId(c.cid)) {\r\n      stack = updateStackItem(c.cid)\r\n    } else {\r\n      stack = [...stack, { consumable: c, count: 1 }]\r\n    }\r\n  })\r\n  return stack\r\n}\r\n","import { tWeapon } from './type'\r\nimport { ZERO_STATS } from '../Stats/constants'\r\nimport { v4 } from 'uuid'\r\nimport { createSkill } from '../Skill/skills'\r\n\r\nexport const FISTS = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Fists`,\r\n  itemType: 'weapon',\r\n  type: 'hammer',\r\n  rarity: 'common',\r\n  stat: 'vigor',\r\n  twoHand: false,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'melee', value: 4 },\r\n  skills: [createSkill('Punch', 3, 0)],\r\n  immunities: [],\r\n  stats: ZERO_STATS,\r\n  goldValue: 0,\r\n})\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { REMOVE_CURSES } from '../../Skill/skills/consumables'\r\n\r\nconst cid = v4()\r\nexport const CELESTIAL_LOTUS = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Celestial Lotus',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...REMOVE_CURSES,\r\n      consumableId: id,\r\n    },\r\n    goldValue: 30,\r\n  }\r\n}\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { POISON_KNIFE as skill } from '../../Skill/skills/consumables'\r\n\r\nconst cid = v4()\r\nexport const POISON_KNIFE = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Poison Knife',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...skill,\r\n      consumableId: id,\r\n    },\r\n    goldValue: 50,\r\n  }\r\n}\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nconst cid = v4()\r\nexport const BEAST_DRUG = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Beast Drug',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...createSkill('Beast Drug', 0, 0, {\r\n        damage: false,\r\n        targetType: 'self',\r\n        perfectStatus: ['attack-up'],\r\n      }),\r\n      consumableId: id,\r\n    },\r\n    goldValue: 20,\r\n  }\r\n}\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const CURE = createSkill('Cure Potion', 0, 0, {\r\n  damageModifier: 0,\r\n  damage: false,\r\n  targetType: 'self',\r\n  perfectStatus: ['cure'],\r\n})\r\n\r\nconst cid = v4()\r\nexport const CURE_POTION = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Cure Potion',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...CURE,\r\n      consumableId: id,\r\n    },\r\n    goldValue: 20,\r\n  }\r\n}\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nconst cid = v4()\r\nexport const FIREBOMB = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Firebomb',\r\n    itemType: 'consumable',\r\n    rarity: 'rare',\r\n    skill: {\r\n      ...createSkill('Firebomb', 0, 0, {\r\n        weaponDamageOverride: 15,\r\n        perfectStatus: ['burning'],\r\n      }),\r\n      consumableId: id,\r\n    },\r\n    goldValue: 100,\r\n  }\r\n}\r\n","import { tItemRarity } from './type'\r\nimport { tCharacterClass } from '../Character/type'\r\nimport { tConsumable } from '../Consumable/type'\r\nimport { tArmorResourceType } from '../Armor/type'\r\nimport { GODSBEARD } from '../Consumable/objects/godsbeard'\r\nimport { CELESTIAL_LOTUS } from '../Consumable/objects/celestial_lotus'\r\nimport { POISON_KNIFE } from '../Consumable/objects/poison_knife'\r\nimport { BEAST_DRUG } from '../Consumable/objects/beast_drug'\r\nimport { CURE_POTION } from '../Consumable/objects/curing_potion'\r\nimport { FIREBOMB } from '../Consumable/objects/firebomb'\r\n\r\nexport const ITEM_RARITY_COLORS: Record<tItemRarity, string> = {\r\n  common: 'rgba(255, 255, 255,1)',\r\n  uncommon: 'rgba(128,181,255,1)',\r\n  rare: 'rgba(213, 128, 255,1)',\r\n  mythic: 'rgb(255,160,122,1)',\r\n}\r\n\r\nexport const CLASS_STARTING_CONSUMABLES: Record<\r\n  tCharacterClass,\r\n  tConsumable[]\r\n> = {\r\n  executioner: [GODSBEARD(), BEAST_DRUG()],\r\n  ranger: [GODSBEARD(), POISON_KNIFE()],\r\n  reaper: [GODSBEARD(), FIREBOMB()],\r\n  student: [GODSBEARD(), CELESTIAL_LOTUS()],\r\n  patrician: [GODSBEARD(), CURE_POTION()],\r\n  drifter: [GODSBEARD(), GODSBEARD()],\r\n  enemy: [],\r\n}\r\n\r\nexport const CHARACTER_RESOURCES: tArmorResourceType[] = [\r\n  'offhand',\r\n  'body',\r\n  'head',\r\n  'feet',\r\n  'pendant',\r\n  'ring',\r\n]\r\n","import { tCharacter, tProcessedCharacter, tCharacterClass } from './type'\r\nimport { tStats, tBaseStats } from '../Stats/type'\r\nimport { capStats, combineStats } from '../Stats/util'\r\nimport { tSkill } from '../Skill/type'\r\nimport { CLASS_STATS } from '../Stats/constants'\r\nimport { tStatusType } from '../Status/type'\r\nimport { STATUS_CONFIG } from '../Status/constants'\r\nimport { v4 } from 'uuid'\r\nimport { tDamage } from '../Damage/type'\r\nimport { noneg } from '../../util/noneg'\r\nimport { CLASS_WEAPONS } from '../Weapon/constants'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { tArmorResourceType, tArmor } from '../Armor/type'\r\nimport { resolveCheck } from '../Roll/util'\r\nimport { CLASS_ARMOR } from '../Armor/constants'\r\nimport { considateConsumableListToStack } from '../Consumable/util'\r\nimport { CHARACTER_XP_MAX } from './constants'\r\nimport { tEncounterReward } from '../Encounter/type'\r\nimport { FISTS } from '../Weapon/fists'\r\nimport { CLASS_STARTING_CONSUMABLES } from '../Item/constants'\r\n\r\nexport const isCharacter = (obj: any): boolean =>\r\n  obj !== undefined && obj.isCharacter !== undefined\r\n\r\nexport const checkForProcessedCharacter = (character: tCharacter) => {\r\n  if ((character as tProcessedCharacter).processed) {\r\n    throw new Error('No Processed Characters Allowed')\r\n  }\r\n}\r\n\r\nexport const makeCharacter = (characterClass: tCharacterClass): tCharacter => {\r\n  return {\r\n    isCharacter: true,\r\n    id: v4(),\r\n    name: '',\r\n    partyId: '',\r\n    level: 0,\r\n    experience: 0,\r\n    class: characterClass,\r\n\r\n    stats: CLASS_STATS[characterClass],\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n\r\n    tags: [],\r\n\r\n    weapon: CLASS_WEAPONS[characterClass],\r\n    armor: CLASS_ARMOR[characterClass],\r\n    consumables: CLASS_STARTING_CONSUMABLES[characterClass],\r\n\r\n    status: [],\r\n    immunities: [],\r\n    possibleRewards: [],\r\n  }\r\n}\r\n\r\nexport const getSkills = (character: tCharacter): tSkill[] => {\r\n  return [\r\n    ...(character.weapon || FISTS()).skills,\r\n    ...character.armor.reduce((r, a) => [...r, ...a.skills], [] as tSkill[]),\r\n    ...considateConsumableListToStack(character.consumables).reduce(\r\n      (r, s) => [...r, s.consumable.skill],\r\n      [] as tSkill[],\r\n    ),\r\n  ]\r\n}\r\n\r\nexport const processCharacter = (\r\n  character: tCharacter,\r\n): tProcessedCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const stats: tStats = capStats(\r\n    combineStats(\r\n      character.stats,\r\n      (character.weapon || FISTS()).stats,\r\n      ...character.armor.map((a) => a.stats),\r\n      ...character.status.map((s) => s.stats),\r\n    ),\r\n  )\r\n  const skills = getSkills(character)\r\n  const statusImmunities = character.status.reduce(\r\n    (r, s) => [...r, ...s.immunities],\r\n    [] as tStatusType[],\r\n  )\r\n  const immunities = [\r\n    ...character.immunities,\r\n    ...(character?.weapon?.immunities || []),\r\n    ...character.armor.reduce(\r\n      (r, a) => [...r, ...a.immunities],\r\n      [] as tStatusType[],\r\n    ),\r\n    ...statusImmunities,\r\n  ]\r\n  const baseVigor = CLASS_STATS[character.class].vigor || character.stats.vigor\r\n  const startingHealth = 25 + Math.floor(0.1 * baseVigor)\r\n  const maxHealth =\r\n    Math.floor(\r\n      startingHealth + character.level + 0.1 * character.level * stats.vigor,\r\n    ) + stats.maxHealthOffset\r\n  const health = maxHealth - character.healthOffset\r\n  const maxInspiration = 3 + stats.maxInspirationOffset\r\n  const inspiration = maxInspiration + character.inspirationOffset\r\n\r\n  return {\r\n    processed: true,\r\n    ...character,\r\n\r\n    health,\r\n    maxHealth,\r\n    inspiration,\r\n    maxInspiration,\r\n\r\n    weapon: character.weapon || FISTS(),\r\n    stats,\r\n    immunities,\r\n    rawStats: character.stats,\r\n    skills,\r\n  }\r\n}\r\n\r\nexport const getBaseStatValue = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n  offset: number = 0,\r\n) => {\r\n  return character.stats[key] + offset\r\n}\r\n\r\nexport const getDamageResistance = (\r\n  character: tProcessedCharacter,\r\n  damage: tDamage,\r\n) => {\r\n  if (damage.type === 'physical') return character.stats.armor\r\n  if (damage.type === 'magic') return character.stats.resistance\r\n  return 0\r\n}\r\nexport const hasStatus = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.status.map((s) => s.type).includes(statusType)\r\n}\r\nexport const hasAnyStatus = (\r\n  character: tCharacter,\r\n  statusTypes: tStatusType[],\r\n) => {\r\n  return statusTypes.some((type) => hasStatus(character, type))\r\n}\r\nexport const findStatus = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.status.find((s) => s.type === statusType)\r\n}\r\nexport const hasImmunity = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.immunities.includes(statusType)\r\n}\r\nexport const getReflectedDamage = (target: tCharacter, rawDamage: tDamage) => {\r\n  return {\r\n    ...rawDamage,\r\n    value: target.stats.damageReflection[rawDamage.range],\r\n  }\r\n}\r\nexport const getRawDamage = (\r\n  source: tProcessedCharacter,\r\n  target: tProcessedCharacter,\r\n  rawDamage: tDamage,\r\n): tDamage => {\r\n  let damageModifier = 1\r\n  target.tags.forEach((tag) => {\r\n    if (source.stats.damageModifiers[tag]) {\r\n      damageModifier += source.stats.damageModifiers[tag]\r\n    }\r\n  })\r\n  return {\r\n    ...rawDamage,\r\n    value: rawDamage.value * damageModifier,\r\n  }\r\n}\r\n\r\nexport const commitDamage = (\r\n  character: tCharacter,\r\n  damage: tDamage,\r\n  ignoreResistance: boolean,\r\n): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const pc = processCharacter(character)\r\n  const resistance = ignoreResistance ? 0 : getDamageResistance(pc, damage)\r\n  const damageTakenModifier =\r\n    pc.stats.damageTakenModifier +\r\n    pc.stats.damageTakenRangeModifiers[damage.range]\r\n  const rawDamageValue = damage.value * damageTakenModifier\r\n  if (hasStatus(character, 'protected')) {\r\n    return {\r\n      ...character,\r\n      status: character.status.filter((s) => s.type !== 'protected'),\r\n    }\r\n  }\r\n  return {\r\n    ...character,\r\n    healthOffset: Math.ceil(\r\n      character.healthOffset + noneg(rawDamageValue - resistance),\r\n    ),\r\n  }\r\n}\r\n\r\nexport const decrementStatusDurations = (character: tCharacter): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    status: character.status\r\n      .map((status) => ({ ...status, duration: status.duration - 1 }))\r\n      .filter((status) => status.duration !== 0),\r\n  }\r\n}\r\nexport const addStatus = (\r\n  character: tCharacter,\r\n  type: tStatusType,\r\n  durationOverride?: number,\r\n): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const statusConfig = STATUS_CONFIG[type]\r\n  const existingStatus = findStatus(character, type)\r\n  if (hasImmunity(processCharacter(character), type)) {\r\n    return character\r\n  }\r\n  if (existingStatus && !statusConfig.canStack) {\r\n    return character\r\n  }\r\n  if (existingStatus && statusConfig.canStack) {\r\n    return {\r\n      ...character,\r\n      status: [\r\n        ...character.status.filter((s) => s.type !== type),\r\n        { ...existingStatus, stack: existingStatus.stack + 1 },\r\n      ],\r\n    }\r\n  }\r\n  return {\r\n    ...character,\r\n    status: [\r\n      ...character.status,\r\n      {\r\n        type,\r\n        stats: statusConfig.stats,\r\n        immunities: statusConfig.immunities,\r\n        duration: durationOverride || statusConfig.duration,\r\n        stack: 1,\r\n      },\r\n    ],\r\n  }\r\n}\r\n\r\nexport const addMultipleStatus = (\r\n  character: tCharacter,\r\n  types: tStatusType[],\r\n): tCharacter => {\r\n  return types.reduce((result, type) => {\r\n    return addStatus(result, type)\r\n  }, character)\r\n}\r\n\r\nexport const checkStatus = (character: tCharacter) => {\r\n  checkForProcessedCharacter(character)\r\n  let c = { ...character }\r\n  character.status.forEach((status) => {\r\n    if (hasImmunity(processCharacter(character), status.type)) {\r\n      c = {\r\n        ...c,\r\n        status: c.status.filter((c) => c.type !== status.type),\r\n      }\r\n    }\r\n  })\r\n  return c\r\n}\r\n\r\nexport const removeTemporaryStatus = (character: tCharacter): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    status: character.status.filter((s) => {\r\n      const config = STATUS_CONFIG[s.type]\r\n      return !config.isTemporary\r\n    }),\r\n  }\r\n}\r\n\r\nexport const equipArmor = (\r\n  character: tCharacter,\r\n  armor: tArmor,\r\n): { character: tCharacter; armor: tArmor | undefined } => {\r\n  checkForProcessedCharacter(character)\r\n  const existingArmor = character.armor.find(\r\n    (a) => a.resource === armor.resource,\r\n  )\r\n  return {\r\n    character: {\r\n      ...character,\r\n      armor: existingArmor\r\n        ? [...character.armor.filter((a) => a.id !== existingArmor.id), armor]\r\n        : [...character.armor, armor],\r\n    },\r\n    armor: existingArmor,\r\n  }\r\n}\r\n\r\nexport const unequipArmor = (\r\n  character: tCharacter,\r\n  resource: tArmorResourceType,\r\n): { character: tCharacter; armor: tArmor | undefined } => {\r\n  checkForProcessedCharacter(character)\r\n  const armor = character.armor.find((a) => a.resource === resource)\r\n  return {\r\n    character: {\r\n      ...character,\r\n      armor: character.armor.filter((a) => a.resource !== resource),\r\n    },\r\n    armor,\r\n  }\r\n}\r\n\r\nexport const equipWeapon = (\r\n  character: tCharacter,\r\n  weapon: tWeapon,\r\n): { character: tCharacter; weapon: tWeapon | undefined } => {\r\n  const existingWeapon = character.weapon\r\n  return {\r\n    character: {\r\n      ...character,\r\n      weapon,\r\n    },\r\n    weapon: existingWeapon,\r\n  }\r\n}\r\n\r\n// DO NOT USE\r\nexport const unequipWeapon = (\r\n  character: tCharacter,\r\n): { character: tCharacter; weapon: tWeapon | undefined } => {\r\n  const existingWeapon = character.weapon\r\n  return {\r\n    character: {\r\n      ...character,\r\n      // weapon: undefined\r\n    },\r\n    weapon: existingWeapon,\r\n  }\r\n}\r\n\r\nexport const getRewardsFromCharacter = (\r\n  character: tProcessedCharacter,\r\n  checkedCharacter: tProcessedCharacter,\r\n): tEncounterReward[] => {\r\n  let index: number = 0\r\n  let failed = false\r\n  if (character.possibleRewards.length === 1)\r\n    return [character.possibleRewards[0]]\r\n  character.possibleRewards.forEach((rewards, i) => {\r\n    const luckReslt = resolveCheck(checkedCharacter, 'luck', 5)\r\n    if (luckReslt && !failed) {\r\n      index = i\r\n    } else {\r\n      failed = true\r\n    }\r\n  })\r\n  return character.possibleRewards[index]\r\n    ? [character.possibleRewards[index]]\r\n    : []\r\n}\r\n\r\nexport const addExperience = (\r\n  character: tCharacter,\r\n  xp: number,\r\n): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const xpToNextLevel = CHARACTER_XP_MAX[character.level]\r\n  const experience = character.experience + xp\r\n  if (experience > xpToNextLevel) {\r\n    return addExperience(\r\n      levelUp({\r\n        ...character,\r\n        experience,\r\n      }),\r\n      0,\r\n    )\r\n  }\r\n  return {\r\n    ...character,\r\n    experience,\r\n  }\r\n}\r\n\r\nexport const levelUp = (character: tCharacter): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const experience = character.experience - CHARACTER_XP_MAX[character.level]\r\n  return {\r\n    ...character,\r\n    level: character.level + 1,\r\n    healthOffset: noneg(Math.floor(character.healthOffset / 2) - 15),\r\n    experience,\r\n    status: character.status.filter((s) => s.type !== 'poisoned'),\r\n  }\r\n}\r\n","export const makeRandom = (max: number, min: number = 0) => {\r\n  const value = Math.floor(Math.random() * max) + min\r\n  return value\r\n}\r\n","import { tParty, tProcessedParty } from './type'\r\nimport {\r\n  checkForProcessedCharacter,\r\n  processCharacter,\r\n  getRewardsFromCharacter,\r\n  addExperience,\r\n  addMultipleStatus,\r\n} from '../Character/util'\r\nimport { tCharacter, tProcessedCharacter } from '../Character/type'\r\nimport { v4 } from 'uuid'\r\nimport { getRandom } from '../../util'\r\nimport { tEncounterReward } from '../Encounter/type'\r\nimport { tArmor } from '../Armor/type'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { tConsumable } from '../Consumable/type'\r\nimport { FLOOR_CONFIGS_BY_INDEX, FLOOR_SIZE } from '../Encounter/floors'\r\nimport { makeRandom } from '../../util/makeRandom'\r\n\r\nexport const isParty = (obj: any): boolean =>\r\n  obj !== undefined && obj.isParty !== undefined\r\n\r\nexport const checkForProcessedParty = (party: tParty) => {\r\n  if ((party as tProcessedParty).processed) {\r\n    throw new Error('No Processed Parties Allowed')\r\n  }\r\n  party.characters.forEach((character) => {\r\n    checkForProcessedCharacter(character)\r\n  })\r\n}\r\n\r\nexport const findCharacterInParty = <\r\n  T extends tParty = tParty,\r\n  R extends tCharacter = tCharacter\r\n>(\r\n  party: T,\r\n  id: string,\r\n): R | undefined => {\r\n  return (party.characters as R[]).find((c) => c.id === id)\r\n}\r\n\r\nexport const getOtherCharacters = (\r\n  party: tParty,\r\n  characterId: string,\r\n): tCharacter[] => party.characters.filter((c) => c.id !== characterId)\r\n\r\nexport const processParty = (party: tParty): tProcessedParty => {\r\n  checkForProcessedParty(party)\r\n  return {\r\n    ...party,\r\n    processed: true,\r\n    characters: party.characters.map((c) => ({\r\n      ...processCharacter(c),\r\n      partyId: party.id,\r\n    })),\r\n  }\r\n}\r\n\r\nexport const updateCharacter = (\r\n  party: tParty,\r\n  characterId: string,\r\n  updater: (character: tCharacter) => tCharacter,\r\n): tParty => {\r\n  checkForProcessedParty(party)\r\n  return {\r\n    ...party,\r\n    characters: party.characters.map((c) =>\r\n      c.id === characterId ? updater(c) : c,\r\n    ),\r\n  }\r\n}\r\n\r\nexport const makeParty = (\r\n  level: number,\r\n  floor: number,\r\n  sideIndex: number,\r\n): tParty => {\r\n  const floorConfig = FLOOR_CONFIGS_BY_INDEX()[floor]\r\n  const roll = makeRandom(FLOOR_SIZE, 1)\r\n  const enemies =\r\n    roll >= sideIndex ? floorConfig.enemies : floorConfig.altEnemies\r\n  return {\r\n    isParty: true,\r\n    id: v4(),\r\n    gold: 0,\r\n    items: [],\r\n    characters: getRandom(enemies[level] || []),\r\n  }\r\n}\r\n\r\nexport const makeBossParty = (floor: number): tParty => {\r\n  const config = FLOOR_CONFIGS_BY_INDEX()[floor]\r\n  return {\r\n    isParty: true,\r\n    id: v4(),\r\n    gold: 0,\r\n    items: [],\r\n    characters: [getRandom(config.bosses)],\r\n  }\r\n}\r\n\r\nexport const getRolledRewards = (\r\n  party: tProcessedParty,\r\n  checkedCharacter: tProcessedCharacter,\r\n): tEncounterReward[] => {\r\n  return party.characters.reduce((r, character) => {\r\n    return [...r, ...getRewardsFromCharacter(character, checkedCharacter)]\r\n  }, [] as tEncounterReward[])\r\n}\r\n\r\nexport const commitRewards = (\r\n  party: tParty,\r\n  rewards: tEncounterReward,\r\n): tParty => {\r\n  checkForProcessedParty(party)\r\n  const goldMultiplier =\r\n    1 +\r\n    processParty(party).characters.reduce(\r\n      (r, c) => (r > c.stats.goldModifier ? r : c.stats.goldModifier),\r\n      0,\r\n    ) /\r\n      100\r\n  return {\r\n    ...party,\r\n    gold: party.gold + Math.floor(rewards.gold * goldMultiplier),\r\n    items: [\r\n      ...party.items,\r\n      ...(rewards.items.filter((i) => i.itemType !== 'consumable') as (\r\n        | tArmor\r\n        | tWeapon\r\n      )[]),\r\n    ],\r\n    characters: party.characters.map((c) =>\r\n      addMultipleStatus(\r\n        addExperience(\r\n          {\r\n            ...c,\r\n            consumables: [\r\n              ...c.consumables,\r\n              ...(rewards.items.filter(\r\n                (i) => i.itemType === 'consumable',\r\n              ) as tConsumable[]),\r\n            ],\r\n          },\r\n          rewards.xp,\r\n        ),\r\n        rewards.status,\r\n      ),\r\n    ),\r\n  }\r\n}\r\n","import { v4 } from 'uuid'\r\n\r\nexport const PLAYER_PARTY_ID = v4()\r\n","import { useSelector } from 'react-redux'\r\nimport { StateCoreT, StateActionT, StateT } from '../types'\r\nimport { Dispatch } from 'redux'\r\nimport { makeReducer } from '../util'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { checkForProcessedParty, updateCharacter } from '../../game/Party/util'\r\nimport { tCharacter } from '../../game/Character/type'\r\nimport { makeCharacter, addMultipleStatus } from '../../game/Character/util'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport {\r\n  ALL_WEAPONS,\r\n  WEAPONS_BY_LEVEL,\r\n} from '../../game/Weapon/builders/objects'\r\nimport { getRandomItem } from '../../game/Item/util'\r\nimport { ARMOR_BY_LEVEL } from '../../game/Armor/builders/sets'\r\n\r\nexport const UPDATE_PARTY = '@actions/parties/set-party'\r\nexport const UPSERT_CHARACTER = '@actions/parties/upsert-character'\r\nexport const DELETE_CHARACTER = '@actions/parties/delete-character'\r\nexport const UPSERT_ITEM = '@actions/parties/upsert-item'\r\nexport const SET_GOLD = '@actions/parties/set-gold'\r\n\r\nexport const actionCreators = {\r\n  updateParty: (party: tParty): StateActionT => {\r\n    return {\r\n      type: UPDATE_PARTY,\r\n      payload: {\r\n        party,\r\n      },\r\n    }\r\n  },\r\n  upsertCharacter: (character: tCharacter): StateActionT => {\r\n    return {\r\n      type: UPSERT_CHARACTER,\r\n      payload: {\r\n        character,\r\n      },\r\n    }\r\n  },\r\n  deleteCharacter: (characterId: string): StateActionT => {\r\n    return {\r\n      type: DELETE_CHARACTER,\r\n      payload: {\r\n        characterId,\r\n      },\r\n    }\r\n  },\r\n  upsertItem: (item: tArmor | tWeapon): StateActionT => {\r\n    return {\r\n      type: UPSERT_ITEM,\r\n      payload: {\r\n        item,\r\n      },\r\n    }\r\n  },\r\n  setGold: (gold: number): StateActionT => {\r\n    return {\r\n      type: SET_GOLD,\r\n      payload: {\r\n        gold,\r\n      },\r\n    }\r\n  },\r\n}\r\n\r\nexport const actions = {\r\n  updateParty: (party: tParty) => (dispatch: Dispatch) => {\r\n    checkForProcessedParty(party)\r\n    dispatch(actionCreators.updateParty(party))\r\n  },\r\n  upsertCharacter: (character: tCharacter) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.upsertCharacter(character))\r\n  },\r\n  deleteCharacter: (characterId: string) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.deleteCharacter(characterId))\r\n  },\r\n  upsertItem: (item: tArmor | tWeapon) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.upsertItem(item))\r\n  },\r\n  setGold: (gold: number) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.setGold(gold))\r\n  },\r\n}\r\n\r\nexport const core: StateCoreT<tParty> = {\r\n  [UPDATE_PARTY]: (state, action) => {\r\n    return {\r\n      ...action.payload.party,\r\n    }\r\n  },\r\n  [UPSERT_CHARACTER]: (state, action) => {\r\n    return updateCharacter(\r\n      state,\r\n      action.payload.character.id,\r\n      (c) => action.payload.character,\r\n    )\r\n  },\r\n  [DELETE_CHARACTER]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      characters: state.characters.filter(\r\n        (c) => c.id !== action.payload.characterId,\r\n      ),\r\n    }\r\n  },\r\n  [UPSERT_ITEM]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      items: [\r\n        ...state.items.filter((item) => item.id !== action.payload.item.id),\r\n        action.payload.item,\r\n      ],\r\n    }\r\n  },\r\n  [SET_GOLD]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      gold: action.payload.gold,\r\n    }\r\n  },\r\n}\r\nconst jack = { ...makeCharacter('executioner'), name: 'Jack' }\r\nconst jim = { ...makeCharacter('patrician'), name: 'Jim' }\r\nconst john = { ...makeCharacter('student'), name: 'Johnny' }\r\nexport const INITIAL_STATE: tParty = {\r\n  isParty: true,\r\n  id: PLAYER_PARTY_ID,\r\n  items: [],\r\n  gold: 200,\r\n  characters: [\r\n    addMultipleStatus(\r\n      {\r\n        ...jack,\r\n        // healthOffset: 30,\r\n      },\r\n      [\r\n        /*\r\n        'frozen',\r\n        'bleeding',\r\n        'burning',\r\n        'poisoned',\r\n        'stunned',\r\n        'speed-down',\r\n        'targeted',\r\n        'evasive',\r\n        'armor-down',\r\n        */\r\n      ],\r\n    ),\r\n    addMultipleStatus(\r\n      {\r\n        ...jim,\r\n        //healthOffset: 30\r\n      },\r\n      [],\r\n    ),\r\n    {\r\n      ...john,\r\n      //healthOffset: 30\r\n    },\r\n  ],\r\n}\r\nexport default makeReducer(core, INITIAL_STATE)\r\nexport const useParty = () => useSelector((state: StateT) => state.party)\r\nexport const usePartyActions = () =>\r\n  useActions(actions) as {\r\n    updateParty: (party: tParty) => void\r\n    upsertCharacter: (character: tCharacter) => void\r\n    deleteCharacter: (characterId: string) => void\r\n    upsertItem: (item: tArmor | tWeapon) => void\r\n    setGold: (gold: number) => void\r\n  }\r\n","import { v4 } from 'uuid'\r\nimport { HexT } from '../../grid/types'\r\nimport {\r\n  CENTER_HEX,\r\n  getDepth,\r\n  getSideIndex,\r\n  isValueEqual,\r\n  MIN_HEX,\r\n} from '../../grid/util'\r\nimport { getRandom, noneg } from '../../util'\r\nimport { makeRandom } from '../../util/makeRandom'\r\nimport { makeEnemyReward } from '../Character/enemies/_builder'\r\nimport { BEAST_DRUG } from '../Consumable/objects/beast_drug'\r\nimport { CELESTIAL_LOTUS } from '../Consumable/objects/celestial_lotus'\r\nimport { CURE_POTION } from '../Consumable/objects/curing_potion'\r\nimport { FIREBOMB } from '../Consumable/objects/firebomb'\r\nimport { GODSBEARD } from '../Consumable/objects/godsbeard'\r\nimport { POISON_KNIFE } from '../Consumable/objects/poison_knife'\r\nimport { getRandomItem } from '../Item/util'\r\nimport { makeBossParty, makeParty } from '../Party/util'\r\nimport { tBaseStats } from '../Stats/type'\r\nimport { POSSIBLE_SHINE_REWARDS, ZERO_REWARD } from './constants'\r\nimport { FLOOR_CONFIGS_BY_INDEX, FLOOR_SIZE } from './floors'\r\nimport {\r\n  tBossEncounter,\r\n  tCombatEncounter,\r\n  tEncounter,\r\n  tEncounterType,\r\n  tRewardEncounter,\r\n  tShopEncounter,\r\n  tShrineEncounter,\r\n} from './type'\r\nimport { getItemCost } from './util'\r\n\r\nexport const buildRandomEncounterType = (\r\n  isSide: boolean,\r\n  isCenter: boolean,\r\n  isEnd: boolean,\r\n  isShop: boolean,\r\n): tEncounterType => {\r\n  const roll = makeRandom(100, 1)\r\n  if (isEnd) return 'boss'\r\n  if (isCenter) return 'reward'\r\n  if (isShop) return 'shop'\r\n  if (isSide) return 'combat'\r\n  if (roll >= 95) return 'reward'\r\n  if (roll >= 78) return 'shrine'\r\n  return 'combat'\r\n}\r\n\r\nexport const buildRandomEncounter = (\r\n  floor: number,\r\n  hex: HexT,\r\n  isShop: boolean,\r\n): tEncounter | undefined => {\r\n  const config = FLOOR_CONFIGS_BY_INDEX()[floor]\r\n  const depth = getDepth(hex, FLOOR_SIZE)\r\n  const sideIndex = getSideIndex(hex)\r\n  const isSide = hex.q === 0 || hex.q - 1 === depth\r\n  const isCenter = isValueEqual(hex, CENTER_HEX(FLOOR_SIZE))\r\n  const isStart = isValueEqual(hex, MIN_HEX(FLOOR_SIZE))\r\n  const isEnd = depth === FLOOR_SIZE - 1\r\n\r\n  if (isStart) return undefined\r\n  const type = buildRandomEncounterType(isSide, isCenter, isEnd, isShop)\r\n  let encounter: tEncounter = {\r\n    id: v4(),\r\n    name: `Encounter ${depth}`,\r\n    type,\r\n    reward: ZERO_REWARD,\r\n    completed: false,\r\n  }\r\n\r\n  if (encounter.type === 'combat') {\r\n    encounter = {\r\n      ...encounter,\r\n      party: makeParty(noneg(depth), floor, sideIndex),\r\n    } as tCombatEncounter\r\n  }\r\n  if (encounter.type === 'boss') {\r\n    encounter = {\r\n      ...encounter,\r\n      boss: true,\r\n      party: makeBossParty(floor),\r\n    } as tBossEncounter\r\n  }\r\n  if (encounter.type === 'reward') {\r\n    encounter = {\r\n      ...encounter,\r\n      isMimic: makeRandom(10) > 6,\r\n      reward: makeEnemyReward(100, makeRandom(25), [\r\n        getRandomItem(2, 2),\r\n        getRandomItem(2, 2),\r\n      ]),\r\n      isOpened: false,\r\n      party: {\r\n        ...makeParty(depth, floor, 0),\r\n        characters: [config.mimic()],\r\n      },\r\n    } as tRewardEncounter\r\n  }\r\n  if (encounter.type === 'shop') {\r\n    const items = [\r\n      GODSBEARD(),\r\n      CELESTIAL_LOTUS(),\r\n      CURE_POTION(),\r\n      FIREBOMB(),\r\n      POISON_KNIFE(),\r\n      BEAST_DRUG(),\r\n      ...config.items,\r\n    ]\r\n    encounter = {\r\n      ...encounter,\r\n      items,\r\n      consumables: [],\r\n      costs: items.reduce((r, i) => {\r\n        return {\r\n          ...r,\r\n          [i.id]: getItemCost(i),\r\n        }\r\n      }, {}),\r\n    } as tShopEncounter\r\n  }\r\n  if (encounter.type === 'shrine') {\r\n    const stat: keyof tBaseStats = getRandom<keyof tBaseStats>([\r\n      'vigor',\r\n      'strength',\r\n      'dexterity',\r\n      'intelligence',\r\n      'charisma',\r\n      'luck',\r\n    ])\r\n    const rewards = getRandom(POSSIBLE_SHINE_REWARDS())\r\n    encounter = {\r\n      ...encounter,\r\n      stat,\r\n      offset: 0,\r\n      rolls: rewards.length,\r\n      results: rewards,\r\n    } as tShrineEncounter\r\n  }\r\n\r\n  return encounter\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { buildRandomEncounter } from '../game/Encounter/builders'\r\nimport { noneg } from '../util'\r\nimport { makeRandom } from '../util/makeRandom'\r\nimport { EncounterArrayT, HexT } from './types'\r\n\r\nexport const makeHex = (q: number, r: number): HexT => ({\r\n  id: v4(),\r\n  q,\r\n  r,\r\n  s: q * -1 - r,\r\n})\r\n\r\nexport const ZERO_HEX = (): HexT => makeHex(0, 0)\r\nexport const MIN_HEX = (size: number): HexT => makeHex(0, size)\r\nexport const CENTER_HEX = (size: number): HexT => {\r\n  const q = Math.ceil(size / 2) - 2\r\n  const r = Math.ceil(size / 2) - 1\r\n  return makeHex(q, r)\r\n}\r\n\r\nexport const isEqual = (a: HexT, b: HexT) => a.id === b.id\r\nexport const isValueEqual = (a: HexT, b: HexT) =>\r\n  a.q === b.q && a.r === b.r && a.s === b.s\r\n\r\nexport const addHex = (a: HexT, b: HexT): HexT => ({\r\n  ...a,\r\n  q: a.q + b.q,\r\n  r: a.r + b.r,\r\n  s: a.s + b.s,\r\n})\r\n\r\nexport const multHex = (a: HexT, m: number) => ({\r\n  ...a,\r\n  q: a.q * m,\r\n  r: a.r * m,\r\n  s: a.s * m,\r\n})\r\n\r\nexport const getDepth = (hex: HexT, size: number): number => {\r\n  return noneg(size - hex.r - 1)\r\n}\r\n\r\nexport const getSideIndex = (hex: HexT): number => {\r\n  return (hex.r + hex.s) * -1\r\n}\r\n\r\nexport const makeEncounterArray = (\r\n  size: number,\r\n  floor: number,\r\n): EncounterArrayT => {\r\n  let index = 0\r\n  const minQ = 0\r\n  const maxQ = size\r\n  const minR = 0\r\n  const maxR = size\r\n  const shopIndex = makeRandom(55, 1)\r\n  let result: EncounterArrayT = {}\r\n  for (let q = minQ; q <= maxQ; q++) {\r\n    result[q] = {}\r\n    for (let r = maxR; r >= minR; r--) {\r\n      const hex = makeHex(q, r)\r\n      const ri = maxR - r\r\n      result[q][r] = {}\r\n      if (q > ri) continue\r\n      const e = buildRandomEncounter(floor, hex, index === shopIndex)\r\n      result[q][r][hex.s] = e\r\n      index++\r\n    }\r\n  }\r\n  return result\r\n}\r\n\r\nexport const isAdjacent = (current: HexT | undefined) => (\r\n  hex: HexT,\r\n): boolean => {\r\n  const range = 1\r\n  if (!current) return false\r\n  if (hex.q === current.q && hex.r === current.r - range) {\r\n    return true\r\n  }\r\n  if (hex.q === current.q && hex.r === current.r + range) {\r\n    return true\r\n  }\r\n  if (hex.q === current.q - range && hex.r === current.r) {\r\n    return true\r\n  }\r\n  if (hex.q === current.q - range && hex.r === current.r + range) {\r\n    return true\r\n  }\r\n  if (hex.q === current.q + range && hex.r === current.r) {\r\n    return true\r\n  }\r\n  if (hex.q === current.q + range && hex.r === current.r - range) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { tFloor2 } from './type'\r\nimport { tArmor } from '../Armor/type'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { tConsumable } from '../Consumable/type'\r\nimport { makeEncounterArray } from '../../grid/util'\r\n\r\nexport const getItemCost = (item: tArmor | tWeapon | tConsumable): number => {\r\n  return item.goldValue * 3\r\n}\r\n\r\nexport const makeFloor2 = (depth: number, size: number): tFloor2 => {\r\n  let name = ''\r\n  if (depth === 0) {\r\n    name = 'The Forgotten Woods'\r\n  }\r\n  if (depth === 1) {\r\n    name = 'Tomb of the Formless One (in-progress)'\r\n  }\r\n  if (depth === 2) {\r\n    name = 'Realm of the Ancients (comming soon)'\r\n  }\r\n  return {\r\n    id: v4(),\r\n    name,\r\n    depth,\r\n    size: size,\r\n    encounters: makeEncounterArray(size, depth),\r\n  }\r\n}\r\n","import { StateCoreT, StateT, StateActionT } from '../types'\r\nimport { makeReducer } from '../util'\r\nimport { useSelector } from 'react-redux'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport { Dispatch } from 'redux'\r\nimport {\r\n  tShopEncounter,\r\n  tFloor2,\r\n  tRewardEncounter,\r\n} from '../../game/Encounter/type'\r\nimport { makeFloor2 } from '../../game/Encounter/util'\r\nimport { HexT } from '../../grid/types'\r\nimport { makeHex, MIN_HEX } from '../../grid/util'\r\nimport { FLOOR_SIZE } from '../../game/Encounter/floors'\r\n\r\nexport interface GameStateT {\r\n  hex: HexT\r\n  floor: number\r\n  floors: tFloor2[]\r\n  loading: boolean\r\n}\r\n\r\nexport const RESET = '@action/game/reset'\r\nexport const SET_LOADING = '@action/game/set-loading'\r\nexport const CHOOSE_NEXT = '@action/game/CHOOSE_NEXT'\r\nexport const COMPLETE_CURRENT = '@action/game/complete-current'\r\nexport const OPEN_CURRENT = '@action/game/open-current'\r\nexport const NEXT_FLOOR = '@action/game/next-floor'\r\nexport const REMOVE_ITEM = '@action/game/remove-item'\r\n\r\nexport const actionCreators = {\r\n  reset: (): StateActionT => ({\r\n    type: RESET,\r\n    payload: {},\r\n  }),\r\n  setLoading: (loading: boolean): StateActionT => ({\r\n    type: SET_LOADING,\r\n    payload: {\r\n      loading,\r\n    },\r\n  }),\r\n  chooseNext: (hex: HexT): StateActionT => ({\r\n    type: CHOOSE_NEXT,\r\n    payload: {\r\n      hex,\r\n    },\r\n  }),\r\n  nextFloor: (): StateActionT => ({\r\n    type: NEXT_FLOOR,\r\n    payload: {},\r\n  }),\r\n  removeItem: (itemId: string): StateActionT => ({\r\n    type: REMOVE_ITEM,\r\n    payload: {\r\n      itemId,\r\n    },\r\n  }),\r\n  completeCurrent: (): StateActionT => ({\r\n    type: COMPLETE_CURRENT,\r\n    payload: {},\r\n  }),\r\n  openCurrent: (): StateActionT => ({\r\n    type: OPEN_CURRENT,\r\n    payload: {},\r\n  }),\r\n}\r\n\r\nexport const actions = {\r\n  reset: () => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.setLoading(true))\r\n    setTimeout(() => {\r\n      dispatch(actionCreators.reset())\r\n      dispatch(actionCreators.setLoading(false))\r\n    }, 200)\r\n  },\r\n  chooseNext: (hex: HexT) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.chooseNext(hex))\r\n  },\r\n  nextFloor: () => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.nextFloor())\r\n  },\r\n  removeItem: (itemId: string) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.removeItem(itemId))\r\n  },\r\n  completeCurrent: () => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.completeCurrent())\r\n  },\r\n  openCurrent: () => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.openCurrent())\r\n  },\r\n}\r\n\r\nconst updateCurrentFloor = (\r\n  state: GameStateT,\r\n  updater: (floor: tFloor2) => tFloor2,\r\n): GameStateT => {\r\n  return {\r\n    ...state,\r\n    floors: state.floors.map((floor) =>\r\n      floor.depth === state.floor ? updater(floor) : floor,\r\n    ),\r\n  }\r\n}\r\n\r\nexport const core: StateCoreT<GameStateT> = {\r\n  [RESET]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      hex: MIN_HEX(FLOOR_SIZE),\r\n      floor: 0,\r\n      floors: [\r\n        makeFloor2(0, FLOOR_SIZE),\r\n        makeFloor2(1, FLOOR_SIZE),\r\n        makeFloor2(2, FLOOR_SIZE),\r\n      ],\r\n    }\r\n  },\r\n  [SET_LOADING]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      loading: action.payload.loading,\r\n    }\r\n  },\r\n  [CHOOSE_NEXT]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      hex: action.payload.hex,\r\n    }\r\n  },\r\n  [NEXT_FLOOR]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      floor: state.floor + 1,\r\n      hex: MIN_HEX(FLOOR_SIZE),\r\n    }\r\n  },\r\n  [REMOVE_ITEM]: (state, action) => {\r\n    return updateCurrentFloor(state, (floor) => {\r\n      const encounters = floor.encounters\r\n      encounters[state.hex.q][state.hex.r][state.hex.s] = {\r\n        ...encounters[state.hex.q][state.hex.r][state.hex.s],\r\n        items: (encounters[state.hex.q][state.hex.r][\r\n          state.hex.s\r\n        ] as tShopEncounter).items.filter(\r\n          (i) => i.id !== action.payload.itemId,\r\n        ),\r\n      } as tShopEncounter\r\n      return {\r\n        ...floor,\r\n        encounters,\r\n      }\r\n    })\r\n  },\r\n  [COMPLETE_CURRENT]: (state, action) => {\r\n    return updateCurrentFloor(state, (floor) => {\r\n      const encounters = floor.encounters\r\n      let encounter = encounters[state.hex.q][state.hex.r][state.hex.s]\r\n      if (encounter) {\r\n        encounter = {\r\n          ...encounter,\r\n          completed: true,\r\n        }\r\n        encounters[state.hex.q][state.hex.r][state.hex.s] = encounter\r\n      }\r\n      return {\r\n        ...floor,\r\n        encounters,\r\n      }\r\n    })\r\n  },\r\n  [OPEN_CURRENT]: (state, action) => {\r\n    return updateCurrentFloor(state, (floor) => {\r\n      const encounters = floor.encounters\r\n      let encounter = encounters[state.hex.q][state.hex.r][state.hex.s]\r\n      if (encounter) {\r\n        encounter = {\r\n          ...encounter,\r\n          isOpened: true,\r\n        } as tRewardEncounter\r\n        encounters[state.hex.q][state.hex.r][state.hex.s] = encounter\r\n      }\r\n      return {\r\n        ...floor,\r\n        encounters,\r\n      }\r\n    })\r\n  },\r\n}\r\n\r\nexport const INITIAL_STATE: GameStateT = {\r\n  floor: 0,\r\n  hex: MIN_HEX(FLOOR_SIZE),\r\n  floors: [\r\n    makeFloor2(0, FLOOR_SIZE),\r\n    makeFloor2(1, FLOOR_SIZE),\r\n    makeFloor2(2, FLOOR_SIZE),\r\n  ],\r\n  loading: false,\r\n}\r\n\r\nexport default makeReducer(core, INITIAL_STATE)\r\nexport const useGameState = (): GameStateT =>\r\n  useSelector((state: StateT) => state.game)\r\nexport const useGameStateActions = () =>\r\n  useActions(actions) as {\r\n    reset: () => void\r\n    chooseNext: (hex: HexT) => void\r\n    nextFloor: () => void\r\n    removeItem: (itemId: string) => void\r\n    completeCurrent: () => void\r\n    openCurrent: () => void\r\n  }\r\n","import React, { useContext, useEffect, useMemo, useState } from 'react'\r\nimport { useGameState, useGameStateActions } from '../../state/game2'\r\nimport { tEncounter, tFloor2 } from '../../game/Encounter/type'\r\nimport { EncounterArrayT, HexT } from '../../grid/types'\r\nimport { makeHex } from '../../grid/util'\r\nimport { useModalContext } from '../ModalContext'\r\n\r\nexport interface GameStateContextT {\r\n  started: boolean\r\n  encounters: EncounterArrayT\r\n  floors: tFloor2[]\r\n  floor: number\r\n  currentHex: HexT\r\n  currentEncounter: tEncounter | undefined\r\n  previousEncounter: tEncounter | undefined\r\n  loading: boolean\r\n  chooseNext: (hex: HexT) => void\r\n  nextFloor: () => void\r\n  reset: () => void\r\n  removeItem: (itemId: string) => void\r\n  completeCurrent: () => void\r\n  openCurrent: () => void\r\n}\r\n\r\nexport const defaultValue: GameStateContextT = {\r\n  started: false,\r\n  encounters: [],\r\n  floors: [],\r\n  floor: 0,\r\n  currentHex: makeHex(0, 0),\r\n  currentEncounter: undefined,\r\n  previousEncounter: undefined,\r\n  loading: false,\r\n  chooseNext: (hex) => {},\r\n  nextFloor: () => {},\r\n  reset: () => {},\r\n  removeItem: (itemId) => {},\r\n  completeCurrent: () => {},\r\n  openCurrent: () => {},\r\n}\r\nexport const GameStateContext = React.createContext<GameStateContextT>(\r\n  defaultValue,\r\n)\r\nexport const useGameStateContext = () => useContext(GameStateContext)\r\n\r\nexport interface GameStateProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const GameStateContextProvider = (props: GameStateProviderPropsT) => {\r\n  const { children } = props\r\n  const { floors, floor, hex, loading } = useGameState()\r\n  const [started, setStarted] = useState(false)\r\n  const currentFloor = floors[floor]\r\n  const encounters = currentFloor.encounters\r\n  const {\r\n    nextFloor,\r\n    chooseNext,\r\n    reset,\r\n    removeItem,\r\n    completeCurrent,\r\n    openCurrent,\r\n  } = useGameStateActions()\r\n  const currentEncounter = useMemo(() => {\r\n    return encounters[hex.q][hex.r][hex.s]\r\n  }, [hex, JSON.stringify(encounters)])\r\n  const [previousEncounter, setPreviousEncounter] = useState<\r\n    tEncounter | undefined\r\n  >()\r\n\r\n  useEffect(() => {\r\n    if (currentEncounter && currentEncounter.completed) {\r\n      setPreviousEncounter(currentEncounter)\r\n    }\r\n  }, [currentEncounter])\r\n\r\n  useEffect(() => {\r\n    setStarted(true)\r\n  }, [])\r\n\r\n  return (\r\n    <GameStateContext.Provider\r\n      value={{\r\n        started,\r\n        encounters,\r\n        floors,\r\n        floor,\r\n        currentHex: hex,\r\n        currentEncounter,\r\n        previousEncounter,\r\n        loading,\r\n        reset,\r\n        chooseNext,\r\n        nextFloor,\r\n        removeItem,\r\n        completeCurrent,\r\n        openCurrent,\r\n      }}\r\n    >\r\n      {children}\r\n    </GameStateContext.Provider>\r\n  )\r\n}\r\n","import React, { useMemo, useContext, useState } from 'react'\r\nimport { usePartyActions, useParty } from '../../state/party'\r\nimport { tProcessedParty, tParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter, tCharacter } from '../../game/Character/type'\r\nimport {\r\n  processParty,\r\n  makeParty,\r\n  findCharacterInParty,\r\n} from '../../game/Party/util'\r\nimport {\r\n  checkForProcessedCharacter,\r\n  processCharacter,\r\n  makeCharacter,\r\n  equipArmor,\r\n  equipWeapon,\r\n  unequipArmor,\r\n} from '../../game/Character/util'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { useGameStateContext } from '../GameStateContext'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { FISTS } from '../../game/Weapon/fists'\r\n\r\nexport interface PartyContextT {\r\n  party: tProcessedParty\r\n  rawParty: tParty\r\n  activeCharacter: tProcessedCharacter\r\n  updateParty: (party: tParty) => void\r\n  upsertCharacter: (character: tCharacter) => void\r\n  deleteCharacter: (characterId: string) => void\r\n  findCharacter: (characterId: string) => tProcessedCharacter | undefined\r\n  findRawCharacter: (characterId: string) => tCharacter | undefined\r\n  setActiveCharacter: (character: tProcessedCharacter) => void\r\n  equipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n  unequipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n  purchaseItem: (item: tArmor | tWeapon | tConsumable, cost: number) => void\r\n  sellItem: (itemId: string) => void\r\n  refreshParty: () => void\r\n}\r\nconst defaultContextValue: PartyContextT = {\r\n  rawParty: makeParty(0, 0, 0),\r\n  party: processParty(makeParty(0, 0, 0)),\r\n  activeCharacter: processCharacter(makeCharacter('executioner')),\r\n  updateParty: (party) => {},\r\n  upsertCharacter: (character) => {},\r\n  deleteCharacter: (characterId) => {},\r\n  findCharacter: (characterId) => undefined,\r\n  findRawCharacter: (characterId) => undefined,\r\n  setActiveCharacter: (character) => {},\r\n  equipItem: (characterId, item) => {},\r\n  unequipItem: (characterId, item) => {},\r\n  purchaseItem: (item, cost) => {},\r\n  sellItem: (itemId) => {},\r\n  refreshParty: () => {},\r\n}\r\nexport const PartyContext = React.createContext<PartyContextT>(\r\n  defaultContextValue,\r\n)\r\n\r\nexport interface PartyContextProviderPropsT {\r\n  children: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const PartyContextProvider = (props: PartyContextProviderPropsT) => {\r\n  const { children } = props\r\n  const actions = usePartyActions()\r\n  const rawParty = useParty()\r\n  const { currentEncounter, removeItem } = useGameStateContext()\r\n  const party = useMemo(() => processParty(rawParty), [rawParty])\r\n  const [activeCharacterId, setActiveCharacterId] = useState<string>(\r\n    party.characters[0].id,\r\n  )\r\n  const activeCharacter = useMemo(() => {\r\n    return party.characters.find(\r\n      (c) => c.id === activeCharacterId,\r\n    ) as tProcessedCharacter\r\n  }, [activeCharacterId, party.characters])\r\n  const setActiveCharacter = (character: tProcessedCharacter) =>\r\n    setActiveCharacterId(character.id)\r\n  const updateParty = (party: tParty) => {\r\n    actions.updateParty(party)\r\n  }\r\n  const upsertCharacter = (character: tCharacter) => {\r\n    if (!character) return\r\n    checkForProcessedCharacter(character)\r\n    actions.upsertCharacter(character)\r\n  }\r\n  const deleteCharacter = (characterId: string) => {\r\n    actions.deleteCharacter(characterId)\r\n  }\r\n  const findCharacter = (characterId: string) => {\r\n    return findCharacterInParty<tProcessedParty, tProcessedCharacter>(\r\n      party,\r\n      characterId,\r\n    )\r\n  }\r\n  const findRawCharacter = (characterId: string) => {\r\n    return findCharacterInParty(rawParty, characterId)\r\n  }\r\n\r\n  const equipItem = (characterId: string, item: tWeapon | tArmor) => {\r\n    const character = findRawCharacter(characterId)\r\n    if (!character) return\r\n    if (item.itemType === 'armor') {\r\n      const armor = item as tArmor\r\n      if (armor.resource === 'offhand' && (character.weapon || FISTS()).twoHand)\r\n        return\r\n      const result = equipArmor(character, armor)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.armor ? [result.armor] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n    if (item.itemType === 'weapon') {\r\n      const weapon = item as tWeapon\r\n      if ((character.weapon || FISTS()).twoHand) {\r\n        if (character.armor.find((a) => a.resource === 'offhand')) {\r\n          return\r\n        }\r\n      }\r\n      const result = equipWeapon(character, weapon)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.weapon ? [result.weapon] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n  }\r\n  const unequipItem = (characterId: string, item: tWeapon | tArmor) => {\r\n    const character = findRawCharacter(characterId)\r\n    if (!character) return\r\n    if (item.itemType === 'armor') {\r\n      const armor = item as tArmor\r\n      const result = unequipArmor(character, armor.resource)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.armor ? [result.armor] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n    if (item.itemType === 'weapon') {\r\n      updateParty({\r\n        ...rawParty,\r\n        items: character.weapon\r\n          ? [...rawParty.items, character.weapon]\r\n          : rawParty.items,\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === characterId ? { ...c, weapon: undefined } : c,\r\n        ),\r\n      })\r\n    }\r\n  }\r\n  const purchaseItem = (item: tArmor | tWeapon | tConsumable, cost: number) => {\r\n    if (party.gold > cost && currentEncounter) {\r\n      if (item.itemType === 'armor' || item.itemType === 'weapon') {\r\n        actions.upsertItem(item as tArmor | tWeapon)\r\n      }\r\n      if (item.itemType === 'consumable') {\r\n        updateParty({\r\n          ...rawParty,\r\n          characters: rawParty.characters.map((c) => ({\r\n            ...c,\r\n            consumables: [...c.consumables, item as tConsumable],\r\n          })),\r\n        })\r\n      }\r\n      actions.setGold(party.gold - cost)\r\n      removeItem(item.id)\r\n    }\r\n  }\r\n  const sellItem = (itemId: string) => {\r\n    const item = rawParty.items.find((i) => i.id === itemId)\r\n    if (item) {\r\n      updateParty({\r\n        ...rawParty,\r\n        items: rawParty.items.filter((i) => i.id !== itemId),\r\n        gold: rawParty.gold + item.goldValue,\r\n      })\r\n    }\r\n  }\r\n  const refreshParty = () => {\r\n    updateParty({\r\n      ...rawParty,\r\n      characters: rawParty.characters.map((c) => ({\r\n        ...c,\r\n        healthOffset: 0,\r\n        status: [],\r\n      })),\r\n    })\r\n  }\r\n\r\n  return (\r\n    <PartyContext.Provider\r\n      value={{\r\n        party,\r\n        rawParty,\r\n        activeCharacter,\r\n        updateParty,\r\n        upsertCharacter,\r\n        deleteCharacter,\r\n        findCharacter,\r\n        findRawCharacter,\r\n        setActiveCharacter,\r\n        equipItem,\r\n        unequipItem,\r\n        purchaseItem,\r\n        sellItem,\r\n        refreshParty,\r\n      }}\r\n    >\r\n      {children}\r\n    </PartyContext.Provider>\r\n  )\r\n}\r\n\r\nexport const usePartyContext = () => useContext(PartyContext)\r\n","import { ModalStylesT } from '.'\r\n\r\nexport interface ModalContextStateT {\r\n  isOpen: boolean\r\n  contents: JSX.Element | null\r\n  callback: ((payload?: any) => void) | null\r\n  payload: any | null\r\n  blocking: boolean\r\n  styles: ModalStylesT\r\n}\r\nexport const initialState: ModalContextStateT = {\r\n  isOpen: false,\r\n  contents: null,\r\n  callback: null,\r\n  payload: null,\r\n  blocking: false,\r\n  styles: {},\r\n}\r\n\r\nexport const OPEN = 'modalContext/OPEN'\r\nexport const CLOSE = 'modalContext/CLOSE'\r\nexport const SET_CONTENTS = 'modalContext/SET_CONTENTS'\r\nexport const SET_CALLBACK = 'modalContext/SET_CALLBACK'\r\nexport const SET_PAYLOAD = 'modalContext/SET_PAYLOAD'\r\nexport const SET_BLOCKING = 'modalContext/SET_BLOCKING'\r\nexport const SET_STYLE = 'modalContext/SET_STYLE'\r\n\r\nexport const actions = {\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => ({\r\n    type: OPEN,\r\n    contents,\r\n    styles,\r\n    blocking,\r\n    callback,\r\n  }),\r\n  close: () => ({ type: CLOSE }),\r\n  setPayload: (payload: any) => ({ type: SET_PAYLOAD, payload }),\r\n  setContents: (contents: JSX.Element | null) => ({\r\n    type: SET_CONTENTS,\r\n    contents,\r\n  }),\r\n  setCallback: (callback: (() => void) | null) => ({\r\n    type: SET_CALLBACK,\r\n    callback,\r\n  }),\r\n  setBlocking: (blocking: boolean) => ({ type: SET_BLOCKING, blocking }),\r\n  setStyles: (styles: ModalStylesT) => ({ type: SET_STYLE, styles }),\r\n}\r\n\r\nconst core: Record<\r\n  string,\r\n  (state: ModalContextStateT, action: any) => ModalContextStateT\r\n> = {\r\n  [OPEN]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    isOpen: true,\r\n    contents: action.contents ? action.contents : state.contents,\r\n    styles: action.styles ? action.styles : state.styles || {},\r\n    blocking: action.blocking || false,\r\n    callback: action.callback ? action.callback : state.callback,\r\n  }),\r\n  [CLOSE]: (state: ModalContextStateT) => ({\r\n    ...state,\r\n    isOpen: false,\r\n  }),\r\n  [SET_PAYLOAD]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    payload: action.payload,\r\n  }),\r\n  [SET_CONTENTS]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: null,\r\n    payload: null,\r\n    contents: action.contents,\r\n    blocking: false,\r\n    style: {},\r\n  }),\r\n  [SET_CALLBACK]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: action.callback,\r\n  }),\r\n  [SET_BLOCKING]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    blocking: action.blocking,\r\n  }),\r\n  [SET_STYLE]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    styles: action.styles,\r\n  }),\r\n}\r\n\r\nexport const reducer = (\r\n  state: ModalContextStateT = initialState,\r\n  action: any,\r\n) => {\r\n  const coreFunction = core[action.type]\r\n  return coreFunction ? coreFunction(state, action) : state\r\n}\r\n","import React, { useContext, useReducer, useMemo, CSSProperties } from 'react'\r\nimport Modal from 'react-modal'\r\nimport { actions, reducer, initialState, ModalContextStateT } from './reducer'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ModalContextT {\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => void\r\n  close: (payload?: any) => void\r\n  setPayload: (payload: any) => void\r\n  setBlocking: (blocking: boolean) => void\r\n  setContents: (contents: JSX.Element) => void\r\n  setCallback: (callback: (payload?: any) => void) => void\r\n  setStyles: (styles: ModalStylesT) => void\r\n}\r\nconst defaultContext: ModalContextT = {\r\n  open: () => null,\r\n  close: () => null,\r\n  setBlocking: () => null,\r\n  setPayload: () => null,\r\n  setContents: () => null,\r\n  setCallback: () => null,\r\n  setStyles: () => null,\r\n}\r\nexport const ModalContext = React.createContext<ModalContextT>(defaultContext)\r\nexport const useModalContext = () => useContext(ModalContext)\r\n\r\nexport interface ModalStylesT {\r\n  modal?: CSSProperties\r\n  overlay?: CSSProperties\r\n}\r\n\r\nconst getContextValue = (\r\n  state: ModalContextStateT,\r\n  dispatch: React.Dispatch<any>,\r\n) => ({\r\n  isOpen: state.isOpen,\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => {\r\n    dispatch(actions.open(contents, styles, blocking, callback))\r\n  },\r\n  close: (payload?: any) => {\r\n    if (state.callback) state.callback(payload || state.payload)\r\n    dispatch(actions.close())\r\n  },\r\n  setPayload: (payload: any) => dispatch(actions.setPayload(payload)),\r\n  setContents: (contents: JSX.Element) =>\r\n    dispatch(actions.setContents(contents)),\r\n  setCallback: (callback: (payload?: any) => void) =>\r\n    dispatch(actions.setCallback(callback)),\r\n  setBlocking: (blocking: boolean) => dispatch(actions.setBlocking(blocking)),\r\n  setStyles: (styles: ModalStylesT) => dispatch(actions.setStyles(styles)),\r\n})\r\nModal.setAppElement('#root')\r\nexport interface ModalContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const ModalContextProvider = (props: ModalContextProviderPropsT) => {\r\n  const { children } = props\r\n  const reducerValue = useReducer(reducer, initialState)\r\n  const [state] = reducerValue\r\n  const context = useMemo(() => getContextValue(...reducerValue), [\r\n    reducerValue,\r\n  ])\r\n\r\n  return (\r\n    <ModalContext.Provider value={context}>\r\n      {children}\r\n      <Modal\r\n        isOpen={state.isOpen}\r\n        onRequestClose={() => {\r\n          if (!state.blocking) context.close()\r\n        }}\r\n        style={{\r\n          content: {\r\n            backgroundColor: Theme.darkBgColor,\r\n            color: 'white',\r\n            width: 400,\r\n            margin: '0 auto',\r\n            bottom: 'unset',\r\n            borderColor: Theme.lightBgColor,\r\n            ...state.styles.modal,\r\n          },\r\n          overlay: {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n            zIndex: 900,\r\n            ...state.styles.overlay,\r\n          },\r\n        }}\r\n      >\r\n        {state.contents || <div />}\r\n      </Modal>\r\n    </ModalContext.Provider>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport interface FlexContainerPropsT {\r\n  $direction?: 'row' | 'column' | 'column-reverse'\r\n  $full?: boolean\r\n  $center?: boolean\r\n}\r\nexport const FlexContainer = styled('div', (props: FlexContainerPropsT) => ({\r\n  display: 'flex',\r\n  flexDirection: props.$direction || 'row',\r\n  flex: props.$full ? 1 : undefined,\r\n  justifyContent: props.$center ? 'center' : undefined,\r\n}))\r\nexport const FullContainer = styled('div', () => ({\r\n  flex: 1,\r\n}))\r\n","import React from 'react'\r\nimport { styled, withStyle } from 'styletron-react'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { Theme } from '../theme'\r\n\r\nexport interface ButtonPropsT {\r\n  $direction?: 'up' | 'down'\r\n}\r\nexport const Button = styled('button', (props: ButtonPropsT) => {\r\n  return {\r\n    cursor: 'pointer',\r\n    background: Theme.mediumBgColor,\r\n    boxShadow: 'inset 0px 0px 3px black',\r\n    textShadow: '0px 1px 3px black',\r\n    border: '1px solid rgba(255,255,255,0.2)',\r\n    color: 'rgba(255,255,255,1)',\r\n    ':hover': {\r\n      border: '1px solid rgba(255,255,255,0.4)',\r\n    },\r\n    ':active': {\r\n      outline: 'none',\r\n      border: '1px solid rgba(255,255,255,0.7)',\r\n    },\r\n    ':focus': {\r\n      outline: 'none',\r\n    },\r\n    padding: '10px 30px',\r\n    userSelect: 'none',\r\n  }\r\n})\r\n\r\nexport const RedButton = withStyle(Button, (props: ButtonPropsT) => {\r\n  return {\r\n    // fontFamily: Theme.titleFont,\r\n    fontWeight: 'bold',\r\n    background:\r\n      'linear-gradient(0deg, rgba(157,30,30,1) 0%, rgba(110,23,23,1) 100%)',\r\n  }\r\n})\r\n\r\nexport const ConfirmButton = withStyle(Button, (props: ButtonPropsT) => {\r\n  const { $direction } = props\r\n  return {\r\n    // background: 'linear-gradient(0deg, rgba(157,0,0,1) 0%, rgba(110,0,0,1) 100%)',\r\n    // fontWeight: 'bold',\r\n    borderTop: $direction === 'down' ? 'none' : undefined,\r\n    borderBottom: $direction === 'up' ? 'none' : undefined,\r\n    padding: '10px 30px',\r\n    boxShadow: 'inset 0px 2px 8px black',\r\n    ':hover': {\r\n      borderTop: $direction === 'down' ? 'none' : undefined,\r\n      borderBottom: $direction === 'up' ? 'none' : undefined,\r\n    },\r\n    animationDirection: '1s',\r\n    animationIterationCount: 'infinite',\r\n    animationName: `\r\n      from: {\r\n        background: 'rgba(255,255,255,0.4)',\r\n      },\r\n\r\n      to: {\r\n        background: 'rgba(255,255,255,1)',\r\n      },\r\n    `,\r\n  }\r\n})\r\n\r\nexport const ConfirmButton2 = (props: any) => {\r\n  const styles = useSpring({\r\n    from: {\r\n      border: '1px solid rgba(255,255,255,0)',\r\n    },\r\n    to: async (next: any) => {\r\n      while (1) {\r\n        await next({\r\n          border: '1px solid rgba(255,255,255,0)',\r\n        })\r\n        await next({ border: '1px solid rgba(255,255,255,1)' })\r\n      }\r\n    },\r\n  })\r\n  return (\r\n    <animated.div style={styles}>\r\n      <ConfirmButton style={{ border: 'none' }}>{props.children}</ConfirmButton>\r\n    </animated.div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nexport interface IconPropsT {\r\n  src: string\r\n  size: number\r\n  fill?: string\r\n  style?: React.CSSProperties\r\n  shadow?: boolean\r\n  onClick?: () => void\r\n}\r\nexport const Icon = ({\r\n  src,\r\n  size,\r\n  style = {},\r\n  fill = 'white',\r\n  shadow,\r\n  onClick,\r\n}: IconPropsT) => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [svg, setSvg] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (src) {\r\n      fetch(src)\r\n        .then((res) => res.text())\r\n        .then((text) => setSvg(text))\r\n        .then(() => setLoading(false))\r\n    }\r\n  }, [src])\r\n\r\n  return !loading ? (\r\n    <div\r\n      className={`icon ${shadow ? 'shadow' : ''}`}\r\n      onClick={() => {\r\n        if (onClick) onClick()\r\n      }}\r\n      style={{ ...style, height: size, width: size, fill }}\r\n      dangerouslySetInnerHTML={{ __html: svg }}\r\n    />\r\n  ) : (\r\n    <div />\r\n  )\r\n}\r\n\r\nexport const RawIcon = (props: IconPropsT) => {\r\n  const { src, size, style = {}, fill = 'white', shadow, onClick } = props\r\n  const [loading, setLoading] = useState(true)\r\n  const [svg, setSvg] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (src) {\r\n      fetch(src)\r\n        .then((res) => res.text())\r\n        .then((text) => setSvg(text))\r\n        .then(() => setLoading(false))\r\n    }\r\n  }, [src])\r\n\r\n  return <>{loading ? svg : <svg />}</>\r\n}\r\n","import React, { useState, useLayoutEffect } from 'react'\r\nimport { v4 } from 'uuid'\r\n\r\nexport interface HoverChildrenT {\r\n  isHovering: boolean\r\n}\r\nexport interface HoverPropsT {\r\n  delay?: number\r\n  flex?: boolean\r\n  children: (props: HoverChildrenT) => JSX.Element\r\n}\r\nexport const Hover = (props: HoverPropsT) => {\r\n  const { delay = 500, flex, children } = props\r\n  const [internalHovering, setInternalHovering] = useState<boolean>(false)\r\n  const [isHovering, setIsHovering] = useState<boolean>(false)\r\n  const [guid, setGuid] = useState<string>(v4())\r\n  useLayoutEffect(() => {\r\n    const action = async () => {\r\n      if (internalHovering) {\r\n        setTimeout(() => {\r\n          setGuid(v4())\r\n        }, delay)\r\n      }\r\n    }\r\n    action()\r\n  }, [internalHovering])\r\n  useLayoutEffect(() => {\r\n    if (internalHovering) {\r\n      setIsHovering(true)\r\n    }\r\n  }, [guid])\r\n  const onMouseEnter = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(true)\r\n  }\r\n  const onMouseLeave = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(false)\r\n    setIsHovering(false)\r\n  }\r\n  return (\r\n    <div\r\n      style={{ display: flex ? 'flex' : 'block', flex: flex ? 1 : undefined }}\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n    >\r\n      {children({ isHovering })}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useRef } from 'react'\r\nimport BaseTooltip, { TooltipProps } from 'react-tooltip-lite'\r\nimport { Hover } from '../Hover'\r\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\r\n\r\nexport interface ClickToolTipChildrenT {\r\n  onClick: (value?: boolean) => void\r\n  ref: React.MutableRefObject<HTMLElement | undefined>\r\n}\r\ninterface PropsT extends TooltipProps {\r\n  children: JSX.Element | ((props: ClickToolTipChildrenT) => JSX.Element)\r\n  content: JSX.Element | ((props: ClickToolTipChildrenT) => JSX.Element)\r\n  flex?: boolean\r\n}\r\nexport const Tooltip = (props: PropsT) => {\r\n  const { ...rest } = props\r\n  return (\r\n    <BaseTooltip\r\n      direction='up'\r\n      tagName='div'\r\n      padding='0'\r\n      arrow={false}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nexport const HoverToolTip = (props: PropsT) => {\r\n  return (\r\n    <Hover flex={props.flex}>\r\n      {({ isHovering }) => <Tooltip {...props} isOpen={isHovering} />}\r\n    </Hover>\r\n  )\r\n}\r\n\r\nexport const ClickToolTip = (props: PropsT) => {\r\n  const { children, content, ...rest } = props\r\n  const [isOpen, setIsOpen] = useState<boolean>(false)\r\n  const ref = useRef<HTMLElement>()\r\n  useOnClickOutside(ref, () => {\r\n    setIsOpen(false)\r\n  })\r\n  if (typeof children !== 'function') return null\r\n  if (typeof content !== 'function') return null\r\n  const p = {\r\n    onClick: (value?: boolean) => {\r\n      setIsOpen((v) => (value !== undefined ? value : !v))\r\n    },\r\n    ref,\r\n  }\r\n  return (\r\n    <Tooltip content={content(p)} {...rest} isOpen={isOpen}>\r\n      {children(p)}\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport const useOnClickOutside = (\r\n  ref: React.MutableRefObject<HTMLElement | undefined>,\r\n  handler: Function,\r\n) => {\r\n  useEffect(() => {\r\n    const listener = (event: any) => {\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return\r\n      }\r\n\r\n      setTimeout(() => handler(event), 150)\r\n    }\r\n\r\n    document.addEventListener('mousedown', listener)\r\n    document.addEventListener('touchstart', listener)\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', listener)\r\n      document.removeEventListener('touchstart', listener)\r\n    }\r\n  }, [ref, handler])\r\n}\r\n","import React from 'react'\r\nimport { Hover } from '../components/Hover'\r\nimport { Theme } from '../theme'\r\n\r\nexport interface BoxContainerPropsT extends React.HTMLProps<HTMLDivElement> {\r\n  substyle?: React.CSSProperties\r\n  tag?: any\r\n  to?: string\r\n  dark?: boolean\r\n}\r\nexport const BoxContainer = (props: BoxContainerPropsT) => {\r\n  const {\r\n    style = {},\r\n    substyle = {},\r\n    children,\r\n    dark,\r\n    tag: Element = 'div',\r\n    ...rest\r\n  } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        border: '1px solid #000',\r\n        display: 'flex',\r\n        boxSizing: 'border-box',\r\n        ...style,\r\n      }}\r\n    >\r\n      <Element\r\n        style={{\r\n          border: substyle.border || `1px solid ${Theme.lightBgColor}`,\r\n          background: dark\r\n            ? Theme.darkBgColor\r\n            : `linear-gradient(0deg, ${Theme.mediumBgColor} 0%, rgba(42,42,44) 100%)`,\r\n          padding: 10,\r\n          color: '#ccc',\r\n          flex: 1,\r\n          boxShadow: 'inset 0px 0px 2px black',\r\n          ...substyle,\r\n        }}\r\n        {...rest}\r\n      >\r\n        {children}\r\n      </Element>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const SmallBox = (props: BoxContainerPropsT) => (\r\n  <BoxContainer\r\n    {...props}\r\n    style={{\r\n      height: 40,\r\n      width: 40,\r\n      ...props.style,\r\n    }}\r\n    substyle={{\r\n      display: 'flex',\r\n      padding: 0,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      background: Theme.darkBgColor,\r\n      ...props.substyle,\r\n    }}\r\n  >\r\n    {props.children}\r\n  </BoxContainer>\r\n)\r\n\r\nexport const BoxButton = (props: BoxContainerPropsT) => {\r\n  return (\r\n    <Hover delay={0}>\r\n      {({ isHovering }) => (\r\n        <BoxContainer\r\n          {...props}\r\n          tag='button'\r\n          style={{\r\n            margin: 0,\r\n            ...(props.style || {}),\r\n          }}\r\n          substyle={{\r\n            borderColor:\r\n              isHovering && !props.disabled ? '#999' : Theme.lightBgColor,\r\n            padding: '4px',\r\n            cursor: props.disabled ? 'default' : 'pointer',\r\n            background: props.disabled ? '#444' : Theme.darkBgColor,\r\n            boxShadow: props.disabled ? 'none' : undefined,\r\n            ...(props.substyle || {}),\r\n          }}\r\n        />\r\n      )}\r\n    </Hover>\r\n  )\r\n}\r\n","import Shot from './svg/lorc/high-shot.svg'\r\nimport Headshot from './svg/delapouite/shield-impact.svg'\r\nimport PinDown from './svg/lorc/energy-arrow.svg'\r\n\r\nimport Arcane from './svg/lorc/fire-zone.svg'\r\nimport Blast from './svg/lorc/magic-swirl.svg'\r\nimport Nova from './svg/lorc/heavy-timer.svg'\r\nimport TimeJump from './svg/delapouite/extra-time.svg'\r\nimport Enflame from './svg/sbed/lucifer-cannon.svg'\r\nimport Engulf from './svg/delapouite/firewall.svg'\r\n\r\nimport Smash from './svg/lorc/flat-hammer.svg'\r\nimport Shockwave from './svg/lorc/hammer-drop.svg'\r\nimport Thrust from './svg/lorc/scythe.svg'\r\nimport Chop from './svg/lorc/battered-axe.svg'\r\nimport Strike from './svg/lorc/plain-dagger.svg'\r\nimport Stab from './svg/lorc/knife-thrust.svg'\r\nimport Cleave from './svg/lorc/pointy-sword.svg'\r\nimport AxeSpin from './svg/lorc/axe-swing.svg'\r\nimport Slice from './svg/lorc/saber-slash.svg'\r\nimport Lunge from './svg/lorc/wave-strike.svg'\r\nimport Slash from './svg/lorc/sparkling-sabre.svg'\r\n\r\nimport Taunt from './svg/lorc/bordered-shield.svg'\r\n\r\nimport Ring from './svg/lorc/ringing-bell.svg'\r\nimport Reverberate from './svg/lorc/resonance.svg'\r\nimport Protect from './svg/lorc/shieldcomb.svg'\r\nimport Rush from './svg/lorc/sprint.svg'\r\n\r\nimport Fire from './svg/lorc/gunshot.svg'\r\nimport Snipe from './svg/delapouite/crosshair.svg'\r\nimport FanFire from './svg/delapouite/bullet-impacts.svg'\r\n\r\nimport Reset from './svg/delapouite/backward-time.svg'\r\nimport Slow from './svg/lorc/snail.svg'\r\nimport SpreadShot from './svg/lorc/double-shot.svg'\r\n\r\nimport Heal from './svg/sbed/health-normal.svg'\r\nimport Bless from './svg/lorc/embrassed-energy.svg'\r\nimport PoisonKnife from './svg/lorc/bone-knife.svg'\r\nimport Firebomb from './svg/lorc/molotov.svg'\r\n\r\nimport Restore from './svg/lorc/life-support.svg'\r\nimport EvadeUp from './svg/lorc/dodging.svg'\r\n\r\nimport ArmorUp from './svg/delapouite/armor-upgrade.svg'\r\nimport ArmorDown from './svg/delapouite/armor-downgrade.svg'\r\nimport Punch from './svg/lorc/punch.svg'\r\n\r\nimport Stun from './svg/lorc/ubisoft-sun.svg'\r\n\r\nimport AttackUp from './svg/lorc/all-for-one.svg'\r\nimport CurePotion from './svg/lorc/drink-me.svg'\r\n\r\nexport const SKILL_ICONS: Record<string, string> = {\r\n  Punch: Punch,\r\n\r\n  Shot: Shot,\r\n  Headshot: Headshot,\r\n  'Pin Down': PinDown,\r\n  Flurry: SpreadShot,\r\n\r\n  Arcane: Arcane,\r\n  Nova: Nova,\r\n  Blast: Blast,\r\n  'Time Jump': TimeJump,\r\n  Enflame: Enflame,\r\n  Engulf: Engulf,\r\n\r\n  Ring: Ring,\r\n  Reverberate: Reverberate,\r\n\r\n  Smash: Smash,\r\n  Strike: Strike,\r\n  Swing: Chop,\r\n  Chop: Chop,\r\n  Thrust: Thrust,\r\n  Earthquake: Shockwave,\r\n  Ripple: Shockwave,\r\n  Crush: Shockwave,\r\n  'Axe Spin': AxeSpin,\r\n  Cleave: Cleave,\r\n  Slash: Slash,\r\n  Lunge: Lunge,\r\n  Stab: Stab,\r\n  Slice: Stab,\r\n  Swipe: Slice,\r\n\r\n  Fire: Fire,\r\n  Snipe: Snipe,\r\n  'Fan Fire': FanFire,\r\n\r\n  Stun: Stun,\r\n  Reset: Reset,\r\n  Taunt: Taunt,\r\n  Slow: Slow,\r\n  Protect: Protect,\r\n\r\n  Heal: Heal,\r\n  'Remove Curses': Bless,\r\n  'Poison Knife': PoisonKnife,\r\n  Firebomb: Firebomb,\r\n  'Cure Potion': CurePotion,\r\n  Restore: Restore,\r\n  Rush: Rush,\r\n  Vanish: EvadeUp,\r\n  'Evade Up': EvadeUp,\r\n  'Armor Up': ArmorUp,\r\n  'Attack Up': AttackUp,\r\n  'Armor Down': ArmorDown,\r\n  'Beast Drug': AttackUp,\r\n}\r\n","import Stunned from './svg/lorc/star-swirl.svg'\r\nimport Targeted from './svg/sbed/targeted.svg'\r\nimport Evasive from './svg/lorc/dodging.svg'\r\nimport SpeedDown from './svg/delapouite/sticky-boot.svg'\r\nimport Poisoned from './svg/lorc/biohazard.svg'\r\nimport Burning from './svg/carl-olsen/flame.svg'\r\nimport Bleeding from './svg/lorc/bleeding-wound.svg'\r\nimport Frozen from './svg/lorc/snowflake-2.svg'\r\nimport ArmorDown from './svg/delapouite/armor-downgrade.svg'\r\nimport ArmorUp from './svg/delapouite/armor-upgrade.svg'\r\nimport ResistanceDown from './svg/lorc/broken-shield.svg'\r\nimport Cursed from './svg/lorc/pentagram-rose.svg'\r\nimport Protected from './svg/lorc/shieldcomb.svg'\r\nimport AttackUp from './svg/lorc/all-for-one.svg'\r\nimport { tStatusType } from '../game/Status/type'\r\n\r\nexport const STATUS_ICONS: Partial<Record<tStatusType, string>> = {\r\n  evasive: Evasive,\r\n  stunned: Stunned,\r\n  targeted: Targeted,\r\n  protected: Protected,\r\n  poisoned: Poisoned,\r\n  burning: Burning,\r\n  bleeding: Bleeding,\r\n  frozen: Frozen,\r\n\r\n  'attack-up': AttackUp,\r\n  'armor-up': ArmorUp,\r\n\r\n  'speed-down': SpeedDown,\r\n  'armor-down': ArmorDown,\r\n  'resistance-down': ResistanceDown,\r\n\r\n  'cursed-agility': Cursed,\r\n  'cursed-charisma': Cursed,\r\n  'cursed-dexterity': Cursed,\r\n  'cursed-intelligence': Cursed,\r\n  'cursed-luck': Cursed,\r\n  'cursed-strength': Cursed,\r\n  'cursed-vigor': Cursed,\r\n}\r\n","import Vigor from './svg/delapouite/heart-beats.svg'\r\nimport Strength from './svg/delapouite/biceps.svg'\r\nimport Brain from './svg/lorc/brain.svg'\r\nimport Hand from './svg/sbed/hand.svg'\r\nimport Masks from './svg/lorc/lyre.svg'\r\nimport Agility from './svg/lorc/sprint.svg'\r\nimport Clover from './svg/lorc/clover.svg'\r\n\r\nimport MagicArmor from './svg/lorc/robe.svg'\r\nimport ClothArmor from './svg/lorc/scale-mail.svg'\r\nimport Armor from './svg/delapouite/chest-armor.svg'\r\nimport Shield from './svg/delapouite/cross-shield.svg'\r\nimport MagicShield from './svg/lorc/lightning-shield.svg'\r\nimport Footwear from './svg/lorc/leather-boot.svg'\r\nimport Hat from './svg/delapouite/robin-hood-hat.svg'\r\nimport MagicHat from './svg/lorc/pointy-hat.svg'\r\nimport Helmet from './svg/lorc/visored-helm.svg'\r\nimport Weapon from './svg/lorc/broadsword.svg'\r\nimport Ring from './svg/delapouite/ring.svg'\r\nimport Pendant from './svg/delapouite/heart-necklace.svg'\r\n\r\nimport Axe from './svg/lorc/battle-axe.svg'\r\nimport Blunt from './svg/lorc/gavel.svg'\r\nimport Bow from './svg/lorc/heavy-arrow.svg'\r\nimport Dagger from './svg/lorc/bowie-knife.svg'\r\nimport Handgun from './svg/skoll/revolver.svg'\r\nimport MagicStaff from './svg/lorc/wizard-staff.svg'\r\nimport Sword from './svg/lorc/broadsword.svg'\r\nimport Scythe from './svg/lorc/scythe.svg'\r\nimport Chime from './svg/lorc/ringing-bell.svg'\r\nimport Greatsword from './svg/lorc/croc-sword.svg'\r\nimport Fist from './svg/skoll/fist.svg'\r\n\r\nimport Godsbeard from './svg/delapouite/herbs-bundle.svg'\r\nimport Lotus from './svg/lorc/lotus-flower.svg'\r\nimport PoisonKnife from './svg/lorc/bone-knife.svg'\r\nimport BeastDrug from './svg/delapouite/medicine-pills.svg'\r\nimport CurePotion from './svg/lorc/drink-me.svg'\r\nimport Firebomb from './svg/lorc/molotov.svg'\r\nimport { tBaseStats } from '../game/Stats/type'\r\nimport { GODSBEARD } from '../game/Consumable/objects/godsbeard'\r\nimport { tArmorResourceType, tArmorType } from '../game/Armor/type'\r\nimport { tWeaponType } from '../game/Weapon/type'\r\nimport { tCharacterClass } from '../game/Character/type'\r\n\r\nimport Executioner from './svg/delapouite/executioner-hood.svg'\r\nimport Hunter from './svg/lorc/cowled.svg'\r\nimport Bard from './svg/delapouite/female-vampire.svg'\r\nimport Scholar from './svg/delapouite/wizard-face.svg'\r\nimport Hobo from './svg/delapouite/perspective-dice-six.svg'\r\nimport Reaper from './svg/delapouite/kenku-head.svg'\r\nimport { CELESTIAL_LOTUS } from '../game/Consumable/objects/celestial_lotus'\r\nimport { POISON_KNIFE } from '../game/Consumable/objects/poison_knife'\r\nimport { BEAST_DRUG } from '../game/Consumable/objects/beast_drug'\r\nimport { CURE_POTION } from '../game/Consumable/objects/curing_potion'\r\nimport { FIREBOMB } from '../game/Consumable/objects/firebomb'\r\n\r\nexport { SKILL_ICONS } from './skills'\r\nexport { STATUS_ICONS } from './status'\r\n\r\nexport const STAT_ICONS: Record<keyof tBaseStats, string> = {\r\n  vigor: Vigor,\r\n  strength: Strength,\r\n  intelligence: Brain,\r\n  dexterity: Hand,\r\n  charisma: Masks,\r\n  agility: Agility,\r\n  luck: Clover,\r\n  evasion: '',\r\n  criticalChance: '',\r\n}\r\n\r\nexport const ARMOR_TYPE_ICONS: Record<tArmorType, string> = {\r\n  'magic-armor': MagicArmor,\r\n  'light-armor': ClothArmor,\r\n  'heavy-armor': Armor,\r\n  shield: Shield,\r\n  ward: MagicShield,\r\n  footwear: Footwear,\r\n  hat: Hat,\r\n  'magic-hat': MagicHat,\r\n  helmet: Helmet,\r\n  pendant: Pendant,\r\n  ring: Ring,\r\n}\r\n\r\nexport const WEAPON_TYPE_ICONS: Record<tWeaponType, string> = {\r\n  enemy: '',\r\n  axe: Axe,\r\n  hammer: Blunt,\r\n  bow: Bow,\r\n  dagger: Dagger,\r\n  chime: Chime,\r\n  pistol: Handgun,\r\n  catalyst: MagicStaff,\r\n  scythe: Scythe,\r\n  sword: Sword,\r\n  greatsword: Greatsword,\r\n  fist: Fist,\r\n}\r\n\r\nexport const RESOURCE_ICONS: Record<tArmorResourceType | 'weapon', string> = {\r\n  weapon: Weapon,\r\n  offhand: Shield,\r\n  body: Armor,\r\n  head: Helmet,\r\n  feet: Footwear,\r\n  pendant: Pendant,\r\n  ring: Ring,\r\n}\r\n\r\nexport const CONSUMABLE_ITEM_ICONS: Record<string, string> = {\r\n  [GODSBEARD().cid]: Godsbeard,\r\n  [CELESTIAL_LOTUS().cid]: Lotus,\r\n  [POISON_KNIFE().cid]: PoisonKnife,\r\n  [BEAST_DRUG().cid]: BeastDrug,\r\n  [CURE_POTION().cid]: CurePotion,\r\n  [FIREBOMB().cid]: Firebomb,\r\n}\r\nexport const CONSUMABLE_ITEM_COLORS: Record<string, string> = {\r\n  [GODSBEARD().cid]: '#84a397',\r\n  [CELESTIAL_LOTUS().cid]: '#7a80a1',\r\n  [POISON_KNIFE().cid]: '#9c6c9e',\r\n  [BEAST_DRUG().cid]: '#b07171',\r\n  [CURE_POTION().cid]: '#8a8248',\r\n  [FIREBOMB().cid]: '#ab8272',\r\n}\r\n\r\nexport const CHARACTER_CLASS_ICONS: Record<tCharacterClass, string> = {\r\n  enemy: '',\r\n  executioner: Executioner,\r\n  patrician: Bard,\r\n  ranger: Hunter,\r\n  reaper: Reaper,\r\n  student: Scholar,\r\n  drifter: Hobo,\r\n}\r\n","import React from 'react'\r\nimport { styled, withWrapper } from 'styletron-react'\r\nimport { HoverToolTip } from '../components/Tooltip'\r\nimport { Theme } from '../theme'\r\n\r\nconst Div = styled('div', {\r\n  transform: 'rotateY(0deg) rotate(-45deg)',\r\n})\r\nexport const Badge = withWrapper(Div, (Element) => (props: any) => {\r\n  const { onClick, $style, ...rest } = props\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      style={{\r\n        position: props.$absolute === false ? 'relative' : 'absolute',\r\n        background: Theme.darkBgColorSolid,\r\n        padding: '4px',\r\n        fontFamily: 'New Rocker',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        boxShadow: '1px 1px 3px black',\r\n        height: props.$size || '20px',\r\n        width: props.$size || '20px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        lineHeight: '20px',\r\n        borderRadius: '30%',\r\n        transform: 'rotateY(0deg) rotate(45deg)',\r\n        textShadow: '1px 1px 3px black',\r\n        color: props.$color || 'white',\r\n        cursor: 'pointer',\r\n        top: props.$top,\r\n        userSelect: 'none',\r\n        bottom: props.$bottom,\r\n        right: props.$right,\r\n        left: props.$left,\r\n        transition: 'all 0.2s',\r\n        zIndex: 4,\r\n        ...($style || {}),\r\n      }}\r\n    >\r\n      <Element {...rest} />\r\n    </div>\r\n  )\r\n})\r\n\r\nexport interface HoverBadgePropsT {\r\n  children: JSX.Element\r\n  content: JSX.Element\r\n  badgeProps: any\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n}\r\nexport const HoverBadge = (props: HoverBadgePropsT) => {\r\n  const { children, content, badgeProps, direction } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        top: badgeProps.$top,\r\n        bottom: badgeProps.$bottom,\r\n        left: badgeProps.$left,\r\n        right: badgeProps.$right,\r\n      }}\r\n    >\r\n      <HoverToolTip\r\n        distance={2}\r\n        direction={direction || 'right'}\r\n        content={content || <div />}\r\n      >\r\n        <Badge\r\n          $absolute={false}\r\n          $size={badgeProps.$size}\r\n          $color={badgeProps.$color}\r\n          $style={badgeProps.style}\r\n        >\r\n          {children}\r\n        </Badge>\r\n      </HoverToolTip>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Badge } from '../../elements/badge'\r\nimport { CheckKVT } from '../RoundResultRenderer'\r\nimport X from '../../icons/svg/lorc/split-cross.svg'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tBaseStats } from '../../game/Stats/type'\r\nimport { tStatusType } from '../../game/Status/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface SkillChecksPropsT {\r\n  stat: keyof tBaseStats\r\n  skill?: tSkill\r\n  rolls?: number\r\n  results?: boolean[]\r\n}\r\nexport const SkillChecks = (props: SkillChecksPropsT) => {\r\n  const { stat, skill, rolls, results = [] } = props\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        justifyContent: 'center',\r\n        padding: '0px 0 24px 0',\r\n      }}\r\n    >\r\n      {Array(skill?.rolls || rolls || 0)\r\n        .fill(null)\r\n        .map((_, i) => (\r\n          <SkillCheck\r\n            key={i}\r\n            skill={skill}\r\n            perfect={\r\n              results.every((r) => r === true) && results.length === rolls\r\n            }\r\n            check={{ label: stat, result: results[i] }}\r\n          />\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface SkillCheckT {\r\n  check: CheckKVT\r\n  size?: number\r\n  iconSize?: number\r\n  padding?: number\r\n  perfect?: boolean\r\n  crit?: boolean\r\n  skill?: tSkill\r\n}\r\nexport const SkillCheck = (props: SkillCheckT) => {\r\n  const {\r\n    check,\r\n    size = 36,\r\n    iconSize,\r\n    padding = 12,\r\n    perfect = false,\r\n    skill,\r\n    crit,\r\n  } = props\r\n  const colors = getPerfectStatusColors(skill?.perfectStatus || [], crit)\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: `0px ${padding}px`,\r\n        opacity: check.result === undefined ? 0.75 : 1,\r\n      }}\r\n    >\r\n      <Badge\r\n        $absolute={false}\r\n        $size={size}\r\n        $style={{\r\n          borderColor: perfect ? colors.border : undefined,\r\n          background: perfect ? colors.background : Theme.darkBgColorSolid,\r\n        }}\r\n      >\r\n        <Icon\r\n          src={STAT_ICONS[check.label as keyof tBaseStats]}\r\n          fill={perfect ? colors.fill : getColor(check.result)}\r\n          size={iconSize || size - 4}\r\n        />\r\n        {check.result === false && (\r\n          <Icon\r\n            src={X}\r\n            shadow\r\n            fill={'lightcoral'}\r\n            size={size - 4}\r\n            style={{ position: 'absolute', top: 0 }}\r\n          />\r\n        )}\r\n      </Badge>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst getColor = (result: boolean | undefined) => {\r\n  if (result === true) return 'white'\r\n  if (result === false) return 'rgba(255,255,255,0.3)'\r\n  return 'rgba(255,255,255,0.3)'\r\n}\r\ninterface SCColorsT {\r\n  border: string\r\n  background: string\r\n  fill: string\r\n}\r\nexport const getPerfectStatusColors = (\r\n  status: tStatusType[],\r\n  crit: boolean = false,\r\n): SCColorsT => {\r\n  if (crit) {\r\n    return {\r\n      border: '#white',\r\n      background: '#00134a',\r\n      fill: '#d9e3ff',\r\n    }\r\n  }\r\n  if (status.includes('burning')) {\r\n    return {\r\n      border: '#ff9100',\r\n      background: '#5c2c00',\r\n      fill: '#d48a46',\r\n    }\r\n  }\r\n  if (status.includes('poisoned')) {\r\n    return {\r\n      border: '#00870f',\r\n      background: '#001202',\r\n      fill: '#888f88',\r\n    }\r\n  }\r\n  if (status.includes('bleeding')) {\r\n    return {\r\n      border: '#ff0000',\r\n      background: '#120000',\r\n      fill: '#d19999',\r\n    }\r\n  }\r\n  if (status.includes('cursed-vigor')) {\r\n    return {\r\n      border: '#6400a3',\r\n      background: '#10001a',\r\n      fill: '#b093c2',\r\n    }\r\n  }\r\n  if (status.includes('frozen')) {\r\n    return {\r\n      border: '#009ac4',\r\n      background: '#00161c',\r\n      fill: '#a5c8d1',\r\n    }\r\n  }\r\n\r\n  return {\r\n    border: '#ffd400',\r\n    background: '#261d00',\r\n    fill: '#ede5be',\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tStats } from '../../game/Stats/type'\r\nimport {\r\n  DEFENSE_BONUS_KEYS,\r\n  STAT_KEY_LABELS,\r\n  DAMAGE_BONUS_KEYS,\r\n  STAT_BONUS_KEYS,\r\n  HEALTH_FOCUS_BONUS_KEYS,\r\n} from '../../game/Stats/constants'\r\nimport { tCharacterTag } from '../../game/Character/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface StatsPreviewPropsT {\r\n  stats: tStats\r\n}\r\n\r\nconst defense_key_colors: any = {\r\n  armor: Theme.physicalColor,\r\n  resistance: Theme.magicColor,\r\n  evasion: Theme.evasionColor,\r\n}\r\n\r\nexport const StatsPreview = (props: StatsPreviewPropsT) => {\r\n  const { stats } = props\r\n  return (\r\n    <FlexContainer $direction='column' style={{ fontSize: 14 }}>\r\n      {DEFENSE_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span\r\n              key={key}\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: defense_key_colors[key],\r\n              }}\r\n            >\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {DAMAGE_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span key={key} style={{ textTransform: 'capitalize' }}>\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {HEALTH_FOCUS_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span key={key} style={{ textTransform: 'capitalize' }}>\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {STAT_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] > 0 && (\r\n            <span\r\n              key={key}\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: Theme.evasionColor,\r\n              }}\r\n            >\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {STAT_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] < 0 && (\r\n            <span\r\n              key={key}\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: 'lightcoral',\r\n              }}\r\n            >\r\n              {stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {(Object.keys(stats.damageModifiers) as tCharacterTag[])\r\n        .filter((tag) => stats.damageModifiers[tag] > 0)\r\n        .map((tag) => (\r\n          <span key={tag}>\r\n            +{Math.floor(stats.damageModifiers[tag] * 100)}% damage against{' '}\r\n            {tag}\r\n          </span>\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { styled } from 'styletron-react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { tItemRarity } from '../../game/Item/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { ARMOR_TYPE_ICONS, WEAPON_TYPE_ICONS } from '../../icons/maps'\r\nimport { Theme } from '../../theme'\r\nimport { Icon } from '../Icon'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { StatsPreview } from '../StatsPreview'\r\nimport Ranged from '../../icons/svg/lorc/high-shot.svg'\r\nimport Melee from '../../icons/svg/lorc/battered-axe.svg'\r\nimport Breakable from '../../icons/svg/lorc/broken-bone.svg'\r\nimport { Button } from '../../elements/button'\r\n\r\nexport const getDamageColor = (weapon: tWeapon) => {\r\n  if (weapon.damage.type === 'physical') return 'lightblue'\r\n  if (weapon.damage.type === 'magic') return 'plum'\r\n  return 'white'\r\n}\r\n\r\nexport interface ItemCardPropsT {\r\n  item: tArmor | tWeapon | tConsumable\r\n  showBuyButton?: boolean\r\n  cost?: number\r\n  buyText?: string\r\n  onBuyClick?: () => void\r\n}\r\n\r\ninterface ItemTitlePropsT {\r\n  $rarity: tItemRarity\r\n}\r\nconst ItemTitle = styled('span', (props: ItemTitlePropsT) => {\r\n  const { $rarity } = props\r\n  return {\r\n    color: ITEM_RARITY_COLORS[$rarity],\r\n    fontFamily: Theme.titleFont,\r\n    fontSize: '18px',\r\n    textShadow: '1px 1px 3px black',\r\n    textTransform: 'capitalize',\r\n  }\r\n})\r\nconst ItemSubtitle = styled('div', {\r\n  color: 'rgba(255,255,255,0.3)',\r\n  display: 'flex',\r\n  width: '100%',\r\n  justifyContent: 'space-between',\r\n  textTransform: 'capitalize',\r\n  fontSize: '13px',\r\n})\r\n\r\nexport const ItemCard = (props: ItemCardPropsT) => {\r\n  const { item, cost, showBuyButton, buyText, onBuyClick } = props\r\n  const isArmor = item.itemType === 'armor'\r\n  const isWeapon = item.itemType === 'weapon'\r\n  const isConsumable = item.itemType === 'consumable'\r\n  const rarityColor = ITEM_RARITY_COLORS[item.rarity]\r\n  const weapon = item as tWeapon\r\n  const armor = item as tArmor\r\n  const consumable = item as tConsumable\r\n  const skill = weapon.skills\r\n    ? weapon.skills[0]\r\n    : armor.skills\r\n    ? armor.skills[0]\r\n    : undefined\r\n  const skills = consumable.skill\r\n    ? [consumable.skill]\r\n    : weapon.skills\r\n    ? weapon.skills\r\n    : armor.skills\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ border: '1px solid black', width: 240, textAlign: 'left' }}\r\n    >\r\n      <BoxContainer\r\n        style={{\r\n          borderWidth: 2,\r\n          borderColor: rarityColor,\r\n        }}\r\n        substyle={{\r\n          border: `1px solid ${Theme.darkBgColorSolid}`,\r\n          background: Theme.otherGrey,\r\n          padding: 0,\r\n          boxShadow: 'none',\r\n        }}\r\n      >\r\n        <FlexContainer $full $direction='column'>\r\n          <FlexContainer\r\n            style={{\r\n              height: 56,\r\n              whiteSpace: 'nowrap',\r\n              alignItems: 'center',\r\n              background: Theme.mediumBgColor,\r\n              padding: '0px 16px 0 8px',\r\n              boxShadow: '0px 2px 3px black',\r\n              marginBottom: 8,\r\n              marginTop: -2,\r\n              marginRight: -1,\r\n              marginLeft: -1,\r\n            }}\r\n          >\r\n            {isWeapon && (\r\n              <Icon\r\n                src={WEAPON_TYPE_ICONS[weapon.type]}\r\n                fill={rarityColor}\r\n                size={32}\r\n                style={{ marginRight: 10 }}\r\n                shadow\r\n              />\r\n            )}\r\n            {isArmor && (\r\n              <Icon\r\n                src={ARMOR_TYPE_ICONS[armor.type]}\r\n                fill={rarityColor}\r\n                size={32}\r\n                style={{ marginRight: 10 }}\r\n                shadow\r\n              />\r\n            )}\r\n            <FlexContainer $direction='column' $full>\r\n              <ItemTitle $rarity={item.rarity}>{item.name}</ItemTitle>\r\n              <ItemSubtitle>\r\n                <span>\r\n                  {item.rarity} {weapon.type}\r\n                </span>\r\n                <span>{weapon.twoHand && '2-hand'}</span>\r\n              </ItemSubtitle>\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n          <FlexContainer $direction='column' style={{ padding: 4 }}>\r\n            {skill && (\r\n              <FlexContainer style={{ marginBottom: 8, padding: 4 }}>\r\n                <FullContainer />\r\n                {Array(skill.rolls)\r\n                  .fill(null)\r\n                  .map((_, i) => (\r\n                    <SkillCheck\r\n                      key={i}\r\n                      check={{ label: weapon.stat, result: true }}\r\n                      size={18}\r\n                      iconSize={18}\r\n                      padding={4}\r\n                      skill={skill}\r\n                    />\r\n                  ))}\r\n                <FullContainer />\r\n              </FlexContainer>\r\n            )}\r\n            <BoxContainer\r\n              dark\r\n              substyle={{\r\n                minHeight: 120,\r\n                textAlign: 'left',\r\n              }}\r\n            >\r\n              <FlexContainer>\r\n                <FlexContainer $full $direction='column'>\r\n                  {weapon.damage && (\r\n                    <FlexContainer\r\n                      style={{\r\n                        height: 28,\r\n                        marginBottom: 4,\r\n                        alignItems: 'flex-end',\r\n                      }}\r\n                    >\r\n                      <span\r\n                        style={{\r\n                          color: getDamageColor(weapon),\r\n                          fontWeight: 'bolder',\r\n                          marginRight: 8,\r\n                          fontSize: 32,\r\n                          lineHeight: '28px',\r\n                        }}\r\n                      >\r\n                        {weapon.damage.value}\r\n                      </span>\r\n                      <span\r\n                        style={{\r\n                          textTransform: 'capitalize',\r\n                          color: 'rgba(255,255,255,0.3)',\r\n                        }}\r\n                      >\r\n                        {weapon.damage.type} Damage\r\n                      </span>\r\n                    </FlexContainer>\r\n                  )}\r\n                  {skills && (\r\n                    <span\r\n                      style={{\r\n                        color: 'plum',\r\n                        fontSize: 16,\r\n                        marginBottom: 4,\r\n                      }}\r\n                    >\r\n                      {skills.map((skill, i) => (\r\n                        <span key={i}>\r\n                          {i > 0 ? ', ' : ''}\r\n                          {skill.name}\r\n                        </span>\r\n                      ))}\r\n                    </span>\r\n                  )}\r\n                  <div style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n                    {weapon.stats && <StatsPreview stats={weapon.stats} />}\r\n                    {weapon.immunities && (\r\n                      <FlexContainer\r\n                        $direction='column'\r\n                        style={{ fontSize: 14 }}\r\n                      >\r\n                        {weapon.immunities.some((s) => s.includes('cursed')) &&\r\n                          'Cursed Immunity'}\r\n                        {weapon.immunities\r\n                          .filter((s) => !s.includes('cursed'))\r\n                          .map((status) => (\r\n                            <span\r\n                              style={{\r\n                                textTransform: 'capitalize',\r\n                                fontSize: 14,\r\n                              }}\r\n                            >\r\n                              {status} immunity\r\n                            </span>\r\n                          ))}\r\n                      </FlexContainer>\r\n                    )}\r\n                  </div>\r\n                </FlexContainer>\r\n                {isWeapon && (\r\n                  <FlexContainer\r\n                    $direction='column'\r\n                    style={{ alignItems: 'center' }}\r\n                  >\r\n                    <Icon\r\n                      src={weapon.damage.range === 'melee' ? Melee : Ranged}\r\n                      size={16}\r\n                      fill='rgba(255,255,255,0.3)'\r\n                      style={{ marginBottom: 4 }}\r\n                    />\r\n\r\n                    {weapon.breakable && (\r\n                      <Icon src={Breakable} size={16} fill='gold' />\r\n                    )}\r\n                  </FlexContainer>\r\n                )}\r\n              </FlexContainer>\r\n            </BoxContainer>\r\n            {showBuyButton && (\r\n              <FlexContainer style={{ justifyContent: 'center', marginTop: 4 }}>\r\n                <Button\r\n                  onClick={onBuyClick}\r\n                  style={{ padding: '8px 16px', width: '100%' }}\r\n                >\r\n                  {buyText || `Buy (${cost || 0})`}\r\n                </Button>\r\n              </FlexContainer>\r\n            )}\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </BoxContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport Gold from '../../icons/svg/delapouite/coins.svg'\r\nimport XP from '../../icons/svg/lorc/laurel-crown.svg'\r\nimport { Icon } from '../Icon'\r\nimport { tEncounterReward } from '../../game/Encounter/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { ItemCard } from '../ItemCard'\r\nimport { Theme } from '../../theme'\r\n\r\nconst getItem = (\r\n  character: tProcessedCharacter,\r\n  item: tWeapon | tArmor,\r\n): tWeapon | tArmor | undefined => {\r\n  if (item.itemType === 'weapon') {\r\n    return character.weapon\r\n  } else {\r\n    const armor = item as tArmor\r\n    return character.armor.find((a) => a.resource === armor.resource)\r\n  }\r\n}\r\n\r\nexport interface CombatVictoryModalPropsT {\r\n  rewards: tEncounterReward\r\n  title: string\r\n  showOther?: boolean\r\n  onEquipClick: (characterId: string, item: tWeapon | tArmor) => void\r\n  onNextClick: () => void\r\n}\r\n\r\nexport const CombatVictoryModalPure = (props: CombatVictoryModalPropsT) => {\r\n  const { rewards, title, showOther = true, onEquipClick, onNextClick } = props\r\n  const { party } = usePartyContext()\r\n  const [items, setItems] = useState(rewards.items)\r\n  const first = items[0]\r\n\r\n  const next = () => {\r\n    if (\r\n      (items.length === 1 && rewards.items.length > 0) ||\r\n      rewards.items.length === 0\r\n    ) {\r\n      onNextClick()\r\n    } else {\r\n      setItems((i) => {\r\n        const [first, ...rest] = i\r\n        return rest\r\n      })\r\n    }\r\n  }\r\n\r\n  const equip = (characterId: string) => {\r\n    if (first) {\r\n      onEquipClick(characterId, first as tArmor | tWeapon)\r\n      next()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ textAlign: 'center', minHeight: 420 }}\r\n    >\r\n      <h1 style={{ fontFamily: Theme.titleFont, textAlign: 'center' }}>\r\n        {title}\r\n      </h1>\r\n      <FlexContainer $direction='column' style={{ color: 'white' }}>\r\n        {showOther && (\r\n          <>\r\n            <FlexContainer style={{ marginBottom: 16 }}>\r\n              <FlexContainer>\r\n                <Icon src={Gold} size={18} style={{ marginRight: 8 }} />\r\n                <span>{rewards.gold} Gold</span>\r\n              </FlexContainer>\r\n              <FullContainer />\r\n              <FlexContainer>\r\n                <Icon src={XP} size={18} style={{ marginRight: 8 }} />\r\n                <span>{rewards.xp} XP</span>\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          </>\r\n        )}\r\n        {first && (\r\n          <FlexContainer $direction='column'>\r\n            <FlexContainer style={{ marginBottom: 16 }}>\r\n              <FullContainer />\r\n              <FlexContainer $direction='column'>\r\n                <ItemCard item={first} />\r\n                <span\r\n                  style={{\r\n                    marginTop: 8,\r\n                    color: 'rgba(255,255,255,0.3)',\r\n                    fontWeight: 'bold',\r\n                    fontSize: 12,\r\n                  }}\r\n                >\r\n                  1 of {items.length}\r\n                </span>\r\n              </FlexContainer>\r\n              <FullContainer />\r\n            </FlexContainer>\r\n            {(first.itemType === 'armor' || first.itemType === 'weapon') && (\r\n              <FlexContainer\r\n                style={{ marginBottom: 8, justifyContent: 'center' }}\r\n              >\r\n                {party.characters.map((character) => (\r\n                  <HoverToolTip\r\n                    key={character.id}\r\n                    direction='down'\r\n                    content={\r\n                      <>\r\n                        {getItem(character, first as tWeapon | tArmor) && (\r\n                          <ItemCard\r\n                            item={\r\n                              getItem(character, first as tWeapon | tArmor) as\r\n                                | tWeapon\r\n                                | tArmor\r\n                            }\r\n                          />\r\n                        )}\r\n                      </>\r\n                    }\r\n                  >\r\n                    <Button\r\n                      style={{ padding: 8 }}\r\n                      onClick={() => equip(character.id)}\r\n                    >\r\n                      Equip to {character.name}\r\n                    </Button>\r\n                  </HoverToolTip>\r\n                ))}\r\n              </FlexContainer>\r\n            )}\r\n          </FlexContainer>\r\n        )}\r\n      </FlexContainer>\r\n      <FullContainer />\r\n      <Button\r\n        onClick={() => {\r\n          next()\r\n        }}\r\n      >\r\n        {items.length === 0 ? 'Close' : 'Next'}\r\n      </Button>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useMemo, useEffect } from 'react'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { consolidateRewards } from '../../game/Other/util'\r\nimport { commitRewards } from '../../game/Party/util'\r\nimport { tEncounterReward } from '../../game/Encounter/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { CombatVictoryModalPure } from './pure'\r\n\r\nexport interface CombatVictoryModalPropsT {\r\n  rewards: tEncounterReward[]\r\n}\r\n\r\nexport const CombatVictoryModal = (props: CombatVictoryModalPropsT) => {\r\n  const { rewards } = props\r\n  const { rawParty, party, updateParty, equipItem } = usePartyContext()\r\n  const { completeCurrent } = useGameStateContext()\r\n  const { close } = useModalContext()\r\n  const consolidatedRewards = useMemo(() => consolidateRewards(rewards), [\r\n    rewards,\r\n  ])\r\n\r\n  const next = () => {\r\n    close()\r\n    completeCurrent()\r\n  }\r\n  const equip = (characterId: string, item: tArmor | tWeapon) => {\r\n    equipItem(characterId, item)\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateParty(commitRewards(rawParty, consolidatedRewards))\r\n  }, [])\r\n\r\n  return (\r\n    <CombatVictoryModalPure\r\n      rewards={consolidatedRewards}\r\n      title='You Win!'\r\n      onEquipClick={equip}\r\n      onNextClick={next}\r\n    />\r\n  )\r\n}\r\n","import { tEncounterReward } from '../Encounter/type'\r\nimport { ZERO_REWARD } from '../Encounter/constants'\r\n\r\nexport const consolidateRewards = (\r\n  rewards: tEncounterReward[],\r\n): tEncounterReward => {\r\n  return rewards.reduce((res, reward) => {\r\n    return {\r\n      gold: res.gold + reward.gold,\r\n      xp: res.xp + reward.xp,\r\n      items: [...res.items, ...reward.items],\r\n      status: [...res.status, ...reward.status],\r\n      immunities: [...res.immunities, ...reward.immunities],\r\n    }\r\n  }, ZERO_REWARD)\r\n}\r\n","import { tQueue } from './type'\r\nimport { tProcessedCharacter, tCharacter } from '../Character/type'\r\nimport { processCharacter } from '../Character/util'\r\n\r\nconst AGILITY_OFFSET = 120\r\n\r\nexport const makeCombatQueue = (characters: tProcessedCharacter[]): tQueue => {\r\n  const sortedCharacters = characters.sort(\r\n    (a, b) => b.stats.agility - a.stats.agility,\r\n  )\r\n  return validateQueue(\r\n    sortedCharacters.reduce(\r\n      (r, c, i) => ({\r\n        ...r,\r\n        [c.id]: AGILITY_OFFSET / 2 - c.stats.agility,\r\n      }),\r\n      {},\r\n    ),\r\n    characters,\r\n  )\r\n}\r\n\r\nexport const getMax = (queue: tQueue): number => {\r\n  return Object.keys(queue).reduce((r: number, id: string) => {\r\n    if (r < queue[id]) return queue[id]\r\n    return r\r\n  }, Number.NEGATIVE_INFINITY)\r\n}\r\n\r\nexport const getMin = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): number => {\r\n  if (characters.length === 0) throw new Error('track this call down')\r\n  return Object.keys(queue).reduce((min: number, id: string) => {\r\n    if (queue[id] < min) {\r\n      const c = characters.find((c) => c.id === id) as tProcessedCharacter\r\n      if (c.stats.queueConsolidationModifier > 0) {\r\n        return queue[id]\r\n      } else {\r\n        return min\r\n      }\r\n    }\r\n    return min\r\n  }, Number.POSITIVE_INFINITY)\r\n}\r\n\r\nexport const consolidateQueue = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  let min = getMin(queue, characters)\r\n  return Object.keys(queue).reduce((r, id) => {\r\n    const character = characters.find((c) => c.id === id) as tCharacter\r\n    const offset = character.stats.queueConsolidationModifier * min\r\n    return {\r\n      ...r,\r\n      [id]: queue[id] - offset,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const shiftQueue = (\r\n  queue: tQueue,\r\n  character: tProcessedCharacter,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  const ret = consolidateQueue(\r\n    {\r\n      ...queue,\r\n      [character.id]: AGILITY_OFFSET - character.stats.agility,\r\n    },\r\n    characters,\r\n  )\r\n  return ret\r\n}\r\n\r\nexport const getFirst = (queue: tQueue): string => {\r\n  let min = Number.POSITIVE_INFINITY\r\n  let key = Object.keys(queue)[0]\r\n  Object.keys(queue).forEach((id) => {\r\n    if (min > queue[id]) {\r\n      min = queue[id]\r\n      key = id\r\n    }\r\n  })\r\n  return key\r\n}\r\n\r\nexport const validateQueue = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  return consolidateQueue(\r\n    characters.reduce((r, c) => {\r\n      return c.health <= 0 ? r : { ...r, [c.id]: queue[c.id] }\r\n    }, {}),\r\n    characters,\r\n  )\r\n}\r\n\r\nexport const getSortedIds = (queue: tQueue): string[] => {\r\n  return Object.keys(queue).sort((a, b) => queue[a] - queue[b])\r\n}\r\n\r\nexport const commitQueueUpdates = (\r\n  queue: tQueue,\r\n  source: tProcessedCharacter,\r\n  characters: tCharacter[],\r\n): tQueue => {\r\n  const pcs = characters.map((c) => processCharacter(c))\r\n  const shiftedQueue = shiftQueue(queue, source, pcs)\r\n  const ret = validateQueue(\r\n    Object.keys(shiftedQueue).reduce((q, id) => {\r\n      const character = pcs.find((c) => c.id === id)\r\n      return {\r\n        ...q,\r\n        [id]:\r\n          character?.stats?.queueValueSet !== undefined\r\n            ? character?.stats?.queueValueSet\r\n            : shiftedQueue[id],\r\n      }\r\n    }, {}),\r\n    pcs,\r\n  )\r\n  return ret\r\n}\r\n","import { tStatusType } from '../Status/type'\r\n\r\nexport type tPerfectKey = tStatusType | 'splash' | 'pierce' | 'heal'\r\nexport const PERFECT_DISPLAY_INFO: Partial<Record<tPerfectKey, string>> = {\r\n  splash: 'Splash Damage',\r\n  pierce: 'Ignore Resistances',\r\n  bleeding: 'Bleed',\r\n  burning: 'Burn',\r\n  frozen: 'Freeze',\r\n  poisoned: 'Poison',\r\n  targeted: 'Taunt Enemies',\r\n  stunned: 'Stun',\r\n  evasive: 'Become Evasive',\r\n  heal: 'Heal',\r\n  protected: 'Protect',\r\n  'attack-up': 'Attack Up',\r\n  'speed-down': 'Speed Down',\r\n  rushed: 'Rush Character',\r\n  reset: 'Reset Character',\r\n  cure: 'Cure Character',\r\n}\r\n","import { tProcessedCharacter } from '../Character/type'\r\nimport {\r\n  tSkill,\r\n  tSourceSkillResult,\r\n  tTargetSkillResult,\r\n  tSkillResult,\r\n  tSkillTarget,\r\n  tSkillTargetType,\r\n} from './type'\r\nimport { resolveCheck } from '../Roll/util'\r\nimport {\r\n  getRawDamage,\r\n  getReflectedDamage,\r\n  isCharacter,\r\n  hasStatus,\r\n  getDamageResistance,\r\n} from '../Character/util'\r\nimport { tProcessedParty } from '../Party/type'\r\nimport { isParty } from '../Party/util'\r\nimport { tDamage } from '../Damage/type'\r\nimport { tPerfectKey, PERFECT_DISPLAY_INFO } from './constants'\r\nimport { noneg } from '../../util'\r\n\r\nexport const getSourceSkillResult = (\r\n  source: tProcessedCharacter,\r\n  skill: tSkill,\r\n  inspirationUsed: number = 0,\r\n): tSourceSkillResult => {\r\n  const rollResults = Array(skill.rolls)\r\n    .fill(null)\r\n    .map((_, i) =>\r\n      i < inspirationUsed\r\n        ? true\r\n        : resolveCheck(\r\n            source,\r\n            skill.weaponStatOverride || source.weapon.stat,\r\n            skill.offset,\r\n          ),\r\n    )\r\n  const passedCount = rollResults.filter((r) => r).length\r\n  const perfect = passedCount === skill.rolls\r\n  const criticalHitSuccess = resolveCheck(source, 'criticalChance')\r\n  const rollDamageModifier = skill.rolls > 0 ? passedCount / skill.rolls : 1\r\n  const damageModifier =\r\n    source.stats.attackDamageModifier * skill.damageModifier\r\n  const rawDamage = {\r\n    ...source.weapon.damage,\r\n    value: Math.round(\r\n      ((skill.weaponDamageOverride || source.weapon.damage.value) +\r\n        source.stats.attackDamageOffset) *\r\n        damageModifier *\r\n        rollDamageModifier *\r\n        (perfect && criticalHitSuccess ? 1.2 : 1),\r\n    ),\r\n    range: skill.weaponRangeOverride || source.weapon.damage.range,\r\n  }\r\n  return {\r\n    source,\r\n    skill,\r\n    inspirationUsed: inspirationUsed || 0,\r\n    rollResults,\r\n    passedCount,\r\n    perfect,\r\n    accuracySuccess:\r\n      skill.damage && skill.rolls > 0 ? passedCount > 0 : perfect,\r\n    criticalHitSuccess: perfect && criticalHitSuccess,\r\n    weaponDidBreak:\r\n      rollResults.every((r) => r === false) && source.weapon.breakable,\r\n    rawDamage,\r\n    splashDamage: {\r\n      ...source.weapon.damage,\r\n      value:\r\n        perfect && skill.perfectSplash\r\n          ? Math.round(rawDamage.value * skill.splashDamageModifier)\r\n          : 0,\r\n      range: skill.weaponRangeOverride || source.weapon.damage.range,\r\n    },\r\n    ignoreResistance: perfect && skill.perfectPierce,\r\n    addedStatus: perfect ? skill.perfectStatus : [],\r\n  }\r\n}\r\n\r\nexport const getTargetSkillResult = (\r\n  target: tProcessedCharacter,\r\n  sourceResult: tSourceSkillResult,\r\n): tTargetSkillResult => {\r\n  const dodgeResult = resolveCheck(target, 'evasion')\r\n  const dodgeSuccess = hasStatus(target, 'evasive')\r\n    ? !sourceResult.perfect\r\n    : !sourceResult.perfect && dodgeResult\r\n  const damage = getRawDamage(\r\n    sourceResult.source,\r\n    target,\r\n    sourceResult.rawDamage,\r\n  )\r\n  return {\r\n    ...sourceResult,\r\n    target,\r\n    dodgeSuccess,\r\n    totalDamage: {\r\n      ...damage,\r\n      value: dodgeSuccess ? 0 : damage.value,\r\n    },\r\n    reflectedDamage: getReflectedDamage(target, damage),\r\n    loggedDamgge: {\r\n      ...damage,\r\n      value: dodgeSuccess\r\n        ? 0\r\n        : noneg(damage.value - getDamageResistance(target, damage)),\r\n    },\r\n  }\r\n}\r\n\r\nexport const getSkillResult = (\r\n  source: tProcessedCharacter,\r\n  targets: tProcessedCharacter[],\r\n  skill: tSkill,\r\n): tSkillResult => {\r\n  const sourceResult = getSourceSkillResult(source, skill)\r\n  return {\r\n    sourceResult,\r\n    targetResults: targets.map((target) =>\r\n      getTargetSkillResult(target, sourceResult),\r\n    ),\r\n  }\r\n}\r\n\r\nexport const resolveSkillTarget = (\r\n  target: tSkillTarget,\r\n): tProcessedCharacter[] => {\r\n  switch (target.type) {\r\n    case 'single':\r\n      return target.character ? [target.character] : []\r\n    case 'ally':\r\n      return target.character ? [target.character] : []\r\n    case 'self':\r\n      return target.character ? [target.character] : []\r\n    case 'party':\r\n      return target.party?.characters || []\r\n    case 'group':\r\n      return target.party?.characters || []\r\n    default:\r\n      return []\r\n  }\r\n}\r\n\r\nexport const makeSkillTarget = (\r\n  type: tSkillTargetType,\r\n  target: tProcessedCharacter | tProcessedParty,\r\n): tSkillTarget => {\r\n  return {\r\n    type,\r\n    character: isCharacter(target)\r\n      ? (target as tProcessedCharacter)\r\n      : undefined,\r\n    party: isParty(target) ? (target as tProcessedParty) : undefined,\r\n  }\r\n}\r\n\r\nexport const getSkillTargetOptions = (\r\n  source: tProcessedCharacter,\r\n  sourceParty: tProcessedParty,\r\n  targetParty: tProcessedParty,\r\n  skill: tSkill,\r\n): tProcessedCharacter[] | tProcessedParty[] => {\r\n  switch (skill.targetType) {\r\n    case 'single':\r\n      return targetParty.characters.filter((c) => c.health > 0)\r\n    case 'ally':\r\n      return sourceParty.characters.filter((c) => c.health > 0)\r\n    case 'group':\r\n      return [targetParty]\r\n    case 'party':\r\n      return [sourceParty]\r\n    case 'self':\r\n      return [source]\r\n    default:\r\n      return []\r\n  }\r\n}\r\n\r\nexport const getSkillDamage = (\r\n  skill: tSkill,\r\n  source: tProcessedCharacter,\r\n): tDamage => {\r\n  return {\r\n    ...source.weapon.damage,\r\n    value:\r\n      ((skill.weaponDamageOverride || source.weapon.damage.value) +\r\n        source.stats.attackDamageOffset) *\r\n      (skill.damageModifier + source.stats.attackDamageModifier / 100),\r\n  }\r\n}\r\n\r\nexport const getPerfectKeys = (skill: tSkill): tPerfectKey[] => {\r\n  let base: tPerfectKey[] = [...skill.perfectStatus]\r\n  if (skill.perfectSplash) base = [...base, 'splash']\r\n  if (skill.perfectPierce) base = [...base, 'pierce']\r\n  if (skill.healing) base = [...base, 'heal']\r\n  return base\r\n}\r\n\r\nexport const getPerfectText = (\r\n  skill: tSkill,\r\n  character: tProcessedCharacter,\r\n): string => {\r\n  const perfectKeys = getPerfectKeys(skill)\r\n  const rawDamage = getSkillDamage(skill, character)\r\n\r\n  return perfectKeys.reduce((res, key, i) => {\r\n    let pre = `${res}${i > 0 ? ',' : ''}`\r\n    const text = PERFECT_DISPLAY_INFO[key]\r\n    switch (key) {\r\n      case 'splash':\r\n        return `${pre} ${Math.floor(skill.splashDamageModifier * 100)}% ${text}`\r\n      case 'heal':\r\n        return `${pre} ${text} ${character.stats.consumableHealthGainOffset} HP`\r\n      default:\r\n        return `${pre} ${text}`\r\n    }\r\n  }, '')\r\n}\r\n","import { tParty } from '../Party/type'\r\nimport { tCharacter } from '../Character/type'\r\nimport { updateCharacter, getOtherCharacters } from '../Party/util'\r\nimport { tQueue } from '../Queue/type'\r\nimport { tSkillResult, tSkillCommiterResult } from './type'\r\nimport {\r\n  commitDamage,\r\n  addMultipleStatus,\r\n  decrementStatusDurations,\r\n  processCharacter,\r\n  checkStatus,\r\n} from '../Character/util'\r\nimport { noneg } from '../../util/noneg'\r\nimport { commitQueueUpdates } from '../Queue/util'\r\nimport { PLAYER_PARTY_ID } from '../Party/constants'\r\n\r\nconst partyUpdater = (\r\n  party: tParty,\r\n  characterId: string,\r\n  updater: (c: tCharacter) => tCharacter,\r\n): tParty => {\r\n  return updateCharacter(party, characterId, updater)\r\n}\r\n\r\nexport const commitSkillResults = (\r\n  playerParty: tParty,\r\n  enemyParty: tParty,\r\n  queue: tQueue,\r\n) => (result: tSkillResult): tSkillCommiterResult => {\r\n  const { source } = result.sourceResult\r\n  result.targetResults.forEach((targetResult, index) => {\r\n    const { target } = targetResult\r\n    let sourceParty = [playerParty, enemyParty].find(\r\n      (p) => p.id === source.partyId,\r\n    ) as tParty\r\n    let targetParty = [playerParty, enemyParty].find(\r\n      (p) => p.id === target.partyId,\r\n    ) as tParty\r\n    const localUpdate = (\r\n      p: tParty,\r\n      id: string,\r\n      updater: (c: tCharacter) => tCharacter,\r\n    ) => {\r\n      if (p.id === sourceParty.id) {\r\n        sourceParty = partyUpdater(p, id, updater)\r\n        return\r\n      }\r\n      if (p.id === targetParty.id) {\r\n        targetParty = partyUpdater(p, id, updater)\r\n        return\r\n      }\r\n      throw new Error('bad party id')\r\n    }\r\n\r\n    if (index === 0) {\r\n      if (targetResult.weaponDidBreak) {\r\n        localUpdate(sourceParty, source.id, (c) => {\r\n          return {\r\n            ...c,\r\n            weapon: undefined,\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    // commit main damage\r\n    localUpdate(targetParty, target.id, (c) => {\r\n      return commitDamage(\r\n        c,\r\n        targetResult.totalDamage,\r\n        targetResult.ignoreResistance,\r\n      )\r\n    })\r\n\r\n    // commit main status\r\n    localUpdate(targetParty, target.id, (c) => {\r\n      return addMultipleStatus(c, targetResult.addedStatus)\r\n    })\r\n\r\n    // comit main heal\r\n    if (targetResult.skill.healing) {\r\n      localUpdate(targetParty, target.id, (c) => {\r\n        return {\r\n          ...c,\r\n          healthOffset: c.healthOffset - c.stats.consumableHealthGainOffset,\r\n        }\r\n      })\r\n    }\r\n\r\n    // commit splash damage\r\n    if (targetResult.splashDamage.value > 0) {\r\n      getOtherCharacters(targetParty, target.id).forEach((character) => {\r\n        localUpdate(targetParty, character.id, (c) => {\r\n          return commitDamage(c, targetResult.splashDamage, false)\r\n        })\r\n      })\r\n    }\r\n\r\n    // commit reflected damage\r\n    if (targetResult.reflectedDamage.value > 0) {\r\n      localUpdate(sourceParty, source.id, (c) => {\r\n        return commitDamage(c, targetResult.reflectedDamage, false)\r\n      })\r\n    }\r\n\r\n    // commet end-of-round actions\r\n    if (index === result.targetResults.length - 1) {\r\n      // source health regen\r\n      localUpdate(sourceParty, source.id, (c) => {\r\n        const pc = processCharacter(checkStatus(c))\r\n        return {\r\n          ...c,\r\n          healthOffset: noneg(c.healthOffset - pc.stats.healthRegeneration),\r\n          consumables: c.consumables.filter(\r\n            (i) => i.id !== targetResult.skill.consumableId,\r\n          ),\r\n        }\r\n      })\r\n    }\r\n\r\n    if (sourceParty.id === PLAYER_PARTY_ID) {\r\n      playerParty = sourceParty\r\n    } else {\r\n      enemyParty = sourceParty\r\n    }\r\n    if (targetParty.id === PLAYER_PARTY_ID) {\r\n      if (sourceParty.id !== targetParty.id) {\r\n        playerParty = targetParty\r\n      }\r\n    } else {\r\n      enemyParty = targetParty\r\n    }\r\n  })\r\n\r\n  return {\r\n    playerParty: {\r\n      ...playerParty,\r\n      characters: playerParty.characters.map((c) =>\r\n        decrementStatusDurations(checkStatus(c)),\r\n      ),\r\n    },\r\n    enemyParty: {\r\n      ...enemyParty,\r\n      characters: enemyParty.characters.map((c) =>\r\n        decrementStatusDurations(checkStatus(c)),\r\n      ),\r\n    },\r\n    queue: commitQueueUpdates(queue, source, [\r\n      ...playerParty.characters,\r\n      ...enemyParty.characters,\r\n    ]),\r\n  }\r\n}\r\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n} from 'react'\r\nimport { usePartyContext } from '../PartyContext'\r\nimport { v4 } from 'uuid'\r\nimport { useHistory } from 'react-router'\r\nimport { useModalContext } from '../ModalContext'\r\nimport { CombatVictoryModal } from '../../components/CombatVictoryModal'\r\nimport { tProcessedParty, tParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tSkill, tSkillResult, tSkillTarget } from '../../game/Skill/type'\r\nimport { tQueue } from '../../game/Queue/type'\r\nimport {\r\n  processParty,\r\n  makeParty,\r\n  getRolledRewards,\r\n} from '../../game/Party/util'\r\nimport {\r\n  processCharacter,\r\n  makeCharacter,\r\n  removeTemporaryStatus,\r\n} from '../../game/Character/util'\r\nimport { makeCombatQueue, getFirst, shiftQueue } from '../../game/Queue/util'\r\nimport {\r\n  makeSkillTarget,\r\n  resolveSkillTarget,\r\n  getSkillResult,\r\n} from '../../game/Skill/util'\r\nimport { commitSkillResults } from '../../game/Skill/committer'\r\nimport { getAIAction } from '../../game/AI/util'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface CombatContextT {\r\n  party: tProcessedParty\r\n  enemyParty: tProcessedParty\r\n  activeCharacter: tProcessedCharacter\r\n  characters: tProcessedCharacter[]\r\n  queue: tQueue\r\n  selectedSkill: tSkill | undefined\r\n  selectedTargets: tProcessedCharacter[]\r\n  roundResults: tSkillResult[]\r\n  activeRound: tSkillResult | undefined\r\n  isRunning: boolean\r\n  isRenderingResult: boolean\r\n  onSkillSelect: (skill: tSkill, consumableIndex?: number) => void\r\n  onTargetsSelect: (target: tProcessedCharacter | tProcessedParty) => void\r\n  reset: () => void\r\n  start: () => void\r\n  next: (nextTarget?: tProcessedCharacter | tProcessedParty) => void\r\n  commit: () => void\r\n  equipItemCombat: (characterId: string, item?: tArmor | tWeapon) => void\r\n}\r\nconst defaultValue: CombatContextT = {\r\n  party: processParty(makeParty(0, 0, 0)),\r\n  enemyParty: processParty(makeParty(0, 0, 0)),\r\n  activeCharacter: processCharacter(makeCharacter('executioner')),\r\n  characters: [],\r\n  queue: {},\r\n  selectedSkill: undefined,\r\n  selectedTargets: [],\r\n  roundResults: [],\r\n  activeRound: undefined,\r\n  isRunning: false,\r\n  isRenderingResult: false,\r\n  onSkillSelect: (skill: tSkill) => {},\r\n  onTargetsSelect: (target: tProcessedCharacter | tProcessedParty) => {},\r\n  reset: () => {},\r\n  start: () => {},\r\n  next: () => {},\r\n  commit: () => {},\r\n  equipItemCombat: (characterId, item) => {},\r\n}\r\nexport const CombatContext = createContext<CombatContextT>(defaultValue)\r\nexport const useCombatContext = () => useContext(CombatContext)\r\n\r\nexport interface CombatContextProviderPropsT {\r\n  children: JSX.Element\r\n  enemyParty: tParty\r\n  setEnemyParty: (party: tParty) => void\r\n}\r\nexport const CombatContextProvider = (props: CombatContextProviderPropsT) => {\r\n  const { children, setEnemyParty } = props\r\n  const { party, rawParty, updateParty, equipItem } = usePartyContext()\r\n  const { open } = useModalContext()\r\n  const history = useHistory()\r\n  const enemyParty = useMemo(() => {\r\n    return processParty(props.enemyParty)\r\n  }, [props.enemyParty])\r\n  const [isRunning, setIsRunning] = useState<boolean>(false)\r\n  const [isRenderingResult, setIsRenderingResult] = useState<boolean>(false)\r\n  const characters = useMemo(\r\n    () => [...party.characters, ...enemyParty.characters],\r\n    [party, enemyParty],\r\n  )\r\n  const [queue, setQueue] = useState<tQueue>(\r\n    makeCombatQueue([...party.characters, ...enemyParty.characters]),\r\n  )\r\n  const resultCommitter = useMemo(\r\n    () => commitSkillResults(rawParty, props.enemyParty, queue),\r\n    [rawParty, props.enemyParty, queue],\r\n  )\r\n  const [roundId, setRoundId] = useState<string>(v4())\r\n  const [roundResults, setRoundResults] = useState<tSkillResult[]>([])\r\n  const [activeRound, setActiveRound] = useState<tSkillResult | undefined>()\r\n  const [selectedTarget, setSelectedTarget] = useState<\r\n    tSkillTarget | undefined\r\n  >()\r\n  const [selectedSkill, setSelectedSkill] = useState<tSkill | undefined>()\r\n  const activeCharacter = useMemo(\r\n    () =>\r\n      characters.find(\r\n        (c) => c.health > 0 && c.id === getFirst(queue),\r\n      ) as tProcessedCharacter,\r\n    [queue, characters],\r\n  )\r\n\r\n  const start = () => {\r\n    setIsRunning(true)\r\n    setQueue(makeCombatQueue([...party.characters, ...enemyParty.characters]))\r\n    setRoundId(v4())\r\n    setActiveRound(undefined)\r\n    setIsRenderingResult(false)\r\n  }\r\n\r\n  const reset = () => {\r\n    setIsRunning(false)\r\n    setActiveRound(undefined)\r\n    setSelectedSkill(undefined)\r\n    setSelectedTarget(undefined)\r\n    setIsRenderingResult(false)\r\n    setRoundResults([])\r\n    setQueue({})\r\n  }\r\n\r\n  const equipItemCombat = (characterId: string, item?: tArmor | tWeapon) => {\r\n    if (item) {\r\n      equipItem(activeCharacter.id, item)\r\n    }\r\n    setQueue((q) =>\r\n      shiftQueue(q, activeCharacter, [\r\n        ...party.characters,\r\n        ...enemyParty.characters,\r\n      ]),\r\n    )\r\n    completeRound()\r\n  }\r\n\r\n  const next = (nextTarget?: tProcessedCharacter | tProcessedParty) => {\r\n    if (selectedSkill) {\r\n      const roundTarget = nextTarget\r\n        ? makeSkillTarget(selectedSkill.targetType, nextTarget)\r\n        : selectedTarget\r\n      if (!selectedSkill || !roundTarget) return\r\n      const results = getSkillResult(\r\n        activeCharacter,\r\n        resolveSkillTarget(roundTarget).filter((c) => c.health > 0),\r\n        selectedSkill,\r\n      )\r\n      setActiveRound(results)\r\n      setSelectedSkill(undefined)\r\n      setSelectedTarget(undefined)\r\n      setIsRenderingResult(true)\r\n    }\r\n  }\r\n\r\n  const onSkillSelect = (skill: tSkill, consumableIndex?: number) => {\r\n    setSelectedSkill(skill)\r\n    if (skill.targetType !== selectedSkill?.targetType) {\r\n      setSelectedTarget(undefined)\r\n    }\r\n  }\r\n\r\n  const onTargetsSelect = (target: tProcessedCharacter | tProcessedParty) => {\r\n    if (!selectedSkill) return\r\n    setSelectedTarget(makeSkillTarget(selectedSkill.targetType, target))\r\n  }\r\n\r\n  const completeRound = () => {\r\n    setRoundId(v4())\r\n    setActiveRound(undefined)\r\n    setIsRenderingResult(false)\r\n  }\r\n\r\n  const commit = useCallback(() => {\r\n    if (!activeRound) return\r\n    const result = resultCommitter(activeRound)\r\n    setRoundResults((r) => [...r, activeRound])\r\n    setEnemyParty(result.enemyParty)\r\n    updateParty(result.playerParty)\r\n    setQueue(result.queue)\r\n\r\n    completeRound()\r\n  }, [activeRound, queue])\r\n\r\n  const execEnemyTurn = (skill: tSkill, target: tSkillTarget) => {\r\n    const result = getSkillResult(\r\n      activeCharacter,\r\n      resolveSkillTarget(target),\r\n      skill,\r\n    )\r\n    setActiveRound(result)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activeCharacter && isRunning) {\r\n      if (activeCharacter.partyId === enemyParty.id) {\r\n        const { skill, target } = getAIAction(\r\n          activeCharacter,\r\n          party,\r\n          enemyParty,\r\n        )\r\n        execEnemyTurn(skill, makeSkillTarget(skill.targetType, target))\r\n      } else {\r\n        setSelectedSkill(activeCharacter.skills[0])\r\n      }\r\n    }\r\n  }, [roundId])\r\n\r\n  useEffect(() => {\r\n    if (!isRunning) return\r\n    if (enemyParty.characters.every((c) => c.health <= 0)) {\r\n      setIsRunning(false)\r\n      const rewards = getRolledRewards(\r\n        enemyParty,\r\n        party.characters.reduce((p, c) =>\r\n          p.stats.luck > c.stats.luck ? p : c,\r\n        ),\r\n      )\r\n      updateParty({\r\n        ...rawParty,\r\n        characters: rawParty.characters.map((c) => removeTemporaryStatus(c)),\r\n      })\r\n      open(<CombatVictoryModal rewards={rewards} />, {}, true)\r\n      return\r\n    }\r\n    if (party.characters.every((c) => c.health <= 0)) {\r\n      setIsRunning(false)\r\n      open(\r\n        <div>\r\n          <h1 style={{ fontFamily: Theme.titleFont, textAlign: 'center' }}>\r\n            You Lose\r\n          </h1>\r\n        </div>,\r\n      )\r\n      history.push('/')\r\n      return\r\n    }\r\n  }, [party, enemyParty])\r\n\r\n  return (\r\n    <CombatContext.Provider\r\n      value={{\r\n        party,\r\n        enemyParty,\r\n        characters,\r\n        queue,\r\n        activeCharacter,\r\n        activeRound,\r\n        selectedSkill,\r\n        selectedTargets: selectedTarget\r\n          ? resolveSkillTarget(selectedTarget)\r\n          : [],\r\n        roundResults,\r\n        isRunning,\r\n        isRenderingResult,\r\n        onSkillSelect,\r\n        onTargetsSelect,\r\n        start,\r\n        next,\r\n        commit,\r\n        reset,\r\n        equipItemCombat,\r\n      }}\r\n    >\r\n      {children}\r\n    </CombatContext.Provider>\r\n  )\r\n}\r\n","import { tSkill } from '../Skill/type'\r\nimport { tProcessedCharacter } from '../Character/type'\r\nimport { tProcessedParty } from '../Party/type'\r\nimport { getRandom } from '../../util'\r\nimport { getSkillTargetOptions } from '../Skill/util'\r\n\r\nexport interface tAIAction {\r\n  skill: tSkill\r\n  target: tProcessedCharacter | tProcessedParty\r\n}\r\nexport const getAIAction = (\r\n  source: tProcessedCharacter,\r\n  playerParty: tProcessedParty,\r\n  enemyParty: tProcessedParty,\r\n): tAIAction => {\r\n  const skill = getRandom(source.skills)\r\n  const targetedCharacters = playerParty.characters.filter(\r\n    (c) => c.status.map((t) => t.type).includes('targeted') && c.health > 0,\r\n  )\r\n  const target =\r\n    skill.targetType === 'single'\r\n      ? targetedCharacters.length > 0\r\n        ? getRandom(targetedCharacters)\r\n        : getRandom(playerParty.characters.filter((c) => c.health > 0))\r\n      : getRandom<tProcessedParty | tProcessedCharacter>(\r\n          getSkillTargetOptions(source, enemyParty, playerParty, skill),\r\n        )\r\n\r\n  return { skill, target }\r\n}\r\n","import React from 'react'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface PerfectPropsT {\r\n  show: boolean | undefined\r\n  partyId: string\r\n}\r\nexport const Perfect = (props: PerfectPropsT) => {\r\n  const { show, partyId } = props\r\n  const style = useSpring({ opacity: show ? 1 : 0 })\r\n  return show ? (\r\n    <animated.div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: 16,\r\n        fontSize: 42,\r\n        color: partyId === PLAYER_PARTY_ID ? 'rgba(255,255,255,1)' : '#c95738',\r\n        textShadow: '4px 4px 4px black',\r\n        fontFamily: Theme.titleFont,\r\n        ...style,\r\n      }}\r\n    >\r\n      Perfect!\r\n    </animated.div>\r\n  ) : null\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport Kefir from 'kefir'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport Color from 'color'\r\nimport { Perfect } from './Perfect'\r\nimport { Theme } from '../../theme'\r\nimport { CHARACTER_CLASS_COLORS } from '../../game/Character/constants'\r\n\r\nexport interface RoundResultRendererPropsT {\r\n  isModal?: boolean\r\n}\r\nexport const RoundResultRenderer = (props: RoundResultRendererPropsT) => {\r\n  const { isModal = true } = props\r\n  const { activeRound, isRunning, commit } = useCombatContext()\r\n  const { open, close } = useModalContext()\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (activeRound && !isOpen && isRunning) {\r\n      setIsOpen(true)\r\n      if (isModal) {\r\n        open(\r\n          <RoundResult\r\n            close={() => {\r\n              close(true)\r\n              setIsOpen(false)\r\n              commit()\r\n            }}\r\n          />,\r\n          {\r\n            overlay: {\r\n              background: 'transparent',\r\n            },\r\n          },\r\n          true,\r\n        )\r\n      }\r\n    }\r\n  }, [isRunning, isModal, isOpen, activeRound, open, close, commit])\r\n\r\n  if (!isModal && activeRound && isRunning) {\r\n    return (\r\n      <FlexContainer style={{ height: 290 }}>\r\n        <RoundResult\r\n          close={() => {\r\n            setIsOpen(false)\r\n            commit()\r\n          }}\r\n        />\r\n      </FlexContainer>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport interface RoundResultPropsT {\r\n  close: () => void\r\n}\r\nexport interface CheckKVT {\r\n  label: string\r\n  result: boolean | undefined\r\n}\r\nexport const RoundResult = (props: RoundResultPropsT) => {\r\n  const { close } = props\r\n  const { activeRound } = useCombatContext()\r\n  const [isDone, setIsDone] = useState(false)\r\n  const round = activeRound?.sourceResult\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n  const [roundResults, setRoundResults] = useState<CheckKVT[]>(\r\n    !round\r\n      ? []\r\n      : round.rollResults.map((result, i) => ({\r\n          label: round.skill.weaponStatOverride || round.source.weapon.stat,\r\n          result: undefined,\r\n        })),\r\n  )\r\n\r\n  const updateRoundResult = (value: CheckKVT, index: number) => {\r\n    setActiveIndex(index)\r\n    setRoundResults((r) => r.map((r, i) => (i === index ? value : r)))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!round) return\r\n    const stream = Kefir.sequentially(\r\n      200,\r\n      roundResults.map((r, i) => ({ ...r, index: i })),\r\n    )\r\n    stream.onValue((result) => {\r\n      updateRoundResult(\r\n        {\r\n          label: result.label,\r\n          result: round.rollResults[result.index],\r\n        },\r\n        result.index,\r\n      )\r\n    })\r\n    stream.onEnd(() => {\r\n      Kefir.later(round.perfect ? 1200 : 900, undefined).onValue(() => {\r\n        setIsDone(true)\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (isDone) {\r\n      close()\r\n    }\r\n  }, [isDone, close])\r\n\r\n  const showPerfect = activeIndex === roundResults.length - 1 && round?.perfect\r\n  const isPlayer = (partyId: string) => partyId === PLAYER_PARTY_ID\r\n  const targetResult = activeRound?.targetResults[0]\r\n  const showTarget =\r\n    round && targetResult && targetResult.target.id !== round.source.id\r\n  if (!round) return null\r\n  return (\r\n    <FlexContainer $direction='column' style={{ textAlign: 'center' }}>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        {roundResults.map((result, i) => (\r\n          <SkillCheck\r\n            key={i}\r\n            check={result}\r\n            perfect={showPerfect}\r\n            skill={round.skill}\r\n            crit={round.criticalHitSuccess}\r\n          />\r\n        ))}\r\n      </FlexContainer>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        <div\r\n          style={{\r\n            marginTop: 24,\r\n            fontSize: 32,\r\n            padding: '16px 32px',\r\n            color: 'rgba(255,255,255,0.8)',\r\n            textShadow: '1px 1px 1px black',\r\n          }}\r\n        >\r\n          <strong\r\n            style={{\r\n              fontWeight: 'bold',\r\n              color: isPlayer(round.source.partyId)\r\n                ? 'white'\r\n                : Theme.enemyPartyColor,\r\n            }}\r\n          >\r\n            {round.source.name}\r\n          </strong>{' '}\r\n          uses{' '}\r\n          <span style={{ color: 'rgba(255,255,255,0.9)', fontWeight: 'bold' }}>\r\n            {round.skill.name}\r\n          </span>\r\n          {showTarget && (\r\n            <span>\r\n              {' on '}\r\n              <strong\r\n                style={{\r\n                  fontWeight: 'bold',\r\n                  color: isPlayer(targetResult?.target.partyId || '')\r\n                    ? 'white'\r\n                    : Theme.enemyPartyColor,\r\n                }}\r\n              >\r\n                {targetResult?.target.name}\r\n              </strong>\r\n            </span>\r\n          )}\r\n        </div>\r\n      </FlexContainer>\r\n      <Perfect show={showPerfect} partyId={round.source.partyId} />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { getSkillDamage, getPerfectText } from '../../game/Skill/util'\r\nimport { getChecksProbability } from '../../game/Roll/util'\r\nimport { Theme } from '../../theme'\r\nimport { Icon } from '../Icon'\r\nimport { SKILL_ICONS } from '../../icons/maps'\r\n\r\nexport interface SkillPreviewPropsT {\r\n  skill: tSkill\r\n  source: tProcessedCharacter\r\n  targets?: tProcessedCharacter[]\r\n}\r\nexport const SkillPreview = (props: SkillPreviewPropsT) => {\r\n  const { skill, source } = props\r\n  const perfectChance = getChecksProbability(\r\n    source,\r\n    Array(skill.rolls)\r\n      .fill(null)\r\n      .map((_, i) => ({ key: source.weapon.stat, offset: skill.offset })),\r\n  )\r\n  const stat = skill.weaponStatOverride || source.weapon.stat\r\n  const damage = getSkillDamage(skill, source)\r\n  const perfectKeys = getPerfectText(skill, source)\r\n  return (\r\n    <BoxContainer\r\n      style={{ marginTop: 30, position: 'relative', minWidth: 300 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <FlexContainer $direction='column' style={{ alignItems: 'center' }}>\r\n        <FlexContainer style={{ marginTop: -27 }}>\r\n          <FullContainer />\r\n          <BoxContainer\r\n            substyle={{\r\n              padding: '4px 12px',\r\n              fontSize: 18,\r\n              background: Theme.otherGrey,\r\n              fontFamily: Theme.titleFont,\r\n              textShadow: '1px 1px 3px black',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Icon\r\n              src={SKILL_ICONS[skill.name]}\r\n              size={16}\r\n              style={{ marginRight: 8 }}\r\n            />\r\n            {skill.name}\r\n          </BoxContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n        <span\r\n          style={{\r\n            color: 'rgba(255,255,255,0.4)',\r\n            marginTop: 8,\r\n            marginBottom: 20,\r\n          }}\r\n        >\r\n          Perfect ({Math.floor(perfectChance * 100)}%){' '}\r\n          {perfectKeys.length > 0 && '='} {perfectKeys}\r\n        </span>\r\n        <FlexContainer $full style={{ width: '100%', marginBottom: 8 }}>\r\n          {damage.value > 0 && skill.damage && (\r\n            <FlexContainer\r\n              $full\r\n              $direction='column'\r\n              style={{ alignItems: 'center', marginRight: 10 }}\r\n            >\r\n              <span\r\n                style={{\r\n                  color: damage.type === 'physical' ? 'lightblue' : 'plum',\r\n                  fontFamily: 'New Rocker',\r\n                  fontSize: 32,\r\n                }}\r\n              >\r\n                {`${Math.floor(damage.value)}`}\r\n              </span>\r\n              <span style={{ color: 'rgba(255,255,255,0.2)' }}>Max DMG</span>\r\n            </FlexContainer>\r\n          )}\r\n          {skill.rolls > 0 && (\r\n            <FlexContainer\r\n              $full\r\n              $direction='column'\r\n              style={{ alignItems: 'center' }}\r\n            >\r\n              <span\r\n                style={{\r\n                  fontFamily: 'New Rocker',\r\n                  fontSize: 32,\r\n                }}\r\n              >\r\n                {source.stats[stat] + skill.offset}%\r\n              </span>\r\n              <span style={{ color: 'rgba(255,255,255,0.2)' }}>\r\n                Per Check ACC\r\n              </span>\r\n            </FlexContainer>\r\n          )}\r\n        </FlexContainer>\r\n        {skill.consumableId && (\r\n          <div\r\n            style={{\r\n              color: Theme.healthRedColor,\r\n              fontSize: 12,\r\n              fontWeight: 'bolder',\r\n              marginBottom: 8,\r\n            }}\r\n          >\r\n            consumable\r\n          </div>\r\n        )}\r\n        <FlexContainer style={{ marginBottom: -18 }}>\r\n          <FullContainer />\r\n          <BoxContainer\r\n            substyle={{\r\n              padding: '2px 8px',\r\n              background: Theme.otherGrey,\r\n              textShadow: '1px 1px 3px black',\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            {skill.targetType} target\r\n          </BoxContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { tStats } from '../../game/Stats/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { STAT_BONUS_KEYS } from '../../game/Stats/constants'\r\n\r\nconst getStatColor = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tStats,\r\n): string => {\r\n  const a = character.stats[key]\r\n  const b = character.rawStats[key]\r\n  if (a === undefined || b === undefined) return 'rgba(255,255,255,0.6)'\r\n  if (a > b) return 'lightgreen'\r\n  if (b > a) return 'lightcoral'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n\r\nexport interface StatBarPropsT {\r\n  character: tProcessedCharacter\r\n}\r\nexport const StatBar = (props: StatBarPropsT) => {\r\n  const { character } = props\r\n\r\n  return (\r\n    <BoxContainer>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-between',\r\n          width: 360,\r\n          paddingTop: 10,\r\n          paddingBottom: 6,\r\n        }}\r\n      >\r\n        {STAT_BONUS_KEYS.map((key) => (\r\n          <FlexContainer\r\n            key={key}\r\n            style={{\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Icon\r\n              src={STAT_ICONS[key] || ''}\r\n              size={20}\r\n              fill={getStatColor(character, key)}\r\n              style={{ marginRight: 4 }}\r\n            />\r\n            <span style={{ color: getStatColor(character, key) }}>\r\n              {character.stats[key]}\r\n            </span>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\n\r\nexport interface UIContextT {\r\n  playerCanEquipItem: boolean\r\n  openCharacterInventoryId: string | undefined\r\n  showSkillTooltips: boolean\r\n  hoverQueueCharacterId: string | undefined\r\n  onCharacterConsumableClick: (\r\n    c: tProcessedCharacter,\r\n    index: number,\r\n    item: tConsumable,\r\n  ) => void\r\n  setPlayerCanEquipItem: (v: boolean) => void\r\n  setOpenCharacterInventoryId: (id: string | undefined) => void\r\n  setOnCharacterConsumableClick: (\r\n    fn: (c: tProcessedCharacter, index: number, item: tConsumable) => void,\r\n  ) => void\r\n  setShowSkillTooltips: (v: boolean) => void\r\n  setHoverQueueCharacterId: (id: string | undefined) => void\r\n}\r\n\r\nconst defaultValue: UIContextT = {\r\n  playerCanEquipItem: false,\r\n  openCharacterInventoryId: undefined,\r\n  showSkillTooltips: false,\r\n  hoverQueueCharacterId: undefined,\r\n  onCharacterConsumableClick: (c, i, item) => {},\r\n  setPlayerCanEquipItem: (v) => {},\r\n  setOpenCharacterInventoryId: (id) => {},\r\n  setOnCharacterConsumableClick: (fn) => {},\r\n  setShowSkillTooltips: (v) => {},\r\n  setHoverQueueCharacterId: (id) => {},\r\n}\r\n\r\nexport const UIContext = React.createContext<UIContextT>(defaultValue)\r\nexport const useUIContext = () => useContext(UIContext)\r\n\r\nexport interface UIContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const UIContextProvider = (props: UIContextProviderPropsT) => {\r\n  const { children } = props\r\n  const [playerCanEquipItem, setPlayerCanEquipItem] = useState(false)\r\n  const [showSkillTooltips, setShowSkillTooltips] = useState(true)\r\n  const [openCharacterInventoryId, setOpenCharacterInventoryId] = useState<\r\n    string | undefined\r\n  >()\r\n  const [hoverQueueCharacterId, setHoverQueueCharacterId] = useState<\r\n    string | undefined\r\n  >()\r\n  const [onCharacterConsumableClick, _setOnCharacterConsumableClick] = useState<\r\n    (c: tProcessedCharacter, i: number, item: tConsumable) => void\r\n  >((c, i, item) => {})\r\n\r\n  const setOnCharacterConsumableClick = (\r\n    fn: (c: tProcessedCharacter, index: number, item: tConsumable) => void,\r\n  ) => {\r\n    _setOnCharacterConsumableClick(() => fn)\r\n  }\r\n  return (\r\n    <UIContext.Provider\r\n      value={{\r\n        playerCanEquipItem,\r\n        openCharacterInventoryId,\r\n        showSkillTooltips,\r\n        hoverQueueCharacterId,\r\n        onCharacterConsumableClick,\r\n        setPlayerCanEquipItem,\r\n        setOpenCharacterInventoryId,\r\n        setOnCharacterConsumableClick,\r\n        setShowSkillTooltips,\r\n        setHoverQueueCharacterId,\r\n      }}\r\n    >\r\n      {children}\r\n    </UIContext.Provider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { RESOURCE_ICONS, WEAPON_TYPE_ICONS } from '../../icons/maps'\r\nimport { styled } from 'styletron-react'\r\nimport { ClickToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Button } from '../../elements/button'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tArmor, tArmorResourceType } from '../../game/Armor/type'\r\nimport {\r\n  CHARACTER_RESOURCES,\r\n  ITEM_RARITY_COLORS,\r\n} from '../../game/Item/constants'\r\nimport { Theme } from '../../theme'\r\n\r\nconst ItemRow = styled(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    marginBottom: '4px',\r\n    textShadow: '1px 1px 1px black',\r\n    background: props.$disabled\r\n      ? 'rgba(255,255,255,0.05)'\r\n      : 'linear-gradient(90deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 100%)',\r\n    paddingLeft: '8px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    textTransform: 'capitalize',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n  }\r\n})\r\n\r\nexport interface ItemPropsT {\r\n  character: tProcessedCharacter\r\n  setActiveItem: (item: tWeapon | tArmor | undefined) => void\r\n}\r\nexport const Items = (props: ItemPropsT) => {\r\n  const { character, setActiveItem } = props\r\n  const { playerCanEquipItem } = useUIContext()\r\n  return (\r\n    <FlexContainer $full $direction='column'>\r\n      <Item\r\n        disabled={false}\r\n        character={character}\r\n        resource={'weapon'}\r\n        onHover={setActiveItem}\r\n        canUnequip={playerCanEquipItem}\r\n      />\r\n      {CHARACTER_RESOURCES.map((res) => {\r\n        const disabled = res === 'offhand' && character.weapon.twoHand\r\n        return (\r\n          <Item\r\n            key={res}\r\n            disabled={disabled}\r\n            character={character}\r\n            resource={res}\r\n            onHover={setActiveItem}\r\n            canUnequip={playerCanEquipItem}\r\n          />\r\n        )\r\n      })}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface ItemProps {\r\n  character: tProcessedCharacter\r\n  resource: tArmorResourceType | 'weapon'\r\n  canUnequip?: boolean\r\n  disabled?: boolean\r\n  onHover: (item: tArmor | tWeapon | undefined) => void\r\n}\r\nexport const Item = (props: ItemProps) => {\r\n  const {\r\n    character,\r\n    resource,\r\n    canUnequip = true,\r\n    disabled = false,\r\n    onHover,\r\n  } = props\r\n  const { unequipItem } = usePartyContext()\r\n  const item =\r\n    resource === 'weapon'\r\n      ? character.weapon\r\n      : character.armor.find((a) => a.resource === resource)\r\n  return (\r\n    <ClickToolTip\r\n      direction='down'\r\n      distance={-2}\r\n      content={() => (\r\n        <>\r\n          {canUnequip && (\r\n            <BoxContainer\r\n              substyle={{\r\n                padding: 4,\r\n                width: 190,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                background: Theme.otherGrey,\r\n              }}\r\n            >\r\n              <Button\r\n                style={{ padding: '4px 8px' }}\r\n                onClick={() => {\r\n                  if (item) {\r\n                    unequipItem(character.id, item)\r\n                  }\r\n                }}\r\n              >\r\n                Unequip\r\n              </Button>\r\n              <Button style={{ padding: '4px 8px' }}>Cancel</Button>\r\n            </BoxContainer>\r\n          )}\r\n        </>\r\n      )}\r\n    >\r\n      {({ onClick, ref }) => (\r\n        <ItemRow\r\n          ref={ref}\r\n          $disabled={disabled}\r\n          onMouseEnter={() => onHover(item)}\r\n          onClick={() => {\r\n            if (item) onClick()\r\n          }}\r\n          style={{\r\n            color: ITEM_RARITY_COLORS[item?.rarity || 'common'],\r\n          }}\r\n        >\r\n          <Icon\r\n            src={\r\n              resource === 'weapon'\r\n                ? WEAPON_TYPE_ICONS[(item as tWeapon)?.type || 'fist']\r\n                : RESOURCE_ICONS[resource] || ''\r\n            }\r\n            size={16}\r\n            fill={\r\n              disabled\r\n                ? 'rgba(255,255,255,0.3)'\r\n                : ITEM_RARITY_COLORS[item?.rarity || 'common']\r\n            }\r\n            style={{ marginRight: 6 }}\r\n          />\r\n          {item?.name}\r\n        </ItemRow>\r\n      )}\r\n    </ClickToolTip>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface NamePropsT {\r\n  name: string\r\n}\r\n\r\nexport const Name = (props: NamePropsT) => {\r\n  const { name } = props\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        width: '100%',\r\n        height: 40,\r\n        marginBottom: -20,\r\n        marginTop: -20,\r\n      }}\r\n    >\r\n      <FullContainer />\r\n      <BoxContainer\r\n        style={{ zIndex: 2 }}\r\n        substyle={{ background: Theme.darkBgColor }}\r\n      >\r\n        {name}\r\n      </BoxContainer>\r\n      <FullContainer />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { CHARACTER_CLASS_COLORS } from '../../game/Character/constants'\r\nimport { tCharacter } from '../../game/Character/type'\r\nimport { Icon } from '../Icon'\r\nimport { CHARACTER_CLASS_ICONS } from '../../icons/maps'\r\n\r\nexport interface CharacterIconPropsT {\r\n  character: tCharacter\r\n  size: number\r\n  height?: number\r\n  width?: number\r\n  index?: number\r\n  style?: CSSProperties\r\n  iconStyle?: CSSProperties\r\n}\r\nexport const CharacterIcon = (props: CharacterIconPropsT) => {\r\n  const { character, size, height, width, index, style, iconStyle } = props\r\n\r\n  return (\r\n    <FlexContainer\r\n      $center\r\n      style={{\r\n        background: CHARACTER_CLASS_COLORS[character.class],\r\n        border: '2px solid rgba(255,255,255,0.8)',\r\n        height: height || size - 10,\r\n        width: width || size - 7,\r\n        alignItems: 'center',\r\n        overflow: 'hidden',\r\n        ...(style || {}),\r\n      }}\r\n    >\r\n      <Icon\r\n        src={character.icon || CHARACTER_CLASS_ICONS[character.class]}\r\n        shadow\r\n        fill={'white'}\r\n        size={size - 7}\r\n        style={{\r\n          zIndex: index || 1,\r\n          position: 'relative',\r\n          ...(iconStyle || {}),\r\n        }}\r\n      />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { CharacterIcon } from '../CharacterIcon'\r\n\r\nexport interface ImagePropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Image = (props: ImagePropsT) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n      <div>\r\n        <FlexContainer style={{ marginRight: 20, marginBottom: 10 }}>\r\n          <CharacterIcon character={character} size={142} />\r\n        </FlexContainer>\r\n      </div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { FlexContainer } from '../../elements/flex'\r\nimport { withStyle } from 'styletron-react'\r\nimport { Theme } from '../../theme'\r\n\r\nexport const Row = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    textShadow: '1px 1px 1px black',\r\n    background: props.$active ? 'rgba(255,255,255,0.2)' : undefined,\r\n    paddingLeft: '8px',\r\n    paddingTop: '2px',\r\n    paddingBottom: '2px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    cursor: 'pointer',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n    textTransform: 'capitalize',\r\n  }\r\n})\r\nexport const ActionsRow = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    padding: '4px',\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    borderTop: '1px solid black',\r\n    borderBottom: '1px solid black',\r\n    background: Theme.otherGrey,\r\n  }\r\n})\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { condenseListToStack } from '.'\r\nimport { WEAPON_TYPE_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Row, ActionsRow } from './elements'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\n\r\nexport interface WeaponListPropsT {\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n  setActiveItem: (item: tWeapon | tArmor) => void\r\n  onEquipItem?: (characterId: string, item: tWeapon | tArmor) => void\r\n}\r\n\r\nexport const WeaponList = (props: WeaponListPropsT) => {\r\n  const { character, canEquip, setActiveItem, onEquipItem } = props\r\n  const { party, sellItem, equipItem } = usePartyContext()\r\n  const [activeItemId, setActiveItemId] = useState<string | undefined>()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {condenseListToStack(\r\n        party.items\r\n          .filter((i) => i.itemType === 'weapon')\r\n          .map((i) => i as tArmor)\r\n          .sort((a, b) => a.name.localeCompare(b.name)),\r\n      ).map(({ item, count }) => {\r\n        const weapon = item as tWeapon\r\n        return (\r\n          <FlexContainer $direction='column' key={weapon.id}>\r\n            <Row\r\n              $active={weapon.id === activeItemId}\r\n              onMouseEnter={() => setActiveItem(weapon)}\r\n              onClick={(e: MouseEvent) => {\r\n                e.stopPropagation()\r\n                e.preventDefault()\r\n                setActiveItemId(weapon.id)\r\n              }}\r\n            >\r\n              <div style={{ width: 24 }}>\r\n                <Icon\r\n                  src={WEAPON_TYPE_ICONS[weapon.type || 'fist']}\r\n                  size={16}\r\n                  fill={ITEM_RARITY_COLORS[weapon.rarity]}\r\n                  style={{ marginRight: 6 }}\r\n                />\r\n              </div>\r\n              <span style={{ color: ITEM_RARITY_COLORS[weapon.rarity] }}>\r\n                {count} {weapon.name}\r\n              </span>\r\n            </Row>\r\n            {canEquip && activeItemId === weapon.id && (\r\n              <ActionsRow>\r\n                <Button\r\n                  style={{ padding: '4px 8px', marginRight: 10 }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    if (onEquipItem) {\r\n                      onEquipItem(character.id, weapon)\r\n                    } else {\r\n                      equipItem(character.id, weapon)\r\n                    }\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Equip\r\n                </Button>\r\n                <FullContainer />\r\n                <Button\r\n                  style={{ padding: '4px 8px', marginRight: 10 }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    sellItem(item.id)\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Sell Item ({item.goldValue})\r\n                </Button>\r\n                <Button\r\n                  style={{ padding: '4px 8px' }}\r\n                  onClick={() => {\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </ActionsRow>\r\n            )}\r\n          </FlexContainer>\r\n        )\r\n      })}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { styled, withStyleDeep } from 'styletron-react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tCharacterTag, tProcessedCharacter } from '../../game/Character/type'\r\nimport { tStats } from '../../game/Stats/type'\r\n\r\nexport const StatRow = withStyleDeep(FlexContainer, (props: any) => ({\r\n  flexDirection: 'column',\r\n  flex: props.$full ? 1 : undefined,\r\n  textTransform: 'capitalize',\r\n  whiteSpace: 'nowrap',\r\n}))\r\n\r\nexport interface StatsPropsT {\r\n  character: tProcessedCharacter\r\n}\r\nexport const Stats = (props: StatsPropsT) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer style={{ padding: 8 }}>\r\n      <FlexContainer $full $direction='column' style={{ marginRight: 16 }}>\r\n        <Stat character={character} stat={'strength'} />\r\n        <Stat character={character} stat={'dexterity'} />\r\n        <Stat character={character} stat={'intelligence'} />\r\n        <Stat character={character} stat={'charisma'} />\r\n        <Stat character={character} stat={'vigor'} />\r\n        <Stat character={character} stat={'agility'} />\r\n        <Stat character={character} stat={'luck'} />\r\n        <Stat character={character} stat={'evasion'} />\r\n        <Stat character={character} stat={'armor'} />\r\n        <Stat\r\n          character={character}\r\n          stat={'resistance'}\r\n          label='Magic Resistance'\r\n        />\r\n\r\n        <Stat\r\n          character={character}\r\n          stat={'criticalChance'}\r\n          label='Critical Chance'\r\n        />\r\n\r\n        <Stat\r\n          character={character}\r\n          stat={'healthRegeneration'}\r\n          label={'Health Regeneration'}\r\n        />\r\n        <Stat\r\n          character={character}\r\n          stat={'goldModifier'}\r\n          label={'% More Gold'}\r\n        />\r\n      </FlexContainer>\r\n      <FlexContainer $full $direction='column'>\r\n        {Object.keys(character.stats.damageModifiers)\r\n          .filter(\r\n            (k) => character.stats.damageModifiers[k as tCharacterTag] !== 0,\r\n          )\r\n          .map((key) => (\r\n            <FlexContainer $full>\r\n              <StatRow $full>\r\n                +{character.stats.damageModifiers[key as tCharacterTag] * 100}\r\n                {'% '}\r\n                vs {key}\r\n              </StatRow>\r\n            </FlexContainer>\r\n          ))}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\ninterface StatPropsT {\r\n  character: tProcessedCharacter\r\n  stat: keyof tStats\r\n  label?: string\r\n}\r\nconst Stat = (props: StatPropsT) => {\r\n  const { stat, label, character } = props\r\n  return (\r\n    <FlexContainer $full>\r\n      <StatRow $full>{label || stat}</StatRow>\r\n      <StatRow>{character.stats[stat]}</StatRow>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport Weapons from '../../icons/svg/lorc/broadsword.svg'\r\nimport Armor from '../../icons/svg/delapouite/leather-armor.svg'\r\nimport { ArmorList } from './ArmorList'\r\nimport { WeaponList } from './WeaponList'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { Theme } from '../../theme'\r\nimport { Stats } from './Stats'\r\n\r\nexport interface MenuOptionT {\r\n  key: string\r\n  icon: string\r\n  count: (\r\n    character: tProcessedCharacter,\r\n    party: tProcessedParty,\r\n  ) => number | undefined\r\n  render: (\r\n    character: tProcessedCharacter,\r\n    canEquip: boolean,\r\n    setActiveItem: (item: tWeapon | tArmor) => void,\r\n  ) => JSX.Element\r\n}\r\nexport const ACTIVE_CHARACTER_MENU_KEYS: MenuOptionT[] = [\r\n  {\r\n    key: 'all',\r\n    icon: '',\r\n    count: (c, p) => p.items.length,\r\n    render: (character, canEquip, setActiveItem) => (\r\n      <FlexContainer $direction='column'>\r\n        <WeaponList\r\n          character={character}\r\n          canEquip={canEquip}\r\n          setActiveItem={setActiveItem}\r\n        />\r\n        <ArmorList\r\n          character={character}\r\n          canEquip={canEquip}\r\n          setActiveItem={setActiveItem}\r\n        />\r\n      </FlexContainer>\r\n    ),\r\n  },\r\n  {\r\n    key: 'weapons',\r\n    icon: Weapons,\r\n    count: (c, p) => p.items.filter((i) => i.itemType === 'weapon').length,\r\n    render: (character, canEquip, setActiveItem) => (\r\n      <WeaponList\r\n        character={character}\r\n        canEquip={canEquip}\r\n        setActiveItem={setActiveItem}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    key: 'armor',\r\n    icon: Armor,\r\n    count: (c, p) => p.items.filter((i) => i.itemType === 'armor').length,\r\n    render: (character, canEquip, setActiveItem) => (\r\n      <ArmorList\r\n        character={character}\r\n        canEquip={canEquip}\r\n        setActiveItem={setActiveItem}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    key: 'stats',\r\n    icon: '',\r\n    count: (c, p) => undefined,\r\n    render: (character) => <Stats character={character} />,\r\n  },\r\n]\r\n\r\nexport interface MenuSelectPropsT {\r\n  character: tProcessedCharacter\r\n  party: tProcessedParty\r\n  activeKey: string\r\n  onActiveKeyChange: (key: string) => void\r\n}\r\n\r\nexport const MenuSelect = (props: MenuSelectPropsT) => {\r\n  const { character, party, activeKey, onActiveKeyChange } = props\r\n\r\n  return (\r\n    <FlexContainer style={{ justifyContent: 'center', marginTop: 8 }}>\r\n      {ACTIVE_CHARACTER_MENU_KEYS.map((option) => (\r\n        <Button\r\n          key={option.key}\r\n          style={{\r\n            padding: '4px 8px',\r\n            fontSize: 12,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            borderBottom: 0,\r\n            background:\r\n              option.key === activeKey ? Theme.lightBgColor : undefined,\r\n          }}\r\n          onClick={() => {\r\n            onActiveKeyChange(option.key)\r\n          }}\r\n        >\r\n          <FullContainer\r\n            style={{\r\n              marginRight: option.count(character, party) === undefined ? 0 : 8,\r\n              textTransform: 'capitalize',\r\n            }}\r\n          >\r\n            {option.key}\r\n          </FullContainer>\r\n          <FullContainer style={{ paddingRight: 2 }}>\r\n            {option.count(character, party)}\r\n          </FullContainer>\r\n        </Button>\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { ItemCard } from '../ItemCard'\r\n\r\nexport interface HoverAreaPropsT {\r\n  character: tProcessedCharacter\r\n  activeItem: tWeapon | tArmor\r\n}\r\n\r\nexport const HoverArea = (props: HoverAreaPropsT) => {\r\n  const { character, activeItem } = props\r\n  const foundArmor = character.armor.find(\r\n    (a) => a.resource === (activeItem as tArmor).resource,\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {activeItem.itemType === 'armor' && (\r\n        <FlexContainer>\r\n          {foundArmor && <ItemCard item={foundArmor} />}\r\n          {foundArmor?.id !== activeItem.id && <ItemCard item={activeItem} />}\r\n        </FlexContainer>\r\n      )}\r\n      {activeItem.itemType === 'weapon' && (\r\n        <FlexContainer>\r\n          <ItemCard item={character.weapon} />\r\n          {character.weapon.id !== activeItem.id && (\r\n            <ItemCard item={activeItem} />\r\n          )}\r\n        </FlexContainer>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { FlexContainer } from './flex'\r\nimport { Theme } from '../theme'\r\nimport { HoverToolTip } from '../components/Tooltip'\r\n\r\nexport interface HexagonPropsT {\r\n  color: string\r\n  size: number\r\n  style?: CSSProperties\r\n  children?: JSX.Element | string | number\r\n  childStyle?: CSSProperties\r\n}\r\nexport const Hexagon = (props: HexagonPropsT) => {\r\n  const { color, size, children, childStyle } = props\r\n  const mod = size / 100\r\n  const boxW = mod * 100\r\n  const boxH = mod * 57.74\r\n  const triH = mod * 28.8774\r\n  const triW = mod * 50\r\n  const tHeight = boxH + 2 * triH\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <div\r\n        style={{\r\n          width: 0,\r\n          borderBottom: `${triH}px solid ${color}`,\r\n          borderRight: `${triW}px solid transparent`,\r\n          borderLeft: `${triW}px solid transparent`,\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          width: `${boxW}px`,\r\n          height: `${boxH}px`,\r\n          background: color,\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          width: 0,\r\n          borderTop: `${triH}px solid ${color}`,\r\n          borderRight: `${triW}px solid transparent`,\r\n          borderLeft: `${triW}px solid transparent`,\r\n        }}\r\n      />\r\n      <FlexContainer\r\n        $direction='column'\r\n        style={{\r\n          width: `${boxW}px`,\r\n          height: `${tHeight}px`,\r\n          position: 'absolute',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          ...(childStyle || {}),\r\n        }}\r\n      >\r\n        {children}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface HexBadgePropsT extends HexagonPropsT {\r\n  rotate?: boolean\r\n  stroke?: number\r\n  borderColor?: string\r\n  onClick?: () => void\r\n}\r\nexport const HexBadge = (props: HexBadgePropsT) => {\r\n  const {\r\n    color,\r\n    borderColor,\r\n    size,\r\n    style,\r\n    children,\r\n    childStyle,\r\n    onClick,\r\n    stroke = 1,\r\n    rotate = false,\r\n  } = props\r\n  const angle = rotate ? 30 : 0\r\n  return (\r\n    <div\r\n      style={{\r\n        transform: `rotateY(0deg) rotate(-${angle}deg)`,\r\n        ...(style || {}),\r\n      }}\r\n      onClick={onClick}\r\n    >\r\n      <Hexagon size={size} color={Theme.darkBgColorSolid}>\r\n        <Hexagon\r\n          size={size - stroke * 2}\r\n          color={borderColor || Theme.lightBgColor}\r\n        >\r\n          <Hexagon size={size - stroke * 2 - 2} color={Theme.darkBgColorSolid}>\r\n            <Hexagon\r\n              size={size - stroke * 4 - 2}\r\n              color={color}\r\n              childStyle={{\r\n                fontFamily: Theme.titleFont,\r\n                color: 'white',\r\n                fontSize: `${size - 16}px`,\r\n                paddingTop: 2,\r\n                transform: `rotateY(0deg) rotate(${angle}deg)`,\r\n                ...(childStyle || {}),\r\n              }}\r\n            >\r\n              {children}\r\n            </Hexagon>\r\n          </Hexagon>\r\n        </Hexagon>\r\n      </Hexagon>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport interface HoverBadgePropsT {\r\n  children: JSX.Element | string | number\r\n  content: JSX.Element\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n  style?: CSSProperties\r\n  childStyle?: CSSProperties\r\n  size?: number\r\n  rotate?: boolean\r\n  stroke?: number\r\n  borderColor?: string\r\n  position?: {\r\n    top?: number\r\n    bottom?: number\r\n    left?: number\r\n    right?: number\r\n  }\r\n}\r\nexport const HoverHexBadge = (props: HoverBadgePropsT) => {\r\n  const {\r\n    children,\r\n    content,\r\n    direction,\r\n    style,\r\n    childStyle,\r\n    size,\r\n    rotate,\r\n    stroke,\r\n    position,\r\n    borderColor,\r\n  } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        position: position ? 'absolute' : 'relative',\r\n        top: position?.top,\r\n        bottom: position?.bottom,\r\n        left: position?.left,\r\n        right: position?.right,\r\n        zIndex: 4,\r\n      }}\r\n    >\r\n      <HoverToolTip\r\n        distance={2}\r\n        direction={direction || 'right'}\r\n        content={content || <div />}\r\n      >\r\n        <HexBadge\r\n          style={style}\r\n          rotate={rotate}\r\n          stroke={stroke}\r\n          borderColor={borderColor}\r\n          childStyle={{ ...childStyle, textShadow: '1px 1px 3px black' }}\r\n          size={size || 20}\r\n          color={Theme.badgeBgColor}\r\n        >\r\n          {children}\r\n        </HexBadge>\r\n      </HoverToolTip>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { StatBar } from './StatBar'\r\nimport { Items } from './Items'\r\nimport { Name } from './Name'\r\nimport { Image } from './Image'\r\nimport { MenuSelect, ACTIVE_CHARACTER_MENU_KEYS } from './MenuSelect'\r\nimport { HoverArea } from './HoverArea'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { Theme } from '../../theme'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { HexBadge } from '../../elements/shapes'\r\n\r\nexport interface PartyActiveCharacterPropsT {\r\n  character: tProcessedCharacter\r\n  party: tProcessedParty\r\n  canEquip: boolean\r\n  onRequestClose: () => void\r\n}\r\n\r\nexport interface ItemStackT<T> {\r\n  count: number\r\n  item: T\r\n}\r\n\r\ntype ItemT = tConsumable | tArmor | tWeapon\r\nexport const condenseListToStack = (items: ItemT[]): ItemStackT<ItemT>[] => {\r\n  let stack: ItemStackT<ItemT>[] = []\r\n  items.forEach((i) => {\r\n    if (stack.map((s) => s.item.name).includes(i.name)) {\r\n      stack = stack.map((s) =>\r\n        s.item.name === i.name ? { ...s, count: s.count + 1 } : s,\r\n      )\r\n    } else {\r\n      stack = [...stack, { item: i, count: 1 }]\r\n    }\r\n  })\r\n  return stack\r\n}\r\n\r\nexport const PartyActiveCharacter = (props: PartyActiveCharacterPropsT) => {\r\n  const { character, party, canEquip, onRequestClose } = props\r\n  const [activeMenuKey, setActiveMenuKey] = useState('all')\r\n  const [activeItem, setActiveItem] = useState<tArmor | tWeapon | undefined>()\r\n  const activeOption = ACTIVE_CHARACTER_MENU_KEYS.find(\r\n    (o) => o.key === activeMenuKey,\r\n  )\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        justifyContent: 'flex-end',\r\n      }}\r\n    >\r\n      <HexBadge\r\n        color={Theme.healthRedColor}\r\n        size={32}\r\n        onClick={onRequestClose}\r\n        style={{\r\n          position: 'absolute',\r\n          top: -14,\r\n          right: -9,\r\n          cursor: 'pointer',\r\n          userSelect: 'none',\r\n          textShadow: '1px 1px 3px black',\r\n        }}\r\n        childStyle={{\r\n          paddingTop: 1,\r\n        }}\r\n      >\r\n        X\r\n      </HexBadge>\r\n      <FlexContainer\r\n        style={{\r\n          maxHeight: 502,\r\n          padding: 10,\r\n          position: 'absolute',\r\n          left: '-6px',\r\n          width: 486,\r\n          justifyContent: 'flex-end',\r\n          zIndex: 1,\r\n        }}\r\n      >\r\n        {activeItem && (\r\n          <HoverArea character={character} activeItem={activeItem} />\r\n        )}\r\n      </FlexContainer>\r\n      <FlexContainer\r\n        $direction='column'\r\n        style={{ background: Theme.darkBgColor, border: '2px solid black' }}\r\n      >\r\n        <FlexContainer $direction='column'>\r\n          <Name name={character.name} />\r\n          <StatBar character={character} />\r\n          <BoxContainer\r\n            substyle={{\r\n              background: Theme.darkBgColor,\r\n              padding: '16px 0 0px 0',\r\n            }}\r\n          >\r\n            <FlexContainer>\r\n              <Items character={character} setActiveItem={setActiveItem} />\r\n              <Image character={character} />\r\n            </FlexContainer>\r\n            <MenuSelect\r\n              character={character}\r\n              party={party}\r\n              activeKey={activeMenuKey}\r\n              onActiveKeyChange={setActiveMenuKey}\r\n            />\r\n          </BoxContainer>\r\n          <BoxContainer\r\n            substyle={{\r\n              background: Theme.darkBgColor,\r\n              padding: '4px 0',\r\n              height: 200,\r\n              overflow: 'auto',\r\n            }}\r\n          >\r\n            {activeOption &&\r\n              activeOption.render(character, canEquip, setActiveItem)}\r\n          </BoxContainer>\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { ARMOR_TYPE_ICONS } from '../../icons/maps'\r\nimport { Button } from '../../elements/button'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { condenseListToStack } from '.'\r\nimport { Row, ActionsRow } from './elements'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\n\r\nexport interface ArmorListPropsT {\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n  setActiveItem: (item: tWeapon | tArmor) => void\r\n  onEquipItem?: (characterId: string, item: tWeapon | tArmor) => void\r\n}\r\n\r\nexport const ArmorList = (props: ArmorListPropsT) => {\r\n  const { character, canEquip, setActiveItem, onEquipItem } = props\r\n  const { party, sellItem, equipItem } = usePartyContext()\r\n  const [activeItemId, setActiveItemId] = useState<string | undefined>()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {condenseListToStack(\r\n        party.items\r\n          .filter((i) => i.itemType === 'armor')\r\n          .map((i) => i as tArmor)\r\n          .sort((a, b) => a.name.localeCompare(b.name)),\r\n      ).map(({ item, count }) => {\r\n        const armor = item as tArmor\r\n        return (\r\n          <FlexContainer key={armor.id} $direction='column'>\r\n            <Row\r\n              $active={item.id === activeItemId}\r\n              onMouseEnter={() => setActiveItem(armor)}\r\n              onClick={(e: MouseEvent) => {\r\n                e.stopPropagation()\r\n                e.preventDefault()\r\n                setActiveItemId(armor.id)\r\n              }}\r\n            >\r\n              <div style={{ width: 24 }}>\r\n                <Icon\r\n                  src={ARMOR_TYPE_ICONS[armor.type]}\r\n                  size={16}\r\n                  style={{ marginRight: 10 }}\r\n                  fill={ITEM_RARITY_COLORS[armor.rarity]}\r\n                  shadow\r\n                />\r\n              </div>\r\n              <span style={{ color: ITEM_RARITY_COLORS[armor.rarity] }}>\r\n                {count} {armor.name}\r\n              </span>\r\n            </Row>\r\n            {canEquip && activeItemId === armor.id && (\r\n              <ActionsRow>\r\n                <Button\r\n                  style={{ padding: '4px 8px', marginRight: 10 }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    if (onEquipItem) {\r\n                      onEquipItem(character.id, armor)\r\n                    } else {\r\n                      equipItem(character.id, armor)\r\n                    }\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Equip\r\n                </Button>\r\n                <FullContainer />\r\n                <Button\r\n                  style={{ padding: '4px 8px', marginRight: 10 }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    sellItem(item.id)\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Sell Item ({item.goldValue})\r\n                </Button>\r\n                <Button\r\n                  style={{ padding: '4px 8px' }}\r\n                  onClick={() => {\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </ActionsRow>\r\n            )}\r\n          </FlexContainer>\r\n        )\r\n      })}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Theme } from '../../theme'\r\nimport { ArmorList } from '../PartyActiveCharacter/ArmorList'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { WeaponList } from '../PartyActiveCharacter/WeaponList'\r\n\r\nexport interface EquipItemModalPropsT {\r\n  equipItemCombat: (characterId: string, item: tWeapon | tArmor) => void\r\n}\r\n\r\nexport const EquipItemModal = (props: EquipItemModalPropsT) => {\r\n  const { equipItemCombat } = props\r\n  const { activeCharacter } = useCombatContext()\r\n  const { close } = useModalContext()\r\n  const onEquipItem = (characterId: string, item: tWeapon | tArmor) => {\r\n    equipItemCombat(characterId, item)\r\n    close()\r\n  }\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ maxHeight: 300, overflow: 'auto' }}\r\n    >\r\n      <h3 style={{ margin: 0, marginBottom: 32, fontFamily: Theme.titleFont }}>\r\n        Choose an Item\r\n      </h3>\r\n      <WeaponList\r\n        character={activeCharacter}\r\n        setActiveItem={() => {}}\r\n        canEquip={true}\r\n        onEquipItem={onEquipItem}\r\n      />\r\n      <ArmorList\r\n        character={activeCharacter}\r\n        setActiveItem={() => {}}\r\n        canEquip={true}\r\n        onEquipItem={onEquipItem}\r\n      />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { Button } from '../../elements/button'\r\nimport { SkillPreview } from '../SkillPreview'\r\nimport { SkillChecks } from '../SkillChecks'\r\nimport { SKILL_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Hover } from '../Hover'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { Theme } from '../../theme'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { EquipItemModal } from '../EquipItemModal'\r\nimport Inventory from '../../icons/svg/lorc/knapsack.svg'\r\nimport { HEAL, REMOVE_CURSES } from '../../game/Skill/skills/consumables'\r\nimport { hasAnyStatus } from '../../game/Character/util'\r\nimport { CURE_POTION } from '../../game/Consumable/objects/curing_potion'\r\n\r\nexport const CombatActions = () => {\r\n  const {\r\n    party,\r\n    activeCharacter,\r\n    selectedSkill,\r\n    selectedTargets,\r\n    onSkillSelect,\r\n    equipItemCombat,\r\n  } = useCombatContext()\r\n  const { open } = useModalContext()\r\n\r\n  if (!activeCharacter || activeCharacter.partyId !== PLAYER_PARTY_ID)\r\n    return null\r\n\r\n  const stat = selectedSkill?.weaponStatOverride || activeCharacter.weapon.stat\r\n  const skills = activeCharacter.skills.filter((skill) => {\r\n    if (activeCharacter.healthOffset === 0 && skill.id === HEAL.id) {\r\n      return false\r\n    }\r\n    if (\r\n      !hasAnyStatus(activeCharacter, [\r\n        'cursed-agility',\r\n        'cursed-charisma',\r\n        'cursed-dexterity',\r\n        'cursed-intelligence',\r\n        'cursed-luck',\r\n        'cursed-strength',\r\n        'cursed-vigor',\r\n      ]) &&\r\n      skill.id === REMOVE_CURSES.id\r\n    ) {\r\n      return false\r\n    }\r\n    if (\r\n      !hasAnyStatus(activeCharacter, [\r\n        'bleeding',\r\n        'burning',\r\n        'frozen',\r\n        'poisoned',\r\n      ]) &&\r\n      skill.id === CURE_POTION().skill.id\r\n    ) {\r\n      return false\r\n    }\r\n    return true\r\n  })\r\n  return (\r\n    <FlexContainer $direction='column' style={{ minWidth: 340 }}>\r\n      {selectedSkill && <SkillChecks stat={stat} skill={selectedSkill} />}\r\n      <FlexContainer $center style={{ minHeight: 42 }}>\r\n        {skills.map((skill) => (\r\n          <React.Fragment key={skill.id}>\r\n            {SKILL_ICONS[skill.name] ? (\r\n              <Hover delay={0}>\r\n                {({ isHovering }) => (\r\n                  <Icon\r\n                    src={SKILL_ICONS[skill.name]}\r\n                    size={42}\r\n                    shadow={true}\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      padding: '0 12px',\r\n                    }}\r\n                    onClick={() => {\r\n                      onSkillSelect(skill)\r\n                    }}\r\n                    fill={\r\n                      skill.id === selectedSkill?.id\r\n                        ? 'lightsalmon'\r\n                        : isHovering\r\n                        ? 'white'\r\n                        : 'rgba(255,255,255,0.8)'\r\n                    }\r\n                  />\r\n                )}\r\n              </Hover>\r\n            ) : (\r\n              <Button\r\n                key={skill.id}\r\n                onClick={() => onSkillSelect(skill)}\r\n                style={{\r\n                  background: Theme.darkBgColor,\r\n                  borderColor:\r\n                    selectedSkill && skill.id === selectedSkill.id\r\n                      ? 'white'\r\n                      : undefined,\r\n                }}\r\n              >\r\n                {skill.name}\r\n              </Button>\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n        {party.items.length > 0 && (\r\n          <Hover delay={0}>\r\n            {({ isHovering }) => (\r\n              <Icon\r\n                src={Inventory}\r\n                size={42}\r\n                shadow={true}\r\n                style={{\r\n                  cursor: 'pointer',\r\n                  padding: '0 12px',\r\n                }}\r\n                onClick={() =>\r\n                  open(<EquipItemModal equipItemCombat={equipItemCombat} />)\r\n                }\r\n                fill={isHovering ? 'white' : 'rgba(255,255,255,0.8)'}\r\n              />\r\n            )}\r\n          </Hover>\r\n        )}\r\n      </FlexContainer>\r\n      {selectedSkill && (\r\n        <SkillPreview\r\n          skill={selectedSkill}\r\n          source={activeCharacter}\r\n          targets={selectedTargets}\r\n        />\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport const Monospace = styled('span', () => ({\r\n  fontFamily: 'Inconsolata, monospace',\r\n  fontWeight: 600,\r\n}))\r\nexport const Monodiv = styled('div', () => ({\r\n  fontFamily: 'Inconsolata, monospace',\r\n  fontWeight: 600,\r\n}))\r\n","import { GaugePropsT } from '.'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { FullContainer } from '../../elements/flex'\r\n\r\nexport const Gauge2 = (props: GaugePropsT) => {\r\n  const { name = '', value, color, height = 30, children, style } = props\r\n  const max = props.max < 1 ? 1 : props.max\r\n  const p = (value / max) * 100\r\n  const percentage = p > 100 ? 100 : p\r\n  const [oldPercentage, setOldPercentage] = useState(percentage)\r\n  useEffect(() => {\r\n    setOldPercentage(percentage)\r\n  }, [percentage])\r\n  return (\r\n    <BoxContainer\r\n      style={{ borderLeft: 'none', ...(style || {}) }}\r\n      substyle={{\r\n        padding: 0,\r\n        background: 'rgba(80,80,85,1)',\r\n        height: height - 2,\r\n        position: 'relative',\r\n        border: 'none',\r\n      }}\r\n    >\r\n      <Spring\r\n        from={{ value: oldPercentage || 0 }}\r\n        to={{ value: percentage }}\r\n        config={{ friction: 200, mass: 4, tension: 600 }}\r\n      >\r\n        {(p) => (\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              left: 0,\r\n              boxSizing: 'border-box',\r\n              height: height - 2,\r\n              maxWidth: `${p.value}%`,\r\n              minWidth: `${p.value}%`,\r\n              boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n              backgroundColor: 'rgba(255,255,255,0.5)',\r\n            }}\r\n          ></div>\r\n        )}\r\n      </Spring>\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          left: 0,\r\n          boxSizing: 'border-box',\r\n          height: height - 2,\r\n          maxWidth: `${percentage}%`,\r\n          minWidth: `${percentage}%`,\r\n          boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n          textShadow: '1px 1px 3px black',\r\n          backgroundColor: color,\r\n        }}\r\n      ></div>\r\n      <FullContainer\r\n        style={{\r\n          position: 'absolute',\r\n          height,\r\n          lineHeight: `${height - 2}px`,\r\n          right: 4,\r\n          top: 0,\r\n          fontSize: 12,\r\n          overflow: 'hidden',\r\n          textShadow: '0px 0px 3px black',\r\n          color: 'rgba(255,255,255,0.8)',\r\n        }}\r\n      >\r\n        <div>{children}</div>\r\n      </FullContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Spring } from 'react-spring/renderprops'\r\n\r\nexport interface NumberChangePropsT {\r\n  value: number\r\n}\r\nexport const NumberChange = (props: NumberChangePropsT) => {\r\n  const { value } = props\r\n  const [previousValue, setPreviousValue] = useState(value)\r\n  useEffect(() => {\r\n    setPreviousValue(value)\r\n  }, [value])\r\n  return (\r\n    <Spring\r\n      from={{ n: previousValue || 0 }}\r\n      to={{ n: value }}\r\n      config={{ friction: 70, mass: 50, tension: 1500, clamp: true }}\r\n    >\r\n      {(p) => Math.floor(p.n)}\r\n    </Spring>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FullContainer } from '../../elements/flex'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { Monodiv } from '../../elements/monospace'\r\nimport { noneg } from '../../util'\r\nimport { usePrevious } from '../../hooks/usePrevious'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { CHARACTER_XP_MAX } from '../../game/Character/constants'\r\nimport { Gauge2 } from './v2'\r\nimport { Theme } from '../../theme'\r\nimport { NumberChange } from '../NumberChange'\r\n\r\nexport interface GaugePropsT {\r\n  name?: string\r\n  color: string\r\n  height?: number\r\n  max: number\r\n  value: number\r\n  style?: CSSProperties\r\n  children?: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const Gauge = (props: GaugePropsT) => {\r\n  const { name = '', value, color, height = 30, children, style } = props\r\n  const max = props.max < 1 ? 1 : props.max\r\n  const p = (value / max) * 100\r\n  const percentage = p > 100 ? 100 : p\r\n  const oldPercentage = usePrevious(percentage)\r\n  return (\r\n    <HoverToolTip\r\n      direction='right'\r\n      content={<BoxContainer>{`${name} (${value} / ${max})`}</BoxContainer>}\r\n    >\r\n      <BoxContainer\r\n        style={{\r\n          borderLeft: 'none',\r\n          background: Theme.darkBgColorSolid,\r\n          ...(style || {}),\r\n        }}\r\n        substyle={{\r\n          padding: 0,\r\n          background: 'rgba(255,255,255,0.2)',\r\n          height: height - 2,\r\n          position: 'relative',\r\n          border: 'none',\r\n        }}\r\n      >\r\n        <Spring\r\n          from={{ value: oldPercentage || 0 }}\r\n          to={{ value: percentage }}\r\n          config={{ friction: 70, mass: 5, tension: 300 }}\r\n        >\r\n          {(p) => (\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                left: 0,\r\n                boxSizing: 'border-box',\r\n                height: height - 2,\r\n                maxWidth: `${p.value}%`,\r\n                minWidth: `${p.value}%`,\r\n                boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n                textShadow: '1px 1px 1px black',\r\n                backgroundColor: color,\r\n                color: 'white',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n            ></div>\r\n          )}\r\n        </Spring>\r\n        <FullContainer\r\n          style={{\r\n            position: 'absolute',\r\n            height,\r\n            lineHeight: `${height - 2}px`,\r\n            right: 4,\r\n            top: 0,\r\n            fontSize: 10,\r\n            fontWeight: 'bold',\r\n            overflow: 'hidden',\r\n            textShadow: '0px 0px 3px black',\r\n          }}\r\n        >\r\n          <Monodiv>{children}</Monodiv>\r\n        </FullContainer>\r\n      </BoxContainer>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface HealthGaugePropsT {\r\n  character: tProcessedCharacter\r\n  height?: number\r\n  style?: CSSProperties\r\n  showNumbers?: boolean\r\n}\r\nexport const HealthGauge = (props: HealthGaugePropsT) => {\r\n  const { character, height = 16, style, showNumbers = true } = props\r\n  const health = noneg(character.health)\r\n  return (\r\n    <Gauge2\r\n      name='Health'\r\n      color={Theme.healthRedColor}\r\n      max={character.maxHealth}\r\n      value={health}\r\n      height={height}\r\n      style={style}\r\n    >\r\n      {showNumbers && (\r\n        <span>\r\n          <NumberChange value={health} />/\r\n          <NumberChange value={character.maxHealth} />\r\n        </span>\r\n      )}\r\n    </Gauge2>\r\n  )\r\n}\r\nexport interface XPGaugePropsT {\r\n  character: tProcessedCharacter\r\n  style?: CSSProperties\r\n  showNumber?: boolean\r\n}\r\nexport const XPGauge = (props: HealthGaugePropsT) => {\r\n  const { character, style } = props\r\n  const value = character.experience\r\n  const max = CHARACTER_XP_MAX[character.level]\r\n  return (\r\n    <Gauge2\r\n      name='XP'\r\n      color='#5e8575'\r\n      max={max}\r\n      value={value}\r\n      height={16}\r\n      style={style}\r\n    >\r\n      {value}/{max}\r\n    </Gauge2>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Tooltip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STATUS_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { tStatus } from '../../game/Status/type'\r\nimport { STATUS_CONFIG } from '../../game/Status/constants'\r\n\r\nexport interface TagPreviewPropsT {\r\n  status: tStatus\r\n  immunity?: boolean\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n}\r\nexport const TagPreview = (props: TagPreviewPropsT) => {\r\n  const { status, direction, immunity } = props\r\n  const statusConfig = STATUS_CONFIG[status.type]\r\n  return (\r\n    <Tooltip\r\n      direction={direction || 'bottom'}\r\n      content={\r\n        <BoxContainer style={{ maxWidth: 200 }}>\r\n          <FlexContainer $direction='column'>\r\n            <strong style={{ marginBottom: statusConfig.description ? 8 : 0 }}>\r\n              {status.type} {immunity && 'immunity'}{' '}\r\n              {status.duration > 0 ? `(${status.duration})` : ''}\r\n            </strong>\r\n            {statusConfig.description && (\r\n              <>{!immunity && <span>{statusConfig.description}</span>}</>\r\n            )}\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n      }\r\n    >\r\n      <Icon\r\n        shadow\r\n        src={STATUS_ICONS[status.type] || ''}\r\n        size={20}\r\n        fill={immunity ? 'white' : 'Violet'}\r\n        style={{ marginLeft: 4 }}\r\n      />\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { tProcessedCharacter } from '../game/Character/type'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { Theme } from '../theme'\r\nimport { hasImmunity } from '../game/Character/util'\r\n\r\nexport const usePlayerCharacterNotifications = (\r\n  character: tProcessedCharacter,\r\n  push: (c: JSX.Element, type?: string) => void,\r\n  shake: () => void,\r\n) => {\r\n  const health = character.health\r\n  const level = character.level\r\n  const { roundResults } = useCombatContext()\r\n  const [previousHealth, setPreviousHealth] = useState(health)\r\n  const [previousLevel, setPreviousLevel] = useState(level)\r\n  useEffect(() => {\r\n    const healthDiff = previousHealth - health\r\n    if (healthDiff > 0) {\r\n      push(\r\n        <span style={{ fontFamily: Theme.titleFont, fontSize: 36 }}>\r\n          - {healthDiff}\r\n        </span>,\r\n      )\r\n      shake()\r\n    }\r\n    if (healthDiff < 0) {\r\n      push(\r\n        <span style={{ fontFamily: Theme.titleFont, fontSize: 36 }}>\r\n          + {Math.abs(healthDiff)}\r\n        </span>,\r\n        'good',\r\n      )\r\n    }\r\n    if (level > previousLevel) {\r\n      push(\r\n        <span style={{ fontFamily: Theme.titleFont, fontSize: 36 }}>\r\n          Level Up!\r\n        </span>,\r\n        'good',\r\n      )\r\n    }\r\n    setPreviousLevel(level)\r\n    setPreviousHealth(health)\r\n  }, [health, level])\r\n\r\n  useEffect(() => {\r\n    const lastRound = roundResults[roundResults.length - 1]\r\n    if (lastRound) {\r\n      if (\r\n        lastRound.sourceResult.weaponDidBreak &&\r\n        lastRound.sourceResult.source.id === character.id\r\n      ) {\r\n        push(\r\n          <span style={{ fontFamily: Theme.titleFont, fontSize: 48 }}>\r\n            Weapon Break!\r\n          </span>,\r\n        )\r\n      }\r\n      const chResult = lastRound.targetResults.find(\r\n        (r) => r.target.id === character.id,\r\n      )\r\n      if (chResult) {\r\n        if (chResult.dodgeSuccess && chResult.accuracySuccess) {\r\n          push(\r\n            <span style={{ fontFamily: Theme.titleFont }}>Dodged!</span>,\r\n            'base',\r\n          )\r\n        }\r\n        if (\r\n          !chResult.dodgeSuccess &&\r\n          chResult.accuracySuccess &&\r\n          chResult.skill.damage &&\r\n          chResult.loggedDamgge.value <= 0\r\n        ) {\r\n          push(\r\n            <span style={{ fontFamily: Theme.titleFont }}>Blocked!</span>,\r\n            'base',\r\n          )\r\n        }\r\n        if (chResult.addedStatus.length > 0) {\r\n          chResult.addedStatus.forEach((status) => {\r\n            if (hasImmunity(character, status)) {\r\n              push(\r\n                <span style={{ fontFamily: Theme.titleFont }}>Immune</span>,\r\n                'base',\r\n              )\r\n            } else {\r\n              push(\r\n                <span\r\n                  style={{\r\n                    textTransform: 'capitalize',\r\n                    fontFamily: Theme.titleFont,\r\n                  }}\r\n                >\r\n                  {status}\r\n                </span>,\r\n                'base',\r\n              )\r\n            }\r\n          })\r\n        }\r\n        if (chResult.perfect && chResult.skill.perfectPierce) {\r\n          push(\r\n            <span style={{ fontFamily: Theme.titleFont }}>Pierced!</span>,\r\n            'base',\r\n          )\r\n        }\r\n        if (chResult.criticalHitSuccess && chResult.skill.damage) {\r\n          push(\r\n            <span style={{ fontFamily: Theme.titleFont }}>Critical!</span>,\r\n            'base',\r\n          )\r\n        }\r\n      }\r\n      if (\r\n        lastRound.sourceResult.source.id === character.id &&\r\n        !lastRound.sourceResult.accuracySuccess\r\n      ) {\r\n        push(\r\n          <span style={{ fontFamily: Theme.titleFont }}>Missed!</span>,\r\n          'base',\r\n        )\r\n      }\r\n    }\r\n  }, [roundResults])\r\n}\r\n","import React from 'react'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { animated } from 'react-spring/renderprops'\r\nimport { noneg } from '../../util'\r\nimport { usePlayerCharacterNotifications } from '../../hooks/usePlayerCharacterNotifications'\r\nimport { Theme } from '../../theme'\r\nimport { NumberChange } from '../NumberChange'\r\n\r\nexport interface HealthPropsT {\r\n  character: tProcessedCharacter\r\n  push: (content: JSX.Element, type?: string) => void\r\n  shake?: () => void\r\n}\r\nexport const Health = (props: HealthPropsT) => {\r\n  const { character, push, shake } = props\r\n  const health = noneg(character.health)\r\n  usePlayerCharacterNotifications(character, push, shake || (() => {}))\r\n\r\n  return (\r\n    <animated.div\r\n      style={{\r\n        fontSize: 64,\r\n        height: 64,\r\n        width: 60,\r\n        textShadow: '1px 1px 10px black',\r\n        color: Theme.healthRedColor,\r\n        fontFamily: 'New Rocker',\r\n        userSelect: 'none',\r\n      }}\r\n    >\r\n      <NumberChange value={health} />\r\n    </animated.div>\r\n  )\r\n}\r\n","import React, { useContext, useState, useEffect, CSSProperties } from 'react'\r\nimport { animated, useTransition } from 'react-spring'\r\nimport { FullContainer } from '../../elements/flex'\r\nimport { v4 } from 'uuid'\r\n\r\nexport interface LocalToastContextT {\r\n  push: (content: JSX.Element) => void\r\n}\r\nexport const defaultValue: LocalToastContextT = {\r\n  push: (content) => {},\r\n}\r\nexport const LocalToastContext = React.createContext<LocalToastContextT>(\r\n  defaultValue,\r\n)\r\nexport const useLocalToast = () => useContext(LocalToastContext)\r\n\r\nexport interface LocalToastProviderProps {\r\n  children: JSX.Element\r\n}\r\nexport const LocalToastProvider = (props: LocalToastProviderProps) => {\r\n  const { children } = props\r\n  const [queue, setQueue] = useState<\r\n    {\r\n      id: string\r\n      content: JSX.Element\r\n    }[]\r\n  >([])\r\n\r\n  useEffect(() => {\r\n    const i = setInterval(() => {\r\n      setQueue((q) => {\r\n        const [f, ...rest] = q\r\n        return rest || []\r\n      })\r\n    }, 3000)\r\n    return () => {\r\n      clearInterval(i)\r\n    }\r\n  }, [])\r\n\r\n  const push = (c: JSX.Element, type?: string) => {\r\n    setQueue((q) => [\r\n      ...q,\r\n      {\r\n        id: v4(),\r\n        content: c,\r\n        type,\r\n      },\r\n    ])\r\n  }\r\n\r\n  return (\r\n    <LocalToastContext.Provider value={{ push }}>\r\n      <>\r\n        <div style={{ position: 'relative' }}>\r\n          <Toast queue={queue} />\r\n        </div>\r\n        {children}\r\n      </>\r\n    </LocalToastContext.Provider>\r\n  )\r\n}\r\n\r\ninterface ToastQT {\r\n  id: string\r\n  type?: string\r\n  content: JSX.Element\r\n}\r\nexport interface ToastPropsT {\r\n  queue: ToastQT[]\r\n  style?: CSSProperties\r\n}\r\nexport const Toast = (props: ToastPropsT) => {\r\n  const { queue, style } = props\r\n  const hasChildren = queue.length > 0\r\n  const animation = useTransition(queue, (q) => q.id, {\r\n    from: {\r\n      transform: 'translate3d(0,40px,0)',\r\n      maxWidth: 0,\r\n      maxHeight: 0,\r\n      opacity: 0,\r\n    },\r\n    enter: {\r\n      transform: 'translate3d(0,0px,0)',\r\n      maxWidth: 180,\r\n      maxHeight: 40,\r\n      opacity: 1,\r\n    },\r\n    leave: {\r\n      transform: 'translate3d(0,-80px,0)',\r\n      maxWidth: 0,\r\n      maxHeight: 0,\r\n      opacity: 0,\r\n    },\r\n  })\r\n\r\n  return (\r\n    <animated.div\r\n      style={{\r\n        position: 'absolute',\r\n        width: '100%',\r\n        display: 'flex',\r\n        height: 0,\r\n        top: -24,\r\n        zIndex: 3,\r\n        ...(style || {}),\r\n      }}\r\n    >\r\n      {animation.map((item) => (\r\n        <animated.div\r\n          key={item.key}\r\n          style={{\r\n            display: 'flex',\r\n            ...item.props,\r\n          }}\r\n        >\r\n          <FullContainer />\r\n          <div\r\n            style={{\r\n              marginBottom: 4,\r\n              marginRight: 4,\r\n              fontSize: 20,\r\n              padding: 2,\r\n              lineHeight: '20px',\r\n              whiteSpace: 'nowrap',\r\n              background:\r\n                'radial-gradient(circle, rgba(0,0,0,0.3) 0%, rgba(0,0,0,0) 100%)',\r\n              ...color(item.item.type),\r\n            }}\r\n          >\r\n            {item.item.content}\r\n          </div>\r\n          <FullContainer />\r\n        </animated.div>\r\n      ))}\r\n    </animated.div>\r\n  )\r\n}\r\n\r\nexport interface LocalToastRpPropsT {\r\n  children: (props: LocalToastContextT) => JSX.Element\r\n  style?: CSSProperties\r\n}\r\nexport const LocalToastRp = (props: LocalToastRpPropsT) => {\r\n  const { children, style } = props\r\n  const [queue, setQueue] = useState<ToastQT[]>([])\r\n\r\n  const push = (c: JSX.Element, type?: string) => {\r\n    setQueue((q) => [\r\n      ...q,\r\n      {\r\n        id: v4(),\r\n        content: c,\r\n        type,\r\n      },\r\n    ])\r\n    setTimeout(() => {\r\n      setQueue((q) => {\r\n        const [f, ...rest] = q\r\n        return rest || []\r\n      })\r\n    }, 4000)\r\n  }\r\n  return (\r\n    <>\r\n      <div style={{ position: 'relative' }}>\r\n        <Toast queue={queue} style={style} />\r\n      </div>\r\n      {children({ push })}\r\n    </>\r\n  )\r\n}\r\n\r\nconst color = (type: string | undefined) => {\r\n  switch (type) {\r\n    case 'good':\r\n      return {\r\n        color: '#aae6bf',\r\n        textShadow: '0px 3px 1px rgba(0,0,0,0.5)',\r\n      }\r\n    case 'base':\r\n      return {\r\n        color: 'rgba(255,255,255,0.8)',\r\n        textShadow: '0px 3px 1px rgba(0,0,0,0.5)',\r\n      }\r\n    default:\r\n      return {\r\n        // color: 'rgba(219, 114, 114, 0.8)',\r\n        // color: 'red',\r\n        color: 'rgba(255,158,158,0.8)',\r\n        textShadow: '0px 3px 1px rgba(0,0,0,1)',\r\n      }\r\n  }\r\n}\r\n","import { useSpring } from 'react-spring'\r\n\r\nconst springConfig = {\r\n  mass: 1,\r\n  tension: 1000,\r\n  friction: 15,\r\n}\r\nconst from = () => ({\r\n  transform: `rotate(0deg)`,\r\n})\r\nconst to = () => ({\r\n  transform: `rotate(3deg)`,\r\n})\r\n\r\nexport const useElementShake = () => {\r\n  const [shakeStyles, dispatch] = useSpring(() => ({\r\n    to: async (next: Function) => {\r\n      await next(to())\r\n    },\r\n\r\n    config: springConfig,\r\n    from: from(),\r\n    immediate: true,\r\n    reset: true,\r\n    reverse: true,\r\n  }))\r\n\r\n  const exec = () => {\r\n    dispatch({\r\n      ...to(),\r\n      config: springConfig,\r\n      from: from(),\r\n      immediate: false,\r\n      reset: true,\r\n      reverse: true,\r\n    } as any)\r\n  }\r\n\r\n  return { styles: shakeStyles, exec }\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { HealthGauge } from '../Gauge'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { TagPreview } from '../TagPreview'\r\nimport { Icon } from '../Icon'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Health } from './Health'\r\nimport { LocalToastRp } from '../../contexts/LocalToastContext'\r\nimport { ZERO_STATS } from '../../game/Stats/constants'\r\nimport { Theme } from '../../theme'\r\nimport { HoverHexBadge } from '../../elements/shapes'\r\nimport { animated } from 'react-spring'\r\nimport { useElementShake } from '../../hooks/useElementShake'\r\n\r\nexport interface EnemyCharacterPropsT {\r\n  character: tProcessedCharacter\r\n  activeCharacter: tProcessedCharacter\r\n  hoverable?: boolean\r\n  selected?: boolean\r\n  isHovering?: boolean\r\n  isBoss?: boolean\r\n  onClick?: () => void\r\n}\r\nexport const EnemyCharacter = (props: EnemyCharacterPropsT) => {\r\n  const {\r\n    character,\r\n    activeCharacter,\r\n    isBoss = false,\r\n    isHovering,\r\n    onClick,\r\n  } = props\r\n  const active = activeCharacter?.id === character?.id\r\n  const { styles, exec } = useElementShake()\r\n  return (\r\n    <animated.div style={styles}>\r\n      <animated.div\r\n        onClick={() => (onClick && character.health > 0 ? onClick() : null)}\r\n        style={{\r\n          borderWidth: 2,\r\n          width: isBoss ? 600 : 320,\r\n          position: 'relative',\r\n          cursor: onClick ? 'pointer' : 'default',\r\n          color: 'rgba(255,255,255,0.8)',\r\n          opacity: character.health <= 0 ? 0.5 : 1,\r\n          transition: 'all 0.4s',\r\n          transform: active ? 'scale(1.05)' : 'scale(0.95)',\r\n        }}\r\n      >\r\n        <FlexContainer style={{ alignItems: 'center' }}>\r\n          <FlexContainer>\r\n            <Icon\r\n              src={character.icon || ''}\r\n              shadow\r\n              fill={\r\n                (activeCharacter && character.id === activeCharacter.id) ||\r\n                isHovering\r\n                  ? 'lightsalmon'\r\n                  : 'white'\r\n              }\r\n              size={64}\r\n              style={{ zIndex: 1, position: 'relative', marginRight: -24 }}\r\n            />\r\n          </FlexContainer>\r\n          <FlexContainer $full $direction='column'>\r\n            <FlexContainer\r\n              style={{\r\n                justifyContent: 'flex-end',\r\n              }}\r\n            >\r\n              <span\r\n                style={{\r\n                  padding: '2px 4px',\r\n                  textAlign: 'right',\r\n                  fontSize: 18,\r\n                  lineHeight: '18px',\r\n                  background: 'rgba(0,0,0,0.4)',\r\n                  textShadow: '1px 1px 2px black',\r\n                  fontFamily: Theme.titleFont,\r\n                  color: isBoss\r\n                    ? 'red'\r\n                    : isHovering\r\n                    ? 'lightsalmon'\r\n                    : 'rgba(255,255,255,0.8)',\r\n                }}\r\n              >\r\n                {character.name}\r\n              </span>\r\n            </FlexContainer>\r\n            <div style={{ boxShadow: '0px 4px 15px rgba(0,0,0,1)' }}>\r\n              <HealthGauge\r\n                character={character}\r\n                height={20}\r\n                showNumbers={false}\r\n              />\r\n            </div>\r\n            <HoverHexBadge\r\n              direction='down'\r\n              content={<BoxContainer>Enemy Level</BoxContainer>}\r\n              position={{\r\n                left: -6,\r\n                bottom: -12,\r\n              }}\r\n              size={32}\r\n              childStyle={{\r\n                color: 'lightcoral',\r\n                paddingTop: 1,\r\n              }}\r\n            >\r\n              {character.level}\r\n            </HoverHexBadge>\r\n            <FlexContainer\r\n              style={{\r\n                position: 'absolute',\r\n                bottom: '-12px',\r\n                left: '40px',\r\n              }}\r\n            >\r\n              {character.status.map((status, i) => (\r\n                <TagPreview key={i} status={status} />\r\n              ))}\r\n              {character.immunities.map((status, i) => (\r\n                <TagPreview\r\n                  key={i}\r\n                  immunity={true}\r\n                  status={{\r\n                    type: status,\r\n                    immunities: [],\r\n                    stack: 0,\r\n                    stats: ZERO_STATS,\r\n                    duration: -1,\r\n                  }}\r\n                />\r\n              ))}\r\n            </FlexContainer>\r\n            <FlexContainer\r\n              style={{\r\n                position: 'absolute',\r\n                bottom: '-22px',\r\n                left: 'calc(100% - 58px)',\r\n                alignItems: 'center',\r\n                justifyContent: 'flex-start',\r\n              }}\r\n            >\r\n              {character.stats.armor > 0 && (\r\n                <HoverHexBadge\r\n                  direction='down'\r\n                  content={<BoxContainer>Armor</BoxContainer>}\r\n                  size={28}\r\n                  childStyle={{\r\n                    color: Theme.physicalColor,\r\n                    paddingTop: 1,\r\n                  }}\r\n                >\r\n                  <span>{character.stats.armor}</span>\r\n                </HoverHexBadge>\r\n              )}\r\n              {character.stats.resistance > 0 && (\r\n                <HoverHexBadge\r\n                  direction='down'\r\n                  content={<BoxContainer>Magic Resistance</BoxContainer>}\r\n                  size={28}\r\n                  childStyle={{\r\n                    color: Theme.magicColor,\r\n                    paddingTop: 1,\r\n                  }}\r\n                >\r\n                  <span>{character.stats.resistance}</span>\r\n                </HoverHexBadge>\r\n              )}\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n          <LocalToastRp\r\n            style={{ top: -24, right: -30, flexDirection: 'column' }}\r\n          >\r\n            {({ push }) => (\r\n              <Health character={character} push={push} shake={exec} />\r\n            )}\r\n          </LocalToastRp>\r\n        </FlexContainer>\r\n      </animated.div>\r\n    </animated.div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { RedButton } from '../../elements/button'\r\nimport { EnemyCharacter } from '../EnemyCharacter'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\n\r\nexport interface CombatPartyPropsT {\r\n  party: tProcessedParty\r\n}\r\nexport const CombatParty = (props: CombatPartyPropsT) => {\r\n  const { party } = props\r\n  const { activeCharacter, selectedSkill, next } = useCombatContext()\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { setShowSkillTooltips, hoverQueueCharacterId } = useUIContext()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          padding: '0 120px',\r\n          height: 112,\r\n          cursor: selectedSkill?.targetType === 'group' ? 'pointer' : 'default',\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <div key={c.id}>\r\n            <EnemyCharacter\r\n              activeCharacter={activeCharacter}\r\n              character={c}\r\n              isBoss={currentEncounter?.type === 'boss'}\r\n              isHovering={hoverQueueCharacterId === c.id}\r\n            />\r\n\r\n            <div style={{ height: 48 }}>\r\n              {selectedSkill &&\r\n                selectedSkill.targetType === 'single' &&\r\n                c.health > 0 &&\r\n                activeCharacter.partyId === PLAYER_PARTY_ID && (\r\n                  <FlexContainer\r\n                    $center\r\n                    style={{\r\n                      marginTop: -11,\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        boxShadow: '0px 2px 5px black',\r\n                        marginTop: -2,\r\n                        height: 36,\r\n                      }}\r\n                    >\r\n                      <RedButton\r\n                        onClick={() => {\r\n                          next(c)\r\n                          setShowSkillTooltips(false)\r\n                        }}\r\n                        $direction='down'\r\n                      >\r\n                        Attack\r\n                      </RedButton>\r\n                    </div>\r\n                  </FlexContainer>\r\n                )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && selectedSkill.targetType === 'group' && (\r\n        <FlexContainer $center style={{ marginTop: -48 }}>\r\n          <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n            <RedButton\r\n              onClick={() => {\r\n                next(party)\r\n                setShowSkillTooltips(false)\r\n              }}\r\n            >\r\n              Attack Group\r\n            </RedButton>\r\n          </div>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface AppHeaderPropsT {\r\n  children?: JSX.Element\r\n  left?: JSX.Element\r\n  right?: JSX.Element\r\n}\r\n\r\nexport const AppHeader = (props: AppHeaderPropsT) => {\r\n  const { children, left, right } = props\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        $center\r\n        style={{\r\n          background: Theme.darkBgColorSolid,\r\n          height: 52,\r\n          borderBottom: '2px solid rgba(255,255,255,0.3)',\r\n          boxShadow: '1px 1px 1px black',\r\n        }}\r\n      >\r\n        <FlexContainer $full>{left}</FlexContainer>\r\n        <FlexContainer $full>{children}</FlexContainer>\r\n        <FlexContainer $full>{right}</FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport Gold from '../../icons/svg/delapouite/coins.svg'\r\nimport { Icon } from '../Icon'\r\nimport { NumberChange } from '../NumberChange'\r\n\r\nexport const PartyResources = () => {\r\n  const { party } = usePartyContext()\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{ alignItems: 'center', paddingRight: 20, color: '#ded9a6' }}\r\n    >\r\n      <Icon src={Gold} size={18} style={{ marginRight: 8 }} fill='#ded9a6' />\r\n      <NumberChange value={party.gold} />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { AppHeader } from '../AppHeader'\r\nimport { PartyResources } from '../PartyResources'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { tQueue } from '../../game/Queue/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { getMax, getFirst, getSortedIds } from '../../game/Queue/util'\r\nimport { Theme } from '../../theme'\r\nimport { CharacterIcon } from '../CharacterIcon'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\n\r\nconst size = 40\r\nexport interface CombatQueuePropsT {\r\n  queue: tQueue\r\n  characters: tProcessedCharacter[]\r\n}\r\nexport const CombatQueue = (props: CombatQueuePropsT) => {\r\n  const { queue, characters } = props\r\n  const { isRunning } = useCombatContext()\r\n  const history = useHistory()\r\n  const { setHoverQueueCharacterId } = useUIContext()\r\n  const first = characters.find(\r\n    (c) => c.id === getFirst(queue),\r\n  ) as tProcessedCharacter\r\n  const sortedIds = getSortedIds(queue)\r\n  const bigList = [\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n  ]\r\n  const count = Math.floor((800 - 52) / size)\r\n  const [f, ...list] = Array(count)\r\n    .fill(null)\r\n    .map((_, i) => bigList[i])\r\n    .map((id) => characters.find((c) => c.id === id))\r\n    .filter((c) => c !== undefined)\r\n  const max = getMax(queue)\r\n  const min = 25\r\n  const widthCoef = max > min ? 100 / max : 100 / min\r\n  return (\r\n    <AppHeader\r\n      left={\r\n        <Button onClick={() => history.push('/')} style={{ borderBottom: 0 }}>\r\n          Restart\r\n        </Button>\r\n      }\r\n      right={\r\n        <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n          <PartyResources />\r\n        </FlexContainer>\r\n      }\r\n    >\r\n      <>\r\n        {first && isRunning && (\r\n          <FlexContainer\r\n            style={{\r\n              width: 800,\r\n              flexDirection: 'row-reverse',\r\n              boxShadow: '0px 0px 3px black',\r\n              borderLeft: '1px solid rgba(255,255,255,0.3)',\r\n              background: Theme.mediumBgColor,\r\n            }}\r\n          >\r\n            <FlexContainer\r\n              style={{ position: 'relative', marginLeft: size, zIndex: 7 }}\r\n            >\r\n              <CharacterIcon\r\n                character={first}\r\n                size={64}\r\n                width={64}\r\n                height={64}\r\n                style={{ borderTop: 'none' }}\r\n              />\r\n              <FlexContainer\r\n                $direction='column'\r\n                style={{\r\n                  position: 'absolute',\r\n                  background: 'rgba(255,255,255,0.8)',\r\n                  color: Theme.darkBgColor,\r\n                  zIndex: 2,\r\n                  width: 120,\r\n                  top: 16,\r\n                  paddingLeft: 4,\r\n                  right: '-124px',\r\n                }}\r\n              >\r\n                {first && <span>{first.name}'s Turn</span>}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n            <FlexContainer $full $direction='column'>\r\n              <FullContainer />\r\n              <FlexContainer $full style={{ position: 'relative' }}>\r\n                {characters\r\n                  .filter((c) => c.id !== first?.id && c.health > 0)\r\n                  .map((c, i) => (\r\n                    <div\r\n                      key={`${c?.id}-${i}`}\r\n                      style={{\r\n                        height: size - 10,\r\n                        width: size - 7,\r\n                        position: 'absolute',\r\n                        bottom: '2px',\r\n                        right: `calc(${queue[c.id] * widthCoef}% - ${\r\n                          size - 6\r\n                        }px)`,\r\n                        transition: 'all 0.3s',\r\n                        zIndex: i,\r\n                      }}\r\n                      onMouseEnter={() => setHoverQueueCharacterId(c.id)}\r\n                      onMouseLeave={() => setHoverQueueCharacterId(undefined)}\r\n                    >\r\n                      <CharacterIcon\r\n                        character={c}\r\n                        size={size}\r\n                        width={size}\r\n                        index={i}\r\n                        style={{ borderBottom: 'none' }}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        )}\r\n      </>\r\n    </AppHeader>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { tCharacter } from '../../game/Character/type'\r\n\r\nexport const Span = (color: string, text: JSX.Element | string) => (\r\n  <span style={{ color, fontWeight: 'bold' }}>{text}</span>\r\n)\r\nexport const SkillSpan = (skill: tSkill) => Span('plum', skill.name)\r\n\r\nexport const NameSpanBuilder = (party: tParty, enemyParty: tParty) => (\r\n  character: tCharacter,\r\n) => {\r\n  const isUserParty = character.partyId === party.id\r\n  const isEnemyParty = character.partyId === enemyParty.id\r\n  const color = isUserParty\r\n    ? 'lightgreen'\r\n    : isEnemyParty\r\n    ? 'lightsalmon'\r\n    : 'white'\r\n\r\n  return Span(color, character.name)\r\n}\r\n","import React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport { useCombatContext } from '../CombatContext'\r\nimport { Monospace } from '../../elements/monospace'\r\nimport { NameSpanBuilder, SkillSpan, Span } from './util'\r\nimport { getDamageResistance } from '../../game/Character/util'\r\nimport { STATUS_CONFIG } from '../../game/Status/constants'\r\n\r\nexport interface CombatLogContextT {\r\n  combatLog: JSX.Element[]\r\n  clear: () => void\r\n}\r\nconst defualtValue: CombatLogContextT = {\r\n  combatLog: [],\r\n  clear: () => {},\r\n}\r\nexport const CombatLogContext = createContext<CombatLogContextT>(defualtValue)\r\nexport const useCombatLogContext = () => useContext(CombatLogContext)\r\n\r\ntype DeadLogT = Record<string, boolean | undefined>\r\n\r\nexport interface CombatLogContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const CombatLogContextProvider = (\r\n  props: CombatLogContextProviderPropsT,\r\n) => {\r\n  const { children } = props\r\n  const { activeRound, roundResults, enemyParty, party } = useCombatContext()\r\n  const [combatLog, setCombatLog] = useState<JSX.Element[]>([])\r\n  const clear = () => setCombatLog([])\r\n  const [deadLog, setDeadLog] = useState<DeadLogT>({})\r\n  const NameSpan = NameSpanBuilder(party, enemyParty)\r\n  const log = (line: JSX.Element) =>\r\n    setCombatLog((log) => [\r\n      ...log,\r\n      <Monospace style={{ display: 'inline-block', fontWeight: 'normal' }}>\r\n        {line}\r\n      </Monospace>,\r\n    ])\r\n\r\n  useEffect(() => {\r\n    const characters = [...enemyParty.characters, ...party.characters]\r\n    setTimeout(() => {\r\n      characters.forEach((character) => {\r\n        if (character.health <= 0 && !deadLog[character.id]) {\r\n          setDeadLog((dLog) => ({ ...dLog, [character.id]: true }))\r\n          log(<span>{Span('lightcoral', `${character.name} died.`)}</span>)\r\n        }\r\n      })\r\n    }, 5)\r\n  }, [enemyParty, party])\r\n\r\n  useEffect(() => {\r\n    if (activeRound && activeRound) {\r\n      log(\r\n        <span>\r\n          {NameSpan(activeRound.sourceResult.source)} uses{' '}\r\n          {SkillSpan(activeRound.sourceResult.skill)}.\r\n        </span>,\r\n      )\r\n    }\r\n  }, [activeRound])\r\n\r\n  useEffect(() => {\r\n    if (roundResults.length === 0) return\r\n    const latestRounds = roundResults[roundResults.length - 1]\r\n    const baseRound = latestRounds.sourceResult\r\n    if (!baseRound) return\r\n\r\n    if (baseRound.skill.damage && baseRound.passedCount === 0) {\r\n      log(<span>{baseRound.source.name}'s attack missed.</span>)\r\n    }\r\n    if (!baseRound.skill.damage && !baseRound.perfect) {\r\n      log(<span>{SkillSpan(baseRound.skill)} failed.</span>)\r\n    }\r\n    if (baseRound.criticalHitSuccess) {\r\n      log(<span>{Span('gold', 'Critical Hit!')}</span>)\r\n    }\r\n    if (baseRound.perfect && baseRound.rollResults.length > 0) {\r\n      log(<span>{Span('gold', 'Perfect!')}</span>)\r\n    }\r\n    latestRounds.targetResults.forEach((round) => {\r\n      const targetParty = party.id === round.source.partyId ? enemyParty : party\r\n      if (round.passedCount > 0) {\r\n        if (round.dodgeSuccess) {\r\n          log(<span>{NameSpan(round.target)} dodged the attack.</span>)\r\n        } else if (round.totalDamage.value > 0) {\r\n          log(\r\n            <span>\r\n              {SkillSpan(round.skill)} deals{' '}\r\n              {Span('white', `${round.loggedDamgge.value} damage`)} to{' '}\r\n              {NameSpan(round.target)}.\r\n            </span>,\r\n          )\r\n        } else if (round.skill.damage) {\r\n          log(\r\n            <span>\r\n              {SkillSpan(round.skill)} did no damage to {NameSpan(round.target)}\r\n              .\r\n            </span>,\r\n          )\r\n        }\r\n        if (round.splashDamage.value > 0) {\r\n          targetParty.characters\r\n            .filter((c) => c.id !== round.target.id && c.health > 0)\r\n            .forEach((subTarget) => {\r\n              const splashDamageResistance = getDamageResistance(\r\n                subTarget,\r\n                round.splashDamage,\r\n              )\r\n              log(\r\n                <span>\r\n                  {SkillSpan(round.skill)} deals{' '}\r\n                  {Span(\r\n                    'white',\r\n                    `${\r\n                      round.splashDamage.value - splashDamageResistance\r\n                    } splash damage`,\r\n                  )}{' '}\r\n                  to {NameSpan(subTarget)}.\r\n                </span>,\r\n              )\r\n            })\r\n        }\r\n\r\n        if (round.reflectedDamage.value > 0) {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} reflected{' '}\r\n              {Span('white', `${round.reflectedDamage.value} damage`)}\r\n            </span>,\r\n          )\r\n        }\r\n\r\n        /* TODO\r\n        if (round.healing > 0) {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} gained{' '}\r\n              {Span('white', `${round.healing} HP`)} from{' '}\r\n              {SkillSpan(round.skill)}\r\n            </span>,\r\n          )\r\n        }\r\n        */\r\n\r\n        round.addedStatus.forEach((status) => {\r\n          const statusConfig = STATUS_CONFIG[status]\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} became {status}\r\n              {statusConfig.duration > 0\r\n                ? ` (${statusConfig.duration} turns)`\r\n                : ''}\r\n              .\r\n            </span>,\r\n          )\r\n        })\r\n      }\r\n    })\r\n  }, [roundResults.length])\r\n\r\n  return (\r\n    <CombatLogContext.Provider value={{ combatLog, clear }}>\r\n      {children}\r\n    </CombatLogContext.Provider>\r\n  )\r\n}\r\n","import React, { useRef, useEffect, useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { useCombatLogContext } from '../../contexts/CombatLogContext'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport { Button } from '../../elements/button'\r\nimport { Theme } from '../../theme'\r\n\r\nexport const CombatLog = () => {\r\n  const { combatLog } = useCombatLogContext()\r\n  const scrollRef = useRef<HTMLDivElement>(null)\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n  useEffect(() => {\r\n    if (scrollRef.current && isExpanded) {\r\n      scrollRef.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n  }, [combatLog])\r\n  const style = useSpring({\r\n    minHeight: isExpanded ? 263 : 0,\r\n    maxHeight: isExpanded ? 263 : 0,\r\n  })\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{\r\n        minWidth: 300,\r\n        overflow: 'auto',\r\n        background: Theme.darkBgColor,\r\n        fontSize: 12,\r\n        color: 'rgba(255,255,255,0.8)',\r\n      }}\r\n    >\r\n      <FlexContainer\r\n        style={{\r\n          background: Theme.darkBgColor,\r\n          padding: 8,\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <FullContainer>Combat Log</FullContainer>\r\n        <Button\r\n          onClick={() => setIsExpanded((v) => !v)}\r\n          style={{ padding: '2px 8px' }}\r\n        >\r\n          {isExpanded ? '_' : '+'}\r\n        </Button>\r\n      </FlexContainer>\r\n      <animated.div\r\n        style={{\r\n          overflow: 'auto',\r\n          ...style,\r\n        }}\r\n      >\r\n        <FlexContainer $direction='column' style={{ padding: 8 }}>\r\n          {combatLog.map((line, i) => (\r\n            <span key={i}>{line}</span>\r\n          ))}\r\n        </FlexContainer>\r\n        <div ref={scrollRef} />\r\n      </animated.div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { FlexContainer, FullContainer } from '../elements/flex'\r\nimport { RoundResultRenderer } from '../components/RoundResultRenderer'\r\nimport { CombatActions } from '../components/CombatActions'\r\nimport { CombatParty } from '../components/CombatParty'\r\nimport { CombatQueue } from '../components/CombatQueue'\r\nimport { CombatLog } from '../components/CombatLog'\r\nimport { useUIContext } from '../contexts/UIContext'\r\nimport { useCombatStart } from '../hooks/useCombatStart'\r\nimport { useCombatLogContext } from '../contexts/CombatLogContext'\r\n\r\nexport const Combat = () => {\r\n  const {\r\n    enemyParty,\r\n    activeCharacter,\r\n    characters,\r\n    queue,\r\n    isRunning,\r\n    isRenderingResult,\r\n    onSkillSelect,\r\n  } = useCombatContext()\r\n\r\n  const { setOnCharacterConsumableClick } = useUIContext()\r\n  const { clear } = useCombatLogContext()\r\n  useCombatStart()\r\n  useEffect(() => {\r\n    setOnCharacterConsumableClick((c, index, item) => {\r\n      if (!c) return\r\n      if (c.id === activeCharacter.id) {\r\n        onSkillSelect(item.skill, index)\r\n      }\r\n    })\r\n  }, [onSkillSelect, activeCharacter])\r\n  useEffect(() => {\r\n    clear()\r\n  }, [])\r\n\r\n  return (\r\n    <FlexContainer $full style={{ height: '100%' }}>\r\n      <FlexContainer $full $direction='column'>\r\n        <CombatQueue queue={queue} characters={characters} />\r\n        <FlexContainer\r\n          $direction='column'\r\n          $full\r\n          style={{ padding: '30px 10px 0 10px' }}\r\n        >\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{ marginBottom: 24, minHeight: 112 }}\r\n          >\r\n            <CombatParty party={enemyParty} />\r\n          </FlexContainer>\r\n          <FlexContainer $full>\r\n            {isRunning && activeCharacter && (\r\n              <>\r\n                <FullContainer />\r\n                <FlexContainer $direction='column'>\r\n                  <FullContainer />\r\n                  <div style={{ marginTop: 24 }}>\r\n                    {!isRenderingResult && <CombatActions />}\r\n                    <RoundResultRenderer isModal={false} />\r\n                  </div>\r\n                  <FullContainer />\r\n                </FlexContainer>\r\n                <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n                  <FlexContainer $direction='column'>\r\n                    <CombatLog />\r\n                  </FlexContainer>\r\n                </FlexContainer>\r\n              </>\r\n            )}\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useModalContext } from '../contexts/ModalContext'\r\nimport { useCombatLogContext } from '../contexts/CombatLogContext'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { FlexContainer } from '../elements/flex'\r\nimport { Icon } from '../components/Icon'\r\nimport { Theme } from '../theme'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\n\r\nexport const useCombatStart = (delay: number = 1000) => {\r\n  const { open, close } = useModalContext()\r\n  const { clear } = useCombatLogContext()\r\n  const { started } = useGameStateContext()\r\n  const { enemyParty, start, reset } = useCombatContext()\r\n  useEffect(() => {\r\n    clear()\r\n    if (started) {\r\n      open(\r\n        <div style={{ textAlign: 'center' }}>\r\n          <h1 style={{ fontFamily: Theme.titleFont, userSelect: 'none' }}>\r\n            Combat Start!\r\n          </h1>\r\n          <FlexContainer\r\n            style={{\r\n              justifyContent: 'space-around',\r\n              marginTop: 32,\r\n              marginBottom: 40,\r\n            }}\r\n          >\r\n            {enemyParty.characters.map((c) => (\r\n              <FlexContainer\r\n                key={c.id}\r\n                style={{\r\n                  background: '#c27a5d',\r\n                  border: '2px solid rgba(255,255,255,0.8)',\r\n                  height: 60,\r\n                  width: 60,\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                }}\r\n              >\r\n                <Icon\r\n                  src={c.icon || ''}\r\n                  shadow\r\n                  fill={'white'}\r\n                  size={60}\r\n                  style={{ zIndex: 1, position: 'relative' }}\r\n                />\r\n              </FlexContainer>\r\n            ))}\r\n          </FlexContainer>\r\n        </div>,\r\n        {},\r\n        true,\r\n      )\r\n      setTimeout(() => {\r\n        close()\r\n        start()\r\n      }, 1500)\r\n    }\r\n    return () => {\r\n      reset()\r\n      clear()\r\n    }\r\n  }, [])\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Route, useHistory, useLocation } from 'react-router-dom'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport { useModalContext } from '../contexts/ModalContext'\r\nimport { tRewardEncounter } from '../game/Encounter/type'\r\nimport { Theme } from '../theme'\r\n\r\nexport const makeRoute = (path: string, Component: React.FC) => (\r\n  <Route path={`${path}`}>\r\n    <Component />\r\n  </Route>\r\n)\r\n\r\nexport const RouteController = () => {\r\n  const { currentEncounter, floor, floors, started } = useGameStateContext()\r\n  const history = useHistory()\r\n  const { open } = useModalContext()\r\n  useEffect(() => {\r\n    if (!started) {\r\n      history.push('/')\r\n    }\r\n    if (floor > floors.length - 2) {\r\n      open(\r\n        <div style={{ textAlign: 'center', fontFamily: Theme.titleFont }}>\r\n          <h1>You've Defeated the Lich! You did it!</h1>\r\n        </div>,\r\n      )\r\n      history.push('/')\r\n    } else if (\r\n      currentEncounter &&\r\n      !currentEncounter.completed &&\r\n      (currentEncounter.type === 'combat' ||\r\n        currentEncounter.type === 'boss' ||\r\n        (currentEncounter.type === 'reward' &&\r\n          (currentEncounter as tRewardEncounter).isMimic &&\r\n          (currentEncounter as tRewardEncounter).isOpened))\r\n    ) {\r\n      history.push('/combat')\r\n    } else if (started && currentEncounter && currentEncounter.completed) {\r\n      history.push('/party')\r\n    }\r\n  }, [currentEncounter, started])\r\n  return null\r\n}\r\n","import React, { useState, CSSProperties } from 'react'\r\nimport { withStyle } from 'styletron-react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Button } from '../../elements/button'\r\nimport { tShopEncounter } from '../../game/Encounter/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { Theme } from '../../theme'\r\nimport { ItemCard } from '../ItemCard'\r\n\r\nconst CardList = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  }\r\n})\r\n\r\ninterface ShopTabT {\r\n  key: string\r\n  label: string\r\n  render: (\r\n    encounter: tShopEncounter,\r\n    purchaseItem: (item: tArmor | tWeapon | tConsumable, cost: number) => void,\r\n    query: string,\r\n  ) => JSX.Element\r\n}\r\nconst tabs: ShopTabT[] = [\r\n  {\r\n    key: 'all',\r\n    label: 'All',\r\n    render: (encounter: tShopEncounter, purchaseItem, query) => (\r\n      <FlexContainer $direction='column'>\r\n        <h3>Consumables</h3>\r\n        <CardList>\r\n          {encounter.items\r\n            .filter(\r\n              (i) =>\r\n                i.itemType === 'consumable' &&\r\n                (query\r\n                  ? JSON.stringify(i)\r\n                      .toLowerCase()\r\n                      .includes(query.toLowerCase())\r\n                  : true),\r\n            )\r\n            .map((a) => (\r\n              <ItemCard\r\n                item={a as tConsumable}\r\n                showBuyButton={true}\r\n                cost={encounter.costs[a.id]}\r\n                onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n              />\r\n            ))}\r\n        </CardList>\r\n        <h3>Weapons</h3>\r\n        <CardList>\r\n          {encounter.items\r\n            .filter(\r\n              (i) =>\r\n                i.itemType === 'weapon' &&\r\n                (query\r\n                  ? JSON.stringify(i)\r\n                      .toLowerCase()\r\n                      .includes(query.toLowerCase())\r\n                  : true),\r\n            )\r\n            .map((w) => (\r\n              <ItemCard\r\n                item={w}\r\n                showBuyButton={true}\r\n                cost={encounter.costs[w.id]}\r\n                onBuyClick={() => purchaseItem(w, encounter.costs[w.id])}\r\n              />\r\n            ))}\r\n        </CardList>\r\n        <h3>Armor</h3>\r\n        <CardList>\r\n          {encounter.items\r\n            .filter(\r\n              (i) =>\r\n                i.itemType === 'armor' &&\r\n                (query\r\n                  ? JSON.stringify(i)\r\n                      .toLowerCase()\r\n                      .includes(query.toLowerCase())\r\n                  : true),\r\n            )\r\n            .map((a) => (\r\n              <ItemCard\r\n                item={a}\r\n                showBuyButton={true}\r\n                cost={encounter.costs[a.id]}\r\n                onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n              />\r\n            ))}\r\n        </CardList>\r\n      </FlexContainer>\r\n    ),\r\n  },\r\n  {\r\n    key: 'weapons',\r\n    label: 'Weaons',\r\n    render: (encounter: tShopEncounter, purchaseItem, query) => (\r\n      <CardList>\r\n        {encounter.items\r\n          .filter(\r\n            (i) =>\r\n              i.itemType === 'weapon' &&\r\n              (query\r\n                ? JSON.stringify(i).toLowerCase().includes(query.toLowerCase())\r\n                : true),\r\n          )\r\n          .map((w) => (\r\n            <ItemCard\r\n              item={w}\r\n              showBuyButton={true}\r\n              cost={encounter.costs[w.id]}\r\n              onBuyClick={() => purchaseItem(w, encounter.costs[w.id])}\r\n            />\r\n          ))}\r\n      </CardList>\r\n    ),\r\n  },\r\n  {\r\n    key: 'armor',\r\n    label: 'Armor',\r\n    render: (encounter: tShopEncounter, purchaseItem, query) => (\r\n      <CardList>\r\n        {encounter.items\r\n          .filter(\r\n            (i) =>\r\n              i.itemType === 'armor' &&\r\n              (query\r\n                ? JSON.stringify(i).toLowerCase().includes(query.toLowerCase())\r\n                : true),\r\n          )\r\n          .map((a) => (\r\n            <ItemCard\r\n              item={a}\r\n              showBuyButton={true}\r\n              cost={encounter.costs[a.id]}\r\n              onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n            />\r\n          ))}\r\n      </CardList>\r\n    ),\r\n  },\r\n  {\r\n    key: 'consumables',\r\n    label: 'Consumables',\r\n    render: (encounter: tShopEncounter, purchaseItem) => (\r\n      <CardList>\r\n        {encounter.items\r\n          .filter((i) => i.itemType === 'consumable')\r\n          .map((a) => (\r\n            <ItemCard\r\n              item={a}\r\n              showBuyButton={true}\r\n              cost={encounter.costs[a.id]}\r\n              onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n            />\r\n          ))}\r\n      </CardList>\r\n    ),\r\n  },\r\n]\r\n\r\nexport interface ShopPropsT {}\r\nexport const Shop = (props: ShopPropsT) => {\r\n  const {} = props\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { purchaseItem } = usePartyContext()\r\n  const [query, setQuery] = useState('')\r\n  const [activeTab, setActiveTab] = useState(\r\n    tabs.find((t) => t.key === 'all') as ShopTabT,\r\n  )\r\n  const active = (tab: ShopTabT): CSSProperties =>\r\n    tab.key === activeTab.key\r\n      ? {\r\n          borderColor: 'white',\r\n        }\r\n      : {}\r\n  return (\r\n    <BoxContainer\r\n      style={{ margin: '20px 20px 20px 0', flex: 1, minWidth: 762 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <FlexContainer style={{ alignItems: 'center' }}>\r\n        <FullContainer>\r\n          <h1 style={{ margin: 0, fontFamily: Theme.titleFont }}>\r\n            Black Market\r\n          </h1>\r\n        </FullContainer>\r\n        <input\r\n          placeholder='Search Items'\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          style={{\r\n            background: Theme.mediumBgColor,\r\n            border: '1px solid rgba(255,255,255,0.4)',\r\n            padding: 10,\r\n            color: 'white',\r\n            marginRight: 16,\r\n          }}\r\n        />\r\n        <FlexContainer>\r\n          {tabs.map((tab) => (\r\n            <Button\r\n              key={tab.label}\r\n              style={active(tab)}\r\n              onClick={() => setActiveTab(tab)}\r\n            >\r\n              {tab.label}\r\n            </Button>\r\n          ))}\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n      <FlexContainer\r\n        $direction='column'\r\n        $full\r\n        style={{\r\n          overflow: 'auto',\r\n          marginTop: 10,\r\n          height: 'calc(100vh - 374px)',\r\n          overflowY: 'auto',\r\n        }}\r\n      >\r\n        {activeTab.render(\r\n          currentEncounter as tShopEncounter,\r\n          purchaseItem,\r\n          query,\r\n        )}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Kefir from 'kefir'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { tShrineEncounter } from '../../game/Encounter/type'\r\nimport { SkillChecks } from '../SkillChecks'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { resolveCheck } from '../../game/Roll/util'\r\nimport { ZERO_REWARD } from '../../game/Encounter/constants'\r\nimport { commitRewards } from '../../game/Party/util'\r\nimport { Theme } from '../../theme'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { CombatVictoryModalPure } from '../CombatVictoryModal/pure'\r\n\r\nexport interface ShrinePropsT {}\r\nexport const Shrine = (props: ShrinePropsT) => {\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { open, close } = useModalContext()\r\n  const { party, rawParty, updateParty, equipItem } = usePartyContext()\r\n  const encounter = currentEncounter as tShrineEncounter\r\n  const [results, setResults] = useState<boolean[]>([])\r\n  const onClick = (c: tProcessedCharacter) => {\r\n    const stream = Kefir.sequentially(\r\n      200,\r\n      Array(encounter.rolls - 1)\r\n        .fill(0)\r\n        .map((_, i) => ({\r\n          index: i,\r\n          result: resolveCheck(c, encounter.stat),\r\n        })),\r\n    )\r\n    stream.onValue((value) => {\r\n      setResults((r) => [...r, value.result])\r\n    })\r\n    stream.onEnd(() => {})\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (results.length === encounter.rolls - 1) {\r\n      const rewards =\r\n        encounter.results[results.filter((r) => r === true).length]\r\n      if (!rewards) {\r\n        return\r\n      }\r\n      if (rewards.items.length > 0) {\r\n        open(\r\n          <CombatVictoryModalPure\r\n            title='You got an item!'\r\n            showOther={false}\r\n            rewards={rewards}\r\n            onNextClick={close}\r\n            onEquipClick={equipItem}\r\n          />,\r\n        )\r\n      }\r\n      updateParty(commitRewards(rawParty, rewards))\r\n    }\r\n  }, [results])\r\n\r\n  return (\r\n    <BoxContainer\r\n      style={{ margin: '20px 20px 20px 0', flex: 1 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <FlexContainer>\r\n        <FlexContainer $direction='column'>\r\n          <h1\r\n            style={{\r\n              margin: '0 0 24px 0',\r\n              textTransform: 'capitalize',\r\n              fontFamily: Theme.titleFont,\r\n            }}\r\n          >\r\n            {encounter.stat} Shrine\r\n          </h1>\r\n          <div style={{ maxWidth: 300, marginBottom: 48 }}>\r\n            Shines are optional encounters that test one character in your\r\n            party's stats. Be careful, as if you fail, you may get a negative\r\n            outcome!\r\n          </div>\r\n          <FlexContainer>\r\n            <FlexContainer $direction='column'>\r\n              <SkillChecks\r\n                stat={encounter.stat}\r\n                rolls={encounter.rolls - 1}\r\n                results={results}\r\n              />\r\n              <FlexContainer style={{ justifyContent: 'center' }}>\r\n                {party.characters.map((c) => (\r\n                  <Button\r\n                    onClick={() => onClick(c)}\r\n                    disabled={results.length > 0}\r\n                  >\r\n                    {c.name} ({c.stats[encounter.stat]})\r\n                  </Button>\r\n                ))}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n        <FlexContainer\r\n          $direction='column'\r\n          $full\r\n          style={{ padding: '86px 16px 0 16px' }}\r\n        >\r\n          {encounter.results.map((reward, index) => (\r\n            <FlexContainer\r\n              style={{\r\n                padding: 8,\r\n                alignItems: 'center',\r\n                marginBottom: 4,\r\n                background:\r\n                  results.length === encounter.rolls - 1 &&\r\n                  index === results.filter((r) => r === true).length\r\n                    ? 'rgba(144, 238, 144, 0.3)'\r\n                    : 'linear-gradient(90deg, rgba(255,255,255,0.3) 0%, rgba(255,255,255,0) 100%)',\r\n              }}\r\n            >\r\n              <span style={{ fontSize: 24 }}>{index}</span>\r\n              <span\r\n                style={{\r\n                  display: 'inline-block',\r\n                  marginLeft: 8,\r\n                  textTransform: 'capitalize',\r\n                }}\r\n              >\r\n                {reward.gold > 0 && ` ${reward.gold} Gold`}\r\n                {reward.xp > 0 && ` +${reward.xp} Experience`}\r\n                {reward.status.length > 0 && ` ${reward.status}`}\r\n                {reward.items.length > 0 && ` Random Item`}\r\n                {JSON.stringify(reward) === JSON.stringify(ZERO_REWARD) &&\r\n                  ' No Effect'}\r\n              </span>\r\n            </FlexContainer>\r\n          ))}\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { RedButton } from '../../elements/button'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tBossEncounter } from '../../game/Encounter/type'\r\nimport { BOSS_ITEMS } from '../../game/Weapon/constants'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { Theme } from '../../theme'\r\nimport { ItemCard } from '../ItemCard'\r\n\r\nexport const BossRewards = () => {\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { nextFloor } = useGameStateContext()\r\n  const { updateParty, rawParty } = usePartyContext()\r\n  const [chosenReward, setChosenReward] = useState<\r\n    tArmor | tWeapon | undefined\r\n  >()\r\n\r\n  useEffect(() => {\r\n    updateParty({\r\n      ...rawParty,\r\n      characters: rawParty.characters.map((c) => ({\r\n        ...c,\r\n        healthOffset: 0,\r\n      })),\r\n    })\r\n  }, [])\r\n\r\n  if (!currentEncounter) return null\r\n  const boss = (currentEncounter as tBossEncounter).party.characters[0]\r\n\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{\r\n        padding: 16,\r\n        background: Theme.darkBgColor,\r\n        marginRight: 16,\r\n        marginTop: 16,\r\n      }}\r\n    >\r\n      <h1\r\n        style={{\r\n          marginTop: 8,\r\n          fontFamily: Theme.titleFont,\r\n          textAlign: 'center',\r\n          color: 'white',\r\n        }}\r\n      >\r\n        Choose your reward\r\n      </h1>\r\n      <FlexContainer $center>\r\n        {(BOSS_ITEMS[boss.id] || []).map((item) => (\r\n          <ItemCard\r\n            key={item.id}\r\n            item={item}\r\n            showBuyButton={!chosenReward || chosenReward.id !== item.id}\r\n            buyText={'Choose This Item'}\r\n            onBuyClick={() => setChosenReward(item)}\r\n          />\r\n        ))}\r\n      </FlexContainer>\r\n      {chosenReward && (\r\n        <FlexContainer $center style={{ marginTop: 24 }}>\r\n          <RedButton\r\n            onClick={() => {\r\n              updateParty({\r\n                ...rawParty,\r\n                items: [...rawParty.items, chosenReward],\r\n              })\r\n              nextFloor()\r\n            }}\r\n          >\r\n            Next Floor\r\n          </RedButton>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Button } from '../../elements/button'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Theme } from '../../theme'\r\nimport { Icon } from '../Icon'\r\nimport ChestIcon from '../../icons/svg/lorc/locked-chest.svg'\r\nimport { tRewardEncounter } from '../../game/Encounter/type'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { commitRewards } from '../../game/Party/util'\r\nimport { CombatVictoryModalPure } from '../CombatVictoryModal/pure'\r\n\r\nexport const Chest = () => {\r\n  const {\r\n    openCurrent,\r\n    completeCurrent,\r\n    currentEncounter,\r\n  } = useGameStateContext()\r\n  const { open, close } = useModalContext()\r\n  const { rawParty, updateParty, equipItem } = usePartyContext()\r\n  useEffect(() => {\r\n    if (\r\n      (currentEncounter as tRewardEncounter).isOpened &&\r\n      !(currentEncounter as tRewardEncounter).isMimic &&\r\n      currentEncounter?.reward\r\n    ) {\r\n      updateParty(commitRewards(rawParty, currentEncounter?.reward))\r\n      open(\r\n        <CombatVictoryModalPure\r\n          title='Rewards!'\r\n          rewards={currentEncounter.reward}\r\n          onNextClick={() => {\r\n            completeCurrent()\r\n            close()\r\n          }}\r\n          onEquipClick={equipItem}\r\n        />,\r\n      )\r\n    }\r\n  }, [(currentEncounter as tRewardEncounter | undefined)?.isOpened])\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{\r\n        margin: '20px 20px 20px 0',\r\n        padding: 16,\r\n        background: Theme.darkBgColor,\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <h1\r\n        style={{\r\n          marginTop: 0,\r\n          color: 'white',\r\n          fontFamily: Theme.titleFont,\r\n          fontWeight: 'normal',\r\n          textAlign: 'center',\r\n        }}\r\n      >\r\n        You found treasure!\r\n      </h1>\r\n      <Icon size={200} src={ChestIcon} style={{ marginBottom: 24 }} />\r\n      <Button onClick={() => openCurrent()}>Open</Button>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Shop } from '../Shop'\r\nimport { Shrine } from '../Shrine'\r\nimport { BossRewards } from '../BossRewards'\r\nimport { Chest } from '../Chest'\r\n\r\nexport const NonCombatEncounter = () => {\r\n  const { currentEncounter } = useGameStateContext()\r\n  return (\r\n    <FlexContainer $direction='column' $full style={{ marginLeft: '60px' }}>\r\n      {currentEncounter && currentEncounter.type === 'shop' && <Shop />}\r\n      {currentEncounter && currentEncounter.type === 'shrine' && <Shrine />}\r\n      {currentEncounter && currentEncounter.type === 'boss' && <BossRewards />}\r\n      {currentEncounter && currentEncounter.type === 'reward' && <Chest />}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\nimport { Theme } from '../theme'\r\n\r\nexport const FakeLink = styled('span', (props: any) => {\r\n  return {\r\n    whiteSpace: 'nowrap',\r\n    ':hover': {\r\n      textDecoration: 'underline',\r\n      cursor: 'pointer',\r\n    },\r\n  }\r\n})\r\n\r\nexport const HeadingSm = styled('span', (props: any) => {\r\n  return {\r\n    fontFamily: Theme.titleFont,\r\n    color: 'white',\r\n    fontSize: '20px',\r\n    display: 'inline-block',\r\n    marginBottom: '16px',\r\n  }\r\n})\r\n\r\nexport const Text = styled('span', (props: any) => {\r\n  return {\r\n    color: 'rgba(255,255,255,0.75)',\r\n    lineHeight: '1.4',\r\n    marginBottom: 16,\r\n  }\r\n})\r\n","import { tEncounter } from '../type'\r\n\r\nexport const ENCOUNTER_TEXTS: Record<\r\n  number,\r\n  Record<number, (pe?: tEncounter) => string>\r\n> = {\r\n  0: {\r\n    0: () =>\r\n      'As your party begins their journey, you travel down an empty road. You arrive at a split path, you must make a choice on which way to proceed.',\r\n    1: () =>\r\n      `After your party's first battle, you notice a that the forest has been covered in a thick darkness. You feel a force pulling you deeper into the forest.`,\r\n  },\r\n  1: {},\r\n  2: {},\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { HeadingSm, Text } from '../../elements/typography'\r\nimport { ENCOUNTER_TEXTS } from '../../game/Encounter/text'\r\nimport { getDepth } from '../../grid/util'\r\n\r\nexport interface ChoicePropsT {}\r\n\r\nexport const Choice = (props: ChoicePropsT) => {\r\n  const {\r\n    floor,\r\n    floors,\r\n    currentEncounter,\r\n    previousEncounter,\r\n    currentHex,\r\n  } = useGameStateContext()\r\n  const currentFloor = floors[floor]\r\n  const depth = currentEncounter\r\n    ? getDepth(currentHex, currentFloor.size) + 1\r\n    : 0\r\n  const text = ENCOUNTER_TEXTS[floor][depth]\r\n  return (\r\n    <FlexContainer $direction='column' style={{ paddingTop: 24 }}>\r\n      <HeadingSm\r\n        style={{\r\n          textAlign: 'center',\r\n        }}\r\n      >\r\n        Your Journey{' '}\r\n        {currentEncounter === undefined && floor === 0 ? 'Begins' : 'Continues'}\r\n        .\r\n      </HeadingSm>\r\n      <Text\r\n        style={{\r\n          marginBottom: 24,\r\n          padding: 8,\r\n        }}\r\n      >\r\n        {text && text()}\r\n      </Text>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Button } from '../../elements/button'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tShopEncounter } from '../../game/Encounter/type'\r\n\r\nexport interface ShopPropsT {\r\n  currentEncounter: tShopEncounter\r\n}\r\nexport const Shop = (props: ShopPropsT) => {\r\n  const { currentEncounter } = props\r\n  const { completeCurrent } = useGameStateContext()\r\n  return (\r\n    <FlexContainer $direction='column' style={{ justifyContent: 'center' }}>\r\n      {currentEncounter.type === 'shop' && (\r\n        <>\r\n          <h3\r\n            style={{\r\n              margin: '0 0 16px 0',\r\n              color: 'white',\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            You found a shop!\r\n          </h3>\r\n          <span\r\n            style={{\r\n              color: 'rgba(255,255,255,0.7)',\r\n              marginBottom: 24,\r\n            }}\r\n          >\r\n            Amidst your journey, you discover a merchant, a traveling salemen\r\n            with all manor of wares to assist in your adventure.\r\n          </span>\r\n        </>\r\n      )}\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        <Button onClick={() => completeCurrent()}>Leave Shop</Button>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Button } from '../../elements/button'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tShrineEncounter } from '../../game/Encounter/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ShrinePropsT {\r\n  currentEncounter: tShrineEncounter\r\n}\r\n\r\nexport const Shrine = (props: ShrinePropsT) => {\r\n  const { completeCurrent } = useGameStateContext()\r\n  return (\r\n    <FlexContainer $direction='column' style={{ justifyContent: 'center' }}>\r\n      <h3\r\n        style={{\r\n          fontFamily: Theme.titleFont,\r\n          fontWeight: 'normal',\r\n          textAlign: 'center',\r\n        }}\r\n      >\r\n        You've discoved a secret shrine.\r\n      </h3>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        <Button onClick={() => completeCurrent()}>Leave Shrine</Button>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Choice } from './Choice'\r\nimport { Shop } from './Shop'\r\nimport { tShopEncounter, tShrineEncounter } from '../../game/Encounter/type'\r\nimport { Shrine } from './Shrine'\r\n\r\nexport const EncounterActions = () => {\r\n  const { currentEncounter } = useGameStateContext()\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{\r\n        background:\r\n          'linear-gradient(0deg, rgba(0,7,12,0) 0%, rgba(0,7,12,0.68) 10%, rgba(0,7,18,1) 35%)',\r\n        marginRight: '60px',\r\n        padding: '16px 8px',\r\n        width: 300,\r\n        color: 'rgba(255,255,255,0.8)',\r\n      }}\r\n    >\r\n      {currentEncounter ? (\r\n        <>\r\n          {currentEncounter.completed ? (\r\n            <Choice />\r\n          ) : (\r\n            <>\r\n              {currentEncounter.type === 'shop' && (\r\n                <Shop currentEncounter={currentEncounter as tShopEncounter} />\r\n              )}\r\n              {currentEncounter.type === 'shrine' && (\r\n                <Shrine\r\n                  currentEncounter={currentEncounter as tShrineEncounter}\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <Choice />\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StaticIconProps } from '.'\r\n\r\nexport const Boss = (props: StaticIconProps) => {\r\n  const { fill = 'white' } = props\r\n  return (\r\n    <g\r\n      style={{\r\n        transform: 'scale(0.01)',\r\n        zIndex: 2,\r\n        filter: 'drop-shadow(3px 3px 2px rgba(0, 0, 0, 0.7)',\r\n      }}\r\n    >\r\n      <g style={{ transform: 'translate(-253px, -220px)' }}>\r\n        <path\r\n          height='24px'\r\n          width='24px'\r\n          d='M92.406 13.02l-.164 156.353c3.064.507 6.208 1.38 9.39 2.627 36.496 14.306 74.214 22.435 111.864 25.473l43.402-60.416 42.317 58.906c36.808-4.127 72.566-12.502 105.967-24.09 3.754-1.302 7.368-2.18 10.818-2.6l1.523-156.252-75.82 95.552-34.084-95.55-53.724 103.74-53.722-103.74-35.442 95.55-72.32-95.55h-.006zm164.492 156.07l-28.636 39.86 28.634 39.86 28.637-39.86-28.635-39.86zM86.762 187.55c-2.173-.08-3.84.274-5.012.762-2.345.977-3.173 2.19-3.496 4.196-.645 4.01 2.825 14.35 23.03 21.36 41.7 14.468 84.262 23.748 126.778 26.833l-17.75-24.704c-38.773-3.285-77.69-11.775-115.5-26.596-3.197-1.253-5.877-1.77-8.05-1.85zm333.275.19c-2.156.052-5.048.512-8.728 1.79-33.582 11.65-69.487 20.215-106.523 24.646l-19.264 26.818c40.427-2.602 80.433-11.287 119.22-26.96 15.913-6.43 21.46-17.81 21.36-22.362-.052-2.276-.278-2.566-1.753-3.274-.738-.353-2.157-.71-4.313-.658zm-18.117 47.438c-42.5 15.87-86.26 23.856-130.262 25.117l-14.76 20.547-14.878-20.71c-44.985-1.745-89.98-10.23-133.905-24.306-12.78 28.51-18.94 61.14-19.603 93.44 37.52 17.497 62.135 39.817 75.556 64.63C177 417.8 179.282 443.62 174.184 467.98c7.72 5.007 16.126 9.144 24.98 12.432l5.557-47.89 18.563 2.154-5.935 51.156c9.57 2.21 19.443 3.53 29.377 3.982v-54.67h18.69v54.49c9.903-.638 19.705-2.128 29.155-4.484l-5.857-50.474 18.564-2.155 5.436 46.852c8.747-3.422 17.004-7.643 24.506-12.69-5.758-24.413-3.77-49.666 9.01-72.988 13.28-24.234 37.718-46 74.803-64.29-.62-33.526-6.687-66.122-19.113-94.23zm-266.733 47.006c34.602.23 68.407 12.236 101.358 36.867-46.604 33.147-129.794 34.372-108.29-36.755 2.315-.09 4.626-.127 6.933-.11zm242.825 0c2.307-.016 4.617.022 6.93.11 21.506 71.128-61.684 69.903-108.288 36.757 32.95-24.63 66.756-36.637 101.358-36.866zM255.164 332.14c11.77 21.725 19.193 43.452 25.367 65.178h-50.737c4.57-21.726 13.77-43.45 25.37-65.18z'\r\n          fill={fill}\r\n          style={{ filter: 'url(#shadow)' }}\r\n        />\r\n      </g>\r\n    </g>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StaticIconProps } from '.'\r\n\r\nexport const Combat = (props: StaticIconProps) => {\r\n  const { fill = '#fff' } = props\r\n  return (\r\n    <g style={{ transform: 'scale(0.01)', zIndex: 2 }}>\r\n      <g style={{ transform: 'translate(-253px, -232px)' }}>\r\n        <path\r\n          d='M19.75 14.438c59.538 112.29 142.51 202.35 232.28 292.718l3.626 3.75.063-.062c21.827 21.93 44.04 43.923 66.405 66.25-18.856 14.813-38.974 28.2-59.938 40.312l28.532 28.53 68.717-68.717c42.337 27.636 76.286 63.646 104.094 105.81l28.064-28.06c-42.47-27.493-79.74-60.206-106.03-103.876l68.936-68.938-28.53-28.53c-11.115 21.853-24.413 42.015-39.47 60.593-43.852-43.8-86.462-85.842-130.125-125.47-.224-.203-.432-.422-.656-.625C183.624 122.75 108.515 63.91 19.75 14.437zm471.875 0c-83.038 46.28-154.122 100.78-221.97 161.156l22.814 21.562 56.81-56.812 13.22 13.187-56.438 56.44 24.594 23.186c61.802-66.92 117.6-136.92 160.97-218.72zm-329.53 125.906l200.56 200.53c-4.36 4.443-8.84 8.793-13.405 13.032L148.875 153.53l13.22-13.186zm-76.69 113.28l-28.5 28.532 68.907 68.906c-26.29 43.673-63.53 76.414-106 103.907l28.063 28.06c27.807-42.164 61.758-78.174 104.094-105.81l68.718 68.717 28.53-28.53c-20.962-12.113-41.08-25.5-59.937-40.313 17.865-17.83 35.61-35.433 53.157-52.97l-24.843-25.655-55.47 55.467c-4.565-4.238-9.014-8.62-13.374-13.062l55.844-55.844-24.53-25.374c-18.28 17.856-36.602 36.06-55.158 54.594-15.068-18.587-28.38-38.758-39.5-60.625z'\r\n          fill={fill}\r\n          style={{ filter: 'url(#shadow)' }}\r\n          fill-rule='evenodd'\r\n        />\r\n      </g>\r\n    </g>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StaticIconProps } from '.'\r\n\r\nexport const Random = (props: StaticIconProps) => {\r\n  const { fill = '#fff' } = props\r\n  return (\r\n    <g style={{ transform: 'scale(0.01)', zIndex: 2 }}>\r\n      <g style={{ transform: 'translate(-253px, -232px)' }}>\r\n        <path\r\n          d='M255.703 44.764c-6.176 0-12.353 1.384-17.137 4.152l-152.752 88.36c-9.57 5.535-9.57 14.29 0 19.826l152.752 88.359c9.57 5.536 24.703 5.536 34.272 0l152.754-88.36c9.57-5.534 9.57-14.289 0-19.824L272.838 48.916c-4.785-2.77-10.96-4.152-17.135-4.152zM238.695 87.27l22.838 14.273c-6.747 1.007-12.586 2.28-17.515 3.818-4.985 1.504-9.272 3.334-12.864 5.489-7.721 4.633-11.09 9.897-10.105 15.793.93 5.86 6.223 12.247 15.875 19.16.26-3.467 1.457-6.652 3.59-9.553 2.077-2.936 5.159-5.629 9.244-8.08 10.28-6.168 22.259-8.83 35.935-7.98 13.722.821 26.568 4.973 38.537 12.455 13.239 8.274 20.334 17.024 21.284 26.251.894 9.194-4.584 17.346-16.436 24.458-13.064 7.838-28.593 10.533-46.588 8.085-18.004-2.508-36.964-9.986-56.877-22.431-20.41-12.756-32.258-25.276-35.547-37.56-3.299-12.347 2.348-22.895 16.938-31.65 4.624-2.774 9.554-5.192 14.79-7.253 5.238-2.061 10.871-3.82 16.901-5.275zm38.678 53.23c-4.169-.007-7.972 1.02-11.406 3.08-4.534 2.72-6.125 5.906-4.774 9.555 1.341 3.587 5.624 7.64 12.85 12.156 7.226 4.516 13.78 7.237 19.666 8.166 5.875.867 11.081-.059 15.615-2.78 4.58-2.747 6.198-5.915 4.858-9.503-1.351-3.65-5.64-7.732-12.866-12.248-7.226-4.516-13.777-7.207-19.652-8.074a27.826 27.826 0 0 0-4.291-.352zm158.494 33.314c-1.938.074-4.218.858-6.955 2.413l-146.935 84.847c-9.57 5.527-17.14 18.638-17.14 29.69v157.699c0 11.05 7.57 15.419 17.14 9.89l146.937-84.843c9.57-5.527 17.137-18.636 17.137-29.688v-157.7c-2.497-8.048-5.23-12.495-10.184-12.308zm-359.763.48c-6.227 0-10.033 5.325-10.155 11.825v157.697c0 11.052 7.57 24.163 17.14 29.69l146.93 84.848c9.57 5.526 17.141 1.156 17.141-9.895v-157.7c0-11.051-7.57-24.159-17.14-29.687L83.09 176.225c-2.567-1.338-4.911-1.93-6.986-1.93zm40.095 52.226l68.114 40.869v25.287l-46.262-27.758v20.64a43.279 43.279 0 0 1 6.262 2.151c2.135.864 4.341 1.98 6.619 3.346 12.953 7.772 23.037 17.902 30.25 30.39 7.212 12.43 10.818 25.912 10.818 40.448 0 14.416-3.938 23.342-11.814 26.777-7.83 3.464-18.72 1.01-32.67-7.36-6.026-3.615-12.005-7.948-17.936-12.996-5.884-4.96-11.744-10.68-17.58-17.16v-27.076c5.789 7.643 11.27 14.06 16.441 19.248 5.22 5.217 10.13 9.205 14.733 11.967 6.643 3.986 11.862 5.092 15.658 3.318 3.843-1.804 5.766-6.19 5.766-13.16 0-7.03-1.923-13.723-5.766-20.08-3.796-6.328-9.015-11.485-15.658-15.47a56.585 56.585 0 0 0-12.598-5.594c-4.46-1.426-9.252-2.335-14.377-2.729V226.52zm270.047 5.732v85.809L400 309.809v25.414l-13.754 8.252v24.777l-23.502 14.102v-24.778L320 383.223v-30.06l38.611-104.331 27.635-16.58zm-23.502 42.978l-27.248 73.28 27.248-16.348V275.23z'\r\n          fill={fill}\r\n          style={{ filter: 'url(#shadow)' }}\r\n        />\r\n      </g>\r\n    </g>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StaticIconProps } from '.'\r\n\r\nexport const Shrine = (props: StaticIconProps) => {\r\n  const { fill = '#fff' } = props\r\n  return (\r\n    <g style={{ transform: 'scale(0.01)', zIndex: 2 }}>\r\n      <g style={{ transform: 'translate(-253px, -232px)' }}>\r\n        <path\r\n          d='M246.406 21.406c-14.586.572-28.81 2.492-42.594 5.594l9.5 35.438c10.742-2.328 21.784-3.8 33.094-4.313v-36.72zm18.688 0v36.72c11.26.532 22.273 2.01 32.97 4.343l9.53-35.532c-13.753-3.082-27.95-4.97-42.5-5.532zm60.562 10.313l-9.53 35.593c10.674 3.416 20.973 7.725 30.78 12.812l18.47-31.97c-12.604-6.63-25.893-12.154-39.72-16.436zm-139.875.06c-13.773 4.28-27.004 9.798-39.56 16.407l18.343 31.75c9.796-5.057 20.06-9.327 30.718-12.718l-9.5-35.44zM381.5 57.5l-18.47 32c9.345 6.022 18.162 12.792 26.345 20.25l26.156-26.156c-10.5-9.696-21.89-18.423-34.03-26.094zm-251.47.063c-12.167 7.697-23.573 16.455-34.093 26.187l25.876 25.875c8.233-7.492 17.125-14.273 26.53-20.313l-18.312-31.75zM255.626 75.97c-99.678 0-180.656 81.01-180.656 180.686 0 99.65 80.977 180.656 180.655 180.656 99.677 0 180.688-80.98 180.688-180.656 0-45.944-17.214-87.905-45.532-119.812-1.284-1.8-2.583-3.594-3.936-5.344l-.563.438c-32.917-34.474-79.306-55.97-130.655-55.97zm0 18.686c47.59 0 90.35 20.44 119.97 53.03 13.164 18.447 22.208 39.743 25.842 62 10.112 61.704-26.617 129.948-91.062 139.533-41.483 6.182-87.313-18.815-93.03-61.94-1.765-13.308 1.52-27.713 8.686-38.78 7.17-11.067 17.735-18.72 31.44-20.28 7.977-.908 16.773 1.222 23.342 5.593 6.57 4.37 10.854 10.442 11.594 18.437v.03c.094.995.085 2.022 0 3.064-3.712-3.68-8.798-5.938-14.437-5.938-11.344 0-20.564 9.19-20.564 20.53 0 11.344 9.22 20.533 20.563 20.533 3.624 0 7.01-.946 9.967-2.595 7.022-2.2 12.792-6.888 16.625-12.47 5-7.275 7.294-16.084 6.47-24.874-1.3-14.016-9.433-25.333-19.876-32.28-10.442-6.947-23.257-10.05-35.812-8.625-19.64 2.238-35.302 13.744-45 28.72-9.698 14.973-13.907 33.487-11.53 51.405 7.274 54.863 63.562 85.533 114.31 77.97 54.573-8.117 91.783-50.963 104.157-100.75-5.308 84.757-75.54 151.686-161.655 151.686-89.58 0-161.97-72.445-161.97-162 0-89.583 72.39-162 161.97-162zm173.094 2.156L402.56 122.97c7.467 8.202 14.288 17.005 20.313 26.374l32-18.47c-7.685-12.147-16.443-23.556-26.156-34.06zm-345.97.157c-9.647 10.453-18.36 21.797-26 33.874l31.656 18.28c6.015-9.322 12.775-18.114 20.22-26.28L82.75 96.97zm-35.375 50.06c-6.64 12.616-12.183 25.91-16.47 39.75l35.25 9.44c3.43-10.743 7.755-21.076 12.876-30.94l-31.655-18.25zm416.875 0l-32.063 18.5c5.08 9.818 9.376 20.097 12.782 30.782l35.75-9.562c-4.285-13.826-9.838-27.117-16.47-39.72zM26.125 204.813c-3.075 13.723-4.964 27.89-5.53 42.407H57c.53-11.257 2.016-22.28 4.344-32.97l-35.22-9.438zm459.375 0l-35.72 9.563c2.313 10.652 3.787 21.632 4.314 32.844h36.937c-.566-14.518-2.455-28.685-5.53-42.407zM20.594 265.906c.566 14.585 2.466 28.81 5.562 42.594l35.188-9.406C59 288.328 57.52 277.244 57 265.906H20.594zm433.5 0c-.517 11.294-1.986 22.336-4.313 33.063l35.69 9.56c3.1-13.79 4.995-28.03 5.56-42.624h-36.936zm-9.125 51.125c-3.386 10.626-7.648 20.86-12.69 30.626l32 18.47c6.6-12.55 12.103-25.772 16.376-39.532l-35.687-9.563zm-378.814.095l-35.22 9.438c4.277 13.774 9.832 27.003 16.44 39.562l31.562-18.22c-5.082-9.812-9.373-20.1-12.782-30.78zm356.813 46.72c-6.05 9.426-12.87 18.31-20.376 26.56l26.062 26.064c9.76-10.55 18.567-21.983 26.28-34.19l-31.967-18.436zm-334.69.25L56.688 382.31c7.672 12.136 16.43 23.503 26.126 34l25.812-25.812c-7.483-8.21-14.307-17.027-20.344-26.406zm301.126 39.53c-8.177 7.454-17.007 14.198-26.344 20.22l18.407 31.905c12.124-7.66 23.476-16.413 33.967-26.094l-26.03-26.03zm-267.594.094l-25.78 25.78c10.514 9.72 21.903 18.5 34.062 26.188l18.25-31.625c-9.412-6.044-18.294-12.846-26.53-20.344zm225.125 29.53c-9.812 5.092-20.13 9.363-30.812 12.78l9.5 35.47c13.816-4.278 27.093-9.815 39.688-16.438l-18.375-31.812zm-182.406.188l-18.25 31.625c12.54 6.595 25.75 12.103 39.5 16.375l9.47-35.313c-10.655-3.392-20.926-7.63-30.72-12.688zm133.564 17.437c-10.706 2.337-21.728 3.81-33 4.344v36.592c14.54-.562 28.724-2.453 42.47-5.53l-9.47-35.407zm-84.78.063l-9.47 35.28c13.773 3.1 27.988 5.023 42.562 5.594V455.25c-11.31-.512-22.353-1.985-33.094-4.313z'\r\n          fill={fill}\r\n          style={{ filter: 'url(#shadow)' }}\r\n        />\r\n      </g>\r\n    </g>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StaticIconProps } from '.'\r\n\r\nexport const Shop = (props: StaticIconProps) => {\r\n  const { fill = 'white' } = props\r\n  return (\r\n    <g style={{ transform: 'scale(0.01)', zIndex: 2 }}>\r\n      <g style={{ transform: 'translate(-253px, -253px)' }}>\r\n        <path\r\n          fill={fill}\r\n          style={{ filter: 'url(#shadow)' }}\r\n          d='M136 25c-16.457 0-31.287 3.45-41.23 8.422C84.826 38.394 81 44.027 81 48c0 3.973 3.826 9.606 13.77 14.578C104.713 67.55 119.543 71 136 71c16.457 0 31.287-3.45 41.23-8.422C187.174 57.606 191 51.973 191 48c0-3.973-3.826-9.606-13.77-14.578C167.287 28.45 152.457 25 136 25zm160 32c-16.457 0-31.287 3.45-41.23 8.422C244.826 70.394 241 76.027 241 80c0 3.973 3.826 9.606 13.77 14.578C264.713 99.55 279.543 103 296 103c4.55 0 8.967-.27 13.2-.758 4.32-5.534 10.53-10.092 17.52-13.588 7.064-3.53 15.262-6.227 24.24-7.98.025-.23.04-.455.04-.674 0-3.973-3.826-9.606-13.77-14.578C327.287 60.45 312.457 57 296 57zM81 75.445V80c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87C189.716 85.574 191 82.515 191 80v-4.555c-1.832 1.158-3.74 2.243-5.72 3.233C172.06 85.288 154.89 89 136 89s-36.06-3.712-49.28-10.322c-1.98-.99-3.888-2.075-5.72-3.233zM376 96.33c-16.457 0-31.287 3.452-41.23 8.424-9.944 4.972-13.77 10.603-13.77 14.576 0 3.973 3.826 9.606 13.77 14.578 9.943 4.972 24.773 8.422 41.23 8.422 16.457 0 31.287-3.45 41.23-8.422 9.944-4.972 13.77-10.605 13.77-14.578 0-3.973-3.826-9.604-13.77-14.576-9.943-4.972-24.773-8.424-41.23-8.424zm-135 11.115v2.313c2.9 1.073 5.67 2.26 8.28 3.564 9.037 4.52 16.8 10.794 20.81 18.69 10.174 2.46 21.72 3.366 32.91 2.718v-13.917c-2.305.116-4.636.187-7 .187-18.89 0-36.06-3.712-49.28-10.322-1.98-.99-3.888-2.075-5.72-3.233zm-160 .024V112c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 6.83 1.972 14.433 3.186 22.216 3.654 1.988-5.227 5.6-9.806 10.19-13.712-12.785.277-25.663-1.26-37.4-4.65-7.796-2.25-14.69-5.2-20.503-8.89zM200 121c-16.457 0-31.287 3.45-41.23 8.422C148.826 134.394 145 140.027 145 144c0 3.973 3.826 9.606 13.77 14.578C168.713 163.55 183.543 167 200 167c16.457 0 31.287-3.45 41.23-8.422C251.174 153.606 255 147.973 255 144c0-3.973-3.826-9.606-13.77-14.578C231.287 124.45 216.457 121 200 121zM81 139.47V144c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 6.328 1.826 13.32 2.993 20.503 3.53V152.75c-8.772-.594-17.406-2.057-25.496-4.393-7.797-2.25-14.69-5.203-20.504-8.89zm240 7.305v4.555c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.285 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.585 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.555c-1.832 1.158-3.74 2.243-5.72 3.233-13.22 6.61-30.39 10.322-49.28 10.322s-36.06-3.712-49.28-10.322c-1.98-.99-3.888-2.075-5.72-3.233zm-48 4.246v13.65c9.435 1.962 19.865 2.647 30 2.06v-13.878c-10.064.53-20.263-.08-30-1.83zm-128 20.425V176c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.555c-1.832 1.158-3.74 2.243-5.72 3.233C236.06 181.288 218.89 185 200 185s-36.06-3.712-49.28-10.322c-1.98-.99-3.888-2.075-5.72-3.233zm-64 .024V176c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 6.328 1.826 13.32 2.993 20.503 3.53V184.75c-8.772-.594-17.406-2.057-25.496-4.393-7.797-2.25-14.69-5.203-20.504-8.89zm240 7.33v4.53c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.285 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.585 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.688-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.202-20.504-8.89zm-48 4.22v13.65c9.435 1.962 19.865 2.647 30 2.06v-13.878c-10.064.53-20.263-.08-30-1.83zM81 203.47V208c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 6.328 1.826 13.32 2.993 20.503 3.53V216.75c-8.772-.594-17.406-2.057-25.496-4.393-7.797-2.25-14.69-5.203-20.504-8.89zm64 0V208c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm176 7.33v4.53c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.285 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.585 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.688-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.202-20.504-8.89zm-48 4.22v13.65c9.435 1.962 19.865 2.647 30 2.06v-13.878c-10.064.53-20.263-.08-30-1.83zm-128 20.45v2.288c2.9 1.073 5.67 2.26 8.28 3.564 9.038 4.52 16.802 10.795 20.812 18.692 17.338 4.196 38.678 3.883 55.412-.948 8.954-2.585 15.845-6.245 20.03-9.87 4.183-3.622 5.466-6.68 5.466-9.196v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm176 7.33v4.53c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.285 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.585 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.688-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.202-20.504-8.89zm-48 4.22v13.65c9.435 1.962 19.865 2.647 30 2.06v-13.878c-10.064.53-20.263-.08-30-1.83zM104 249c-16.457 0-31.287 3.45-41.23 8.422C52.826 262.394 49 268.027 49 272c0 3.973 3.826 9.606 13.77 14.578C72.713 291.55 87.543 295 104 295c16.457 0 31.287-3.45 41.23-8.422C155.174 281.606 159 275.973 159 272c0-3.973-3.826-9.606-13.77-14.578C135.287 252.45 120.457 249 104 249zm151 18.47c-5.813 3.687-12.707 6.64-20.504 8.89-17.97 5.187-38.608 6.05-57.496 2.642v13.664c16.775 3.494 36.694 2.964 52.504-1.6 8.954-2.585 15.845-6.245 20.03-9.87 4.183-3.622 5.466-6.68 5.466-9.196v-4.53zm66 7.33v4.53c0 2.515 1.283 5.574 5.467 9.197 4.045 3.503 10.64 7.03 19.162 9.598 3.74-3.428 8.228-6.37 13.09-8.803 1.152-.575 2.344-1.12 3.553-1.652-7.14-.744-14.137-2.066-20.77-3.98-7.796-2.25-14.69-5.202-20.503-8.89zm110 0c-2.84 1.8-5.938 3.422-9.27 4.876 3.1.31 6.13.734 9.082 1.252.12-.553.188-1.09.188-1.598v-4.53zm-158 4.22v13.62c6.997 1.482 14.783 2.36 23 2.36 2.374 0 4.705-.087 7-.227v-13.92c-10.064.53-20.263-.082-30-1.832zM408 297c-16.457 0-31.287 3.45-41.23 8.422C356.826 310.394 353 316.027 353 320c0 3.973 3.826 9.606 13.77 14.578C376.713 339.55 391.543 343 408 343c16.457 0 31.287-3.45 41.23-8.422C459.174 329.606 463 323.973 463 320c0-3.973-3.826-9.606-13.77-14.578C439.287 300.45 424.457 297 408 297zm-359 2.445V304c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.555c-1.832 1.158-3.74 2.243-5.72 3.233C140.06 309.288 122.89 313 104 313s-36.06-3.712-49.28-10.322c-1.98-.99-3.888-2.075-5.72-3.233zm206 .024c-5.813 3.687-12.707 6.64-20.504 8.89-17.97 5.187-38.608 6.05-57.496 2.642v13.664c16.775 3.494 36.694 2.964 52.504-1.6 8.954-2.585 15.845-6.245 20.03-9.87 4.183-3.622 5.466-6.68 5.466-9.196v-4.53zm66 7.33v4.53c0 3.973 3.826 9.606 13.77 14.578.074.037.155.073.23.11V313.56c-5.168-1.89-9.862-4.135-14-6.76zM49 331.47V336c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zM177 343v13.648c4.885 1.032 10.16 1.767 15.697 2.114 1.985-5.246 5.602-9.84 10.207-13.756-8.726.19-17.487-.487-25.904-2.006zM264 345c-16.457 0-31.287 3.45-41.23 8.422C212.826 358.394 209 364.027 209 368c0 3.973 3.826 9.606 13.77 14.578C232.713 387.55 247.543 391 264 391c16.457 0 31.287-3.45 41.23-8.422C315.174 377.606 319 371.973 319 368c0-3.973-3.826-9.606-13.77-14.578C295.287 348.45 280.457 345 264 345zm89 2.445V352c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.555c-1.832 1.158-3.74 2.243-5.72 3.233C444.06 357.288 426.89 361 408 361s-36.06-3.712-49.28-10.322c-1.98-.99-3.888-2.075-5.72-3.233zM49 363.47V368c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm304 16V384c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm-144 15.975V400c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.555c-1.832 1.158-3.74 2.243-5.72 3.233C300.06 405.288 282.89 409 264 409s-36.06-3.712-49.28-10.322c-1.98-.99-3.888-2.075-5.72-3.233zm-160 .024V400c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm304 16V416c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm-304 16V432c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm160 0V432c0 3.973 3.826 9.606 13.77 14.578C232.713 451.55 247.543 455 264 455c16.457 0 31.287-3.45 41.23-8.422C315.174 441.606 319 435.973 319 432v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm144 16V448c0 3.973 3.826 9.606 13.77 14.578C376.713 467.55 391.543 471 408 471c16.457 0 31.287-3.45 41.23-8.422C459.174 457.606 463 451.973 463 448v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm-304 16V464c0 3.973 3.826 9.606 13.77 14.578C72.713 483.55 87.543 487 104 487c16.457 0 31.287-3.45 41.23-8.422C155.174 473.606 159 467.973 159 464v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89z'\r\n        />\r\n      </g>\r\n    </g>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StaticIconProps } from '.'\r\n\r\nexport const Start = (props: StaticIconProps) => {\r\n  const { fill = 'white' } = props\r\n  return (\r\n    <g\r\n      style={{\r\n        transform: 'scale(0.01)',\r\n        zIndex: 2,\r\n        filter: 'drop-shadow(3px 3px 2px rgba(0, 0, 0, 0.7)',\r\n      }}\r\n    >\r\n      <g style={{ transform: 'translate(-277px, -281px)' }}>\r\n        <path\r\n          d='M281.53 23.438c48.44 71.504-18.447 145.556-63.655 58.968 27.295 144.502-65.22 166.347-74.75 74.75-73.554 65.057-59.358 147.17-20.438 210.75l45.844-26.344c-12.004-18.318-17.995-42.502-15.31-66.218 25.688 39.43 106.855 10.088 97.124-59.938 10.695 32.074 37.802 28.97 65.78-20.5C278.07 297.622 337.95 364.248 378.032 333.5c1.47 11.97-2.95 25.657-10.592 38.063l46.968 12.53c55.122-47.503 79.71-135.97-3.812-175.53 39.08 60.478-13.1 105.064-60.72 41.468-38.546-72.133 82.366-113.394-68.343-226.593zM173.876 48.124c-64.128 32.333-14.642 60.51-14.03 92.344 44.122-38.935-3.722-53.508 14.03-92.345zm74.47 269.094L75 416.874c2.71 18.39 8.98 34.417 18.813 48.5l92-44.063-78.688 59.875c3.39 3.38 7.033 6.62 10.938 9.75L192.78 448c-.023-.738-.06-1.475-.06-2.22 0-37.22 30.495-67.56 67.81-67.56 10.53 0 20.527 2.413 29.44 6.717-2.323-13.414-7.28-27.104-14.72-39.28l-94.938 40.124 82.47-56.467c-4.34-4.55-9.166-8.64-14.438-12.094zm58.874 57.624c1.61 7.148 2.6 14.315 2.967 21.312l.22 3.938c11.13 12.042 17.937 28.09 17.937 45.687 0 7.795-1.356 15.276-3.813 22.25l91.345 24.376c4.642-6.327 8.588-12.768 11.844-19.375l-63.158-24.686 70.125 6.844c.866-2.948 1.61-5.923 2.22-8.938l-97.063-34.22L439 427.5c.156-5.772-.103-11.67-.813-17.72L307.22 374.845zm-46.69 22.062c-27.26 0-49.124 21.8-49.124 48.875 0 27.078 21.864 48.876 49.125 48.876 27.263 0 49.126-21.798 49.126-48.875 0-27.075-21.863-48.874-49.125-48.874zm-4.936 11.78c43.778.002 58.435 71.595 0 71.595 26.622-23.113 29.81-46.888 0-71.592zm.187 9.845c-21.616 17.916-19.304 35.177 0 51.94-42.375 0-31.745-51.94 0-51.94z'\r\n          fill={fill}\r\n          style={{ filter: 'url(#shadow)' }}\r\n        />\r\n      </g>\r\n    </g>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StaticIconProps } from '.'\r\n\r\nexport const Chest = (props: StaticIconProps) => {\r\n  const { fill = '#fff' } = props\r\n  return (\r\n    <g style={{ transform: 'scale(0.01)', zIndex: 2 }}>\r\n      <g style={{ transform: 'translate(-253px, -232px)' }}>\r\n        <path\r\n          d='M146.857 20.842c-12.535-.036-24.268 2.86-37.285 9.424h.004C61.356 54.6 19.966 120.734 17.982 175.91l41.848 14.236c4.33-61.89 47.057-128.37 101.527-155.86h.002c4.423-2.23 8.822-4.162 13.185-5.8l-22.26-7.45c-1.83-.123-3.637-.19-5.428-.194zm59.34 20.19c-10.478-.09-22.832 3.093-36.424 9.943l.004-.004c-48.23 24.34-89.625 90.513-91.548 145.436l156.485 53.24c3.865-62.22 46.797-129.372 101.613-157.035h.002l.002-.003c4.303-2.168 8.584-4.056 12.832-5.666l-134.54-45.036c-2.652-.542-5.458-.847-8.427-.873zm174.97 58.323c-10.476-.09-22.83 3.092-36.42 9.94l-.005.002c-48.577 24.518-90.225 91.473-91.586 146.623l46.205 15.72c3.914-62.188 46.825-129.274 101.607-156.92 4.522-2.283 9.04-4.258 13.53-5.91l-26.544-8.884c-2.164-.35-4.423-.55-6.785-.57zm63.554 22.014c-10.267.093-22.094 3.353-35.333 10.034-47.158 23.8-87.777 87.587-91.362 141.75l174.55-73.726c-.404-39.01-10.754-61.304-24.415-71.082-2.347-1.68-4.867-3.057-7.55-4.137l-.01.034-4.735-1.584c-3.48-.887-7.195-1.327-11.144-1.29zM17.9 195.622l-.035 187.484L59.46 397.58V209.764L17.9 195.624zM78.15 216.12v187.962l156.282 54.37V269.288l-29.053-9.886v119.43l-101.054-34.082V225.025L78.15 216.12zm414.22 3.683L318.433 293.27v189.236l173.935-73.504v-189.2zm-369.354 11.582v99.947l63.675 21.477v-99.763l-63.674-21.662zm31.306 28.797c9.705 0 17.573 7.867 17.573 17.572 0 6.34-3.37 11.88-8.407 14.97v28.53h-18.69v-28.746c-4.838-3.13-8.048-8.562-8.048-14.754 0-9.705 7.867-17.572 17.572-17.572zm98.797 15.464v189.307l46.626 16.22V291.51l-46.627-15.864z'\r\n          fill={fill}\r\n          style={{ filter: 'url(#shadow)' }}\r\n        />\r\n      </g>\r\n    </g>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Color from 'color'\r\nimport { Hexagon } from 'react-hexgrid'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { HexT } from '../../grid/types'\r\nimport { getDepth, isAdjacent, isValueEqual } from '../../grid/util'\r\nimport { Boss } from '../../icons/static/Boss'\r\nimport { Combat } from '../../icons/static/Combat'\r\nimport { Random } from '../../icons/static/Random'\r\nimport { Shrine } from '../../icons/static/Shine'\r\nimport { Shop } from '../../icons/static/Shop'\r\nimport { Start } from '../../icons/static/Start'\r\nimport { Theme } from '../../theme'\r\nimport { Chest } from '../../icons/static/Chest'\r\nimport { tEncounter } from '../../game/Encounter/type'\r\n\r\nexport interface HexPropsT {\r\n  hex: HexT\r\n  size: number\r\n  onMouseEnter?: () => void\r\n  onMouseLeave?: () => void\r\n}\r\nexport const Hex = (props: HexPropsT) => {\r\n  const { hex, size, onMouseEnter, onMouseLeave } = props\r\n  const { currentHex, chooseNext, encounters } = useGameStateContext()\r\n  const [isHovering, setIsHovering] = useState(false)\r\n  const encounter = encounters[hex.q][hex.r][hex.s]\r\n  const active = currentHex ? isValueEqual(hex, currentHex) : false\r\n  const adjacent = isAdjacent(currentHex)(hex)\r\n  const depth = getDepth(hex, size)\r\n  const fill =\r\n    !encounter || encounter?.completed || active || isHovering\r\n      ? 'white'\r\n      : 'rgba(255,255,255,0.6)'\r\n  return (\r\n    <Hexagon\r\n      q={hex.q}\r\n      r={hex.r}\r\n      s={hex.s}\r\n      cellStyle={{\r\n        fontSize: '7px',\r\n        stroke: 'black',\r\n        fill:\r\n          encounter?.completed || encounter === undefined || active\r\n            ? 'green'\r\n            : adjacent\r\n            ? Color(Theme.physicalColor).darken(0.5).rgb().toString()\r\n            : Theme.otherGrey,\r\n        cursor: adjacent ? 'pointer' : 'default',\r\n      }}\r\n      onClick={(c: any, h: any) => {\r\n        if (adjacent) {\r\n          chooseNext(hex)\r\n        }\r\n      }}\r\n      onMouseEnter={() => {\r\n        if (adjacent) setIsHovering(true)\r\n        onMouseEnter && onMouseEnter()\r\n      }}\r\n      onMouseLeave={() => {\r\n        setIsHovering(false)\r\n        onMouseLeave && onMouseLeave()\r\n      }}\r\n    >\r\n      <g style={{ cursor: adjacent ? 'pointer' : 'default' }}>\r\n        {getHexIcon(encounter, depth, size, active, adjacent, fill)}\r\n      </g>\r\n    </Hexagon>\r\n  )\r\n}\r\n\r\nexport const getHexIcon = (\r\n  encounter: tEncounter | undefined,\r\n  depth: number,\r\n  size: number,\r\n  active: boolean,\r\n  adjacent: boolean,\r\n  fill: string,\r\n): JSX.Element | null => {\r\n  if (!encounter) return <Start fill={fill} />\r\n  if (depth === size - 1) return <Boss fill={fill} />\r\n  if (adjacent || active) {\r\n    if (encounter.type === 'shop') {\r\n      return <Shop fill={fill} />\r\n    }\r\n    if (encounter.type === 'reward') {\r\n      return <Chest fill={fill} />\r\n    }\r\n    if (encounter.type === 'shrine') {\r\n      return <Shrine fill={fill} />\r\n    }\r\n    if (encounter.type === 'combat') {\r\n      return <Combat fill={fill} />\r\n    }\r\n  }\r\n  return <Random fill={fill} />\r\n}\r\n","import React, { useMemo, useState } from 'react'\r\nimport Color from 'color'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Theme } from '../../theme'\r\nimport { HexGrid, Layout, GridGenerator } from 'react-hexgrid'\r\nimport { HexT } from '../../grid/types'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Hex } from './hex'\r\nimport { Text } from '../../elements/typography'\r\nimport { HexBadge } from '../../elements/shapes'\r\nimport { Icon } from '../../components/Icon'\r\nimport Unknown from '../../icons/svg/delapouite/perspective-dice-six.svg'\r\nimport Shop from '../../icons/svg/delapouite/coins.svg'\r\nimport Boss from '../../icons/svg/lorc/crowned-skull.svg'\r\nimport Start from '../../icons/svg/lorc/campfire.svg'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Button } from '../../elements/button'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport { getSideIndex } from '../../grid/util'\r\n\r\nexport const Grid = () => {\r\n  const { floor, floors } = useGameStateContext()\r\n  const currentFloor = floors[floor]\r\n  const hexagons = useMemo(() => GridGenerator.triangle(currentFloor.size), [])\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n  const [activeHex, setActiveHex] = useState<HexT | undefined>()\r\n  const style = useSpring({\r\n    minHeight: isExpanded ? 338 : 0,\r\n    maxHeight: isExpanded ? 338 : 0,\r\n  })\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      style={{\r\n        color: 'white',\r\n        fontSize: '3px',\r\n        justifyContent: 'center',\r\n      }}\r\n    >\r\n      <FlexContainer\r\n        $full\r\n        style={{ alignItems: 'center', justifyContent: 'center' }}\r\n      >\r\n        <div className='shadow' style={{ width: 594, height: 510 }}>\r\n          <HexGrid>\r\n            <defs>\r\n              <filter id='shadow' width='200%' height='200%'>\r\n                <feDropShadow dx={30} dy={30} stdDeviation={50} />\r\n              </filter>\r\n            </defs>\r\n            <Layout\r\n              size={{ x: 4.5, y: 4.5 }}\r\n              origin={{ x: -57, y: -40 }}\r\n              spacing={1.02}\r\n              flat={false}\r\n            >\r\n              {hexagons\r\n                .filter(\r\n                  (hex: HexT) =>\r\n                    hex.r !== 0 ||\r\n                    hex.s === 0 ||\r\n                    hex.s === currentFloor.size * -1,\r\n                )\r\n                .map((hex: HexT, i: number) => (\r\n                  <Hex\r\n                    hex={hex}\r\n                    size={currentFloor.size}\r\n                    onMouseEnter={() => setActiveHex(hex)}\r\n                    onMouseLeave={() => setActiveHex(undefined)}\r\n                  />\r\n                ))}\r\n            </Layout>\r\n          </HexGrid>\r\n        </div>\r\n      </FlexContainer>\r\n      <div>\r\n        <BoxContainer\r\n          style={{\r\n            fontSize: 12,\r\n            maxWidth: 270,\r\n            background: Theme.darkBgColor,\r\n            margin: '16px 16px 16px 36px',\r\n            borderWidth: 2,\r\n          }}\r\n          substyle={{\r\n            background: Theme.mediumBgColor,\r\n            padding: 0,\r\n            textShadow: '1px 1px 8px black',\r\n            boxShadow: 'inset 0px 0px 5px black',\r\n          }}\r\n        >\r\n          <FlexContainer\r\n            style={{\r\n              fontFamily: Theme.titleFont,\r\n              fontWeight: 'normal',\r\n              marginTop: 0,\r\n              paddingLeft: 8,\r\n              background: Theme.otherGrey2,\r\n              height: 26,\r\n              alignItems: 'center',\r\n              boxShadow: '0px 4px 5px black',\r\n              margin: '-1px -1px 0 -1px',\r\n            }}\r\n          >\r\n            <FullContainer>Floor Map</FullContainer>\r\n            <Button\r\n              onClick={() => setIsExpanded((v) => !v)}\r\n              style={{ padding: '2px 8px', marginRight: 4 }}\r\n            >\r\n              {isExpanded ? '_' : '+'}\r\n            </Button>\r\n          </FlexContainer>\r\n          <animated.div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              overflow: 'hidden',\r\n              ...style,\r\n            }}\r\n          >\r\n            <div style={{ padding: 8 }}>\r\n              <Text style={{ paddingTop: 8 }}>\r\n                {activeHex\r\n                  ? `${activeHex.q}, ${activeHex.r}, ${\r\n                      activeHex.s\r\n                    } = ${getSideIndex(activeHex)}`\r\n                  : 'hover to see location'}\r\n              </Text>\r\n              <Text style={{ marginBottom: 16, display: 'block' }}>\r\n                This is the floor map. Here you can see the cleared encounters\r\n                (green) and the encounters you can travel to (blue). Click a\r\n                blue hex to advance.\r\n              </Text>\r\n              <BoxContainer substyle={{ background: Theme.darkBgColor }}>\r\n                <FlexContainer style={{ alignItems: 'center', height: 36 }}>\r\n                  <HexBadge\r\n                    color='green'\r\n                    size={28}\r\n                    stroke={3}\r\n                    style={{ marginRight: 8 }}\r\n                  />\r\n                  Cleared Encounters\r\n                </FlexContainer>\r\n                <FlexContainer style={{ alignItems: 'center', height: 36 }}>\r\n                  <HexBadge\r\n                    color={Color(Theme.physicalColor)\r\n                      .darken(0.5)\r\n                      .rgb()\r\n                      .toString()}\r\n                    size={28}\r\n                    stroke={3}\r\n                    style={{ marginRight: 8 }}\r\n                  />\r\n                  Adjacent Encounters\r\n                </FlexContainer>\r\n                <FlexContainer style={{ alignItems: 'center', height: 36 }}>\r\n                  <Icon src={Start} size={24} style={{ marginRight: 12 }} />\r\n                  Starting Location\r\n                </FlexContainer>\r\n                <FlexContainer style={{ alignItems: 'center', height: 36 }}>\r\n                  <Icon\r\n                    src={Shop}\r\n                    size={24}\r\n                    style={{ marginRight: 12 }}\r\n                    shadow\r\n                  />\r\n                  Shop\r\n                </FlexContainer>\r\n                <FlexContainer style={{ alignItems: 'center', height: 36 }}>\r\n                  <Icon\r\n                    src={Unknown}\r\n                    size={24}\r\n                    style={{ marginRight: 12 }}\r\n                    shadow\r\n                  />\r\n                  Random Encounter\r\n                </FlexContainer>\r\n                <FlexContainer style={{ alignItems: 'center', height: 36 }}>\r\n                  <Icon\r\n                    src={Boss}\r\n                    size={24}\r\n                    style={{ marginRight: 12 }}\r\n                    shadow\r\n                  />\r\n                  Boss\r\n                </FlexContainer>\r\n                <FullContainer />\r\n              </BoxContainer>\r\n            </div>\r\n          </animated.div>\r\n        </BoxContainer>\r\n      </div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { usePartyContext } from '../contexts/PartyContext'\r\nimport { FlexContainer, FullContainer } from '../elements/flex'\r\nimport { Button } from '../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { AppHeader } from '../components/AppHeader'\r\nimport { PartyResources } from '../components/PartyResources'\r\nimport { useUIContext } from '../contexts/UIContext'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport { getSkillResult } from '../game/Skill/util'\r\nimport { commitSkillResults } from '../game/Skill/committer'\r\nimport { NonCombatEncounter } from '../components/NonCombatEncounter'\r\nimport { EncounterActions } from '../components/EncounterActions'\r\nimport { HeadingSm } from '../elements/typography'\r\nimport { Grid } from './Grid'\r\n\r\nexport const Party = () => {\r\n  const { party, rawParty, updateParty } = usePartyContext()\r\n  const { floors, floor, currentEncounter } = useGameStateContext()\r\n  const currentFloor = floors[floor]\r\n  const history = useHistory()\r\n  const {\r\n    setPlayerCanEquipItem,\r\n    setOnCharacterConsumableClick,\r\n  } = useUIContext()\r\n\r\n  useEffect(() => {\r\n    setPlayerCanEquipItem(true)\r\n    setOnCharacterConsumableClick((character, consumableIndex) => {\r\n      if (!character) return\r\n      const consumable = character.consumables[consumableIndex]\r\n      const targets =\r\n        consumable.skill.targetType === 'self'\r\n          ? [character]\r\n          : consumable.skill.targetType === 'party'\r\n          ? party.characters\r\n          : []\r\n      const result = getSkillResult(character, targets, consumable.skill)\r\n      const parties = commitSkillResults(rawParty, rawParty, {})(result)\r\n      updateParty(parties.playerParty)\r\n    })\r\n    return () => {\r\n      setPlayerCanEquipItem(false)\r\n      setOnCharacterConsumableClick((c, i, item) => {})\r\n    }\r\n  }, [party, rawParty, updateParty])\r\n\r\n  return (\r\n    <FlexContainer $full $direction='column' style={{ height: '100%' }}>\r\n      <AppHeader\r\n        left={\r\n          <>\r\n            <Button\r\n              onClick={() => history.push('/')}\r\n              style={{ borderBottom: 0 }}\r\n            >\r\n              Restart\r\n            </Button>\r\n\r\n            <FullContainer />\r\n          </>\r\n        }\r\n        right={\r\n          <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n            <PartyResources />\r\n          </FlexContainer>\r\n        }\r\n      >\r\n        <FlexContainer\r\n          $full\r\n          style={{\r\n            color: 'white',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <HeadingSm style={{ margin: 0 }}>{currentFloor.name}</HeadingSm>\r\n        </FlexContainer>\r\n      </AppHeader>\r\n      <FlexContainer $full $direction='column'>\r\n        <FlexContainer $full>\r\n          {(currentEncounter && !currentEncounter.completed) ||\r\n          (currentEncounter && currentEncounter.type === 'boss') ? (\r\n            <NonCombatEncounter />\r\n          ) : (\r\n            <Grid />\r\n          )}\r\n          <EncounterActions />\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { FullContainer, FlexContainer } from '../elements/flex'\r\nimport { BoxContainer } from '../elements/box'\r\nimport { usePartyContext } from '../contexts/PartyContext'\r\nimport { RedButton } from '../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { INITIAL_STATE } from '../state/party'\r\nimport { Monospace } from '../elements/monospace'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport {\r\n  tProcessedCharacter,\r\n  tCharacter,\r\n  tCharacterClass,\r\n} from '../game/Character/type'\r\nimport { makeCharacter } from '../game/Character/util'\r\nimport { STAT_BONUS_KEYS } from '../game/Stats/constants'\r\nimport { Theme } from '../theme'\r\nimport { AppHeader } from '../components/AppHeader'\r\nimport { HeadingSm } from '../elements/typography'\r\nimport { Gauge2 } from '../components/Gauge/v2'\r\nimport { TEST_WEAPON } from '../game/Weapon/builders/unique/test_weapon'\r\nimport { noneg } from '../util'\r\nimport { useModalContext } from '../contexts/ModalContext'\r\n\r\nexport const Start = () => {\r\n  const {\r\n    party,\r\n    rawParty,\r\n    updateParty,\r\n    upsertCharacter,\r\n    findRawCharacter,\r\n  } = usePartyContext()\r\n  const history = useHistory()\r\n  const { open, close } = useModalContext()\r\n  const { reset, loading } = useGameStateContext()\r\n  useEffect(() => {\r\n    updateParty(INITIAL_STATE)\r\n    reset()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      open(\r\n        <div>\r\n          <h1 style={{ fontFamily: Theme.titleFont, textAlign: 'center' }}>\r\n            Loading...\r\n          </h1>\r\n        </div>,\r\n        {},\r\n        true,\r\n      )\r\n    } else {\r\n      close()\r\n    }\r\n  }, [loading])\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{ height: '100%', overflow: 'hidden' }}\r\n    >\r\n      <AppHeader\r\n        left={\r\n          <Monospace\r\n            style={{\r\n              fontWeight: 'normal',\r\n              color: 'rgba(255,255,255,0.5)',\r\n              fontSize: 12,\r\n            }}\r\n            onClick={() => {\r\n              updateParty({\r\n                ...rawParty,\r\n                characters: rawParty.characters.map((c) => ({\r\n                  ...c,\r\n                  weapon: TEST_WEAPON(),\r\n                })),\r\n              })\r\n            }}\r\n          >\r\n            alpha-0.0.6.6\r\n          </Monospace>\r\n        }\r\n      >\r\n        <span\r\n          style={{ color: 'white', lineHeight: '52px', whiteSpace: 'nowrap' }}\r\n        >\r\n          I am looking for help with: item, and enemy, and world design! If you\r\n          would like to help, shoot me a message or head over to my github\r\n        </span>\r\n      </AppHeader>\r\n      <FullContainer />\r\n      <FlexContainer $full>\r\n        <FullContainer />\r\n        <BoxContainer\r\n          style={{\r\n            maxWidth: 340,\r\n            marginRight: 8,\r\n          }}\r\n          substyle={{\r\n            padding: 16,\r\n            background: Theme.darkBgColor,\r\n            lineHeight: 1.4,\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          <HeadingSm\r\n            style={{\r\n              marginTop: 8,\r\n            }}\r\n          >\r\n            About this game\r\n          </HeadingSm>\r\n          <p>\r\n            Each character class has different stats and starting items. Your\r\n            stats determine your character's chances of succeeding in various\r\n            checks during combat.\r\n          </p>\r\n          <p>\r\n            For example, if your character has 76 Strength, then each Strength\r\n            check has a 76% chance of succeeding.\r\n          </p>\r\n          <p>\r\n            So if an attack has 4 Strength checks at 76% each, then that attack\r\n            has a 33% chance of being \"perfect.\" Some attacks will have special\r\n            bonus actions when they are \"perfect.\" Such as splash damage, or\r\n            status effects.\r\n          </p>\r\n          <p>\r\n            More power attacks may require more checks or use negative-offset\r\n            stat values\r\n          </p>\r\n        </BoxContainer>\r\n        <BoxContainer>\r\n          <h1\r\n            style={{\r\n              marginTop: 8,\r\n              textAlign: 'center',\r\n              fontFamily: Theme.titleFont,\r\n              textShadow: '1px 3px 3px black',\r\n              color: 'rgba(255,255,255,1)',\r\n            }}\r\n          >\r\n            Choose your Party!\r\n          </h1>\r\n          <FlexContainer>\r\n            {party.characters.map((character) => (\r\n              <FlexContainer\r\n                key={character.id}\r\n                $direction='column'\r\n                style={{ padding: 4 }}\r\n              >\r\n                <StartCharacterCard\r\n                  character={character}\r\n                  onChange={(characterId, updater) => {\r\n                    const rc = findRawCharacter(characterId)\r\n                    if (rc) {\r\n                      upsertCharacter(updater(rc))\r\n                    }\r\n                  }}\r\n                />\r\n              </FlexContainer>\r\n            ))}\r\n          </FlexContainer>\r\n          <FlexContainer>\r\n            <FullContainer />\r\n            <RedButton\r\n              style={{ margin: '16px 0 12px 0' }}\r\n              onClick={() => {\r\n                history.push('/party')\r\n              }}\r\n            >\r\n              Begin Adventure\r\n            </RedButton>\r\n            <FullContainer />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        <FullContainer />\r\n      </FlexContainer>\r\n      <FullContainer />\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface StartCharacterCardPropsT {\r\n  character: tProcessedCharacter\r\n  onChange: (\r\n    characterId: string,\r\n    updater: (c: tCharacter) => tCharacter,\r\n  ) => void\r\n}\r\nexport const StartCharacterCard = (props: StartCharacterCardPropsT) => {\r\n  const { character, onChange } = props\r\n  return (\r\n    <FlexContainer $direction='column' style={{ width: 200 }}>\r\n      <input\r\n        style={{\r\n          background: Theme.mediumBgColor,\r\n          border: '1px solid rgba(255,255,255,0.4)',\r\n          padding: 8,\r\n          color: 'white',\r\n          marginBottom: 8,\r\n        }}\r\n        value={character.name}\r\n        onChange={(e) => {\r\n          onChange(character.id, (c) => ({\r\n            ...c,\r\n            name: e.target.value,\r\n          }))\r\n        }}\r\n      />\r\n      <select\r\n        style={{\r\n          background: Theme.mediumBgColor,\r\n          border: '1px solid rgba(255,255,255,0.4)',\r\n          padding: 8,\r\n          color: 'white',\r\n          marginBottom: 8,\r\n        }}\r\n        value={character.class}\r\n        onChange={(e) => {\r\n          onChange(character.id, (c) => ({\r\n            ...makeCharacter(e.target.value as tCharacterClass),\r\n            id: character.id,\r\n            name: character.name,\r\n          }))\r\n        }}\r\n      >\r\n        <option value='executioner'>Executioner</option>\r\n        <option value='ranger'>Ranger</option>\r\n        <option value='student'>Student</option>\r\n        <option value='patrician'>Patrician</option>\r\n        <option value='reaper'>Reaper</option>\r\n        <option value='drifter'>Drifter</option>\r\n      </select>\r\n      <FlexContainer $direction='column' style={{ padding: 8 }}>\r\n        {STAT_BONUS_KEYS.map((key) => (\r\n          <FlexContainer key={key} style={{ height: 20 }}>\r\n            <div\r\n              style={{\r\n                width: 80,\r\n                fontSize: 12,\r\n                textTransform: 'capitalize',\r\n                marginRight: 4,\r\n              }}\r\n            >\r\n              {key}\r\n            </div>\r\n            <FullContainer>\r\n              <Gauge2\r\n                max={40}\r\n                value={noneg(character.stats[key] - 40)}\r\n                color='rgba(255,255,255,0.6)'\r\n                height={15}\r\n              />\r\n            </FullContainer>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { createWeapon } from '..'\r\nimport { CHOP } from '../../../Skill/skills/axe'\r\nimport { ARCANE, NOVA, PROTECT } from '../../../Skill/skills/catalyst'\r\nimport { tWeapon } from '../../type'\r\n\r\nexport const TEST_WEAPON = (): tWeapon => ({\r\n  ...createWeapon(\r\n    'greatsword',\r\n    'mythic',\r\n    [ARCANE, NOVA, CHOP, PROTECT],\r\n    {\r\n      strength: 100,\r\n      agility: 100,\r\n      charisma: -4,\r\n      damageModifiers: {\r\n        undead: 0.1,\r\n        beast: 0.05,\r\n        flying: 0.15,\r\n      },\r\n    },\r\n    ['burning'],\r\n  ),\r\n  name: `Test Weapon of Evil`,\r\n  // breakable: true,\r\n  damage: {\r\n    value: 100,\r\n    range: 'melee',\r\n    type: 'physical',\r\n  },\r\n})\r\n","import { tProcessedCharacter } from '../Character/type'\r\nimport { CELESTIAL_LOTUS } from './objects/celestial_lotus'\r\nimport { GODSBEARD } from './objects/godsbeard'\r\nimport { POISON_KNIFE } from './objects/poison_knife'\r\nimport { BEAST_DRUG } from './objects/beast_drug'\r\nimport { CURE_POTION } from './objects/curing_potion'\r\nimport { FIREBOMB } from './objects/firebomb'\r\n\r\nexport const CONSUMABLE_DESCRIPTIONS: Record<\r\n  string,\r\n  (character: tProcessedCharacter) => string\r\n> = {\r\n  [GODSBEARD().cid]: (c) => `Heal for ${c.stats.consumableHealthGainOffset} HP`,\r\n  [CELESTIAL_LOTUS().cid]: () => 'Remove all Curses',\r\n  [POISON_KNIFE().cid]: () => `Inflict Poison`,\r\n  [BEAST_DRUG().cid]: () => `+15 Attack Damage`,\r\n  [CURE_POTION().cid]: () => `Cure Buring, Bleeding, Frozen and Poison`,\r\n  [FIREBOMB().cid]: () => `Deal 15 Damage and inflict Burning`,\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { CONSUMABLE_ITEM_ICONS, CONSUMABLE_ITEM_COLORS } from '../../icons/maps'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { considateConsumableListToStack } from '../../game/Consumable/util'\r\nimport { Theme } from '../../theme'\r\nimport { REMOVE_CURSES } from '../../game/Skill/skills/consumables'\r\nimport { hasAnyStatus } from '../../game/Character/util'\r\nimport { CONSUMABLE_DESCRIPTIONS } from '../../game/Consumable/constants'\r\n\r\nconst HEIGHT = 64\r\nexport interface PartyCharacterConsumablesPropsT {\r\n  character: tProcessedCharacter\r\n  consumables: tConsumable[]\r\n  onClick?: (consumable: tConsumable, index: number) => void\r\n}\r\nexport const PartyCharacterConsumables = (\r\n  props: PartyCharacterConsumablesPropsT,\r\n) => {\r\n  const { character, consumables, onClick } = props\r\n  const stack = useMemo(() => considateConsumableListToStack(consumables), [\r\n    consumables,\r\n  ])\r\n  const onStackClick = (consumable: tConsumable) => {\r\n    let index = undefined\r\n    consumables.forEach((c, i) => {\r\n      if (c.id === consumable.id) index = i\r\n    })\r\n    if (consumable.skill.healing && !(character.healthOffset === 0))\r\n      return onClick && onClick(consumable, index || 0)\r\n    if (\r\n      consumable.skill.id === REMOVE_CURSES.id &&\r\n      hasAnyStatus(character, [\r\n        'cursed-vigor',\r\n        'cursed-strength',\r\n        'cursed-luck',\r\n        'cursed-intelligence',\r\n        'cursed-dexterity',\r\n        'cursed-charisma',\r\n        'cursed-agility',\r\n      ])\r\n    ) {\r\n      return onClick && onClick(consumable, index || 0)\r\n    }\r\n\r\n    if (\r\n      consumable.skill.name === 'Cure Potion' &&\r\n      hasAnyStatus(character, ['poisoned', 'bleeding', 'burning', 'frozen'])\r\n    ) {\r\n      return onClick && onClick(consumable, index || 0)\r\n    }\r\n  }\r\n  const filler = Array(10 - stack.length).fill(null)\r\n\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ flexWrap: 'wrap', height: HEIGHT }}\r\n    >\r\n      {stack.map((s) => (\r\n        <PartyCharacterConsumable\r\n          key={s.consumable.id}\r\n          character={character}\r\n          consumable={s.consumable}\r\n          count={s.count}\r\n          onClick={onStackClick}\r\n        />\r\n      ))}\r\n      {filler.map((f, i) => (\r\n        <ConsumableBox key={i} />\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\ninterface ConsumableBoxPropsT {\r\n  children?: JSX.Element\r\n  onClick?: () => void\r\n}\r\nconst ConsumableBox = (props: ConsumableBoxPropsT) => {\r\n  const { children, onClick } = props\r\n  return (\r\n    <FlexContainer\r\n      onClick={() => onClick && onClick()}\r\n      style={{\r\n        height: HEIGHT / 2,\r\n        width: HEIGHT / 2,\r\n        boxSizing: 'border-box',\r\n        border: '1px solid rgba(0,0,0,0.5)',\r\n        background: Theme.otherGrey,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        cursor: onClick ? 'pointer' : 'default',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      {children}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface PartyCharacterConsumablePropsT {\r\n  consumable: tConsumable\r\n  character: tProcessedCharacter\r\n  count: number\r\n  onClick?: (consumable: tConsumable) => void\r\n}\r\nexport const PartyCharacterConsumable = (\r\n  props: PartyCharacterConsumablePropsT,\r\n) => {\r\n  const { character, consumable, count, onClick } = props\r\n  return (\r\n    <HoverToolTip\r\n      content={\r\n        <PartyCharacterConsumableTooltip\r\n          character={character}\r\n          consumable={consumable}\r\n        />\r\n      }\r\n    >\r\n      <ConsumableBox onClick={() => onClick && onClick(consumable)}>\r\n        <>\r\n          <Icon\r\n            src={CONSUMABLE_ITEM_ICONS[consumable.cid]}\r\n            fill={CONSUMABLE_ITEM_COLORS[consumable.cid]}\r\n            size={24}\r\n            shadow\r\n          />\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              textShadow: '-1px 1px 1px black',\r\n              bottom: -2,\r\n              zIndex: 2,\r\n              right: 1,\r\n            }}\r\n          >\r\n            {count}\r\n          </div>\r\n        </>\r\n      </ConsumableBox>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface PartyCharacterConsumableTooltipProps {\r\n  character: tProcessedCharacter\r\n  consumable: tConsumable\r\n}\r\nexport const PartyCharacterConsumableTooltip = (\r\n  props: PartyCharacterConsumableTooltipProps,\r\n) => {\r\n  const { character, consumable } = props\r\n  const getText = CONSUMABLE_DESCRIPTIONS[consumable.cid]\r\n  return (\r\n    <BoxContainer\r\n      style={{ maxWidth: 200 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <strong>{consumable.name}</strong>\r\n      {getText && <div>{getText(character)}</div>}\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { styled } from 'styletron-react'\r\nimport { Icon } from '../Icon'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tBaseStats } from '../../game/Stats/type'\r\nimport { Theme } from '../../theme'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { NumberChange } from '../NumberChange'\r\n\r\ninterface CharacterStatPropsT {\r\n  statKey: keyof tBaseStats\r\n  character: tProcessedCharacter\r\n}\r\nconst CharacterStat = (props: CharacterStatPropsT) => {\r\n  const { statKey, character } = props\r\n  return (\r\n    <HoverToolTip\r\n      flex\r\n      content={\r\n        <BoxContainer\r\n          substyle={{\r\n            textTransform: 'capitalize',\r\n            background: Theme.darkBgColor,\r\n          }}\r\n        >\r\n          {statKey}\r\n        </BoxContainer>\r\n      }\r\n    >\r\n      <ResourceE $color={getStatColor(character, statKey)}>\r\n        <Icon\r\n          src={STAT_ICONS[statKey] || ''}\r\n          fill={getStatColor(character, statKey)}\r\n          size={14}\r\n          style={{ marginRight: 3, marginTop: 0 }}\r\n        />\r\n        <NumberChange value={character.stats[statKey]} />\r\n      </ResourceE>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface StatsProps {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Stats = (props: StatsProps) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      style={{ paddingTop: 4, background: Theme.darkBgColor, paddingLeft: 42 }}\r\n    >\r\n      <CharacterStat statKey='vigor' character={character} />\r\n      <CharacterStat statKey='strength' character={character} />\r\n      <CharacterStat statKey='dexterity' character={character} />\r\n      <CharacterStat statKey='intelligence' character={character} />\r\n      <CharacterStat statKey='charisma' character={character} />\r\n      <CharacterStat statKey='agility' character={character} />\r\n      <CharacterStat statKey='luck' character={character} />\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nconst ResourceE = styled('div', (props: any) => ({\r\n  height: 15,\r\n  color: props.$color,\r\n  fontSize: '15px',\r\n  padding: '0px 4px',\r\n  lineHeight: '14px',\r\n  flex: 1,\r\n  textAlign: 'center',\r\n  background: Theme.darkBgColor,\r\n  display: 'flex',\r\n}))\r\n\r\nconst getStatColor = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n): string => {\r\n  const a = character.stats[key]\r\n  const b = character.rawStats[key]\r\n  if (a >= 95) return 'gold'\r\n  if (a > b) return Theme.evasionColor\r\n  if (b > a) return 'lightcoral'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { FISTS } from '../../game/Weapon/fists'\r\nimport { Theme } from '../../theme'\r\nexport interface NamePropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Name = (props: NamePropsT) => {\r\n  const { character } = props\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        marginTop: -3,\r\n        marginRight: -3,\r\n        marginLeft: -3,\r\n        paddingLeft: 52,\r\n        paddingRight: 8,\r\n        background: Theme.otherGrey2,\r\n        height: 24,\r\n        alignItems: 'center',\r\n        borderBottom: '1px solid rgba(255,255,255,0.1)',\r\n        boxShadow: '0px 4px 5px black',\r\n        zIndex: 2,\r\n      }}\r\n    >\r\n      <FullContainer\r\n        style={{\r\n          fontFamily: Theme.titleFont,\r\n          textShadow: '1px 1px 3px black',\r\n          flex: 1,\r\n          fontSize: 20,\r\n        }}\r\n      >\r\n        {character.name}\r\n      </FullContainer>\r\n      <div\r\n        style={{\r\n          fontSize: 12,\r\n          color: 'rgba(255,255,255,0.3)',\r\n        }}\r\n      >\r\n        {character.weapon.name !== 'Fists' ? (\r\n          character.class\r\n        ) : (\r\n          <span\r\n            style={{\r\n              color: 'red',\r\n              display: 'inline-block',\r\n              paddingTop: 4,\r\n              textTransform: 'uppercase',\r\n              textShadow: '1px 1px 3px black',\r\n            }}\r\n          >\r\n            No Weapon Equiped\r\n          </span>\r\n        )}\r\n      </div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Inventory from '../../icons/svg/lorc/knapsack.svg'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Tooltip } from '../Tooltip'\r\nimport { PartyActiveCharacter } from '../PartyActiveCharacter'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { Hover } from '../Hover'\r\nimport { Icon } from '../Icon'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ActionsPropsT {\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n}\r\n\r\nexport const Actions = (props: ActionsPropsT) => {\r\n  const { character, canEquip } = props\r\n  const { party } = usePartyContext()\r\n  const {\r\n    openCharacterInventoryId,\r\n    setOpenCharacterInventoryId,\r\n  } = useUIContext()\r\n  const inventoryOpen = character.id === openCharacterInventoryId\r\n  const inventoryStyle = useSpring({\r\n    opacity: inventoryOpen ? 1 : 0,\r\n    config: { tension: 500 },\r\n  })\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{ justifyContent: 'center', boxShadow: 'inset 0px 0px 3px black' }}\r\n    >\r\n      <FlexContainer\r\n        $full\r\n        style={{ alignItems: 'center', justifyContent: 'center' }}\r\n      >\r\n        <Tooltip\r\n          isOpen={inventoryOpen}\r\n          direction='up'\r\n          distance={60}\r\n          background={Theme.darkBgColor}\r\n          arrow\r\n          content={\r\n            <animated.div\r\n              style={{ minWidth: 887, minHeight: 473, ...inventoryStyle }}\r\n            >\r\n              {inventoryOpen && (\r\n                <PartyActiveCharacter\r\n                  character={character}\r\n                  party={party}\r\n                  canEquip={canEquip}\r\n                  onRequestClose={() => {\r\n                    setOpenCharacterInventoryId(undefined)\r\n                  }}\r\n                />\r\n              )}\r\n            </animated.div>\r\n          }\r\n        >\r\n          <Hover delay={0}>\r\n            {({ isHovering }) => (\r\n              <Icon\r\n                src={Inventory}\r\n                fill={\r\n                  isHovering ? 'rgba(255,255,255,1)' : 'rgba(255,255,255,0.7)'\r\n                }\r\n                size={18}\r\n                shadow\r\n                onClick={() => {\r\n                  if (character.id === openCharacterInventoryId) {\r\n                    return setOpenCharacterInventoryId(undefined)\r\n                  }\r\n                  setOpenCharacterInventoryId(character.id)\r\n                }}\r\n                style={{ padding: 6, cursor: 'pointer' }}\r\n              />\r\n            )}\r\n          </Hover>\r\n        </Tooltip>\r\n      </FlexContainer>\r\n      {/*<FlexContainer\r\n        $full\r\n        style={{ alignItems: 'center', justifyContent: 'center' }}\r\n      >\r\n        <Icon\r\n          src={Details}\r\n          fill={'rgba(255,255,255,0.7)'}\r\n          size={18}\r\n          shadow\r\n          style={{ padding: 6, cursor: 'pointer' }}\r\n        />\r\n      </FlexContainer>*/}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { noneg } from '../../util'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Theme } from '../../theme'\r\nimport { NumberChange } from '../NumberChange'\r\n\r\nexport interface HealthPropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Health = (props: HealthPropsT) => {\r\n  const { character } = props\r\n  const health = noneg(character.health)\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'relative',\r\n        zIndex: 3,\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          marginLeft: 44,\r\n          fontSize: 56,\r\n          height: 64,\r\n          minWidth: 86,\r\n          lineHeight: '72px',\r\n          color: Theme.healthRedColor,\r\n          fontFamily: 'New Rocker',\r\n          display: 'flex',\r\n          textAlign: 'center',\r\n          textShadow: '1px 1px 3px black',\r\n          justifyContent: 'center',\r\n          boxShadow: 'inset 0px 0px 3px black',\r\n        }}\r\n      >\r\n        <NumberChange value={health} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { XPGauge, HealthGauge } from '../Gauge'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { styled } from 'styletron-react'\r\nimport { TagPreview } from '../TagPreview'\r\nimport { PartyCharacterConsumables } from '../PartyCharacterConsumables'\r\nimport { Stats } from './Stats'\r\nimport { Name } from './Name'\r\nimport { Actions } from './Actions'\r\nimport { Health } from './Health'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { usePlayerCharacterNotifications } from '../../hooks/usePlayerCharacterNotifications'\r\nimport { Icon } from '../Icon'\r\nimport { CHARACTER_CLASS_ICONS } from '../../icons/maps'\r\nimport { CHARACTER_CLASS_COLORS } from '../../game/Character/constants'\r\nimport { Theme } from '../../theme'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { ZERO_STATS } from '../../game/Stats/constants'\r\nimport { HoverHexBadge, HexBadge } from '../../elements/shapes'\r\nimport { animated } from 'react-spring'\r\nimport { useElementShake } from '../../hooks/useElementShake'\r\nimport { NumberChange } from '../NumberChange'\r\n\r\nexport interface PartyCharacterProps {\r\n  character: tProcessedCharacter\r\n  selected?: boolean\r\n  showActions?: boolean\r\n  onClick?: () => void\r\n  onConsumableClick?: (consumable: tConsumable, index: number) => void\r\n  push: (contents: JSX.Element, type?: string) => void\r\n}\r\nconst Wrapper = styled(animated.div, (props: any) => {\r\n  const { $active } = props\r\n  return {\r\n    margin: 10,\r\n    display: 'flex',\r\n    position: 'relative',\r\n    transform: $active ? 'scale(1.05)' : 'scale(1)',\r\n    transition: 'all 0.4s',\r\n    userSelect: 'none',\r\n  }\r\n})\r\n\r\nconst Halo = styled('div', (props: any) => {\r\n  const { $active, $targeted, $light } = props\r\n  const left = $light ? -20 : 0\r\n  const leftR = $light ? -10 : 0\r\n  return {\r\n    boxShadow: $active\r\n      ? `${left}px 0px 20px ${$light ? 'rgba(255,255,255,0.4)' : 'white'}`\r\n      : $targeted\r\n      ? `${leftR}px 0px 20px #ff6224  `\r\n      : 'none',\r\n  }\r\n})\r\n\r\nexport const PartyCharacter = (props: PartyCharacterProps) => {\r\n  const {\r\n    character,\r\n    selected,\r\n    showActions = true,\r\n    onConsumableClick,\r\n    push,\r\n  } = props\r\n  const { playerCanEquipItem } = useUIContext()\r\n  const { activeRound } = useCombatContext()\r\n  const targetIds = activeRound?.targetResults.map((r) => r.target.id)\r\n  const active = selected\r\n  const targeted = targetIds?.includes(character.id)\r\n  const { styles, exec } = useElementShake()\r\n  usePlayerCharacterNotifications(character, push, exec)\r\n  return (\r\n    <animated.div style={styles}>\r\n      <Wrapper\r\n        $active={active}\r\n        style={{\r\n          opacity: character.health <= 0 ? 0.5 : 1,\r\n        }}\r\n      >\r\n        <HexBadge\r\n          size={110}\r\n          stroke={2}\r\n          color={CHARACTER_CLASS_COLORS[character.class] || Theme.darkBgColor}\r\n          style={{\r\n            padding: 8,\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            transition: 'all 0.3s',\r\n            marginRight: -58,\r\n            marginTop: -11,\r\n            zIndex: 3,\r\n          }}\r\n          childStyle={{\r\n            marginTop: -20,\r\n          }}\r\n        >\r\n          <Icon\r\n            src={CHARACTER_CLASS_ICONS[character.class]}\r\n            size={72}\r\n            shadow\r\n            style={{ marginRight: -4 }}\r\n            fill={selected ? 'white' : 'rgba(255,255,255,0.5)'}\r\n          />\r\n        </HexBadge>\r\n        <Halo $active={active} $targeted={targeted}>\r\n          <BoxContainer\r\n            style={{\r\n              borderWidth: 2,\r\n              transition: 'all 1s',\r\n            }}\r\n            substyle={{\r\n              padding: 0,\r\n              minWidth: 312,\r\n              background: Theme.darkBgColorSolid,\r\n            }}\r\n          >\r\n            <FlexContainer style={{ border: '2px solid black' }}>\r\n              <FlexContainer $full $direction='column'>\r\n                <Name character={character} />\r\n                <FlexContainer style={{ background: Theme.mediumBgColor }}>\r\n                  <Health character={character} />\r\n                  <FlexContainer $full style={{ maxWidth: 160, minWidth: 160 }}>\r\n                    <PartyCharacterConsumables\r\n                      character={character}\r\n                      consumables={character.consumables}\r\n                      onClick={onConsumableClick}\r\n                    />\r\n                  </FlexContainer>\r\n                  <FlexContainer $full $direction='column'>\r\n                    {showActions && (\r\n                      <Actions\r\n                        character={character}\r\n                        canEquip={playerCanEquipItem}\r\n                      />\r\n                    )}\r\n                  </FlexContainer>\r\n                </FlexContainer>\r\n                <FullContainer />\r\n                <FlexContainer $direction='column' style={{ paddingLeft: 38 }}>\r\n                  <HealthGauge\r\n                    character={character}\r\n                    style={{ borderRight: 'none' }}\r\n                  />\r\n                  <XPGauge\r\n                    character={character}\r\n                    style={{ borderRight: 'none' }}\r\n                  />\r\n                </FlexContainer>\r\n                <HoverHexBadge\r\n                  position={{ bottom: 14, left: 90 }}\r\n                  size={45}\r\n                  rotate\r\n                  stroke={2}\r\n                  childStyle={{ paddingTop: 1 }}\r\n                  content={<BoxContainer dark>Character Level</BoxContainer>}\r\n                >\r\n                  <span\r\n                    style={{\r\n                      color: 'rgba(98, 128, 116,1)',\r\n                      fontSize: 24,\r\n                      lineHeight: '28px',\r\n                    }}\r\n                  >\r\n                    {character.level}\r\n                  </span>\r\n                </HoverHexBadge>\r\n                <Stats character={character} />\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          </BoxContainer>\r\n        </Halo>\r\n        <FlexContainer\r\n          style={{\r\n            position: 'absolute',\r\n            top: '-24px',\r\n            right: '4px',\r\n          }}\r\n        >\r\n          <>\r\n            {character.status.map((status) => (\r\n              <TagPreview key={status.type} direction='up' status={status} />\r\n            ))}\r\n            {character.immunities.map((status, i) => (\r\n              <TagPreview\r\n                key={i}\r\n                immunity={true}\r\n                status={{\r\n                  type: status,\r\n                  immunities: [],\r\n                  stack: 0,\r\n                  stats: ZERO_STATS,\r\n                  duration: -1,\r\n                }}\r\n              />\r\n            ))}\r\n          </>\r\n        </FlexContainer>\r\n        <HoverHexBadge\r\n          position={{\r\n            bottom: 61,\r\n            left: -3,\r\n          }}\r\n          rotate\r\n          stroke={2}\r\n          size={32}\r\n          childStyle={{\r\n            color: Theme.physicalColor,\r\n            fontSize: 18,\r\n            paddingTop: 1,\r\n          }}\r\n          content={<BoxContainer dark>Armor</BoxContainer>}\r\n        >\r\n          <NumberChange value={character.stats.armor} />\r\n        </HoverHexBadge>\r\n        <HoverHexBadge\r\n          position={{\r\n            bottom: 31,\r\n            left: -3,\r\n          }}\r\n          rotate\r\n          stroke={2}\r\n          size={32}\r\n          childStyle={{\r\n            color: Theme.magicColor,\r\n            fontSize: 18,\r\n            paddingTop: 1,\r\n          }}\r\n          content={<BoxContainer dark>Magic Resistance</BoxContainer>}\r\n        >\r\n          <NumberChange value={character.stats.resistance} />\r\n        </HoverHexBadge>\r\n        <HoverHexBadge\r\n          position={{\r\n            bottom: 16,\r\n            left: 24,\r\n          }}\r\n          rotate\r\n          stroke={2}\r\n          size={32}\r\n          childStyle={{\r\n            color: Theme.evasionColor,\r\n            fontSize: 18,\r\n            paddingTop: 1,\r\n          }}\r\n          content={<BoxContainer dark>Evasion</BoxContainer>}\r\n        >\r\n          <NumberChange value={character.stats.evasion} />\r\n        </HoverHexBadge>\r\n        <HoverHexBadge\r\n          direction='up'\r\n          rotate={true}\r\n          content={<BoxContainer dark>Weapon Damage</BoxContainer>}\r\n          position={{\r\n            bottom: -7,\r\n            left: 52,\r\n          }}\r\n          stroke={2}\r\n          size={45}\r\n          childStyle={{\r\n            color:\r\n              character.weapon.damage.value <= 4\r\n                ? 'red'\r\n                : character.weapon.damage.type === 'physical'\r\n                ? Theme.physicalColor\r\n                : Theme.magicColor,\r\n            fontSize: 24,\r\n            paddingTop: 1,\r\n          }}\r\n        >\r\n          <NumberChange\r\n            value={\r\n              (character.weapon.damage.value +\r\n                character.stats.attackDamageOffset) *\r\n              character.stats.attackDamageModifier\r\n            }\r\n          />\r\n        </HoverHexBadge>\r\n      </Wrapper>\r\n    </animated.div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { PartyCharacter } from '../PartyCharacter'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { RedButton } from '../../elements/button'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { LocalToastRp } from '../../contexts/LocalToastContext'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\n\r\nexport interface PlayerPartyPropsT {\r\n  onCharacterClick?: (character: tProcessedCharacter) => void\r\n}\r\nexport const PlayerParty = (props: PlayerPartyPropsT) => {\r\n  const { onCharacterClick } = props\r\n  const {\r\n    activeCharacter,\r\n    selectedSkill,\r\n    isRunning,\r\n    next,\r\n    onSkillSelect,\r\n  } = useCombatContext()\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { party } = usePartyContext()\r\n  const { onCharacterConsumableClick } = useUIContext()\r\n\r\n  const showConfirmButton = (c: tProcessedCharacter) =>\r\n    selectedSkill &&\r\n    activeCharacter &&\r\n    c.health > 0 &&\r\n    ((selectedSkill.targetType === 'self' && c.id === activeCharacter.id) ||\r\n      selectedSkill.targetType === 'ally')\r\n\r\n  return (\r\n    <FlexContainer $direction='column' style={{ marginBottom: 30 }}>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          alignItems: 'flex-end',\r\n          cursor: selectedSkill?.targetType === 'party' ? 'pointer' : 'default',\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <FlexContainer\r\n            $direction='column'\r\n            key={c.id}\r\n            style={{ height: 177, justifyContent: 'flex-end' }}\r\n          >\r\n            {showConfirmButton(c) && (\r\n              <FlexContainer style={{ justifyContent: 'center' }}>\r\n                <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n                  <RedButton onClick={() => next(c)} $direction='up'>\r\n                    {c.id === activeCharacter.id\r\n                      ? 'Target Self'\r\n                      : 'Target Ally'}\r\n                  </RedButton>\r\n                </div>\r\n              </FlexContainer>\r\n            )}\r\n            <LocalToastRp>\r\n              {({ push }) => (\r\n                <PartyCharacter\r\n                  push={push}\r\n                  selected={\r\n                    isRunning &&\r\n                    currentEncounter &&\r\n                    currentEncounter.type !== 'shop' &&\r\n                    activeCharacter &&\r\n                    c &&\r\n                    c.id === activeCharacter.id\r\n                  }\r\n                  character={c}\r\n                  onClick={() => onCharacterClick && onCharacterClick(c)}\r\n                  onConsumableClick={(consumable, index) => {\r\n                    try {\r\n                      if (!c || !consumable || index === undefined) return\r\n                      if (onCharacterConsumableClick) {\r\n                        onCharacterConsumableClick(c, index, consumable)\r\n                      }\r\n                      if (c && c.id === activeCharacter.id) {\r\n                        onSkillSelect(consumable.skill, index)\r\n                      }\r\n                    } catch (e) {}\r\n                  }}\r\n                />\r\n              )}\r\n            </LocalToastRp>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && selectedSkill.targetType === 'party' && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n            <RedButton onClick={() => next(party)}>Target Party</RedButton>\r\n          </div>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useGameStateContext } from '../GameStateContext'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { makeParty } from '../../game/Party/util'\r\nimport { tCombatEncounter } from '../../game/Encounter/type'\r\nimport { CombatContextProvider } from '.'\r\n\r\nexport interface LinkedCombatContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const LinkedCombatContext = (\r\n  props: LinkedCombatContextProviderPropsT,\r\n) => {\r\n  const { children } = props\r\n  const { currentEncounter, floor } = useGameStateContext()\r\n  const [combatParty, setCombatParty] = useState<tParty>(makeParty(0, floor, 0))\r\n  useEffect(() => {\r\n    if (currentEncounter && (currentEncounter as tCombatEncounter).party)\r\n      setCombatParty((currentEncounter as tCombatEncounter).party)\r\n  }, [currentEncounter])\r\n\r\n  return (\r\n    <CombatContextProvider\r\n      enemyParty={combatParty}\r\n      setEnemyParty={setCombatParty}\r\n    >\r\n      {children}\r\n    </CombatContextProvider>\r\n  )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { getEncounterBg } from '../../game/Encounter/constants'\r\nimport { getDepth } from '../../grid/util'\r\n\r\nexport interface AppBgPropsT {\r\n  children: JSX.Element | JSX.Element[]\r\n}\r\nexport const AppBg = (props: AppBgPropsT) => {\r\n  const { children } = props\r\n  const { floor, currentHex, floors, currentEncounter } = useGameStateContext()\r\n  const currentFloor = floors[floor]\r\n\r\n  const baseBg = useMemo(() => {\r\n    return getEncounterBg(getDepth(currentHex, currentFloor.size), floor)\r\n  }, [floor, currentHex])\r\n  const bg = currentEncounter?.completed ? baseBg.completed || baseBg : baseBg\r\n\r\n  /*\r\n  const deadCount = party.characters.filter((c) => c.health <= 0).length\r\n  const deadDiff = party.characters.length - deadCount\r\n  const filter = `grayscale(${\r\n    ((party.characters.length - deadDiff) / party.characters.length) * 100\r\n  }%)`\r\n  */\r\n\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        background: `url(${bg.bg}) center center fixed no-repeat`,\r\n        backgroundSize: 'cover',\r\n        transition: 'all 2s',\r\n        //filter,\r\n      }}\r\n    >\r\n      <FlexContainer\r\n        $full\r\n        $direction='column'\r\n        style={{\r\n          background: bg.overlay,\r\n          transition: 'all 2s',\r\n        }}\r\n      >\r\n        {children}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Switch } from 'react-router-dom'\r\nimport { Combat } from './domain/Combat'\r\nimport { CombatLogContextProvider } from './contexts/CombatLogContext'\r\nimport { ModalContextProvider } from './contexts/ModalContext'\r\nimport { makeRoute, RouteController } from './routes'\r\nimport { Party } from './domain/Party'\r\nimport { Start } from './domain/Start'\r\nimport { UIContextProvider } from './contexts/UIContext'\r\nimport { PlayerParty } from './components/PlayerParty'\r\nimport { FullContainer } from './elements/flex'\r\nimport { LinkedCombatContext } from './contexts/CombatContext/context'\r\nimport { AppBg } from './components/AppBg'\r\n\r\nexport const App = () => {\r\n  return (\r\n    <ModalContextProvider>\r\n      <LinkedCombatContext>\r\n        <UIContextProvider>\r\n          <CombatLogContextProvider>\r\n            <AppBg>\r\n              <RouteController />\r\n              <FullContainer>\r\n                <Switch>\r\n                  {makeRoute('/party', Party)}\r\n                  {makeRoute('/combat', Combat)}\r\n                  {makeRoute('/', Start)}\r\n                </Switch>\r\n              </FullContainer>\r\n              <PlayerParty />\r\n            </AppBg>\r\n          </CombatLogContextProvider>\r\n        </UIContextProvider>\r\n      </LinkedCombatContext>\r\n    </ModalContextProvider>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './index.css'\n\nimport { Provider as StyletronProvider, DebugEngine } from 'styletron-react'\nimport { Client as Styletron } from 'styletron-engine-atomic'\nimport { Provider as ReduxProvider } from 'react-redux'\nimport { HashRouter as Router } from 'react-router-dom'\nimport { makeStore } from './state'\nimport { PartyContextProvider } from './contexts/PartyContext'\nimport { GameStateContextProvider } from './contexts/GameStateContext'\n\nconst debug = process.env.NODE_ENV === 'production' ? void 0 : new DebugEngine()\nconst engine: Styletron = new Styletron()\nconst store = makeStore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n        <GameStateContextProvider>\n          <PartyContextProvider>\n            <Router basename='/JSFTK_combat/'>\n              <App />\n            </Router>\n          </PartyContextProvider>\n        </GameStateContextProvider>\n      </StyletronProvider>\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport party from './party'\r\nimport game from './game2'\r\n\r\nexport const makeStore = () =>\r\n  createStore(combineReducers({ party, game }), compose(applyMiddleware(thunk)))\r\n"],"sourceRoot":""}