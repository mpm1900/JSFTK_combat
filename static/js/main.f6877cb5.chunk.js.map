{"version":3,"sources":["assets/img/forests/7.png","icons/svg/lorc/pentagram-rose.svg","icons/svg/lorc/cultist.svg","icons/svg/delapouite/coins.svg","icons/svg/lorc/broadsword.svg","assets/img/dungeon/4.png","icons/svg/lorc/battered-axe.svg","icons/svg/lorc/dodging.svg","icons/svg/lorc/all-for-one.svg","assets/img/forests/8.png","assets/img/dungeon/1.png","icons/svg/lorc/sprint.svg","icons/svg/lorc/scythe.svg","icons/svg/lorc/ringing-bell.svg","icons/svg/lorc/bone-knife.svg","icons/svg/lorc/drink-me.svg","icons/svg/lorc/molotov.svg","icons/svg/delapouite/perspective-dice-six.svg","icons/svg/lorc/high-shot.svg","icons/svg/lorc/shieldcomb.svg","icons/svg/delapouite/armor-upgrade.svg","icons/svg/delapouite/armor-downgrade.svg","icons/svg/lorc/knapsack.svg","icons/svg/lorc/hammer-drop.svg","assets/img/forests/1.png","assets/img/dungeon/3.png","assets/img/dungeon/2.png","icons/svg/delapouite/chest-armor.svg","icons/svg/delapouite/cross-shield.svg","icons/svg/lorc/leather-boot.svg","icons/svg/lorc/visored-helm.svg","icons/svg/delapouite/ring.svg","icons/svg/delapouite/heart-necklace.svg","icons/svg/lorc/knife-thrust.svg","icons/svg/delapouite/overlord-helm.svg","icons/svg/lorc/wolf-head.svg","icons/svg/lorc/raven.svg","icons/svg/lorc/snake.svg","icons/svg/lorc/witch-flight.svg","icons/svg/skoll/troll.svg","icons/svg/lorc/werewolf.svg","icons/svg/lorc/boar-tusks.svg","icons/svg/lorc/unfriendly-fire.svg","icons/svg/lorc/haunting.svg","icons/svg/lorc/daemon-skull.svg","icons/svg/lorc/spectre.svg","icons/svg/lorc/diablo-skull.svg","icons/svg/lorc/harry-potter-skull.svg","icons/svg/delapouite/spider-eye.svg","icons/svg/lorc/laurel-crown.svg","icons/svg/delapouite/heart-beats.svg","icons/svg/delapouite/biceps.svg","icons/svg/lorc/brain.svg","icons/svg/sbed/hand.svg","icons/svg/lorc/lyre.svg","icons/svg/lorc/clover.svg","icons/svg/lorc/robe.svg","icons/svg/lorc/scale-mail.svg","icons/svg/lorc/lightning-shield.svg","icons/svg/delapouite/robin-hood-hat.svg","icons/svg/lorc/pointy-hat.svg","icons/svg/lorc/battle-axe.svg","icons/svg/lorc/gavel.svg","icons/svg/lorc/heavy-arrow.svg","icons/svg/lorc/bowie-knife.svg","icons/svg/skoll/revolver.svg","icons/svg/lorc/wizard-staff.svg","icons/svg/lorc/croc-sword.svg","icons/svg/skoll/fist.svg","icons/svg/delapouite/herbs-bundle.svg","icons/svg/lorc/lotus-flower.svg","icons/svg/delapouite/medicine-pills.svg","icons/svg/delapouite/executioner-hood.svg","icons/svg/lorc/cowled.svg","icons/svg/delapouite/female-vampire.svg","icons/svg/delapouite/wizard-face.svg","icons/svg/delapouite/kenku-head.svg","icons/svg/delapouite/shield-impact.svg","icons/svg/lorc/energy-arrow.svg","icons/svg/lorc/fire-zone.svg","icons/svg/lorc/magic-swirl.svg","icons/svg/lorc/heavy-timer.svg","icons/svg/delapouite/extra-time.svg","icons/svg/sbed/lucifer-cannon.svg","icons/svg/delapouite/firewall.svg","icons/svg/lorc/flat-hammer.svg","icons/svg/lorc/plain-dagger.svg","icons/svg/lorc/pointy-sword.svg","icons/svg/lorc/axe-swing.svg","icons/svg/lorc/saber-slash.svg","icons/svg/lorc/wave-strike.svg","icons/svg/lorc/sparkling-sabre.svg","icons/svg/lorc/bordered-shield.svg","icons/svg/lorc/resonance.svg","icons/svg/lorc/gunshot.svg","icons/svg/delapouite/crosshair.svg","icons/svg/delapouite/bullet-impacts.svg","icons/svg/delapouite/backward-time.svg","icons/svg/lorc/snail.svg","icons/svg/lorc/double-shot.svg","icons/svg/sbed/health-normal.svg","icons/svg/lorc/embrassed-energy.svg","icons/svg/lorc/life-support.svg","icons/svg/lorc/punch.svg","icons/svg/lorc/ubisoft-sun.svg","icons/svg/lorc/star-swirl.svg","icons/svg/sbed/targeted.svg","icons/svg/delapouite/sticky-boot.svg","icons/svg/lorc/biohazard.svg","icons/svg/carl-olsen/flame.svg","icons/svg/lorc/bleeding-wound.svg","icons/svg/lorc/snowflake-2.svg","icons/svg/lorc/broken-shield.svg","icons/svg/lorc/split-cross.svg","icons/svg/lorc/broken-bone.svg","icons/svg/delapouite/leather-armor.svg","icons/svg/lorc/crowned-skull.svg","icons/svg/lorc/campfire.svg","state/util.ts","hooks/useActions.ts","game/Stats/constants.ts","util/undefAdd.ts","util/getRandom.ts","util/noneg.ts","game/Stats/util.ts","game/Status/constants.ts","game/Weapon/builders/damage.ts","game/Weapon/builders/goldValue.ts","game/Weapon/builders/rarity.ts","game/Weapon/builders/stats.ts","game/Weapon/builders/typeConfig.ts","game/Weapon/builders/index.ts","game/Skill/skills/index.ts","game/Skill/skills/axe.ts","game/Weapon/builders/objects/axe.ts","game/Skill/skills/bow.ts","game/Weapon/builders/objects/bow.ts","game/Skill/skills/catalyst.ts","game/Weapon/builders/objects/catalyst.ts","game/Skill/skills/chime.ts","game/Weapon/builders/objects/chime.ts","game/Skill/skills/scythe.ts","game/Weapon/builders/objects/scythe.ts","game/Armor/builders/index.ts","game/Skill/skills/armor.ts","game/Armor/builders/constants.ts","game/Armor/builders/pendants/index.ts","game/Armor/builders/rings/index.ts","game/Armor/builders/shields/level_0.ts","game/Armor/builders/shields/level_1.ts","game/Armor/builders/shields/level_2.ts","game/Armor/builders/sets/index.tsx","game/Armor/builders/sets/ranger.ts","game/Armor/builders/sets/patrician.ts","game/Armor/builders/sets/executioner.ts","game/Armor/builders/sets/student.ts","game/Armor/builders/sets/tomb.ts","game/Armor/builders/sets/adventure.ts","game/Armor/builders/sets/aristocrat.ts","game/Armor/builders/sets/graveguard.ts","game/Armor/builders/sets/apprentice.ts","game/Armor/builders/sets/hunter.ts","game/Armor/builders/sets/antiquated.ts","game/Armor/builders/sets/iron.ts","game/Armor/builders/sets/bone.ts","game/Armor/builders/sets/novice.ts","game/Armor/builders/sets/rogue.ts","game/Armor/builders/sets/necromancer.ts","game/Armor/builders/sets/fallen_raider.ts","game/Armor/builders/sets/noble.ts","game/Armor/builders/sets/assassin.ts","game/Armor/builders/sets/old_knight.ts","game/Armor/builders/sets/reaper.ts","game/Armor/builders/sets/bishop.ts","game/Skill/skills/blunt.ts","game/Weapon/builders/objects/hammer.ts","game/Skill/skills/dagger.ts","game/Weapon/builders/objects/dagger.ts","game/Skill/skills/greatsword.ts","game/Weapon/builders/objects/greatsword.ts","game/Skill/skills/pistol.ts","game/Weapon/builders/objects/pistol.ts","game/Skill/skills/sword.ts","game/Weapon/builders/objects/sword.ts","game/Weapon/builders/objects/index.ts","game/Item/util.ts","game/Character/enemies/forest_wolf.ts","game/Character/enemies/forest_raven.ts","game/Skill/skills/consumables.ts","game/Consumable/objects/godsbeard.ts","game/Character/enemies/forest_snake.ts","game/Character/enemies/forest_witch.ts","game/Character/enemies/forest_troll.ts","game/Character/enemies/forest_beast.ts","game/Character/enemies/forest_boar.ts","game/Character/enemies/cultist_brute.ts","game/Character/enemies/cultist.ts","game/Character/enemies/cultist_scholar.ts","game/Character/enemies/flame_wisp.ts","game/Character/enemies/banshee.ts","game/Character/enemies/consecrated_guard.ts","game/Encounter/floors/util.tsx","game/Character/enemies/tomb_spirit.ts","game/Character/bosses/consecrated_beast.ts","game/Character/enemies/tomb_guardian.ts","game/Character/enemies/tomb_spider.ts","game/Encounter/floors/index.tsx","game/Encounter/floors/floor-1.tsx","game/Encounter/floors/floor-2.tsx","game/Encounter/floors/floor-3.tsx","game/Encounter/constants.ts","theme/index.ts","game/Character/constants.ts","game/Character/enemies/_builder.ts","game/Character/bosses/lich.ts","game/Weapon/builders/unique/boss_lich.ts","game/Weapon/constants.ts","game/Armor/builders/uniques/heart_of_the_beast.ts","game/Roll/util.ts","game/Armor/constants.ts","game/Consumable/util.ts","game/Weapon/fists.ts","game/Consumable/objects/celestial_lotus.ts","game/Consumable/objects/poison_knife.ts","game/Consumable/objects/beast_drug.ts","game/Consumable/objects/curing_potion.ts","game/Consumable/objects/firebomb.ts","game/Item/constants.ts","game/Character/util.ts","game/Party/util.ts","game/Party/constants.ts","state/party/index.ts","grid/util.ts","game/Encounter/util.ts","state/game2/index.ts","contexts/GameStateContext/index.tsx","contexts/PartyContext/index.tsx","contexts/ModalContext/reducer.ts","contexts/ModalContext/index.tsx","elements/flex.ts","elements/button.tsx","components/Icon/index.tsx","components/Hover/index.tsx","components/Tooltip/index.tsx","hooks/useOnClickOutside.ts","elements/box.tsx","icons/skills.ts","icons/status.ts","icons/maps.tsx","elements/badge.tsx","components/SkillChecks/index.tsx","components/StatsPreview/index.tsx","components/ItemCard/index.tsx","components/CombatVictoryModal/pure.tsx","components/CombatVictoryModal/index.tsx","game/Other/util.ts","game/Queue/util.ts","game/Skill/constants.ts","game/Skill/util.ts","game/Skill/committer.ts","contexts/CombatContext/index.tsx","game/AI/util.ts","components/RoundResultRenderer/Perfect.tsx","components/RoundResultRenderer/index.tsx","components/SkillPreview/index.tsx","components/PartyActiveCharacter/StatBar.tsx","contexts/UIContext/index.tsx","components/PartyActiveCharacter/Items.tsx","components/PartyActiveCharacter/Name.tsx","components/CharacterIcon/index.tsx","components/PartyActiveCharacter/Image.tsx","components/PartyActiveCharacter/elements.tsx","components/PartyActiveCharacter/WeaponList.tsx","components/PartyActiveCharacter/Stats.tsx","components/PartyActiveCharacter/MenuSelect.tsx","components/PartyActiveCharacter/HoverArea.tsx","elements/shapes.tsx","components/PartyActiveCharacter/index.tsx","components/PartyActiveCharacter/ArmorList.tsx","components/EquipItemModal/index.tsx","components/CombatActions/index.tsx","elements/monospace.tsx","components/Gauge/v2.tsx","components/NumberChange/index.tsx","components/Gauge/index.tsx","components/TagPreview/index.tsx","hooks/usePlayerCharacterNotifications.tsx","components/EnemyCharacter/Health.tsx","contexts/LocalToastContext/index.tsx","hooks/useElementShake.tsx","components/EnemyCharacter/index.tsx","components/CombatParty/index.tsx","components/AppHeader/index.tsx","components/PartyResources/index.tsx","components/CombatQueue/index.tsx","contexts/CombatLogContext/util.tsx","contexts/CombatLogContext/index.tsx","components/CombatLog/index.tsx","domain/Combat.tsx","hooks/useCombatStart.tsx","routes/index.tsx","components/Shop/index.tsx","components/Shrine/index.tsx","components/BossRewards/index.tsx","components/NonCombatEncounter/index.tsx","elements/typography.tsx","game/Encounter/text/index.ts","components/EncounterActions/Choice.tsx","components/EncounterActions/Shop.tsx","components/EncounterActions/Shrine.tsx","components/EncounterActions/index.tsx","icons/static/Boss.tsx","icons/static/Combat.tsx","icons/static/Random.tsx","icons/static/Shine.tsx","icons/static/Shop.tsx","icons/static/Start.tsx","domain/Grid/hex.tsx","domain/Grid/index.tsx","domain/Party.tsx","domain/Start.tsx","game/Weapon/builders/unique/test_weapon.ts","game/Consumable/constants.ts","components/PartyCharacterConsumables/index.tsx","components/PartyCharacter/Stats.tsx","components/PartyCharacter/Name.tsx","components/PartyCharacter/Actions.tsx","components/PartyCharacter/Health.tsx","components/PartyCharacter/index.tsx","components/PlayerParty/index.tsx","contexts/CombatContext/context.tsx","components/AppBg/index.tsx","App.tsx","serviceWorker.ts","index.tsx","state/index.ts"],"names":["module","exports","makeReducer","core","initialState","state","action","coreFn","type","useActions","actions","dispatch","useDispatch","useMemo","bindActionCreators","ZERO_STATS","vigor","strength","intelligence","dexterity","charisma","agility","luck","armor","resistance","evasion","maxHealthOffset","healthRegeneration","damageTakenModifier","damageTakenRangeModifiers","melee","ranged","damageReflection","attackDamageOffset","attackDamageModifier","criticalChance","damageModifiers","flying","undead","beast","queueConsolidationModifier","queueValueSet","undefined","goldModifier","maxInspirationOffset","consumableHealthGainOffset","minHealthOffset","BASE_C_STATS","CLASS_STATS","executioner","ranger","reaper","student","patrician","drifter","enemy","DAMAGE_BONUS_KEYS","DEFENSE_BONUS_KEYS","HEALTH_FOCUS_BONUS_KEYS","STAT_BONUS_KEYS","STAT_KEY_LABELS","undefAdd","a","b","getRandom","items","Math","floor","random","length","noneg","value","combineStats","stats","reduce","result","STATUS_CONFIG","bleeding","name","description","canStack","isTemporary","duration","immunities","burning","frozen","poisoned","shocked","stunned","wet","rushed","interrupted","reset","evasive","resilient","protected","targeted","cure","blessed","GLOBAL_DAMAGE_OFFSETS","axe","hammer","sword","greatsword","bow","dagger","scythe","catalyst","chime","pistol","fist","WEAPON_DAMAGE_CONFIG","starting","rusted","tomb","buried","withering","glass","iron","steel","stainless","ancient","crystal","elemental","cursed","sharp","hardened","engraved","ethereal","exquisite","divine","arcane","celestial","mythic","unique","BASE_WEAPON_TYPES_GOLD","WEAPON_CLASS_GOLD_OFFSETS","WEAPON_CLASS_RARIES","DEFAULT_WEAPON_TYPE_STATS","DEFAULT_WEAPON_TYPE_CONFIG","stat","twoHand","range","damageType","createWeapon","weaponType","weaponClass","skills","goldValue","damageValue","rarity","defaultStats","id","v4","itemType","breakable","damage","createBreakableWeapon","createSkill","rolls","offset","rest","damageModifier","splashDamageModifier","targetType","healing","perfectSplash","perfectPierce","perfectStatus","CHOP","SWING","WITHERING_SWING","GLASS_SWING","AXE_SPIN","FLURRY","STUN","CLEAVE","SLICE","SLASH","EXECUTIONER_AXE","AXES","0","1","2","3","4","5","SHOT","WITHERING_SHOT","GLASS_SHOT","HEADSHOT","PIN_DOWN","WOUNDING_SHOT","RANGERS_BOW","BOWS","BLAST","GLASS_BLAST","ARCANE","NOVA","ENFLAME","ENGULF","PROTECT","TIME_JUMP","STUDENTS_CATALYST","CATALYSTS","RING","WITHERING_RING","GLASS_RING","REVERBERATE","SLOW","VANISH","RUSH","RESET","PATRICIANS_CHIME","CHIMES","THRUST","ARMOR_UP","EVADE_UP","SCYTHES","createArmor","resource","createFootwear","createHat","createHeavyArmor","createHelmet","createLightArmor","createMagicArmor","createMagicHat","createShield","createRing","createPendant","TAUNT","weaponStatOverride","PENDANTS_BY_LEVEL","RINGS_BY_LEVEL","SHIELDS_BY_LEVEL","ARMOR_BY_LEVEL","SMASH","WITHERING_SMASH","GLASS_SMASH","RIPPLE","EARTHQUAKE","CRUSH","HAMMERS","STRIKE","WITHERING_STRIKE","GLASS_STRIKE","LUNGE","STAB","DAGGERS","WIDE_SWING","GREATSWORDS","FIRE","SNIPE","FAN_FIRE","PISTOLS","SWORDS","WEAPONS_BY_LEVEL","getRandomItem","Object","keys","allWeapons","level","parseInt","min","Array","fill","_","index","FOREST_WOLF","makeEnemy","Wolf","makeEnemyWeapon","makeEnemyReward","FOREST_RAVEN","Raven","stack","HEAL","REMOVE_CURSES","POISON_KNIFE","cid","GODSBEARD","skill","consumableId","FOREST_SNAKE","Bee","FOREST_WITCH","Witch","FOREST_TROLL","Troll","FOREST_BEAST","BeastMan","FOREST_BOAR","Boar","CULTIST_BRUTE","Cultist","CULTIST","CULTIST_SCHOLAR","FLAME_WISP","FireWhisp","BANSHEE","Banshee","CONSECRATED_GUARD","Skull","makeRandomFloorEncounter","characterList","enemyCount","map","TOMB_SPIRIT","Spirit","CONSECRATED_BEAST","Beast","TOMB_GUARDIAN","TOMB_SPIDER","Spider","FLOOR_CONFIGS_BY_INDEX","bosses","LICH","w","altEnemies","enemies","6","7","8","9","ZERO_REWARD","gold","xp","status","armorDown","resDown","attackDown","armorUp","attackUp","resUp","justGold","justXp","justRandomItem","POSSIBLE_SHINE_REWARDS","Theme","CHARACTER_XP_MAX","CHARACTER_CLASS_COLORS","BASE_CHARACTER","isCharacter","icon","partyId","experience","class","healthOffset","inspirationOffset","tags","weapon","consumables","possibleRewards","health","BASE_WEAPON","Lich","LICH_SWORD","CLASS_WEAPONS","BOSS_ITEMS","resolveCheck","character","key","statValue","getBaseStatValue","roll","DiceRoll","total","CLASS_ARMOR","considateConsumableListToStack","forEach","c","s","consumable","includes","count","updateStackItem","FISTS","CELESTIAL_LOTUS","BEAST_DRUG","CURE","CURE_POTION","FIREBOMB","weaponDamageOverride","ITEM_RARITY_COLORS","common","uncommon","rare","CLASS_STARTING_CONSUMABLES","CHARACTER_RESOURCES","checkForProcessedCharacter","processed","Error","makeCharacter","characterClass","processCharacter","isCapKey","capStats","r","getSkills","statusImmunities","baseVigor","startingHealth","maxHealth","maxInspiration","inspiration","rawStats","getDamageResistance","hasStatus","statusType","hasAnyStatus","statusTypes","some","hasImmunity","getReflectedDamage","target","rawDamage","commitDamage","ignoreResistance","pc","rawDamageValue","filter","ceil","decrementStatusDurations","addMultipleStatus","types","durationOverride","statusConfig","existingStatus","find","findStatus","addStatus","checkStatus","levelUp","isParty","obj","checkForProcessedParty","party","characters","findCharacterInParty","processParty","updateCharacter","characterId","updater","makeParty","floorConfig","makeBossParty","config","getRolledRewards","checkedCharacter","rewards","i","getRewardsFromCharacter","commitRewards","goldMultiplier","addExperience","xpToNextLevel","PLAYER_PARTY_ID","SET_GOLD","actionCreators","payload","item","updateParty","upsertCharacter","deleteCharacter","upsertItem","setGold","jack","jim","john","INITIAL_STATE","makeHex","q","MIN_HEX","size","getDepth","hex","makeEncounterArray","maxQ","maxR","shopIndex","ri","d","startHex","e","makeRandomEncounter","makeEncounterType","depth","max","isShop","altIndex","encounterType","encounter","choiceId","reward","completed","boss","costs","getItemCost","results","makeFloor2","console","log","encounters","loading","itemId","setTimeout","chooseNext","nextFloor","removeItem","completeCurrent","updateCurrentFloor","floors","defaultValue","started","currentHex","currentEncounter","previousEncounter","GameStateContext","React","createContext","useGameStateContext","useContext","GameStateContextProvider","props","children","useSelector","game","useState","setStarted","JSON","stringify","setPreviousEncounter","useEffect","Provider","defaultContextValue","rawParty","activeCharacter","findCharacter","findRawCharacter","setActiveCharacter","equipItem","unequipItem","purchaseItem","cost","sellItem","refreshParty","PartyContext","PartyContextProvider","activeCharacterId","setActiveCharacterId","existingArmor","equipArmor","existingWeapon","equipWeapon","unequipArmor","usePartyContext","isOpen","contents","callback","blocking","styles","OPEN","CLOSE","style","reducer","coreFunction","ModalContext","open","close","setBlocking","setPayload","setContents","setCallback","setStyles","useModalContext","getContextValue","Modal","setAppElement","ModalContextProvider","reducerValue","useReducer","context","onRequestClose","content","backgroundColor","color","width","margin","bottom","borderColor","modal","overlay","zIndex","FlexContainer","styled","display","flexDirection","$direction","flex","$full","justifyContent","$center","FullContainer","Button","cursor","background","boxShadow","textShadow","border","outline","padding","userSelect","RedButton","withStyle","fontWeight","borderTop","borderBottom","animationDirection","animationIterationCount","animationName","Icon","src","shadow","onClick","setLoading","svg","setSvg","fetch","then","res","text","className","height","dangerouslySetInnerHTML","__html","Hover","delay","internalHovering","setInternalHovering","isHovering","setIsHovering","guid","setGuid","useLayoutEffect","onMouseEnter","preventDefault","stopPropagation","onMouseLeave","Tooltip","direction","tagName","arrow","HoverToolTip","ClickToolTip","setIsOpen","ref","useRef","handler","listener","event","current","contains","document","addEventListener","removeEventListener","useOnClickOutside","p","v","BoxContainer","substyle","dark","tag","Element","boxSizing","SKILL_ICONS","Punch","Shot","Headshot","PinDown","Flurry","SpreadShot","Arcane","Nova","Blast","TimeJump","Enflame","Engulf","Ring","Reverberate","Smash","Strike","Swing","Chop","Thrust","Earthquake","Shockwave","Ripple","Crush","AxeSpin","Cleave","Slash","Lunge","Stab","Slice","Swipe","Fire","Snipe","FanFire","Stun","Reset","Taunt","Slow","Protect","Heal","Bless","PoisonKnife","Firebomb","CurePotion","Restore","Rush","Vanish","EvadeUp","ArmorUp","AttackUp","ArmorDown","STATUS_ICONS","Evasive","Stunned","Targeted","Protected","Poisoned","Burning","Bleeding","Frozen","SpeedDown","ResistanceDown","Cursed","STAT_ICONS","Vigor","Strength","Brain","Hand","Masks","Agility","Clover","ARMOR_TYPE_ICONS","MagicArmor","ClothArmor","Armor","shield","Shield","ward","MagicShield","footwear","Footwear","hat","Hat","MagicHat","helmet","Helmet","pendant","Pendant","ring","WEAPON_TYPE_ICONS","Axe","Blunt","Bow","Dagger","Chime","Handgun","MagicStaff","Scythe","Sword","Greatsword","Fist","RESOURCE_ICONS","Weapon","offhand","body","head","feet","CONSUMABLE_ITEM_ICONS","Godsbeard","Lotus","BeastDrug","CONSUMABLE_ITEM_COLORS","CHARACTER_CLASS_ICONS","Executioner","Bard","Hunter","Reaper","Scholar","Hobo","Div","transform","Badge","withWrapper","$style","position","$absolute","fontFamily","$size","alignItems","lineHeight","borderRadius","$color","top","$top","$bottom","right","$right","left","$left","transition","SkillChecks","perfect","every","check","label","SkillCheck","iconSize","crit","colors","getPerfectStatusColors","opacity","getColor","X","defense_key_colors","StatsPreview","fontSize","textTransform","getDamageColor","ItemTitle","$rarity","ItemSubtitle","ItemCard","showBuyButton","buyText","onBuyClick","isArmor","isWeapon","rarityColor","textAlign","borderWidth","whiteSpace","marginBottom","marginTop","marginRight","marginLeft","minHeight","Melee","Ranged","Breakable","getItem","CombatVictoryModalPure","title","showOther","onEquipClick","onNextClick","setItems","first","next","Gold","XP","CombatVictoryModal","consolidatedRewards","consolidateRewards","makeCombatQueue","sortedCharacters","sort","validateQueue","AGILITY_OFFSET","consolidateQueue","queue","Number","POSITIVE_INFINITY","getMin","shiftQueue","getFirst","commitQueueUpdates","source","pcs","shiftedQueue","PERFECT_DISPLAY_INFO","splash","pierce","heal","getTargetSkillResult","sourceResult","dodgeResult","dodgeSuccess","getRawDamage","totalDamage","reflectedDamage","loggedDamgge","getSkillResult","targets","inspirationUsed","rollResults","passedCount","criticalHitSuccess","rollDamageModifier","round","weaponRangeOverride","accuracySuccess","weaponDidBreak","splashDamage","addedStatus","getSourceSkillResult","targetResults","resolveSkillTarget","makeSkillTarget","getSkillDamage","getPerfectText","perfectKeys","base","getPerfectKeys","pre","partyUpdater","commitSkillResults","playerParty","enemyParty","targetResult","sourceParty","targetParty","localUpdate","selectedSkill","selectedTargets","roundResults","activeRound","isRunning","isRenderingResult","onSkillSelect","onTargetsSelect","start","commit","equipItemCombat","CombatContext","useCombatContext","CombatContextProvider","setEnemyParty","history","useHistory","setIsRunning","setIsRenderingResult","setQueue","resultCommitter","roundId","setRoundId","setRoundResults","setActiveRound","selectedTarget","setSelectedTarget","setSelectedSkill","completeRound","useCallback","targetedCharacters","t","getSkillTargetOptions","getAIAction","execEnemyTurn","push","consumableIndex","nextTarget","roundTarget","Perfect","show","useSpring","div","RoundResultRenderer","isModal","RoundResult","isDone","setIsDone","activeIndex","setActiveIndex","stream","Kefir","sequentially","onValue","onEnd","later","showPerfect","isPlayer","showTarget","SkillPreview","perfectChance","minWidth","getStatColor","StatBar","paddingTop","paddingBottom","playerCanEquipItem","openCharacterInventoryId","showSkillTooltips","hoverQueueCharacterId","onCharacterConsumableClick","setPlayerCanEquipItem","setOpenCharacterInventoryId","setOnCharacterConsumableClick","fn","setShowSkillTooltips","setHoverQueueCharacterId","UIContext","useUIContext","UIContextProvider","_setOnCharacterConsumableClick","ItemRow","$disabled","paddingLeft","Items","setActiveItem","disabled","onHover","canUnequip","Item","distance","Name","CharacterIcon","iconStyle","overflow","Image","Row","$active","ActionsRow","WeaponList","canEquip","onEquipItem","activeItemId","setActiveItemId","condenseListToStack","localeCompare","StatRow","withStyleDeep","Stats","k","Stat","ACTIVE_CHARACTER_MENU_KEYS","render","Weapons","MenuSelect","activeKey","onActiveKeyChange","option","paddingRight","HoverArea","activeItem","foundArmor","Hexagon","childStyle","mod","boxW","boxH","triH","triW","tHeight","borderRight","borderLeft","HexBadge","stroke","rotate","angle","HoverHexBadge","PartyActiveCharacter","activeMenuKey","setActiveMenuKey","activeOption","o","maxHeight","ArmorList","EquipItemModal","CombatActions","Fragment","Inventory","Monospace","Gauge2","percentage","oldPercentage","setOldPercentage","from","to","friction","mass","tension","maxWidth","NumberChange","previousValue","setPreviousValue","n","clamp","HealthGauge","showNumbers","XPGauge","TagPreview","immunity","usePlayerCharacterNotifications","shake","previousHealth","setPreviousHealth","previousLevel","setPreviousLevel","healthDiff","abs","lastRound","chResult","Health","Toast","animation","useTransition","enter","leave","LocalToastRp","springConfig","useElementShake","immediate","reverse","shakeStyles","exec","EnemyCharacter","isBoss","active","CombatParty","AppHeader","PartyResources","CombatQueue","sortedIds","getSortedIds","bigList","NEGATIVE_INFINITY","getMax","widthCoef","Span","SkillSpan","CombatLogContext","combatLog","clear","useCombatLogContext","CombatLogContextProvider","setCombatLog","deadLog","setDeadLog","NameSpan","isUserParty","isEnemyParty","NameSpanBuilder","line","dLog","latestRounds","baseRound","subTarget","splashDamageResistance","CombatLog","scrollRef","isExpanded","setIsExpanded","scrollIntoView","behavior","Combat","useCombatStart","makeRoute","path","Component","RouteController","CardList","flexWrap","tabs","Shop","activeTab","setActiveTab","tab","overflowY","Shrine","setResults","BossRewards","chosenReward","setChosenReward","NonCombatEncounter","HeadingSm","textDecoration","Text","ENCOUNTER_TEXTS","Choice","currentFloor","EncounterActions","Boss","fill-rule","Random","Start","Hex","adjacent","cellStyle","Color","darken","rgb","toString","h","Grid","hexagons","GridGenerator","triangle","activeHex","setActiveHex","dx","dy","stdDeviation","x","y","origin","spacing","flat","Unknown","Party","parties","onChange","rc","StartCharacterCard","CONSUMABLE_DESCRIPTIONS","PartyCharacterConsumables","onStackClick","filler","f","ConsumableBox","HEIGHT","PartyCharacterConsumable","PartyCharacterConsumableTooltip","getText","CharacterStat","statKey","ResourceE","Actions","inventoryOpen","inventoryStyle","Wrapper","animated","Halo","$targeted","$light","leftR","PartyCharacter","selected","showActions","onConsumableClick","targetIds","PlayerParty","onCharacterClick","showConfirmButton","LinkedCombatContext","combatParty","setCombatParty","AppBg","baseBg","bg","Forest1","Forest2","Forest3","Dungeon1","Dungeon2","Dungeon3","Dungeon4","getEncounterBg","backgroundSize","App","Boolean","window","location","hostname","match","engine","Styletron","store","createStore","combineReducers","compose","applyMiddleware","thunk","ReactDOM","StrictMode","debug","debugAfterHydration","basename","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,4C,qBCA3CD,EAAOC,QAAU,IAA0B,qC,iBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,kBCA3CD,EAAOC,QAAU,IAA0B,+B,yBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,iBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,4BCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,kD,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,iBCA3CD,EAAOC,QAAU,IAA0B,yC,sCCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,iBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,mECA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,gD,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,iBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IA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","file":"static/js/main.f6877cb5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/7.d2e528ea.png\";","module.exports = __webpack_public_path__ + \"static/media/pentagram-rose.d7458af6.svg\";","module.exports = __webpack_public_path__ + \"static/media/cultist.998af3b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/coins.97dc8c40.svg\";","module.exports = __webpack_public_path__ + \"static/media/broadsword.47ecfebc.svg\";","module.exports = __webpack_public_path__ + \"static/media/4.56cbed86.png\";","module.exports = __webpack_public_path__ + \"static/media/battered-axe.819d2726.svg\";","module.exports = __webpack_public_path__ + \"static/media/dodging.3c689d6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/all-for-one.33b25b62.svg\";","module.exports = __webpack_public_path__ + \"static/media/8.d80166bd.png\";","module.exports = __webpack_public_path__ + \"static/media/1.31fafbe8.png\";","module.exports = __webpack_public_path__ + \"static/media/sprint.968b443a.svg\";","module.exports = __webpack_public_path__ + \"static/media/scythe.f0a97d33.svg\";","module.exports = __webpack_public_path__ + \"static/media/ringing-bell.f8953cca.svg\";","module.exports = __webpack_public_path__ + \"static/media/bone-knife.8d6d549d.svg\";","module.exports = __webpack_public_path__ + \"static/media/drink-me.2ee1fbb7.svg\";","module.exports = __webpack_public_path__ + \"static/media/molotov.7ba33ac3.svg\";","module.exports = __webpack_public_path__ + \"static/media/perspective-dice-six.8b7e2589.svg\";","module.exports = __webpack_public_path__ + \"static/media/high-shot.eed9def8.svg\";","module.exports = __webpack_public_path__ + \"static/media/shieldcomb.802f20f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/armor-upgrade.c51f9198.svg\";","module.exports = __webpack_public_path__ + \"static/media/armor-downgrade.71dd2b83.svg\";","module.exports = __webpack_public_path__ + \"static/media/knapsack.62049a62.svg\";","module.exports = __webpack_public_path__ + \"static/media/hammer-drop.120a92c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.a7dcd7d0.png\";","module.exports = __webpack_public_path__ + \"static/media/3.5b81afea.png\";","module.exports = __webpack_public_path__ + \"static/media/2.22bba3d5.png\";","module.exports = __webpack_public_path__ + \"static/media/chest-armor.f1f52a3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross-shield.6feb257e.svg\";","module.exports = __webpack_public_path__ + \"static/media/leather-boot.89b85474.svg\";","module.exports = __webpack_public_path__ + \"static/media/visored-helm.1f2ced7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/ring.5187be72.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-necklace.fad66171.svg\";","module.exports = __webpack_public_path__ + \"static/media/knife-thrust.1e29ef7c.svg\";","module.exports = __webpack_public_path__ + \"static/media/overlord-helm.03e5b513.svg\";","module.exports = __webpack_public_path__ + \"static/media/wolf-head.4e7bf362.svg\";","module.exports = __webpack_public_path__ + \"static/media/raven.581ee1b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/snake.03f8f0ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/witch-flight.4d7f9b27.svg\";","module.exports = __webpack_public_path__ + \"static/media/troll.8e45be35.svg\";","module.exports = __webpack_public_path__ + \"static/media/werewolf.fa211e2a.svg\";","module.exports = __webpack_public_path__ + \"static/media/boar-tusks.bb1e24d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/unfriendly-fire.8437b1a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/haunting.ecedf8b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/daemon-skull.ec5b5916.svg\";","module.exports = __webpack_public_path__ + \"static/media/spectre.a7c36843.svg\";","module.exports = __webpack_public_path__ + \"static/media/diablo-skull.18710d12.svg\";","module.exports = __webpack_public_path__ + \"static/media/harry-potter-skull.c9854d9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/spider-eye.03f932c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/laurel-crown.00b6e803.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-beats.6b1fff9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/biceps.e62c221f.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain.ce65603a.svg\";","module.exports = __webpack_public_path__ + \"static/media/hand.9a950e42.svg\";","module.exports = __webpack_public_path__ + \"static/media/lyre.b0409ce1.svg\";","module.exports = __webpack_public_path__ + \"static/media/clover.df6a0d57.svg\";","module.exports = __webpack_public_path__ + \"static/media/robe.5b61ecba.svg\";","module.exports = __webpack_public_path__ + \"static/media/scale-mail.cb5ff7d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/lightning-shield.85367254.svg\";","module.exports = __webpack_public_path__ + \"static/media/robin-hood-hat.6bab1449.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointy-hat.d042ac98.svg\";","module.exports = __webpack_public_path__ + \"static/media/battle-axe.47a5ba50.svg\";","module.exports = __webpack_public_path__ + \"static/media/gavel.e0256fff.svg\";","module.exports = __webpack_public_path__ + \"static/media/heavy-arrow.56b29a8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/bowie-knife.e7821736.svg\";","module.exports = __webpack_public_path__ + \"static/media/revolver.25251236.svg\";","module.exports = __webpack_public_path__ + \"static/media/wizard-staff.3e6091b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/croc-sword.dfa5ecf6.svg\";","module.exports = __webpack_public_path__ + \"static/media/fist.d1b25a44.svg\";","module.exports = __webpack_public_path__ + \"static/media/herbs-bundle.e02bcec1.svg\";","module.exports = __webpack_public_path__ + \"static/media/lotus-flower.4b207eda.svg\";","module.exports = __webpack_public_path__ + \"static/media/medicine-pills.ef75e681.svg\";","module.exports = __webpack_public_path__ + \"static/media/executioner-hood.6e796b5c.svg\";","module.exports = __webpack_public_path__ + \"static/media/cowled.d0cad9db.svg\";","module.exports = __webpack_public_path__ + \"static/media/female-vampire.27d5f882.svg\";","module.exports = __webpack_public_path__ + \"static/media/wizard-face.2a49683a.svg\";","module.exports = __webpack_public_path__ + \"static/media/kenku-head.3292e596.svg\";","module.exports = __webpack_public_path__ + \"static/media/shield-impact.54fdc5c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/energy-arrow.514fc56c.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire-zone.42e13657.svg\";","module.exports = __webpack_public_path__ + \"static/media/magic-swirl.854dc419.svg\";","module.exports = __webpack_public_path__ + \"static/media/heavy-timer.1072a406.svg\";","module.exports = __webpack_public_path__ + \"static/media/extra-time.4d418333.svg\";","module.exports = __webpack_public_path__ + \"static/media/lucifer-cannon.34d680ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/firewall.6efb9f12.svg\";","module.exports = __webpack_public_path__ + \"static/media/flat-hammer.dff14efb.svg\";","module.exports = __webpack_public_path__ + \"static/media/plain-dagger.0509dd2c.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointy-sword.bd82b38d.svg\";","module.exports = __webpack_public_path__ + \"static/media/axe-swing.6958cc19.svg\";","module.exports = __webpack_public_path__ + \"static/media/saber-slash.54b5f3f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/wave-strike.1fe6dbab.svg\";","module.exports = __webpack_public_path__ + \"static/media/sparkling-sabre.3a0fdc2b.svg\";","module.exports = __webpack_public_path__ + \"static/media/bordered-shield.56c12b47.svg\";","module.exports = __webpack_public_path__ + \"static/media/resonance.4c1d217b.svg\";","module.exports = __webpack_public_path__ + \"static/media/gunshot.cf3eceba.svg\";","module.exports = __webpack_public_path__ + \"static/media/crosshair.d2c9a9ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/bullet-impacts.00562b6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/backward-time.d0246d45.svg\";","module.exports = __webpack_public_path__ + \"static/media/snail.bbbe7b78.svg\";","module.exports = __webpack_public_path__ + \"static/media/double-shot.70211522.svg\";","module.exports = __webpack_public_path__ + \"static/media/health-normal.0da85e24.svg\";","module.exports = __webpack_public_path__ + \"static/media/embrassed-energy.58fa9df0.svg\";","module.exports = __webpack_public_path__ + \"static/media/life-support.c0c7c040.svg\";","module.exports = __webpack_public_path__ + \"static/media/punch.2811bb9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/ubisoft-sun.30335592.svg\";","module.exports = __webpack_public_path__ + \"static/media/star-swirl.3045bd1f.svg\";","module.exports = __webpack_public_path__ + \"static/media/targeted.b4ce8dd7.svg\";","module.exports = __webpack_public_path__ + \"static/media/sticky-boot.f097559f.svg\";","module.exports = __webpack_public_path__ + \"static/media/biohazard.cdfb567d.svg\";","module.exports = __webpack_public_path__ + \"static/media/flame.332be8c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/bleeding-wound.8d92779f.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowflake-2.a0b68bb3.svg\";","module.exports = __webpack_public_path__ + \"static/media/broken-shield.c26ddd72.svg\";","module.exports = __webpack_public_path__ + \"static/media/split-cross.fa0be1a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/broken-bone.d1c4182c.svg\";","module.exports = __webpack_public_path__ + \"static/media/leather-armor.f3d5462f.svg\";","module.exports = __webpack_public_path__ + \"static/media/crowned-skull.458d8f78.svg\";","module.exports = __webpack_public_path__ + \"static/media/campfire.7030ad48.svg\";","import { StateCoreT, StateReducerT } from './types'\r\n\r\nexport const makeReducer = (\r\n  core: StateCoreT,\r\n  initialState: any,\r\n): StateReducerT => {\r\n  return (state = initialState, action) => {\r\n    const coreFn = core[action.type]\r\n    if (coreFn) return coreFn(state, action)\r\n    return state\r\n  }\r\n}\r\n","import { useMemo } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nexport const useActions = (actions: any) => {\r\n  const dispatch = useDispatch()\r\n  return useMemo(() => bindActionCreators(actions, dispatch), [\r\n    dispatch,\r\n    actions,\r\n  ])\r\n}\r\n","import { tStats, tBaseStats } from './type'\r\nimport { tCharacterClass } from '../Character/type'\r\n\r\nexport const ZERO_STATS: tStats = {\r\n  vigor: 0,\r\n  strength: 0,\r\n  intelligence: 0,\r\n  dexterity: 0,\r\n  charisma: 0,\r\n  agility: 0,\r\n  luck: 0,\r\n\r\n  armor: 0,\r\n  resistance: 0,\r\n  evasion: 0,\r\n\r\n  maxHealthOffset: 0,\r\n  healthRegeneration: 0,\r\n  damageTakenModifier: 0,\r\n  damageTakenRangeModifiers: {\r\n    melee: 0,\r\n    ranged: 0,\r\n  },\r\n  damageReflection: {\r\n    melee: 0,\r\n    ranged: 0,\r\n  },\r\n\r\n  attackDamageOffset: 0,\r\n  attackDamageModifier: 0,\r\n  criticalChance: 0,\r\n  damageModifiers: {\r\n    flying: 0,\r\n    undead: 0,\r\n    beast: 0,\r\n  },\r\n\r\n  queueConsolidationModifier: 0,\r\n  queueValueSet: undefined,\r\n\r\n  goldModifier: 0,\r\n  maxInspirationOffset: 0,\r\n  consumableHealthGainOffset: 0,\r\n  minHealthOffset: 0,\r\n}\r\n\r\nexport const BASE_C_STATS: tStats = {\r\n  ...ZERO_STATS,\r\n  damageTakenModifier: 1,\r\n  attackDamageModifier: 1,\r\n  criticalChance: 5,\r\n  queueConsolidationModifier: 1,\r\n  consumableHealthGainOffset: 15,\r\n}\r\n\r\nexport const CLASS_STATS: Record<tCharacterClass, tStats> = {\r\n  executioner: {\r\n    ...BASE_C_STATS,\r\n    strength: 78,\r\n    vigor: 75,\r\n    intelligence: 44,\r\n    dexterity: 70,\r\n    charisma: 52,\r\n    agility: 58,\r\n    luck: 50,\r\n    armor: 1,\r\n    resistance: 0,\r\n    evasion: 8,\r\n  },\r\n  ranger: {\r\n    ...BASE_C_STATS,\r\n    strength: 52,\r\n    vigor: 66,\r\n    intelligence: 46,\r\n    dexterity: 78,\r\n    charisma: 64,\r\n    agility: 78,\r\n    luck: 50,\r\n    armor: 1,\r\n    resistance: 0,\r\n    evasion: 20,\r\n  },\r\n  reaper: {\r\n    ...BASE_C_STATS,\r\n    strength: 48,\r\n    vigor: 60,\r\n    intelligence: 42,\r\n    dexterity: 76,\r\n    charisma: 72,\r\n    agility: 74,\r\n    luck: 50,\r\n    armor: 1,\r\n    resistance: 0,\r\n    evasion: 17,\r\n  },\r\n  student: {\r\n    ...BASE_C_STATS,\r\n    strength: 42,\r\n    vigor: 60,\r\n    intelligence: 78,\r\n    dexterity: 66,\r\n    charisma: 70,\r\n    agility: 70,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 1,\r\n    evasion: 13,\r\n  },\r\n  patrician: {\r\n    ...BASE_C_STATS,\r\n    strength: 44,\r\n    vigor: 50,\r\n    intelligence: 70,\r\n    dexterity: 68,\r\n    charisma: 78,\r\n    agility: 68,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 1,\r\n    evasion: 11,\r\n  },\r\n  drifter: {\r\n    ...BASE_C_STATS,\r\n    strength: 70,\r\n    vigor: 70,\r\n    intelligence: 70,\r\n    dexterity: 70,\r\n    charisma: 70,\r\n    agility: 70,\r\n    luck: 30,\r\n    armor: 1,\r\n    resistance: 1,\r\n    evasion: 13,\r\n  },\r\n  enemy: BASE_C_STATS,\r\n}\r\n\r\nexport const DAMAGE_BONUS_KEYS: (keyof tStats)[] = [\r\n  'goldModifier',\r\n  'attackDamageOffset',\r\n  'attackDamageModifier',\r\n  'criticalChance',\r\n]\r\nexport const DEFENSE_BONUS_KEYS: (keyof tStats)[] = [\r\n  'armor',\r\n  'resistance',\r\n  'evasion',\r\n  'healthRegeneration',\r\n  'damageReflection',\r\n]\r\nexport const HEALTH_FOCUS_BONUS_KEYS: (keyof tStats)[] = [\r\n  'maxHealthOffset',\r\n  'maxInspirationOffset',\r\n]\r\nexport const STAT_BONUS_KEYS: (keyof tBaseStats)[] = [\r\n  'vigor',\r\n  'strength',\r\n  'intelligence',\r\n  'dexterity',\r\n  'charisma',\r\n  'agility',\r\n  'luck',\r\n]\r\n\r\nexport const STAT_KEY_LABELS: Record<keyof tStats, string> = {\r\n  strength: ' Strength',\r\n  vigor: ' Vigor',\r\n  intelligence: ' Intelligence',\r\n  dexterity: ' Dexterity',\r\n  charisma: ' Charisma',\r\n  agility: ' Agility',\r\n  luck: ' Luck',\r\n  evasion: ' Evasion',\r\n  criticalChance: '% Crit Chance',\r\n\r\n  armor: ' Armor',\r\n  resistance: ' Resistance',\r\n\r\n  maxHealthOffset: ' Health',\r\n  healthRegeneration: ' Health Regen',\r\n  damageReflection: ' Damage Reflection',\r\n  damageTakenModifier: '% Recieved Damage',\r\n  damageTakenRangeModifiers: '% Recieved Damage from certain sources',\r\n\r\n  damageModifiers: ' Damage to certain Enemeies',\r\n\r\n  queueConsolidationModifier: ' Queue Consolidation Modifier',\r\n  queueValueSet: ' Queue Value Set',\r\n\r\n  attackDamageOffset: ' Raw Damage',\r\n  attackDamageModifier: '% Attack Damage',\r\n\r\n  goldModifier: '% Gold Recieved',\r\n  maxInspirationOffset: ' Max Inspiration',\r\n  minHealthOffset: ' Minumum Health',\r\n  consumableHealthGainOffset: ' HP from Consumables',\r\n}\r\n","export const undefAdd = (\r\n  a: number | undefined,\r\n  b: number | undefined,\r\n): number | undefined => {\r\n  if (a === undefined && b === undefined) return undefined\r\n  if (a === undefined && b !== undefined) return b\r\n  if (a !== undefined && b === undefined) return a\r\n  if (a !== undefined && b !== undefined) return a + b\r\n}\r\n","export const getRandom = <T>(items: T[]) =>\r\n  items[Math.floor(Math.random() * items.length)]\r\n","export const noneg = (value: number) => (value > 0 ? value : 0)\r\n","import { tStats } from './type'\r\nimport { ZERO_STATS } from './constants'\r\nimport { undefAdd } from '../../util/undefAdd'\r\nimport { noneg } from '../../util'\r\n\r\nexport const combineStats = (...stats: tStats[]) => {\r\n  return stats.reduce(\r\n    (result, stats) => ({\r\n      vigor: result.vigor + stats.vigor,\r\n      strength: result.strength + stats.strength,\r\n      intelligence: result.intelligence + stats.intelligence,\r\n      dexterity: result.dexterity + stats.dexterity,\r\n      charisma: result.charisma + stats.charisma,\r\n      agility: result.agility + stats.agility,\r\n      luck: result.luck + stats.luck,\r\n\r\n      armor: result.armor + stats.armor,\r\n      resistance: result.resistance + stats.resistance,\r\n      evasion: result.evasion + stats.evasion,\r\n\r\n      maxHealthOffset: result.maxHealthOffset + stats.maxHealthOffset,\r\n      healthRegeneration: result.healthRegeneration + stats.healthRegeneration,\r\n      damageTakenModifier:\r\n        result.damageTakenModifier + stats.damageTakenModifier,\r\n      damageTakenRangeModifiers: {\r\n        melee:\r\n          result.damageTakenRangeModifiers.melee +\r\n          stats.damageTakenRangeModifiers.melee,\r\n        ranged:\r\n          result.damageTakenRangeModifiers.ranged +\r\n          stats.damageTakenRangeModifiers.ranged,\r\n      },\r\n      damageReflection: {\r\n        melee: result.damageReflection.melee + stats.damageReflection.melee,\r\n        ranged: result.damageReflection.ranged + stats.damageReflection.ranged,\r\n      },\r\n\r\n      attackDamageOffset: result.attackDamageOffset + stats.attackDamageOffset,\r\n      attackDamageModifier:\r\n        result.attackDamageModifier + stats.attackDamageModifier,\r\n      criticalChance: result.criticalChance + stats.criticalChance,\r\n      damageModifiers: {\r\n        flying: result.damageModifiers.flying + stats.damageModifiers.flying,\r\n        undead: result.damageModifiers.undead + stats.damageModifiers.undead,\r\n        beast: result.damageModifiers.beast + stats.damageModifiers.beast,\r\n      },\r\n\r\n      queueConsolidationModifier:\r\n        result.queueConsolidationModifier + stats.queueConsolidationModifier,\r\n      queueValueSet: undefAdd(result.queueValueSet, stats.queueValueSet),\r\n\r\n      goldModifier: result.goldModifier + stats.goldModifier,\r\n      maxInspirationOffset:\r\n        result.maxInspirationOffset + stats.maxInspirationOffset,\r\n      consumableHealthGainOffset:\r\n        result.consumableHealthGainOffset + stats.consumableHealthGainOffset,\r\n      minHealthOffset: result.minHealthOffset + stats.minHealthOffset,\r\n    }),\r\n    ZERO_STATS,\r\n  )\r\n}\r\n\r\nexport const multiplyStats = (stats: tStats, modifier: number): tStats => ({\r\n  vigor: stats.vigor * modifier,\r\n  strength: stats.strength * modifier,\r\n  intelligence: stats.intelligence * modifier,\r\n  dexterity: stats.dexterity * modifier,\r\n  charisma: stats.charisma * modifier,\r\n  agility: stats.agility * modifier,\r\n  luck: stats.luck * modifier,\r\n\r\n  armor: stats.armor * modifier,\r\n  resistance: stats.resistance * modifier,\r\n  evasion: stats.evasion * modifier,\r\n\r\n  maxHealthOffset: stats.maxHealthOffset * modifier,\r\n  healthRegeneration: stats.healthRegeneration * modifier,\r\n  damageTakenModifier: stats.damageTakenModifier * modifier,\r\n  damageTakenRangeModifiers: {\r\n    melee: stats.damageTakenRangeModifiers.melee * modifier,\r\n    ranged: stats.damageTakenRangeModifiers.ranged * modifier,\r\n  },\r\n  damageReflection: {\r\n    melee: stats.damageReflection.melee * modifier,\r\n    ranged: stats.damageReflection.ranged * modifier,\r\n  },\r\n\r\n  attackDamageOffset: stats.attackDamageOffset * modifier,\r\n  attackDamageModifier: stats.attackDamageModifier * modifier,\r\n  criticalChance: stats.criticalChance * modifier,\r\n  damageModifiers: {\r\n    flying: stats.damageModifiers.flying * modifier,\r\n    undead: stats.damageModifiers.undead * modifier,\r\n    beast: stats.damageModifiers.beast * modifier,\r\n  },\r\n\r\n  queueConsolidationModifier: stats.queueConsolidationModifier * modifier,\r\n  queueValueSet: stats.queueValueSet,\r\n\r\n  goldModifier: stats.goldModifier * modifier,\r\n  maxInspirationOffset: stats.maxInspirationOffset * modifier,\r\n  consumableHealthGainOffset: stats.consumableHealthGainOffset * modifier,\r\n  minHealthOffset: stats.minHealthOffset * modifier,\r\n})\r\n\r\nconst isCapKey = (key: keyof tStats) => {\r\n  const keys: (keyof tStats)[] = [\r\n    'vigor',\r\n    'strength',\r\n    'dexterity',\r\n    'intelligence',\r\n    'charisma',\r\n    'agility',\r\n    'luck',\r\n    'evasion',\r\n    'criticalChance',\r\n  ]\r\n  return keys.includes(key)\r\n}\r\n\r\nexport const capStats = (stats: tStats): tStats => {\r\n  return (Object.keys(stats) as (keyof tStats)[]).reduce((result, key) => {\r\n    if (isCapKey(key) && stats[key]) {\r\n      return {\r\n        ...result,\r\n        [key]: (stats[key] as number) > 95 ? 95 : stats[key],\r\n      }\r\n    }\r\n    return {\r\n      ...result,\r\n      armor: noneg(result.armor),\r\n      resistance: noneg(result.resistance),\r\n    }\r\n  }, stats)\r\n}\r\n","import { tStatusType, tStatusConfig } from './type'\r\nimport { ZERO_STATS } from '../Stats/constants'\r\n\r\nexport const STATUS_CONFIG: Record<tStatusType, tStatusConfig> = {\r\n  bleeding: {\r\n    name: 'Bleeding',\r\n    description: '-10 HP on your turn.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      healthRegeneration: -6,\r\n    },\r\n    immunities: [],\r\n  },\r\n  burning: {\r\n    name: 'Burning',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      healthRegeneration: -6,\r\n    },\r\n    immunities: [],\r\n  },\r\n  // TODO: Different cursed status' for different stats\r\n  'cursed-vigor': {\r\n    name: 'Cursed',\r\n    description: '-15 to Vigor',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      vigor: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-strength': {\r\n    name: 'Cursed',\r\n    description: '-15 to Strength',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      strength: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-dexterity': {\r\n    name: 'Cursed',\r\n    description: '-15 to Dexterity',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      dexterity: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-intelligence': {\r\n    name: 'Cursed',\r\n    description: '-15 to Intelligence',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      intelligence: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-charisma': {\r\n    name: 'Cursed',\r\n    description: '-15 to Charisma',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      charisma: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-agility': {\r\n    name: 'Cursed',\r\n    description: '-15 to Agility',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      agility: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-luck': {\r\n    name: 'Cursed',\r\n    description: '-15 to Luck',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      luck: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  frozen: {\r\n    name: 'Frozen',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      damageTakenModifier: 25,\r\n    },\r\n    immunities: [],\r\n  },\r\n  poisoned: {\r\n    name: 'Poisoned',\r\n    description: \"-5 HP on this character's turn and -5 to each stat.\",\r\n    canStack: true,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      vigor: -5,\r\n      strength: -5,\r\n      intelligence: -5,\r\n      dexterity: -5,\r\n      charisma: -5,\r\n      healthRegeneration: -3,\r\n    },\r\n    immunities: [],\r\n  },\r\n  // TODO: Shocked status\r\n  shocked: {\r\n    name: 'Shocked',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  stunned: {\r\n    name: 'Stunned',\r\n    description: 'This character will not progress on the battle timeline.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 2,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueConsolidationModifier: -1,\r\n    },\r\n    immunities: [],\r\n  },\r\n  // TODO: Wet Status\r\n  wet: {\r\n    name: 'Wet',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'armor-up': {\r\n    name: 'Armor Up',\r\n    description: '+5 Armor',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      armor: 5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'attack-up': {\r\n    name: 'Attack Up',\r\n    description: '+15 Attack Damage',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      attackDamageOffset: 15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'evade-up': {\r\n    name: 'Evade Up',\r\n    description: '+15 Evasion',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      evasion: 15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'resistance-up': {\r\n    name: 'Resistance Up',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      resistance: 5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'speed-up': {\r\n    name: 'Speed Up',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      agility: 15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'armor-down': {\r\n    name: 'Armor Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      armor: -5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'attack-down': {\r\n    name: 'Attack Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      attackDamageOffset: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'evade-down': {\r\n    name: 'Evade Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      evasion: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'resistance-down': {\r\n    name: 'Resistance Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      resistance: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'speed-down': {\r\n    name: 'Speed Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      agility: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  rushed: {\r\n    name: 'Rushed',\r\n    description: 'Bring to front of queue.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 0,\r\n    },\r\n    immunities: [],\r\n  },\r\n  interrupted: {\r\n    name: 'Interrupted',\r\n    description: 'Set back 70 unites.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 70,\r\n    },\r\n    immunities: [],\r\n  },\r\n  reset: {\r\n    name: 'Reset',\r\n    description: 'Set back 100 units.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 100,\r\n    },\r\n    immunities: [],\r\n  },\r\n  evasive: {\r\n    name: 'Evasive',\r\n    description: 'Non-perfect attacks will miss when targeting this character.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  resilient: {\r\n    name: 'Resilient',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  protected: {\r\n    name: 'Protected',\r\n    description: 'Negate the next bit of damage.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  targeted: {\r\n    name: 'Targeted',\r\n    description: 'All enemies will attack this player.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 6,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  cure: {\r\n    name: 'Cure',\r\n    description: 'Remove Poisoned, Bleeding, and Burning',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: ['poisoned', 'bleeding', 'burning', 'frozen', 'wet', 'shocked'],\r\n  },\r\n  blessed: {\r\n    name: 'Blessed',\r\n    description: 'Temporary Curse Immunity',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: ZERO_STATS,\r\n    immunities: [\r\n      'cursed-agility',\r\n      'cursed-charisma',\r\n      'cursed-dexterity',\r\n      'cursed-intelligence',\r\n      'cursed-luck',\r\n      'cursed-strength',\r\n      'cursed-vigor',\r\n    ],\r\n  },\r\n}\r\n","import { tWeaponClassDamageConfig, tWeaponTypeDamageConfig } from './type'\r\n\r\nexport const GLOBAL_DAMAGE_OFFSETS: tWeaponTypeDamageConfig = {\r\n  axe: 0,\r\n  hammer: 0,\r\n  sword: 0,\r\n  greatsword: 0,\r\n  bow: 0,\r\n  dagger: 0,\r\n  scythe: 0,\r\n  catalyst: 0,\r\n  chime: 0,\r\n  pistol: 0,\r\n  fist: 0,\r\n  enemy: 0,\r\n}\r\nexport const WEAPON_DAMAGE_CONFIG: tWeaponClassDamageConfig = {\r\n  starting: {\r\n    axe: 11,\r\n    hammer: 9,\r\n    sword: 8,\r\n    greatsword: 12,\r\n    bow: 6,\r\n    dagger: 5,\r\n    scythe: 7,\r\n    catalyst: 6,\r\n    chime: 6,\r\n    pistol: 5,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  // LEVEL 1 ccc ur\r\n  rusted: {\r\n    // higher damage than tomb, but worse skills\r\n    axe: 13,\r\n    hammer: 11,\r\n    sword: 10,\r\n    greatsword: 13,\r\n    bow: 12,\r\n    dagger: 7,\r\n    scythe: 10,\r\n    catalyst: 9,\r\n    chime: 9,\r\n    pistol: 7,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  tomb: {\r\n    axe: 15,\r\n    hammer: 12,\r\n    sword: 12,\r\n    greatsword: 15,\r\n    bow: 13,\r\n    dagger: 8,\r\n    scythe: 12,\r\n    catalyst: 12,\r\n    chime: 12,\r\n    pistol: 8,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  buried: {\r\n    axe: 16,\r\n    hammer: 13,\r\n    sword: 12,\r\n    greatsword: 16,\r\n    bow: 14,\r\n    dagger: 9,\r\n    scythe: 13,\r\n    catalyst: 13,\r\n    chime: 13,\r\n    pistol: 9,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  withering: {\r\n    axe: 18,\r\n    hammer: 15,\r\n    sword: 15,\r\n    greatsword: 18,\r\n    bow: 17,\r\n    dagger: 12,\r\n    scythe: 15,\r\n    catalyst: 16,\r\n    chime: 16,\r\n    pistol: 10,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  glass: {\r\n    axe: 22,\r\n    hammer: 18,\r\n    sword: 18,\r\n    greatsword: 22,\r\n    bow: 21,\r\n    dagger: 16,\r\n    scythe: 21,\r\n    catalyst: 21,\r\n    chime: 21,\r\n    pistol: 16,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 2 ccc\r\n  iron: {\r\n    axe: 19,\r\n    hammer: 16,\r\n    sword: 16,\r\n    greatsword: 20,\r\n    bow: 18,\r\n    dagger: 12,\r\n    scythe: 16,\r\n    catalyst: 16,\r\n    chime: 16,\r\n    pistol: 12,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  steel: {\r\n    axe: 20,\r\n    hammer: 17,\r\n    sword: 17,\r\n    greatsword: 20,\r\n    bow: 19,\r\n    dagger: 13,\r\n    scythe: 17,\r\n    catalyst: 17,\r\n    chime: 17,\r\n    pistol: 13,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  stainless: {\r\n    axe: 21,\r\n    hammer: 18,\r\n    sword: 18,\r\n    greatsword: 21,\r\n    bow: 20,\r\n    dagger: 14,\r\n    scythe: 18,\r\n    catalyst: 18,\r\n    chime: 18,\r\n    pistol: 14,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 3 ur rr\r\n  ancient: {\r\n    axe: 24,\r\n    hammer: 21,\r\n    sword: 21,\r\n    greatsword: 25,\r\n    bow: 23,\r\n    dagger: 17,\r\n    scythe: 21,\r\n    catalyst: 21,\r\n    chime: 21,\r\n    pistol: 17,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  crystal: {\r\n    axe: 26,\r\n    hammer: 23,\r\n    sword: 23,\r\n    greatsword: 27,\r\n    bow: 25,\r\n    dagger: 20,\r\n    scythe: 23,\r\n    catalyst: 23,\r\n    chime: 23,\r\n    pistol: 20,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  elemental: {\r\n    axe: 24,\r\n    hammer: 21,\r\n    sword: 21,\r\n    greatsword: 25,\r\n    bow: 23,\r\n    dagger: 17,\r\n    scythe: 21,\r\n    catalyst: 21,\r\n    chime: 21,\r\n    pistol: 17,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  cursed: {\r\n    axe: 25,\r\n    hammer: 22,\r\n    sword: 22,\r\n    greatsword: 26,\r\n    bow: 24,\r\n    dagger: 18,\r\n    scythe: 22,\r\n    catalyst: 22,\r\n    chime: 22,\r\n    pistol: 18,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 4 cuu r\r\n  sharp: {\r\n    axe: 28,\r\n    hammer: 25,\r\n    sword: 25,\r\n    greatsword: 29,\r\n    bow: 26,\r\n    dagger: 21,\r\n    scythe: 25,\r\n    catalyst: 26,\r\n    chime: 26,\r\n    pistol: 21,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  hardened: {\r\n    axe: 30,\r\n    hammer: 27,\r\n    sword: 27,\r\n    greatsword: 31,\r\n    bow: 28,\r\n    dagger: 23,\r\n    scythe: 27,\r\n    catalyst: 28,\r\n    chime: 28,\r\n    pistol: 23,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  engraved: {\r\n    axe: 31,\r\n    hammer: 28,\r\n    sword: 28,\r\n    greatsword: 32,\r\n    bow: 29,\r\n    dagger: 24,\r\n    scythe: 28,\r\n    catalyst: 29,\r\n    chime: 29,\r\n    pistol: 24,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  ethereal: {\r\n    axe: 34,\r\n    hammer: 32,\r\n    sword: 32,\r\n    greatsword: 35,\r\n    bow: 33,\r\n    dagger: 27,\r\n    scythe: 31,\r\n    catalyst: 32,\r\n    chime: 32,\r\n    pistol: 27,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 5 ur mm\r\n  exquisite: {\r\n    axe: 33,\r\n    hammer: 31,\r\n    sword: 31,\r\n    greatsword: 34,\r\n    bow: 32,\r\n    dagger: 26,\r\n    scythe: 30,\r\n    catalyst: 31,\r\n    chime: 31,\r\n    pistol: 26,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  divine: {\r\n    axe: 35,\r\n    hammer: 33,\r\n    sword: 33,\r\n    greatsword: 36,\r\n    bow: 34,\r\n    dagger: 28,\r\n    scythe: 32,\r\n    catalyst: 33,\r\n    chime: 33,\r\n    pistol: 28,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  arcane: {\r\n    axe: 36,\r\n    hammer: 33,\r\n    sword: 33,\r\n    greatsword: 37,\r\n    bow: 35,\r\n    dagger: 29,\r\n    scythe: 33,\r\n    catalyst: 34,\r\n    chime: 34,\r\n    pistol: 29,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  celestial: {\r\n    axe: 38,\r\n    hammer: 35,\r\n    sword: 35,\r\n    greatsword: 39,\r\n    bow: 37,\r\n    dagger: 31,\r\n    scythe: 35,\r\n    catalyst: 36,\r\n    chime: 36,\r\n    pistol: 31,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 6\r\n  mythic: {\r\n    axe: 40,\r\n    hammer: 37,\r\n    sword: 37,\r\n    greatsword: 41,\r\n    bow: 39,\r\n    dagger: 33,\r\n    scythe: 37,\r\n    catalyst: 38,\r\n    chime: 38,\r\n    pistol: 33,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  unique: {\r\n    axe: 40,\r\n    hammer: 37,\r\n    sword: 37,\r\n    greatsword: 41,\r\n    bow: 39,\r\n    dagger: 33,\r\n    scythe: 37,\r\n    catalyst: 38,\r\n    chime: 38,\r\n    pistol: 33,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n}\r\n","import { tWeaponType } from '../type'\r\nimport { tWeaponClass } from './type'\r\n\r\nexport const BASE_WEAPON_TYPES_GOLD: Record<tWeaponType, number> = {\r\n  axe: 30,\r\n  bow: 35,\r\n  catalyst: 30,\r\n  chime: 30,\r\n  dagger: 10,\r\n  greatsword: 40,\r\n  hammer: 25,\r\n  pistol: 15,\r\n  scythe: 35,\r\n  sword: 25,\r\n  fist: 0,\r\n  enemy: 0,\r\n}\r\n\r\nexport const WEAPON_CLASS_GOLD_OFFSETS: Record<tWeaponClass, number> = {\r\n  starting: -20,\r\n  rusted: 0,\r\n  tomb: 5,\r\n  buried: 30,\r\n  withering: 40,\r\n  glass: 60,\r\n\r\n  iron: 75,\r\n  steel: 80,\r\n  stainless: 85,\r\n\r\n  ancient: 100,\r\n  crystal: 150,\r\n  elemental: 155,\r\n  cursed: 155,\r\n\r\n  sharp: 200,\r\n  hardened: 225,\r\n  engraved: 250,\r\n  ethereal: 265,\r\n\r\n  exquisite: 300,\r\n  divine: 320,\r\n  arcane: 340,\r\n  celestial: 350,\r\n\r\n  mythic: 400,\r\n  unique: 400,\r\n}\r\n","import { tWeaponRarityConfig } from './type'\r\n\r\nexport const WEAPON_CLASS_RARIES: tWeaponRarityConfig = {\r\n  starting: 'common',\r\n  rusted: 'common',\r\n  tomb: 'common',\r\n  buried: 'common',\r\n  withering: 'uncommon',\r\n  glass: 'rare',\r\n  iron: 'common',\r\n  steel: 'common',\r\n  stainless: 'common',\r\n  ancient: 'common',\r\n  crystal: 'rare',\r\n  elemental: 'rare',\r\n  cursed: 'rare',\r\n  sharp: 'common',\r\n  hardened: 'uncommon',\r\n  engraved: 'uncommon',\r\n  ethereal: 'rare',\r\n  exquisite: 'uncommon',\r\n  divine: 'rare',\r\n  arcane: 'mythic',\r\n  celestial: 'mythic',\r\n  mythic: 'mythic',\r\n  unique: 'mythic',\r\n}\r\n","import { tWeaponStatsConfig } from './type'\r\n\r\nexport const DEFAULT_WEAPON_TYPE_STATS: tWeaponStatsConfig = {\r\n  axe: {},\r\n  hammer: {},\r\n  sword: {},\r\n  greatsword: {\r\n    agility: -2,\r\n  },\r\n  bow: {\r\n    damageModifiers: {\r\n      flying: 0.1,\r\n      undead: 0,\r\n      beast: 0,\r\n    },\r\n  },\r\n  dagger: {\r\n    agility: 2,\r\n    criticalChance: 10,\r\n  },\r\n  scythe: {\r\n    evasion: 2,\r\n    resistance: 1,\r\n  },\r\n  catalyst: {},\r\n  chime: {\r\n    damageModifiers: {\r\n      flying: 0,\r\n      undead: 0.02,\r\n      beast: 0,\r\n    },\r\n  },\r\n  pistol: {},\r\n  fist: {},\r\n  enemy: {},\r\n}\r\n","import { tWeaponTypeConfig } from './type'\r\n\r\nexport const DEFAULT_WEAPON_TYPE_CONFIG: tWeaponTypeConfig = {\r\n  axe: {\r\n    stat: 'strength',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  hammer: {\r\n    stat: 'strength',\r\n    twoHand: false,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  sword: {\r\n    stat: 'strength',\r\n    twoHand: false,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  greatsword: {\r\n    stat: 'strength',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  bow: {\r\n    stat: 'dexterity',\r\n    twoHand: true,\r\n    range: 'ranged',\r\n    damageType: 'physical',\r\n  },\r\n  dagger: {\r\n    stat: 'dexterity',\r\n    twoHand: false,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  scythe: {\r\n    stat: 'dexterity',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  catalyst: {\r\n    stat: 'intelligence',\r\n    twoHand: true,\r\n    range: 'ranged',\r\n    damageType: 'magic',\r\n  },\r\n  chime: {\r\n    stat: 'charisma',\r\n    twoHand: true,\r\n    range: 'ranged',\r\n    damageType: 'magic',\r\n  },\r\n  pistol: {\r\n    stat: 'charisma',\r\n    twoHand: false,\r\n    range: 'ranged',\r\n    damageType: 'physical',\r\n  },\r\n  fist: {\r\n    stat: 'vigor',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  enemy: {\r\n    stat: 'vigor',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { tSkill } from '../../Skill/type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { tStats } from '../../Stats/type'\r\nimport { tStatusType } from '../../Status/type'\r\nimport { tWeapon, tWeaponType } from '../type'\r\nimport { GLOBAL_DAMAGE_OFFSETS, WEAPON_DAMAGE_CONFIG } from './damage'\r\nimport { BASE_WEAPON_TYPES_GOLD, WEAPON_CLASS_GOLD_OFFSETS } from './goldValue'\r\nimport { WEAPON_CLASS_RARIES } from './rarity'\r\nimport { DEFAULT_WEAPON_TYPE_STATS } from './stats'\r\nimport { tWeaponClass } from './type'\r\nimport { DEFAULT_WEAPON_TYPE_CONFIG } from './typeConfig'\r\n\r\nexport const createWeapon = (\r\n  weaponType: tWeaponType,\r\n  weaponClass: tWeaponClass,\r\n  skills: tSkill[],\r\n  stats: Partial<tStats>,\r\n  immunities: tStatusType[] = [],\r\n  goldValue?: number,\r\n): tWeapon => {\r\n  const damageValue =\r\n    WEAPON_DAMAGE_CONFIG[weaponClass][weaponType] +\r\n    GLOBAL_DAMAGE_OFFSETS[weaponType]\r\n  const { stat, twoHand, range, damageType } = DEFAULT_WEAPON_TYPE_CONFIG[\r\n    weaponType\r\n  ]\r\n  const rarity = WEAPON_CLASS_RARIES[weaponClass]\r\n  const defaultStats = DEFAULT_WEAPON_TYPE_STATS[weaponType]\r\n  return {\r\n    id: v4(),\r\n    name: `${weaponClass} ${weaponType}`,\r\n    rarity,\r\n    itemType: 'weapon',\r\n    goldValue:\r\n      goldValue ||\r\n      BASE_WEAPON_TYPES_GOLD[weaponType] +\r\n        WEAPON_CLASS_GOLD_OFFSETS[weaponClass],\r\n    type: weaponType,\r\n    twoHand,\r\n    breakable: false,\r\n    damage: {\r\n      value: damageValue,\r\n      type: damageType,\r\n      range,\r\n    },\r\n    stat,\r\n    skills,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      ...defaultStats,\r\n      ...stats,\r\n    },\r\n    immunities,\r\n  }\r\n}\r\n\r\nexport const createBreakableWeapon = (\r\n  weaponType: tWeaponType,\r\n  weaponClass: tWeaponClass,\r\n  skills: tSkill[],\r\n  stats: Partial<tStats>,\r\n  immunities: tStatusType[] = [],\r\n  goldValue?: number,\r\n): tWeapon => {\r\n  return {\r\n    ...createWeapon(\r\n      weaponType,\r\n      weaponClass,\r\n      skills,\r\n      stats,\r\n      immunities,\r\n      goldValue,\r\n    ),\r\n    breakable: true,\r\n  }\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { tSkill } from '../type'\r\n\r\nexport const createSkill = (\r\n  name: string,\r\n  rolls: number,\r\n  offset: number,\r\n  rest: Partial<tSkill> = {},\r\n): tSkill => {\r\n  return {\r\n    id: v4(),\r\n    name,\r\n    damageModifier: 1,\r\n    splashDamageModifier: 0,\r\n    targetType: 'single',\r\n    damage: true,\r\n    healing: false,\r\n    rolls,\r\n    offset,\r\n    perfectSplash: false,\r\n    perfectPierce: false,\r\n    perfectStatus: [],\r\n    ...rest,\r\n  }\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const CHOP = createSkill('Chop', 3, 0)\r\nexport const SWING = createSkill('Swing', 4, 0)\r\nexport const WITHERING_SWING = createSkill('Swing', 2, 0)\r\nexport const GLASS_SWING = createSkill('Swing', 1, 0)\r\nexport const AXE_SPIN = createSkill('Axe Spin', 5, -10, {\r\n  perfectSplash: true,\r\n  splashDamageModifier: 0.5,\r\n})\r\nexport const FLURRY = createSkill('Swipe', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const CLEAVE = createSkill('Cleave', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const SLICE = createSkill('Slice', 4, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  AXE_SPIN,\r\n  CHOP,\r\n  CLEAVE,\r\n  FLURRY,\r\n  GLASS_SWING,\r\n  SLASH,\r\n  SLICE,\r\n  STUN,\r\n  SWING,\r\n  WITHERING_SWING,\r\n} from '../../../Skill/skills/axe'\r\nimport { tWeapon } from '../../type'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'axe'\r\nexport const EXECUTIONER_AXE = (): tWeapon => ({\r\n  ...createWeapon(type, 'starting', [CHOP, AXE_SPIN], {}),\r\n  name: `Executioner Axe`,\r\n})\r\n\r\nexport const RUSTED_AXE = () => createWeapon(type, 'rusted', [CHOP, SWING], {})\r\nexport const TOMB_AXE = () => createWeapon(type, 'tomb', [SWING, FLURRY], {})\r\nexport const BURRIED_AXE = () =>\r\n  createWeapon(type, 'buried', [CHOP, FLURRY, SLICE], {})\r\nexport const WITHERING_AXE = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_SWING], {})\r\nexport const GLASS_AXE = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_SWING], {})\r\n\r\nexport const IRON_AXE = () => createWeapon(type, 'iron', [CHOP, STUN], {})\r\nexport const STEEL_AXE = () =>\r\n  createWeapon(type, 'steel', [CHOP, SLICE, CLEAVE], {})\r\nexport const STAINLESS_AXE = () =>\r\n  createWeapon(type, 'stainless', [SLICE, CLEAVE, SLASH], {})\r\n\r\nexport const ANCIENT_AXE = () =>\r\n  createWeapon(type, 'ancient', [SWING, CLEAVE], {})\r\nexport const CRYSTAL_AXE = () =>\r\n  createWeapon(type, 'crystal', [GLASS_SWING], {})\r\nexport const ELEMENTAL_AXE = () => createWeapon(type, 'elemental', [CHOP], {})\r\nexport const CURSED_AXE = () => createWeapon(type, 'cursed', [CHOP], {})\r\n\r\nexport const SHARP_AXE = () =>\r\n  createWeapon(type, 'sharp', [SLICE, SLASH, AXE_SPIN], {})\r\nexport const HARDENED_AXE = () =>\r\n  createWeapon(type, 'hardened', [SLICE, SLASH, STUN], {})\r\nexport const ENGRAVED_AXE = () =>\r\n  createWeapon(type, 'engraved', [SLICE, SLASH, FLURRY], {})\r\nexport const ETHEREAL_AXE = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_SWING], {})\r\n\r\nexport const EXQUISITE_AXE = () =>\r\n  createWeapon(type, 'exquisite', [SLICE, SLASH, CLEAVE], {})\r\nexport const DIVINE_AXE = () =>\r\n  createWeapon(type, 'divine', [SLICE, SLICE, STUN], {})\r\nexport const ARCANE_AXE = () => createWeapon(type, 'arcane', [CHOP], {})\r\nexport const CELESTIAL_AXE = () =>\r\n  createBreakableWeapon(type, 'celestial', [GLASS_SWING], {})\r\n\r\nexport const AXES: tWeaponsByLevel = {\r\n  0: [EXECUTIONER_AXE],\r\n  1: [RUSTED_AXE, TOMB_AXE, BURRIED_AXE, WITHERING_AXE, GLASS_AXE],\r\n  2: [IRON_AXE, STEEL_AXE, STAINLESS_AXE],\r\n  3: [ANCIENT_AXE, CRYSTAL_AXE, ELEMENTAL_AXE, CURSED_AXE],\r\n  4: [SHARP_AXE, HARDENED_AXE, ENGRAVED_AXE, ETHEREAL_AXE],\r\n  5: [EXQUISITE_AXE, DIVINE_AXE, ARCANE_AXE, CELESTIAL_AXE],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const SHOT = createSkill('Shot', 3, 0)\r\nexport const WITHERING_SHOT = createSkill('Shot', 2, 0)\r\nexport const GLASS_SHOT = createSkill('Shot', 1, 0)\r\nexport const HEADSHOT = createSkill('Headshot', 3, -10, {\r\n  perfectPierce: true,\r\n})\r\nexport const FLURRY = createSkill('Flurry', 2, -5, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const PIN_DOWN = createSkill('Pin Down', 2, -10, {\r\n  perfectStatus: ['speed-down'],\r\n})\r\nexport const WOUNDING_SHOT = createSkill('Wounding Shot', 2, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  HEADSHOT,\r\n  SHOT,\r\n  GLASS_SHOT,\r\n  FLURRY,\r\n  PIN_DOWN,\r\n  WITHERING_SHOT,\r\n  STUN,\r\n  WOUNDING_SHOT,\r\n} from '../../../Skill/skills/bow'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'bow'\r\nexport const RANGERS_BOW = () => ({\r\n  ...createWeapon(type, 'starting', [SHOT, HEADSHOT], {}),\r\n  name: `Ranger Bow`,\r\n})\r\nexport const RUSTED_BOW = () =>\r\n  createWeapon(type, 'rusted', [SHOT, HEADSHOT], {})\r\nexport const TOMB_BOW = () =>\r\n  createWeapon(type, 'tomb', [SHOT, HEADSHOT, FLURRY], {})\r\nexport const BURRIED_BOW = () =>\r\n  createWeapon(type, 'buried', [SHOT, FLURRY, PIN_DOWN], {})\r\nexport const WITHERING_BOW = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_SHOT], {})\r\nexport const GLASS_BOW = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_SHOT], {})\r\n\r\nexport const IRON_BOW = () => createWeapon(type, 'iron', [SHOT, STUN], {})\r\nexport const STEEL_BOW = () =>\r\n  createWeapon(type, 'steel', [SHOT, HEADSHOT, WOUNDING_SHOT], {})\r\nexport const STAINLESS_BOW = () =>\r\n  createWeapon(type, 'stainless', [SHOT, FLURRY, PIN_DOWN], {})\r\n\r\nexport const ANCIENT_BOW = () =>\r\n  createWeapon(type, 'ancient', [SHOT, FLURRY, WOUNDING_SHOT], {})\r\nexport const CRYSTAL_BOW = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_SHOT], {})\r\nexport const ELEMENTAL_BOW = () => createWeapon(type, 'elemental', [SHOT], {})\r\nexport const CURSED_BOW = () => createWeapon(type, 'cursed', [SHOT], {})\r\n\r\nexport const SHARP_BOW = () =>\r\n  createWeapon(type, 'sharp', [SHOT, HEADSHOT, WOUNDING_SHOT], {})\r\nexport const HARDENED_BOW = () =>\r\n  createWeapon(type, 'hardened', [SHOT, FLURRY, PIN_DOWN], {})\r\nexport const ENGRAVED_BOW = () =>\r\n  createWeapon(type, 'engraved', [SHOT, HEADSHOT, STUN, WOUNDING_SHOT], {})\r\nexport const ETHEREAL_BOW = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_SHOT], {})\r\n\r\nexport const EXQUISITE_BOW = () =>\r\n  createWeapon(type, 'exquisite', [SHOT, HEADSHOT], {})\r\nexport const DIVINE_BOW = () =>\r\n  createWeapon(type, 'divine', [SHOT, HEADSHOT], {})\r\nexport const ARCANE_BOW = () => createWeapon(type, 'arcane', [SHOT], {})\r\nexport const CELESTIAL_BOW = () => createWeapon(type, 'celestial', [SHOT], {})\r\n\r\nexport const BOWS: tWeaponsByLevel = {\r\n  0: [RANGERS_BOW],\r\n  1: [RUSTED_BOW, TOMB_BOW, BURRIED_BOW, WITHERING_BOW, GLASS_BOW],\r\n  2: [IRON_BOW, STEEL_BOW, STAINLESS_BOW],\r\n  3: [ANCIENT_BOW, CRYSTAL_BOW, ELEMENTAL_BOW, CURSED_BOW],\r\n  4: [SHARP_BOW, HARDENED_BOW, ENGRAVED_BOW, ETHEREAL_BOW],\r\n  5: [EXQUISITE_BOW, DIVINE_BOW, ARCANE_BOW, CELESTIAL_BOW],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const BLAST = createSkill('Blast', 2, 0)\r\nexport const GLASS_BLAST = createSkill('Blast', 1, 0)\r\nexport const ARCANE = createSkill('Arcane', 3, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const NOVA = createSkill('Nova', 3, -5, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const ENFLAME = createSkill('Enflame', 4, 0, {\r\n  perfectStatus: ['burning'],\r\n})\r\nexport const ENGULF = createSkill('Engulf', 4, -10, {\r\n  damageModifier: 0.7,\r\n  perfectStatus: ['burning'],\r\n  targetType: 'group',\r\n})\r\nexport const FREEZE = createSkill('Freeze', 4, 0, {\r\n  perfectStatus: ['frozen'],\r\n})\r\nexport const SHOCK = createSkill('Shock', 4, 0, {\r\n  perfectStatus: ['shocked'],\r\n})\r\nexport const STUN = createSkill('Stun', 2, 0, {\r\n  damageModifier: 0.5,\r\n  damage: false,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const PROTECT = createSkill('Protect', 2, 0, {\r\n  damageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  perfectStatus: ['protected'],\r\n})\r\nexport const TIME_JUMP = createSkill('Time Jump', 3, -5, {\r\n  damageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  perfectStatus: ['rushed'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  ARCANE,\r\n  BLAST,\r\n  ENFLAME,\r\n  ENGULF,\r\n  GLASS_BLAST,\r\n  NOVA,\r\n  PROTECT,\r\n  STUN,\r\n  TIME_JUMP,\r\n} from '../../../Skill/skills/catalyst'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'catalyst'\r\nexport const STUDENTS_CATALYST = () => ({\r\n  ...createWeapon(type, 'starting', [ARCANE, NOVA], {}),\r\n  name: `Student Catalyst`,\r\n})\r\nexport const RUSTED_CATALYST = () =>\r\n  createWeapon(type, 'rusted', [BLAST, ARCANE], {})\r\nexport const TOMB_CATALYST = () =>\r\n  createWeapon(type, 'tomb', [BLAST, ARCANE, NOVA], {})\r\nexport const BURRIED_CATALYST = () =>\r\n  createWeapon(type, 'buried', [BLAST, ARCANE, PROTECT], {})\r\nexport const WITHERING_CATALYST = () =>\r\n  createBreakableWeapon(type, 'withering', [BLAST], {})\r\nexport const GLASS_CATALYST = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_BLAST], {})\r\n\r\nexport const IRON_CATALYST = () =>\r\n  createWeapon(type, 'iron', [ARCANE, NOVA, STUN], {})\r\nexport const STEEL_CATALYST = () =>\r\n  createWeapon(type, 'steel', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const STAINLESS_CATALYST = () =>\r\n  createWeapon(type, 'stainless', [BLAST, ARCANE, NOVA, PROTECT], {})\r\n\r\nexport const ANCIENT_CATALYST = () =>\r\n  createWeapon(type, 'ancient', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const CRYSTAL_CATALYST = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_BLAST], {})\r\nexport const ELEMENTAL_CATALYST = () =>\r\n  createWeapon(type, 'elemental', [ARCANE, ENFLAME, ENGULF], {})\r\nexport const CURSED_CATALYST = () => createWeapon(type, 'cursed', [ARCANE], {})\r\n\r\nexport const SHARP_CATALYST = () =>\r\n  createWeapon(type, 'sharp', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const HARDENED_CATALYST = () =>\r\n  createWeapon(type, 'hardened', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const ENGRAVED_CATALYST = () =>\r\n  createWeapon(type, 'engraved', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const ETHEREAL_CATALYST = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_BLAST], {})\r\n\r\nexport const EXQUISITE_CATALYST = () =>\r\n  createWeapon(type, 'exquisite', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const DIVINE_CATALYST = () =>\r\n  createWeapon(type, 'divine', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const ARCANE_CATALYST = () =>\r\n  createWeapon(type, 'arcane', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const CELESTIAL_CATALYST = () =>\r\n  createBreakableWeapon(\r\n    type,\r\n    'celestial',\r\n    [ARCANE, NOVA, PROTECT, TIME_JUMP],\r\n    {},\r\n  )\r\n\r\nexport const CATALYSTS: tWeaponsByLevel = {\r\n  0: [STUDENTS_CATALYST],\r\n  1: [\r\n    RUSTED_CATALYST,\r\n    TOMB_CATALYST,\r\n    BURRIED_CATALYST,\r\n    WITHERING_CATALYST,\r\n    GLASS_CATALYST,\r\n  ],\r\n  2: [IRON_CATALYST, STEEL_CATALYST, STAINLESS_CATALYST],\r\n  3: [ANCIENT_CATALYST, CRYSTAL_CATALYST, ELEMENTAL_CATALYST, CURSED_CATALYST],\r\n  4: [SHARP_CATALYST, HARDENED_CATALYST, ENGRAVED_CATALYST, ETHEREAL_CATALYST],\r\n  5: [EXQUISITE_CATALYST, DIVINE_CATALYST, ARCANE_CATALYST, CELESTIAL_CATALYST],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const RING = createSkill('Ring', 3, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const WITHERING_RING = createSkill('Ring', 2, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const GLASS_RING = createSkill('Ring', 1, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const REVERBERATE = createSkill('Reverberate', 4, -5, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 2, -5, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const SLOW = createSkill('Slow', 4, 0, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['speed-down'],\r\n})\r\nexport const VANISH = createSkill('Vanish', 2, 0, {\r\n  damageModifier: 0,\r\n  damage: false,\r\n  targetType: 'ally',\r\n  perfectStatus: ['evade-up'],\r\n})\r\nexport const RUSH = createSkill('Rush', 2, 0, {\r\n  damageModifier: 0,\r\n  damage: false,\r\n  targetType: 'ally',\r\n  perfectStatus: ['rushed'],\r\n})\r\nexport const RESET = createSkill('Reset', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['reset'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  GLASS_RING,\r\n  RESET,\r\n  REVERBERATE,\r\n  RING,\r\n  RUSH,\r\n  SLOW,\r\n  STUN,\r\n  VANISH,\r\n  WITHERING_RING,\r\n} from '../../../Skill/skills/chime'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'chime'\r\nexport const PATRICIANS_CHIME = () => ({\r\n  ...createWeapon(type, 'starting', [RING, STUN], {}),\r\n  name: `Patrician Chime`,\r\n})\r\nexport const RUSTED_CHIME = () =>\r\n  createWeapon(type, 'rusted', [RING, REVERBERATE], {})\r\nexport const TOMB_CHIME = () =>\r\n  createWeapon(type, 'tomb', [RING, SLOW, VANISH], {})\r\nexport const BURRIED_CHIME = () =>\r\n  createWeapon(type, 'buried', [RING, STUN, VANISH], {})\r\nexport const WITHERING_CHIME = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_RING], {})\r\nexport const GLASS_CHIME = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_RING], {})\r\n\r\nexport const IRON_CHIME = () =>\r\n  createWeapon(type, 'iron', [RING, REVERBERATE, STUN], {})\r\nexport const STEEL_CHIME = () =>\r\n  createWeapon(type, 'steel', [RING, RUSH, RESET], {})\r\nexport const STAINLESS_CHIME = () =>\r\n  createWeapon(type, 'stainless', [RING, REVERBERATE, RUSH, RESET], {})\r\n\r\nexport const ANCIENT_CHIME = () =>\r\n  createWeapon(type, 'ancient', [RING, REVERBERATE, STUN], {})\r\nexport const CRYSTAL_CHIME = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_RING], {})\r\nexport const ELEMENTAL_CHIME = () => createWeapon(type, 'elemental', [RING], {})\r\nexport const CURSED_CHIME = () => createWeapon(type, 'cursed', [RING], {})\r\n\r\nexport const SHARP_CHIME = () =>\r\n  createWeapon(type, 'sharp', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const HARDENED_CHIME = () =>\r\n  createWeapon(type, 'hardened', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const ENGRAVED_CHIME = () =>\r\n  createWeapon(type, 'engraved', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const ETHEREAL_CHIME = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_RING], {})\r\n\r\nexport const EXQUISITE_CHIME = () =>\r\n  createWeapon(type, 'exquisite', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const DIVINE_CHIME = () =>\r\n  createWeapon(type, 'divine', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const ARCANE_CHIME = () =>\r\n  createWeapon(type, 'arcane', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const CELESTIAL_CHIME = () =>\r\n  createBreakableWeapon(type, 'celestial', [RING, REVERBERATE, STUN, SLOW], {})\r\n\r\nexport const CHIMES: tWeaponsByLevel = {\r\n  0: [PATRICIANS_CHIME],\r\n  1: [RUSTED_CHIME, TOMB_CHIME, BURRIED_CHIME, WITHERING_CHIME, GLASS_CHIME],\r\n  2: [IRON_CHIME, STEEL_CHIME, STAINLESS_CHIME],\r\n  3: [ANCIENT_CHIME, CRYSTAL_CHIME, ELEMENTAL_CHIME, CURSED_CHIME],\r\n  4: [SHARP_CHIME, HARDENED_CHIME, ENGRAVED_CHIME, ETHEREAL_CHIME],\r\n  5: [EXQUISITE_CHIME, DIVINE_CHIME, ARCANE_CHIME, CELESTIAL_CHIME],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const THRUST = createSkill('Thrust', 3, 0)\r\nexport const SWING = createSkill('Swing', 4, 0)\r\nexport const WITHERING_SWING = createSkill('Swing', 2, 0)\r\nexport const GLASS_SWING = createSkill('Swing', 1, 0)\r\nexport const FLURRY = createSkill('Flurry', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const CLEAVE = createSkill('Cleave', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const SLICE = createSkill('Slice', 4, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\nexport const ARMOR_UP = createSkill('Armor Up', 2, 0, {\r\n  targetType: 'self',\r\n  perfectStatus: ['armor-up'],\r\n})\r\nexport const EVADE_UP = createSkill('Evade Up', 2, 0, {\r\n  targetType: 'self',\r\n  perfectStatus: ['evade-up'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  ARMOR_UP,\r\n  CLEAVE,\r\n  EVADE_UP,\r\n  FLURRY,\r\n  GLASS_SWING,\r\n  SLASH,\r\n  SLICE,\r\n  SWING,\r\n  THRUST,\r\n  WITHERING_SWING,\r\n} from '../../../Skill/skills/scythe'\r\nimport { tWeapon } from '../../type'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'scythe'\r\nexport const FARMER_SCYTHE = (): tWeapon => ({\r\n  ...createWeapon(type, 'starting', [SLICE], {}),\r\n  name: `Farmer Scythe`,\r\n})\r\nexport const RUSTED_SCYTHE = () => createWeapon(type, 'rusted', [THRUST], {})\r\nexport const TOMB_SCYTHE = () => createWeapon(type, 'tomb', [SWING, FLURRY], {})\r\nexport const BURRIED_SCYTHE = () =>\r\n  createWeapon(type, 'buried', [SWING, SLICE], {})\r\nexport const WITHERING_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_SWING], {})\r\nexport const GLASS_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_SWING], {})\r\n\r\nexport const IRON_SCYTHE = () =>\r\n  createWeapon(type, 'iron', [THRUST, ARMOR_UP, EVADE_UP], {})\r\nexport const STEEL_SCYTHE = () =>\r\n  createWeapon(type, 'steel', [THRUST, SLASH], {})\r\nexport const STAINLESS_SCYTHE = () =>\r\n  createWeapon(type, 'stainless', [THRUST, SLICE], {})\r\n\r\nexport const ANCIENT_SCYTHE = () =>\r\n  createWeapon(type, 'ancient', [SWING, CLEAVE, ARMOR_UP], {})\r\nexport const CRYSTAL_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_SWING], {})\r\nexport const ELEMENTAL_SCYTHE = () =>\r\n  createWeapon(type, 'elemental', [THRUST], {})\r\nexport const CURSED_SCYTHE = () => createWeapon(type, 'cursed', [THRUST], {})\r\n\r\nexport const SHARP_SCYTHE = () =>\r\n  createWeapon(type, 'sharp', [THRUST, SLICE, SLASH], {})\r\nexport const HARDENED_SCYTHE = () =>\r\n  createWeapon(type, 'hardened', [THRUST, FLURRY, ARMOR_UP, EVADE_UP], {})\r\nexport const ENGRAVED_SCYTHE = () =>\r\n  createWeapon(type, 'engraved', [THRUST, FLURRY, SLASH, CLEAVE], {})\r\nexport const ETHEREAL_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_SWING], {})\r\n\r\nexport const EXQUISITE_SCYTHE = () =>\r\n  createWeapon(type, 'exquisite', [THRUST, SLICE, SLASH], {})\r\nexport const DIVINE_SCYTHE = () =>\r\n  createWeapon(type, 'divine', [THRUST, SLICE, ARMOR_UP, EVADE_UP], {})\r\nexport const ARCANE_SCYTHE = () => createWeapon(type, 'arcane', [THRUST], {})\r\nexport const CELESTIAL_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'celestial', [GLASS_SWING], {})\r\n\r\nexport const SCYTHES: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [\r\n    RUSTED_SCYTHE,\r\n    TOMB_SCYTHE,\r\n    BURRIED_SCYTHE,\r\n    WITHERING_SCYTHE,\r\n    GLASS_SCYTHE,\r\n  ],\r\n  2: [IRON_SCYTHE, STEEL_SCYTHE, STAINLESS_SCYTHE],\r\n  3: [ANCIENT_SCYTHE, CRYSTAL_SCYTHE, ELEMENTAL_SCYTHE, CURSED_SCYTHE],\r\n  4: [SHARP_SCYTHE, HARDENED_SCYTHE, ENGRAVED_SCYTHE, ETHEREAL_SCYTHE],\r\n  5: [EXQUISITE_SCYTHE, DIVINE_SCYTHE, ARCANE_SCYTHE, CELESTIAL_SCYTHE],\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { tItemRarity } from '../../Item/type'\r\nimport { tSkill } from '../../Skill/type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { tStats } from '../../Stats/type'\r\nimport { tStatusType } from '../../Status/type'\r\nimport { tArmor, tArmorResourceType, tArmorType } from '../type'\r\n\r\nexport const createArmor = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  resource: tArmorResourceType,\r\n  type: tArmorType,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n): tArmor => {\r\n  return {\r\n    id: v4(),\r\n    name,\r\n    rarity,\r\n    itemType: 'armor',\r\n    resource,\r\n    type,\r\n    stat: 'vigor',\r\n    goldValue,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      ...stats,\r\n    },\r\n    skills,\r\n    immunities,\r\n  }\r\n}\r\n\r\nexport const createFootwear = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'feet',\r\n    'footwear',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createHat = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(name, rarity, 'head', 'hat', goldValue, stats, skills, immunities)\r\n\r\nexport const createHeavyArmor = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'body',\r\n    'heavy-armor',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createHelmet = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'head',\r\n    'helmet',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createLightArmor = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'body',\r\n    'light-armor',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createMagicArmor = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'body',\r\n    'magic-armor',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createMagicHat = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'head',\r\n    'magic-hat',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createShield = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'offhand',\r\n    'shield',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createWard = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'offhand',\r\n    'ward',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createRing = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'ring',\r\n    'ring',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createPendant = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'pendant',\r\n    'pendant',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n","import { createSkill } from '.'\r\n\r\nexport const TAUNT = createSkill('Taunt', 2, 0, {\r\n  damageModifier: 0,\r\n  damage: false,\r\n  targetType: 'self',\r\n  weaponStatOverride: 'vigor',\r\n  perfectStatus: ['targeted'],\r\n})\r\n","import { FOREST_PENDANT, IRON_CHARM, RANGER_CHARM } from './pendants'\r\nimport { DRAINED_RING, LUCKY_RING, RING_OF_FOCUS, SIMPLE_RING } from './rings'\r\nimport {\r\n  BROKEN_SHIELD,\r\n  FOREST_BUCKLER,\r\n  LEATHER_BUCKLER,\r\n  STUDENT_WARD,\r\n  VILLAGER_SHIELD,\r\n  WOODEN_WAR_SHIELD,\r\n} from './shields/level_0'\r\nimport {\r\n  APPRENTICE_WARD,\r\n  CULTIST_SHIELD,\r\n  IRON_BUCKLER,\r\n  IRON_WAR_SHIELD,\r\n  WOODEN_BUCKLER,\r\n  WOODEN_PLANK_SHIELD,\r\n} from './shields/level_1'\r\nimport {\r\n  CULTIST_WARD,\r\n  GRAVEGUARD_SHIELD,\r\n  HEAVY_IRON_SHIELD,\r\n  NOVICE_WARD,\r\n  OLD_FOREST_SHIELD,\r\n} from './shields/level_2'\r\n\r\nexport const PENDANTS_BY_LEVEL = {\r\n  0: [FOREST_PENDANT, RANGER_CHARM, IRON_CHARM],\r\n}\r\nexport const RINGS_BY_LEVEL = {\r\n  0: [LUCKY_RING, RING_OF_FOCUS, DRAINED_RING, SIMPLE_RING],\r\n}\r\nexport const SHIELDS_BY_LEVEL = {\r\n  0: [\r\n    FOREST_BUCKLER,\r\n    STUDENT_WARD,\r\n    VILLAGER_SHIELD,\r\n    WOODEN_WAR_SHIELD,\r\n    LEATHER_BUCKLER,\r\n    BROKEN_SHIELD,\r\n  ],\r\n  1: [\r\n    WOODEN_PLANK_SHIELD,\r\n    CULTIST_SHIELD,\r\n    WOODEN_BUCKLER,\r\n    IRON_BUCKLER,\r\n    APPRENTICE_WARD,\r\n    IRON_WAR_SHIELD,\r\n  ],\r\n  2: [\r\n    GRAVEGUARD_SHIELD,\r\n    OLD_FOREST_SHIELD,\r\n    HEAVY_IRON_SHIELD,\r\n    NOVICE_WARD,\r\n    CULTIST_WARD,\r\n  ],\r\n}\r\n","import { createPendant } from '..'\r\n\r\nexport const FOREST_PENDANT = () =>\r\n  createPendant('Forest Pendant', 'rare', 60, {\r\n    resistance: 1,\r\n    healthRegeneration: 3,\r\n  })\r\n\r\nexport const RANGER_CHARM = () =>\r\n  createPendant('Ranger Charm', 'common', 30, {\r\n    dexterity: 1,\r\n  })\r\n\r\nexport const IRON_CHARM = () =>\r\n  createPendant('Iron Charm', 'uncommon', 45, {\r\n    armor: 1,\r\n    strength: 1,\r\n    agility: -2,\r\n  })\r\n","import { createRing } from '..'\r\n\r\nexport const LUCKY_RING = () =>\r\n  createRing('Lucky Ring', 'uncommon', 50, { luck: 20 })\r\n\r\nexport const RING_OF_FOCUS = () =>\r\n  createRing('Ring of Focus', 'uncommon', 50, {\r\n    attackDamageOffset: 1,\r\n    criticalChance: 4,\r\n  })\r\n\r\nexport const DRAINED_RING = () =>\r\n  createRing('Drained Ring', 'uncommon', 40, {\r\n    resistance: 2,\r\n  })\r\n\r\nexport const SIMPLE_RING = () =>\r\n  createRing('Simple Ring', 'common', 30, {\r\n    armor: 1,\r\n  })\r\n","import { createShield } from '..'\r\nimport { TAUNT } from '../../../Skill/skills/armor'\r\n\r\nexport const FOREST_BUCKLER = () =>\r\n  createShield('Forest Buckler', 'uncommon', 20, {\r\n    armor: 1,\r\n    evasion: 4,\r\n  })\r\n\r\nexport const LEATHER_BUCKLER = () =>\r\n  createShield('Leather Buckler', 'common', 10, {\r\n    evasion: 2,\r\n  })\r\n\r\nexport const STUDENT_WARD = () =>\r\n  createShield(\r\n    'Student Ward',\r\n    'uncommon',\r\n    20,\r\n    {\r\n      resistance: 2,\r\n    },\r\n    [TAUNT],\r\n  )\r\n\r\nexport const BROKEN_SHIELD = () =>\r\n  createShield(\r\n    'Broken Shield',\r\n    'common',\r\n    14,\r\n    {\r\n      armor: 1,\r\n    },\r\n    [TAUNT],\r\n  )\r\n\r\nexport const VILLAGER_SHIELD = () =>\r\n  createShield(\r\n    'Villager Shield',\r\n    'common',\r\n    20,\r\n    {\r\n      armor: 2,\r\n      resistance: 2,\r\n    },\r\n    [TAUNT],\r\n  )\r\n\r\nexport const WOODEN_WAR_SHIELD = () =>\r\n  createShield(\r\n    'Wooden War Shield',\r\n    'common',\r\n    20,\r\n    {\r\n      armor: 1,\r\n      resistance: 1,\r\n      agility: -5,\r\n    },\r\n    [TAUNT],\r\n    ['stunned'],\r\n  )\r\n","import { createShield } from '..'\r\nimport { TAUNT } from '../../../Skill/skills/armor'\r\n\r\nexport const WOODEN_PLANK_SHIELD = () =>\r\n  createShield(\r\n    'Wooden Plan Shield',\r\n    'common',\r\n    25,\r\n    {\r\n      armor: 4,\r\n      resistance: 2,\r\n    },\r\n    [TAUNT],\r\n  )\r\n\r\nexport const CULTIST_SHIELD = () =>\r\n  createShield(\r\n    'Cultist Shield',\r\n    'common',\r\n    25,\r\n    {\r\n      armor: 3,\r\n      resistance: 1,\r\n    },\r\n    [TAUNT],\r\n  )\r\n\r\nexport const WOODEN_BUCKLER = () =>\r\n  createShield('Wooden Buckler', 'common', 15, {\r\n    evasion: 3,\r\n  })\r\n\r\nexport const IRON_BUCKLER = () =>\r\n  createShield('Iron Buckler', 'common', 25, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    evasion: 5,\r\n  })\r\n\r\nexport const APPRENTICE_WARD = () =>\r\n  createShield(\r\n    'Apprentice Shield',\r\n    'common',\r\n    25,\r\n    {\r\n      armor: 2,\r\n      resistance: 3,\r\n    },\r\n    [TAUNT],\r\n  )\r\n\r\nexport const IRON_WAR_SHIELD = () =>\r\n  createShield(\r\n    'Iron War Shield',\r\n    'uncommon',\r\n    30,\r\n    {\r\n      armor: 2,\r\n      resistance: 2,\r\n      agility: -5,\r\n    },\r\n    [TAUNT],\r\n    ['stunned'],\r\n  )\r\n","import { createShield } from '..'\r\nimport { TAUNT } from '../../../Skill/skills/armor'\r\n\r\nexport const GRAVEGUARD_SHIELD = () =>\r\n  createShield(\r\n    'Graveguard Shield',\r\n    'uncommon',\r\n    40,\r\n    {\r\n      armor: 2,\r\n      resistance: 2,\r\n      attackDamageOffset: 2,\r\n    },\r\n    [TAUNT],\r\n  )\r\n\r\nexport const OLD_FOREST_SHIELD = () =>\r\n  createShield('Old Forest Shield', 'rare', 50, {\r\n    armor: 6,\r\n    strength: 5,\r\n    agility: -3,\r\n  })\r\n\r\nexport const HEAVY_IRON_SHIELD = () =>\r\n  createShield(\r\n    'Heavy Iron Shield',\r\n    'uncommon',\r\n    40,\r\n    {\r\n      armor: 5,\r\n      resistance: 5,\r\n      agility: -2,\r\n    },\r\n    [TAUNT],\r\n  )\r\n\r\nexport const NOVICE_WARD = () =>\r\n  createShield('Novice Ward', 'uncommon', 40, {\r\n    armor: 1,\r\n    resistance: 3,\r\n    damageReflection: {\r\n      melee: 0,\r\n      ranged: 6,\r\n    },\r\n  })\r\n\r\nexport const CULTIST_WARD = () =>\r\n  createShield('Cultist Ward', 'uncommon', 40, {\r\n    armor: 2,\r\n    resistance: 6,\r\n  })\r\n","import { tArmor } from '../../type'\r\nimport {\r\n  PENDANTS_BY_LEVEL,\r\n  RINGS_BY_LEVEL,\r\n  SHIELDS_BY_LEVEL,\r\n} from '../constants'\r\nimport {\r\n  ADVENTURER_BOOTS,\r\n  ADVENTURER_CLOAK,\r\n  ADVENTURER_HOOD,\r\n} from './adventure'\r\nimport {\r\n  ANTIQUATED_ATTIRE,\r\n  ANTIQUATED_HAT,\r\n  ANTIQUATED_SHOES,\r\n} from './antiquated'\r\nimport { APPRENTICE_CAP, APPRENTICE_ROBE, APPRENTICE_SHOES } from './apprentice'\r\nimport {\r\n  ARISTOCRAT_ATTIRE,\r\n  ARISTOCRAT_HAT,\r\n  ARISTOCRAT_SHOES,\r\n} from './aristocrat'\r\nimport { ASSASSIN_BOOTS, ASSASSIN_CLOAK, ASSASSIN_HOOD } from './assassin'\r\nimport { BISHOP_MITRE, BISHOP_ROBES, BISHOP_SHOES } from './bishop'\r\nimport { BONE_ARMOR, BONE_BOOTS, BONE_HELMET } from './bone'\r\nimport {\r\n  EXECUTIONER_ARMOR,\r\n  EXECUTIONER_BOOTS,\r\n  EXECUTIONER_HELMET,\r\n} from './executioner'\r\nimport {\r\n  FALLEN_RAIDER_ARMOR,\r\n  FALLEN_RAIDER_BOOTS,\r\n  FALLEN_RAIDER_HELMENT,\r\n} from './fallen_raider'\r\nimport {\r\n  GRAVEGUARD_ARMOR,\r\n  GRAVEGUARD_BOOTS,\r\n  GRAVEGUARD_HELMET,\r\n} from './graveguard'\r\nimport { HUNTER_BOOTS, HUNTER_CLOAK, HUNTER_HOOD } from './hunter'\r\nimport { IRON_ARMOR, IRON_BOOTS, IRON_HELMET } from './iron'\r\nimport {\r\n  NECROMANCER_COWL,\r\n  NECROMANCER_ROBES,\r\n  NECROMANCER_WRAPS,\r\n} from './necromancer'\r\nimport { NOBLE_HAT, NOBLE_OUTFIT, NOBLE_SHOES } from './noble'\r\nimport { NOVICE_HAT, NOVICE_ROBES, NOVICE_SHOES } from './novice'\r\nimport {\r\n  OLD_KNIGHT_ARMOR,\r\n  OLD_KNIGHT_BOOTS,\r\n  OLD_KNIGHT_HELMET,\r\n} from './old_knight'\r\nimport { PATRICIAN_ATTIRE, PATRICIAN_HAT, PATRICIAN_SHOES } from './patrician'\r\nimport { RANGER_BOOTS, RANGER_CLOAK, RANGER_HOOD } from './ranger'\r\nimport { REAPER_BOOTS, REAPER_HOOD, REAPER_ROBES } from './reaper'\r\nimport { ROGUE_BOOTS, ROGUE_CLOAK, ROGUE_HOOD } from './rogue'\r\nimport { STUDENT_BOOTS, STUDENT_CAP, STUDENT_ROBES } from './student'\r\nimport { TOMB_ARMOR, TOMB_BOOTS, TOMB_HELMET } from './tomb'\r\n\r\nexport const ARMOR_BY_LEVEL: Record<number, (() => tArmor)[]> = {\r\n  0: [\r\n    RANGER_HOOD,\r\n    RANGER_CLOAK,\r\n    RANGER_BOOTS,\r\n    PATRICIAN_HAT,\r\n    PATRICIAN_ATTIRE,\r\n    PATRICIAN_SHOES,\r\n    EXECUTIONER_HELMET,\r\n    EXECUTIONER_ARMOR,\r\n    EXECUTIONER_BOOTS,\r\n    STUDENT_CAP,\r\n    STUDENT_ROBES,\r\n    STUDENT_BOOTS,\r\n    TOMB_HELMET,\r\n    TOMB_ARMOR,\r\n    TOMB_BOOTS,\r\n    ...RINGS_BY_LEVEL[0],\r\n    ...PENDANTS_BY_LEVEL[0],\r\n    ...SHIELDS_BY_LEVEL[0],\r\n  ],\r\n  1: [\r\n    ADVENTURER_HOOD,\r\n    ADVENTURER_CLOAK,\r\n    ADVENTURER_BOOTS,\r\n    ARISTOCRAT_HAT,\r\n    ARISTOCRAT_ATTIRE,\r\n    ARISTOCRAT_SHOES,\r\n    GRAVEGUARD_HELMET,\r\n    GRAVEGUARD_ARMOR,\r\n    GRAVEGUARD_BOOTS,\r\n    APPRENTICE_CAP,\r\n    APPRENTICE_ROBE,\r\n    APPRENTICE_SHOES,\r\n    ...SHIELDS_BY_LEVEL[1],\r\n  ],\r\n  2: [\r\n    HUNTER_HOOD,\r\n    HUNTER_CLOAK,\r\n    HUNTER_BOOTS,\r\n    ANTIQUATED_HAT,\r\n    ANTIQUATED_ATTIRE,\r\n    ANTIQUATED_SHOES,\r\n    IRON_HELMET,\r\n    IRON_ARMOR,\r\n    IRON_BOOTS,\r\n    BONE_HELMET,\r\n    BONE_ARMOR,\r\n    BONE_BOOTS,\r\n    NOVICE_HAT,\r\n    NOVICE_ROBES,\r\n    NOVICE_SHOES,\r\n    ...SHIELDS_BY_LEVEL[2],\r\n  ],\r\n  3: [\r\n    ROGUE_HOOD,\r\n    ROGUE_CLOAK,\r\n    ROGUE_BOOTS,\r\n    NECROMANCER_COWL,\r\n    NECROMANCER_ROBES,\r\n    NECROMANCER_WRAPS,\r\n    FALLEN_RAIDER_HELMENT,\r\n    FALLEN_RAIDER_ARMOR,\r\n    FALLEN_RAIDER_BOOTS,\r\n    NOBLE_HAT,\r\n    NOBLE_OUTFIT,\r\n    NOBLE_SHOES,\r\n  ],\r\n  4: [\r\n    ASSASSIN_HOOD,\r\n    ASSASSIN_CLOAK,\r\n    ASSASSIN_BOOTS,\r\n    OLD_KNIGHT_HELMET,\r\n    OLD_KNIGHT_ARMOR,\r\n    OLD_KNIGHT_BOOTS,\r\n    REAPER_HOOD,\r\n    REAPER_ROBES,\r\n    REAPER_BOOTS,\r\n    BISHOP_MITRE,\r\n    BISHOP_ROBES,\r\n    BISHOP_SHOES,\r\n  ],\r\n}\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const RANGER_HOOD = () =>\r\n  createHat('Ranger Hood', 'common', 15, {\r\n    resistance: 1,\r\n    evasion: 3,\r\n    dexterity: 1,\r\n  })\r\nexport const RANGER_CLOAK = () =>\r\n  createLightArmor('Ranger Cloak', 'common', 30, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    evasion: 5,\r\n    dexterity: 2,\r\n    charisma: -2,\r\n  })\r\nexport const RANGER_BOOTS = () =>\r\n  createFootwear('Ranger Boots', 'common', 15, {\r\n    armor: 1,\r\n    evasion: 2,\r\n    dexterity: 1,\r\n    agility: 1,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const PATRICIAN_HAT = () =>\r\n  createHat('Patrician Hat', 'common', 25, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    charisma: 1,\r\n  })\r\n\r\nexport const PATRICIAN_ATTIRE = () =>\r\n  createLightArmor('Patrician Attire', 'common', 70, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    charisma: 2,\r\n    luck: 2,\r\n  })\r\n\r\nexport const PATRICIAN_SHOES = () =>\r\n  createFootwear('Patrician Shoes', 'common', 25, {\r\n    armor: 1,\r\n    resistance: 2,\r\n    charisma: 1,\r\n    dexterity: -2,\r\n    luck: 1,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const EXECUTIONER_HELMET = () =>\r\n  createHelmet('Executioner Helmet', 'common', 15, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    vigor: 1,\r\n  })\r\n\r\nexport const EXECUTIONER_ARMOR = () =>\r\n  createHeavyArmor('Executioner Armor', 'common', 40, {\r\n    armor: 3,\r\n    resistance: 2,\r\n    strength: 2,\r\n    intelligence: -2,\r\n  })\r\n\r\nexport const EXECUTIONER_BOOTS = () =>\r\n  createFootwear('Executioner Boots', 'common', 15, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    strength: 1,\r\n    vigor: 1,\r\n  })\r\n","import { createFootwear, createMagicArmor, createMagicHat } from '..'\r\n\r\nexport const STUDENT_CAP = () =>\r\n  createMagicHat('Student Cap', 'common', 15, {\r\n    resistance: 2,\r\n    intelligence: 1,\r\n  })\r\n\r\nexport const STUDENT_ROBES = () =>\r\n  createMagicArmor('Student Robes', 'common', 20, {\r\n    armor: 1,\r\n    resistance: 3,\r\n    strength: -2,\r\n    intelligence: 2,\r\n  })\r\n\r\nexport const STUDENT_BOOTS = () =>\r\n  createFootwear('Student Boots', 'common', 15, {\r\n    resistance: 2,\r\n    intelligence: 1,\r\n    strength: -2,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const TOMB_HELMET = () =>\r\n  createHelmet('Tomb Helment', 'common', 30, {\r\n    armor: 3,\r\n    resistance: 3,\r\n  })\r\n\r\nexport const TOMB_ARMOR = () =>\r\n  createHeavyArmor('Tomb Armor', 'common', 70, {\r\n    armor: 7,\r\n    resistance: 5,\r\n  })\r\n\r\nexport const TOMB_BOOTS = () =>\r\n  createFootwear('Tomb Boots', 'common', 35, {\r\n    armor: 3,\r\n    resistance: 2,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const ADVENTURER_HOOD = () =>\r\n  createHat('Adventurer Hood', 'common', 20, {\r\n    resistance: 2,\r\n    evasion: 3,\r\n    dexterity: 2,\r\n  })\r\n\r\nexport const ADVENTURER_CLOAK = () =>\r\n  createLightArmor('Adventurer Cloak', 'uncommon', 70, {\r\n    armor: 3,\r\n    resistance: 3,\r\n    evasion: 6,\r\n    dexterity: 3,\r\n    charisma: -4,\r\n  })\r\n\r\nexport const ADVENTURER_BOOTS = () =>\r\n  createFootwear('Adventurer Boots', 'common', 20, {\r\n    armor: 2,\r\n    evasion: 3,\r\n    dexterity: 2,\r\n    agility: 2,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const ARISTOCRAT_HAT = () =>\r\n  createHat('Aristocrat Hat', 'common', 25, {\r\n    armor: 1,\r\n    resistance: 2,\r\n    maxInspirationOffset: 1,\r\n    charisma: 2,\r\n    luck: 2,\r\n  })\r\n\r\nexport const ARISTOCRAT_ATTIRE = () =>\r\n  createLightArmor('Aristocrat Attire', 'uncommon', 80, {\r\n    armor: 4,\r\n    resistance: 4,\r\n    charisma: 3,\r\n    luck: 3,\r\n  })\r\n\r\nexport const ARISTOCRAT_SHOES = () =>\r\n  createFootwear('Aristocrat Shoes', 'common', 30, {\r\n    armor: 1,\r\n    resistance: 2,\r\n    dexterity: -2,\r\n    charisma: 2,\r\n    luck: 2,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const GRAVEGUARD_HELMET = () =>\r\n  createHelmet('Graveguard Helmet', 'common', 25, {\r\n    armor: 2,\r\n    resistance: 1,\r\n    healthRegeneration: 1,\r\n  })\r\n\r\nexport const GRAVEGUARD_ARMOR = () =>\r\n  createHeavyArmor('Graveguard Armor', 'uncommon', 80, {\r\n    armor: 6,\r\n    resistance: 1,\r\n    strength: 2,\r\n    vigor: 2,\r\n  })\r\n\r\nexport const GRAVEGUARD_BOOTS = () =>\r\n  createFootwear('Graveguard Boots', 'common', 15, {\r\n    armor: 2,\r\n    resistance: 1,\r\n    vigor: 2,\r\n  })\r\n","import { createFootwear, createMagicArmor, createMagicHat } from '..'\r\n\r\nexport const APPRENTICE_CAP = () =>\r\n  createMagicHat('Apprentice Cap', 'common', 25, {\r\n    resistance: 4,\r\n    maxInspirationOffset: 1,\r\n    intelligence: 2,\r\n  }) // confuse immunity\r\n\r\nexport const APPRENTICE_ROBE = () =>\r\n  createMagicArmor(\r\n    'Apprentice Robe',\r\n    'uncommon',\r\n    90,\r\n    {\r\n      armor: 2,\r\n      resistance: 6,\r\n      maxInspirationOffset: 1,\r\n      strength: -3,\r\n      intelligence: 3,\r\n    },\r\n    [],\r\n    [\r\n      'cursed-agility',\r\n      'cursed-charisma',\r\n      'cursed-dexterity',\r\n      'cursed-intelligence',\r\n      'cursed-luck',\r\n      'cursed-strength',\r\n      'cursed-vigor',\r\n    ],\r\n  )\r\n\r\nexport const APPRENTICE_SHOES = () =>\r\n  createFootwear('Apprentice Shoes', 'common', 25, {\r\n    armor: 1,\r\n    resistance: 3,\r\n    strength: -2,\r\n    intelligence: 2,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const HUNTER_HOOD = () =>\r\n  createHat('Hunter Hood', 'common', 35, {\r\n    resistance: 3,\r\n    evasion: 4,\r\n    dexterity: 3,\r\n  })\r\n\r\nexport const HUNTER_CLOAK = () =>\r\n  createLightArmor('Hunter Cloak', 'uncommon', 80, {\r\n    armor: 5,\r\n    resistance: 5,\r\n    evasion: 7,\r\n    dexterity: 4,\r\n    charisma: -4,\r\n    agility: 2,\r\n  })\r\n\r\nexport const HUNTER_BOOTS = () =>\r\n  createFootwear('Hunter Boots', 'common', 35, {\r\n    armor: 3,\r\n    evasion: 4,\r\n    dexterity: 3,\r\n    agility: 3,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const ANTIQUATED_HAT = () =>\r\n  createHat('Antiquated Hat', 'common', 35, {\r\n    armor: 2,\r\n    resistance: 3,\r\n    maxInspirationOffset: 1,\r\n    charisma: 3,\r\n    luck: 3,\r\n  })\r\n\r\nexport const ANTIQUATED_ATTIRE = () =>\r\n  createLightArmor('Antiquated Attire', 'uncommon', 80, {\r\n    armor: 6,\r\n    resistance: 6,\r\n    dexterity: -4,\r\n    charisma: 4,\r\n    luck: 4,\r\n  })\r\n\r\nexport const ANTIQUATED_SHOES = () =>\r\n  createFootwear('Antiquated Shoes', 'common', 35, {\r\n    armor: 2,\r\n    resistance: 3,\r\n    dexterity: -4,\r\n    charisma: 3,\r\n    luck: 3,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const IRON_HELMET = () =>\r\n  createHelmet(\r\n    'Iron Helmet',\r\n    'common',\r\n    40,\r\n    {\r\n      armor: 4,\r\n      strength: 2,\r\n      dexterity: -4,\r\n    },\r\n    [],\r\n    ['stunned'],\r\n  )\r\n\r\nexport const IRON_ARMOR = () =>\r\n  createHeavyArmor('Iron Armor', 'uncommon', 90, {\r\n    armor: 7,\r\n    resistance: 1,\r\n    strength: 3,\r\n    intelligence: -3,\r\n  })\r\n\r\nexport const IRON_BOOTS = () =>\r\n  createFootwear('Iron Boots', 'common', 40, {\r\n    armor: 2,\r\n    resistance: 2,\r\n    healthRegeneration: 1,\r\n    vigor: 4,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const BONE_HELMET = () =>\r\n  createHelmet('Bone Helmet', 'common', 35, {\r\n    armor: 2,\r\n    resistance: 2,\r\n    healthRegeneration: 1,\r\n    vigor: 3,\r\n  }) // bonus damage\r\n\r\nexport const BONE_ARMOR = () =>\r\n  createHeavyArmor(\r\n    'Bone Armor',\r\n    'uncommon',\r\n    80,\r\n    {\r\n      armor: 5,\r\n      resistance: 5,\r\n      maxHealthOffset: 5,\r\n      healthRegeneration: 2,\r\n      vigor: 5,\r\n    },\r\n    [],\r\n    ['frozen'],\r\n  )\r\n\r\nexport const BONE_BOOTS = () =>\r\n  createFootwear('Bone Boots', 'common', 35, {\r\n    armor: 2,\r\n    resistance: 2,\r\n    healthRegeneration: 1,\r\n    vigor: 4,\r\n  })\r\n","import { createFootwear, createMagicArmor, createMagicHat } from '..'\r\n\r\nexport const NOVICE_HAT = () =>\r\n  createMagicHat('Novice Hat', 'common', 35, {\r\n    resistance: 6,\r\n    intelligence: 3,\r\n  }) // confuse immunity\r\n\r\nexport const NOVICE_ROBES = () =>\r\n  createMagicArmor('Novice Robes', 'uncommon', 90, {\r\n    armor: 3,\r\n    resistance: 9,\r\n    maxInspirationOffset: 1,\r\n    strength: -4,\r\n    intelligence: 4,\r\n  })\r\n\r\nexport const NOVICE_SHOES = () =>\r\n  createFootwear('Novice Shoes', 'common', 25, {\r\n    armor: 2,\r\n    resistance: 4,\r\n    strength: -3,\r\n    intelligence: 3,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const ROGUE_HOOD = () =>\r\n  createHat('Rogue Hood', 'uncommon', 100, {\r\n    armor: 1,\r\n    resistance: 3,\r\n    evasion: 3,\r\n  })\r\n\r\nexport const ROGUE_CLOAK = () =>\r\n  createLightArmor('Rogue Cloak', 'rare', 200, {\r\n    armor: 5,\r\n    resistance: 5,\r\n    evasion: 10,\r\n    dexterity: 5,\r\n    charisma: 5,\r\n  })\r\n\r\nexport const ROGUE_BOOTS = () =>\r\n  createFootwear('Rogue Boots', 'uncommon', 110, {\r\n    armor: 3,\r\n    evasion: 3,\r\n    dexterity: 4,\r\n    agility: 4,\r\n  })\r\n","import { createFootwear, createHat, createMagicArmor } from '..'\r\n\r\nexport const NECROMANCER_COWL = () =>\r\n  createHat('Necromancer Cowl', 'uncommon', 100, {\r\n    resistance: 8,\r\n    intelligence: 4,\r\n    maxInspirationOffset: 1,\r\n  })\r\n\r\nexport const NECROMANCER_ROBES = () =>\r\n  createMagicArmor(\r\n    'Necromancer Robes',\r\n    'rare',\r\n    180,\r\n    {\r\n      armor: 4,\r\n      resistance: 12,\r\n      maxInspirationOffset: 1,\r\n      strength: -5,\r\n      intelligence: 5,\r\n    },\r\n    [],\r\n    [\r\n      'cursed-agility',\r\n      'cursed-charisma',\r\n      'cursed-dexterity',\r\n      'cursed-intelligence',\r\n      'cursed-luck',\r\n      'cursed-strength',\r\n      'cursed-vigor',\r\n    ],\r\n  )\r\n\r\nexport const NECROMANCER_WRAPS = () =>\r\n  createFootwear('Necromancer Wraps', 'uncommon', 90, {\r\n    armor: 3,\r\n    evasion: 5,\r\n    strength: -4,\r\n    intelligence: 4,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const FALLEN_RAIDER_HELMENT = () =>\r\n  createHelmet('Fallen Raider Helmet', 'uncommon', 100, {\r\n    armor: 6,\r\n    resistance: 2,\r\n    strength: 3,\r\n    intelligence: -3,\r\n  })\r\n\r\nexport const FALLEN_RAIDER_ARMOR = () =>\r\n  createHeavyArmor(\r\n    'Fallen Raider Armor',\r\n    'rare',\r\n    200,\r\n    {\r\n      armor: 10,\r\n      resistance: 2,\r\n      strength: 4,\r\n      intelligence: -4,\r\n    },\r\n    [],\r\n  )\r\n\r\nexport const FALLEN_RAIDER_BOOTS = () =>\r\n  createFootwear('Fallen Raider Boots', 'uncommon', 100, {\r\n    armor: 5,\r\n    evasion: 3,\r\n    vigor: 4,\r\n    strength: 3,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const NOBLE_HAT = () =>\r\n  createHat('Noble Hat', 'uncommon', 150, {\r\n    armor: 3,\r\n    resistance: 5,\r\n    maxInspirationOffset: 1,\r\n    charisma: 5,\r\n    luck: 5,\r\n  })\r\n\r\nexport const NOBLE_OUTFIT = () =>\r\n  createLightArmor('Noble Outfit', 'rare', 250, {\r\n    armor: 8,\r\n    resistance: 8,\r\n    dexterity: -5,\r\n    charisma: 5,\r\n    luck: 5,\r\n  })\r\n\r\nexport const NOBLE_SHOES = () =>\r\n  createFootwear('Noble Shoes', 'uncommon', 100, {\r\n    armor: 3,\r\n    resistance: 4,\r\n    dexterity: -4,\r\n    charisma: 4,\r\n    luck: 4,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const ASSASSIN_HOOD = () =>\r\n  createHat('Assassin Hood', 'uncommon', 120, {\r\n    resistance: 5,\r\n    evasion: 5,\r\n    dexterity: 3,\r\n  })\r\n\r\nexport const ASSASSIN_CLOAK = () =>\r\n  createLightArmor('Assassin Cloak', 'rare', 200, {\r\n    armor: 9,\r\n    resistance: 9,\r\n    evasion: 10,\r\n    dexterity: 7,\r\n    charisma: -5,\r\n  })\r\n\r\nexport const ASSASSIN_BOOTS = () =>\r\n  createFootwear('Rogue Boots', 'uncommon', 120, {\r\n    armor: 5,\r\n    evasion: 5,\r\n    dexterity: 5,\r\n    agility: 5,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const OLD_KNIGHT_HELMET = () =>\r\n  createHelmet('Old Knight Helmet', 'uncommon', 100, {\r\n    armor: 8,\r\n    resistance: 2,\r\n    strength: 5,\r\n    intelligence: -5,\r\n  })\r\n\r\nexport const OLD_KNIGHT_ARMOR = () =>\r\n  createHeavyArmor(\r\n    'Old Knight Armor',\r\n    'rare',\r\n    250,\r\n    {\r\n      armor: 13,\r\n      resistance: 3,\r\n      strength: 5,\r\n      intelligence: -5,\r\n    },\r\n    [],\r\n  )\r\n\r\nexport const OLD_KNIGHT_BOOTS = () =>\r\n  createFootwear('Old Knight Boots', 'uncommon', 100, {\r\n    armor: 7,\r\n    evasion: 4,\r\n    vigor: 6,\r\n    strength: 5,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const REAPER_HOOD = () =>\r\n  createHat(\r\n    'Reaper Hood',\r\n    'uncommon',\r\n    150,\r\n    {\r\n      armor: 1,\r\n      resistance: 1,\r\n      evasion: 5,\r\n      criticalChance: 5,\r\n      goldModifier: 5,\r\n    },\r\n    [],\r\n    ['stunned'],\r\n  )\r\n\r\nexport const REAPER_ROBES = () =>\r\n  createLightArmor('Reaper Robes', 'rare', 300, {\r\n    armor: 4,\r\n    resistance: 4,\r\n    evasion: 4,\r\n    goldModifier: 10,\r\n  })\r\n\r\nexport const REAPER_BOOTS = () =>\r\n  createFootwear('Reaper Boots', 'uncommon', 200, {\r\n    armor: 2,\r\n    resistance: 2,\r\n    evasion: 4,\r\n    attackDamageModifier: 3,\r\n  })\r\n","import { createFootwear, createMagicArmor, createMagicHat } from '..'\r\n\r\nexport const BISHOP_MITRE = () =>\r\n  createMagicHat('Bishop Mitre', 'rare', 100, {\r\n    resistance: 10,\r\n    maxInspirationOffset: 1,\r\n    intelligence: 5,\r\n  })\r\n\r\nexport const BISHOP_ROBES = () =>\r\n  createMagicArmor(\r\n    'Bishop Robes',\r\n    'rare',\r\n    200,\r\n    {\r\n      armor: 4,\r\n      resistance: 15,\r\n      maxInspirationOffset: 1,\r\n      strength: -7,\r\n      intelligence: 5,\r\n    },\r\n    [],\r\n    [\r\n      'cursed-agility',\r\n      'cursed-charisma',\r\n      'cursed-dexterity',\r\n      'cursed-intelligence',\r\n      'cursed-luck',\r\n      'cursed-strength',\r\n      'cursed-vigor',\r\n    ],\r\n  )\r\n\r\nexport const BISHOP_SHOES = () =>\r\n  createFootwear('Bishop Shoes', 'rare', 120, {\r\n    armor: 4,\r\n    resistance: 6,\r\n    strength: -7,\r\n    intelligence: 4,\r\n  })\r\n","import { createSkill } from '.'\r\n\r\nexport const SMASH = createSkill('Smash', 3, 0)\r\nexport const WITHERING_SMASH = createSkill('Smash', 2, 0)\r\nexport const GLASS_SMASH = createSkill('Smash', 1, 0)\r\nexport const RIPPLE = createSkill('Ripple', 4, -10, {\r\n  perfectSplash: true,\r\n})\r\nexport const EARTHQUAKE = createSkill('Earthquake', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const CRUSH = createSkill('Crush', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const STAB = createSkill('Stab', 4, 0, {\r\n  perfectPierce: true,\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  CRUSH,\r\n  EARTHQUAKE,\r\n  GLASS_SMASH,\r\n  RIPPLE,\r\n  SMASH,\r\n  WITHERING_SMASH,\r\n  STUN,\r\n} from '../../../Skill/skills/blunt'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'hammer'\r\nexport const RUSTED_HAMMER = () =>\r\n  createWeapon(type, 'rusted', [SMASH, RIPPLE], {})\r\nexport const TOMB_HAMMER = () =>\r\n  createWeapon(type, 'tomb', [SMASH, EARTHQUAKE], {})\r\nexport const BURRIED_HAMMER = () =>\r\n  createWeapon(type, 'buried', [SMASH, CRUSH], {})\r\nexport const WITHERING_HAMMER = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_SMASH], {})\r\nexport const GLASS_HAMMER = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_SMASH], {})\r\n\r\nexport const IRON_HAMMER = () => createWeapon(type, 'iron', [SMASH, STUN], {})\r\nexport const STEEL_HAMMER = () =>\r\n  createWeapon(type, 'steel', [SMASH, EARTHQUAKE, RIPPLE], {})\r\nexport const STAINLESS_HAMMER = () =>\r\n  createWeapon(type, 'stainless', [SMASH, CRUSH, RIPPLE], {})\r\n\r\nexport const ANCIENT_HAMMER = () =>\r\n  createWeapon(type, 'ancient', [SMASH, STUN], {})\r\nexport const CRYSTAL_HAMMER = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_SMASH], {})\r\nexport const ELEMENTAL_HAMMER = () =>\r\n  createWeapon(type, 'elemental', [SMASH], {})\r\nexport const CURSED_HAMMER = () => createWeapon(type, 'cursed', [SMASH], {})\r\n\r\nexport const SHARP_HAMMER = () =>\r\n  createWeapon(type, 'sharp', [SMASH, STUN, CRUSH], {})\r\nexport const HARDENED_HAMMER = () =>\r\n  createWeapon(type, 'hardened', [SMASH, CRUSH, EARTHQUAKE, RIPPLE], {})\r\nexport const ENGRAVED_HAMMER = () =>\r\n  createWeapon(type, 'engraved', [SMASH, CRUSH, EARTHQUAKE, RIPPLE], {})\r\nexport const ETHEREAL_HAMMER = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_SMASH], {})\r\n\r\nexport const EXQUISITE_HAMMER = () =>\r\n  createWeapon(type, 'exquisite', [SMASH], {})\r\nexport const DIVINE_HAMMER = () => createWeapon(type, 'divine', [SMASH], {})\r\nexport const ARCANE_HAMMER = () => createWeapon(type, 'arcane', [SMASH], {})\r\nexport const CELESTIAL_HAMMER = () =>\r\n  createBreakableWeapon(type, 'celestial', [SMASH], {})\r\n\r\nexport const HAMMERS: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [\r\n    RUSTED_HAMMER,\r\n    TOMB_HAMMER,\r\n    BURRIED_HAMMER,\r\n    WITHERING_HAMMER,\r\n    GLASS_HAMMER,\r\n  ],\r\n  2: [IRON_HAMMER, STEEL_HAMMER, STAINLESS_HAMMER],\r\n  3: [ANCIENT_HAMMER, CRYSTAL_HAMMER, ELEMENTAL_HAMMER, CURSED_HAMMER],\r\n  4: [SHARP_HAMMER, HARDENED_HAMMER, ENGRAVED_HAMMER, ETHEREAL_HAMMER],\r\n  5: [EXQUISITE_HAMMER, DIVINE_HAMMER, ARCANE_HAMMER, CELESTIAL_HAMMER],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const STRIKE = createSkill('Strike', 4, 0)\r\nexport const WITHERING_STRIKE = createSkill('Strike', 2, 0)\r\nexport const GLASS_STRIKE = createSkill('Strike', 1, 0)\r\nexport const SWING = createSkill('Swing', 5, 0)\r\nexport const FLURRY = createSkill('Flurry', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const LUNGE = createSkill('Lunge', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const STAB = createSkill('Stab', 2, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  GLASS_STRIKE,\r\n  LUNGE,\r\n  SLASH,\r\n  STAB,\r\n  STRIKE,\r\n  SWING,\r\n  WITHERING_STRIKE,\r\n} from '../../../Skill/skills/dagger'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'dagger'\r\nexport const RUSTED_DAGGER = () =>\r\n  createWeapon(type, 'rusted', [STRIKE, SWING], {})\r\nexport const TOMB_DAGGER = () => createWeapon(type, 'tomb', [SWING, LUNGE], {})\r\nexport const BURRIED_DAGGER = () =>\r\n  createWeapon(type, 'buried', [STRIKE, STAB], {})\r\nexport const WITHERING_DAGGER = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_STRIKE], {})\r\nexport const GLASS_DAGGER = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_STRIKE], {})\r\n\r\nexport const IRON_DAGGER = () =>\r\n  createWeapon(type, 'iron', [STRIKE, LUNGE, STAB], {})\r\nexport const STEEL_DAGGER = () =>\r\n  createWeapon(type, 'steel', [STRIKE, LUNGE, SLASH], {})\r\nexport const STAINLESS_DAGGER = () =>\r\n  createWeapon(type, 'stainless', [STRIKE, LUNGE, SLASH], {})\r\n\r\nexport const ANCIENT_DAGGER = () =>\r\n  createWeapon(type, 'ancient', [STRIKE, LUNGE, STAB], {})\r\nexport const CRYSTAL_DAGGER = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_STRIKE], {})\r\nexport const ELEMENTAL_DAGGER = () =>\r\n  createWeapon(type, 'elemental', [STRIKE, LUNGE, STAB], {})\r\nexport const CURSED_DAGGER = () =>\r\n  createWeapon(type, 'cursed', [STRIKE, LUNGE, SLASH], {})\r\n\r\nexport const SHARP_DAGGER = () =>\r\n  createWeapon(type, 'sharp', [STRIKE, LUNGE, STAB], {})\r\nexport const HARDENED_DAGGER = () =>\r\n  createWeapon(type, 'hardened', [STRIKE, LUNGE, SLASH], {})\r\nexport const ENGRAVED_DAGGER = () =>\r\n  createWeapon(type, 'engraved', [STRIKE, LUNGE, STAB], {})\r\nexport const ETHEREAL_DAGGER = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_STRIKE], {})\r\n\r\nexport const EXQUISITE_DAGGER = () =>\r\n  createWeapon(type, 'exquisite', [STRIKE, LUNGE, SLASH], {})\r\nexport const DIVINE_DAGGER = () =>\r\n  createWeapon(type, 'divine', [STRIKE, LUNGE, STAB], {})\r\nexport const ARCANE_DAGGER = () =>\r\n  createWeapon(type, 'arcane', [STRIKE, LUNGE, SLASH], {})\r\nexport const CELESTIAL_DAGGER = () =>\r\n  createBreakableWeapon(type, 'celestial', [STRIKE, LUNGE, STAB], {})\r\n\r\nexport const DAGGERS: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [\r\n    RUSTED_DAGGER,\r\n    TOMB_DAGGER,\r\n    BURRIED_DAGGER,\r\n    WITHERING_DAGGER,\r\n    GLASS_DAGGER,\r\n  ],\r\n  2: [IRON_DAGGER, STEEL_DAGGER, STAINLESS_DAGGER],\r\n  3: [ANCIENT_DAGGER, CRYSTAL_DAGGER, ELEMENTAL_DAGGER, CURSED_DAGGER],\r\n  4: [SHARP_DAGGER, HARDENED_DAGGER, ENGRAVED_DAGGER, ETHEREAL_DAGGER],\r\n  5: [EXQUISITE_DAGGER, DIVINE_DAGGER, ARCANE_DAGGER, CELESTIAL_DAGGER],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const STRIKE = createSkill('Strike', 3, 0)\r\nexport const WITHERING_STRIKE = createSkill('Strike', 2, 0)\r\nexport const GLASS_STRIKE = createSkill('Strike', 1, 0)\r\nexport const SWING = createSkill('Swing', 4, 0)\r\nexport const WIDE_SWING = createSkill('Wide Swing', 4, -5, {\r\n  damageModifier: 0.8,\r\n  splashDamageModifier: 0.8,\r\n  perfectSplash: true,\r\n})\r\nexport const FLURRY = createSkill('Swipe', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const LUNGE = createSkill('Lunge', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const SLICE = createSkill('Stab', 2, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  FLURRY,\r\n  STRIKE,\r\n  LUNGE,\r\n  WIDE_SWING,\r\n  GLASS_STRIKE,\r\n  WITHERING_STRIKE,\r\n  SLASH,\r\n  SLICE,\r\n  STUN,\r\n  SWING,\r\n} from '../../../Skill/skills/greatsword'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'greatsword'\r\nexport const RUSTED_GREATSWORD = () =>\r\n  createWeapon(type, 'rusted', [STRIKE], {})\r\nexport const TOMB_GREATSWORD = () =>\r\n  createWeapon(type, 'tomb', [SWING, FLURRY], {})\r\nexport const BURRIED_GREATSWORD = () =>\r\n  createWeapon(type, 'buried', [STRIKE, FLURRY, SLICE], {})\r\nexport const WITHERING_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_STRIKE], {})\r\nexport const GLASS_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_STRIKE], {})\r\n\r\nexport const IRON_GREATSWORD = () =>\r\n  createWeapon(type, 'iron', [STRIKE, STUN], {})\r\nexport const STEEL_GREATSWORD = () =>\r\n  createWeapon(type, 'steel', [STRIKE, SLICE, LUNGE], {})\r\nexport const STAINLESS_GREATSWORD = () =>\r\n  createWeapon(type, 'stainless', [SLICE, LUNGE, SLASH], {})\r\n\r\nexport const ANCIENT_GREATSWORD = () =>\r\n  createWeapon(type, 'ancient', [SWING, LUNGE, WIDE_SWING], {})\r\nexport const CRYSTAL_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_STRIKE], {})\r\nexport const ELEMENTAL_GREATSWORD = () =>\r\n  createWeapon(type, 'elemental', [STRIKE], {})\r\nexport const CURSED_GREATSWORD = () =>\r\n  createWeapon(type, 'cursed', [STRIKE], {})\r\n\r\nexport const SHARP_GREATSWORD = () =>\r\n  createWeapon(type, 'sharp', [SLICE, SLASH, WIDE_SWING], {})\r\nexport const HARDENED_GREATSWORD = () =>\r\n  createWeapon(type, 'hardened', [SLICE, SLICE, STUN], {})\r\nexport const ENGRAVED_GREATSWORD = () =>\r\n  createWeapon(type, 'engraved', [SLICE, SLASH, FLURRY], {})\r\nexport const ETHEREAL_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_STRIKE], {})\r\n\r\nexport const EXQUISITE_GREATSWORD = () =>\r\n  createWeapon(type, 'exquisite', [SLICE, SLASH, LUNGE], {})\r\nexport const DIVINE_GREATSWORD = () =>\r\n  createWeapon(type, 'divine', [SLICE, SLASH, LUNGE], {})\r\nexport const ARCANE_GREATSWORD = () =>\r\n  createWeapon(type, 'arcane', [STRIKE], {})\r\nexport const CELESTIAL_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'celestial', [GLASS_STRIKE], {})\r\n\r\nexport const GREATSWORDS: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [\r\n    RUSTED_GREATSWORD,\r\n    TOMB_GREATSWORD,\r\n    BURRIED_GREATSWORD,\r\n    WITHERING_GREATSWORD,\r\n    GLASS_GREATSWORD,\r\n  ],\r\n  2: [IRON_GREATSWORD, STEEL_GREATSWORD, STAINLESS_GREATSWORD],\r\n  3: [\r\n    ANCIENT_GREATSWORD,\r\n    CRYSTAL_GREATSWORD,\r\n    ELEMENTAL_GREATSWORD,\r\n    CURSED_GREATSWORD,\r\n  ],\r\n  4: [\r\n    SHARP_GREATSWORD,\r\n    HARDENED_GREATSWORD,\r\n    ENGRAVED_GREATSWORD,\r\n    ETHEREAL_GREATSWORD,\r\n  ],\r\n  5: [\r\n    EXQUISITE_GREATSWORD,\r\n    DIVINE_GREATSWORD,\r\n    ARCANE_GREATSWORD,\r\n    CELESTIAL_GREATSWORD,\r\n  ],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const FIRE = createSkill('Fire', 1, 0, {\r\n  perfectSplash: true,\r\n})\r\nexport const SNIPE = createSkill('Snipe', 2, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const FAN_FIRE = createSkill('Fan Fire', 1, 0, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport { FAN_FIRE, FIRE, SNIPE } from '../../../Skill/skills/pistol'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'pistol'\r\nexport const PATRICIANS_PISTOL = () => ({\r\n  ...createWeapon(type, 'starting', [], {}),\r\n  name: `Patrician Pistol`,\r\n})\r\nexport const RUSTED_PISTOL = () =>\r\n  createWeapon(type, 'rusted', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const TOMB_PISTOL = () =>\r\n  createWeapon(type, 'tomb', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const BURRIED_PISTOL = () =>\r\n  createWeapon(type, 'buried', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const WITHERING_PISTOL = () =>\r\n  createBreakableWeapon(type, 'withering', [FIRE], {})\r\nexport const GLASS_PISTOL = () =>\r\n  createBreakableWeapon(type, 'glass', [FIRE], {})\r\n\r\nexport const IRON_PISTOL = () =>\r\n  createWeapon(type, 'iron', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const STEEL_PISTOL = () =>\r\n  createWeapon(type, 'steel', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const STAINLESS_PISTOL = () =>\r\n  createWeapon(type, 'stainless', [FIRE, SNIPE, FAN_FIRE], {})\r\n\r\nexport const ANCIENT_PISTOL = () =>\r\n  createWeapon(type, 'ancient', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const CRYSTAL_PISTOL = () =>\r\n  createBreakableWeapon(type, 'crystal', [FIRE], {})\r\nexport const ELEMENTAL_PISTOL = () =>\r\n  createWeapon(type, 'elemental', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const CURSED_PISTOL = () =>\r\n  createWeapon(type, 'cursed', [FIRE, SNIPE, FAN_FIRE], {})\r\n\r\nexport const SHARP_PISTOL = () =>\r\n  createWeapon(type, 'sharp', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const HARDENED_PISTOL = () =>\r\n  createWeapon(type, 'hardened', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const ENGRAVED_PISTOL = () =>\r\n  createWeapon(type, 'engraved', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const ETHEREAL_PISTOL = () =>\r\n  createBreakableWeapon(type, 'ethereal', [FIRE], {})\r\n\r\nexport const EXQUISITE_PISTOL = () =>\r\n  createWeapon(type, 'exquisite', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const DIVINE_PISTOL = () =>\r\n  createWeapon(type, 'divine', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const ARCANE_PISTOL = () =>\r\n  createWeapon(type, 'arcane', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const CELESTIAL_PISTOL = () =>\r\n  createBreakableWeapon(type, 'celestial', [FIRE], {})\r\n\r\nexport const PISTOLS: tWeaponsByLevel = {\r\n  0: [PATRICIANS_PISTOL],\r\n  1: [\r\n    RUSTED_PISTOL,\r\n    TOMB_PISTOL,\r\n    BURRIED_PISTOL,\r\n    WITHERING_PISTOL,\r\n    GLASS_PISTOL,\r\n  ],\r\n  2: [IRON_PISTOL, STEEL_PISTOL, STAINLESS_PISTOL],\r\n  3: [ANCIENT_PISTOL, CRYSTAL_PISTOL, ELEMENTAL_PISTOL, CURSED_PISTOL],\r\n  4: [SHARP_PISTOL, HARDENED_PISTOL, ENGRAVED_PISTOL, ETHEREAL_PISTOL],\r\n  5: [EXQUISITE_PISTOL, DIVINE_PISTOL, ARCANE_PISTOL, CELESTIAL_PISTOL],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const STRIKE = createSkill('Strike', 2, 0)\r\nexport const WITHERING_STRIKE = createSkill('Strike', 2, 0)\r\nexport const GLASS_STRIKE = createSkill('Strike', 1, 0)\r\nexport const SWING = createSkill('Swing', 4, 0)\r\nexport const FLURRY = createSkill('Swipe', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const LUNGE = createSkill('Lunge', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const STAB = createSkill('Stab', 2, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  LUNGE,\r\n  FLURRY,\r\n  GLASS_STRIKE,\r\n  SLASH,\r\n  STAB,\r\n  SWING,\r\n  STRIKE,\r\n  WITHERING_STRIKE,\r\n} from '../../../Skill/skills/sword'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'sword'\r\nexport const RUSTED_SWORD = () => createWeapon(type, 'rusted', [STRIKE], {})\r\nexport const TOMB_SWORD = () => createWeapon(type, 'tomb', [SWING, FLURRY], {})\r\nexport const BURRIED_SWORD = () =>\r\n  createWeapon(type, 'buried', [SWING, STAB], {})\r\nexport const WITHERING_SWORD = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_STRIKE], {})\r\nexport const GLASS_SWORD = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_STRIKE], {})\r\n\r\nexport const IRON_SWORD = () => createWeapon(type, 'iron', [STRIKE, LUNGE], {})\r\nexport const STEEL_SWORD = () =>\r\n  createWeapon(type, 'steel', [STRIKE, SLASH], {})\r\nexport const STAINLESS_SWORD = () =>\r\n  createWeapon(type, 'stainless', [STRIKE, STAB], {})\r\n\r\nexport const ANCIENT_SWORD = () =>\r\n  createWeapon(type, 'ancient', [STRIKE, LUNGE], {})\r\nexport const CRYSTAL_SWORD = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_STRIKE], {})\r\nexport const ELEMENTAL_SWORD = () =>\r\n  createWeapon(type, 'elemental', [STRIKE], {})\r\nexport const CURSED_SWORD = () => createWeapon(type, 'cursed', [STRIKE], {})\r\n\r\nexport const SHARP_SWORD = () =>\r\n  createWeapon(type, 'sharp', [STRIKE, STAB, SLASH], {})\r\nexport const HARDENED_SWORD = () =>\r\n  createWeapon(type, 'hardened', [STRIKE, FLURRY, LUNGE], {})\r\nexport const ENGRAVED_SWORD = () =>\r\n  createWeapon(type, 'engraved', [STRIKE, FLURRY, SLASH, LUNGE], {})\r\nexport const ETHEREAL_SWORD = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_STRIKE], {})\r\n\r\nexport const EXQUISITE_SWORD = () =>\r\n  createWeapon(type, 'exquisite', [STRIKE, STAB, SLASH], {})\r\nexport const DIVINE_SWORD = () =>\r\n  createWeapon(type, 'divine', [STRIKE, STAB, SLASH], {})\r\nexport const ARCANE_SWORD = () => createWeapon(type, 'arcane', [STRIKE], {})\r\nexport const CELESTIAL_SWORD = () =>\r\n  createBreakableWeapon(type, 'celestial', [GLASS_STRIKE], {})\r\n\r\nexport const SWORDS: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [RUSTED_SWORD, TOMB_SWORD, BURRIED_SWORD, WITHERING_SWORD, GLASS_SWORD],\r\n  2: [IRON_SWORD, STEEL_SWORD, STAINLESS_SWORD],\r\n  3: [ANCIENT_SWORD, CRYSTAL_SWORD, ELEMENTAL_SWORD, CURSED_SWORD],\r\n  4: [SHARP_SWORD, HARDENED_SWORD, ENGRAVED_SWORD, ETHEREAL_SWORD],\r\n  5: [EXQUISITE_SWORD, DIVINE_SWORD, ARCANE_SWORD, CELESTIAL_SWORD],\r\n}\r\n","import { tWeapon } from '../../type'\r\nimport { tWeaponsByLevel } from '../type'\r\nimport { AXES } from './axe'\r\nimport { HAMMERS } from './hammer'\r\nimport { BOWS } from './bow'\r\nimport { CATALYSTS } from './catalyst'\r\nimport { CHIMES } from './chime'\r\nimport { DAGGERS } from './dagger'\r\nimport { GREATSWORDS } from './greatsword'\r\nimport { PISTOLS } from './pistol'\r\nimport { SCYTHES } from './scythe'\r\nimport { SWORDS } from './sword'\r\n\r\nexport const WEAPONS_BY_LEVEL: tWeaponsByLevel = {\r\n  0: [\r\n    ...AXES[0],\r\n    ...HAMMERS[0],\r\n    ...BOWS[0],\r\n    ...CATALYSTS[0],\r\n    ...CHIMES[0],\r\n    ...DAGGERS[0],\r\n    ...GREATSWORDS[0],\r\n    ...PISTOLS[0],\r\n    ...SCYTHES[0],\r\n    ...SWORDS[0],\r\n  ],\r\n  1: [\r\n    ...AXES[1],\r\n    ...HAMMERS[1],\r\n    ...BOWS[1],\r\n    ...CATALYSTS[1],\r\n    ...CHIMES[1],\r\n    ...DAGGERS[1],\r\n    ...GREATSWORDS[1],\r\n    ...PISTOLS[1],\r\n    ...SCYTHES[1],\r\n    ...SWORDS[1],\r\n  ],\r\n  2: [\r\n    ...AXES[2],\r\n    ...HAMMERS[2],\r\n    ...BOWS[2],\r\n    ...CATALYSTS[2],\r\n    ...CHIMES[2],\r\n    ...DAGGERS[2],\r\n    ...GREATSWORDS[2],\r\n    ...PISTOLS[2],\r\n    ...SCYTHES[2],\r\n    ...SWORDS[2],\r\n  ],\r\n  3: [\r\n    ...AXES[3],\r\n    ...HAMMERS[3],\r\n    ...BOWS[3],\r\n    ...CATALYSTS[3],\r\n    ...CHIMES[3],\r\n    ...DAGGERS[3],\r\n    ...GREATSWORDS[3],\r\n    ...PISTOLS[3],\r\n    ...SCYTHES[3],\r\n    ...SWORDS[3],\r\n  ],\r\n  4: [\r\n    ...AXES[4],\r\n    ...HAMMERS[4],\r\n    ...BOWS[4],\r\n    ...CATALYSTS[4],\r\n    ...CHIMES[4],\r\n    ...DAGGERS[4],\r\n    ...GREATSWORDS[4],\r\n    ...PISTOLS[4],\r\n    ...SCYTHES[4],\r\n    ...SWORDS[4],\r\n  ],\r\n  5: [\r\n    ...AXES[5],\r\n    ...HAMMERS[5],\r\n    ...BOWS[5],\r\n    ...CATALYSTS[5],\r\n    ...CHIMES[5],\r\n    ...DAGGERS[5],\r\n    ...GREATSWORDS[5],\r\n    ...PISTOLS[5],\r\n    ...SCYTHES[5],\r\n    ...SWORDS[5],\r\n  ],\r\n}\r\n\r\nexport const ALL_WEAPONS = Object.keys(WEAPONS_BY_LEVEL).reduce(\r\n  (allWeapons, level) => {\r\n    return [...allWeapons, ...WEAPONS_BY_LEVEL[parseInt(level, 10)]]\r\n  },\r\n  [] as (() => tWeapon)[],\r\n)\r\n","import { getRandom } from '../../util'\r\nimport { ARMOR_BY_LEVEL } from '../Armor/builders/sets'\r\nimport { tArmor } from '../Armor/type'\r\nimport { WEAPONS_BY_LEVEL } from '../Weapon/builders/objects'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { tItemType } from './type'\r\n\r\nexport const getRandomItem = (\r\n  level: number,\r\n  min: number = 0,\r\n): tWeapon | tArmor => {\r\n  const itemType: tItemType = getRandom(['weapon', 'armor'])\r\n  if (itemType === 'weapon') {\r\n    level = level === 0 ? 1 : level\r\n    let items = Array(level + 1)\r\n      .fill(null)\r\n      .reduce((result, _, index) => {\r\n        if (index === 0) return result\r\n        if (index < min) return result\r\n        return [...result, ...WEAPONS_BY_LEVEL[index]]\r\n      }, [] as (() => tWeapon)[]) as (() => tWeapon)[]\r\n\r\n    const random = getRandom(items)\r\n    return random()\r\n  } else {\r\n    let items = Array(level + 1)\r\n      .fill(null)\r\n      .reduce((result, _, index) => {\r\n        if (index < min) return result\r\n        return [...result, ...(ARMOR_BY_LEVEL[index] || [])]\r\n      }, [] as (() => tArmor)[]) as (() => tArmor)[]\r\n    const random = getRandom(items)\r\n    if (!random) return getRandomItem(level, min)\r\n    return random()\r\n  }\r\n}\r\n","import Wolf from '../../../icons/svg/lorc/wolf-head.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_WOLF = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Wolf',\r\n    Wolf,\r\n    1,\r\n    9,\r\n    makeEnemyWeapon('dexterity', 9, 'melee', 'physical', [\r\n      createSkill('Bite', 3, 0),\r\n      createSkill('Chomp', 4, 0, { perfectPierce: true }),\r\n    ]),\r\n    {\r\n      dexterity: 52,\r\n      agility: getRandom([55, 56, 57, 58, 59, 60, 61, 62, 63, 64]),\r\n      evasion: 10,\r\n    },\r\n    ['beast'],\r\n    [\r\n      makeEnemyReward(4, 3),\r\n      makeEnemyReward(4, 3),\r\n      makeEnemyReward(4, 3),\r\n      makeEnemyReward(4, 3),\r\n      makeEnemyReward(4, 3),\r\n      makeEnemyReward(4, 3, [getRandomItem(0)]),\r\n      makeEnemyReward(16, 6, [getRandomItem(0)]),\r\n    ],\r\n  )\r\n}\r\n","import Raven from '../../../icons/svg/lorc/raven.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_RAVEN = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Raven',\r\n    Raven,\r\n    1,\r\n    10,\r\n    makeEnemyWeapon('dexterity', 6, 'melee', 'physical', [\r\n      createSkill('Peck', 2, 0),\r\n      createSkill('Caw', 2, -5, {\r\n        perfectStatus: ['resistance-down', 'armor-down'],\r\n      }),\r\n    ]),\r\n    {\r\n      dexterity: 56,\r\n      agility: getRandom([74, 75, 76, 77, 78]),\r\n      evasion: 10,\r\n    },\r\n    ['flying'],\r\n    [\r\n      makeEnemyReward(0, 5),\r\n      makeEnemyReward(3, 7),\r\n      makeEnemyReward(3, 7),\r\n      makeEnemyReward(3, 7),\r\n      makeEnemyReward(0, 7, [getRandomItem(0)]),\r\n      makeEnemyReward(0, 7, [getRandomItem(1)]),\r\n    ],\r\n    [],\r\n    [\r\n      {\r\n        duration: -1,\r\n        type: 'evasive',\r\n        stats: ZERO_STATS,\r\n        stack: 0,\r\n        immunities: [],\r\n      },\r\n    ],\r\n  )\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const HEAL = createSkill('Heal', 0, 0, {\r\n  damageModifier: 0,\r\n  targetType: 'self',\r\n  damage: false,\r\n  healing: true,\r\n})\r\n\r\nexport const REMOVE_CURSES = createSkill('Remove Curses', 0, 0, {\r\n  targetType: 'self',\r\n  damage: false,\r\n  damageModifier: 0,\r\n  perfectStatus: ['blessed'],\r\n})\r\n\r\nexport const POISON_KNIFE = createSkill('Poison Knife', 0, 0, {\r\n  damage: false,\r\n  damageModifier: 0,\r\n  perfectStatus: ['poisoned'],\r\n})\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { HEAL } from '../../Skill/skills/consumables'\r\n\r\nconst cid = v4()\r\nexport const GODSBEARD = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Mellow Grass',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...HEAL,\r\n      consumableId: id,\r\n    },\r\n    goldValue: 50,\r\n  }\r\n}\r\n","import Bee from '../../../icons/svg/lorc/snake.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandom } from '../../../util'\r\nimport { GODSBEARD } from '../../Consumable/objects/godsbeard'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_SNAKE = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Snake',\r\n    Bee,\r\n    1,\r\n    6,\r\n    makeEnemyWeapon('dexterity', 12, 'melee', 'physical', [\r\n      createSkill('Bite', 3, 0),\r\n      createSkill('Venomous Bite', 3, -10, { perfectStatus: ['poisoned'] }),\r\n    ]),\r\n    {\r\n      dexterity: 52,\r\n      agility: getRandom([78, 79, 80, 81, 82, 83]),\r\n      evasion: 17,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(1, 4),\r\n      makeEnemyReward(4, 8),\r\n      makeEnemyReward(4, 8),\r\n      makeEnemyReward(4, 8),\r\n      makeEnemyReward(8, 8, [getRandomItem(0)]),\r\n      makeEnemyReward(8, 10, [GODSBEARD()]),\r\n    ],\r\n  )\r\n}\r\n","import Witch from '../../../icons/svg/lorc/witch-flight.svg'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { tStatusType } from '../../Status/type'\r\nimport { tCharacter } from '../type'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\n\r\nexport const FOREST_WITCH = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Witch',\r\n    Witch,\r\n    1,\r\n    9,\r\n    makeEnemyWeapon('intelligence', 9, 'ranged', 'magic', [\r\n      createSkill('Curse', 2, -10, {\r\n        damage: false,\r\n        damageModifier: 0,\r\n        perfectStatus: [\r\n          getRandom<tStatusType>([\r\n            'cursed-agility',\r\n            'cursed-charisma',\r\n            'cursed-dexterity',\r\n            'cursed-intelligence',\r\n            'cursed-luck',\r\n            'cursed-strength',\r\n          ]),\r\n        ],\r\n      }),\r\n      createSkill('Blast', 3, 0),\r\n    ]),\r\n    {\r\n      intelligence: 84,\r\n      agility: getRandom([60, 62, 64, 66, 68]),\r\n      resistance: 2,\r\n      evasion: 10,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(5, 15),\r\n      makeEnemyReward(5, 15),\r\n      makeEnemyReward(20, 15),\r\n      makeEnemyReward(20, 15),\r\n      makeEnemyReward(20, 15, [getRandomItem(1)]),\r\n    ],\r\n  )\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Troll from '../../../icons/svg/skoll/troll.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_TROLL = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Troll',\r\n    Troll,\r\n    2,\r\n    24,\r\n    makeEnemyWeapon('strength', 16, 'melee', 'physical', [\r\n      createSkill('Smash', 4, 0),\r\n      createSkill('Quake', 5, -15, {\r\n        damageModifier: 0.5,\r\n        targetType: 'group',\r\n        perfectStatus: ['stunned'],\r\n      }),\r\n    ]),\r\n    {\r\n      strength: 76,\r\n      agility: getRandom([59, 60, 61, 62, 63, 64]),\r\n      armor: 3,\r\n      resistance: 0,\r\n      evasion: 10,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(5, 15),\r\n      makeEnemyReward(5, 15),\r\n      makeEnemyReward(8, 15),\r\n      makeEnemyReward(20, 15),\r\n      makeEnemyReward(20, 15, [getRandomItem(1)]),\r\n    ],\r\n  )\r\n}\r\n","import BeastMan from '../../../icons/svg/lorc/werewolf.svg'\r\nimport { tCharacter } from '../type'\r\nimport { BASE_C_STATS } from '../../Stats/constants'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_BEAST = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Beast',\r\n    BeastMan,\r\n    1,\r\n    12,\r\n    makeEnemyWeapon('strength', 10, 'melee', 'physical', [\r\n      createSkill('Strike', 2, 0),\r\n      createSkill('Impale', 4, -5, { perfectStatus: ['bleeding'] }),\r\n    ]),\r\n    {\r\n      ...BASE_C_STATS,\r\n      strength: 52,\r\n      agility: getRandom([55, 56, 57, 58, 59, 60, 61]),\r\n      armor: 3,\r\n      evasion: 10,\r\n    },\r\n    ['beast'],\r\n    [\r\n      makeEnemyReward(6, 5),\r\n      makeEnemyReward(6, 6),\r\n      makeEnemyReward(7, 7),\r\n      makeEnemyReward(10, 10),\r\n      makeEnemyReward(10, 10),\r\n      makeEnemyReward(10, 10, [getRandomItem(0)]),\r\n      makeEnemyReward(10, 10, [getRandomItem(1)]),\r\n    ],\r\n  )\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Boar from '../../../icons/svg/lorc/boar-tusks.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_BOAR = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Boar',\r\n    Boar,\r\n    2,\r\n    27,\r\n    makeEnemyWeapon('strength', 16, 'melee', 'physical', [\r\n      createSkill('Ram', 4, 0),\r\n      createSkill('Impale', 4, -15, {\r\n        perfectPierce: true,\r\n      }),\r\n    ]),\r\n    {\r\n      strength: 76,\r\n      agility: getRandom([59, 60, 61, 62, 63, 64]),\r\n      armor: 0,\r\n      resistance: 0,\r\n      evasion: 17,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(5, 15),\r\n      makeEnemyReward(5, 15),\r\n      makeEnemyReward(8, 15),\r\n      makeEnemyReward(20, 15),\r\n      makeEnemyReward(20, 15, [getRandomItem(1)]),\r\n    ],\r\n  )\r\n}\r\n","import Cultist from '../../../icons/svg/lorc/cultist.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const CULTIST_BRUTE = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Cultist Brute',\r\n    Cultist,\r\n    4,\r\n    26,\r\n    makeEnemyWeapon('strength', 14, 'melee', 'physical', [\r\n      createSkill('Slice', 3, 0),\r\n      createSkill('Slash', 4, -5, { perfectStatus: ['bleeding'] }),\r\n    ]),\r\n    {\r\n      strength: 72,\r\n      agility: getRandom([75, 76, 77, 78, 79, 80, 81, 82]),\r\n      armor: 4,\r\n      resistance: 2,\r\n      evasion: 13,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(10, 12),\r\n      makeEnemyReward(15, 13),\r\n      makeEnemyReward(15, 13),\r\n      makeEnemyReward(15, 13),\r\n      makeEnemyReward(20, 20),\r\n      makeEnemyReward(25, 20, [getRandomItem(2)]),\r\n    ],\r\n  )\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Cultist from '../../../icons/svg/lorc/cultist.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const CULTIST = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Cultist',\r\n    Cultist,\r\n    2,\r\n    17,\r\n    makeEnemyWeapon('intelligence', 11, 'melee', 'magic', [\r\n      createSkill('Enflame', 4, -10, { perfectStatus: ['burning'] }),\r\n      createSkill('Arcane', 3, 0, { perfectPierce: true }),\r\n    ]),\r\n    {\r\n      intelligence: 75,\r\n      agility: getRandom([68, 69, 70, 71]),\r\n      armor: 1,\r\n      resistance: 4,\r\n      evasion: 15,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(10, 12),\r\n      makeEnemyReward(15, 13),\r\n      makeEnemyReward(15, 13),\r\n      makeEnemyReward(15, 13),\r\n      makeEnemyReward(30, 20),\r\n      makeEnemyReward(30, 20, [getRandomItem(2)]),\r\n    ],\r\n  )\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Cultist from '../../../icons/svg/lorc/cultist.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const CULTIST_SCHOLAR = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Cultist Scholar',\r\n    Cultist,\r\n    2,\r\n    29,\r\n    makeEnemyWeapon('intelligence', 28, 'melee', 'magic', [\r\n      createSkill('Enflame', 4, -10, { perfectStatus: ['burning'] }),\r\n      createSkill('Arcane', 3, 0, { perfectPierce: true }),\r\n    ]),\r\n    {\r\n      intelligence: 80,\r\n      agility: getRandom([68, 69, 70, 71]),\r\n      armor: 3,\r\n      resistance: 8,\r\n      evasion: 17,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(70, 40),\r\n      makeEnemyReward(70, 40),\r\n      makeEnemyReward(70, 40),\r\n      makeEnemyReward(70, 40),\r\n      makeEnemyReward(70, 50),\r\n      makeEnemyReward(90, 50, [getRandomItem(4, 3)]),\r\n    ],\r\n  )\r\n}\r\n","import { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport FireWhisp from '../../../icons/svg/lorc/unfriendly-fire.svg'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const FLAME_WISP = () =>\r\n  makeEnemy(\r\n    'Flame Wisp',\r\n    FireWhisp,\r\n    4,\r\n    19,\r\n    makeEnemyWeapon('intelligence', 30, 'ranged', 'magic', [\r\n      createSkill('Ember', 3, 0),\r\n      createSkill('Engulf', 3, -10, { perfectStatus: ['burning'] }),\r\n      createSkill('Fire Blast', 4, -10, {\r\n        perfectStatus: ['burning'],\r\n        targetType: 'group',\r\n      }),\r\n    ]),\r\n    {\r\n      intelligence: 75,\r\n      agility: getRandom([70, 71, 72, 73, 74, 75]),\r\n      evasion: 20,\r\n      resistance: 7,\r\n      armor: 7,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(80, 40),\r\n      makeEnemyReward(80, 40, [getRandomItem(3, 3)]),\r\n      makeEnemyReward(100, 50, [getRandomItem(4, 3)]),\r\n    ],\r\n    ['burning'],\r\n    [\r\n      {\r\n        duration: -1,\r\n        type: 'evasive',\r\n        stats: ZERO_STATS,\r\n        stack: 0,\r\n        immunities: [],\r\n      },\r\n    ],\r\n  )\r\n","import { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport Banshee from '../../../icons/svg/lorc/haunting.svg'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\n\r\nexport const BANSHEE = () =>\r\n  makeEnemy(\r\n    'Banshee',\r\n    Banshee,\r\n    6,\r\n    32,\r\n    makeEnemyWeapon('intelligence', 32, 'ranged', 'magic', [\r\n      createSkill('Nova', 3, -5, {\r\n        damageModifier: 0.5,\r\n      }),\r\n      createSkill('Swipe', 3, 0, { perfectPierce: true }),\r\n      createSkill('Attack Down', 3, -15, {\r\n        damage: false,\r\n        damageModifier: 0,\r\n        perfectStatus: ['attack-down'],\r\n      }),\r\n    ]),\r\n    {\r\n      intelligence: 78,\r\n      strength: 70,\r\n      agility: getRandom([77, 78, 79, 80, 81, 82]),\r\n      evasion: 30,\r\n      resistance: 8,\r\n      armor: 1,\r\n    },\r\n    ['undead'],\r\n    [\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(80, 40),\r\n      makeEnemyReward(80, 40, [getRandomItem(4, 3)]),\r\n      makeEnemyReward(100, 50, [getRandomItem(4, 4)]),\r\n    ],\r\n    ['burning', 'bleeding', 'poisoned', 'stunned'],\r\n  )\r\n","import { getRandom } from '../../../util'\r\nimport Skull from '../../../icons/svg/lorc/daemon-skull.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const CONSECRATED_GUARD = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Consecrated Guard',\r\n    Skull,\r\n    6,\r\n    48,\r\n    makeEnemyWeapon('strength', 34, 'melee', 'physical', [\r\n      createSkill('Beast Claw', 4, 0, { perfectStatus: ['attack-down'] }),\r\n      createSkill('Beast Bite', 3, -10, { perfectPierce: true }),\r\n    ]),\r\n    {\r\n      strength: 78,\r\n      agility: getRandom([69, 70, 71, 72, 73, 74]),\r\n      armor: 8,\r\n      resistance: 8,\r\n      evasion: 17,\r\n    },\r\n    ['undead'],\r\n    [\r\n      makeEnemyReward(100, 40),\r\n      makeEnemyReward(100, 40),\r\n      makeEnemyReward(180, 40),\r\n      makeEnemyReward(180, 40, [getRandomItem(3, 3)]),\r\n      makeEnemyReward(200, 50, [getRandomItem(4, 3)]),\r\n    ],\r\n  )\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport { tCharacter } from '../../Character/type'\r\n\r\nexport const makeRandomFloorEncounter = (\r\n  characterList: (() => tCharacter)[],\r\n  enemyCount: number,\r\n): tCharacter[] => {\r\n  return Array(enemyCount)\r\n    .fill(null)\r\n    .map((_) => {\r\n      return getRandom(characterList)()\r\n    })\r\n}\r\n\r\nexport interface tFloorEnemyConfig {\r\n  enemy: () => tCharacter\r\n  depths: number[]\r\n}\r\n\r\nexport type tFloorEncounterSizes = Record<number, number>\r\n\r\nexport const buildFloorEnemeis = (\r\n  configs: tFloorEnemyConfig[],\r\n  encounterSizes: tFloorEncounterSizes,\r\n  size: number,\r\n) => {\r\n  return Array(size)\r\n    .fill(null)\r\n    .map((_, depth) => {\r\n      const enemies = configs\r\n        .filter((c) => c.depths.includes(depth))\r\n        .map((c) => c.enemy)\r\n      return makeRandomFloorEncounter(enemies, encounterSizes[depth])\r\n    })\r\n    .reduce((res, current, index) => {\r\n      return {\r\n        ...res,\r\n        [index]: current,\r\n      }\r\n    }, {})\r\n}\r\n","import { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport Spirit from '../../../icons/svg/lorc/spectre.svg'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { getRandom } from '../../../util'\r\nimport { tStatusType } from '../../Status/type'\r\nimport { getRandomItem } from '../../Item/util'\r\n\r\nexport const TOMB_SPIRIT = () =>\r\n  makeEnemy(\r\n    'Tomb Spirit',\r\n    Spirit,\r\n    4,\r\n    26,\r\n    makeEnemyWeapon('intelligence', 18, 'ranged', 'magic', [\r\n      createSkill('Curse', 2, -10, {\r\n        perfectStatus: [\r\n          getRandom<tStatusType>([\r\n            'cursed-agility',\r\n            'cursed-charisma',\r\n            'cursed-dexterity',\r\n            'cursed-intelligence',\r\n            'cursed-luck',\r\n            'cursed-strength',\r\n          ]),\r\n        ],\r\n      }),\r\n      createSkill('Smite', 4, 0),\r\n    ]),\r\n    {\r\n      intelligence: 84,\r\n      agility: getRandom([75, 76, 77, 78, 79, 80]),\r\n      evasion: 23,\r\n      resistance: 6,\r\n    },\r\n    ['undead'],\r\n    [\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(80, 40),\r\n      makeEnemyReward(80, 40, [getRandomItem(2, 2)]),\r\n      makeEnemyReward(100, 50, [getRandomItem(3, 3)]),\r\n    ],\r\n    ['stunned', 'bleeding', 'poisoned'],\r\n  )\r\n","import Beast from '../../../icons/svg/lorc/diablo-skull.svg'\r\nimport { tCharacter } from '../type'\r\nimport {\r\n  makeEnemy,\r\n  makeEnemyReward,\r\n  makeEnemyWeapon,\r\n} from '../enemies/_builder'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { v4 } from 'uuid'\r\n\r\nconst id = v4()\r\nexport const CONSECRATED_BEAST = (): tCharacter => {\r\n  return {\r\n    ...makeEnemy(\r\n      'The Consecrated Beast',\r\n      Beast,\r\n      8,\r\n      112,\r\n      makeEnemyWeapon('strength', 38, 'melee', 'physical', [\r\n        createSkill('Swipe', 4, -5, {\r\n          perfectPierce: true,\r\n        }),\r\n        createSkill('Wide Swipe', 5, 0, {\r\n          damageModifier: 0.75,\r\n          targetType: 'group',\r\n          perfectStatus: ['bleeding'],\r\n        }),\r\n        createSkill('Howl', 4, -15, {\r\n          damageModifier: 0,\r\n          damage: false,\r\n          targetType: 'group',\r\n          perfectStatus: ['stunned'],\r\n        }),\r\n      ]),\r\n      {\r\n        strength: 85,\r\n        agility: 80,\r\n        luck: 50,\r\n        armor: 12,\r\n        resistance: 12,\r\n        evasion: 10,\r\n      },\r\n      ['undead'],\r\n      [\r\n        makeEnemyReward(200, 120, [\r\n          getRandomItem(5, 5),\r\n          getRandomItem(5, 5),\r\n          getRandomItem(5, 5),\r\n        ]),\r\n      ],\r\n      ['stunned', 'poisoned'],\r\n    ),\r\n    id,\r\n  }\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Skull from '../../../icons/svg/lorc/harry-potter-skull.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const TOMB_GUARDIAN = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Tomb Guardian',\r\n    Skull,\r\n    5,\r\n    36,\r\n    makeEnemyWeapon('strength', 28, 'melee', 'physical', [\r\n      createSkill('Smash', 4, 0),\r\n      createSkill('Stun', 3, -5, {\r\n        damage: false,\r\n        damageModifier: 0,\r\n        perfectStatus: ['stunned'],\r\n      }),\r\n      createSkill('Quake', 4, -15, {\r\n        damageModifier: 0.5,\r\n        targetType: 'group',\r\n        perfectStatus: ['stunned'],\r\n      }),\r\n    ]),\r\n    {\r\n      strength: 78,\r\n      agility: getRandom([59, 60, 61, 62, 63, 64]),\r\n      armor: 10,\r\n      resistance: 3,\r\n      evasion: 10,\r\n    },\r\n    ['undead'],\r\n    [\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(80, 40),\r\n      makeEnemyReward(80, 40, [getRandomItem(3, 3)]),\r\n      makeEnemyReward(100, 50, [getRandomItem(4, 3)]),\r\n    ],\r\n  )\r\n}\r\n","import { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport Spider from '../../../icons/svg/delapouite/spider-eye.svg'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\n\r\nexport const TOMB_SPIDER = () =>\r\n  makeEnemy(\r\n    'Tomb Spider',\r\n    Spider,\r\n    4,\r\n    22,\r\n    makeEnemyWeapon('dexterity', 26, 'ranged', 'magic', [\r\n      createSkill('Bite', 3, 0),\r\n      createSkill('Venomous Bite', 3, -10, { perfectStatus: ['poisoned'] }),\r\n      createSkill('Blood Bite', 3, -5, { perfectStatus: ['bleeding'] }),\r\n    ]),\r\n    {\r\n      dexterity: 75,\r\n      agility: getRandom([70, 71, 72, 73, 74, 75]),\r\n      evasion: 20,\r\n      resistance: 5,\r\n      armor: 4,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(80, 40),\r\n      makeEnemyReward(80, 40, [getRandomItem(3, 3)]),\r\n      makeEnemyReward(100, 50, [getRandomItem(4, 3)]),\r\n    ],\r\n    ['poisoned'],\r\n  )\r\n","import { tFloorConfig } from '../type'\r\nimport { FloorConfig1 } from './floor-1'\r\nimport { FloorConfig2 } from './floor-2'\r\nimport { FloorConfig3 } from './floor-3'\r\n\r\nexport const FLOOR_CONFIGS_BY_INDEX = (): Record<number, tFloorConfig> => ({\r\n  0: FloorConfig1(),\r\n  1: FloorConfig2(),\r\n  2: FloorConfig3(),\r\n})\r\n","import { tFloorConfig } from '../type'\r\nimport {\r\n  FOREST_WOLF,\r\n  FOREST_BEAST,\r\n  FOREST_RAVEN,\r\n  FOREST_SNAKE,\r\n  CULTIST,\r\n  FOREST_TROLL,\r\n  CULTIST_BRUTE,\r\n  FOREST_WITCH,\r\n} from '../../Character/enemies'\r\nimport { LICH } from '../../Character/bosses'\r\nimport { WEAPONS_BY_LEVEL } from '../../Weapon/builders/objects'\r\nimport { ARMOR_BY_LEVEL } from '../../Armor/builders/sets'\r\nimport { makeRandomFloorEncounter } from './util'\r\nimport { TOMB_SPIRIT } from '../../Character/enemies/tomb_spirit'\r\nimport { FOREST_BOAR } from '../../Character/enemies/forest_boar'\r\n\r\nconst FLOOR_1_WEAPONS = () => [\r\n  ...WEAPONS_BY_LEVEL[1],\r\n  ...WEAPONS_BY_LEVEL[2],\r\n  ...WEAPONS_BY_LEVEL[3],\r\n]\r\n\r\nconst FLOOR_1_ARMOR = () => [\r\n  ...ARMOR_BY_LEVEL[0],\r\n  ...ARMOR_BY_LEVEL[1],\r\n  ...ARMOR_BY_LEVEL[2],\r\n]\r\n\r\nexport const FloorConfig1 = (): tFloorConfig => ({\r\n  bosses: [LICH()],\r\n  items: [\r\n    ...FLOOR_1_WEAPONS().map((w) => w()),\r\n    ...FLOOR_1_ARMOR().map((a) => a()),\r\n  ],\r\n  altEnemies: {},\r\n  enemies: {\r\n    0: [\r\n      makeRandomFloorEncounter([FOREST_WOLF, FOREST_BEAST, FOREST_SNAKE], 1),\r\n      makeRandomFloorEncounter([FOREST_WOLF, FOREST_BEAST, FOREST_WITCH], 1),\r\n      makeRandomFloorEncounter([FOREST_WOLF, FOREST_BEAST, FOREST_WITCH], 2),\r\n      makeRandomFloorEncounter([FOREST_WOLF, FOREST_BEAST, FOREST_WITCH], 1),\r\n      makeRandomFloorEncounter([FOREST_WOLF, FOREST_BEAST, FOREST_WITCH], 2),\r\n      makeRandomFloorEncounter([FOREST_WOLF, FOREST_BEAST, FOREST_SNAKE], 2),\r\n      makeRandomFloorEncounter(\r\n        [FOREST_WOLF, FOREST_WOLF, FOREST_BEAST, FOREST_WITCH, FOREST_SNAKE],\r\n        3,\r\n      ),\r\n    ],\r\n    1: [\r\n      makeRandomFloorEncounter(\r\n        [\r\n          FOREST_WOLF,\r\n          FOREST_BEAST,\r\n          FOREST_WITCH,\r\n          FOREST_SNAKE,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n        ],\r\n        3,\r\n      ),\r\n    ],\r\n    2: [\r\n      makeRandomFloorEncounter(\r\n        [\r\n          FOREST_BEAST,\r\n          FOREST_WITCH,\r\n          FOREST_SNAKE,\r\n          FOREST_SNAKE,\r\n          FOREST_SNAKE,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n        ],\r\n        3,\r\n      ),\r\n      [CULTIST()],\r\n      [CULTIST_BRUTE()],\r\n      [FOREST_TROLL()],\r\n    ],\r\n    3: [\r\n      makeRandomFloorEncounter(\r\n        [\r\n          FOREST_WITCH,\r\n          FOREST_SNAKE,\r\n          FOREST_SNAKE,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_TROLL,\r\n        ],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [\r\n          FOREST_WITCH,\r\n          FOREST_SNAKE,\r\n          FOREST_SNAKE,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_TROLL,\r\n        ],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [\r\n          FOREST_WITCH,\r\n          FOREST_SNAKE,\r\n          FOREST_SNAKE,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_TROLL,\r\n          FOREST_BOAR,\r\n        ],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [FOREST_RAVEN, FOREST_TROLL, CULTIST, CULTIST_BRUTE, FOREST_BOAR],\r\n        2,\r\n      ),\r\n    ],\r\n    4: [\r\n      makeRandomFloorEncounter(\r\n        [\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_WITCH,\r\n          FOREST_WITCH,\r\n          FOREST_TROLL,\r\n          FOREST_BOAR,\r\n        ],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_WITCH,\r\n          FOREST_WITCH,\r\n          FOREST_TROLL,\r\n          FOREST_BOAR,\r\n        ],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_WITCH,\r\n          FOREST_WITCH,\r\n          FOREST_TROLL,\r\n          FOREST_BOAR,\r\n        ],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [\r\n          FOREST_BOAR,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_WITCH,\r\n          FOREST_WITCH,\r\n          FOREST_TROLL,\r\n          CULTIST,\r\n          CULTIST_BRUTE,\r\n        ],\r\n        3,\r\n      ),\r\n    ],\r\n    5: [\r\n      makeRandomFloorEncounter(\r\n        [\r\n          FOREST_RAVEN,\r\n          FOREST_WITCH,\r\n          FOREST_TROLL,\r\n          CULTIST,\r\n          CULTIST_BRUTE,\r\n          FOREST_BOAR,\r\n        ],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [\r\n          FOREST_RAVEN,\r\n          FOREST_WITCH,\r\n          FOREST_TROLL,\r\n          CULTIST,\r\n          CULTIST_BRUTE,\r\n          FOREST_BOAR,\r\n        ],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [\r\n          FOREST_RAVEN,\r\n          FOREST_WITCH,\r\n          FOREST_TROLL,\r\n          CULTIST,\r\n          CULTIST_BRUTE,\r\n          FOREST_BOAR,\r\n        ],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [\r\n          FOREST_RAVEN,\r\n          FOREST_WITCH,\r\n          FOREST_TROLL,\r\n          CULTIST,\r\n          CULTIST_BRUTE,\r\n          FOREST_BOAR,\r\n        ],\r\n        3,\r\n      ),\r\n      [TOMB_SPIRIT()],\r\n    ],\r\n    6: [\r\n      makeRandomFloorEncounter(\r\n        [FOREST_WITCH, FOREST_TROLL, CULTIST, CULTIST_BRUTE, FOREST_BOAR],\r\n        3,\r\n      ),\r\n    ],\r\n    7: [\r\n      makeRandomFloorEncounter(\r\n        [FOREST_WITCH, FOREST_TROLL, CULTIST, CULTIST_BRUTE, FOREST_BOAR],\r\n        3,\r\n      ),\r\n    ],\r\n    8: [[TOMB_SPIRIT(), TOMB_SPIRIT()]],\r\n  },\r\n})\r\n","import { ARMOR_BY_LEVEL } from '../../Armor/builders/sets'\r\nimport { CONSECRATED_BEAST } from '../../Character/bosses/consecrated_beast'\r\nimport { BANSHEE, CONSECRATED_GUARD, FLAME_WISP } from '../../Character/enemies'\r\nimport { CULTIST_SCHOLAR } from '../../Character/enemies/cultist_scholar'\r\nimport { TOMB_GUARDIAN } from '../../Character/enemies/tomb_guardian'\r\nimport { TOMB_SPIDER } from '../../Character/enemies/tomb_spider'\r\nimport { TOMB_SPIRIT } from '../../Character/enemies/tomb_spirit'\r\nimport { WEAPONS_BY_LEVEL } from '../../Weapon/builders/objects'\r\nimport { tFloorConfig } from '../type'\r\nimport { makeRandomFloorEncounter } from './util'\r\n\r\nconst FLOOR_2_WEAPONS = () => [\r\n  ...WEAPONS_BY_LEVEL[3],\r\n  ...WEAPONS_BY_LEVEL[4],\r\n  ...WEAPONS_BY_LEVEL[5],\r\n]\r\n\r\nconst FLOOR_2_ARMOR = () => [...ARMOR_BY_LEVEL[3], ...ARMOR_BY_LEVEL[4]]\r\n\r\nexport const FloorConfig2 = (): tFloorConfig => ({\r\n  bosses: [CONSECRATED_BEAST()],\r\n  items: [\r\n    ...FLOOR_2_WEAPONS().map((w) => w()),\r\n    ...FLOOR_2_ARMOR().map((w) => w()),\r\n  ],\r\n  altEnemies: {},\r\n  enemies: {\r\n    0: [\r\n      makeRandomFloorEncounter([TOMB_SPIRIT, TOMB_SPIDER], 2),\r\n      makeRandomFloorEncounter([TOMB_SPIRIT, TOMB_SPIDER], 3),\r\n    ],\r\n    1: [\r\n      makeRandomFloorEncounter([TOMB_SPIDER, TOMB_SPIRIT, CULTIST_SCHOLAR], 2),\r\n      makeRandomFloorEncounter([TOMB_SPIDER, TOMB_SPIRIT, CULTIST_SCHOLAR], 3),\r\n    ],\r\n    2: [\r\n      makeRandomFloorEncounter(\r\n        [TOMB_SPIDER, TOMB_SPIRIT, CULTIST_SCHOLAR, FLAME_WISP, FLAME_WISP],\r\n        3,\r\n      ),\r\n    ],\r\n    3: [\r\n      makeRandomFloorEncounter(\r\n        [TOMB_SPIDER, TOMB_SPIRIT, CULTIST_SCHOLAR, FLAME_WISP, TOMB_GUARDIAN],\r\n        3,\r\n      ),\r\n    ],\r\n    4: [\r\n      makeRandomFloorEncounter(\r\n        [TOMB_SPIRIT, CULTIST_SCHOLAR, FLAME_WISP, TOMB_GUARDIAN],\r\n        3,\r\n      ),\r\n    ],\r\n    5: [\r\n      makeRandomFloorEncounter(\r\n        [CULTIST_SCHOLAR, FLAME_WISP, TOMB_GUARDIAN, BANSHEE],\r\n        3,\r\n      ),\r\n    ],\r\n    // add more enemies here\r\n    6: [\r\n      makeRandomFloorEncounter(\r\n        [CULTIST_SCHOLAR, FLAME_WISP, TOMB_GUARDIAN, BANSHEE],\r\n        3,\r\n      ),\r\n    ],\r\n    7: [\r\n      makeRandomFloorEncounter(\r\n        [CULTIST_SCHOLAR, FLAME_WISP, TOMB_GUARDIAN, BANSHEE],\r\n        3,\r\n      ),\r\n    ],\r\n    8: [[CONSECRATED_GUARD(), CONSECRATED_GUARD()]],\r\n    9: [[CONSECRATED_GUARD(), CONSECRATED_GUARD()]],\r\n  },\r\n})\r\n","import { LICH } from '../../Character/bosses'\r\nimport { CONSECRATED_BEAST } from '../../Character/bosses/consecrated_beast'\r\nimport { CONSECRATED_GUARD } from '../../Character/enemies'\r\nimport { WEAPONS_BY_LEVEL } from '../../Weapon/builders/objects'\r\nimport { tFloorConfig } from '../type'\r\nimport { makeRandomFloorEncounter } from './util'\r\n\r\nconst FLOOR_3_WEAPONS = () => [\r\n  ...WEAPONS_BY_LEVEL[3],\r\n  ...WEAPONS_BY_LEVEL[4],\r\n  ...WEAPONS_BY_LEVEL[5],\r\n]\r\n\r\nexport const FloorConfig3 = (): tFloorConfig => ({\r\n  bosses: [],\r\n  items: [...FLOOR_3_WEAPONS().map((w) => w())],\r\n  altEnemies: {},\r\n  enemies: {\r\n    0: [[CONSECRATED_GUARD(), CONSECRATED_GUARD(), CONSECRATED_GUARD()]],\r\n    1: [makeRandomFloorEncounter([CONSECRATED_GUARD, LICH], 3)],\r\n  },\r\n})\r\n","import { tEncounterReward, tCombatEncounter, tEncounter } from './type'\r\nimport { getRandom } from '../../util'\r\nimport { stringArr } from '../../util/stringArr'\r\nimport { FLOOR_CONFIGS_BY_INDEX } from './floors'\r\nimport Forest1 from '../../assets/img/forests/7.png'\r\nimport Forest2 from '../../assets/img/forests/8.png'\r\nimport Forest3 from '../../assets/img/forests/1.png'\r\nimport Dungeon1 from '../../assets/img/dungeon/3.png'\r\nimport Dungeon2 from '../../assets/img/dungeon/1.png'\r\nimport Dungeon3 from '../../assets/img/dungeon/4.png'\r\nimport Dungeon4 from '../../assets/img/dungeon/2.png'\r\n\r\nexport const ZERO_REWARD: tEncounterReward = {\r\n  gold: 0,\r\n  xp: 0,\r\n  items: [],\r\n  status: [],\r\n  immunities: [],\r\n}\r\n\r\nconst poisoned: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['poisoned'],\r\n}\r\nconst burning: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['burning'],\r\n}\r\nconst bleeding: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['bleeding'],\r\n}\r\nconst armorDown: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['armor-down'],\r\n}\r\nconst resDown: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['resistance-down'],\r\n}\r\nconst attackDown: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['armor-down'],\r\n}\r\n\r\nconst armorUp: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['armor-up'],\r\n}\r\nconst attackUp: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['attack-up'],\r\n}\r\nconst resUp: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['resistance-up'],\r\n}\r\n\r\nconst justGold = (gold: number) => ({\r\n  ...ZERO_REWARD,\r\n  gold,\r\n})\r\nconst justXp = (xp: number) => ({\r\n  ...ZERO_REWARD,\r\n  xp,\r\n})\r\nconst justRandomItem = (floor: number = 0): tEncounterReward => ({\r\n  ...ZERO_REWARD,\r\n  items: [getRandom(FLOOR_CONFIGS_BY_INDEX()[floor].items)],\r\n})\r\n\r\nexport const POSSIBLE_SHINE_REWARDS = (): tEncounterReward[][] => [\r\n  [poisoned, poisoned, ZERO_REWARD, armorUp],\r\n  [bleeding, ZERO_REWARD, ZERO_REWARD, ZERO_REWARD, justGold(50)],\r\n  [burning, burning, burning, ZERO_REWARD, justXp(25)],\r\n  [poisoned, poisoned, burning, ZERO_REWARD, justRandomItem()],\r\n  [attackDown, attackDown, ZERO_REWARD, ZERO_REWARD, justXp(25)],\r\n  [attackDown, armorDown, resDown, ZERO_REWARD, justXp(10), justRandomItem()],\r\n  [poisoned, attackDown, armorDown, resDown, justRandomItem()],\r\n  [poisoned, poisoned, attackDown, ZERO_REWARD, justGold(100)],\r\n  [burning, burning, burning, burning, justGold(10), justRandomItem()],\r\n  [poisoned, poisoned, burning, bleeding, justRandomItem(), justRandomItem()],\r\n  [\r\n    burning,\r\n    ZERO_REWARD,\r\n    ZERO_REWARD,\r\n    ZERO_REWARD,\r\n    ZERO_REWARD,\r\n    justRandomItem(),\r\n  ],\r\n  [\r\n    ZERO_REWARD,\r\n    ZERO_REWARD,\r\n    ZERO_REWARD,\r\n    ZERO_REWARD,\r\n    justXp(10),\r\n    justGold(50),\r\n  ],\r\n  [bleeding, resDown, armorDown, ZERO_REWARD, resUp, attackUp],\r\n  [poisoned, ZERO_REWARD, ZERO_REWARD, attackUp],\r\n  [poisoned, ZERO_REWARD, ZERO_REWARD, armorUp],\r\n  [burning, ZERO_REWARD, ZERO_REWARD, resUp],\r\n  [attackDown, armorDown, ZERO_REWARD, armorUp],\r\n  [attackDown, resDown, ZERO_REWARD, resUp],\r\n  [poisoned, attackDown, ZERO_REWARD, attackUp],\r\n  [poisoned, burning, bleeding, resUp, attackUp],\r\n]\r\n\r\nexport const getChoiceText = (\r\n  currentEncounter: tEncounter | undefined,\r\n  previousEncounter: tEncounter | undefined,\r\n): string => {\r\n  let text = ''\r\n  if (currentEncounter === undefined) {\r\n    text =\r\n      'As your party begins their journey, you travel down an empty road. You arrive at a split path, you must make a choice on which way to proceed.'\r\n  }\r\n  if (previousEncounter?.type === 'combat') {\r\n    text = getRandom([\r\n      `After the fierce battle against the ${stringArr(\r\n        (previousEncounter as tCombatEncounter).party.characters.map(\r\n          (c) => c.name,\r\n        ),\r\n      )}, your party again arrives at a choice:`,\r\n    ])\r\n  } else if (currentEncounter) {\r\n    text =\r\n      'After a brief rest, your party continues their journey to dispel the evil. You feel it around you as your travel deeper. However, there now seem to be two options before you:'\r\n  }\r\n  return text\r\n}\r\n\r\ninterface BgConfig {\r\n  bg: string\r\n  overlay: string\r\n}\r\ninterface RootBgConfig extends BgConfig {\r\n  completed?: BgConfig\r\n}\r\nexport const getEncounterBg = (level: number, floor: number): RootBgConfig => {\r\n  return ([\r\n    [\r\n      {\r\n        // 0\r\n        bg: Forest1,\r\n        overlay: 'transparent',\r\n        completed: {\r\n          bg: Forest1,\r\n          overlay: 'rgba(20,0,50,0.4)',\r\n        },\r\n      },\r\n      {\r\n        // 1\r\n        bg: Forest1,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 2\r\n        bg: Forest1,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 3\r\n        bg: Forest1,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 4\r\n        bg: Forest1,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 5\r\n        bg: Forest2,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 6\r\n        bg: Forest2,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 7\r\n        bg: Forest2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 8\r\n        bg: Forest2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n        completed: {\r\n          bg: Forest3,\r\n          overlay: 'rgba(20,0,50,0.5)',\r\n        },\r\n      },\r\n      {\r\n        // 9\r\n        bg: Forest3,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n        completed: {\r\n          bg: Dungeon1,\r\n          overlay: 'transparent',\r\n        },\r\n      },\r\n      {\r\n        // 10\r\n        bg: Dungeon1,\r\n        overlay: 'transparent',\r\n      },\r\n    ],\r\n    [\r\n      {\r\n        // 0\r\n        bg: Dungeon2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 1\r\n        bg: Dungeon2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 2\r\n        bg: Dungeon2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 3\r\n        bg: Dungeon2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 4\r\n        bg: Dungeon3,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 5\r\n        bg: Dungeon3,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 6\r\n        bg: Dungeon3,\r\n        overlay: 'rgba(20,0,50,0.6)',\r\n      },\r\n      {\r\n        // 7\r\n        bg: Dungeon3,\r\n        overlay: 'rgba(20,0,50,0.7)',\r\n      },\r\n      {\r\n        // 8\r\n        bg: Dungeon3,\r\n        overlay: 'rgba(20,0,50,0.7)',\r\n      },\r\n      {\r\n        // 9\r\n        bg: Dungeon4,\r\n        overlay: 'rgba(20,0,50,0.2)',\r\n      },\r\n      {\r\n        // 10\r\n        bg: Dungeon4,\r\n        overlay: 'rgba(20,0,50,0.3)',\r\n      },\r\n    ],\r\n    [\r\n      {\r\n        // 0\r\n        bg: Forest1,\r\n        overlay: 'transparent',\r\n      },\r\n    ],\r\n  ][floor] || [])[level]\r\n}\r\n","export const Theme = {\r\n  darkBgColor: 'rgba(0,7,18,0.9)',\r\n  darkBgColorSolid: 'rgba(0,7,18,1)',\r\n  mediumBgColor: 'rgb(34,34,39)',\r\n  otherGrey: 'rgb(51,51,58)',\r\n  otherGrey2: 'rgb(72,72,80)',\r\n  badgeBgColor: 'rgba(0,7,18,0.9)',\r\n  badgeBorderColor: 'rgba(140,150,160,1)',\r\n  lightBgColor: 'rgba(255,255,255,0.4)',\r\n  textColor: 'rgba(255,255,255,0.8)',\r\n  physicalColor: '#adcae6',\r\n  magicColor: 'plum',\r\n  evasionColor: 'rgb(133, 199, 133)',\r\n  playerPartyColor: '#adcae6',\r\n  enemyPartyColor: 'lightsalmon',\r\n  meleeRangeColor: 'rgba(255,255,255,0.8)',\r\n  rangedRangeColor: 'rgba(255,255,255,0.8)',\r\n  healthRedColor: 'rgb(151,75,75)',\r\n\r\n  paddingS: '4px',\r\n  padding: '8px',\r\n  paddingL: '16px',\r\n  paddingXL: '24px',\r\n\r\n  titleFont: 'New Rocker',\r\n}\r\n","import { tCharacter, tCharacterClass } from './type'\r\nimport { Theme } from '../../theme'\r\nimport { v4 } from 'uuid'\r\nimport { BASE_C_STATS } from '../Stats/constants'\r\n\r\nexport const CHARACTER_XP_MAX: Record<number, number> = {\r\n  [-1]: 0,\r\n  0: 25,\r\n  1: 45,\r\n  2: 85,\r\n  3: 135,\r\n  4: 215,\r\n  5: 295,\r\n  6: 425,\r\n  7: 675,\r\n  8: 925,\r\n  9: 1257,\r\n  10: 1925,\r\n  11: 1400,\r\n  12: 2200,\r\n}\r\n\r\nexport const CHARACTER_CLASS_COLORS: Record<tCharacterClass, string> = {\r\n  enemy: Theme.enemyPartyColor,\r\n  executioner: '#313d47',\r\n  patrician: '#381c1c',\r\n  student: '#382838',\r\n  ranger: '#202e20',\r\n  reaper: 'rgb(22, 25, 33)',\r\n  drifter: '#111',\r\n}\r\n\r\nexport const BASE_CHARACTER = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: '',\r\n    isCharacter: true,\r\n    icon: '',\r\n    partyId: '',\r\n    level: 0,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: BASE_C_STATS,\r\n    weapon: undefined,\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    possibleRewards: [],\r\n  }\r\n}\r\n","import { tArmor } from '../../Armor/type'\r\nimport { tConsumable } from '../../Consumable/type'\r\nimport { tDamageRange, tDamageType } from '../../Damage/type'\r\nimport { ZERO_REWARD } from '../../Encounter/constants'\r\nimport { tEncounterReward } from '../../Encounter/type'\r\nimport { tSkill } from '../../Skill/type'\r\nimport { BASE_C_STATS } from '../../Stats/constants'\r\nimport { tBaseStats, tStats } from '../../Stats/type'\r\nimport { tStatus, tStatusType } from '../../Status/type'\r\nimport { BASE_WEAPON } from '../../Weapon/constants'\r\nimport { tWeapon } from '../../Weapon/type'\r\nimport { BASE_CHARACTER } from '../constants'\r\nimport { tCharacter, tCharacterTag } from '../type'\r\n\r\nexport const makeEnemy = (\r\n  name: string,\r\n  icon: string,\r\n  level: number,\r\n  health: number,\r\n  weapon: tWeapon,\r\n  stats: Partial<tStats>,\r\n  tags: tCharacterTag[],\r\n  possibleRewards: tEncounterReward[],\r\n  immunities: tStatusType[] = [],\r\n  status: tStatus[] = [],\r\n): tCharacter => {\r\n  const maxHealthOffset = health - 25 - level\r\n  return {\r\n    ...BASE_CHARACTER(),\r\n    name,\r\n    icon,\r\n    level,\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      ...stats,\r\n      maxHealthOffset,\r\n      vigor: 0,\r\n    },\r\n    tags,\r\n    weapon,\r\n    immunities,\r\n    status,\r\n    possibleRewards,\r\n  }\r\n}\r\n\r\nexport const makeEnemyWeapon = (\r\n  stat: keyof tBaseStats,\r\n  damage: number,\r\n  range: tDamageRange,\r\n  type: tDamageType,\r\n  skills: tSkill[],\r\n): tWeapon => {\r\n  return {\r\n    ...BASE_WEAPON(),\r\n    name: '',\r\n    stat,\r\n    damage: {\r\n      value: damage,\r\n      range,\r\n      type,\r\n    },\r\n    skills,\r\n  }\r\n}\r\n\r\nexport const makeEnemyReward = (\r\n  gold: number,\r\n  xp: number,\r\n  items: (tConsumable | tWeapon | tArmor)[] = [],\r\n): tEncounterReward => {\r\n  return {\r\n    ...ZERO_REWARD,\r\n    gold,\r\n    xp,\r\n    items,\r\n  }\r\n}\r\n","import Lich from '../../../icons/svg/delapouite/overlord-helm.svg'\r\nimport { tCharacter } from '../type'\r\nimport {\r\n  makeEnemy,\r\n  makeEnemyReward,\r\n  makeEnemyWeapon,\r\n} from '../enemies/_builder'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { v4 } from 'uuid'\r\n\r\nconst id = v4()\r\nexport const LICH = (): tCharacter => {\r\n  return {\r\n    ...makeEnemy(\r\n      'Lich',\r\n      Lich,\r\n      5,\r\n      67,\r\n      makeEnemyWeapon('strength', 34, 'melee', 'magic', [\r\n        createSkill('Drain', 4, 0, {\r\n          damageModifier: 0.5,\r\n          targetType: 'group',\r\n          perfectStatus: ['speed-down'],\r\n        }),\r\n        createSkill('Screech', 4, -5, {\r\n          damageModifier: 0,\r\n          damage: false,\r\n          targetType: 'group',\r\n          perfectStatus: ['stunned'],\r\n        }),\r\n        createSkill('Smite', 4, 0, {\r\n          perfectStatus: ['armor-down'],\r\n        }),\r\n      ]),\r\n      {\r\n        strength: 85,\r\n        intelligence: 75,\r\n        agility: 80,\r\n        luck: 50,\r\n        armor: 7,\r\n        resistance: 8,\r\n        evasion: 16,\r\n      },\r\n      ['undead'],\r\n      [\r\n        makeEnemyReward(200, 120, [\r\n          getRandomItem(3, 3),\r\n          getRandomItem(3, 3),\r\n          getRandomItem(3, 3),\r\n        ]),\r\n      ],\r\n      ['stunned', 'bleeding', 'poisoned'],\r\n    ),\r\n    id,\r\n  }\r\n}\r\n","import { createWeapon } from '..'\r\nimport { createSkill } from '../../../Skill/skills'\r\nimport { tWeapon } from '../../type'\r\n\r\nexport const LICH_SWORD: tWeapon = {\r\n  ...createWeapon(\r\n    'sword',\r\n    'sharp',\r\n    [createSkill('Strike', 2, 0)],\r\n    {\r\n      strength: 3,\r\n      intelligence: 3,\r\n    },\r\n    [\r\n      'cursed-agility',\r\n      'cursed-charisma',\r\n      'cursed-dexterity',\r\n      'cursed-intelligence',\r\n      'cursed-luck',\r\n      'cursed-strength',\r\n      'cursed-vigor',\r\n    ],\r\n  ),\r\n  name: `Lich's Magic Sword`,\r\n  rarity: 'mythic',\r\n}\r\n","import { tCharacterClass } from '../Character/type'\r\nimport { tWeapon } from './type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../Stats/constants'\r\nimport { EXECUTIONER_AXE, IRON_AXE } from './builders/objects/axe'\r\nimport { IRON_BOW, RANGERS_BOW } from './builders/objects/bow'\r\nimport { IRON_CATALYST, STUDENTS_CATALYST } from './builders/objects/catalyst'\r\nimport { IRON_CHIME, PATRICIANS_CHIME } from './builders/objects/chime'\r\nimport { FARMER_SCYTHE, IRON_SCYTHE } from './builders/objects/scythe'\r\nimport { TEST_WEAPON } from './builders/unique/test_weapon'\r\nimport { tArmor } from '../Armor/type'\r\nimport { CONSECRATED_BEAST, LICH } from '../Character/bosses'\r\nimport { LICH_SWORD } from './builders/unique/boss_lich'\r\nimport { HEART_OF_THE_BEAST } from '../Armor/builders/uniques/heart_of_the_beast'\r\n\r\nexport const CLASS_WEAPONS: Record<tCharacterClass, tWeapon | undefined> = {\r\n  /*\r\n  executioner: TEST_WEAPON(),\r\n  ranger: IRON_BOW(),\r\n  reaper: IRON_SCYTHE(),\r\n  student: IRON_CATALYST(),\r\n  patrician: IRON_CHIME(),\r\n  */\r\n  executioner: EXECUTIONER_AXE(),\r\n  ranger: RANGERS_BOW(),\r\n  reaper: FARMER_SCYTHE(),\r\n  student: STUDENTS_CATALYST(),\r\n  patrician: PATRICIANS_CHIME(),\r\n  drifter: undefined,\r\n  enemy: undefined,\r\n}\r\n\r\nexport const BASE_WEAPON = (): tWeapon => {\r\n  return {\r\n    id: v4(),\r\n    name: '',\r\n    itemType: 'weapon',\r\n    rarity: 'common',\r\n    type: 'fist',\r\n    stat: 'strength',\r\n    goldValue: 0,\r\n    twoHand: false,\r\n    breakable: false,\r\n    damage: {\r\n      value: 0,\r\n      range: 'melee',\r\n      type: 'physical',\r\n    },\r\n    stats: ZERO_STATS,\r\n    skills: [],\r\n    immunities: [],\r\n  }\r\n}\r\n\r\nexport const BOSS_ITEMS: Record<string, (tWeapon | tArmor)[]> = {\r\n  [LICH().id]: [LICH_SWORD],\r\n  [CONSECRATED_BEAST().id]: [HEART_OF_THE_BEAST()],\r\n}\r\n","import { createHeavyArmor } from '..'\r\n\r\nexport const HEART_OF_THE_BEAST = () => ({\r\n  ...createHeavyArmor(\r\n    'Heart of the Beast',\r\n    'mythic',\r\n    500,\r\n    {\r\n      armor: 10,\r\n      resistance: 10,\r\n      attackDamageOffset: 6,\r\n      criticalChance: 6,\r\n      healthRegeneration: 6,\r\n    },\r\n    [],\r\n    ['burning'],\r\n  ),\r\n})\r\n","import { tProcessedCharacter } from '../Character/type'\r\nimport { tBaseStats } from '../Stats/type'\r\nimport { getBaseStatValue } from '../Character/util'\r\nimport { DiceRoll } from 'rpg-dice-roller'\r\n\r\nexport const resolveCheck = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n  offset: number = 0,\r\n): boolean => {\r\n  const statValue = getBaseStatValue(character, key, offset)\r\n  const roll = new DiceRoll('1d100')\r\n  return roll.total <= statValue\r\n}\r\n\r\nexport const getChecksProbability = (\r\n  character: tProcessedCharacter,\r\n  checks: { key: keyof tBaseStats; offset: number }[],\r\n): number => {\r\n  const statValues = checks.map(({ key, offset }) =>\r\n    getBaseStatValue(character, key, offset),\r\n  )\r\n  const result = statValues.reduce((p, c) => {\r\n    return p * (c / 100)\r\n  }, 1)\r\n  return result\r\n}\r\n","import { tCharacterClass } from '../Character/type'\r\nimport {\r\n  ANTIQUATED_ATTIRE,\r\n  ANTIQUATED_HAT,\r\n  ANTIQUATED_SHOES,\r\n} from './builders/sets/antiquated'\r\nimport { BONE_ARMOR, BONE_BOOTS, BONE_HELMET } from './builders/sets/bone'\r\nimport { HUNTER_BOOTS, HUNTER_CLOAK, HUNTER_HOOD } from './builders/sets/hunter'\r\nimport { NOVICE_HAT, NOVICE_ROBES, NOVICE_SHOES } from './builders/sets/novice'\r\nimport { tArmor } from './type'\r\n\r\nexport const CLASS_ARMOR: Record<tCharacterClass, tArmor[]> = {\r\n  /*\r\n  executioner: [BONE_HELMET(), BONE_ARMOR(), BONE_BOOTS()],\r\n  ranger: [HUNTER_HOOD(), HUNTER_CLOAK(), HUNTER_BOOTS()],\r\n  reaper: [HUNTER_HOOD(), HUNTER_CLOAK(), HUNTER_BOOTS()],\r\n  student: [NOVICE_HAT(), NOVICE_ROBES(), NOVICE_SHOES()],\r\n  patrician: [ANTIQUATED_HAT(), ANTIQUATED_ATTIRE(), ANTIQUATED_SHOES()],\r\n  */\r\n  executioner: [],\r\n  ranger: [],\r\n  reaper: [],\r\n  student: [],\r\n  patrician: [],\r\n  drifter: [],\r\n  enemy: [],\r\n}\r\n","import { tConsumable, tConsumableStack } from './type'\r\n\r\nexport const considateConsumableListToStack = (\r\n  consumables: tConsumable[],\r\n): tConsumableStack[] => {\r\n  let stack: tConsumableStack[] = []\r\n  const updateStackItem = (cid: string) =>\r\n    stack.map((s) =>\r\n      s.consumable.cid === cid ? { ...s, count: s.count + 1 } : s,\r\n    )\r\n  const containsId = (cid: string) =>\r\n    stack.map((s) => s.consumable.cid).includes(cid)\r\n  consumables.forEach((c) => {\r\n    if (containsId(c.cid)) {\r\n      stack = updateStackItem(c.cid)\r\n    } else {\r\n      stack = [...stack, { consumable: c, count: 1 }]\r\n    }\r\n  })\r\n  return stack\r\n}\r\n","import { tWeapon } from './type'\r\nimport { ZERO_STATS } from '../Stats/constants'\r\nimport { v4 } from 'uuid'\r\nimport { createSkill } from '../Skill/skills'\r\n\r\nexport const FISTS = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Fists`,\r\n  itemType: 'weapon',\r\n  type: 'hammer',\r\n  rarity: 'common',\r\n  stat: 'vigor',\r\n  twoHand: false,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'melee', value: 4 },\r\n  skills: [createSkill('Punch', 3, 0)],\r\n  immunities: [],\r\n  stats: ZERO_STATS,\r\n  goldValue: 0,\r\n})\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { REMOVE_CURSES } from '../../Skill/skills/consumables'\r\n\r\nconst cid = v4()\r\nexport const CELESTIAL_LOTUS = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Celestial Lotus',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...REMOVE_CURSES,\r\n      consumableId: id,\r\n    },\r\n    goldValue: 30,\r\n  }\r\n}\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { POISON_KNIFE as skill } from '../../Skill/skills/consumables'\r\n\r\nconst cid = v4()\r\nexport const POISON_KNIFE = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Poison Knife',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...skill,\r\n      consumableId: id,\r\n    },\r\n    goldValue: 50,\r\n  }\r\n}\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nconst cid = v4()\r\nexport const BEAST_DRUG = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Beast Drug',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...createSkill('Beast Drug', 0, 0, {\r\n        damage: false,\r\n        targetType: 'self',\r\n        perfectStatus: ['attack-up'],\r\n      }),\r\n      consumableId: id,\r\n    },\r\n    goldValue: 20,\r\n  }\r\n}\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const CURE = createSkill('Cure Potion', 0, 0, {\r\n  damageModifier: 0,\r\n  damage: false,\r\n  targetType: 'self',\r\n  perfectStatus: ['cure'],\r\n})\r\n\r\nconst cid = v4()\r\nexport const CURE_POTION = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Cure Potion',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...CURE,\r\n      consumableId: id,\r\n    },\r\n    goldValue: 20,\r\n  }\r\n}\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nconst cid = v4()\r\nexport const FIREBOMB = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Firebomb',\r\n    itemType: 'consumable',\r\n    rarity: 'rare',\r\n    skill: {\r\n      ...createSkill('Firebomb', 0, 0, {\r\n        weaponDamageOverride: 15,\r\n        perfectStatus: ['burning'],\r\n      }),\r\n      consumableId: id,\r\n    },\r\n    goldValue: 100,\r\n  }\r\n}\r\n","import { tItemRarity } from './type'\r\nimport { tCharacterClass } from '../Character/type'\r\nimport { tConsumable } from '../Consumable/type'\r\nimport { tArmorResourceType } from '../Armor/type'\r\nimport { GODSBEARD } from '../Consumable/objects/godsbeard'\r\nimport { CELESTIAL_LOTUS } from '../Consumable/objects/celestial_lotus'\r\nimport { POISON_KNIFE } from '../Consumable/objects/poison_knife'\r\nimport { BEAST_DRUG } from '../Consumable/objects/beast_drug'\r\nimport { CURE_POTION } from '../Consumable/objects/curing_potion'\r\nimport { FIREBOMB } from '../Consumable/objects/firebomb'\r\n\r\nexport const ITEM_RARITY_COLORS: Record<tItemRarity, string> = {\r\n  common: 'rgba(255, 255, 255,1)',\r\n  uncommon: 'rgba(128,181,255,1)',\r\n  rare: 'rgba(213, 128, 255,1)',\r\n  mythic: 'rgb(255,160,122,1)',\r\n}\r\n\r\nexport const CLASS_STARTING_CONSUMABLES: Record<\r\n  tCharacterClass,\r\n  tConsumable[]\r\n> = {\r\n  executioner: [GODSBEARD(), BEAST_DRUG()],\r\n  ranger: [GODSBEARD(), POISON_KNIFE()],\r\n  reaper: [GODSBEARD(), FIREBOMB()],\r\n  student: [GODSBEARD(), CELESTIAL_LOTUS()],\r\n  patrician: [GODSBEARD(), CURE_POTION()],\r\n  drifter: [GODSBEARD(), GODSBEARD()],\r\n  enemy: [],\r\n}\r\n\r\nexport const CHARACTER_RESOURCES: tArmorResourceType[] = [\r\n  'offhand',\r\n  'body',\r\n  'head',\r\n  'feet',\r\n  'pendant',\r\n  'ring',\r\n]\r\n","import { tCharacter, tProcessedCharacter, tCharacterClass } from './type'\r\nimport { tStats, tBaseStats } from '../Stats/type'\r\nimport { capStats, combineStats } from '../Stats/util'\r\nimport { tSkill } from '../Skill/type'\r\nimport { CLASS_STATS } from '../Stats/constants'\r\nimport { tStatusType } from '../Status/type'\r\nimport { STATUS_CONFIG } from '../Status/constants'\r\nimport { v4 } from 'uuid'\r\nimport { tDamage } from '../Damage/type'\r\nimport { noneg } from '../../util/noneg'\r\nimport { CLASS_WEAPONS } from '../Weapon/constants'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { tArmorResourceType, tArmor } from '../Armor/type'\r\nimport { resolveCheck } from '../Roll/util'\r\nimport { CLASS_ARMOR } from '../Armor/constants'\r\nimport { considateConsumableListToStack } from '../Consumable/util'\r\nimport { CHARACTER_XP_MAX } from './constants'\r\nimport { tEncounterReward } from '../Encounter/type'\r\nimport { FISTS } from '../Weapon/fists'\r\nimport { CLASS_STARTING_CONSUMABLES } from '../Item/constants'\r\n\r\nexport const isCharacter = (obj: any): boolean =>\r\n  obj !== undefined && obj.isCharacter !== undefined\r\n\r\nexport const checkForProcessedCharacter = (character: tCharacter) => {\r\n  if ((character as tProcessedCharacter).processed) {\r\n    throw new Error('No Processed Characters Allowed')\r\n  }\r\n}\r\n\r\nexport const makeCharacter = (characterClass: tCharacterClass): tCharacter => {\r\n  return {\r\n    isCharacter: true,\r\n    id: v4(),\r\n    name: '',\r\n    partyId: '',\r\n    level: 0,\r\n    experience: 0,\r\n    class: characterClass,\r\n\r\n    stats: CLASS_STATS[characterClass],\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n\r\n    tags: [],\r\n\r\n    weapon: CLASS_WEAPONS[characterClass],\r\n    armor: CLASS_ARMOR[characterClass],\r\n    consumables: CLASS_STARTING_CONSUMABLES[characterClass],\r\n\r\n    status: [],\r\n    immunities: [],\r\n    possibleRewards: [],\r\n  }\r\n}\r\n\r\nexport const getSkills = (character: tCharacter): tSkill[] => {\r\n  return [\r\n    ...(character.weapon || FISTS()).skills,\r\n    ...character.armor.reduce((r, a) => [...r, ...a.skills], [] as tSkill[]),\r\n    ...considateConsumableListToStack(character.consumables).reduce(\r\n      (r, s) => [...r, s.consumable.skill],\r\n      [] as tSkill[],\r\n    ),\r\n  ]\r\n}\r\n\r\nexport const processCharacter = (\r\n  character: tCharacter,\r\n): tProcessedCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const stats: tStats = capStats(\r\n    combineStats(\r\n      character.stats,\r\n      (character.weapon || FISTS()).stats,\r\n      ...character.armor.map((a) => a.stats),\r\n      ...character.status.map((s) => s.stats),\r\n    ),\r\n  )\r\n  const skills = getSkills(character)\r\n  const statusImmunities = character.status.reduce(\r\n    (r, s) => [...r, ...s.immunities],\r\n    [] as tStatusType[],\r\n  )\r\n  const immunities = [\r\n    ...character.immunities,\r\n    ...(character?.weapon?.immunities || []),\r\n    ...character.armor.reduce(\r\n      (r, a) => [...r, ...a.immunities],\r\n      [] as tStatusType[],\r\n    ),\r\n    ...statusImmunities,\r\n  ]\r\n  const baseVigor = CLASS_STATS[character.class].vigor || character.stats.vigor\r\n  const startingHealth = 25 + Math.floor(0.1 * baseVigor)\r\n  const maxHealth =\r\n    Math.floor(\r\n      startingHealth + character.level + 0.1 * character.level * stats.vigor,\r\n    ) + stats.maxHealthOffset\r\n  const health = maxHealth - character.healthOffset\r\n  const maxInspiration = 3 + stats.maxInspirationOffset\r\n  const inspiration = maxInspiration + character.inspirationOffset\r\n\r\n  return {\r\n    processed: true,\r\n    ...character,\r\n\r\n    health,\r\n    maxHealth,\r\n    inspiration,\r\n    maxInspiration,\r\n\r\n    weapon: character.weapon || FISTS(),\r\n    stats,\r\n    immunities,\r\n    rawStats: character.stats,\r\n    skills,\r\n  }\r\n}\r\n\r\nexport const getBaseStatValue = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n  offset: number = 0,\r\n) => {\r\n  return character.stats[key] + offset\r\n}\r\n\r\nexport const getDamageResistance = (\r\n  character: tProcessedCharacter,\r\n  damage: tDamage,\r\n) => {\r\n  if (damage.type === 'physical') return character.stats.armor\r\n  if (damage.type === 'magic') return character.stats.resistance\r\n  return 0\r\n}\r\nexport const hasStatus = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.status.map((s) => s.type).includes(statusType)\r\n}\r\nexport const hasAnyStatus = (\r\n  character: tCharacter,\r\n  statusTypes: tStatusType[],\r\n) => {\r\n  return statusTypes.some((type) => hasStatus(character, type))\r\n}\r\nexport const findStatus = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.status.find((s) => s.type === statusType)\r\n}\r\nexport const hasImmunity = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.immunities.includes(statusType)\r\n}\r\nexport const getReflectedDamage = (target: tCharacter, rawDamage: tDamage) => {\r\n  return {\r\n    ...rawDamage,\r\n    value: target.stats.damageReflection[rawDamage.range],\r\n  }\r\n}\r\nexport const getRawDamage = (\r\n  source: tProcessedCharacter,\r\n  target: tProcessedCharacter,\r\n  rawDamage: tDamage,\r\n): tDamage => {\r\n  let damageModifier = 1\r\n  target.tags.forEach((tag) => {\r\n    if (source.stats.damageModifiers[tag]) {\r\n      damageModifier += source.stats.damageModifiers[tag]\r\n    }\r\n  })\r\n  return {\r\n    ...rawDamage,\r\n    value: rawDamage.value * damageModifier,\r\n  }\r\n}\r\n\r\nexport const commitDamage = (\r\n  character: tCharacter,\r\n  damage: tDamage,\r\n  ignoreResistance: boolean,\r\n): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const pc = processCharacter(character)\r\n  const resistance = ignoreResistance ? 0 : getDamageResistance(pc, damage)\r\n  const damageTakenModifier =\r\n    pc.stats.damageTakenModifier +\r\n    pc.stats.damageTakenRangeModifiers[damage.range]\r\n  const rawDamageValue = damage.value * damageTakenModifier\r\n  if (hasStatus(character, 'protected')) {\r\n    return {\r\n      ...character,\r\n      status: character.status.filter((s) => s.type !== 'protected'),\r\n    }\r\n  }\r\n  return {\r\n    ...character,\r\n    healthOffset: Math.ceil(\r\n      character.healthOffset + noneg(rawDamageValue - resistance),\r\n    ),\r\n  }\r\n}\r\n\r\nexport const decrementStatusDurations = (character: tCharacter): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    status: character.status\r\n      .map((status) => ({ ...status, duration: status.duration - 1 }))\r\n      .filter((status) => status.duration !== 0),\r\n  }\r\n}\r\nexport const addStatus = (\r\n  character: tCharacter,\r\n  type: tStatusType,\r\n  durationOverride?: number,\r\n): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const statusConfig = STATUS_CONFIG[type]\r\n  const existingStatus = findStatus(character, type)\r\n  if (hasImmunity(processCharacter(character), type)) {\r\n    return character\r\n  }\r\n  if (existingStatus && !statusConfig.canStack) {\r\n    return character\r\n  }\r\n  if (existingStatus && statusConfig.canStack) {\r\n    return {\r\n      ...character,\r\n      status: [\r\n        ...character.status.filter((s) => s.type !== type),\r\n        { ...existingStatus, stack: existingStatus.stack + 1 },\r\n      ],\r\n    }\r\n  }\r\n  return {\r\n    ...character,\r\n    status: [\r\n      ...character.status,\r\n      {\r\n        type,\r\n        stats: statusConfig.stats,\r\n        immunities: statusConfig.immunities,\r\n        duration: durationOverride || statusConfig.duration,\r\n        stack: 1,\r\n      },\r\n    ],\r\n  }\r\n}\r\n\r\nexport const addMultipleStatus = (\r\n  character: tCharacter,\r\n  types: tStatusType[],\r\n): tCharacter => {\r\n  return types.reduce((result, type) => {\r\n    return addStatus(result, type)\r\n  }, character)\r\n}\r\n\r\nexport const checkStatus = (character: tCharacter) => {\r\n  checkForProcessedCharacter(character)\r\n  let c = { ...character }\r\n  character.status.forEach((status) => {\r\n    if (hasImmunity(processCharacter(character), status.type)) {\r\n      c = {\r\n        ...c,\r\n        status: c.status.filter((c) => c.type !== status.type),\r\n      }\r\n    }\r\n  })\r\n  return c\r\n}\r\n\r\nexport const removeTemporaryStatus = (character: tCharacter): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    status: character.status.filter((s) => {\r\n      const config = STATUS_CONFIG[s.type]\r\n      return !config.isTemporary\r\n    }),\r\n  }\r\n}\r\n\r\nexport const equipArmor = (\r\n  character: tCharacter,\r\n  armor: tArmor,\r\n): { character: tCharacter; armor: tArmor | undefined } => {\r\n  checkForProcessedCharacter(character)\r\n  const existingArmor = character.armor.find(\r\n    (a) => a.resource === armor.resource,\r\n  )\r\n  return {\r\n    character: {\r\n      ...character,\r\n      armor: existingArmor\r\n        ? [...character.armor.filter((a) => a.id !== existingArmor.id), armor]\r\n        : [...character.armor, armor],\r\n    },\r\n    armor: existingArmor,\r\n  }\r\n}\r\n\r\nexport const unequipArmor = (\r\n  character: tCharacter,\r\n  resource: tArmorResourceType,\r\n): { character: tCharacter; armor: tArmor | undefined } => {\r\n  checkForProcessedCharacter(character)\r\n  const armor = character.armor.find((a) => a.resource === resource)\r\n  return {\r\n    character: {\r\n      ...character,\r\n      armor: character.armor.filter((a) => a.resource !== resource),\r\n    },\r\n    armor,\r\n  }\r\n}\r\n\r\nexport const equipWeapon = (\r\n  character: tCharacter,\r\n  weapon: tWeapon,\r\n): { character: tCharacter; weapon: tWeapon | undefined } => {\r\n  const existingWeapon = character.weapon\r\n  return {\r\n    character: {\r\n      ...character,\r\n      weapon,\r\n    },\r\n    weapon: existingWeapon,\r\n  }\r\n}\r\n\r\n// DO NOT USE\r\nexport const unequipWeapon = (\r\n  character: tCharacter,\r\n): { character: tCharacter; weapon: tWeapon | undefined } => {\r\n  const existingWeapon = character.weapon\r\n  return {\r\n    character: {\r\n      ...character,\r\n      // weapon: undefined\r\n    },\r\n    weapon: existingWeapon,\r\n  }\r\n}\r\n\r\nexport const getRewardsFromCharacter = (\r\n  character: tProcessedCharacter,\r\n  checkedCharacter: tProcessedCharacter,\r\n): tEncounterReward[] => {\r\n  let index: number | undefined = undefined\r\n  if (character.possibleRewards.length === 1)\r\n    return [character.possibleRewards[0]]\r\n  character.possibleRewards.forEach((rewards, i) => {\r\n    const luckReslt = resolveCheck(checkedCharacter, 'luck')\r\n    if (luckReslt) {\r\n      index = i\r\n    }\r\n  })\r\n  if (index !== undefined) {\r\n    return character.possibleRewards[index]\r\n      ? [character.possibleRewards[index]]\r\n      : []\r\n  }\r\n  return []\r\n}\r\n\r\nexport const addExperience = (\r\n  character: tCharacter,\r\n  xp: number,\r\n): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const xpToNextLevel = CHARACTER_XP_MAX[character.level]\r\n  const experience = character.experience + xp\r\n  if (experience > xpToNextLevel) {\r\n    return addExperience(\r\n      levelUp({\r\n        ...character,\r\n        experience,\r\n      }),\r\n      0,\r\n    )\r\n  }\r\n  return {\r\n    ...character,\r\n    experience,\r\n  }\r\n}\r\n\r\nexport const levelUp = (character: tCharacter): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const experience = character.experience - CHARACTER_XP_MAX[character.level]\r\n  return {\r\n    ...character,\r\n    level: character.level + 1,\r\n    healthOffset: noneg(Math.floor(character.healthOffset / 2) - 15),\r\n    experience,\r\n    status: character.status.filter((s) => s.type !== 'poisoned'),\r\n  }\r\n}\r\n","import { tParty, tProcessedParty } from './type'\r\nimport {\r\n  checkForProcessedCharacter,\r\n  processCharacter,\r\n  getRewardsFromCharacter,\r\n  addExperience,\r\n  addMultipleStatus,\r\n} from '../Character/util'\r\nimport { tCharacter, tProcessedCharacter } from '../Character/type'\r\nimport { v4 } from 'uuid'\r\nimport { getRandom } from '../../util'\r\nimport { tEncounterReward } from '../Encounter/type'\r\nimport { tArmor } from '../Armor/type'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { tConsumable } from '../Consumable/type'\r\nimport { FLOOR_CONFIGS_BY_INDEX } from '../Encounter/floors'\r\n\r\nexport const isParty = (obj: any): boolean =>\r\n  obj !== undefined && obj.isParty !== undefined\r\n\r\nexport const checkForProcessedParty = (party: tParty) => {\r\n  if ((party as tProcessedParty).processed) {\r\n    throw new Error('No Processed Parties Allowed')\r\n  }\r\n  party.characters.forEach((character) => {\r\n    checkForProcessedCharacter(character)\r\n  })\r\n}\r\n\r\nexport const findCharacterInParty = <\r\n  T extends tParty = tParty,\r\n  R extends tCharacter = tCharacter\r\n>(\r\n  party: T,\r\n  id: string,\r\n): R | undefined => {\r\n  return (party.characters as R[]).find((c) => c.id === id)\r\n}\r\n\r\nexport const getOtherCharacters = (\r\n  party: tParty,\r\n  characterId: string,\r\n): tCharacter[] => party.characters.filter((c) => c.id !== characterId)\r\n\r\nexport const processParty = (party: tParty): tProcessedParty => {\r\n  checkForProcessedParty(party)\r\n  return {\r\n    ...party,\r\n    processed: true,\r\n    characters: party.characters.map((c) => ({\r\n      ...processCharacter(c),\r\n      partyId: party.id,\r\n    })),\r\n  }\r\n}\r\n\r\nexport const updateCharacter = (\r\n  party: tParty,\r\n  characterId: string,\r\n  updater: (character: tCharacter) => tCharacter,\r\n): tParty => {\r\n  checkForProcessedParty(party)\r\n  return {\r\n    ...party,\r\n    characters: party.characters.map((c) =>\r\n      c.id === characterId ? updater(c) : c,\r\n    ),\r\n  }\r\n}\r\n\r\nexport const makeParty = (level: number, floor: number): tParty => {\r\n  const floorConfig = FLOOR_CONFIGS_BY_INDEX()[floor]\r\n  const length = Object.keys(floorConfig.enemies).length\r\n  level = level > length - 1 ? length - 1 : level\r\n\r\n  return {\r\n    isParty: true,\r\n    id: v4(),\r\n    gold: 0,\r\n    items: [],\r\n    characters: getRandom(floorConfig.enemies[level] || []),\r\n  }\r\n}\r\n\r\nexport const makeBossParty = (floor: number): tParty => {\r\n  const config = FLOOR_CONFIGS_BY_INDEX()[floor]\r\n  return {\r\n    isParty: true,\r\n    id: v4(),\r\n    gold: 0,\r\n    items: [],\r\n    characters: [getRandom(config.bosses)],\r\n  }\r\n}\r\n\r\nexport const getRolledRewards = (\r\n  party: tProcessedParty,\r\n  checkedCharacter: tProcessedCharacter,\r\n): tEncounterReward[] => {\r\n  return party.characters.reduce((r, character) => {\r\n    return [...r, ...getRewardsFromCharacter(character, checkedCharacter)]\r\n  }, [] as tEncounterReward[])\r\n}\r\n\r\nexport const commitRewards = (\r\n  party: tParty,\r\n  rewards: tEncounterReward,\r\n): tParty => {\r\n  checkForProcessedParty(party)\r\n  const goldMultiplier =\r\n    1 +\r\n    processParty(party).characters.reduce(\r\n      (r, c) => (r > c.stats.goldModifier ? r : c.stats.goldModifier),\r\n      0,\r\n    ) /\r\n      100\r\n  return {\r\n    ...party,\r\n    gold: party.gold + Math.floor(rewards.gold * goldMultiplier),\r\n    items: [\r\n      ...party.items,\r\n      ...(rewards.items.filter((i) => i.itemType !== 'consumable') as (\r\n        | tArmor\r\n        | tWeapon\r\n      )[]),\r\n    ],\r\n    characters: party.characters.map((c) =>\r\n      addMultipleStatus(\r\n        addExperience(\r\n          {\r\n            ...c,\r\n            consumables: [\r\n              ...c.consumables,\r\n              ...(rewards.items.filter(\r\n                (i) => i.itemType === 'consumable',\r\n              ) as tConsumable[]),\r\n            ],\r\n          },\r\n          rewards.xp,\r\n        ),\r\n        rewards.status,\r\n      ),\r\n    ),\r\n  }\r\n}\r\n","import { v4 } from 'uuid'\r\n\r\nexport const PLAYER_PARTY_ID = v4()\r\n","import { useSelector } from 'react-redux'\r\nimport { StateCoreT, StateActionT, StateT } from '../types'\r\nimport { Dispatch } from 'redux'\r\nimport { makeReducer } from '../util'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { checkForProcessedParty, updateCharacter } from '../../game/Party/util'\r\nimport { tCharacter } from '../../game/Character/type'\r\nimport { makeCharacter, addMultipleStatus } from '../../game/Character/util'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport {\r\n  ALL_WEAPONS,\r\n  WEAPONS_BY_LEVEL,\r\n} from '../../game/Weapon/builders/objects'\r\nimport { getRandomItem } from '../../game/Item/util'\r\nimport { ARMOR_BY_LEVEL } from '../../game/Armor/builders/sets'\r\n\r\nexport const UPDATE_PARTY = '@actions/parties/set-party'\r\nexport const UPSERT_CHARACTER = '@actions/parties/upsert-character'\r\nexport const DELETE_CHARACTER = '@actions/parties/delete-character'\r\nexport const UPSERT_ITEM = '@actions/parties/upsert-item'\r\nexport const SET_GOLD = '@actions/parties/set-gold'\r\n\r\nexport const actionCreators = {\r\n  updateParty: (party: tParty): StateActionT => {\r\n    return {\r\n      type: UPDATE_PARTY,\r\n      payload: {\r\n        party,\r\n      },\r\n    }\r\n  },\r\n  upsertCharacter: (character: tCharacter): StateActionT => {\r\n    return {\r\n      type: UPSERT_CHARACTER,\r\n      payload: {\r\n        character,\r\n      },\r\n    }\r\n  },\r\n  deleteCharacter: (characterId: string): StateActionT => {\r\n    return {\r\n      type: DELETE_CHARACTER,\r\n      payload: {\r\n        characterId,\r\n      },\r\n    }\r\n  },\r\n  upsertItem: (item: tArmor | tWeapon): StateActionT => {\r\n    return {\r\n      type: UPSERT_ITEM,\r\n      payload: {\r\n        item,\r\n      },\r\n    }\r\n  },\r\n  setGold: (gold: number): StateActionT => {\r\n    return {\r\n      type: SET_GOLD,\r\n      payload: {\r\n        gold,\r\n      },\r\n    }\r\n  },\r\n}\r\n\r\nexport const actions = {\r\n  updateParty: (party: tParty) => (dispatch: Dispatch) => {\r\n    checkForProcessedParty(party)\r\n    dispatch(actionCreators.updateParty(party))\r\n  },\r\n  upsertCharacter: (character: tCharacter) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.upsertCharacter(character))\r\n  },\r\n  deleteCharacter: (characterId: string) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.deleteCharacter(characterId))\r\n  },\r\n  upsertItem: (item: tArmor | tWeapon) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.upsertItem(item))\r\n  },\r\n  setGold: (gold: number) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.setGold(gold))\r\n  },\r\n}\r\n\r\nexport const core: StateCoreT<tParty> = {\r\n  [UPDATE_PARTY]: (state, action) => {\r\n    return {\r\n      ...action.payload.party,\r\n    }\r\n  },\r\n  [UPSERT_CHARACTER]: (state, action) => {\r\n    return updateCharacter(\r\n      state,\r\n      action.payload.character.id,\r\n      (c) => action.payload.character,\r\n    )\r\n  },\r\n  [DELETE_CHARACTER]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      characters: state.characters.filter(\r\n        (c) => c.id !== action.payload.characterId,\r\n      ),\r\n    }\r\n  },\r\n  [UPSERT_ITEM]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      items: [\r\n        ...state.items.filter((item) => item.id !== action.payload.item.id),\r\n        action.payload.item,\r\n      ],\r\n    }\r\n  },\r\n  [SET_GOLD]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      gold: action.payload.gold,\r\n    }\r\n  },\r\n}\r\nconst jack = { ...makeCharacter('executioner'), name: 'Jack' }\r\nconst jim = { ...makeCharacter('patrician'), name: 'Jim' }\r\nconst john = { ...makeCharacter('student'), name: 'Johnny' }\r\nexport const INITIAL_STATE: tParty = {\r\n  isParty: true,\r\n  id: PLAYER_PARTY_ID,\r\n  items: [],\r\n  gold: 200,\r\n  characters: [\r\n    addMultipleStatus(\r\n      {\r\n        ...jack,\r\n        // healthOffset: 30,\r\n      },\r\n      [\r\n        /*\r\n        'frozen',\r\n        'bleeding',\r\n        'burning',\r\n        'poisoned',\r\n        'stunned',\r\n        'speed-down',\r\n        'targeted',\r\n        'evasive',\r\n        'armor-down',\r\n        */\r\n      ],\r\n    ),\r\n    addMultipleStatus(\r\n      {\r\n        ...jim,\r\n        //healthOffset: 30\r\n      },\r\n      [],\r\n    ),\r\n    {\r\n      ...john,\r\n      //healthOffset: 30\r\n    },\r\n  ],\r\n}\r\nexport default makeReducer(core, INITIAL_STATE)\r\nexport const useParty = () => useSelector((state: StateT) => state.party)\r\nexport const usePartyActions = () =>\r\n  useActions(actions) as {\r\n    updateParty: (party: tParty) => void\r\n    upsertCharacter: (character: tCharacter) => void\r\n    deleteCharacter: (characterId: string) => void\r\n    upsertItem: (item: tArmor | tWeapon) => void\r\n    setGold: (gold: number) => void\r\n  }\r\n","import { DiceRoll } from 'rpg-dice-roller'\r\nimport { v4 } from 'uuid'\r\nimport { makeRandomEncounter } from '../game/Encounter/util'\r\nimport { noneg } from '../util'\r\nimport { EncounterArrayT, HexT } from './types'\r\n\r\nexport const ZERO_HEX = (): HexT => ({\r\n  id: v4(),\r\n  q: 0,\r\n  r: 0,\r\n  s: 0,\r\n})\r\n\r\nexport const makeHex = (q: number, r: number, s: number): HexT => ({\r\n  id: v4(),\r\n  q,\r\n  r,\r\n  s,\r\n})\r\n\r\nexport const MIN_HEX = (size: number): HexT => makeHex(0, size, size * -1)\r\n\r\nexport const isEqual = (a: HexT, b: HexT) => a.id === b.id\r\nexport const isValueEqual = (a: HexT, b: HexT) =>\r\n  a.q === b.q && a.r === b.r && a.s === b.s\r\n\r\nexport const addHex = (a: HexT, b: HexT): HexT => ({\r\n  ...a,\r\n  q: a.q + b.q,\r\n  r: a.r + b.r,\r\n  s: a.s + b.s,\r\n})\r\n\r\nexport const multHex = (a: HexT, m: number) => ({\r\n  ...a,\r\n  q: a.q * m,\r\n  r: a.r * m,\r\n  s: a.s * m,\r\n})\r\n\r\nexport const getDepth = (hex: HexT, size: number): number => {\r\n  // if (isValueEqual(hex, MIN_HEX(size))) return -1\r\n  return noneg(size - hex.r - 1)\r\n}\r\n\r\nexport const makeEncounterArray = (\r\n  size: number,\r\n  floor: number,\r\n): EncounterArrayT => {\r\n  const minQ = 0\r\n  const maxQ = size\r\n  const minR = 0\r\n  const maxR = size\r\n  let index = 0\r\n  const shopIndex = new DiceRoll(`1d55`).total\r\n  let result: EncounterArrayT = {}\r\n  for (let q = minQ; q <= maxQ; q++) {\r\n    result[q] = {}\r\n    for (let r = maxR; r >= minR; r--) {\r\n      const ri = maxR - r\r\n      result[q][r] = {}\r\n      if (q > ri) continue\r\n      const s = q * -1 - r\r\n      const d = getDepth(makeHex(q, r, s), size)\r\n      const startHex = MIN_HEX(size)\r\n      if (!(q === startHex.q && r === startHex.r && s === startHex.s)) {\r\n        const e = makeRandomEncounter(d, q, size, floor, index === shopIndex)\r\n        result[q][r][s] = e\r\n      }\r\n      index++\r\n    }\r\n  }\r\n  return result\r\n}\r\n\r\nexport const isAdjacent = (current: HexT | undefined) => (\r\n  hex: HexT,\r\n): boolean => {\r\n  const range = 1\r\n  if (!current) return false\r\n  if (hex.q === current.q && hex.r === current.r - range) {\r\n    return true\r\n  }\r\n  if (hex.q === current.q && hex.r === current.r + range) {\r\n    return true\r\n  }\r\n  if (hex.q === current.q - range && hex.r === current.r) {\r\n    return true\r\n  }\r\n  if (hex.q === current.q - range && hex.r === current.r + range) {\r\n    return true\r\n  }\r\n  if (hex.q === current.q + range && hex.r === current.r) {\r\n    return true\r\n  }\r\n  if (hex.q === current.q + range && hex.r === current.r - range) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n","import { v4 } from 'uuid'\r\nimport {\r\n  tEncounter,\r\n  tEncounterType,\r\n  tCombatEncounter,\r\n  tShopEncounter,\r\n  tShrineEncounter,\r\n  tBossEncounter,\r\n  tFloor2,\r\n} from './type'\r\nimport { getRandom, noneg } from '../../util'\r\nimport { makeParty, makeBossParty } from '../Party/util'\r\nimport { tArmor } from '../Armor/type'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { GODSBEARD } from '../Consumable/objects/godsbeard'\r\nimport { tConsumable } from '../Consumable/type'\r\nimport { tBaseStats } from '../Stats/type'\r\nimport { POSSIBLE_SHINE_REWARDS, ZERO_REWARD } from './constants'\r\nimport { FLOOR_CONFIGS_BY_INDEX } from './floors'\r\nimport { CELESTIAL_LOTUS } from '../Consumable/objects/celestial_lotus'\r\nimport { CURE_POTION } from '../Consumable/objects/curing_potion'\r\nimport { FIREBOMB } from '../Consumable/objects/firebomb'\r\nimport { POISON_KNIFE } from '../Consumable/objects/poison_knife'\r\nimport { BEAST_DRUG } from '../Consumable/objects/beast_drug'\r\nimport { makeEncounterArray } from '../../grid/util'\r\n\r\nexport const makeEncounterType = (\r\n  depth: number,\r\n  max: number,\r\n  isShop: boolean = false,\r\n): tEncounterType => {\r\n  // return 'shrine'\r\n  if (isShop) {\r\n    return 'shop'\r\n  }\r\n  if (depth === max - 1) {\r\n    return 'boss'\r\n  }\r\n  if (depth === 0) {\r\n    return 'combat'\r\n  }\r\n  return getRandom([\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'shrine',\r\n  ])\r\n}\r\n\r\nexport const makeRandomEncounter = (\r\n  depth: number,\r\n  altIndex: number,\r\n  max: number,\r\n  floor: number,\r\n  isShop: boolean = false,\r\n) => {\r\n  let encounterType = makeEncounterType(depth, max, isShop)\r\n  const floorConfig = FLOOR_CONFIGS_BY_INDEX()[floor]\r\n  let encounter: tEncounter = {\r\n    id: v4(),\r\n    choiceId: '',\r\n    name: `Encounter ${depth}`,\r\n    type: encounterType,\r\n    reward: ZERO_REWARD,\r\n    completed: false,\r\n  }\r\n\r\n  if (encounter.type === 'combat') {\r\n    encounter = {\r\n      ...encounter,\r\n      party: makeParty(noneg(depth), floor),\r\n    } as tCombatEncounter\r\n  }\r\n  if (encounter.type === 'boss') {\r\n    encounter = {\r\n      ...encounter,\r\n      boss: true,\r\n      party: makeBossParty(floor),\r\n    } as tBossEncounter\r\n  }\r\n  if (encounter.type === 'reward') {\r\n    encounter = {\r\n      ...encounter,\r\n    }\r\n  }\r\n  if (encounter.type === 'shop') {\r\n    const items = [\r\n      GODSBEARD(),\r\n      GODSBEARD(),\r\n      CELESTIAL_LOTUS(),\r\n      CURE_POTION(),\r\n      FIREBOMB(),\r\n      POISON_KNIFE(),\r\n      BEAST_DRUG(),\r\n      ...floorConfig.items,\r\n    ]\r\n    encounter = {\r\n      ...encounter,\r\n      items,\r\n      consumables: [],\r\n      costs: items.reduce((r, i) => {\r\n        return {\r\n          ...r,\r\n          [i.id]: getItemCost(i),\r\n        }\r\n      }, {}),\r\n    } as tShopEncounter\r\n  }\r\n  if (encounter.type === 'shrine') {\r\n    const stat: keyof tBaseStats = getRandom<keyof tBaseStats>([\r\n      'vigor',\r\n      'strength',\r\n      'dexterity',\r\n      'intelligence',\r\n      'charisma',\r\n      'luck',\r\n    ])\r\n    const rewards = getRandom(POSSIBLE_SHINE_REWARDS())\r\n    encounter = {\r\n      ...encounter,\r\n      stat,\r\n      offset: 0,\r\n      rolls: rewards.length,\r\n      results: rewards,\r\n    } as tShrineEncounter\r\n  }\r\n\r\n  return encounter\r\n}\r\n\r\nexport const getItemCost = (item: tArmor | tWeapon | tConsumable): number => {\r\n  return item.goldValue * 3\r\n}\r\n\r\nexport const makeFloor2 = (depth: number, size: number): tFloor2 => {\r\n  console.log('makeFloor', depth)\r\n  let name = ''\r\n  if (depth === 0) {\r\n    name = 'The Forgotten Woods'\r\n  }\r\n  if (depth === 1) {\r\n    name = 'Tomb of the Formless One (in-progress)'\r\n  }\r\n  if (depth === 2) {\r\n    name = 'Realm of the Ancients (comming soon)'\r\n  }\r\n  return {\r\n    id: v4(),\r\n    name,\r\n    depth,\r\n    size: size,\r\n    encounters: makeEncounterArray(size, depth),\r\n  }\r\n}\r\n","import { StateCoreT, StateT, StateActionT } from '../types'\r\nimport { makeReducer } from '../util'\r\nimport { useSelector } from 'react-redux'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport { Dispatch } from 'redux'\r\nimport { tShopEncounter, tFloor2 } from '../../game/Encounter/type'\r\nimport { makeFloor2 } from '../../game/Encounter/util'\r\nimport { HexT } from '../../grid/types'\r\nimport { makeHex, MIN_HEX } from '../../grid/util'\r\n\r\nexport interface GameStateT {\r\n  hex: HexT\r\n  floor: number\r\n  floors: tFloor2[]\r\n  loading: boolean\r\n}\r\n\r\nexport const SIZE = 10\r\nexport const RESET = '@action/game/reset'\r\nexport const SET_LOADING = '@action/game/set-loading'\r\nexport const CHOOSE_NEXT = '@action/game/CHOOSE_NEXT'\r\nexport const COMPLETE_CURRENT = '@action/game/complete-current'\r\nexport const NEXT_FLOOR = '@action/game/next-floor'\r\nexport const REMOVE_ITEM = '@action/game/remove-item'\r\n\r\nexport const actionCreators = {\r\n  reset: (): StateActionT => ({\r\n    type: RESET,\r\n    payload: {},\r\n  }),\r\n  setLoading: (loading: boolean): StateActionT => ({\r\n    type: SET_LOADING,\r\n    payload: {\r\n      loading,\r\n    },\r\n  }),\r\n  chooseNext: (hex: HexT): StateActionT => ({\r\n    type: CHOOSE_NEXT,\r\n    payload: {\r\n      hex,\r\n    },\r\n  }),\r\n  nextFloor: (): StateActionT => ({\r\n    type: NEXT_FLOOR,\r\n    payload: {},\r\n  }),\r\n  removeItem: (itemId: string): StateActionT => ({\r\n    type: REMOVE_ITEM,\r\n    payload: {\r\n      itemId,\r\n    },\r\n  }),\r\n  completeCurrent: (): StateActionT => ({\r\n    type: COMPLETE_CURRENT,\r\n    payload: {},\r\n  }),\r\n}\r\n\r\nexport const actions = {\r\n  reset: () => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.setLoading(true))\r\n    setTimeout(() => {\r\n      dispatch(actionCreators.reset())\r\n      dispatch(actionCreators.setLoading(false))\r\n    }, 200)\r\n  },\r\n  chooseNext: (hex: HexT) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.chooseNext(hex))\r\n  },\r\n  nextFloor: () => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.nextFloor())\r\n  },\r\n  removeItem: (itemId: string) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.removeItem(itemId))\r\n  },\r\n  completeCurrent: () => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.completeCurrent())\r\n  },\r\n}\r\n\r\nconst updateCurrentFloor = (\r\n  state: GameStateT,\r\n  updater: (floor: tFloor2) => tFloor2,\r\n): GameStateT => {\r\n  return {\r\n    ...state,\r\n    floors: state.floors.map((floor) =>\r\n      floor.depth === state.floor ? updater(floor) : floor,\r\n    ),\r\n  }\r\n}\r\n\r\nexport const core: StateCoreT<GameStateT> = {\r\n  [RESET]: (state, action) => {\r\n    console.log('reset')\r\n    return {\r\n      ...state,\r\n      hex: MIN_HEX(SIZE),\r\n      floor: 0,\r\n      floors: [makeFloor2(0, SIZE), makeFloor2(1, SIZE), makeFloor2(2, SIZE)],\r\n    }\r\n  },\r\n  [SET_LOADING]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      loading: action.payload.loading,\r\n    }\r\n  },\r\n  [CHOOSE_NEXT]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      hex: action.payload.hex,\r\n    }\r\n  },\r\n  [NEXT_FLOOR]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      floor: state.floor + 1,\r\n      hex: MIN_HEX(SIZE),\r\n    }\r\n  },\r\n  [REMOVE_ITEM]: (state, action) => {\r\n    return updateCurrentFloor(state, (floor) => {\r\n      const encounters = floor.encounters\r\n      encounters[state.hex.q][state.hex.r][state.hex.s] = {\r\n        ...encounters[state.hex.q][state.hex.r][state.hex.s],\r\n        items: (encounters[state.hex.q][state.hex.r][\r\n          state.hex.s\r\n        ] as tShopEncounter).items.filter(\r\n          (i) => i.id !== action.payload.itemId,\r\n        ),\r\n      } as tShopEncounter\r\n      return {\r\n        ...floor,\r\n        encounters,\r\n      }\r\n    })\r\n  },\r\n  [COMPLETE_CURRENT]: (state, action) => {\r\n    return updateCurrentFloor(state, (floor) => {\r\n      const encounters = floor.encounters\r\n      let encounter = encounters[state.hex.q][state.hex.r][state.hex.s]\r\n      if (encounter) {\r\n        encounter = {\r\n          ...encounter,\r\n          completed: true,\r\n        }\r\n        encounters[state.hex.q][state.hex.r][state.hex.s] = encounter\r\n      }\r\n      return {\r\n        ...floor,\r\n        encounters,\r\n      }\r\n    })\r\n  },\r\n}\r\n\r\nexport const INITIAL_STATE: GameStateT = {\r\n  floor: 0,\r\n  hex: MIN_HEX(0),\r\n  floors: [makeFloor2(0, 0), makeFloor2(1, 0), makeFloor2(2, 0)],\r\n  loading: false,\r\n}\r\n\r\nexport default makeReducer(core, INITIAL_STATE)\r\nexport const useGameState = (): GameStateT =>\r\n  useSelector((state: StateT) => state.game)\r\nexport const useGameStateActions = () =>\r\n  useActions(actions) as {\r\n    reset: () => void\r\n    chooseNext: (hex: HexT) => void\r\n    nextFloor: () => void\r\n    removeItem: (itemId: string) => void\r\n    completeCurrent: () => void\r\n  }\r\n","import React, { useContext, useEffect, useMemo, useState } from 'react'\r\nimport { useGameState, useGameStateActions } from '../../state/game2'\r\nimport { tEncounter, tFloor2 } from '../../game/Encounter/type'\r\nimport { EncounterArrayT, HexT } from '../../grid/types'\r\nimport { makeHex } from '../../grid/util'\r\nimport { useModalContext } from '../ModalContext'\r\n\r\nexport interface GameStateContextT {\r\n  started: boolean\r\n  encounters: EncounterArrayT\r\n  floors: tFloor2[]\r\n  floor: number\r\n  currentHex: HexT\r\n  currentEncounter: tEncounter | undefined\r\n  previousEncounter: tEncounter | undefined\r\n  loading: boolean\r\n  chooseNext: (hex: HexT) => void\r\n  nextFloor: () => void\r\n  reset: () => void\r\n  removeItem: (itemId: string) => void\r\n  completeCurrent: () => void\r\n}\r\n\r\nexport const defaultValue: GameStateContextT = {\r\n  started: false,\r\n  encounters: [],\r\n  floors: [],\r\n  floor: 0,\r\n  currentHex: makeHex(0, 0, 0),\r\n  currentEncounter: undefined,\r\n  previousEncounter: undefined,\r\n  loading: false,\r\n  chooseNext: (hex) => {},\r\n  nextFloor: () => {},\r\n  reset: () => {},\r\n  removeItem: (itemId) => {},\r\n  completeCurrent: () => {},\r\n}\r\nexport const GameStateContext = React.createContext<GameStateContextT>(\r\n  defaultValue,\r\n)\r\nexport const useGameStateContext = () => useContext(GameStateContext)\r\n\r\nexport interface GameStateProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const GameStateContextProvider = (props: GameStateProviderPropsT) => {\r\n  const { children } = props\r\n  const { floors, floor, hex, loading } = useGameState()\r\n  const [started, setStarted] = useState(false)\r\n  const currentFloor = floors[floor]\r\n  const encounters = currentFloor.encounters\r\n  const {\r\n    nextFloor,\r\n    chooseNext,\r\n    reset,\r\n    removeItem,\r\n    completeCurrent,\r\n  } = useGameStateActions()\r\n  const currentEncounter = useMemo(() => {\r\n    return encounters[hex.q][hex.r][hex.s]\r\n  }, [hex, JSON.stringify(encounters)])\r\n  const [previousEncounter, setPreviousEncounter] = useState<\r\n    tEncounter | undefined\r\n  >()\r\n\r\n  useEffect(() => {\r\n    if (currentEncounter && currentEncounter.completed) {\r\n      setPreviousEncounter(currentEncounter)\r\n    }\r\n  }, [currentEncounter])\r\n\r\n  useEffect(() => {\r\n    setStarted(true)\r\n  }, [])\r\n\r\n  return (\r\n    <GameStateContext.Provider\r\n      value={{\r\n        started,\r\n        encounters,\r\n        floors,\r\n        floor,\r\n        currentHex: hex,\r\n        currentEncounter,\r\n        previousEncounter,\r\n        loading,\r\n        reset,\r\n        chooseNext,\r\n        nextFloor,\r\n        removeItem,\r\n        completeCurrent: () => {\r\n          completeCurrent()\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </GameStateContext.Provider>\r\n  )\r\n}\r\n","import React, { useMemo, useContext, useState } from 'react'\r\nimport { usePartyActions, useParty } from '../../state/party'\r\nimport { tProcessedParty, tParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter, tCharacter } from '../../game/Character/type'\r\nimport {\r\n  processParty,\r\n  makeParty,\r\n  findCharacterInParty,\r\n} from '../../game/Party/util'\r\nimport {\r\n  checkForProcessedCharacter,\r\n  processCharacter,\r\n  makeCharacter,\r\n  equipArmor,\r\n  equipWeapon,\r\n  unequipArmor,\r\n} from '../../game/Character/util'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { useGameStateContext } from '../GameStateContext'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { FISTS } from '../../game/Weapon/fists'\r\n\r\nexport interface PartyContextT {\r\n  party: tProcessedParty\r\n  rawParty: tParty\r\n  activeCharacter: tProcessedCharacter\r\n  updateParty: (party: tParty) => void\r\n  upsertCharacter: (character: tCharacter) => void\r\n  deleteCharacter: (characterId: string) => void\r\n  findCharacter: (characterId: string) => tProcessedCharacter | undefined\r\n  findRawCharacter: (characterId: string) => tCharacter | undefined\r\n  setActiveCharacter: (character: tProcessedCharacter) => void\r\n  equipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n  unequipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n  purchaseItem: (item: tArmor | tWeapon | tConsumable, cost: number) => void\r\n  sellItem: (itemId: string) => void\r\n  refreshParty: () => void\r\n}\r\nconst defaultContextValue: PartyContextT = {\r\n  rawParty: makeParty(0, 0),\r\n  party: processParty(makeParty(0, 0)),\r\n  activeCharacter: processCharacter(makeCharacter('executioner')),\r\n  updateParty: (party) => {},\r\n  upsertCharacter: (character) => {},\r\n  deleteCharacter: (characterId) => {},\r\n  findCharacter: (characterId) => undefined,\r\n  findRawCharacter: (characterId) => undefined,\r\n  setActiveCharacter: (character) => {},\r\n  equipItem: (characterId, item) => {},\r\n  unequipItem: (characterId, item) => {},\r\n  purchaseItem: (item, cost) => {},\r\n  sellItem: (itemId) => {},\r\n  refreshParty: () => {},\r\n}\r\nexport const PartyContext = React.createContext<PartyContextT>(\r\n  defaultContextValue,\r\n)\r\n\r\nexport interface PartyContextProviderPropsT {\r\n  children: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const PartyContextProvider = (props: PartyContextProviderPropsT) => {\r\n  const { children } = props\r\n  const actions = usePartyActions()\r\n  const rawParty = useParty()\r\n  const { currentEncounter, removeItem } = useGameStateContext()\r\n  const party = useMemo(() => processParty(rawParty), [rawParty])\r\n  const [activeCharacterId, setActiveCharacterId] = useState<string>(\r\n    party.characters[0].id,\r\n  )\r\n  const activeCharacter = useMemo(() => {\r\n    return party.characters.find(\r\n      (c) => c.id === activeCharacterId,\r\n    ) as tProcessedCharacter\r\n  }, [activeCharacterId, party.characters])\r\n  const setActiveCharacter = (character: tProcessedCharacter) =>\r\n    setActiveCharacterId(character.id)\r\n  const updateParty = (party: tParty) => {\r\n    actions.updateParty(party)\r\n  }\r\n  const upsertCharacter = (character: tCharacter) => {\r\n    if (!character) return\r\n    checkForProcessedCharacter(character)\r\n    actions.upsertCharacter(character)\r\n  }\r\n  const deleteCharacter = (characterId: string) => {\r\n    actions.deleteCharacter(characterId)\r\n  }\r\n  const findCharacter = (characterId: string) => {\r\n    return findCharacterInParty<tProcessedParty, tProcessedCharacter>(\r\n      party,\r\n      characterId,\r\n    )\r\n  }\r\n  const findRawCharacter = (characterId: string) => {\r\n    return findCharacterInParty(rawParty, characterId)\r\n  }\r\n\r\n  const equipItem = (characterId: string, item: tWeapon | tArmor) => {\r\n    const character = findRawCharacter(characterId)\r\n    if (!character) return\r\n    if (item.itemType === 'armor') {\r\n      const armor = item as tArmor\r\n      if (armor.resource === 'offhand' && (character.weapon || FISTS()).twoHand)\r\n        return\r\n      const result = equipArmor(character, armor)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.armor ? [result.armor] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n    if (item.itemType === 'weapon') {\r\n      const weapon = item as tWeapon\r\n      if ((character.weapon || FISTS()).twoHand) {\r\n        if (character.armor.find((a) => a.resource === 'offhand')) {\r\n          return\r\n        }\r\n      }\r\n      const result = equipWeapon(character, weapon)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.weapon ? [result.weapon] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n  }\r\n  const unequipItem = (characterId: string, item: tWeapon | tArmor) => {\r\n    const character = findRawCharacter(characterId)\r\n    if (!character) return\r\n    if (item.itemType === 'armor') {\r\n      const armor = item as tArmor\r\n      const result = unequipArmor(character, armor.resource)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.armor ? [result.armor] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n    if (item.itemType === 'weapon') {\r\n      updateParty({\r\n        ...rawParty,\r\n        items: character.weapon\r\n          ? [...rawParty.items, character.weapon]\r\n          : rawParty.items,\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === characterId ? { ...c, weapon: undefined } : c,\r\n        ),\r\n      })\r\n    }\r\n  }\r\n  const purchaseItem = (item: tArmor | tWeapon | tConsumable, cost: number) => {\r\n    if (party.gold > cost && currentEncounter) {\r\n      if (item.itemType === 'armor' || item.itemType === 'weapon') {\r\n        actions.upsertItem(item as tArmor | tWeapon)\r\n      }\r\n      if (item.itemType === 'consumable') {\r\n        updateParty({\r\n          ...rawParty,\r\n          characters: rawParty.characters.map((c) => ({\r\n            ...c,\r\n            consumables: [...c.consumables, item as tConsumable],\r\n          })),\r\n        })\r\n      }\r\n      actions.setGold(party.gold - cost)\r\n      removeItem(item.id)\r\n    }\r\n  }\r\n  const sellItem = (itemId: string) => {\r\n    const item = rawParty.items.find((i) => i.id === itemId)\r\n    if (item) {\r\n      updateParty({\r\n        ...rawParty,\r\n        items: rawParty.items.filter((i) => i.id !== itemId),\r\n        gold: rawParty.gold + item.goldValue,\r\n      })\r\n    }\r\n  }\r\n  const refreshParty = () => {\r\n    updateParty({\r\n      ...rawParty,\r\n      characters: rawParty.characters.map((c) => ({\r\n        ...c,\r\n        healthOffset: 0,\r\n        status: [],\r\n      })),\r\n    })\r\n  }\r\n\r\n  return (\r\n    <PartyContext.Provider\r\n      value={{\r\n        party,\r\n        rawParty,\r\n        activeCharacter,\r\n        updateParty,\r\n        upsertCharacter,\r\n        deleteCharacter,\r\n        findCharacter,\r\n        findRawCharacter,\r\n        setActiveCharacter,\r\n        equipItem,\r\n        unequipItem,\r\n        purchaseItem,\r\n        sellItem,\r\n        refreshParty,\r\n      }}\r\n    >\r\n      {children}\r\n    </PartyContext.Provider>\r\n  )\r\n}\r\n\r\nexport const usePartyContext = () => useContext(PartyContext)\r\n","import { ModalStylesT } from '.'\r\n\r\nexport interface ModalContextStateT {\r\n  isOpen: boolean\r\n  contents: JSX.Element | null\r\n  callback: ((payload?: any) => void) | null\r\n  payload: any | null\r\n  blocking: boolean\r\n  styles: ModalStylesT\r\n}\r\nexport const initialState: ModalContextStateT = {\r\n  isOpen: false,\r\n  contents: null,\r\n  callback: null,\r\n  payload: null,\r\n  blocking: false,\r\n  styles: {},\r\n}\r\n\r\nexport const OPEN = 'modalContext/OPEN'\r\nexport const CLOSE = 'modalContext/CLOSE'\r\nexport const SET_CONTENTS = 'modalContext/SET_CONTENTS'\r\nexport const SET_CALLBACK = 'modalContext/SET_CALLBACK'\r\nexport const SET_PAYLOAD = 'modalContext/SET_PAYLOAD'\r\nexport const SET_BLOCKING = 'modalContext/SET_BLOCKING'\r\nexport const SET_STYLE = 'modalContext/SET_STYLE'\r\n\r\nexport const actions = {\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => ({\r\n    type: OPEN,\r\n    contents,\r\n    styles,\r\n    blocking,\r\n    callback,\r\n  }),\r\n  close: () => ({ type: CLOSE }),\r\n  setPayload: (payload: any) => ({ type: SET_PAYLOAD, payload }),\r\n  setContents: (contents: JSX.Element | null) => ({\r\n    type: SET_CONTENTS,\r\n    contents,\r\n  }),\r\n  setCallback: (callback: (() => void) | null) => ({\r\n    type: SET_CALLBACK,\r\n    callback,\r\n  }),\r\n  setBlocking: (blocking: boolean) => ({ type: SET_BLOCKING, blocking }),\r\n  setStyles: (styles: ModalStylesT) => ({ type: SET_STYLE, styles }),\r\n}\r\n\r\nconst core: Record<\r\n  string,\r\n  (state: ModalContextStateT, action: any) => ModalContextStateT\r\n> = {\r\n  [OPEN]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    isOpen: true,\r\n    contents: action.contents ? action.contents : state.contents,\r\n    styles: action.styles ? action.styles : state.styles || {},\r\n    blocking: action.blocking || false,\r\n    callback: action.callback ? action.callback : state.callback,\r\n  }),\r\n  [CLOSE]: (state: ModalContextStateT) => ({\r\n    ...state,\r\n    isOpen: false,\r\n  }),\r\n  [SET_PAYLOAD]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    payload: action.payload,\r\n  }),\r\n  [SET_CONTENTS]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: null,\r\n    payload: null,\r\n    contents: action.contents,\r\n    blocking: false,\r\n    style: {},\r\n  }),\r\n  [SET_CALLBACK]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: action.callback,\r\n  }),\r\n  [SET_BLOCKING]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    blocking: action.blocking,\r\n  }),\r\n  [SET_STYLE]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    styles: action.styles,\r\n  }),\r\n}\r\n\r\nexport const reducer = (\r\n  state: ModalContextStateT = initialState,\r\n  action: any,\r\n) => {\r\n  const coreFunction = core[action.type]\r\n  return coreFunction ? coreFunction(state, action) : state\r\n}\r\n","import React, { useContext, useReducer, useMemo, CSSProperties } from 'react'\r\nimport Modal from 'react-modal'\r\nimport { actions, reducer, initialState, ModalContextStateT } from './reducer'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ModalContextT {\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => void\r\n  close: (payload?: any) => void\r\n  setPayload: (payload: any) => void\r\n  setBlocking: (blocking: boolean) => void\r\n  setContents: (contents: JSX.Element) => void\r\n  setCallback: (callback: (payload?: any) => void) => void\r\n  setStyles: (styles: ModalStylesT) => void\r\n}\r\nconst defaultContext: ModalContextT = {\r\n  open: () => null,\r\n  close: () => null,\r\n  setBlocking: () => null,\r\n  setPayload: () => null,\r\n  setContents: () => null,\r\n  setCallback: () => null,\r\n  setStyles: () => null,\r\n}\r\nexport const ModalContext = React.createContext<ModalContextT>(defaultContext)\r\nexport const useModalContext = () => useContext(ModalContext)\r\n\r\nexport interface ModalStylesT {\r\n  modal?: CSSProperties\r\n  overlay?: CSSProperties\r\n}\r\n\r\nconst getContextValue = (\r\n  state: ModalContextStateT,\r\n  dispatch: React.Dispatch<any>,\r\n) => ({\r\n  isOpen: state.isOpen,\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => {\r\n    dispatch(actions.open(contents, styles, blocking, callback))\r\n  },\r\n  close: (payload?: any) => {\r\n    if (state.callback) state.callback(payload || state.payload)\r\n    dispatch(actions.close())\r\n  },\r\n  setPayload: (payload: any) => dispatch(actions.setPayload(payload)),\r\n  setContents: (contents: JSX.Element) =>\r\n    dispatch(actions.setContents(contents)),\r\n  setCallback: (callback: (payload?: any) => void) =>\r\n    dispatch(actions.setCallback(callback)),\r\n  setBlocking: (blocking: boolean) => dispatch(actions.setBlocking(blocking)),\r\n  setStyles: (styles: ModalStylesT) => dispatch(actions.setStyles(styles)),\r\n})\r\nModal.setAppElement('#root')\r\nexport interface ModalContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const ModalContextProvider = (props: ModalContextProviderPropsT) => {\r\n  const { children } = props\r\n  const reducerValue = useReducer(reducer, initialState)\r\n  const [state] = reducerValue\r\n  const context = useMemo(() => getContextValue(...reducerValue), [\r\n    reducerValue,\r\n  ])\r\n\r\n  return (\r\n    <ModalContext.Provider value={context}>\r\n      {children}\r\n      <Modal\r\n        isOpen={state.isOpen}\r\n        onRequestClose={() => {\r\n          if (!state.blocking) context.close()\r\n        }}\r\n        style={{\r\n          content: {\r\n            backgroundColor: Theme.darkBgColor,\r\n            color: 'white',\r\n            width: 400,\r\n            margin: '0 auto',\r\n            bottom: 'unset',\r\n            borderColor: Theme.lightBgColor,\r\n            ...state.styles.modal,\r\n          },\r\n          overlay: {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n            zIndex: 900,\r\n            ...state.styles.overlay,\r\n          },\r\n        }}\r\n      >\r\n        {state.contents || <div />}\r\n      </Modal>\r\n    </ModalContext.Provider>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport interface FlexContainerPropsT {\r\n  $direction?: 'row' | 'column' | 'column-reverse'\r\n  $full?: boolean\r\n  $center?: boolean\r\n}\r\nexport const FlexContainer = styled('div', (props: FlexContainerPropsT) => ({\r\n  display: 'flex',\r\n  flexDirection: props.$direction || 'row',\r\n  flex: props.$full ? 1 : undefined,\r\n  justifyContent: props.$center ? 'center' : undefined,\r\n}))\r\nexport const FullContainer = styled('div', () => ({\r\n  flex: 1,\r\n}))\r\n","import React from 'react'\r\nimport { styled, withStyle } from 'styletron-react'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { Theme } from '../theme'\r\n\r\nexport interface ButtonPropsT {\r\n  $direction?: 'up' | 'down'\r\n}\r\nexport const Button = styled('button', (props: ButtonPropsT) => {\r\n  return {\r\n    cursor: 'pointer',\r\n    background: Theme.mediumBgColor,\r\n    boxShadow: 'inset 0px 0px 3px black',\r\n    textShadow: '0px 1px 3px black',\r\n    border: '1px solid rgba(255,255,255,0.2)',\r\n    color: 'rgba(255,255,255,1)',\r\n    ':hover': {\r\n      border: '1px solid rgba(255,255,255,0.4)',\r\n    },\r\n    ':active': {\r\n      outline: 'none',\r\n      border: '1px solid rgba(255,255,255,0.7)',\r\n    },\r\n    ':focus': {\r\n      outline: 'none',\r\n    },\r\n    padding: '10px 30px',\r\n    userSelect: 'none',\r\n  }\r\n})\r\n\r\nexport const RedButton = withStyle(Button, (props: ButtonPropsT) => {\r\n  return {\r\n    // fontFamily: Theme.titleFont,\r\n    fontWeight: 'bold',\r\n    background:\r\n      'linear-gradient(0deg, rgba(157,30,30,1) 0%, rgba(110,23,23,1) 100%)',\r\n  }\r\n})\r\n\r\nexport const ConfirmButton = withStyle(Button, (props: ButtonPropsT) => {\r\n  const { $direction } = props\r\n  return {\r\n    // background: 'linear-gradient(0deg, rgba(157,0,0,1) 0%, rgba(110,0,0,1) 100%)',\r\n    // fontWeight: 'bold',\r\n    borderTop: $direction === 'down' ? 'none' : undefined,\r\n    borderBottom: $direction === 'up' ? 'none' : undefined,\r\n    padding: '10px 30px',\r\n    boxShadow: 'inset 0px 2px 8px black',\r\n    ':hover': {\r\n      borderTop: $direction === 'down' ? 'none' : undefined,\r\n      borderBottom: $direction === 'up' ? 'none' : undefined,\r\n    },\r\n    animationDirection: '1s',\r\n    animationIterationCount: 'infinite',\r\n    animationName: `\r\n      from: {\r\n        background: 'rgba(255,255,255,0.4)',\r\n      },\r\n\r\n      to: {\r\n        background: 'rgba(255,255,255,1)',\r\n      },\r\n    `,\r\n  }\r\n})\r\n\r\nexport const ConfirmButton2 = (props: any) => {\r\n  const styles = useSpring({\r\n    from: {\r\n      border: '1px solid rgba(255,255,255,0)',\r\n    },\r\n    to: async (next: any) => {\r\n      while (1) {\r\n        await next({\r\n          border: '1px solid rgba(255,255,255,0)',\r\n        })\r\n        await next({ border: '1px solid rgba(255,255,255,1)' })\r\n      }\r\n    },\r\n  })\r\n  return (\r\n    <animated.div style={styles}>\r\n      <ConfirmButton style={{ border: 'none' }}>{props.children}</ConfirmButton>\r\n    </animated.div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nexport interface IconPropsT {\r\n  src: string\r\n  size: number\r\n  fill?: string\r\n  style?: React.CSSProperties\r\n  shadow?: boolean\r\n  onClick?: () => void\r\n}\r\nexport const Icon = ({\r\n  src,\r\n  size,\r\n  style = {},\r\n  fill = 'white',\r\n  shadow,\r\n  onClick,\r\n}: IconPropsT) => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [svg, setSvg] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (src) {\r\n      fetch(src)\r\n        .then((res) => res.text())\r\n        .then((text) => setSvg(text))\r\n        .then(() => setLoading(false))\r\n    }\r\n  }, [src])\r\n\r\n  return !loading ? (\r\n    <div\r\n      className={`icon ${shadow ? 'shadow' : ''}`}\r\n      onClick={() => {\r\n        if (onClick) onClick()\r\n      }}\r\n      style={{ ...style, height: size, width: size, fill }}\r\n      dangerouslySetInnerHTML={{ __html: svg }}\r\n    />\r\n  ) : (\r\n    <div />\r\n  )\r\n}\r\n\r\nexport const RawIcon = (props: IconPropsT) => {\r\n  const { src, size, style = {}, fill = 'white', shadow, onClick } = props\r\n  const [loading, setLoading] = useState(true)\r\n  const [svg, setSvg] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (src) {\r\n      fetch(src)\r\n        .then((res) => res.text())\r\n        .then((text) => setSvg(text))\r\n        .then(() => setLoading(false))\r\n    }\r\n  }, [src])\r\n\r\n  return <>{loading ? svg : <svg />}</>\r\n}\r\n","import React, { useState, useLayoutEffect } from 'react'\r\nimport { v4 } from 'uuid'\r\n\r\nexport interface HoverChildrenT {\r\n  isHovering: boolean\r\n}\r\nexport interface HoverPropsT {\r\n  delay?: number\r\n  flex?: boolean\r\n  children: (props: HoverChildrenT) => JSX.Element\r\n}\r\nexport const Hover = (props: HoverPropsT) => {\r\n  const { delay = 500, flex, children } = props\r\n  const [internalHovering, setInternalHovering] = useState<boolean>(false)\r\n  const [isHovering, setIsHovering] = useState<boolean>(false)\r\n  const [guid, setGuid] = useState<string>(v4())\r\n  useLayoutEffect(() => {\r\n    const action = async () => {\r\n      if (internalHovering) {\r\n        setTimeout(() => {\r\n          setGuid(v4())\r\n        }, delay)\r\n      }\r\n    }\r\n    action()\r\n  }, [internalHovering])\r\n  useLayoutEffect(() => {\r\n    if (internalHovering) {\r\n      setIsHovering(true)\r\n    }\r\n  }, [guid])\r\n  const onMouseEnter = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(true)\r\n  }\r\n  const onMouseLeave = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(false)\r\n    setIsHovering(false)\r\n  }\r\n  return (\r\n    <div\r\n      style={{ display: flex ? 'flex' : 'block', flex: flex ? 1 : undefined }}\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n    >\r\n      {children({ isHovering })}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useRef } from 'react'\r\nimport BaseTooltip, { TooltipProps } from 'react-tooltip-lite'\r\nimport { Hover } from '../Hover'\r\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\r\n\r\nexport interface ClickToolTipChildrenT {\r\n  onClick: (value?: boolean) => void\r\n  ref: React.MutableRefObject<HTMLElement | undefined>\r\n}\r\ninterface PropsT extends TooltipProps {\r\n  children: JSX.Element | ((props: ClickToolTipChildrenT) => JSX.Element)\r\n  content: JSX.Element | ((props: ClickToolTipChildrenT) => JSX.Element)\r\n  flex?: boolean\r\n}\r\nexport const Tooltip = (props: PropsT) => {\r\n  const { ...rest } = props\r\n  return (\r\n    <BaseTooltip\r\n      direction='up'\r\n      tagName='div'\r\n      padding='0'\r\n      arrow={false}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nexport const HoverToolTip = (props: PropsT) => {\r\n  return (\r\n    <Hover flex={props.flex}>\r\n      {({ isHovering }) => <Tooltip {...props} isOpen={isHovering} />}\r\n    </Hover>\r\n  )\r\n}\r\n\r\nexport const ClickToolTip = (props: PropsT) => {\r\n  const { children, content, ...rest } = props\r\n  const [isOpen, setIsOpen] = useState<boolean>(false)\r\n  const ref = useRef<HTMLElement>()\r\n  useOnClickOutside(ref, () => {\r\n    setIsOpen(false)\r\n  })\r\n  if (typeof children !== 'function') return null\r\n  if (typeof content !== 'function') return null\r\n  const p = {\r\n    onClick: (value?: boolean) => {\r\n      setIsOpen((v) => (value !== undefined ? value : !v))\r\n    },\r\n    ref,\r\n  }\r\n  return (\r\n    <Tooltip content={content(p)} {...rest} isOpen={isOpen}>\r\n      {children(p)}\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport const useOnClickOutside = (\r\n  ref: React.MutableRefObject<HTMLElement | undefined>,\r\n  handler: Function,\r\n) => {\r\n  useEffect(() => {\r\n    const listener = (event: any) => {\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return\r\n      }\r\n\r\n      setTimeout(() => handler(event), 150)\r\n    }\r\n\r\n    document.addEventListener('mousedown', listener)\r\n    document.addEventListener('touchstart', listener)\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', listener)\r\n      document.removeEventListener('touchstart', listener)\r\n    }\r\n  }, [ref, handler])\r\n}\r\n","import React from 'react'\r\nimport { Hover } from '../components/Hover'\r\nimport { Theme } from '../theme'\r\n\r\nexport interface BoxContainerPropsT extends React.HTMLProps<HTMLDivElement> {\r\n  substyle?: React.CSSProperties\r\n  tag?: any\r\n  to?: string\r\n  dark?: boolean\r\n}\r\nexport const BoxContainer = (props: BoxContainerPropsT) => {\r\n  const {\r\n    style = {},\r\n    substyle = {},\r\n    children,\r\n    dark,\r\n    tag: Element = 'div',\r\n    ...rest\r\n  } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        border: '1px solid #000',\r\n        display: 'flex',\r\n        boxSizing: 'border-box',\r\n        ...style,\r\n      }}\r\n    >\r\n      <Element\r\n        style={{\r\n          border: substyle.border || `1px solid ${Theme.lightBgColor}`,\r\n          background: dark\r\n            ? Theme.darkBgColor\r\n            : `linear-gradient(0deg, ${Theme.mediumBgColor} 0%, rgba(42,42,44) 100%)`,\r\n          padding: 10,\r\n          color: '#ccc',\r\n          flex: 1,\r\n          boxShadow: 'inset 0px 0px 2px black',\r\n          ...substyle,\r\n        }}\r\n        {...rest}\r\n      >\r\n        {children}\r\n      </Element>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const SmallBox = (props: BoxContainerPropsT) => (\r\n  <BoxContainer\r\n    {...props}\r\n    style={{\r\n      height: 40,\r\n      width: 40,\r\n      ...props.style,\r\n    }}\r\n    substyle={{\r\n      display: 'flex',\r\n      padding: 0,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      background: Theme.darkBgColor,\r\n      ...props.substyle,\r\n    }}\r\n  >\r\n    {props.children}\r\n  </BoxContainer>\r\n)\r\n\r\nexport const BoxButton = (props: BoxContainerPropsT) => {\r\n  return (\r\n    <Hover delay={0}>\r\n      {({ isHovering }) => (\r\n        <BoxContainer\r\n          {...props}\r\n          tag='button'\r\n          style={{\r\n            margin: 0,\r\n            ...(props.style || {}),\r\n          }}\r\n          substyle={{\r\n            borderColor:\r\n              isHovering && !props.disabled ? '#999' : Theme.lightBgColor,\r\n            padding: '4px',\r\n            cursor: props.disabled ? 'default' : 'pointer',\r\n            background: props.disabled ? '#444' : Theme.darkBgColor,\r\n            boxShadow: props.disabled ? 'none' : undefined,\r\n            ...(props.substyle || {}),\r\n          }}\r\n        />\r\n      )}\r\n    </Hover>\r\n  )\r\n}\r\n","import Shot from './svg/lorc/high-shot.svg'\r\nimport Headshot from './svg/delapouite/shield-impact.svg'\r\nimport PinDown from './svg/lorc/energy-arrow.svg'\r\n\r\nimport Arcane from './svg/lorc/fire-zone.svg'\r\nimport Blast from './svg/lorc/magic-swirl.svg'\r\nimport Nova from './svg/lorc/heavy-timer.svg'\r\nimport TimeJump from './svg/delapouite/extra-time.svg'\r\nimport Enflame from './svg/sbed/lucifer-cannon.svg'\r\nimport Engulf from './svg/delapouite/firewall.svg'\r\n\r\nimport Smash from './svg/lorc/flat-hammer.svg'\r\nimport Shockwave from './svg/lorc/hammer-drop.svg'\r\nimport Thrust from './svg/lorc/scythe.svg'\r\nimport Chop from './svg/lorc/battered-axe.svg'\r\nimport Strike from './svg/lorc/plain-dagger.svg'\r\nimport Stab from './svg/lorc/knife-thrust.svg'\r\nimport Cleave from './svg/lorc/pointy-sword.svg'\r\nimport AxeSpin from './svg/lorc/axe-swing.svg'\r\nimport Slice from './svg/lorc/saber-slash.svg'\r\nimport Lunge from './svg/lorc/wave-strike.svg'\r\nimport Slash from './svg/lorc/sparkling-sabre.svg'\r\n\r\nimport Taunt from './svg/lorc/bordered-shield.svg'\r\n\r\nimport Ring from './svg/lorc/ringing-bell.svg'\r\nimport Reverberate from './svg/lorc/resonance.svg'\r\nimport Protect from './svg/lorc/shieldcomb.svg'\r\nimport Rush from './svg/lorc/sprint.svg'\r\n\r\nimport Fire from './svg/lorc/gunshot.svg'\r\nimport Snipe from './svg/delapouite/crosshair.svg'\r\nimport FanFire from './svg/delapouite/bullet-impacts.svg'\r\n\r\nimport Reset from './svg/delapouite/backward-time.svg'\r\nimport Slow from './svg/lorc/snail.svg'\r\nimport SpreadShot from './svg/lorc/double-shot.svg'\r\n\r\nimport Heal from './svg/sbed/health-normal.svg'\r\nimport Bless from './svg/lorc/embrassed-energy.svg'\r\nimport PoisonKnife from './svg/lorc/bone-knife.svg'\r\nimport Firebomb from './svg/lorc/molotov.svg'\r\n\r\nimport Restore from './svg/lorc/life-support.svg'\r\nimport EvadeUp from './svg/lorc/dodging.svg'\r\n\r\nimport ArmorUp from './svg/delapouite/armor-upgrade.svg'\r\nimport ArmorDown from './svg/delapouite/armor-downgrade.svg'\r\nimport Punch from './svg/lorc/punch.svg'\r\n\r\nimport Stun from './svg/lorc/ubisoft-sun.svg'\r\n\r\nimport AttackUp from './svg/lorc/all-for-one.svg'\r\nimport CurePotion from './svg/lorc/drink-me.svg'\r\n\r\nexport const SKILL_ICONS: Record<string, string> = {\r\n  Punch: Punch,\r\n\r\n  Shot: Shot,\r\n  Headshot: Headshot,\r\n  'Pin Down': PinDown,\r\n  Flurry: SpreadShot,\r\n\r\n  Arcane: Arcane,\r\n  Nova: Nova,\r\n  Blast: Blast,\r\n  'Time Jump': TimeJump,\r\n  Enflame: Enflame,\r\n  Engulf: Engulf,\r\n\r\n  Ring: Ring,\r\n  Reverberate: Reverberate,\r\n\r\n  Smash: Smash,\r\n  Strike: Strike,\r\n  Swing: Chop,\r\n  Chop: Chop,\r\n  Thrust: Thrust,\r\n  Earthquake: Shockwave,\r\n  Ripple: Shockwave,\r\n  Crush: Shockwave,\r\n  'Axe Spin': AxeSpin,\r\n  Cleave: Cleave,\r\n  Slash: Slash,\r\n  Lunge: Lunge,\r\n  Stab: Stab,\r\n  Slice: Stab,\r\n  Swipe: Slice,\r\n\r\n  Fire: Fire,\r\n  Snipe: Snipe,\r\n  'Fan Fire': FanFire,\r\n\r\n  Stun: Stun,\r\n  Reset: Reset,\r\n  Taunt: Taunt,\r\n  Slow: Slow,\r\n  Protect: Protect,\r\n\r\n  Heal: Heal,\r\n  'Remove Curses': Bless,\r\n  'Poison Knife': PoisonKnife,\r\n  Firebomb: Firebomb,\r\n  'Cure Potion': CurePotion,\r\n  Restore: Restore,\r\n  Rush: Rush,\r\n  Vanish: EvadeUp,\r\n  'Evade Up': EvadeUp,\r\n  'Armor Up': ArmorUp,\r\n  'Attack Up': AttackUp,\r\n  'Armor Down': ArmorDown,\r\n  'Beast Drug': AttackUp,\r\n}\r\n","import Stunned from './svg/lorc/star-swirl.svg'\r\nimport Targeted from './svg/sbed/targeted.svg'\r\nimport Evasive from './svg/lorc/dodging.svg'\r\nimport SpeedDown from './svg/delapouite/sticky-boot.svg'\r\nimport Poisoned from './svg/lorc/biohazard.svg'\r\nimport Burning from './svg/carl-olsen/flame.svg'\r\nimport Bleeding from './svg/lorc/bleeding-wound.svg'\r\nimport Frozen from './svg/lorc/snowflake-2.svg'\r\nimport ArmorDown from './svg/delapouite/armor-downgrade.svg'\r\nimport ArmorUp from './svg/delapouite/armor-upgrade.svg'\r\nimport ResistanceDown from './svg/lorc/broken-shield.svg'\r\nimport Cursed from './svg/lorc/pentagram-rose.svg'\r\nimport Protected from './svg/lorc/shieldcomb.svg'\r\nimport AttackUp from './svg/lorc/all-for-one.svg'\r\nimport { tStatusType } from '../game/Status/type'\r\n\r\nexport const STATUS_ICONS: Partial<Record<tStatusType, string>> = {\r\n  evasive: Evasive,\r\n  stunned: Stunned,\r\n  targeted: Targeted,\r\n  protected: Protected,\r\n  poisoned: Poisoned,\r\n  burning: Burning,\r\n  bleeding: Bleeding,\r\n  frozen: Frozen,\r\n\r\n  'attack-up': AttackUp,\r\n  'armor-up': ArmorUp,\r\n\r\n  'speed-down': SpeedDown,\r\n  'armor-down': ArmorDown,\r\n  'resistance-down': ResistanceDown,\r\n\r\n  'cursed-agility': Cursed,\r\n  'cursed-charisma': Cursed,\r\n  'cursed-dexterity': Cursed,\r\n  'cursed-intelligence': Cursed,\r\n  'cursed-luck': Cursed,\r\n  'cursed-strength': Cursed,\r\n  'cursed-vigor': Cursed,\r\n}\r\n","import Vigor from './svg/delapouite/heart-beats.svg'\r\nimport Strength from './svg/delapouite/biceps.svg'\r\nimport Brain from './svg/lorc/brain.svg'\r\nimport Hand from './svg/sbed/hand.svg'\r\nimport Masks from './svg/lorc/lyre.svg'\r\nimport Agility from './svg/lorc/sprint.svg'\r\nimport Clover from './svg/lorc/clover.svg'\r\n\r\nimport MagicArmor from './svg/lorc/robe.svg'\r\nimport ClothArmor from './svg/lorc/scale-mail.svg'\r\nimport Armor from './svg/delapouite/chest-armor.svg'\r\nimport Shield from './svg/delapouite/cross-shield.svg'\r\nimport MagicShield from './svg/lorc/lightning-shield.svg'\r\nimport Footwear from './svg/lorc/leather-boot.svg'\r\nimport Hat from './svg/delapouite/robin-hood-hat.svg'\r\nimport MagicHat from './svg/lorc/pointy-hat.svg'\r\nimport Helmet from './svg/lorc/visored-helm.svg'\r\nimport Weapon from './svg/lorc/broadsword.svg'\r\nimport Ring from './svg/delapouite/ring.svg'\r\nimport Pendant from './svg/delapouite/heart-necklace.svg'\r\n\r\nimport Axe from './svg/lorc/battle-axe.svg'\r\nimport Blunt from './svg/lorc/gavel.svg'\r\nimport Bow from './svg/lorc/heavy-arrow.svg'\r\nimport Dagger from './svg/lorc/bowie-knife.svg'\r\nimport Handgun from './svg/skoll/revolver.svg'\r\nimport MagicStaff from './svg/lorc/wizard-staff.svg'\r\nimport Sword from './svg/lorc/broadsword.svg'\r\nimport Scythe from './svg/lorc/scythe.svg'\r\nimport Chime from './svg/lorc/ringing-bell.svg'\r\nimport Greatsword from './svg/lorc/croc-sword.svg'\r\nimport Fist from './svg/skoll/fist.svg'\r\n\r\nimport Godsbeard from './svg/delapouite/herbs-bundle.svg'\r\nimport Lotus from './svg/lorc/lotus-flower.svg'\r\nimport PoisonKnife from './svg/lorc/bone-knife.svg'\r\nimport BeastDrug from './svg/delapouite/medicine-pills.svg'\r\nimport CurePotion from './svg/lorc/drink-me.svg'\r\nimport Firebomb from './svg/lorc/molotov.svg'\r\nimport { tBaseStats } from '../game/Stats/type'\r\nimport { GODSBEARD } from '../game/Consumable/objects/godsbeard'\r\nimport { tArmorResourceType, tArmorType } from '../game/Armor/type'\r\nimport { tWeaponType } from '../game/Weapon/type'\r\nimport { tCharacterClass } from '../game/Character/type'\r\n\r\nimport Executioner from './svg/delapouite/executioner-hood.svg'\r\nimport Hunter from './svg/lorc/cowled.svg'\r\nimport Bard from './svg/delapouite/female-vampire.svg'\r\nimport Scholar from './svg/delapouite/wizard-face.svg'\r\nimport Hobo from './svg/delapouite/perspective-dice-six.svg'\r\nimport Reaper from './svg/delapouite/kenku-head.svg'\r\nimport { CELESTIAL_LOTUS } from '../game/Consumable/objects/celestial_lotus'\r\nimport { POISON_KNIFE } from '../game/Consumable/objects/poison_knife'\r\nimport { BEAST_DRUG } from '../game/Consumable/objects/beast_drug'\r\nimport { CURE_POTION } from '../game/Consumable/objects/curing_potion'\r\nimport { FIREBOMB } from '../game/Consumable/objects/firebomb'\r\n\r\nexport { SKILL_ICONS } from './skills'\r\nexport { STATUS_ICONS } from './status'\r\n\r\nexport const STAT_ICONS: Record<keyof tBaseStats, string> = {\r\n  vigor: Vigor,\r\n  strength: Strength,\r\n  intelligence: Brain,\r\n  dexterity: Hand,\r\n  charisma: Masks,\r\n  agility: Agility,\r\n  luck: Clover,\r\n  evasion: '',\r\n  criticalChance: '',\r\n}\r\n\r\nexport const ARMOR_TYPE_ICONS: Record<tArmorType, string> = {\r\n  'magic-armor': MagicArmor,\r\n  'light-armor': ClothArmor,\r\n  'heavy-armor': Armor,\r\n  shield: Shield,\r\n  ward: MagicShield,\r\n  footwear: Footwear,\r\n  hat: Hat,\r\n  'magic-hat': MagicHat,\r\n  helmet: Helmet,\r\n  pendant: Pendant,\r\n  ring: Ring,\r\n}\r\n\r\nexport const WEAPON_TYPE_ICONS: Record<tWeaponType, string> = {\r\n  enemy: '',\r\n  axe: Axe,\r\n  hammer: Blunt,\r\n  bow: Bow,\r\n  dagger: Dagger,\r\n  chime: Chime,\r\n  pistol: Handgun,\r\n  catalyst: MagicStaff,\r\n  scythe: Scythe,\r\n  sword: Sword,\r\n  greatsword: Greatsword,\r\n  fist: Fist,\r\n}\r\n\r\nexport const RESOURCE_ICONS: Record<tArmorResourceType | 'weapon', string> = {\r\n  weapon: Weapon,\r\n  offhand: Shield,\r\n  body: Armor,\r\n  head: Helmet,\r\n  feet: Footwear,\r\n  pendant: Pendant,\r\n  ring: Ring,\r\n}\r\n\r\nexport const CONSUMABLE_ITEM_ICONS: Record<string, string> = {\r\n  [GODSBEARD().cid]: Godsbeard,\r\n  [CELESTIAL_LOTUS().cid]: Lotus,\r\n  [POISON_KNIFE().cid]: PoisonKnife,\r\n  [BEAST_DRUG().cid]: BeastDrug,\r\n  [CURE_POTION().cid]: CurePotion,\r\n  [FIREBOMB().cid]: Firebomb,\r\n}\r\nexport const CONSUMABLE_ITEM_COLORS: Record<string, string> = {\r\n  [GODSBEARD().cid]: '#84a397',\r\n  [CELESTIAL_LOTUS().cid]: '#7a80a1',\r\n  [POISON_KNIFE().cid]: '#9c6c9e',\r\n  [BEAST_DRUG().cid]: '#b07171',\r\n  [CURE_POTION().cid]: '#8a8248',\r\n  [FIREBOMB().cid]: '#ab8272',\r\n}\r\n\r\nexport const CHARACTER_CLASS_ICONS: Record<tCharacterClass, string> = {\r\n  enemy: '',\r\n  executioner: Executioner,\r\n  patrician: Bard,\r\n  ranger: Hunter,\r\n  reaper: Reaper,\r\n  student: Scholar,\r\n  drifter: Hobo,\r\n}\r\n","import React from 'react'\r\nimport { styled, withWrapper } from 'styletron-react'\r\nimport { HoverToolTip } from '../components/Tooltip'\r\nimport { Theme } from '../theme'\r\n\r\nconst Div = styled('div', {\r\n  transform: 'rotateY(0deg) rotate(-45deg)',\r\n})\r\nexport const Badge = withWrapper(Div, (Element) => (props: any) => {\r\n  const { onClick, $style, ...rest } = props\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      style={{\r\n        position: props.$absolute === false ? 'relative' : 'absolute',\r\n        background: Theme.darkBgColorSolid,\r\n        padding: '4px',\r\n        fontFamily: 'New Rocker',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        boxShadow: '1px 1px 3px black',\r\n        height: props.$size || '20px',\r\n        width: props.$size || '20px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        lineHeight: '20px',\r\n        borderRadius: '30%',\r\n        transform: 'rotateY(0deg) rotate(45deg)',\r\n        textShadow: '1px 1px 3px black',\r\n        color: props.$color || 'white',\r\n        cursor: 'pointer',\r\n        top: props.$top,\r\n        userSelect: 'none',\r\n        bottom: props.$bottom,\r\n        right: props.$right,\r\n        left: props.$left,\r\n        transition: 'all 0.2s',\r\n        zIndex: 4,\r\n        ...($style || {}),\r\n      }}\r\n    >\r\n      <Element {...rest} />\r\n    </div>\r\n  )\r\n})\r\n\r\nexport interface HoverBadgePropsT {\r\n  children: JSX.Element\r\n  content: JSX.Element\r\n  badgeProps: any\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n}\r\nexport const HoverBadge = (props: HoverBadgePropsT) => {\r\n  const { children, content, badgeProps, direction } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        top: badgeProps.$top,\r\n        bottom: badgeProps.$bottom,\r\n        left: badgeProps.$left,\r\n        right: badgeProps.$right,\r\n      }}\r\n    >\r\n      <HoverToolTip\r\n        distance={2}\r\n        direction={direction || 'right'}\r\n        content={content || <div />}\r\n      >\r\n        <Badge\r\n          $absolute={false}\r\n          $size={badgeProps.$size}\r\n          $color={badgeProps.$color}\r\n          $style={badgeProps.style}\r\n        >\r\n          {children}\r\n        </Badge>\r\n      </HoverToolTip>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Badge } from '../../elements/badge'\r\nimport { CheckKVT } from '../RoundResultRenderer'\r\nimport X from '../../icons/svg/lorc/split-cross.svg'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tBaseStats } from '../../game/Stats/type'\r\nimport { tStatusType } from '../../game/Status/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface SkillChecksPropsT {\r\n  stat: keyof tBaseStats\r\n  skill?: tSkill\r\n  rolls?: number\r\n  results?: boolean[]\r\n}\r\nexport const SkillChecks = (props: SkillChecksPropsT) => {\r\n  const { stat, skill, rolls, results = [] } = props\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        justifyContent: 'center',\r\n        padding: '0px 0 24px 0',\r\n      }}\r\n    >\r\n      {Array(skill?.rolls || rolls || 0)\r\n        .fill(null)\r\n        .map((_, i) => (\r\n          <SkillCheck\r\n            key={i}\r\n            skill={skill}\r\n            perfect={\r\n              results.every((r) => r === true) && results.length === rolls\r\n            }\r\n            check={{ label: stat, result: results[i] }}\r\n          />\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface SkillCheckT {\r\n  check: CheckKVT\r\n  size?: number\r\n  iconSize?: number\r\n  padding?: number\r\n  perfect?: boolean\r\n  crit?: boolean\r\n  skill?: tSkill\r\n}\r\nexport const SkillCheck = (props: SkillCheckT) => {\r\n  const {\r\n    check,\r\n    size = 36,\r\n    iconSize,\r\n    padding = 12,\r\n    perfect = false,\r\n    skill,\r\n    crit,\r\n  } = props\r\n  const colors = getPerfectStatusColors(skill?.perfectStatus || [], crit)\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: `0px ${padding}px`,\r\n        opacity: check.result === undefined ? 0.75 : 1,\r\n      }}\r\n    >\r\n      <Badge\r\n        $absolute={false}\r\n        $size={size}\r\n        $style={{\r\n          borderColor: perfect ? colors.border : undefined,\r\n          background: perfect ? colors.background : Theme.darkBgColorSolid,\r\n        }}\r\n      >\r\n        <Icon\r\n          src={STAT_ICONS[check.label as keyof tBaseStats]}\r\n          fill={perfect ? colors.fill : getColor(check.result)}\r\n          size={iconSize || size - 4}\r\n        />\r\n        {check.result === false && (\r\n          <Icon\r\n            src={X}\r\n            shadow\r\n            fill={'lightcoral'}\r\n            size={size - 4}\r\n            style={{ position: 'absolute', top: 0 }}\r\n          />\r\n        )}\r\n      </Badge>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst getColor = (result: boolean | undefined) => {\r\n  if (result === true) return 'white'\r\n  if (result === false) return 'rgba(255,255,255,0.3)'\r\n  return 'rgba(255,255,255,0.3)'\r\n}\r\ninterface SCColorsT {\r\n  border: string\r\n  background: string\r\n  fill: string\r\n}\r\nexport const getPerfectStatusColors = (\r\n  status: tStatusType[],\r\n  crit: boolean = false,\r\n): SCColorsT => {\r\n  if (crit) {\r\n    return {\r\n      border: '#white',\r\n      background: '#00134a',\r\n      fill: '#d9e3ff',\r\n    }\r\n  }\r\n  if (status.includes('burning')) {\r\n    return {\r\n      border: '#ff9100',\r\n      background: '#5c2c00',\r\n      fill: '#d48a46',\r\n    }\r\n  }\r\n  if (status.includes('poisoned')) {\r\n    return {\r\n      border: '#00870f',\r\n      background: '#001202',\r\n      fill: '#888f88',\r\n    }\r\n  }\r\n  if (status.includes('bleeding')) {\r\n    return {\r\n      border: '#ff0000',\r\n      background: '#120000',\r\n      fill: '#d19999',\r\n    }\r\n  }\r\n  if (status.includes('cursed-vigor')) {\r\n    return {\r\n      border: '#6400a3',\r\n      background: '#10001a',\r\n      fill: '#b093c2',\r\n    }\r\n  }\r\n  if (status.includes('frozen')) {\r\n    return {\r\n      border: '#009ac4',\r\n      background: '#00161c',\r\n      fill: '#a5c8d1',\r\n    }\r\n  }\r\n\r\n  return {\r\n    border: '#ffd400',\r\n    background: '#261d00',\r\n    fill: '#ede5be',\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tStats } from '../../game/Stats/type'\r\nimport {\r\n  DEFENSE_BONUS_KEYS,\r\n  STAT_KEY_LABELS,\r\n  DAMAGE_BONUS_KEYS,\r\n  STAT_BONUS_KEYS,\r\n  HEALTH_FOCUS_BONUS_KEYS,\r\n} from '../../game/Stats/constants'\r\nimport { tCharacterTag } from '../../game/Character/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface StatsPreviewPropsT {\r\n  stats: tStats\r\n}\r\n\r\nconst defense_key_colors: any = {\r\n  armor: Theme.physicalColor,\r\n  resistance: Theme.magicColor,\r\n  evasion: Theme.evasionColor,\r\n}\r\n\r\nexport const StatsPreview = (props: StatsPreviewPropsT) => {\r\n  const { stats } = props\r\n  return (\r\n    <FlexContainer $direction='column' style={{ fontSize: 14 }}>\r\n      {DEFENSE_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span\r\n              key={key}\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: defense_key_colors[key],\r\n              }}\r\n            >\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {DAMAGE_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span key={key} style={{ textTransform: 'capitalize' }}>\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {HEALTH_FOCUS_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span key={key} style={{ textTransform: 'capitalize' }}>\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {STAT_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] > 0 && (\r\n            <span\r\n              key={key}\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: Theme.evasionColor,\r\n              }}\r\n            >\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {STAT_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] < 0 && (\r\n            <span\r\n              key={key}\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: 'lightcoral',\r\n              }}\r\n            >\r\n              {stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {(Object.keys(stats.damageModifiers) as tCharacterTag[])\r\n        .filter((tag) => stats.damageModifiers[tag] > 0)\r\n        .map((tag) => (\r\n          <span key={tag}>\r\n            +{Math.floor(stats.damageModifiers[tag] * 100)}% damage against{' '}\r\n            {tag}\r\n          </span>\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { styled } from 'styletron-react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { tItemRarity } from '../../game/Item/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { ARMOR_TYPE_ICONS, WEAPON_TYPE_ICONS } from '../../icons/maps'\r\nimport { Theme } from '../../theme'\r\nimport { Icon } from '../Icon'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { StatsPreview } from '../StatsPreview'\r\nimport Ranged from '../../icons/svg/lorc/high-shot.svg'\r\nimport Melee from '../../icons/svg/lorc/battered-axe.svg'\r\nimport Breakable from '../../icons/svg/lorc/broken-bone.svg'\r\nimport { Button } from '../../elements/button'\r\n\r\nexport const getDamageColor = (weapon: tWeapon) => {\r\n  if (weapon.damage.type === 'physical') return 'lightblue'\r\n  if (weapon.damage.type === 'magic') return 'plum'\r\n  return 'white'\r\n}\r\n\r\nexport interface ItemCardPropsT {\r\n  item: tArmor | tWeapon | tConsumable\r\n  showBuyButton?: boolean\r\n  cost?: number\r\n  buyText?: string\r\n  onBuyClick?: () => void\r\n}\r\n\r\ninterface ItemTitlePropsT {\r\n  $rarity: tItemRarity\r\n}\r\nconst ItemTitle = styled('span', (props: ItemTitlePropsT) => {\r\n  const { $rarity } = props\r\n  return {\r\n    color: ITEM_RARITY_COLORS[$rarity],\r\n    fontFamily: Theme.titleFont,\r\n    fontSize: '18px',\r\n    textShadow: '1px 1px 3px black',\r\n    textTransform: 'capitalize',\r\n  }\r\n})\r\nconst ItemSubtitle = styled('div', {\r\n  color: 'rgba(255,255,255,0.3)',\r\n  display: 'flex',\r\n  width: '100%',\r\n  justifyContent: 'space-between',\r\n  textTransform: 'capitalize',\r\n  fontSize: '13px',\r\n})\r\n\r\nexport const ItemCard = (props: ItemCardPropsT) => {\r\n  const { item, cost, showBuyButton, buyText, onBuyClick } = props\r\n  const isArmor = item.itemType === 'armor'\r\n  const isWeapon = item.itemType === 'weapon'\r\n  const isConsumable = item.itemType === 'consumable'\r\n  const rarityColor = ITEM_RARITY_COLORS[item.rarity]\r\n  const weapon = item as tWeapon\r\n  const armor = item as tArmor\r\n  const consumable = item as tConsumable\r\n  const skill = weapon.skills\r\n    ? weapon.skills[0]\r\n    : armor.skills\r\n    ? armor.skills[0]\r\n    : undefined\r\n  const skills = consumable.skill\r\n    ? [consumable.skill]\r\n    : weapon.skills\r\n    ? weapon.skills\r\n    : armor.skills\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ border: '1px solid black', width: 240, textAlign: 'left' }}\r\n    >\r\n      <BoxContainer\r\n        style={{\r\n          borderWidth: 2,\r\n          borderColor: rarityColor,\r\n        }}\r\n        substyle={{\r\n          border: `1px solid ${Theme.darkBgColorSolid}`,\r\n          background: Theme.otherGrey,\r\n          padding: 0,\r\n          boxShadow: 'none',\r\n        }}\r\n      >\r\n        <FlexContainer $full $direction='column'>\r\n          <FlexContainer\r\n            style={{\r\n              height: 56,\r\n              whiteSpace: 'nowrap',\r\n              alignItems: 'center',\r\n              background: Theme.mediumBgColor,\r\n              padding: '0px 16px 0 8px',\r\n              boxShadow: '0px 2px 3px black',\r\n              marginBottom: 8,\r\n              marginTop: -2,\r\n              marginRight: -1,\r\n              marginLeft: -1,\r\n            }}\r\n          >\r\n            {isWeapon && (\r\n              <Icon\r\n                src={WEAPON_TYPE_ICONS[weapon.type]}\r\n                fill={rarityColor}\r\n                size={32}\r\n                style={{ marginRight: 10 }}\r\n                shadow\r\n              />\r\n            )}\r\n            {isArmor && (\r\n              <Icon\r\n                src={ARMOR_TYPE_ICONS[armor.type]}\r\n                fill={rarityColor}\r\n                size={32}\r\n                style={{ marginRight: 10 }}\r\n                shadow\r\n              />\r\n            )}\r\n            <FlexContainer $direction='column' $full>\r\n              <ItemTitle $rarity={item.rarity}>{item.name}</ItemTitle>\r\n              <ItemSubtitle>\r\n                <span>\r\n                  {item.rarity} {weapon.type}\r\n                </span>\r\n                <span>{weapon.twoHand && '2-hand'}</span>\r\n              </ItemSubtitle>\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n          <FlexContainer $direction='column' style={{ padding: 4 }}>\r\n            {skill && (\r\n              <FlexContainer style={{ marginBottom: 8, padding: 4 }}>\r\n                <FullContainer />\r\n                {Array(skill.rolls)\r\n                  .fill(null)\r\n                  .map((_, i) => (\r\n                    <SkillCheck\r\n                      key={i}\r\n                      check={{ label: weapon.stat, result: true }}\r\n                      size={18}\r\n                      iconSize={18}\r\n                      padding={4}\r\n                      skill={skill}\r\n                    />\r\n                  ))}\r\n                <FullContainer />\r\n              </FlexContainer>\r\n            )}\r\n            <BoxContainer\r\n              dark\r\n              substyle={{\r\n                minHeight: 120,\r\n                textAlign: 'left',\r\n              }}\r\n            >\r\n              <FlexContainer>\r\n                <FlexContainer $full $direction='column'>\r\n                  {weapon.damage && (\r\n                    <FlexContainer\r\n                      style={{\r\n                        height: 28,\r\n                        marginBottom: 4,\r\n                        alignItems: 'flex-end',\r\n                      }}\r\n                    >\r\n                      <span\r\n                        style={{\r\n                          color: getDamageColor(weapon),\r\n                          fontWeight: 'bolder',\r\n                          marginRight: 8,\r\n                          fontSize: 32,\r\n                          lineHeight: '28px',\r\n                        }}\r\n                      >\r\n                        {weapon.damage.value}\r\n                      </span>\r\n                      <span\r\n                        style={{\r\n                          textTransform: 'capitalize',\r\n                          color: 'rgba(255,255,255,0.3)',\r\n                        }}\r\n                      >\r\n                        {weapon.damage.type} Damage\r\n                      </span>\r\n                    </FlexContainer>\r\n                  )}\r\n                  {skills && (\r\n                    <span\r\n                      style={{\r\n                        color: 'plum',\r\n                        fontSize: 16,\r\n                        marginBottom: 4,\r\n                      }}\r\n                    >\r\n                      {skills.map((skill, i) => (\r\n                        <span key={i}>\r\n                          {i > 0 ? ', ' : ''}\r\n                          {skill.name}\r\n                        </span>\r\n                      ))}\r\n                    </span>\r\n                  )}\r\n                  <div style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n                    {weapon.stats && <StatsPreview stats={weapon.stats} />}\r\n                    {weapon.immunities && (\r\n                      <FlexContainer\r\n                        $direction='column'\r\n                        style={{ fontSize: 14 }}\r\n                      >\r\n                        {weapon.immunities.some((s) => s.includes('cursed')) &&\r\n                          'Cursed Immunity'}\r\n                        {weapon.immunities\r\n                          .filter((s) => !s.includes('cursed'))\r\n                          .map((status) => (\r\n                            <span\r\n                              style={{\r\n                                textTransform: 'capitalize',\r\n                                fontSize: 14,\r\n                              }}\r\n                            >\r\n                              {status} immunity\r\n                            </span>\r\n                          ))}\r\n                      </FlexContainer>\r\n                    )}\r\n                  </div>\r\n                </FlexContainer>\r\n                {isWeapon && (\r\n                  <FlexContainer\r\n                    $direction='column'\r\n                    style={{ alignItems: 'center' }}\r\n                  >\r\n                    <Icon\r\n                      src={weapon.damage.range === 'melee' ? Melee : Ranged}\r\n                      size={16}\r\n                      fill='rgba(255,255,255,0.3)'\r\n                      style={{ marginBottom: 4 }}\r\n                    />\r\n\r\n                    {weapon.breakable && (\r\n                      <Icon src={Breakable} size={16} fill='gold' />\r\n                    )}\r\n                  </FlexContainer>\r\n                )}\r\n              </FlexContainer>\r\n            </BoxContainer>\r\n            {showBuyButton && (\r\n              <FlexContainer style={{ justifyContent: 'center', marginTop: 4 }}>\r\n                <Button\r\n                  onClick={onBuyClick}\r\n                  style={{ padding: '8px 16px', width: '100%' }}\r\n                >\r\n                  {buyText || `Buy (${cost || 0})`}\r\n                </Button>\r\n              </FlexContainer>\r\n            )}\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </BoxContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport Gold from '../../icons/svg/delapouite/coins.svg'\r\nimport XP from '../../icons/svg/lorc/laurel-crown.svg'\r\nimport { Icon } from '../Icon'\r\nimport { tEncounterReward } from '../../game/Encounter/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { ItemCard } from '../ItemCard'\r\nimport { Theme } from '../../theme'\r\n\r\nconst getItem = (\r\n  character: tProcessedCharacter,\r\n  item: tWeapon | tArmor,\r\n): tWeapon | tArmor | undefined => {\r\n  if (item.itemType === 'weapon') {\r\n    return character.weapon\r\n  } else {\r\n    const armor = item as tArmor\r\n    return character.armor.find((a) => a.resource === armor.resource)\r\n  }\r\n}\r\n\r\nexport interface CombatVictoryModalPropsT {\r\n  rewards: tEncounterReward\r\n  title: string\r\n  showOther?: boolean\r\n  onEquipClick: (characterId: string, item: tWeapon | tArmor) => void\r\n  onNextClick: () => void\r\n}\r\n\r\nexport const CombatVictoryModalPure = (props: CombatVictoryModalPropsT) => {\r\n  const { rewards, title, showOther = true, onEquipClick, onNextClick } = props\r\n  const { party } = usePartyContext()\r\n  const [items, setItems] = useState(rewards.items)\r\n  const first = items[0]\r\n\r\n  const next = () => {\r\n    if (\r\n      (items.length === 1 && rewards.items.length > 0) ||\r\n      rewards.items.length === 0\r\n    ) {\r\n      onNextClick()\r\n    } else {\r\n      setItems((i) => {\r\n        const [first, ...rest] = i\r\n        return rest\r\n      })\r\n    }\r\n  }\r\n\r\n  const equip = (characterId: string) => {\r\n    if (first) {\r\n      onEquipClick(characterId, first as tArmor | tWeapon)\r\n      next()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ textAlign: 'center', minHeight: 420 }}\r\n    >\r\n      <h1 style={{ fontFamily: Theme.titleFont, textAlign: 'center' }}>\r\n        {title}\r\n      </h1>\r\n      <FlexContainer $direction='column' style={{ color: 'white' }}>\r\n        {showOther && (\r\n          <>\r\n            <FlexContainer style={{ marginBottom: 16 }}>\r\n              <FlexContainer>\r\n                <Icon src={Gold} size={18} style={{ marginRight: 8 }} />\r\n                <span>{rewards.gold} Gold</span>\r\n              </FlexContainer>\r\n              <FullContainer />\r\n              <FlexContainer>\r\n                <Icon src={XP} size={18} style={{ marginRight: 8 }} />\r\n                <span>{rewards.xp} XP</span>\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          </>\r\n        )}\r\n        {first && (\r\n          <FlexContainer $direction='column'>\r\n            <FlexContainer style={{ marginBottom: 16 }}>\r\n              <FullContainer />\r\n              <FlexContainer $direction='column'>\r\n                <ItemCard item={first} />\r\n                <span\r\n                  style={{\r\n                    marginTop: 8,\r\n                    color: 'rgba(255,255,255,0.3)',\r\n                    fontWeight: 'bold',\r\n                    fontSize: 12,\r\n                  }}\r\n                >\r\n                  1 of {items.length}\r\n                </span>\r\n              </FlexContainer>\r\n              <FullContainer />\r\n            </FlexContainer>\r\n            {(first.itemType === 'armor' || first.itemType === 'weapon') && (\r\n              <FlexContainer\r\n                style={{ marginBottom: 8, justifyContent: 'center' }}\r\n              >\r\n                {party.characters.map((character) => (\r\n                  <HoverToolTip\r\n                    key={character.id}\r\n                    direction='down'\r\n                    content={\r\n                      <>\r\n                        {getItem(character, first as tWeapon | tArmor) && (\r\n                          <ItemCard\r\n                            item={\r\n                              getItem(character, first as tWeapon | tArmor) as\r\n                                | tWeapon\r\n                                | tArmor\r\n                            }\r\n                          />\r\n                        )}\r\n                      </>\r\n                    }\r\n                  >\r\n                    <Button\r\n                      style={{ padding: 8 }}\r\n                      onClick={() => equip(character.id)}\r\n                    >\r\n                      Equip to {character.name}\r\n                    </Button>\r\n                  </HoverToolTip>\r\n                ))}\r\n              </FlexContainer>\r\n            )}\r\n          </FlexContainer>\r\n        )}\r\n      </FlexContainer>\r\n      <FullContainer />\r\n      <Button\r\n        onClick={() => {\r\n          next()\r\n        }}\r\n      >\r\n        {items.length === 0 ? 'Close' : 'Next'}\r\n      </Button>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useMemo, useEffect, useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport Gold from '../../icons/svg/delapouite/coins.svg'\r\nimport XP from '../../icons/svg/lorc/laurel-crown.svg'\r\nimport { Icon } from '../Icon'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { consolidateRewards } from '../../game/Other/util'\r\nimport { commitRewards } from '../../game/Party/util'\r\nimport { tEncounterReward } from '../../game/Encounter/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { ItemCard } from '../ItemCard'\r\nimport { Theme } from '../../theme'\r\nimport { CombatVictoryModalPure } from './pure'\r\nimport { tItem } from '../../game/Item/type'\r\n\r\nconst getItem = (\r\n  character: tProcessedCharacter,\r\n  item: tWeapon | tArmor,\r\n): tWeapon | tArmor | undefined => {\r\n  if (item.itemType === 'weapon') {\r\n    return character.weapon\r\n  } else {\r\n    const armor = item as tArmor\r\n    return character.armor.find((a) => a.resource === armor.resource)\r\n  }\r\n}\r\n\r\nexport interface CombatVictoryModalPropsT {\r\n  rewards: tEncounterReward[]\r\n}\r\n\r\nexport const CombatVictoryModal = (props: CombatVictoryModalPropsT) => {\r\n  const { rewards } = props\r\n  const { rawParty, party, updateParty, equipItem } = usePartyContext()\r\n  const { completeCurrent } = useGameStateContext()\r\n  const { close } = useModalContext()\r\n  const consolidatedRewards = useMemo(() => consolidateRewards(rewards), [\r\n    rewards,\r\n  ])\r\n\r\n  const next = () => {\r\n    close()\r\n    completeCurrent()\r\n  }\r\n  const equip = (characterId: string, item: tArmor | tWeapon) => {\r\n    equipItem(characterId, item)\r\n    next()\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateParty(commitRewards(rawParty, consolidatedRewards))\r\n  }, [])\r\n\r\n  return (\r\n    <CombatVictoryModalPure\r\n      rewards={consolidatedRewards}\r\n      title='You Win!'\r\n      onEquipClick={equip}\r\n      onNextClick={next}\r\n    />\r\n  )\r\n}\r\n","import { tEncounterReward } from '../Encounter/type'\r\nimport { ZERO_REWARD } from '../Encounter/constants'\r\n\r\nexport const consolidateRewards = (\r\n  rewards: tEncounterReward[],\r\n): tEncounterReward => {\r\n  return rewards.reduce((res, reward) => {\r\n    return {\r\n      gold: res.gold + reward.gold,\r\n      xp: res.xp + reward.xp,\r\n      items: [...res.items, ...reward.items],\r\n      status: [...res.status, ...reward.status],\r\n      immunities: [...res.immunities, ...reward.immunities],\r\n    }\r\n  }, ZERO_REWARD)\r\n}\r\n","import { tQueue } from './type'\r\nimport { tProcessedCharacter, tCharacter } from '../Character/type'\r\nimport { processCharacter } from '../Character/util'\r\n\r\nconst AGILITY_OFFSET = 120\r\n\r\nexport const makeCombatQueue = (characters: tProcessedCharacter[]): tQueue => {\r\n  const sortedCharacters = characters.sort(\r\n    (a, b) => b.stats.agility - a.stats.agility,\r\n  )\r\n  return validateQueue(\r\n    sortedCharacters.reduce(\r\n      (r, c, i) => ({\r\n        ...r,\r\n        [c.id]: AGILITY_OFFSET / 2 - c.stats.agility,\r\n      }),\r\n      {},\r\n    ),\r\n    characters,\r\n  )\r\n}\r\n\r\nexport const getMax = (queue: tQueue): number => {\r\n  return Object.keys(queue).reduce((r: number, id: string) => {\r\n    if (r < queue[id]) return queue[id]\r\n    return r\r\n  }, Number.NEGATIVE_INFINITY)\r\n}\r\n\r\nexport const getMin = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): number => {\r\n  if (characters.length === 0) throw new Error('track this call down')\r\n  return Object.keys(queue).reduce((min: number, id: string) => {\r\n    if (queue[id] < min) {\r\n      const c = characters.find((c) => c.id === id) as tProcessedCharacter\r\n      if (c.stats.queueConsolidationModifier > 0) {\r\n        return queue[id]\r\n      } else {\r\n        return min\r\n      }\r\n    }\r\n    return min\r\n  }, Number.POSITIVE_INFINITY)\r\n}\r\n\r\nexport const consolidateQueue = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  let min = getMin(queue, characters)\r\n  return Object.keys(queue).reduce((r, id) => {\r\n    const character = characters.find((c) => c.id === id) as tCharacter\r\n    const offset = character.stats.queueConsolidationModifier * min\r\n    return {\r\n      ...r,\r\n      [id]: queue[id] - offset,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const shiftQueue = (\r\n  queue: tQueue,\r\n  character: tProcessedCharacter,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  const ret = consolidateQueue(\r\n    {\r\n      ...queue,\r\n      [character.id]: AGILITY_OFFSET - character.stats.agility,\r\n    },\r\n    characters,\r\n  )\r\n  return ret\r\n}\r\n\r\nexport const getFirst = (queue: tQueue): string => {\r\n  let min = Number.POSITIVE_INFINITY\r\n  let key = Object.keys(queue)[0]\r\n  Object.keys(queue).forEach((id) => {\r\n    if (min > queue[id]) {\r\n      min = queue[id]\r\n      key = id\r\n    }\r\n  })\r\n  return key\r\n}\r\n\r\nexport const validateQueue = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  return consolidateQueue(\r\n    characters.reduce((r, c) => {\r\n      return c.health <= 0 ? r : { ...r, [c.id]: queue[c.id] }\r\n    }, {}),\r\n    characters,\r\n  )\r\n}\r\n\r\nexport const getSortedIds = (queue: tQueue): string[] => {\r\n  return Object.keys(queue).sort((a, b) => queue[a] - queue[b])\r\n}\r\n\r\nexport const commitQueueUpdates = (\r\n  queue: tQueue,\r\n  source: tProcessedCharacter,\r\n  characters: tCharacter[],\r\n): tQueue => {\r\n  const pcs = characters.map((c) => processCharacter(c))\r\n  const shiftedQueue = shiftQueue(queue, source, pcs)\r\n  const ret = validateQueue(\r\n    Object.keys(shiftedQueue).reduce((q, id) => {\r\n      const character = pcs.find((c) => c.id === id)\r\n      return {\r\n        ...q,\r\n        [id]:\r\n          character?.stats?.queueValueSet !== undefined\r\n            ? character?.stats?.queueValueSet\r\n            : shiftedQueue[id],\r\n      }\r\n    }, {}),\r\n    pcs,\r\n  )\r\n  return ret\r\n}\r\n","import { tStatusType } from '../Status/type'\r\n\r\nexport type tPerfectKey = tStatusType | 'splash' | 'pierce' | 'heal'\r\nexport const PERFECT_DISPLAY_INFO: Partial<Record<tPerfectKey, string>> = {\r\n  splash: 'Splash Damage',\r\n  pierce: 'Ignore Resistances',\r\n  bleeding: 'Bleed',\r\n  burning: 'Burn',\r\n  frozen: 'Freeze',\r\n  poisoned: 'Poison',\r\n  targeted: 'Taunt Enemies',\r\n  stunned: 'Stun',\r\n  evasive: 'Become Evasive',\r\n  heal: 'Heal',\r\n  protected: 'Protect',\r\n  'attack-up': 'Attack Up',\r\n  'speed-down': 'Speed Down',\r\n  rushed: 'Rush Character',\r\n  reset: 'Reset Character',\r\n  cure: 'Cure Character',\r\n}\r\n","import { tProcessedCharacter } from '../Character/type'\r\nimport {\r\n  tSkill,\r\n  tSourceSkillResult,\r\n  tTargetSkillResult,\r\n  tSkillResult,\r\n  tSkillTarget,\r\n  tSkillTargetType,\r\n} from './type'\r\nimport { resolveCheck } from '../Roll/util'\r\nimport {\r\n  getRawDamage,\r\n  getReflectedDamage,\r\n  isCharacter,\r\n  hasStatus,\r\n  getDamageResistance,\r\n} from '../Character/util'\r\nimport { tProcessedParty } from '../Party/type'\r\nimport { isParty } from '../Party/util'\r\nimport { tDamage } from '../Damage/type'\r\nimport { tPerfectKey, PERFECT_DISPLAY_INFO } from './constants'\r\nimport { noneg } from '../../util'\r\n\r\nexport const getSourceSkillResult = (\r\n  source: tProcessedCharacter,\r\n  skill: tSkill,\r\n  inspirationUsed: number = 0,\r\n): tSourceSkillResult => {\r\n  const rollResults = Array(skill.rolls)\r\n    .fill(null)\r\n    .map((_, i) =>\r\n      i < inspirationUsed\r\n        ? true\r\n        : resolveCheck(\r\n            source,\r\n            skill.weaponStatOverride || source.weapon.stat,\r\n            skill.offset,\r\n          ),\r\n    )\r\n  const passedCount = rollResults.filter((r) => r).length\r\n  const perfect = passedCount === skill.rolls\r\n  const criticalHitSuccess = resolveCheck(source, 'criticalChance')\r\n  const rollDamageModifier = skill.rolls > 0 ? passedCount / skill.rolls : 1\r\n  const damageModifier =\r\n    source.stats.attackDamageModifier * skill.damageModifier\r\n  const rawDamage = {\r\n    ...source.weapon.damage,\r\n    value: Math.round(\r\n      ((skill.weaponDamageOverride || source.weapon.damage.value) +\r\n        source.stats.attackDamageOffset) *\r\n        damageModifier *\r\n        rollDamageModifier *\r\n        (perfect && criticalHitSuccess ? 1.2 : 1),\r\n    ),\r\n    range: skill.weaponRangeOverride || source.weapon.damage.range,\r\n  }\r\n  return {\r\n    source,\r\n    skill,\r\n    inspirationUsed: inspirationUsed || 0,\r\n    rollResults,\r\n    passedCount,\r\n    perfect,\r\n    accuracySuccess:\r\n      skill.damage && skill.rolls > 0 ? passedCount > 0 : perfect,\r\n    criticalHitSuccess: perfect && criticalHitSuccess,\r\n    weaponDidBreak:\r\n      rollResults.every((r) => r === false) && source.weapon.breakable,\r\n    rawDamage,\r\n    splashDamage: {\r\n      ...source.weapon.damage,\r\n      value:\r\n        perfect && skill.perfectSplash\r\n          ? Math.round(rawDamage.value * skill.splashDamageModifier)\r\n          : 0,\r\n      range: skill.weaponRangeOverride || source.weapon.damage.range,\r\n    },\r\n    ignoreResistance: perfect && skill.perfectPierce,\r\n    addedStatus: perfect ? skill.perfectStatus : [],\r\n  }\r\n}\r\n\r\nexport const getTargetSkillResult = (\r\n  target: tProcessedCharacter,\r\n  sourceResult: tSourceSkillResult,\r\n): tTargetSkillResult => {\r\n  const dodgeResult = resolveCheck(target, 'evasion')\r\n  const dodgeSuccess = hasStatus(target, 'evasive')\r\n    ? !sourceResult.perfect\r\n    : !sourceResult.perfect && dodgeResult\r\n  const damage = getRawDamage(\r\n    sourceResult.source,\r\n    target,\r\n    sourceResult.rawDamage,\r\n  )\r\n  return {\r\n    ...sourceResult,\r\n    target,\r\n    dodgeSuccess,\r\n    totalDamage: {\r\n      ...damage,\r\n      value: dodgeSuccess ? 0 : damage.value,\r\n    },\r\n    reflectedDamage: getReflectedDamage(target, damage),\r\n    loggedDamgge: {\r\n      ...damage,\r\n      value: dodgeSuccess\r\n        ? 0\r\n        : noneg(damage.value - getDamageResistance(target, damage)),\r\n    },\r\n  }\r\n}\r\n\r\nexport const getSkillResult = (\r\n  source: tProcessedCharacter,\r\n  targets: tProcessedCharacter[],\r\n  skill: tSkill,\r\n): tSkillResult => {\r\n  const sourceResult = getSourceSkillResult(source, skill)\r\n  return {\r\n    sourceResult,\r\n    targetResults: targets.map((target) =>\r\n      getTargetSkillResult(target, sourceResult),\r\n    ),\r\n  }\r\n}\r\n\r\nexport const resolveSkillTarget = (\r\n  target: tSkillTarget,\r\n): tProcessedCharacter[] => {\r\n  switch (target.type) {\r\n    case 'single':\r\n      return target.character ? [target.character] : []\r\n    case 'ally':\r\n      return target.character ? [target.character] : []\r\n    case 'self':\r\n      return target.character ? [target.character] : []\r\n    case 'party':\r\n      return target.party?.characters || []\r\n    case 'group':\r\n      return target.party?.characters || []\r\n    default:\r\n      return []\r\n  }\r\n}\r\n\r\nexport const makeSkillTarget = (\r\n  type: tSkillTargetType,\r\n  target: tProcessedCharacter | tProcessedParty,\r\n): tSkillTarget => {\r\n  return {\r\n    type,\r\n    character: isCharacter(target)\r\n      ? (target as tProcessedCharacter)\r\n      : undefined,\r\n    party: isParty(target) ? (target as tProcessedParty) : undefined,\r\n  }\r\n}\r\n\r\nexport const getSkillTargetOptions = (\r\n  source: tProcessedCharacter,\r\n  sourceParty: tProcessedParty,\r\n  targetParty: tProcessedParty,\r\n  skill: tSkill,\r\n): tProcessedCharacter[] | tProcessedParty[] => {\r\n  switch (skill.targetType) {\r\n    case 'single':\r\n      return targetParty.characters.filter((c) => c.health > 0)\r\n    case 'ally':\r\n      return sourceParty.characters.filter((c) => c.health > 0)\r\n    case 'group':\r\n      return [targetParty]\r\n    case 'party':\r\n      return [sourceParty]\r\n    case 'self':\r\n      return [source]\r\n    default:\r\n      return []\r\n  }\r\n}\r\n\r\nexport const getSkillDamage = (\r\n  skill: tSkill,\r\n  source: tProcessedCharacter,\r\n): tDamage => {\r\n  return {\r\n    ...source.weapon.damage,\r\n    value:\r\n      ((skill.weaponDamageOverride || source.weapon.damage.value) +\r\n        source.stats.attackDamageOffset) *\r\n      (skill.damageModifier + source.stats.attackDamageModifier / 100),\r\n  }\r\n}\r\n\r\nexport const getPerfectKeys = (skill: tSkill): tPerfectKey[] => {\r\n  let base: tPerfectKey[] = [...skill.perfectStatus]\r\n  if (skill.perfectSplash) base = [...base, 'splash']\r\n  if (skill.perfectPierce) base = [...base, 'pierce']\r\n  if (skill.healing) base = [...base, 'heal']\r\n  return base\r\n}\r\n\r\nexport const getPerfectText = (\r\n  skill: tSkill,\r\n  character: tProcessedCharacter,\r\n): string => {\r\n  const perfectKeys = getPerfectKeys(skill)\r\n  const rawDamage = getSkillDamage(skill, character)\r\n\r\n  return perfectKeys.reduce((res, key, i) => {\r\n    let pre = `${res}${i > 0 ? ',' : ''}`\r\n    const text = PERFECT_DISPLAY_INFO[key]\r\n    switch (key) {\r\n      case 'splash':\r\n        return `${pre} ${Math.floor(skill.splashDamageModifier * 100)}% ${text}`\r\n      case 'heal':\r\n        return `${pre} ${text} ${character.stats.consumableHealthGainOffset} HP`\r\n      default:\r\n        return `${pre} ${text}`\r\n    }\r\n  }, '')\r\n}\r\n","import { tParty } from '../Party/type'\r\nimport { tCharacter } from '../Character/type'\r\nimport { updateCharacter, getOtherCharacters } from '../Party/util'\r\nimport { tQueue } from '../Queue/type'\r\nimport { tSkillResult, tSkillCommiterResult } from './type'\r\nimport {\r\n  commitDamage,\r\n  addMultipleStatus,\r\n  decrementStatusDurations,\r\n  processCharacter,\r\n  checkStatus,\r\n} from '../Character/util'\r\nimport { noneg } from '../../util/noneg'\r\nimport { commitQueueUpdates } from '../Queue/util'\r\nimport { PLAYER_PARTY_ID } from '../Party/constants'\r\n\r\nconst partyUpdater = (\r\n  party: tParty,\r\n  characterId: string,\r\n  updater: (c: tCharacter) => tCharacter,\r\n): tParty => {\r\n  return updateCharacter(party, characterId, updater)\r\n}\r\n\r\nexport const commitSkillResults = (\r\n  playerParty: tParty,\r\n  enemyParty: tParty,\r\n  queue: tQueue,\r\n) => (result: tSkillResult): tSkillCommiterResult => {\r\n  const { source } = result.sourceResult\r\n  result.targetResults.forEach((targetResult, index) => {\r\n    const { target } = targetResult\r\n    let sourceParty = [playerParty, enemyParty].find(\r\n      (p) => p.id === source.partyId,\r\n    ) as tParty\r\n    let targetParty = [playerParty, enemyParty].find(\r\n      (p) => p.id === target.partyId,\r\n    ) as tParty\r\n    const localUpdate = (\r\n      p: tParty,\r\n      id: string,\r\n      updater: (c: tCharacter) => tCharacter,\r\n    ) => {\r\n      if (p.id === sourceParty.id) {\r\n        sourceParty = partyUpdater(p, id, updater)\r\n        return\r\n      }\r\n      if (p.id === targetParty.id) {\r\n        targetParty = partyUpdater(p, id, updater)\r\n        return\r\n      }\r\n      throw new Error('bad party id')\r\n    }\r\n\r\n    if (index === 0) {\r\n      if (targetResult.weaponDidBreak) {\r\n        localUpdate(sourceParty, source.id, (c) => {\r\n          return {\r\n            ...c,\r\n            weapon: undefined,\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    // commit main damage\r\n    localUpdate(targetParty, target.id, (c) => {\r\n      return commitDamage(\r\n        c,\r\n        targetResult.totalDamage,\r\n        targetResult.ignoreResistance,\r\n      )\r\n    })\r\n\r\n    // commit main status\r\n    localUpdate(targetParty, target.id, (c) => {\r\n      return addMultipleStatus(c, targetResult.addedStatus)\r\n    })\r\n\r\n    // comit main heal\r\n    if (targetResult.skill.healing) {\r\n      localUpdate(targetParty, target.id, (c) => {\r\n        return {\r\n          ...c,\r\n          healthOffset: c.healthOffset - c.stats.consumableHealthGainOffset,\r\n        }\r\n      })\r\n    }\r\n\r\n    // commit splash damage\r\n    if (targetResult.splashDamage.value > 0) {\r\n      getOtherCharacters(targetParty, target.id).forEach((character) => {\r\n        localUpdate(targetParty, character.id, (c) => {\r\n          return commitDamage(c, targetResult.splashDamage, false)\r\n        })\r\n      })\r\n    }\r\n\r\n    // commit reflected damage\r\n    if (targetResult.reflectedDamage.value > 0) {\r\n      localUpdate(sourceParty, source.id, (c) => {\r\n        return commitDamage(c, targetResult.reflectedDamage, false)\r\n      })\r\n    }\r\n\r\n    // commet end-of-round actions\r\n    if (index === result.targetResults.length - 1) {\r\n      // source health regen\r\n      localUpdate(sourceParty, source.id, (c) => {\r\n        const pc = processCharacter(checkStatus(c))\r\n        return {\r\n          ...c,\r\n          healthOffset: noneg(c.healthOffset - pc.stats.healthRegeneration),\r\n          consumables: c.consumables.filter(\r\n            (i) => i.id !== targetResult.skill.consumableId,\r\n          ),\r\n        }\r\n      })\r\n    }\r\n\r\n    if (sourceParty.id === PLAYER_PARTY_ID) {\r\n      playerParty = sourceParty\r\n    } else {\r\n      enemyParty = sourceParty\r\n    }\r\n    if (targetParty.id === PLAYER_PARTY_ID) {\r\n      if (sourceParty.id !== targetParty.id) {\r\n        playerParty = targetParty\r\n      }\r\n    } else {\r\n      enemyParty = targetParty\r\n    }\r\n  })\r\n\r\n  return {\r\n    playerParty: {\r\n      ...playerParty,\r\n      characters: playerParty.characters.map((c) =>\r\n        decrementStatusDurations(checkStatus(c)),\r\n      ),\r\n    },\r\n    enemyParty: {\r\n      ...enemyParty,\r\n      characters: enemyParty.characters.map((c) =>\r\n        decrementStatusDurations(checkStatus(c)),\r\n      ),\r\n    },\r\n    queue: commitQueueUpdates(queue, source, [\r\n      ...playerParty.characters,\r\n      ...enemyParty.characters,\r\n    ]),\r\n  }\r\n}\r\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n} from 'react'\r\nimport { usePartyContext } from '../PartyContext'\r\nimport { v4 } from 'uuid'\r\nimport { useHistory } from 'react-router'\r\nimport { useModalContext } from '../ModalContext'\r\nimport { CombatVictoryModal } from '../../components/CombatVictoryModal'\r\nimport { tProcessedParty, tParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tSkill, tSkillResult, tSkillTarget } from '../../game/Skill/type'\r\nimport { tQueue } from '../../game/Queue/type'\r\nimport {\r\n  processParty,\r\n  makeParty,\r\n  getRolledRewards,\r\n} from '../../game/Party/util'\r\nimport {\r\n  processCharacter,\r\n  makeCharacter,\r\n  removeTemporaryStatus,\r\n} from '../../game/Character/util'\r\nimport { makeCombatQueue, getFirst, shiftQueue } from '../../game/Queue/util'\r\nimport {\r\n  makeSkillTarget,\r\n  resolveSkillTarget,\r\n  getSkillResult,\r\n} from '../../game/Skill/util'\r\nimport { commitSkillResults } from '../../game/Skill/committer'\r\nimport { getAIAction } from '../../game/AI/util'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface CombatContextT {\r\n  party: tProcessedParty\r\n  enemyParty: tProcessedParty\r\n  activeCharacter: tProcessedCharacter\r\n  characters: tProcessedCharacter[]\r\n  queue: tQueue\r\n  selectedSkill: tSkill | undefined\r\n  selectedTargets: tProcessedCharacter[]\r\n  roundResults: tSkillResult[]\r\n  activeRound: tSkillResult | undefined\r\n  isRunning: boolean\r\n  isRenderingResult: boolean\r\n  onSkillSelect: (skill: tSkill, consumableIndex?: number) => void\r\n  onTargetsSelect: (target: tProcessedCharacter | tProcessedParty) => void\r\n  reset: () => void\r\n  start: () => void\r\n  next: (nextTarget?: tProcessedCharacter | tProcessedParty) => void\r\n  commit: () => void\r\n  equipItemCombat: (characterId: string, item?: tArmor | tWeapon) => void\r\n}\r\nconst defaultValue: CombatContextT = {\r\n  party: processParty(makeParty(0, 0)),\r\n  enemyParty: processParty(makeParty(0, 0)),\r\n  activeCharacter: processCharacter(makeCharacter('executioner')),\r\n  characters: [],\r\n  queue: {},\r\n  selectedSkill: undefined,\r\n  selectedTargets: [],\r\n  roundResults: [],\r\n  activeRound: undefined,\r\n  isRunning: false,\r\n  isRenderingResult: false,\r\n  onSkillSelect: (skill: tSkill) => {},\r\n  onTargetsSelect: (target: tProcessedCharacter | tProcessedParty) => {},\r\n  reset: () => {},\r\n  start: () => {},\r\n  next: () => {},\r\n  commit: () => {},\r\n  equipItemCombat: (characterId, item) => {},\r\n}\r\nexport const CombatContext = createContext<CombatContextT>(defaultValue)\r\nexport const useCombatContext = () => useContext(CombatContext)\r\n\r\nexport interface CombatContextProviderPropsT {\r\n  children: JSX.Element\r\n  enemyParty: tParty\r\n  setEnemyParty: (party: tParty) => void\r\n}\r\nexport const CombatContextProvider = (props: CombatContextProviderPropsT) => {\r\n  const { children, setEnemyParty } = props\r\n  const { party, rawParty, updateParty, equipItem } = usePartyContext()\r\n  const { open } = useModalContext()\r\n  const history = useHistory()\r\n  const enemyParty = useMemo(() => {\r\n    return processParty(props.enemyParty)\r\n  }, [props.enemyParty])\r\n  const [isRunning, setIsRunning] = useState<boolean>(false)\r\n  const [isRenderingResult, setIsRenderingResult] = useState<boolean>(false)\r\n  const characters = useMemo(\r\n    () => [...party.characters, ...enemyParty.characters],\r\n    [party, enemyParty],\r\n  )\r\n  const [queue, setQueue] = useState<tQueue>(\r\n    makeCombatQueue([...party.characters, ...enemyParty.characters]),\r\n  )\r\n  const resultCommitter = useMemo(\r\n    () => commitSkillResults(rawParty, props.enemyParty, queue),\r\n    [rawParty, props.enemyParty, queue],\r\n  )\r\n  const [roundId, setRoundId] = useState<string>(v4())\r\n  const [roundResults, setRoundResults] = useState<tSkillResult[]>([])\r\n  const [activeRound, setActiveRound] = useState<tSkillResult | undefined>()\r\n  const [selectedTarget, setSelectedTarget] = useState<\r\n    tSkillTarget | undefined\r\n  >()\r\n  const [selectedSkill, setSelectedSkill] = useState<tSkill | undefined>()\r\n  const activeCharacter = useMemo(\r\n    () =>\r\n      characters.find(\r\n        (c) => c.health > 0 && c.id === getFirst(queue),\r\n      ) as tProcessedCharacter,\r\n    [queue, characters],\r\n  )\r\n\r\n  const start = () => {\r\n    setIsRunning(true)\r\n    setQueue(makeCombatQueue([...party.characters, ...enemyParty.characters]))\r\n    setRoundId(v4())\r\n    setActiveRound(undefined)\r\n    setIsRenderingResult(false)\r\n  }\r\n\r\n  const reset = () => {\r\n    setIsRunning(false)\r\n    setActiveRound(undefined)\r\n    setSelectedSkill(undefined)\r\n    setSelectedTarget(undefined)\r\n    setIsRenderingResult(false)\r\n    setRoundResults([])\r\n    setQueue({})\r\n  }\r\n\r\n  const equipItemCombat = (characterId: string, item?: tArmor | tWeapon) => {\r\n    if (item) {\r\n      equipItem(activeCharacter.id, item)\r\n    }\r\n    setQueue((q) =>\r\n      shiftQueue(q, activeCharacter, [\r\n        ...party.characters,\r\n        ...enemyParty.characters,\r\n      ]),\r\n    )\r\n    completeRound()\r\n  }\r\n\r\n  const next = (nextTarget?: tProcessedCharacter | tProcessedParty) => {\r\n    if (selectedSkill) {\r\n      const roundTarget = nextTarget\r\n        ? makeSkillTarget(selectedSkill.targetType, nextTarget)\r\n        : selectedTarget\r\n      if (!selectedSkill || !roundTarget) return\r\n      const results = getSkillResult(\r\n        activeCharacter,\r\n        resolveSkillTarget(roundTarget).filter((c) => c.health > 0),\r\n        selectedSkill,\r\n      )\r\n      setActiveRound(results)\r\n      setSelectedSkill(undefined)\r\n      setSelectedTarget(undefined)\r\n      setIsRenderingResult(true)\r\n    }\r\n  }\r\n\r\n  const onSkillSelect = (skill: tSkill, consumableIndex?: number) => {\r\n    setSelectedSkill(skill)\r\n    if (skill.targetType !== selectedSkill?.targetType) {\r\n      setSelectedTarget(undefined)\r\n    }\r\n  }\r\n\r\n  const onTargetsSelect = (target: tProcessedCharacter | tProcessedParty) => {\r\n    if (!selectedSkill) return\r\n    setSelectedTarget(makeSkillTarget(selectedSkill.targetType, target))\r\n  }\r\n\r\n  const completeRound = () => {\r\n    setRoundId(v4())\r\n    setActiveRound(undefined)\r\n    setIsRenderingResult(false)\r\n  }\r\n\r\n  const commit = useCallback(() => {\r\n    if (!activeRound) return\r\n    const result = resultCommitter(activeRound)\r\n    setRoundResults((r) => [...r, activeRound])\r\n    setEnemyParty(result.enemyParty)\r\n    updateParty(result.playerParty)\r\n    setQueue(result.queue)\r\n\r\n    completeRound()\r\n  }, [activeRound, queue])\r\n\r\n  const execEnemyTurn = (skill: tSkill, target: tSkillTarget) => {\r\n    const result = getSkillResult(\r\n      activeCharacter,\r\n      resolveSkillTarget(target),\r\n      skill,\r\n    )\r\n    setActiveRound(result)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activeCharacter && isRunning) {\r\n      if (activeCharacter.partyId === enemyParty.id) {\r\n        const { skill, target } = getAIAction(\r\n          activeCharacter,\r\n          party,\r\n          enemyParty,\r\n        )\r\n        execEnemyTurn(skill, makeSkillTarget(skill.targetType, target))\r\n      } else {\r\n        setSelectedSkill(activeCharacter.skills[0])\r\n      }\r\n    }\r\n  }, [roundId])\r\n\r\n  useEffect(() => {\r\n    if (!isRunning) return\r\n    if (enemyParty.characters.every((c) => c.health <= 0)) {\r\n      setIsRunning(false)\r\n      const rewards = getRolledRewards(\r\n        enemyParty,\r\n        party.characters.reduce((p, c) =>\r\n          p.stats.luck > c.stats.luck ? p : c,\r\n        ),\r\n      )\r\n      updateParty({\r\n        ...rawParty,\r\n        characters: rawParty.characters.map((c) => removeTemporaryStatus(c)),\r\n      })\r\n      open(<CombatVictoryModal rewards={rewards} />, {}, true)\r\n      return\r\n    }\r\n    if (party.characters.every((c) => c.health <= 0)) {\r\n      setIsRunning(false)\r\n      open(\r\n        <div>\r\n          <h1 style={{ fontFamily: Theme.titleFont, textAlign: 'center' }}>\r\n            You Lose\r\n          </h1>\r\n        </div>,\r\n      )\r\n      history.push('/')\r\n      return\r\n    }\r\n  }, [party, enemyParty])\r\n\r\n  return (\r\n    <CombatContext.Provider\r\n      value={{\r\n        party,\r\n        enemyParty,\r\n        characters,\r\n        queue,\r\n        activeCharacter,\r\n        activeRound,\r\n        selectedSkill,\r\n        selectedTargets: selectedTarget\r\n          ? resolveSkillTarget(selectedTarget)\r\n          : [],\r\n        roundResults,\r\n        isRunning,\r\n        isRenderingResult,\r\n        onSkillSelect,\r\n        onTargetsSelect,\r\n        start,\r\n        next,\r\n        commit,\r\n        reset,\r\n        equipItemCombat,\r\n      }}\r\n    >\r\n      {children}\r\n    </CombatContext.Provider>\r\n  )\r\n}\r\n","import { tSkill } from '../Skill/type'\r\nimport { tProcessedCharacter } from '../Character/type'\r\nimport { tProcessedParty } from '../Party/type'\r\nimport { getRandom } from '../../util'\r\nimport { getSkillTargetOptions } from '../Skill/util'\r\n\r\nexport interface tAIAction {\r\n  skill: tSkill\r\n  target: tProcessedCharacter | tProcessedParty\r\n}\r\nexport const getAIAction = (\r\n  source: tProcessedCharacter,\r\n  playerParty: tProcessedParty,\r\n  enemyParty: tProcessedParty,\r\n): tAIAction => {\r\n  const skill = getRandom(source.skills)\r\n  const targetedCharacters = playerParty.characters.filter(\r\n    (c) => c.status.map((t) => t.type).includes('targeted') && c.health > 0,\r\n  )\r\n  const target =\r\n    skill.targetType === 'single'\r\n      ? targetedCharacters.length > 0\r\n        ? getRandom(targetedCharacters)\r\n        : getRandom(playerParty.characters.filter((c) => c.health > 0))\r\n      : getRandom<tProcessedParty | tProcessedCharacter>(\r\n          getSkillTargetOptions(source, enemyParty, playerParty, skill),\r\n        )\r\n\r\n  return { skill, target }\r\n}\r\n","import React from 'react'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface PerfectPropsT {\r\n  show: boolean | undefined\r\n  partyId: string\r\n}\r\nexport const Perfect = (props: PerfectPropsT) => {\r\n  const { show, partyId } = props\r\n  const style = useSpring({ opacity: show ? 1 : 0 })\r\n  return show ? (\r\n    <animated.div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: 16,\r\n        fontSize: 42,\r\n        color: partyId === PLAYER_PARTY_ID ? 'rgba(255,255,255,1)' : '#c95738',\r\n        textShadow: '4px 4px 4px black',\r\n        fontFamily: Theme.titleFont,\r\n        ...style,\r\n      }}\r\n    >\r\n      Perfect!\r\n    </animated.div>\r\n  ) : null\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport Kefir from 'kefir'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport Color from 'color'\r\nimport { Perfect } from './Perfect'\r\nimport { Theme } from '../../theme'\r\nimport { CHARACTER_CLASS_COLORS } from '../../game/Character/constants'\r\n\r\nexport interface RoundResultRendererPropsT {\r\n  isModal?: boolean\r\n}\r\nexport const RoundResultRenderer = (props: RoundResultRendererPropsT) => {\r\n  const { isModal = true } = props\r\n  const { activeRound, isRunning, commit } = useCombatContext()\r\n  const { open, close } = useModalContext()\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (activeRound && !isOpen && isRunning) {\r\n      setIsOpen(true)\r\n      if (isModal) {\r\n        open(\r\n          <RoundResult\r\n            close={() => {\r\n              close(true)\r\n              setIsOpen(false)\r\n              commit()\r\n            }}\r\n          />,\r\n          {\r\n            overlay: {\r\n              background: 'transparent',\r\n            },\r\n          },\r\n          true,\r\n        )\r\n      }\r\n    }\r\n  }, [isRunning, isModal, isOpen, activeRound, open, close, commit])\r\n\r\n  if (!isModal && activeRound && isRunning) {\r\n    return (\r\n      <FlexContainer style={{ height: 290 }}>\r\n        <RoundResult\r\n          close={() => {\r\n            setIsOpen(false)\r\n            commit()\r\n          }}\r\n        />\r\n      </FlexContainer>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport interface RoundResultPropsT {\r\n  close: () => void\r\n}\r\nexport interface CheckKVT {\r\n  label: string\r\n  result: boolean | undefined\r\n}\r\nexport const RoundResult = (props: RoundResultPropsT) => {\r\n  const { close } = props\r\n  const { activeRound } = useCombatContext()\r\n  const [isDone, setIsDone] = useState(false)\r\n  const round = activeRound?.sourceResult\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n  const [roundResults, setRoundResults] = useState<CheckKVT[]>(\r\n    !round\r\n      ? []\r\n      : round.rollResults.map((result, i) => ({\r\n          label: round.skill.weaponStatOverride || round.source.weapon.stat,\r\n          result: undefined,\r\n        })),\r\n  )\r\n\r\n  const updateRoundResult = (value: CheckKVT, index: number) => {\r\n    setActiveIndex(index)\r\n    setRoundResults((r) => r.map((r, i) => (i === index ? value : r)))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!round) return\r\n    const stream = Kefir.sequentially(\r\n      200,\r\n      roundResults.map((r, i) => ({ ...r, index: i })),\r\n    )\r\n    stream.onValue((result) => {\r\n      updateRoundResult(\r\n        {\r\n          label: result.label,\r\n          result: round.rollResults[result.index],\r\n        },\r\n        result.index,\r\n      )\r\n    })\r\n    stream.onEnd(() => {\r\n      Kefir.later(round.perfect ? 1200 : 900, undefined).onValue(() => {\r\n        setIsDone(true)\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (isDone) {\r\n      close()\r\n    }\r\n  }, [isDone, close])\r\n\r\n  const showPerfect = activeIndex === roundResults.length - 1 && round?.perfect\r\n  const isPlayer = (partyId: string) => partyId === PLAYER_PARTY_ID\r\n  const targetResult = activeRound?.targetResults[0]\r\n  const showTarget =\r\n    round && targetResult && targetResult.target.id !== round.source.id\r\n  if (!round) return null\r\n  return (\r\n    <FlexContainer $direction='column' style={{ textAlign: 'center' }}>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        {roundResults.map((result, i) => (\r\n          <SkillCheck\r\n            key={i}\r\n            check={result}\r\n            perfect={showPerfect}\r\n            skill={round.skill}\r\n            crit={round.criticalHitSuccess}\r\n          />\r\n        ))}\r\n      </FlexContainer>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        <div\r\n          style={{\r\n            marginTop: 24,\r\n            fontSize: 32,\r\n            padding: '16px 32px',\r\n            color: 'rgba(255,255,255,0.8)',\r\n            textShadow: '1px 1px 1px black',\r\n          }}\r\n        >\r\n          <strong\r\n            style={{\r\n              fontWeight: 'bold',\r\n              color: isPlayer(round.source.partyId)\r\n                ? 'white'\r\n                : Theme.enemyPartyColor,\r\n            }}\r\n          >\r\n            {round.source.name}\r\n          </strong>{' '}\r\n          uses{' '}\r\n          <span style={{ color: 'rgba(255,255,255,0.9)', fontWeight: 'bold' }}>\r\n            {round.skill.name}\r\n          </span>\r\n          {showTarget && (\r\n            <span>\r\n              {' on '}\r\n              <strong\r\n                style={{\r\n                  fontWeight: 'bold',\r\n                  color: isPlayer(targetResult?.target.partyId || '')\r\n                    ? 'white'\r\n                    : Theme.enemyPartyColor,\r\n                }}\r\n              >\r\n                {targetResult?.target.name}\r\n              </strong>\r\n            </span>\r\n          )}\r\n        </div>\r\n      </FlexContainer>\r\n      <Perfect show={showPerfect} partyId={round.source.partyId} />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { getSkillDamage, getPerfectText } from '../../game/Skill/util'\r\nimport { getChecksProbability } from '../../game/Roll/util'\r\nimport { Theme } from '../../theme'\r\nimport { Icon } from '../Icon'\r\nimport { SKILL_ICONS } from '../../icons/maps'\r\n\r\nexport interface SkillPreviewPropsT {\r\n  skill: tSkill\r\n  source: tProcessedCharacter\r\n  targets?: tProcessedCharacter[]\r\n}\r\nexport const SkillPreview = (props: SkillPreviewPropsT) => {\r\n  const { skill, source } = props\r\n  const perfectChance = getChecksProbability(\r\n    source,\r\n    Array(skill.rolls)\r\n      .fill(null)\r\n      .map((_, i) => ({ key: source.weapon.stat, offset: skill.offset })),\r\n  )\r\n  const stat = skill.weaponStatOverride || source.weapon.stat\r\n  const damage = getSkillDamage(skill, source)\r\n  const perfectKeys = getPerfectText(skill, source)\r\n  return (\r\n    <BoxContainer\r\n      style={{ marginTop: 30, position: 'relative', minWidth: 300 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <FlexContainer $direction='column' style={{ alignItems: 'center' }}>\r\n        <FlexContainer style={{ marginTop: -27 }}>\r\n          <FullContainer />\r\n          <BoxContainer\r\n            substyle={{\r\n              padding: '4px 12px',\r\n              fontSize: 18,\r\n              background: Theme.otherGrey,\r\n              fontFamily: Theme.titleFont,\r\n              textShadow: '1px 1px 3px black',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Icon\r\n              src={SKILL_ICONS[skill.name]}\r\n              size={16}\r\n              style={{ marginRight: 8 }}\r\n            />\r\n            {skill.name}\r\n          </BoxContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n        <span\r\n          style={{\r\n            color: 'rgba(255,255,255,0.4)',\r\n            marginTop: 8,\r\n            marginBottom: 20,\r\n          }}\r\n        >\r\n          Perfect ({Math.floor(perfectChance * 100)}%){' '}\r\n          {perfectKeys.length > 0 && '='} {perfectKeys}\r\n        </span>\r\n        <FlexContainer $full style={{ width: '100%', marginBottom: 8 }}>\r\n          {damage.value > 0 && skill.damage && (\r\n            <FlexContainer\r\n              $full\r\n              $direction='column'\r\n              style={{ alignItems: 'center', marginRight: 10 }}\r\n            >\r\n              <span\r\n                style={{\r\n                  color: damage.type === 'physical' ? 'lightblue' : 'plum',\r\n                  fontFamily: 'New Rocker',\r\n                  fontSize: 32,\r\n                }}\r\n              >\r\n                {`${Math.floor(damage.value)}`}\r\n              </span>\r\n              <span style={{ color: 'rgba(255,255,255,0.2)' }}>Max DMG</span>\r\n            </FlexContainer>\r\n          )}\r\n          {skill.rolls > 0 && (\r\n            <FlexContainer\r\n              $full\r\n              $direction='column'\r\n              style={{ alignItems: 'center' }}\r\n            >\r\n              <span\r\n                style={{\r\n                  fontFamily: 'New Rocker',\r\n                  fontSize: 32,\r\n                }}\r\n              >\r\n                {source.stats[stat] + skill.offset}%\r\n              </span>\r\n              <span style={{ color: 'rgba(255,255,255,0.2)' }}>\r\n                Per Check ACC\r\n              </span>\r\n            </FlexContainer>\r\n          )}\r\n        </FlexContainer>\r\n        {skill.consumableId && (\r\n          <div\r\n            style={{\r\n              color: Theme.healthRedColor,\r\n              fontSize: 12,\r\n              fontWeight: 'bolder',\r\n              marginBottom: 8,\r\n            }}\r\n          >\r\n            consumable\r\n          </div>\r\n        )}\r\n        <FlexContainer style={{ marginBottom: -18 }}>\r\n          <FullContainer />\r\n          <BoxContainer\r\n            substyle={{\r\n              padding: '2px 8px',\r\n              background: Theme.otherGrey,\r\n              textShadow: '1px 1px 3px black',\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            {skill.targetType} target\r\n          </BoxContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { tStats } from '../../game/Stats/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { STAT_BONUS_KEYS } from '../../game/Stats/constants'\r\n\r\nconst getStatColor = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tStats,\r\n): string => {\r\n  const a = character.stats[key]\r\n  const b = character.rawStats[key]\r\n  if (a === undefined || b === undefined) return 'rgba(255,255,255,0.6)'\r\n  if (a > b) return 'lightgreen'\r\n  if (b > a) return 'lightcoral'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n\r\nexport interface StatBarPropsT {\r\n  character: tProcessedCharacter\r\n}\r\nexport const StatBar = (props: StatBarPropsT) => {\r\n  const { character } = props\r\n\r\n  return (\r\n    <BoxContainer>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-between',\r\n          width: 360,\r\n          paddingTop: 10,\r\n          paddingBottom: 6,\r\n        }}\r\n      >\r\n        {STAT_BONUS_KEYS.map((key) => (\r\n          <FlexContainer\r\n            key={key}\r\n            style={{\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Icon\r\n              src={STAT_ICONS[key] || ''}\r\n              size={20}\r\n              fill={getStatColor(character, key)}\r\n              style={{ marginRight: 4 }}\r\n            />\r\n            <span style={{ color: getStatColor(character, key) }}>\r\n              {character.stats[key]}\r\n            </span>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\n\r\nexport interface UIContextT {\r\n  playerCanEquipItem: boolean\r\n  openCharacterInventoryId: string | undefined\r\n  showSkillTooltips: boolean\r\n  hoverQueueCharacterId: string | undefined\r\n  onCharacterConsumableClick: (\r\n    c: tProcessedCharacter,\r\n    index: number,\r\n    item: tConsumable,\r\n  ) => void\r\n  setPlayerCanEquipItem: (v: boolean) => void\r\n  setOpenCharacterInventoryId: (id: string | undefined) => void\r\n  setOnCharacterConsumableClick: (\r\n    fn: (c: tProcessedCharacter, index: number, item: tConsumable) => void,\r\n  ) => void\r\n  setShowSkillTooltips: (v: boolean) => void\r\n  setHoverQueueCharacterId: (id: string | undefined) => void\r\n}\r\n\r\nconst defaultValue: UIContextT = {\r\n  playerCanEquipItem: false,\r\n  openCharacterInventoryId: undefined,\r\n  showSkillTooltips: false,\r\n  hoverQueueCharacterId: undefined,\r\n  onCharacterConsumableClick: (c, i, item) => {},\r\n  setPlayerCanEquipItem: (v) => {},\r\n  setOpenCharacterInventoryId: (id) => {},\r\n  setOnCharacterConsumableClick: (fn) => {},\r\n  setShowSkillTooltips: (v) => {},\r\n  setHoverQueueCharacterId: (id) => {},\r\n}\r\n\r\nexport const UIContext = React.createContext<UIContextT>(defaultValue)\r\nexport const useUIContext = () => useContext(UIContext)\r\n\r\nexport interface UIContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const UIContextProvider = (props: UIContextProviderPropsT) => {\r\n  const { children } = props\r\n  const [playerCanEquipItem, setPlayerCanEquipItem] = useState(false)\r\n  const [showSkillTooltips, setShowSkillTooltips] = useState(true)\r\n  const [openCharacterInventoryId, setOpenCharacterInventoryId] = useState<\r\n    string | undefined\r\n  >()\r\n  const [hoverQueueCharacterId, setHoverQueueCharacterId] = useState<\r\n    string | undefined\r\n  >()\r\n  const [onCharacterConsumableClick, _setOnCharacterConsumableClick] = useState<\r\n    (c: tProcessedCharacter, i: number, item: tConsumable) => void\r\n  >((c, i, item) => {})\r\n\r\n  const setOnCharacterConsumableClick = (\r\n    fn: (c: tProcessedCharacter, index: number, item: tConsumable) => void,\r\n  ) => {\r\n    _setOnCharacterConsumableClick(() => fn)\r\n  }\r\n  return (\r\n    <UIContext.Provider\r\n      value={{\r\n        playerCanEquipItem,\r\n        openCharacterInventoryId,\r\n        showSkillTooltips,\r\n        hoverQueueCharacterId,\r\n        onCharacterConsumableClick,\r\n        setPlayerCanEquipItem,\r\n        setOpenCharacterInventoryId,\r\n        setOnCharacterConsumableClick,\r\n        setShowSkillTooltips,\r\n        setHoverQueueCharacterId,\r\n      }}\r\n    >\r\n      {children}\r\n    </UIContext.Provider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { RESOURCE_ICONS, WEAPON_TYPE_ICONS } from '../../icons/maps'\r\nimport { styled } from 'styletron-react'\r\nimport { ClickToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Button } from '../../elements/button'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tArmor, tArmorResourceType } from '../../game/Armor/type'\r\nimport {\r\n  CHARACTER_RESOURCES,\r\n  ITEM_RARITY_COLORS,\r\n} from '../../game/Item/constants'\r\nimport { Theme } from '../../theme'\r\n\r\nconst ItemRow = styled(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    marginBottom: '4px',\r\n    textShadow: '1px 1px 1px black',\r\n    background: props.$disabled\r\n      ? 'rgba(255,255,255,0.05)'\r\n      : 'linear-gradient(90deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 100%)',\r\n    paddingLeft: '8px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    textTransform: 'capitalize',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n  }\r\n})\r\n\r\nexport interface ItemPropsT {\r\n  character: tProcessedCharacter\r\n  setActiveItem: (item: tWeapon | tArmor | undefined) => void\r\n}\r\nexport const Items = (props: ItemPropsT) => {\r\n  const { character, setActiveItem } = props\r\n  const { playerCanEquipItem } = useUIContext()\r\n  return (\r\n    <FlexContainer $full $direction='column'>\r\n      <Item\r\n        disabled={false}\r\n        character={character}\r\n        resource={'weapon'}\r\n        onHover={setActiveItem}\r\n        canUnequip={playerCanEquipItem}\r\n      />\r\n      {CHARACTER_RESOURCES.map((res) => {\r\n        const disabled = res === 'offhand' && character.weapon.twoHand\r\n        return (\r\n          <Item\r\n            key={res}\r\n            disabled={disabled}\r\n            character={character}\r\n            resource={res}\r\n            onHover={setActiveItem}\r\n            canUnequip={playerCanEquipItem}\r\n          />\r\n        )\r\n      })}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface ItemProps {\r\n  character: tProcessedCharacter\r\n  resource: tArmorResourceType | 'weapon'\r\n  canUnequip?: boolean\r\n  disabled?: boolean\r\n  onHover: (item: tArmor | tWeapon | undefined) => void\r\n}\r\nexport const Item = (props: ItemProps) => {\r\n  const {\r\n    character,\r\n    resource,\r\n    canUnequip = true,\r\n    disabled = false,\r\n    onHover,\r\n  } = props\r\n  const { unequipItem } = usePartyContext()\r\n  const item =\r\n    resource === 'weapon'\r\n      ? character.weapon\r\n      : character.armor.find((a) => a.resource === resource)\r\n  return (\r\n    <ClickToolTip\r\n      direction='down'\r\n      distance={-2}\r\n      content={() => (\r\n        <>\r\n          {canUnequip && (\r\n            <BoxContainer\r\n              substyle={{\r\n                padding: 4,\r\n                width: 190,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                background: Theme.otherGrey,\r\n              }}\r\n            >\r\n              <Button\r\n                style={{ padding: '4px 8px' }}\r\n                onClick={() => {\r\n                  if (item) {\r\n                    unequipItem(character.id, item)\r\n                  }\r\n                }}\r\n              >\r\n                Unequip\r\n              </Button>\r\n              <Button style={{ padding: '4px 8px' }}>Cancel</Button>\r\n            </BoxContainer>\r\n          )}\r\n        </>\r\n      )}\r\n    >\r\n      {({ onClick, ref }) => (\r\n        <ItemRow\r\n          ref={ref}\r\n          $disabled={disabled}\r\n          onMouseEnter={() => onHover(item)}\r\n          onClick={() => {\r\n            if (item) onClick()\r\n          }}\r\n          style={{\r\n            color: ITEM_RARITY_COLORS[item?.rarity || 'common'],\r\n          }}\r\n        >\r\n          <Icon\r\n            src={\r\n              resource === 'weapon'\r\n                ? WEAPON_TYPE_ICONS[(item as tWeapon)?.type || 'fist']\r\n                : RESOURCE_ICONS[resource] || ''\r\n            }\r\n            size={16}\r\n            fill={\r\n              disabled\r\n                ? 'rgba(255,255,255,0.3)'\r\n                : ITEM_RARITY_COLORS[item?.rarity || 'common']\r\n            }\r\n            style={{ marginRight: 6 }}\r\n          />\r\n          {item?.name}\r\n        </ItemRow>\r\n      )}\r\n    </ClickToolTip>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface NamePropsT {\r\n  name: string\r\n}\r\n\r\nexport const Name = (props: NamePropsT) => {\r\n  const { name } = props\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        width: '100%',\r\n        height: 40,\r\n        marginBottom: -20,\r\n        marginTop: -20,\r\n      }}\r\n    >\r\n      <FullContainer />\r\n      <BoxContainer\r\n        style={{ zIndex: 2 }}\r\n        substyle={{ background: Theme.darkBgColor }}\r\n      >\r\n        {name}\r\n      </BoxContainer>\r\n      <FullContainer />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { CHARACTER_CLASS_COLORS } from '../../game/Character/constants'\r\nimport { tCharacter } from '../../game/Character/type'\r\nimport { Icon } from '../Icon'\r\nimport { CHARACTER_CLASS_ICONS } from '../../icons/maps'\r\n\r\nexport interface CharacterIconPropsT {\r\n  character: tCharacter\r\n  size: number\r\n  height?: number\r\n  width?: number\r\n  index?: number\r\n  style?: CSSProperties\r\n  iconStyle?: CSSProperties\r\n}\r\nexport const CharacterIcon = (props: CharacterIconPropsT) => {\r\n  const { character, size, height, width, index, style, iconStyle } = props\r\n\r\n  return (\r\n    <FlexContainer\r\n      $center\r\n      style={{\r\n        background: CHARACTER_CLASS_COLORS[character.class],\r\n        border: '2px solid rgba(255,255,255,0.8)',\r\n        height: height || size - 10,\r\n        width: width || size - 7,\r\n        alignItems: 'center',\r\n        overflow: 'hidden',\r\n        ...(style || {}),\r\n      }}\r\n    >\r\n      <Icon\r\n        src={character.icon || CHARACTER_CLASS_ICONS[character.class]}\r\n        shadow\r\n        fill={'white'}\r\n        size={size - 7}\r\n        style={{\r\n          zIndex: index || 1,\r\n          position: 'relative',\r\n          ...(iconStyle || {}),\r\n        }}\r\n      />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { CharacterIcon } from '../CharacterIcon'\r\n\r\nexport interface ImagePropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Image = (props: ImagePropsT) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n      <div>\r\n        <FlexContainer style={{ marginRight: 20, marginBottom: 10 }}>\r\n          <CharacterIcon character={character} size={142} />\r\n        </FlexContainer>\r\n      </div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { FlexContainer } from '../../elements/flex'\r\nimport { withStyle } from 'styletron-react'\r\nimport { Theme } from '../../theme'\r\n\r\nexport const Row = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    textShadow: '1px 1px 1px black',\r\n    background: props.$active ? 'rgba(255,255,255,0.2)' : undefined,\r\n    paddingLeft: '8px',\r\n    paddingTop: '2px',\r\n    paddingBottom: '2px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    cursor: 'pointer',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n    textTransform: 'capitalize',\r\n  }\r\n})\r\nexport const ActionsRow = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    padding: '4px',\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    borderTop: '1px solid black',\r\n    borderBottom: '1px solid black',\r\n    background: Theme.otherGrey,\r\n  }\r\n})\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { condenseListToStack } from '.'\r\nimport { WEAPON_TYPE_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Row, ActionsRow } from './elements'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\n\r\nexport interface WeaponListPropsT {\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n  setActiveItem: (item: tWeapon | tArmor) => void\r\n  onEquipItem?: (characterId: string, item: tWeapon | tArmor) => void\r\n}\r\n\r\nexport const WeaponList = (props: WeaponListPropsT) => {\r\n  const { character, canEquip, setActiveItem, onEquipItem } = props\r\n  const { party, sellItem, equipItem } = usePartyContext()\r\n  const [activeItemId, setActiveItemId] = useState<string | undefined>()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {condenseListToStack(\r\n        party.items\r\n          .filter((i) => i.itemType === 'weapon')\r\n          .map((i) => i as tArmor)\r\n          .sort((a, b) => a.name.localeCompare(b.name)),\r\n      ).map(({ item, count }) => {\r\n        const weapon = item as tWeapon\r\n        return (\r\n          <FlexContainer $direction='column' key={weapon.id}>\r\n            <Row\r\n              $active={weapon.id === activeItemId}\r\n              onMouseEnter={() => setActiveItem(weapon)}\r\n              onClick={(e: MouseEvent) => {\r\n                e.stopPropagation()\r\n                e.preventDefault()\r\n                setActiveItemId(weapon.id)\r\n              }}\r\n            >\r\n              <div style={{ width: 24 }}>\r\n                <Icon\r\n                  src={WEAPON_TYPE_ICONS[weapon.type || 'fist']}\r\n                  size={16}\r\n                  fill={ITEM_RARITY_COLORS[weapon.rarity]}\r\n                  style={{ marginRight: 6 }}\r\n                />\r\n              </div>\r\n              <span style={{ color: ITEM_RARITY_COLORS[weapon.rarity] }}>\r\n                {count} {weapon.name}\r\n              </span>\r\n            </Row>\r\n            {canEquip && activeItemId === weapon.id && (\r\n              <ActionsRow>\r\n                <Button\r\n                  style={{ padding: '4px 8px', marginRight: 10 }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    if (onEquipItem) {\r\n                      onEquipItem(character.id, weapon)\r\n                    } else {\r\n                      equipItem(character.id, weapon)\r\n                    }\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Equip\r\n                </Button>\r\n                <FullContainer />\r\n                <Button\r\n                  style={{ padding: '4px 8px', marginRight: 10 }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    sellItem(item.id)\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Sell Item ({item.goldValue})\r\n                </Button>\r\n                <Button\r\n                  style={{ padding: '4px 8px' }}\r\n                  onClick={() => {\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </ActionsRow>\r\n            )}\r\n          </FlexContainer>\r\n        )\r\n      })}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { styled, withStyleDeep } from 'styletron-react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tCharacterTag, tProcessedCharacter } from '../../game/Character/type'\r\nimport { tStats } from '../../game/Stats/type'\r\n\r\nexport const StatRow = withStyleDeep(FlexContainer, (props: any) => ({\r\n  flexDirection: 'column',\r\n  flex: props.$full ? 1 : undefined,\r\n  textTransform: 'capitalize',\r\n  whiteSpace: 'nowrap',\r\n}))\r\n\r\nexport interface StatsPropsT {\r\n  character: tProcessedCharacter\r\n}\r\nexport const Stats = (props: StatsPropsT) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer style={{ padding: 8 }}>\r\n      <FlexContainer $full $direction='column' style={{ marginRight: 16 }}>\r\n        <Stat character={character} stat={'strength'} />\r\n        <Stat character={character} stat={'dexterity'} />\r\n        <Stat character={character} stat={'intelligence'} />\r\n        <Stat character={character} stat={'charisma'} />\r\n        <Stat character={character} stat={'vigor'} />\r\n        <Stat character={character} stat={'agility'} />\r\n        <Stat character={character} stat={'luck'} />\r\n        <Stat character={character} stat={'evasion'} />\r\n        <Stat character={character} stat={'armor'} />\r\n        <Stat\r\n          character={character}\r\n          stat={'resistance'}\r\n          label='Magic Resistance'\r\n        />\r\n\r\n        <Stat\r\n          character={character}\r\n          stat={'criticalChance'}\r\n          label='Critical Chance'\r\n        />\r\n\r\n        <Stat\r\n          character={character}\r\n          stat={'healthRegeneration'}\r\n          label={'Health Regeneration'}\r\n        />\r\n        <Stat\r\n          character={character}\r\n          stat={'goldModifier'}\r\n          label={'% More Gold'}\r\n        />\r\n      </FlexContainer>\r\n      <FlexContainer $full $direction='column'>\r\n        {Object.keys(character.stats.damageModifiers)\r\n          .filter(\r\n            (k) => character.stats.damageModifiers[k as tCharacterTag] !== 0,\r\n          )\r\n          .map((key) => (\r\n            <FlexContainer $full>\r\n              <StatRow $full>\r\n                +{character.stats.damageModifiers[key as tCharacterTag] * 100}\r\n                {'% '}\r\n                vs {key}\r\n              </StatRow>\r\n            </FlexContainer>\r\n          ))}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\ninterface StatPropsT {\r\n  character: tProcessedCharacter\r\n  stat: keyof tStats\r\n  label?: string\r\n}\r\nconst Stat = (props: StatPropsT) => {\r\n  const { stat, label, character } = props\r\n  return (\r\n    <FlexContainer $full>\r\n      <StatRow $full>{label || stat}</StatRow>\r\n      <StatRow>{character.stats[stat]}</StatRow>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport Weapons from '../../icons/svg/lorc/broadsword.svg'\r\nimport Armor from '../../icons/svg/delapouite/leather-armor.svg'\r\nimport { ArmorList } from './ArmorList'\r\nimport { WeaponList } from './WeaponList'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { Theme } from '../../theme'\r\nimport { Stats } from './Stats'\r\n\r\nexport interface MenuOptionT {\r\n  key: string\r\n  icon: string\r\n  count: (\r\n    character: tProcessedCharacter,\r\n    party: tProcessedParty,\r\n  ) => number | undefined\r\n  render: (\r\n    character: tProcessedCharacter,\r\n    canEquip: boolean,\r\n    setActiveItem: (item: tWeapon | tArmor) => void,\r\n  ) => JSX.Element\r\n}\r\nexport const ACTIVE_CHARACTER_MENU_KEYS: MenuOptionT[] = [\r\n  {\r\n    key: 'all',\r\n    icon: '',\r\n    count: (c, p) => p.items.length,\r\n    render: (character, canEquip, setActiveItem) => (\r\n      <FlexContainer $direction='column'>\r\n        <WeaponList\r\n          character={character}\r\n          canEquip={canEquip}\r\n          setActiveItem={setActiveItem}\r\n        />\r\n        <ArmorList\r\n          character={character}\r\n          canEquip={canEquip}\r\n          setActiveItem={setActiveItem}\r\n        />\r\n      </FlexContainer>\r\n    ),\r\n  },\r\n  {\r\n    key: 'weapons',\r\n    icon: Weapons,\r\n    count: (c, p) => p.items.filter((i) => i.itemType === 'weapon').length,\r\n    render: (character, canEquip, setActiveItem) => (\r\n      <WeaponList\r\n        character={character}\r\n        canEquip={canEquip}\r\n        setActiveItem={setActiveItem}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    key: 'armor',\r\n    icon: Armor,\r\n    count: (c, p) => p.items.filter((i) => i.itemType === 'armor').length,\r\n    render: (character, canEquip, setActiveItem) => (\r\n      <ArmorList\r\n        character={character}\r\n        canEquip={canEquip}\r\n        setActiveItem={setActiveItem}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    key: 'stats',\r\n    icon: '',\r\n    count: (c, p) => undefined,\r\n    render: (character) => <Stats character={character} />,\r\n  },\r\n]\r\n\r\nexport interface MenuSelectPropsT {\r\n  character: tProcessedCharacter\r\n  party: tProcessedParty\r\n  activeKey: string\r\n  onActiveKeyChange: (key: string) => void\r\n}\r\n\r\nexport const MenuSelect = (props: MenuSelectPropsT) => {\r\n  const { character, party, activeKey, onActiveKeyChange } = props\r\n\r\n  return (\r\n    <FlexContainer style={{ justifyContent: 'center', marginTop: 8 }}>\r\n      {ACTIVE_CHARACTER_MENU_KEYS.map((option) => (\r\n        <Button\r\n          key={option.key}\r\n          style={{\r\n            padding: '4px 8px',\r\n            fontSize: 12,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            borderBottom: 0,\r\n            background:\r\n              option.key === activeKey ? Theme.lightBgColor : undefined,\r\n          }}\r\n          onClick={() => {\r\n            onActiveKeyChange(option.key)\r\n          }}\r\n        >\r\n          <FullContainer\r\n            style={{\r\n              marginRight: option.count(character, party) === undefined ? 0 : 8,\r\n              textTransform: 'capitalize',\r\n            }}\r\n          >\r\n            {option.key}\r\n          </FullContainer>\r\n          <FullContainer style={{ paddingRight: 2 }}>\r\n            {option.count(character, party)}\r\n          </FullContainer>\r\n        </Button>\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { ItemCard } from '../ItemCard'\r\n\r\nexport interface HoverAreaPropsT {\r\n  character: tProcessedCharacter\r\n  activeItem: tWeapon | tArmor\r\n}\r\n\r\nexport const HoverArea = (props: HoverAreaPropsT) => {\r\n  const { character, activeItem } = props\r\n  const foundArmor = character.armor.find(\r\n    (a) => a.resource === (activeItem as tArmor).resource,\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {activeItem.itemType === 'armor' && (\r\n        <FlexContainer>\r\n          {foundArmor && <ItemCard item={foundArmor} />}\r\n          {foundArmor?.id !== activeItem.id && <ItemCard item={activeItem} />}\r\n        </FlexContainer>\r\n      )}\r\n      {activeItem.itemType === 'weapon' && (\r\n        <FlexContainer>\r\n          <ItemCard item={character.weapon} />\r\n          {character.weapon.id !== activeItem.id && (\r\n            <ItemCard item={activeItem} />\r\n          )}\r\n        </FlexContainer>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { FlexContainer } from './flex'\r\nimport { Theme } from '../theme'\r\nimport { HoverToolTip } from '../components/Tooltip'\r\n\r\nexport interface HexagonPropsT {\r\n  color: string\r\n  size: number\r\n  style?: CSSProperties\r\n  children?: JSX.Element | string | number\r\n  childStyle?: CSSProperties\r\n}\r\nexport const Hexagon = (props: HexagonPropsT) => {\r\n  const { color, size, children, childStyle } = props\r\n  const mod = size / 100\r\n  const boxW = mod * 100\r\n  const boxH = mod * 57.74\r\n  const triH = mod * 28.8774\r\n  const triW = mod * 50\r\n  const tHeight = boxH + 2 * triH\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <div\r\n        style={{\r\n          width: 0,\r\n          borderBottom: `${triH}px solid ${color}`,\r\n          borderRight: `${triW}px solid transparent`,\r\n          borderLeft: `${triW}px solid transparent`,\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          width: `${boxW}px`,\r\n          height: `${boxH}px`,\r\n          background: color,\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          width: 0,\r\n          borderTop: `${triH}px solid ${color}`,\r\n          borderRight: `${triW}px solid transparent`,\r\n          borderLeft: `${triW}px solid transparent`,\r\n        }}\r\n      />\r\n      <FlexContainer\r\n        $direction='column'\r\n        style={{\r\n          width: `${boxW}px`,\r\n          height: `${tHeight}px`,\r\n          position: 'absolute',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          ...(childStyle || {}),\r\n        }}\r\n      >\r\n        {children}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface HexBadgePropsT extends HexagonPropsT {\r\n  rotate?: boolean\r\n  stroke?: number\r\n  borderColor?: string\r\n  onClick?: () => void\r\n}\r\nexport const HexBadge = (props: HexBadgePropsT) => {\r\n  const {\r\n    color,\r\n    borderColor,\r\n    size,\r\n    style,\r\n    children,\r\n    childStyle,\r\n    onClick,\r\n    stroke = 1,\r\n    rotate = false,\r\n  } = props\r\n  const angle = rotate ? 30 : 0\r\n  return (\r\n    <div\r\n      style={{\r\n        transform: `rotateY(0deg) rotate(-${angle}deg)`,\r\n        ...(style || {}),\r\n      }}\r\n      onClick={onClick}\r\n    >\r\n      <Hexagon size={size} color={Theme.darkBgColorSolid}>\r\n        <Hexagon\r\n          size={size - stroke * 2}\r\n          color={borderColor || Theme.lightBgColor}\r\n        >\r\n          <Hexagon size={size - stroke * 2 - 2} color={Theme.darkBgColorSolid}>\r\n            <Hexagon\r\n              size={size - stroke * 4 - 2}\r\n              color={color}\r\n              childStyle={{\r\n                fontFamily: Theme.titleFont,\r\n                color: 'white',\r\n                fontSize: `${size - 16}px`,\r\n                paddingTop: 2,\r\n                transform: `rotateY(0deg) rotate(${angle}deg)`,\r\n                ...(childStyle || {}),\r\n              }}\r\n            >\r\n              {children}\r\n            </Hexagon>\r\n          </Hexagon>\r\n        </Hexagon>\r\n      </Hexagon>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport interface HoverBadgePropsT {\r\n  children: JSX.Element | string | number\r\n  content: JSX.Element\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n  style?: CSSProperties\r\n  childStyle?: CSSProperties\r\n  size?: number\r\n  rotate?: boolean\r\n  stroke?: number\r\n  borderColor?: string\r\n  position?: {\r\n    top?: number\r\n    bottom?: number\r\n    left?: number\r\n    right?: number\r\n  }\r\n}\r\nexport const HoverHexBadge = (props: HoverBadgePropsT) => {\r\n  const {\r\n    children,\r\n    content,\r\n    direction,\r\n    style,\r\n    childStyle,\r\n    size,\r\n    rotate,\r\n    stroke,\r\n    position,\r\n    borderColor,\r\n  } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        position: position ? 'absolute' : 'relative',\r\n        top: position?.top,\r\n        bottom: position?.bottom,\r\n        left: position?.left,\r\n        right: position?.right,\r\n        zIndex: 4,\r\n      }}\r\n    >\r\n      <HoverToolTip\r\n        distance={2}\r\n        direction={direction || 'right'}\r\n        content={content || <div />}\r\n      >\r\n        <HexBadge\r\n          style={style}\r\n          rotate={rotate}\r\n          stroke={stroke}\r\n          borderColor={borderColor}\r\n          childStyle={{ ...childStyle, textShadow: '1px 1px 3px black' }}\r\n          size={size || 20}\r\n          color={Theme.badgeBgColor}\r\n        >\r\n          {children}\r\n        </HexBadge>\r\n      </HoverToolTip>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { StatBar } from './StatBar'\r\nimport { Items } from './Items'\r\nimport { Name } from './Name'\r\nimport { Image } from './Image'\r\nimport { MenuSelect, ACTIVE_CHARACTER_MENU_KEYS } from './MenuSelect'\r\nimport { HoverArea } from './HoverArea'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { Theme } from '../../theme'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { HexBadge } from '../../elements/shapes'\r\n\r\nexport interface PartyActiveCharacterPropsT {\r\n  character: tProcessedCharacter\r\n  party: tProcessedParty\r\n  canEquip: boolean\r\n  onRequestClose: () => void\r\n}\r\n\r\nexport interface ItemStackT<T> {\r\n  count: number\r\n  item: T\r\n}\r\n\r\ntype ItemT = tConsumable | tArmor | tWeapon\r\nexport const condenseListToStack = (items: ItemT[]): ItemStackT<ItemT>[] => {\r\n  let stack: ItemStackT<ItemT>[] = []\r\n  items.forEach((i) => {\r\n    if (stack.map((s) => s.item.name).includes(i.name)) {\r\n      stack = stack.map((s) =>\r\n        s.item.name === i.name ? { ...s, count: s.count + 1 } : s,\r\n      )\r\n    } else {\r\n      stack = [...stack, { item: i, count: 1 }]\r\n    }\r\n  })\r\n  return stack\r\n}\r\n\r\nexport const PartyActiveCharacter = (props: PartyActiveCharacterPropsT) => {\r\n  const { character, party, canEquip, onRequestClose } = props\r\n  const [activeMenuKey, setActiveMenuKey] = useState('all')\r\n  const [activeItem, setActiveItem] = useState<tArmor | tWeapon | undefined>()\r\n  const activeOption = ACTIVE_CHARACTER_MENU_KEYS.find(\r\n    (o) => o.key === activeMenuKey,\r\n  )\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        justifyContent: 'flex-end',\r\n      }}\r\n    >\r\n      <HexBadge\r\n        color={Theme.healthRedColor}\r\n        size={32}\r\n        onClick={onRequestClose}\r\n        style={{\r\n          position: 'absolute',\r\n          top: -14,\r\n          right: -9,\r\n          cursor: 'pointer',\r\n          userSelect: 'none',\r\n          textShadow: '1px 1px 3px black',\r\n        }}\r\n        childStyle={{\r\n          paddingTop: 1,\r\n        }}\r\n      >\r\n        X\r\n      </HexBadge>\r\n      <FlexContainer\r\n        style={{\r\n          maxHeight: 502,\r\n          padding: 10,\r\n          position: 'absolute',\r\n          left: '-6px',\r\n          width: 486,\r\n          justifyContent: 'flex-end',\r\n          zIndex: 1,\r\n        }}\r\n      >\r\n        {activeItem && (\r\n          <HoverArea character={character} activeItem={activeItem} />\r\n        )}\r\n      </FlexContainer>\r\n      <FlexContainer\r\n        $direction='column'\r\n        style={{ background: Theme.darkBgColor, border: '2px solid black' }}\r\n      >\r\n        <FlexContainer $direction='column'>\r\n          <Name name={character.name} />\r\n          <StatBar character={character} />\r\n          <BoxContainer\r\n            substyle={{\r\n              background: Theme.darkBgColor,\r\n              padding: '16px 0 0px 0',\r\n            }}\r\n          >\r\n            <FlexContainer>\r\n              <Items character={character} setActiveItem={setActiveItem} />\r\n              <Image character={character} />\r\n            </FlexContainer>\r\n            <MenuSelect\r\n              character={character}\r\n              party={party}\r\n              activeKey={activeMenuKey}\r\n              onActiveKeyChange={setActiveMenuKey}\r\n            />\r\n          </BoxContainer>\r\n          <BoxContainer\r\n            substyle={{\r\n              background: Theme.darkBgColor,\r\n              padding: '4px 0',\r\n              height: 200,\r\n              overflow: 'auto',\r\n            }}\r\n          >\r\n            {activeOption &&\r\n              activeOption.render(character, canEquip, setActiveItem)}\r\n          </BoxContainer>\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { ARMOR_TYPE_ICONS } from '../../icons/maps'\r\nimport { Button } from '../../elements/button'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { condenseListToStack } from '.'\r\nimport { Row, ActionsRow } from './elements'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\n\r\nexport interface ArmorListPropsT {\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n  setActiveItem: (item: tWeapon | tArmor) => void\r\n  onEquipItem?: (characterId: string, item: tWeapon | tArmor) => void\r\n}\r\n\r\nexport const ArmorList = (props: ArmorListPropsT) => {\r\n  const { character, canEquip, setActiveItem, onEquipItem } = props\r\n  const { party, sellItem, equipItem } = usePartyContext()\r\n  const [activeItemId, setActiveItemId] = useState<string | undefined>()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {condenseListToStack(\r\n        party.items\r\n          .filter((i) => i.itemType === 'armor')\r\n          .map((i) => i as tArmor)\r\n          .sort((a, b) => a.name.localeCompare(b.name)),\r\n      ).map(({ item, count }) => {\r\n        const armor = item as tArmor\r\n        return (\r\n          <FlexContainer key={armor.id} $direction='column'>\r\n            <Row\r\n              $active={item.id === activeItemId}\r\n              onMouseEnter={() => setActiveItem(armor)}\r\n              onClick={(e: MouseEvent) => {\r\n                e.stopPropagation()\r\n                e.preventDefault()\r\n                setActiveItemId(armor.id)\r\n              }}\r\n            >\r\n              <div style={{ width: 24 }}>\r\n                <Icon\r\n                  src={ARMOR_TYPE_ICONS[armor.type]}\r\n                  size={16}\r\n                  style={{ marginRight: 10 }}\r\n                  fill={ITEM_RARITY_COLORS[armor.rarity]}\r\n                  shadow\r\n                />\r\n              </div>\r\n              <span style={{ color: ITEM_RARITY_COLORS[armor.rarity] }}>\r\n                {count} {armor.name}\r\n              </span>\r\n            </Row>\r\n            {canEquip && activeItemId === armor.id && (\r\n              <ActionsRow>\r\n                <Button\r\n                  style={{ padding: '4px 8px', marginRight: 10 }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    if (onEquipItem) {\r\n                      onEquipItem(character.id, armor)\r\n                    } else {\r\n                      equipItem(character.id, armor)\r\n                    }\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Equip\r\n                </Button>\r\n                <FullContainer />\r\n                <Button\r\n                  style={{ padding: '4px 8px', marginRight: 10 }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    sellItem(item.id)\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Sell Item ({item.goldValue})\r\n                </Button>\r\n                <Button\r\n                  style={{ padding: '4px 8px' }}\r\n                  onClick={() => {\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </ActionsRow>\r\n            )}\r\n          </FlexContainer>\r\n        )\r\n      })}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Theme } from '../../theme'\r\nimport { ArmorList } from '../PartyActiveCharacter/ArmorList'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { WeaponList } from '../PartyActiveCharacter/WeaponList'\r\n\r\nexport interface EquipItemModalPropsT {\r\n  equipItemCombat: (characterId: string, item: tWeapon | tArmor) => void\r\n}\r\n\r\nexport const EquipItemModal = (props: EquipItemModalPropsT) => {\r\n  const { equipItemCombat } = props\r\n  const { activeCharacter } = useCombatContext()\r\n  const { close } = useModalContext()\r\n  const onEquipItem = (characterId: string, item: tWeapon | tArmor) => {\r\n    equipItemCombat(characterId, item)\r\n    close()\r\n  }\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ maxHeight: 300, overflow: 'auto' }}\r\n    >\r\n      <h3 style={{ margin: 0, marginBottom: 32, fontFamily: Theme.titleFont }}>\r\n        Choose an Item\r\n      </h3>\r\n      <WeaponList\r\n        character={activeCharacter}\r\n        setActiveItem={() => {}}\r\n        canEquip={true}\r\n        onEquipItem={onEquipItem}\r\n      />\r\n      <ArmorList\r\n        character={activeCharacter}\r\n        setActiveItem={() => {}}\r\n        canEquip={true}\r\n        onEquipItem={onEquipItem}\r\n      />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { Button } from '../../elements/button'\r\nimport { SkillPreview } from '../SkillPreview'\r\nimport { SkillChecks } from '../SkillChecks'\r\nimport { SKILL_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Hover } from '../Hover'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { Theme } from '../../theme'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { EquipItemModal } from '../EquipItemModal'\r\nimport Inventory from '../../icons/svg/lorc/knapsack.svg'\r\nimport { HEAL, REMOVE_CURSES } from '../../game/Skill/skills/consumables'\r\nimport { hasAnyStatus } from '../../game/Character/util'\r\nimport { CURE_POTION } from '../../game/Consumable/objects/curing_potion'\r\n\r\nexport const CombatActions = () => {\r\n  const {\r\n    party,\r\n    activeCharacter,\r\n    selectedSkill,\r\n    selectedTargets,\r\n    onSkillSelect,\r\n    equipItemCombat,\r\n  } = useCombatContext()\r\n  const { open } = useModalContext()\r\n\r\n  if (!activeCharacter || activeCharacter.partyId !== PLAYER_PARTY_ID)\r\n    return null\r\n\r\n  const stat = selectedSkill?.weaponStatOverride || activeCharacter.weapon.stat\r\n  const skills = activeCharacter.skills.filter((skill) => {\r\n    if (activeCharacter.healthOffset === 0 && skill.id === HEAL.id) {\r\n      return false\r\n    }\r\n    if (\r\n      !hasAnyStatus(activeCharacter, [\r\n        'cursed-agility',\r\n        'cursed-charisma',\r\n        'cursed-dexterity',\r\n        'cursed-intelligence',\r\n        'cursed-luck',\r\n        'cursed-strength',\r\n        'cursed-vigor',\r\n      ]) &&\r\n      skill.id === REMOVE_CURSES.id\r\n    ) {\r\n      return false\r\n    }\r\n    if (\r\n      !hasAnyStatus(activeCharacter, [\r\n        'bleeding',\r\n        'burning',\r\n        'frozen',\r\n        'poisoned',\r\n      ]) &&\r\n      skill.id === CURE_POTION().skill.id\r\n    ) {\r\n      return false\r\n    }\r\n    return true\r\n  })\r\n  return (\r\n    <FlexContainer $direction='column' style={{ minWidth: 340 }}>\r\n      {selectedSkill && <SkillChecks stat={stat} skill={selectedSkill} />}\r\n      <FlexContainer $center style={{ minHeight: 42 }}>\r\n        {skills.map((skill) => (\r\n          <React.Fragment key={skill.id}>\r\n            {SKILL_ICONS[skill.name] ? (\r\n              <Hover delay={0}>\r\n                {({ isHovering }) => (\r\n                  <Icon\r\n                    src={SKILL_ICONS[skill.name]}\r\n                    size={42}\r\n                    shadow={true}\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      padding: '0 12px',\r\n                    }}\r\n                    onClick={() => {\r\n                      onSkillSelect(skill)\r\n                    }}\r\n                    fill={\r\n                      skill.id === selectedSkill?.id\r\n                        ? 'lightsalmon'\r\n                        : isHovering\r\n                        ? 'white'\r\n                        : 'rgba(255,255,255,0.8)'\r\n                    }\r\n                  />\r\n                )}\r\n              </Hover>\r\n            ) : (\r\n              <Button\r\n                key={skill.id}\r\n                onClick={() => onSkillSelect(skill)}\r\n                style={{\r\n                  background: Theme.darkBgColor,\r\n                  borderColor:\r\n                    selectedSkill && skill.id === selectedSkill.id\r\n                      ? 'white'\r\n                      : undefined,\r\n                }}\r\n              >\r\n                {skill.name}\r\n              </Button>\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n        {party.items.length > 0 && (\r\n          <Hover delay={0}>\r\n            {({ isHovering }) => (\r\n              <Icon\r\n                src={Inventory}\r\n                size={42}\r\n                shadow={true}\r\n                style={{\r\n                  cursor: 'pointer',\r\n                  padding: '0 12px',\r\n                }}\r\n                onClick={() =>\r\n                  open(<EquipItemModal equipItemCombat={equipItemCombat} />)\r\n                }\r\n                fill={isHovering ? 'white' : 'rgba(255,255,255,0.8)'}\r\n              />\r\n            )}\r\n          </Hover>\r\n        )}\r\n      </FlexContainer>\r\n      {selectedSkill && (\r\n        <SkillPreview\r\n          skill={selectedSkill}\r\n          source={activeCharacter}\r\n          targets={selectedTargets}\r\n        />\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport const Monospace = styled('span', () => ({\r\n  fontFamily: 'Inconsolata, monospace',\r\n  fontWeight: 600,\r\n}))\r\nexport const Monodiv = styled('div', () => ({\r\n  fontFamily: 'Inconsolata, monospace',\r\n  fontWeight: 600,\r\n}))\r\n","import { GaugePropsT } from '.'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { FullContainer } from '../../elements/flex'\r\n\r\nexport const Gauge2 = (props: GaugePropsT) => {\r\n  const { name = '', value, color, height = 30, children, style } = props\r\n  const max = props.max < 1 ? 1 : props.max\r\n  const p = (value / max) * 100\r\n  const percentage = p > 100 ? 100 : p\r\n  const [oldPercentage, setOldPercentage] = useState(percentage)\r\n  useEffect(() => {\r\n    setOldPercentage(percentage)\r\n  }, [percentage])\r\n  return (\r\n    <BoxContainer\r\n      style={{ borderLeft: 'none', ...(style || {}) }}\r\n      substyle={{\r\n        padding: 0,\r\n        background: 'rgba(80,80,85,1)',\r\n        height: height - 2,\r\n        position: 'relative',\r\n        border: 'none',\r\n      }}\r\n    >\r\n      <Spring\r\n        from={{ value: oldPercentage || 0 }}\r\n        to={{ value: percentage }}\r\n        config={{ friction: 200, mass: 4, tension: 600 }}\r\n      >\r\n        {(p) => (\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              left: 0,\r\n              boxSizing: 'border-box',\r\n              height: height - 2,\r\n              maxWidth: `${p.value}%`,\r\n              minWidth: `${p.value}%`,\r\n              boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n              backgroundColor: 'rgba(255,255,255,0.5)',\r\n            }}\r\n          ></div>\r\n        )}\r\n      </Spring>\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          left: 0,\r\n          boxSizing: 'border-box',\r\n          height: height - 2,\r\n          maxWidth: `${percentage}%`,\r\n          minWidth: `${percentage}%`,\r\n          boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n          textShadow: '1px 1px 3px black',\r\n          backgroundColor: color,\r\n        }}\r\n      ></div>\r\n      <FullContainer\r\n        style={{\r\n          position: 'absolute',\r\n          height,\r\n          lineHeight: `${height - 2}px`,\r\n          right: 4,\r\n          top: 0,\r\n          fontSize: 12,\r\n          overflow: 'hidden',\r\n          textShadow: '0px 0px 3px black',\r\n          color: 'rgba(255,255,255,0.8)',\r\n        }}\r\n      >\r\n        <div>{children}</div>\r\n      </FullContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Spring } from 'react-spring/renderprops'\r\n\r\nexport interface NumberChangePropsT {\r\n  value: number\r\n}\r\nexport const NumberChange = (props: NumberChangePropsT) => {\r\n  const { value } = props\r\n  const [previousValue, setPreviousValue] = useState(value)\r\n  useEffect(() => {\r\n    setPreviousValue(value)\r\n  }, [value])\r\n  return (\r\n    <Spring\r\n      from={{ n: previousValue || 0 }}\r\n      to={{ n: value }}\r\n      config={{ friction: 70, mass: 50, tension: 1500, clamp: true }}\r\n    >\r\n      {(p) => Math.floor(p.n)}\r\n    </Spring>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FullContainer } from '../../elements/flex'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { Monodiv } from '../../elements/monospace'\r\nimport { noneg } from '../../util'\r\nimport { usePrevious } from '../../hooks/usePrevious'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { CHARACTER_XP_MAX } from '../../game/Character/constants'\r\nimport { Gauge2 } from './v2'\r\nimport { Theme } from '../../theme'\r\nimport { NumberChange } from '../NumberChange'\r\n\r\nexport interface GaugePropsT {\r\n  name?: string\r\n  color: string\r\n  height?: number\r\n  max: number\r\n  value: number\r\n  style?: CSSProperties\r\n  children?: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const Gauge = (props: GaugePropsT) => {\r\n  const { name = '', value, color, height = 30, children, style } = props\r\n  const max = props.max < 1 ? 1 : props.max\r\n  const p = (value / max) * 100\r\n  const percentage = p > 100 ? 100 : p\r\n  const oldPercentage = usePrevious(percentage)\r\n  return (\r\n    <HoverToolTip\r\n      direction='right'\r\n      content={<BoxContainer>{`${name} (${value} / ${max})`}</BoxContainer>}\r\n    >\r\n      <BoxContainer\r\n        style={{\r\n          borderLeft: 'none',\r\n          background: Theme.darkBgColorSolid,\r\n          ...(style || {}),\r\n        }}\r\n        substyle={{\r\n          padding: 0,\r\n          background: 'rgba(255,255,255,0.2)',\r\n          height: height - 2,\r\n          position: 'relative',\r\n          border: 'none',\r\n        }}\r\n      >\r\n        <Spring\r\n          from={{ value: oldPercentage || 0 }}\r\n          to={{ value: percentage }}\r\n          config={{ friction: 70, mass: 5, tension: 300 }}\r\n        >\r\n          {(p) => (\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                left: 0,\r\n                boxSizing: 'border-box',\r\n                height: height - 2,\r\n                maxWidth: `${p.value}%`,\r\n                minWidth: `${p.value}%`,\r\n                boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n                textShadow: '1px 1px 1px black',\r\n                backgroundColor: color,\r\n                color: 'white',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n            ></div>\r\n          )}\r\n        </Spring>\r\n        <FullContainer\r\n          style={{\r\n            position: 'absolute',\r\n            height,\r\n            lineHeight: `${height - 2}px`,\r\n            right: 4,\r\n            top: 0,\r\n            fontSize: 10,\r\n            fontWeight: 'bold',\r\n            overflow: 'hidden',\r\n            textShadow: '0px 0px 3px black',\r\n          }}\r\n        >\r\n          <Monodiv>{children}</Monodiv>\r\n        </FullContainer>\r\n      </BoxContainer>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface HealthGaugePropsT {\r\n  character: tProcessedCharacter\r\n  height?: number\r\n  style?: CSSProperties\r\n  showNumbers?: boolean\r\n}\r\nexport const HealthGauge = (props: HealthGaugePropsT) => {\r\n  const { character, height = 16, style, showNumbers = true } = props\r\n  const health = noneg(character.health)\r\n  return (\r\n    <Gauge2\r\n      name='Health'\r\n      color={Theme.healthRedColor}\r\n      max={character.maxHealth}\r\n      value={health}\r\n      height={height}\r\n      style={style}\r\n    >\r\n      {showNumbers && (\r\n        <span>\r\n          <NumberChange value={health} />/\r\n          <NumberChange value={character.maxHealth} />\r\n        </span>\r\n      )}\r\n    </Gauge2>\r\n  )\r\n}\r\nexport interface XPGaugePropsT {\r\n  character: tProcessedCharacter\r\n  style?: CSSProperties\r\n  showNumber?: boolean\r\n}\r\nexport const XPGauge = (props: HealthGaugePropsT) => {\r\n  const { character, style } = props\r\n  const value = character.experience\r\n  const max = CHARACTER_XP_MAX[character.level]\r\n  return (\r\n    <Gauge2\r\n      name='XP'\r\n      color='#5e8575'\r\n      max={max}\r\n      value={value}\r\n      height={16}\r\n      style={style}\r\n    >\r\n      {value}/{max}\r\n    </Gauge2>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Tooltip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STATUS_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { tStatus } from '../../game/Status/type'\r\nimport { STATUS_CONFIG } from '../../game/Status/constants'\r\n\r\nexport interface TagPreviewPropsT {\r\n  status: tStatus\r\n  immunity?: boolean\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n}\r\nexport const TagPreview = (props: TagPreviewPropsT) => {\r\n  const { status, direction, immunity } = props\r\n  const statusConfig = STATUS_CONFIG[status.type]\r\n  return (\r\n    <Tooltip\r\n      direction={direction || 'bottom'}\r\n      content={\r\n        <BoxContainer style={{ maxWidth: 200 }}>\r\n          <FlexContainer $direction='column'>\r\n            <strong style={{ marginBottom: statusConfig.description ? 8 : 0 }}>\r\n              {status.type} {immunity && 'immunity'}{' '}\r\n              {status.duration > 0 ? `(${status.duration})` : ''}\r\n            </strong>\r\n            {statusConfig.description && (\r\n              <>{!immunity && <span>{statusConfig.description}</span>}</>\r\n            )}\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n      }\r\n    >\r\n      <Icon\r\n        shadow\r\n        src={STATUS_ICONS[status.type] || ''}\r\n        size={20}\r\n        fill={immunity ? 'white' : 'Violet'}\r\n        style={{ marginLeft: 4 }}\r\n      />\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { tProcessedCharacter } from '../game/Character/type'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { Theme } from '../theme'\r\nimport { hasImmunity } from '../game/Character/util'\r\n\r\nexport const usePlayerCharacterNotifications = (\r\n  character: tProcessedCharacter,\r\n  push: (c: JSX.Element, type?: string) => void,\r\n  shake: () => void,\r\n) => {\r\n  const health = character.health\r\n  const level = character.level\r\n  const { roundResults } = useCombatContext()\r\n  const [previousHealth, setPreviousHealth] = useState(health)\r\n  const [previousLevel, setPreviousLevel] = useState(level)\r\n  useEffect(() => {\r\n    const healthDiff = previousHealth - health\r\n    if (healthDiff > 0) {\r\n      push(\r\n        <span style={{ fontFamily: Theme.titleFont, fontSize: 36 }}>\r\n          - {healthDiff}\r\n        </span>,\r\n      )\r\n      shake()\r\n    }\r\n    if (healthDiff < 0) {\r\n      push(\r\n        <span style={{ fontFamily: Theme.titleFont, fontSize: 36 }}>\r\n          + {Math.abs(healthDiff)}\r\n        </span>,\r\n        'good',\r\n      )\r\n    }\r\n    if (level > previousLevel) {\r\n      push(\r\n        <span style={{ fontFamily: Theme.titleFont, fontSize: 36 }}>\r\n          Level Up!\r\n        </span>,\r\n        'good',\r\n      )\r\n    }\r\n    setPreviousLevel(level)\r\n    setPreviousHealth(health)\r\n  }, [health, level])\r\n\r\n  useEffect(() => {\r\n    const lastRound = roundResults[roundResults.length - 1]\r\n    if (lastRound) {\r\n      if (\r\n        lastRound.sourceResult.weaponDidBreak &&\r\n        lastRound.sourceResult.source.id === character.id\r\n      ) {\r\n        push(\r\n          <span style={{ fontFamily: Theme.titleFont, fontSize: 48 }}>\r\n            Weapon Break!\r\n          </span>,\r\n        )\r\n      }\r\n      const chResult = lastRound.targetResults.find(\r\n        (r) => r.target.id === character.id,\r\n      )\r\n      if (chResult) {\r\n        if (chResult.dodgeSuccess && chResult.accuracySuccess) {\r\n          push(\r\n            <span style={{ fontFamily: Theme.titleFont }}>Dodged!</span>,\r\n            'base',\r\n          )\r\n        }\r\n        if (\r\n          !chResult.dodgeSuccess &&\r\n          chResult.accuracySuccess &&\r\n          chResult.skill.damage &&\r\n          chResult.loggedDamgge.value <= 0\r\n        ) {\r\n          push(\r\n            <span style={{ fontFamily: Theme.titleFont }}>Blocked!</span>,\r\n            'base',\r\n          )\r\n        }\r\n        if (chResult.addedStatus.length > 0) {\r\n          chResult.addedStatus.forEach((status) => {\r\n            if (hasImmunity(character, status)) {\r\n              push(\r\n                <span style={{ fontFamily: Theme.titleFont }}>Immune</span>,\r\n                'base',\r\n              )\r\n            } else {\r\n              push(\r\n                <span\r\n                  style={{\r\n                    textTransform: 'capitalize',\r\n                    fontFamily: Theme.titleFont,\r\n                  }}\r\n                >\r\n                  {status}\r\n                </span>,\r\n                'base',\r\n              )\r\n            }\r\n          })\r\n        }\r\n        if (chResult.perfect && chResult.skill.perfectPierce) {\r\n          push(\r\n            <span style={{ fontFamily: Theme.titleFont }}>Pierced!</span>,\r\n            'base',\r\n          )\r\n        }\r\n        if (chResult.criticalHitSuccess && chResult.skill.damage) {\r\n          push(\r\n            <span style={{ fontFamily: Theme.titleFont }}>Critical!</span>,\r\n            'base',\r\n          )\r\n        }\r\n      }\r\n      if (\r\n        lastRound.sourceResult.source.id === character.id &&\r\n        !lastRound.sourceResult.accuracySuccess\r\n      ) {\r\n        push(\r\n          <span style={{ fontFamily: Theme.titleFont }}>Missed!</span>,\r\n          'base',\r\n        )\r\n      }\r\n    }\r\n  }, [roundResults])\r\n}\r\n","import React from 'react'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { animated } from 'react-spring/renderprops'\r\nimport { noneg } from '../../util'\r\nimport { usePlayerCharacterNotifications } from '../../hooks/usePlayerCharacterNotifications'\r\nimport { Theme } from '../../theme'\r\nimport { NumberChange } from '../NumberChange'\r\n\r\nexport interface HealthPropsT {\r\n  character: tProcessedCharacter\r\n  push: (content: JSX.Element, type?: string) => void\r\n  shake?: () => void\r\n}\r\nexport const Health = (props: HealthPropsT) => {\r\n  const { character, push, shake } = props\r\n  const health = noneg(character.health)\r\n  usePlayerCharacterNotifications(character, push, shake || (() => {}))\r\n\r\n  return (\r\n    <animated.div\r\n      style={{\r\n        fontSize: 64,\r\n        height: 64,\r\n        width: 60,\r\n        textShadow: '1px 1px 10px black',\r\n        color: Theme.healthRedColor,\r\n        fontFamily: 'New Rocker',\r\n        userSelect: 'none',\r\n      }}\r\n    >\r\n      <NumberChange value={health} />\r\n    </animated.div>\r\n  )\r\n}\r\n","import React, { useContext, useState, useEffect, CSSProperties } from 'react'\r\nimport { animated, useTransition } from 'react-spring'\r\nimport { FullContainer } from '../../elements/flex'\r\nimport { v4 } from 'uuid'\r\n\r\nexport interface LocalToastContextT {\r\n  push: (content: JSX.Element) => void\r\n}\r\nexport const defaultValue: LocalToastContextT = {\r\n  push: (content) => {},\r\n}\r\nexport const LocalToastContext = React.createContext<LocalToastContextT>(\r\n  defaultValue,\r\n)\r\nexport const useLocalToast = () => useContext(LocalToastContext)\r\n\r\nexport interface LocalToastProviderProps {\r\n  children: JSX.Element\r\n}\r\nexport const LocalToastProvider = (props: LocalToastProviderProps) => {\r\n  const { children } = props\r\n  const [queue, setQueue] = useState<\r\n    {\r\n      id: string\r\n      content: JSX.Element\r\n    }[]\r\n  >([])\r\n\r\n  useEffect(() => {\r\n    const i = setInterval(() => {\r\n      setQueue((q) => {\r\n        const [f, ...rest] = q\r\n        return rest || []\r\n      })\r\n    }, 3000)\r\n    return () => {\r\n      clearInterval(i)\r\n    }\r\n  }, [])\r\n\r\n  const push = (c: JSX.Element, type?: string) => {\r\n    setQueue((q) => [\r\n      ...q,\r\n      {\r\n        id: v4(),\r\n        content: c,\r\n        type,\r\n      },\r\n    ])\r\n  }\r\n\r\n  return (\r\n    <LocalToastContext.Provider value={{ push }}>\r\n      <>\r\n        <div style={{ position: 'relative' }}>\r\n          <Toast queue={queue} />\r\n        </div>\r\n        {children}\r\n      </>\r\n    </LocalToastContext.Provider>\r\n  )\r\n}\r\n\r\ninterface ToastQT {\r\n  id: string\r\n  type?: string\r\n  content: JSX.Element\r\n}\r\nexport interface ToastPropsT {\r\n  queue: ToastQT[]\r\n  style?: CSSProperties\r\n}\r\nexport const Toast = (props: ToastPropsT) => {\r\n  const { queue, style } = props\r\n  const hasChildren = queue.length > 0\r\n  const animation = useTransition(queue, (q) => q.id, {\r\n    from: {\r\n      transform: 'translate3d(0,40px,0)',\r\n      maxWidth: 0,\r\n      maxHeight: 0,\r\n      opacity: 0,\r\n    },\r\n    enter: {\r\n      transform: 'translate3d(0,0px,0)',\r\n      maxWidth: 180,\r\n      maxHeight: 40,\r\n      opacity: 1,\r\n    },\r\n    leave: {\r\n      transform: 'translate3d(0,-80px,0)',\r\n      maxWidth: 0,\r\n      maxHeight: 0,\r\n      opacity: 0,\r\n    },\r\n  })\r\n\r\n  return (\r\n    <animated.div\r\n      style={{\r\n        position: 'absolute',\r\n        width: '100%',\r\n        display: 'flex',\r\n        height: 0,\r\n        top: -24,\r\n        zIndex: 3,\r\n        ...(style || {}),\r\n      }}\r\n    >\r\n      {animation.map((item) => (\r\n        <animated.div\r\n          key={item.key}\r\n          style={{\r\n            display: 'flex',\r\n            ...item.props,\r\n          }}\r\n        >\r\n          <FullContainer />\r\n          <div\r\n            style={{\r\n              marginBottom: 4,\r\n              marginRight: 4,\r\n              fontSize: 20,\r\n              padding: 2,\r\n              lineHeight: '20px',\r\n              whiteSpace: 'nowrap',\r\n              background:\r\n                'radial-gradient(circle, rgba(0,0,0,0.3) 0%, rgba(0,0,0,0) 100%)',\r\n              ...color(item.item.type),\r\n            }}\r\n          >\r\n            {item.item.content}\r\n          </div>\r\n          <FullContainer />\r\n        </animated.div>\r\n      ))}\r\n    </animated.div>\r\n  )\r\n}\r\n\r\nexport interface LocalToastRpPropsT {\r\n  children: (props: LocalToastContextT) => JSX.Element\r\n  style?: CSSProperties\r\n}\r\nexport const LocalToastRp = (props: LocalToastRpPropsT) => {\r\n  const { children, style } = props\r\n  const [queue, setQueue] = useState<ToastQT[]>([])\r\n\r\n  const push = (c: JSX.Element, type?: string) => {\r\n    setQueue((q) => [\r\n      ...q,\r\n      {\r\n        id: v4(),\r\n        content: c,\r\n        type,\r\n      },\r\n    ])\r\n    setTimeout(() => {\r\n      setQueue((q) => {\r\n        const [f, ...rest] = q\r\n        return rest || []\r\n      })\r\n    }, 4000)\r\n  }\r\n  return (\r\n    <>\r\n      <div style={{ position: 'relative' }}>\r\n        <Toast queue={queue} style={style} />\r\n      </div>\r\n      {children({ push })}\r\n    </>\r\n  )\r\n}\r\n\r\nconst color = (type: string | undefined) => {\r\n  switch (type) {\r\n    case 'good':\r\n      return {\r\n        color: '#aae6bf',\r\n        textShadow: '0px 3px 1px rgba(0,0,0,0.5)',\r\n      }\r\n    case 'base':\r\n      return {\r\n        color: 'rgba(255,255,255,0.8)',\r\n        textShadow: '0px 3px 1px rgba(0,0,0,0.5)',\r\n      }\r\n    default:\r\n      return {\r\n        // color: 'rgba(219, 114, 114, 0.8)',\r\n        // color: 'red',\r\n        color: 'rgba(255,158,158,0.8)',\r\n        textShadow: '0px 3px 1px rgba(0,0,0,1)',\r\n      }\r\n  }\r\n}\r\n","import { useSpring } from 'react-spring'\r\n\r\nconst springConfig = {\r\n  mass: 1,\r\n  tension: 1000,\r\n  friction: 15,\r\n}\r\nconst from = () => ({\r\n  transform: `rotate(0deg)`,\r\n})\r\nconst to = () => ({\r\n  transform: `rotate(3deg)`,\r\n})\r\n\r\nexport const useElementShake = () => {\r\n  const [shakeStyles, dispatch] = useSpring(() => ({\r\n    to: async (next: Function) => {\r\n      await next(to())\r\n    },\r\n\r\n    config: springConfig,\r\n    from: from(),\r\n    immediate: true,\r\n    reset: true,\r\n    reverse: true,\r\n  }))\r\n\r\n  const exec = () => {\r\n    dispatch({\r\n      ...to(),\r\n      config: springConfig,\r\n      from: from(),\r\n      immediate: false,\r\n      reset: true,\r\n      reverse: true,\r\n    } as any)\r\n  }\r\n\r\n  return { styles: shakeStyles, exec }\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { HealthGauge } from '../Gauge'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { TagPreview } from '../TagPreview'\r\nimport { Icon } from '../Icon'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Health } from './Health'\r\nimport { LocalToastRp } from '../../contexts/LocalToastContext'\r\nimport { ZERO_STATS } from '../../game/Stats/constants'\r\nimport { Theme } from '../../theme'\r\nimport { HoverHexBadge } from '../../elements/shapes'\r\nimport { animated } from 'react-spring'\r\nimport { useElementShake } from '../../hooks/useElementShake'\r\n\r\nexport interface EnemyCharacterPropsT {\r\n  character: tProcessedCharacter\r\n  activeCharacter: tProcessedCharacter\r\n  hoverable?: boolean\r\n  selected?: boolean\r\n  isHovering?: boolean\r\n  isBoss?: boolean\r\n  onClick?: () => void\r\n}\r\nexport const EnemyCharacter = (props: EnemyCharacterPropsT) => {\r\n  const {\r\n    character,\r\n    activeCharacter,\r\n    isBoss = false,\r\n    isHovering,\r\n    onClick,\r\n  } = props\r\n  const active = activeCharacter?.id === character?.id\r\n  const { styles, exec } = useElementShake()\r\n  return (\r\n    <animated.div style={styles}>\r\n      <animated.div\r\n        onClick={() => (onClick && character.health > 0 ? onClick() : null)}\r\n        style={{\r\n          borderWidth: 2,\r\n          width: isBoss ? 600 : 320,\r\n          position: 'relative',\r\n          cursor: onClick ? 'pointer' : 'default',\r\n          color: 'rgba(255,255,255,0.8)',\r\n          opacity: character.health <= 0 ? 0.5 : 1,\r\n          transition: 'all 0.4s',\r\n          transform: active ? 'scale(1.05)' : 'scale(0.95)',\r\n        }}\r\n      >\r\n        <FlexContainer style={{ alignItems: 'center' }}>\r\n          <FlexContainer>\r\n            <Icon\r\n              src={character.icon || ''}\r\n              shadow\r\n              fill={\r\n                (activeCharacter && character.id === activeCharacter.id) ||\r\n                isHovering\r\n                  ? 'lightsalmon'\r\n                  : 'white'\r\n              }\r\n              size={64}\r\n              style={{ zIndex: 1, position: 'relative', marginRight: -24 }}\r\n            />\r\n          </FlexContainer>\r\n          <FlexContainer $full $direction='column'>\r\n            <FlexContainer\r\n              style={{\r\n                justifyContent: 'flex-end',\r\n              }}\r\n            >\r\n              <span\r\n                style={{\r\n                  padding: '2px 4px',\r\n                  textAlign: 'right',\r\n                  fontSize: 18,\r\n                  lineHeight: '18px',\r\n                  background: 'rgba(0,0,0,0.4)',\r\n                  textShadow: '1px 1px 2px black',\r\n                  fontFamily: Theme.titleFont,\r\n                  color: isBoss\r\n                    ? 'red'\r\n                    : isHovering\r\n                    ? 'lightsalmon'\r\n                    : 'rgba(255,255,255,0.8)',\r\n                }}\r\n              >\r\n                {character.name}\r\n              </span>\r\n            </FlexContainer>\r\n            <div style={{ boxShadow: '0px 4px 15px rgba(0,0,0,1)' }}>\r\n              <HealthGauge\r\n                character={character}\r\n                height={20}\r\n                showNumbers={false}\r\n              />\r\n            </div>\r\n            <HoverHexBadge\r\n              direction='down'\r\n              content={<BoxContainer>Enemy Level</BoxContainer>}\r\n              position={{\r\n                left: -6,\r\n                bottom: -12,\r\n              }}\r\n              size={32}\r\n              childStyle={{\r\n                color: 'lightcoral',\r\n                paddingTop: 1,\r\n              }}\r\n            >\r\n              {character.level}\r\n            </HoverHexBadge>\r\n            <FlexContainer\r\n              style={{\r\n                position: 'absolute',\r\n                bottom: '-12px',\r\n                left: '40px',\r\n              }}\r\n            >\r\n              {character.status.map((status, i) => (\r\n                <TagPreview key={i} status={status} />\r\n              ))}\r\n              {character.immunities.map((status, i) => (\r\n                <TagPreview\r\n                  key={i}\r\n                  immunity={true}\r\n                  status={{\r\n                    type: status,\r\n                    immunities: [],\r\n                    stack: 0,\r\n                    stats: ZERO_STATS,\r\n                    duration: -1,\r\n                  }}\r\n                />\r\n              ))}\r\n            </FlexContainer>\r\n            <FlexContainer\r\n              style={{\r\n                position: 'absolute',\r\n                bottom: '-22px',\r\n                left: 'calc(100% - 58px)',\r\n                alignItems: 'center',\r\n                justifyContent: 'flex-start',\r\n              }}\r\n            >\r\n              {character.stats.armor > 0 && (\r\n                <HoverHexBadge\r\n                  direction='down'\r\n                  content={<BoxContainer>Armor</BoxContainer>}\r\n                  size={28}\r\n                  childStyle={{\r\n                    color: Theme.physicalColor,\r\n                    paddingTop: 1,\r\n                  }}\r\n                >\r\n                  <span>{character.stats.armor}</span>\r\n                </HoverHexBadge>\r\n              )}\r\n              {character.stats.resistance > 0 && (\r\n                <HoverHexBadge\r\n                  direction='down'\r\n                  content={<BoxContainer>Magic Resistance</BoxContainer>}\r\n                  size={28}\r\n                  childStyle={{\r\n                    color: Theme.magicColor,\r\n                    paddingTop: 1,\r\n                  }}\r\n                >\r\n                  <span>{character.stats.resistance}</span>\r\n                </HoverHexBadge>\r\n              )}\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n          <LocalToastRp\r\n            style={{ top: -24, right: -30, flexDirection: 'column' }}\r\n          >\r\n            {({ push }) => (\r\n              <Health character={character} push={push} shake={exec} />\r\n            )}\r\n          </LocalToastRp>\r\n        </FlexContainer>\r\n      </animated.div>\r\n    </animated.div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { RedButton } from '../../elements/button'\r\nimport { EnemyCharacter } from '../EnemyCharacter'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\n\r\nexport interface CombatPartyPropsT {\r\n  party: tProcessedParty\r\n}\r\nexport const CombatParty = (props: CombatPartyPropsT) => {\r\n  const { party } = props\r\n  const { activeCharacter, selectedSkill, next } = useCombatContext()\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { setShowSkillTooltips, hoverQueueCharacterId } = useUIContext()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          padding: '0 120px',\r\n          height: 112,\r\n          cursor: selectedSkill?.targetType === 'group' ? 'pointer' : 'default',\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <div key={c.id}>\r\n            <EnemyCharacter\r\n              activeCharacter={activeCharacter}\r\n              character={c}\r\n              isBoss={currentEncounter?.type === 'boss'}\r\n              isHovering={hoverQueueCharacterId === c.id}\r\n            />\r\n\r\n            <div style={{ height: 48 }}>\r\n              {selectedSkill &&\r\n                selectedSkill.targetType === 'single' &&\r\n                c.health > 0 &&\r\n                activeCharacter.partyId === PLAYER_PARTY_ID && (\r\n                  <FlexContainer\r\n                    $center\r\n                    style={{\r\n                      marginTop: -11,\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        boxShadow: '0px 2px 5px black',\r\n                        marginTop: -2,\r\n                        height: 36,\r\n                      }}\r\n                    >\r\n                      <RedButton\r\n                        onClick={() => {\r\n                          next(c)\r\n                          setShowSkillTooltips(false)\r\n                        }}\r\n                        $direction='down'\r\n                      >\r\n                        Attack\r\n                      </RedButton>\r\n                    </div>\r\n                  </FlexContainer>\r\n                )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && selectedSkill.targetType === 'group' && (\r\n        <FlexContainer $center style={{ marginTop: -48 }}>\r\n          <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n            <RedButton\r\n              onClick={() => {\r\n                next(party)\r\n                setShowSkillTooltips(false)\r\n              }}\r\n            >\r\n              Attack Group\r\n            </RedButton>\r\n          </div>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface AppHeaderPropsT {\r\n  children?: JSX.Element\r\n  left?: JSX.Element\r\n  right?: JSX.Element\r\n}\r\n\r\nexport const AppHeader = (props: AppHeaderPropsT) => {\r\n  const { children, left, right } = props\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        $center\r\n        style={{\r\n          background: Theme.darkBgColorSolid,\r\n          height: 52,\r\n          borderBottom: '2px solid rgba(255,255,255,0.3)',\r\n          boxShadow: '1px 1px 1px black',\r\n        }}\r\n      >\r\n        <FlexContainer $full>{left}</FlexContainer>\r\n        <FlexContainer $full>{children}</FlexContainer>\r\n        <FlexContainer $full>{right}</FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport Gold from '../../icons/svg/delapouite/coins.svg'\r\nimport { Icon } from '../Icon'\r\nimport { NumberChange } from '../NumberChange'\r\n\r\nexport const PartyResources = () => {\r\n  const { party } = usePartyContext()\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{ alignItems: 'center', paddingRight: 20, color: '#ded9a6' }}\r\n    >\r\n      <Icon src={Gold} size={18} style={{ marginRight: 8 }} fill='#ded9a6' />\r\n      <NumberChange value={party.gold} />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { AppHeader } from '../AppHeader'\r\nimport { PartyResources } from '../PartyResources'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { tQueue } from '../../game/Queue/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { getMax, getFirst, getSortedIds } from '../../game/Queue/util'\r\nimport { Theme } from '../../theme'\r\nimport { CharacterIcon } from '../CharacterIcon'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\n\r\nconst size = 40\r\nexport interface CombatQueuePropsT {\r\n  queue: tQueue\r\n  characters: tProcessedCharacter[]\r\n}\r\nexport const CombatQueue = (props: CombatQueuePropsT) => {\r\n  const { queue, characters } = props\r\n  const { isRunning } = useCombatContext()\r\n  const history = useHistory()\r\n  const { setHoverQueueCharacterId } = useUIContext()\r\n  const first = characters.find(\r\n    (c) => c.id === getFirst(queue),\r\n  ) as tProcessedCharacter\r\n  const sortedIds = getSortedIds(queue)\r\n  const bigList = [\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n  ]\r\n  const count = Math.floor((800 - 52) / size)\r\n  const [f, ...list] = Array(count)\r\n    .fill(null)\r\n    .map((_, i) => bigList[i])\r\n    .map((id) => characters.find((c) => c.id === id))\r\n    .filter((c) => c !== undefined)\r\n  const max = getMax(queue)\r\n  const min = 25\r\n  const widthCoef = max > min ? 100 / max : 100 / min\r\n  return (\r\n    <AppHeader\r\n      left={\r\n        <Button onClick={() => history.push('/')} style={{ borderBottom: 0 }}>\r\n          Restart\r\n        </Button>\r\n      }\r\n      right={\r\n        <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n          <PartyResources />\r\n        </FlexContainer>\r\n      }\r\n    >\r\n      <>\r\n        {first && isRunning && (\r\n          <FlexContainer\r\n            style={{\r\n              width: 800,\r\n              flexDirection: 'row-reverse',\r\n              boxShadow: '0px 0px 3px black',\r\n              borderLeft: '1px solid rgba(255,255,255,0.3)',\r\n              background: Theme.mediumBgColor,\r\n            }}\r\n          >\r\n            <FlexContainer\r\n              style={{ position: 'relative', marginLeft: size, zIndex: 7 }}\r\n            >\r\n              <CharacterIcon\r\n                character={first}\r\n                size={64}\r\n                width={64}\r\n                height={64}\r\n                style={{ borderTop: 'none' }}\r\n              />\r\n              <FlexContainer\r\n                $direction='column'\r\n                style={{\r\n                  position: 'absolute',\r\n                  background: 'rgba(255,255,255,0.8)',\r\n                  color: Theme.darkBgColor,\r\n                  zIndex: 2,\r\n                  width: 120,\r\n                  top: 16,\r\n                  paddingLeft: 4,\r\n                  right: '-124px',\r\n                }}\r\n              >\r\n                {first && <span>{first.name}'s Turn</span>}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n            <FlexContainer $full $direction='column'>\r\n              <FullContainer />\r\n              <FlexContainer $full style={{ position: 'relative' }}>\r\n                {characters\r\n                  .filter((c) => c.id !== first?.id && c.health > 0)\r\n                  .map((c, i) => (\r\n                    <div\r\n                      key={`${c?.id}-${i}`}\r\n                      style={{\r\n                        height: size - 10,\r\n                        width: size - 7,\r\n                        position: 'absolute',\r\n                        bottom: '2px',\r\n                        right: `calc(${queue[c.id] * widthCoef}% - ${\r\n                          size - 6\r\n                        }px)`,\r\n                        transition: 'all 0.3s',\r\n                        zIndex: i,\r\n                      }}\r\n                      onMouseEnter={() => setHoverQueueCharacterId(c.id)}\r\n                      onMouseLeave={() => setHoverQueueCharacterId(undefined)}\r\n                    >\r\n                      <CharacterIcon\r\n                        character={c}\r\n                        size={size}\r\n                        width={size}\r\n                        index={i}\r\n                        style={{ borderBottom: 'none' }}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        )}\r\n      </>\r\n    </AppHeader>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { tCharacter } from '../../game/Character/type'\r\n\r\nexport const Span = (color: string, text: JSX.Element | string) => (\r\n  <span style={{ color, fontWeight: 'bold' }}>{text}</span>\r\n)\r\nexport const SkillSpan = (skill: tSkill) => Span('plum', skill.name)\r\n\r\nexport const NameSpanBuilder = (party: tParty, enemyParty: tParty) => (\r\n  character: tCharacter,\r\n) => {\r\n  const isUserParty = character.partyId === party.id\r\n  const isEnemyParty = character.partyId === enemyParty.id\r\n  const color = isUserParty\r\n    ? 'lightgreen'\r\n    : isEnemyParty\r\n    ? 'lightsalmon'\r\n    : 'white'\r\n\r\n  return Span(color, character.name)\r\n}\r\n","import React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport { useCombatContext } from '../CombatContext'\r\nimport { Monospace } from '../../elements/monospace'\r\nimport { NameSpanBuilder, SkillSpan, Span } from './util'\r\nimport { getDamageResistance } from '../../game/Character/util'\r\nimport { STATUS_CONFIG } from '../../game/Status/constants'\r\n\r\nexport interface CombatLogContextT {\r\n  combatLog: JSX.Element[]\r\n  clear: () => void\r\n}\r\nconst defualtValue: CombatLogContextT = {\r\n  combatLog: [],\r\n  clear: () => {},\r\n}\r\nexport const CombatLogContext = createContext<CombatLogContextT>(defualtValue)\r\nexport const useCombatLogContext = () => useContext(CombatLogContext)\r\n\r\ntype DeadLogT = Record<string, boolean | undefined>\r\n\r\nexport interface CombatLogContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const CombatLogContextProvider = (\r\n  props: CombatLogContextProviderPropsT,\r\n) => {\r\n  const { children } = props\r\n  const { activeRound, roundResults, enemyParty, party } = useCombatContext()\r\n  const [combatLog, setCombatLog] = useState<JSX.Element[]>([])\r\n  const clear = () => setCombatLog([])\r\n  const [deadLog, setDeadLog] = useState<DeadLogT>({})\r\n  const NameSpan = NameSpanBuilder(party, enemyParty)\r\n  const log = (line: JSX.Element) =>\r\n    setCombatLog((log) => [\r\n      ...log,\r\n      <Monospace style={{ display: 'inline-block', fontWeight: 'normal' }}>\r\n        {line}\r\n      </Monospace>,\r\n    ])\r\n\r\n  useEffect(() => {\r\n    const characters = [...enemyParty.characters, ...party.characters]\r\n    setTimeout(() => {\r\n      characters.forEach((character) => {\r\n        if (character.health <= 0 && !deadLog[character.id]) {\r\n          setDeadLog((dLog) => ({ ...dLog, [character.id]: true }))\r\n          log(<span>{Span('lightcoral', `${character.name} died.`)}</span>)\r\n        }\r\n      })\r\n    }, 5)\r\n  }, [enemyParty, party])\r\n\r\n  useEffect(() => {\r\n    if (activeRound && activeRound) {\r\n      log(\r\n        <span>\r\n          {NameSpan(activeRound.sourceResult.source)} uses{' '}\r\n          {SkillSpan(activeRound.sourceResult.skill)}.\r\n        </span>,\r\n      )\r\n    }\r\n  }, [activeRound])\r\n\r\n  useEffect(() => {\r\n    if (roundResults.length === 0) return\r\n    const latestRounds = roundResults[roundResults.length - 1]\r\n    const baseRound = latestRounds.sourceResult\r\n    if (!baseRound) return\r\n\r\n    if (baseRound.skill.damage && baseRound.passedCount === 0) {\r\n      log(<span>{baseRound.source.name}'s attack missed.</span>)\r\n    }\r\n    if (!baseRound.skill.damage && !baseRound.perfect) {\r\n      log(<span>{SkillSpan(baseRound.skill)} failed.</span>)\r\n    }\r\n    if (baseRound.criticalHitSuccess) {\r\n      log(<span>{Span('gold', 'Critical Hit!')}</span>)\r\n    }\r\n    if (baseRound.perfect && baseRound.rollResults.length > 0) {\r\n      log(<span>{Span('gold', 'Perfect!')}</span>)\r\n    }\r\n    latestRounds.targetResults.forEach((round) => {\r\n      const targetParty = party.id === round.source.partyId ? enemyParty : party\r\n      if (round.passedCount > 0) {\r\n        if (round.dodgeSuccess) {\r\n          log(<span>{NameSpan(round.target)} dodged the attack.</span>)\r\n        } else if (round.totalDamage.value > 0) {\r\n          log(\r\n            <span>\r\n              {SkillSpan(round.skill)} deals{' '}\r\n              {Span('white', `${round.loggedDamgge.value} damage`)} to{' '}\r\n              {NameSpan(round.target)}.\r\n            </span>,\r\n          )\r\n        } else if (round.skill.damage) {\r\n          log(\r\n            <span>\r\n              {SkillSpan(round.skill)} did no damage to {NameSpan(round.target)}\r\n              .\r\n            </span>,\r\n          )\r\n        }\r\n        if (round.splashDamage.value > 0) {\r\n          targetParty.characters\r\n            .filter((c) => c.id !== round.target.id && c.health > 0)\r\n            .forEach((subTarget) => {\r\n              const splashDamageResistance = getDamageResistance(\r\n                subTarget,\r\n                round.splashDamage,\r\n              )\r\n              log(\r\n                <span>\r\n                  {SkillSpan(round.skill)} deals{' '}\r\n                  {Span(\r\n                    'white',\r\n                    `${\r\n                      round.splashDamage.value - splashDamageResistance\r\n                    } splash damage`,\r\n                  )}{' '}\r\n                  to {NameSpan(subTarget)}.\r\n                </span>,\r\n              )\r\n            })\r\n        }\r\n\r\n        if (round.reflectedDamage.value > 0) {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} reflected{' '}\r\n              {Span('white', `${round.reflectedDamage.value} damage`)}\r\n            </span>,\r\n          )\r\n        }\r\n\r\n        /* TODO\r\n        if (round.healing > 0) {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} gained{' '}\r\n              {Span('white', `${round.healing} HP`)} from{' '}\r\n              {SkillSpan(round.skill)}\r\n            </span>,\r\n          )\r\n        }\r\n        */\r\n\r\n        round.addedStatus.forEach((status) => {\r\n          const statusConfig = STATUS_CONFIG[status]\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} became {status}\r\n              {statusConfig.duration > 0\r\n                ? ` (${statusConfig.duration} turns)`\r\n                : ''}\r\n              .\r\n            </span>,\r\n          )\r\n        })\r\n      }\r\n    })\r\n  }, [roundResults.length])\r\n\r\n  return (\r\n    <CombatLogContext.Provider value={{ combatLog, clear }}>\r\n      {children}\r\n    </CombatLogContext.Provider>\r\n  )\r\n}\r\n","import React, { useRef, useEffect, useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { useCombatLogContext } from '../../contexts/CombatLogContext'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport { Button } from '../../elements/button'\r\nimport { Theme } from '../../theme'\r\n\r\nexport const CombatLog = () => {\r\n  const { combatLog } = useCombatLogContext()\r\n  const scrollRef = useRef<HTMLDivElement>(null)\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n  useEffect(() => {\r\n    if (scrollRef.current && isExpanded) {\r\n      scrollRef.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n  }, [combatLog])\r\n  const style = useSpring({\r\n    minHeight: isExpanded ? 263 : 0,\r\n    maxHeight: isExpanded ? 263 : 0,\r\n  })\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{\r\n        minWidth: 300,\r\n        overflow: 'auto',\r\n        background: Theme.darkBgColor,\r\n        fontSize: 12,\r\n        color: 'rgba(255,255,255,0.8)',\r\n      }}\r\n    >\r\n      <FlexContainer\r\n        style={{\r\n          background: Theme.darkBgColor,\r\n          padding: 8,\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <FullContainer>Combat Log</FullContainer>\r\n        <Button\r\n          onClick={() => setIsExpanded((v) => !v)}\r\n          style={{ padding: '2px 8px' }}\r\n        >\r\n          {isExpanded ? '_' : '+'}\r\n        </Button>\r\n      </FlexContainer>\r\n      <animated.div\r\n        style={{\r\n          overflow: 'auto',\r\n          ...style,\r\n        }}\r\n      >\r\n        <FlexContainer $direction='column' style={{ padding: 8 }}>\r\n          {combatLog.map((line, i) => (\r\n            <span key={i}>{line}</span>\r\n          ))}\r\n        </FlexContainer>\r\n        <div ref={scrollRef} />\r\n      </animated.div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { FlexContainer, FullContainer } from '../elements/flex'\r\nimport { RoundResultRenderer } from '../components/RoundResultRenderer'\r\nimport { CombatActions } from '../components/CombatActions'\r\nimport { CombatParty } from '../components/CombatParty'\r\nimport { CombatQueue } from '../components/CombatQueue'\r\nimport { CombatLog } from '../components/CombatLog'\r\nimport { useUIContext } from '../contexts/UIContext'\r\nimport { useCombatStart } from '../hooks/useCombatStart'\r\nimport { useCombatLogContext } from '../contexts/CombatLogContext'\r\n\r\nexport const Combat = () => {\r\n  const {\r\n    enemyParty,\r\n    activeCharacter,\r\n    characters,\r\n    queue,\r\n    isRunning,\r\n    isRenderingResult,\r\n    onSkillSelect,\r\n  } = useCombatContext()\r\n\r\n  const { setOnCharacterConsumableClick } = useUIContext()\r\n  const { clear } = useCombatLogContext()\r\n  useCombatStart()\r\n  useEffect(() => {\r\n    setOnCharacterConsumableClick((c, index, item) => {\r\n      if (!c) return\r\n      if (c.id === activeCharacter.id) {\r\n        onSkillSelect(item.skill, index)\r\n      }\r\n    })\r\n  }, [onSkillSelect, activeCharacter])\r\n  useEffect(() => {\r\n    clear()\r\n  }, [])\r\n\r\n  return (\r\n    <FlexContainer $full style={{ height: '100%' }}>\r\n      <FlexContainer $full $direction='column'>\r\n        <CombatQueue queue={queue} characters={characters} />\r\n        <FlexContainer\r\n          $direction='column'\r\n          $full\r\n          style={{ padding: '30px 10px 0 10px' }}\r\n        >\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{ marginBottom: 24, minHeight: 112 }}\r\n          >\r\n            <CombatParty party={enemyParty} />\r\n          </FlexContainer>\r\n          <FlexContainer $full>\r\n            {isRunning && activeCharacter && (\r\n              <>\r\n                <FullContainer />\r\n                <FlexContainer $direction='column'>\r\n                  <FullContainer />\r\n                  <div style={{ marginTop: 24 }}>\r\n                    {!isRenderingResult && <CombatActions />}\r\n                    <RoundResultRenderer isModal={false} />\r\n                  </div>\r\n                  <FullContainer />\r\n                </FlexContainer>\r\n                <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n                  <FlexContainer $direction='column'>\r\n                    <CombatLog />\r\n                  </FlexContainer>\r\n                </FlexContainer>\r\n              </>\r\n            )}\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useModalContext } from '../contexts/ModalContext'\r\nimport { useCombatLogContext } from '../contexts/CombatLogContext'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { FlexContainer } from '../elements/flex'\r\nimport { Icon } from '../components/Icon'\r\nimport { Theme } from '../theme'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\n\r\nexport const useCombatStart = (delay: number = 1000) => {\r\n  const { open, close } = useModalContext()\r\n  const { clear } = useCombatLogContext()\r\n  const { started } = useGameStateContext()\r\n  const { enemyParty, start, reset } = useCombatContext()\r\n  useEffect(() => {\r\n    clear()\r\n    if (started) {\r\n      open(\r\n        <div style={{ textAlign: 'center' }}>\r\n          <h1 style={{ fontFamily: Theme.titleFont, userSelect: 'none' }}>\r\n            Combat Start!\r\n          </h1>\r\n          <FlexContainer\r\n            style={{\r\n              justifyContent: 'space-around',\r\n              marginTop: 32,\r\n              marginBottom: 40,\r\n            }}\r\n          >\r\n            {enemyParty.characters.map((c) => (\r\n              <FlexContainer\r\n                key={c.id}\r\n                style={{\r\n                  background: '#c27a5d',\r\n                  border: '2px solid rgba(255,255,255,0.8)',\r\n                  height: 60,\r\n                  width: 60,\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                }}\r\n              >\r\n                <Icon\r\n                  src={c.icon || ''}\r\n                  shadow\r\n                  fill={'white'}\r\n                  size={60}\r\n                  style={{ zIndex: 1, position: 'relative' }}\r\n                />\r\n              </FlexContainer>\r\n            ))}\r\n          </FlexContainer>\r\n        </div>,\r\n        {},\r\n        true,\r\n      )\r\n      setTimeout(() => {\r\n        close()\r\n        start()\r\n      }, 1500)\r\n    }\r\n    return () => {\r\n      reset()\r\n      clear()\r\n    }\r\n  }, [])\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Route, useHistory, useLocation } from 'react-router-dom'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport { useModalContext } from '../contexts/ModalContext'\r\nimport { Theme } from '../theme'\r\n\r\nexport const makeRoute = (path: string, Component: React.FC) => (\r\n  <Route path={`${path}`}>\r\n    <Component />\r\n  </Route>\r\n)\r\n\r\nexport const RouteController = () => {\r\n  const { currentEncounter, floor, floors, started } = useGameStateContext()\r\n  const history = useHistory()\r\n  const { open } = useModalContext()\r\n  useEffect(() => {\r\n    console.log('started', started)\r\n    if (!started) {\r\n      history.push('/')\r\n    }\r\n    if (floor > floors.length - 2) {\r\n      open(\r\n        <div style={{ textAlign: 'center', fontFamily: Theme.titleFont }}>\r\n          <h1>You've Defeated the Lich! You did it!</h1>\r\n        </div>,\r\n      )\r\n      history.push('/')\r\n    } else if (\r\n      currentEncounter &&\r\n      !currentEncounter.completed &&\r\n      (currentEncounter.type === 'combat' || currentEncounter.type === 'boss')\r\n    ) {\r\n      history.push('/combat')\r\n    } else if (started && currentEncounter && currentEncounter.completed) {\r\n      history.push('/party')\r\n    }\r\n  }, [currentEncounter, started])\r\n  return null\r\n}\r\n","import React, { useState, CSSProperties } from 'react'\r\nimport { withStyle } from 'styletron-react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Button } from '../../elements/button'\r\nimport { tShopEncounter } from '../../game/Encounter/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { Theme } from '../../theme'\r\nimport { ItemCard } from '../ItemCard'\r\n\r\nconst CardList = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  }\r\n})\r\n\r\ninterface ShopTabT {\r\n  key: string\r\n  label: string\r\n  render: (\r\n    encounter: tShopEncounter,\r\n    purchaseItem: (item: tArmor | tWeapon | tConsumable, cost: number) => void,\r\n  ) => JSX.Element\r\n}\r\nconst tabs: ShopTabT[] = [\r\n  {\r\n    key: 'all',\r\n    label: 'All',\r\n    render: (encounter: tShopEncounter, purchaseItem) => (\r\n      <FlexContainer $direction='column'>\r\n        <h3>Consumables</h3>\r\n        <CardList>\r\n          {encounter.items\r\n            .filter((i) => i.itemType === 'consumable')\r\n            .map((a) => (\r\n              <ItemCard\r\n                item={a as tConsumable}\r\n                showBuyButton={true}\r\n                cost={encounter.costs[a.id]}\r\n                onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n              />\r\n            ))}\r\n        </CardList>\r\n        <h3>Weapons</h3>\r\n        <CardList>\r\n          {encounter.items\r\n            .filter((i) => i.itemType === 'weapon')\r\n            .map((w) => (\r\n              <ItemCard\r\n                item={w}\r\n                showBuyButton={true}\r\n                cost={encounter.costs[w.id]}\r\n                onBuyClick={() => purchaseItem(w, encounter.costs[w.id])}\r\n              />\r\n            ))}\r\n        </CardList>\r\n        <h3>Armor</h3>\r\n        <CardList>\r\n          {encounter.items\r\n            .filter((i) => i.itemType === 'armor')\r\n            .map((a) => (\r\n              <ItemCard\r\n                item={a}\r\n                showBuyButton={true}\r\n                cost={encounter.costs[a.id]}\r\n                onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n              />\r\n            ))}\r\n        </CardList>\r\n      </FlexContainer>\r\n    ),\r\n  },\r\n  {\r\n    key: 'weapons',\r\n    label: 'Weaons',\r\n    render: (encounter: tShopEncounter, purchaseItem) => (\r\n      <CardList>\r\n        {encounter.items\r\n          .filter((i) => i.itemType === 'weapon')\r\n          .map((w) => (\r\n            <ItemCard\r\n              item={w}\r\n              showBuyButton={true}\r\n              cost={encounter.costs[w.id]}\r\n              onBuyClick={() => purchaseItem(w, encounter.costs[w.id])}\r\n            />\r\n          ))}\r\n      </CardList>\r\n    ),\r\n  },\r\n  {\r\n    key: 'armor',\r\n    label: 'Armor',\r\n    render: (encounter: tShopEncounter, purchaseItem) => (\r\n      <CardList>\r\n        {encounter.items\r\n          .filter((i) => i.itemType === 'armor')\r\n          .map((a) => (\r\n            <ItemCard\r\n              item={a}\r\n              showBuyButton={true}\r\n              cost={encounter.costs[a.id]}\r\n              onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n            />\r\n          ))}\r\n      </CardList>\r\n    ),\r\n  },\r\n  {\r\n    key: 'consumables',\r\n    label: 'Consumables',\r\n    render: (encounter: tShopEncounter, purchaseItem) => (\r\n      <CardList>\r\n        {encounter.items\r\n          .filter((i) => i.itemType === 'consumable')\r\n          .map((a) => (\r\n            <ItemCard\r\n              item={a}\r\n              showBuyButton={true}\r\n              cost={encounter.costs[a.id]}\r\n              onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n            />\r\n          ))}\r\n      </CardList>\r\n    ),\r\n  },\r\n]\r\n\r\nexport interface ShopPropsT {}\r\nexport const Shop = (props: ShopPropsT) => {\r\n  const {} = props\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { purchaseItem } = usePartyContext()\r\n  const [activeTab, setActiveTab] = useState(\r\n    tabs.find((t) => t.key === 'all') as ShopTabT,\r\n  )\r\n  const active = (tab: ShopTabT): CSSProperties =>\r\n    tab.key === activeTab.key\r\n      ? {\r\n          borderColor: 'white',\r\n        }\r\n      : {}\r\n  return (\r\n    <BoxContainer\r\n      style={{ margin: '20px 20px 20px 0', flex: 1, minWidth: 762 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <FlexContainer style={{ alignItems: 'center' }}>\r\n        <FullContainer>\r\n          <h1 style={{ margin: 0, fontFamily: Theme.titleFont }}>\r\n            Black Market\r\n          </h1>\r\n        </FullContainer>\r\n        <FlexContainer>\r\n          {tabs.map((tab) => (\r\n            <Button\r\n              key={tab.label}\r\n              style={active(tab)}\r\n              onClick={() => setActiveTab(tab)}\r\n            >\r\n              {tab.label}\r\n            </Button>\r\n          ))}\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n      <FlexContainer\r\n        $direction='column'\r\n        $full\r\n        style={{\r\n          overflow: 'auto',\r\n          marginTop: 10,\r\n          height: 'calc(100vh - 374px)',\r\n          overflowY: 'auto',\r\n        }}\r\n      >\r\n        {activeTab.render(currentEncounter as tShopEncounter, purchaseItem)}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Kefir from 'kefir'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { tShrineEncounter } from '../../game/Encounter/type'\r\nimport { SkillChecks } from '../SkillChecks'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { resolveCheck } from '../../game/Roll/util'\r\nimport { ZERO_REWARD } from '../../game/Encounter/constants'\r\nimport { commitRewards } from '../../game/Party/util'\r\nimport { Theme } from '../../theme'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { CombatVictoryModalPure } from '../CombatVictoryModal/pure'\r\n\r\nexport interface ShrinePropsT {}\r\nexport const Shrine = (props: ShrinePropsT) => {\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { open, close } = useModalContext()\r\n  const { party, rawParty, updateParty, equipItem } = usePartyContext()\r\n  const encounter = currentEncounter as tShrineEncounter\r\n  const [results, setResults] = useState<boolean[]>([])\r\n  const onClick = (c: tProcessedCharacter) => {\r\n    const stream = Kefir.sequentially(\r\n      200,\r\n      Array(encounter.rolls - 1)\r\n        .fill(0)\r\n        .map((_, i) => ({\r\n          index: i,\r\n          result: resolveCheck(c, encounter.stat),\r\n        })),\r\n    )\r\n    stream.onValue((value) => {\r\n      setResults((r) => [...r, value.result])\r\n    })\r\n    stream.onEnd(() => {})\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (results.length === encounter.rolls - 1) {\r\n      const rewards =\r\n        encounter.results[results.filter((r) => r === true).length]\r\n      if (!rewards) {\r\n        return\r\n      }\r\n      if (rewards.items.length > 0) {\r\n        open(\r\n          <CombatVictoryModalPure\r\n            title='You got an item!'\r\n            showOther={false}\r\n            rewards={rewards}\r\n            onNextClick={close}\r\n            onEquipClick={equipItem}\r\n          />,\r\n        )\r\n      }\r\n      updateParty(commitRewards(rawParty, rewards))\r\n    }\r\n  }, [results])\r\n\r\n  return (\r\n    <BoxContainer\r\n      style={{ margin: '20px 20px 20px 0', flex: 1 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <FlexContainer>\r\n        <FlexContainer $direction='column'>\r\n          <h1\r\n            style={{\r\n              margin: '0 0 24px 0',\r\n              textTransform: 'capitalize',\r\n              fontFamily: Theme.titleFont,\r\n            }}\r\n          >\r\n            {encounter.stat} Shrine\r\n          </h1>\r\n          <div style={{ maxWidth: 300, marginBottom: 48 }}>\r\n            Shines are optional encounters that test one character in your\r\n            party's stats. Be careful, as if you fail, you may get a negative\r\n            outcome!\r\n          </div>\r\n          <FlexContainer>\r\n            <FlexContainer $direction='column'>\r\n              <SkillChecks\r\n                stat={encounter.stat}\r\n                rolls={encounter.rolls - 1}\r\n                results={results}\r\n              />\r\n              <FlexContainer style={{ justifyContent: 'center' }}>\r\n                {party.characters.map((c) => (\r\n                  <Button\r\n                    onClick={() => onClick(c)}\r\n                    disabled={results.length > 0}\r\n                  >\r\n                    {c.name} ({c.stats[encounter.stat]})\r\n                  </Button>\r\n                ))}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n        <FlexContainer\r\n          $direction='column'\r\n          $full\r\n          style={{ padding: '86px 16px 0 16px' }}\r\n        >\r\n          {encounter.results.map((reward, index) => (\r\n            <FlexContainer\r\n              style={{\r\n                padding: 8,\r\n                alignItems: 'center',\r\n                marginBottom: 4,\r\n                background:\r\n                  results.length === encounter.rolls - 1 &&\r\n                  index === results.filter((r) => r === true).length\r\n                    ? 'rgba(144, 238, 144, 0.3)'\r\n                    : 'linear-gradient(90deg, rgba(255,255,255,0.3) 0%, rgba(255,255,255,0) 100%)',\r\n              }}\r\n            >\r\n              <span style={{ fontSize: 24 }}>{index}</span>\r\n              <span\r\n                style={{\r\n                  display: 'inline-block',\r\n                  marginLeft: 8,\r\n                  textTransform: 'capitalize',\r\n                }}\r\n              >\r\n                {reward.gold > 0 && ` ${reward.gold} Gold`}\r\n                {reward.xp > 0 && ` +${reward.xp} Experience`}\r\n                {reward.status.length > 0 && ` ${reward.status}`}\r\n                {reward.items.length > 0 && ` Random Item`}\r\n                {JSON.stringify(reward) === JSON.stringify(ZERO_REWARD) &&\r\n                  ' No Effect'}\r\n              </span>\r\n            </FlexContainer>\r\n          ))}\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { RedButton } from '../../elements/button'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tBossEncounter } from '../../game/Encounter/type'\r\nimport { BOSS_ITEMS } from '../../game/Weapon/constants'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { Theme } from '../../theme'\r\nimport { ItemCard } from '../ItemCard'\r\n\r\nexport const BossRewards = () => {\r\n  const { previousEncounter } = useGameStateContext()\r\n  const { nextFloor } = useGameStateContext()\r\n  const { updateParty, rawParty } = usePartyContext()\r\n  const [chosenReward, setChosenReward] = useState<\r\n    tArmor | tWeapon | undefined\r\n  >()\r\n  if (!previousEncounter) return null\r\n  const boss = (previousEncounter as tBossEncounter).party.characters[0]\r\n\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{\r\n        padding: 16,\r\n        background: Theme.darkBgColor,\r\n        marginRight: 16,\r\n        marginTop: 16,\r\n      }}\r\n    >\r\n      <h1\r\n        style={{\r\n          marginTop: 8,\r\n          fontFamily: Theme.titleFont,\r\n          textAlign: 'center',\r\n          color: 'white',\r\n        }}\r\n      >\r\n        Choose your reward\r\n      </h1>\r\n      <FlexContainer $center>\r\n        {(BOSS_ITEMS[boss.id] || []).map((item) => (\r\n          <ItemCard\r\n            item={item}\r\n            showBuyButton={!chosenReward || chosenReward.id !== item.id}\r\n            buyText={'Choose This Item'}\r\n            onBuyClick={() => setChosenReward(item)}\r\n          />\r\n        ))}\r\n      </FlexContainer>\r\n      {chosenReward && (\r\n        <FlexContainer $center style={{ marginTop: 24 }}>\r\n          <RedButton\r\n            onClick={() => {\r\n              updateParty({\r\n                ...rawParty,\r\n                items: [...rawParty.items, chosenReward],\r\n              })\r\n              nextFloor()\r\n            }}\r\n          >\r\n            Next Floor\r\n          </RedButton>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Shop } from '../Shop'\r\nimport { Shrine } from '../Shrine'\r\nimport { BossRewards } from '../BossRewards'\r\n\r\nexport const NonCombatEncounter = () => {\r\n  const { currentEncounter } = useGameStateContext()\r\n  return (\r\n    <FlexContainer $direction='column' $full style={{ marginLeft: '60px' }}>\r\n      {currentEncounter && currentEncounter.type === 'shop' && <Shop />}\r\n      {currentEncounter && currentEncounter.type === 'shrine' && <Shrine />}\r\n      {currentEncounter && currentEncounter.type === 'boss' && <BossRewards />}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\nimport { Theme } from '../theme'\r\n\r\nexport const FakeLink = styled('span', (props: any) => {\r\n  return {\r\n    whiteSpace: 'nowrap',\r\n    ':hover': {\r\n      textDecoration: 'underline',\r\n      cursor: 'pointer',\r\n    },\r\n  }\r\n})\r\n\r\nexport const HeadingSm = styled('span', (props: any) => {\r\n  return {\r\n    fontFamily: Theme.titleFont,\r\n    color: 'white',\r\n    fontSize: '20px',\r\n    display: 'inline-block',\r\n    marginBottom: '16px',\r\n  }\r\n})\r\n\r\nexport const Text = styled('span', (props: any) => {\r\n  return {\r\n    color: 'rgba(255,255,255,0.75)',\r\n    lineHeight: '1.4',\r\n    marginBottom: 16,\r\n  }\r\n})\r\n","import { tEncounter } from '../type'\r\n\r\nexport const ENCOUNTER_TEXTS: Record<\r\n  number,\r\n  Record<number, (pe?: tEncounter) => string>\r\n> = {\r\n  0: {\r\n    0: () =>\r\n      'As your party begins their journey, you travel down an empty road. You arrive at a split path, you must make a choice on which way to proceed.',\r\n    1: () =>\r\n      `After your party's first battle, you notice a that the forest has been covered in a thick darkness. You feel a force pulling you deeper into the forest.`,\r\n  },\r\n  1: {},\r\n  2: {},\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { HeadingSm, Text } from '../../elements/typography'\r\nimport { ENCOUNTER_TEXTS } from '../../game/Encounter/text'\r\nimport { getDepth } from '../../grid/util'\r\n\r\nexport interface ChoicePropsT {}\r\n\r\nexport const Choice = (props: ChoicePropsT) => {\r\n  const {\r\n    floor,\r\n    floors,\r\n    currentEncounter,\r\n    previousEncounter,\r\n    currentHex,\r\n  } = useGameStateContext()\r\n  const currentFloor = floors[floor]\r\n  const depth = currentEncounter\r\n    ? getDepth(currentHex, currentFloor.size) + 1\r\n    : 0\r\n  const text = ENCOUNTER_TEXTS[floor][depth]\r\n  return (\r\n    <FlexContainer $direction='column' style={{ paddingTop: 24 }}>\r\n      <HeadingSm\r\n        style={{\r\n          textAlign: 'center',\r\n        }}\r\n      >\r\n        Your Journey{' '}\r\n        {currentEncounter === undefined && floor === 0 ? 'Begins' : 'Continues'}\r\n        .\r\n      </HeadingSm>\r\n      <Text\r\n        style={{\r\n          marginBottom: 24,\r\n          padding: 8,\r\n        }}\r\n      >\r\n        {text && text()}\r\n      </Text>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Button } from '../../elements/button'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tShopEncounter } from '../../game/Encounter/type'\r\n\r\nexport interface ShopPropsT {\r\n  currentEncounter: tShopEncounter\r\n}\r\nexport const Shop = (props: ShopPropsT) => {\r\n  const { currentEncounter } = props\r\n  const { completeCurrent } = useGameStateContext()\r\n  return (\r\n    <FlexContainer $direction='column' style={{ justifyContent: 'center' }}>\r\n      {currentEncounter.type === 'shop' && (\r\n        <>\r\n          <h3\r\n            style={{\r\n              margin: '0 0 16px 0',\r\n              color: 'white',\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            You found a shop!\r\n          </h3>\r\n          <span\r\n            style={{\r\n              color: 'rgba(255,255,255,0.7)',\r\n              marginBottom: 24,\r\n            }}\r\n          >\r\n            Amidst your journey, you discover a merchant, a traveling salemen\r\n            with all manor of wares to assist in your adventure.\r\n          </span>\r\n        </>\r\n      )}\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        <Button onClick={() => completeCurrent()}>Leave Shop</Button>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Button } from '../../elements/button'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tShrineEncounter } from '../../game/Encounter/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ShrinePropsT {\r\n  currentEncounter: tShrineEncounter\r\n}\r\n\r\nexport const Shrine = (props: ShrinePropsT) => {\r\n  const { completeCurrent } = useGameStateContext()\r\n  return (\r\n    <FlexContainer $direction='column' style={{ justifyContent: 'center' }}>\r\n      <h3\r\n        style={{\r\n          fontFamily: Theme.titleFont,\r\n          fontWeight: 'normal',\r\n          textAlign: 'center',\r\n        }}\r\n      >\r\n        You've discoved a secret shrine.\r\n      </h3>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        <Button onClick={() => completeCurrent()}>Leave Shrine</Button>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Choice } from './Choice'\r\nimport { Shop } from './Shop'\r\nimport { tShopEncounter, tShrineEncounter } from '../../game/Encounter/type'\r\nimport { Shrine } from './Shrine'\r\n\r\nexport const EncounterActions = () => {\r\n  const { currentEncounter } = useGameStateContext()\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{\r\n        background:\r\n          'linear-gradient(0deg, rgba(0,7,12,0) 0%, rgba(0,7,12,0.68) 10%, rgba(0,7,18,1) 35%)',\r\n        marginRight: '60px',\r\n        padding: '16px 8px',\r\n        width: 300,\r\n        color: 'rgba(255,255,255,0.8)',\r\n      }}\r\n    >\r\n      {currentEncounter ? (\r\n        <>\r\n          {currentEncounter.completed ? (\r\n            <Choice />\r\n          ) : (\r\n            <>\r\n              {currentEncounter.type === 'shop' && (\r\n                <Shop currentEncounter={currentEncounter as tShopEncounter} />\r\n              )}\r\n              {currentEncounter.type === 'shrine' && (\r\n                <Shrine\r\n                  currentEncounter={currentEncounter as tShrineEncounter}\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <Choice />\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StaticIconProps } from '.'\r\n\r\nexport const Boss = (props: StaticIconProps) => {\r\n  const { fill = 'white' } = props\r\n  return (\r\n    <g\r\n      style={{\r\n        transform: 'scale(0.01)',\r\n        zIndex: 2,\r\n        filter: 'drop-shadow(3px 3px 2px rgba(0, 0, 0, 0.7)',\r\n      }}\r\n    >\r\n      <g style={{ transform: 'translate(-253px, -220px)' }}>\r\n        <path\r\n          height='24px'\r\n          width='24px'\r\n          d='M92.406 13.02l-.164 156.353c3.064.507 6.208 1.38 9.39 2.627 36.496 14.306 74.214 22.435 111.864 25.473l43.402-60.416 42.317 58.906c36.808-4.127 72.566-12.502 105.967-24.09 3.754-1.302 7.368-2.18 10.818-2.6l1.523-156.252-75.82 95.552-34.084-95.55-53.724 103.74-53.722-103.74-35.442 95.55-72.32-95.55h-.006zm164.492 156.07l-28.636 39.86 28.634 39.86 28.637-39.86-28.635-39.86zM86.762 187.55c-2.173-.08-3.84.274-5.012.762-2.345.977-3.173 2.19-3.496 4.196-.645 4.01 2.825 14.35 23.03 21.36 41.7 14.468 84.262 23.748 126.778 26.833l-17.75-24.704c-38.773-3.285-77.69-11.775-115.5-26.596-3.197-1.253-5.877-1.77-8.05-1.85zm333.275.19c-2.156.052-5.048.512-8.728 1.79-33.582 11.65-69.487 20.215-106.523 24.646l-19.264 26.818c40.427-2.602 80.433-11.287 119.22-26.96 15.913-6.43 21.46-17.81 21.36-22.362-.052-2.276-.278-2.566-1.753-3.274-.738-.353-2.157-.71-4.313-.658zm-18.117 47.438c-42.5 15.87-86.26 23.856-130.262 25.117l-14.76 20.547-14.878-20.71c-44.985-1.745-89.98-10.23-133.905-24.306-12.78 28.51-18.94 61.14-19.603 93.44 37.52 17.497 62.135 39.817 75.556 64.63C177 417.8 179.282 443.62 174.184 467.98c7.72 5.007 16.126 9.144 24.98 12.432l5.557-47.89 18.563 2.154-5.935 51.156c9.57 2.21 19.443 3.53 29.377 3.982v-54.67h18.69v54.49c9.903-.638 19.705-2.128 29.155-4.484l-5.857-50.474 18.564-2.155 5.436 46.852c8.747-3.422 17.004-7.643 24.506-12.69-5.758-24.413-3.77-49.666 9.01-72.988 13.28-24.234 37.718-46 74.803-64.29-.62-33.526-6.687-66.122-19.113-94.23zm-266.733 47.006c34.602.23 68.407 12.236 101.358 36.867-46.604 33.147-129.794 34.372-108.29-36.755 2.315-.09 4.626-.127 6.933-.11zm242.825 0c2.307-.016 4.617.022 6.93.11 21.506 71.128-61.684 69.903-108.288 36.757 32.95-24.63 66.756-36.637 101.358-36.866zM255.164 332.14c11.77 21.725 19.193 43.452 25.367 65.178h-50.737c4.57-21.726 13.77-43.45 25.37-65.18z'\r\n          fill={fill}\r\n          style={{ filter: 'url(#shadow)' }}\r\n        />\r\n      </g>\r\n    </g>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StaticIconProps } from '.'\r\n\r\nexport const Combat = (props: StaticIconProps) => {\r\n  const { fill = '#fff' } = props\r\n  return (\r\n    <g style={{ transform: 'scale(0.01)', zIndex: 2 }}>\r\n      <g style={{ transform: 'translate(-253px, -232px)' }}>\r\n        <path\r\n          d='M19.75 14.438c59.538 112.29 142.51 202.35 232.28 292.718l3.626 3.75.063-.062c21.827 21.93 44.04 43.923 66.405 66.25-18.856 14.813-38.974 28.2-59.938 40.312l28.532 28.53 68.717-68.717c42.337 27.636 76.286 63.646 104.094 105.81l28.064-28.06c-42.47-27.493-79.74-60.206-106.03-103.876l68.936-68.938-28.53-28.53c-11.115 21.853-24.413 42.015-39.47 60.593-43.852-43.8-86.462-85.842-130.125-125.47-.224-.203-.432-.422-.656-.625C183.624 122.75 108.515 63.91 19.75 14.437zm471.875 0c-83.038 46.28-154.122 100.78-221.97 161.156l22.814 21.562 56.81-56.812 13.22 13.187-56.438 56.44 24.594 23.186c61.802-66.92 117.6-136.92 160.97-218.72zm-329.53 125.906l200.56 200.53c-4.36 4.443-8.84 8.793-13.405 13.032L148.875 153.53l13.22-13.186zm-76.69 113.28l-28.5 28.532 68.907 68.906c-26.29 43.673-63.53 76.414-106 103.907l28.063 28.06c27.807-42.164 61.758-78.174 104.094-105.81l68.718 68.717 28.53-28.53c-20.962-12.113-41.08-25.5-59.937-40.313 17.865-17.83 35.61-35.433 53.157-52.97l-24.843-25.655-55.47 55.467c-4.565-4.238-9.014-8.62-13.374-13.062l55.844-55.844-24.53-25.374c-18.28 17.856-36.602 36.06-55.158 54.594-15.068-18.587-28.38-38.758-39.5-60.625z'\r\n          fill={fill}\r\n          style={{ filter: 'url(#shadow)' }}\r\n          fill-rule='evenodd'\r\n        />\r\n      </g>\r\n    </g>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StaticIconProps } from '.'\r\n\r\nexport const Random = (props: StaticIconProps) => {\r\n  const { fill = '#fff' } = props\r\n  return (\r\n    <g style={{ transform: 'scale(0.01)', zIndex: 2 }}>\r\n      <g style={{ transform: 'translate(-253px, -232px)' }}>\r\n        <path\r\n          d='M255.703 44.764c-6.176 0-12.353 1.384-17.137 4.152l-152.752 88.36c-9.57 5.535-9.57 14.29 0 19.826l152.752 88.359c9.57 5.536 24.703 5.536 34.272 0l152.754-88.36c9.57-5.534 9.57-14.289 0-19.824L272.838 48.916c-4.785-2.77-10.96-4.152-17.135-4.152zM238.695 87.27l22.838 14.273c-6.747 1.007-12.586 2.28-17.515 3.818-4.985 1.504-9.272 3.334-12.864 5.489-7.721 4.633-11.09 9.897-10.105 15.793.93 5.86 6.223 12.247 15.875 19.16.26-3.467 1.457-6.652 3.59-9.553 2.077-2.936 5.159-5.629 9.244-8.08 10.28-6.168 22.259-8.83 35.935-7.98 13.722.821 26.568 4.973 38.537 12.455 13.239 8.274 20.334 17.024 21.284 26.251.894 9.194-4.584 17.346-16.436 24.458-13.064 7.838-28.593 10.533-46.588 8.085-18.004-2.508-36.964-9.986-56.877-22.431-20.41-12.756-32.258-25.276-35.547-37.56-3.299-12.347 2.348-22.895 16.938-31.65 4.624-2.774 9.554-5.192 14.79-7.253 5.238-2.061 10.871-3.82 16.901-5.275zm38.678 53.23c-4.169-.007-7.972 1.02-11.406 3.08-4.534 2.72-6.125 5.906-4.774 9.555 1.341 3.587 5.624 7.64 12.85 12.156 7.226 4.516 13.78 7.237 19.666 8.166 5.875.867 11.081-.059 15.615-2.78 4.58-2.747 6.198-5.915 4.858-9.503-1.351-3.65-5.64-7.732-12.866-12.248-7.226-4.516-13.777-7.207-19.652-8.074a27.826 27.826 0 0 0-4.291-.352zm158.494 33.314c-1.938.074-4.218.858-6.955 2.413l-146.935 84.847c-9.57 5.527-17.14 18.638-17.14 29.69v157.699c0 11.05 7.57 15.419 17.14 9.89l146.937-84.843c9.57-5.527 17.137-18.636 17.137-29.688v-157.7c-2.497-8.048-5.23-12.495-10.184-12.308zm-359.763.48c-6.227 0-10.033 5.325-10.155 11.825v157.697c0 11.052 7.57 24.163 17.14 29.69l146.93 84.848c9.57 5.526 17.141 1.156 17.141-9.895v-157.7c0-11.051-7.57-24.159-17.14-29.687L83.09 176.225c-2.567-1.338-4.911-1.93-6.986-1.93zm40.095 52.226l68.114 40.869v25.287l-46.262-27.758v20.64a43.279 43.279 0 0 1 6.262 2.151c2.135.864 4.341 1.98 6.619 3.346 12.953 7.772 23.037 17.902 30.25 30.39 7.212 12.43 10.818 25.912 10.818 40.448 0 14.416-3.938 23.342-11.814 26.777-7.83 3.464-18.72 1.01-32.67-7.36-6.026-3.615-12.005-7.948-17.936-12.996-5.884-4.96-11.744-10.68-17.58-17.16v-27.076c5.789 7.643 11.27 14.06 16.441 19.248 5.22 5.217 10.13 9.205 14.733 11.967 6.643 3.986 11.862 5.092 15.658 3.318 3.843-1.804 5.766-6.19 5.766-13.16 0-7.03-1.923-13.723-5.766-20.08-3.796-6.328-9.015-11.485-15.658-15.47a56.585 56.585 0 0 0-12.598-5.594c-4.46-1.426-9.252-2.335-14.377-2.729V226.52zm270.047 5.732v85.809L400 309.809v25.414l-13.754 8.252v24.777l-23.502 14.102v-24.778L320 383.223v-30.06l38.611-104.331 27.635-16.58zm-23.502 42.978l-27.248 73.28 27.248-16.348V275.23z'\r\n          fill={fill}\r\n          style={{ filter: 'url(#shadow)' }}\r\n        />\r\n      </g>\r\n    </g>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StaticIconProps } from '.'\r\n\r\nexport const Shrine = (props: StaticIconProps) => {\r\n  const { fill = '#fff' } = props\r\n  return (\r\n    <g style={{ transform: 'scale(0.01)', zIndex: 2 }}>\r\n      <g style={{ transform: 'translate(-253px, -232px)' }}>\r\n        <path\r\n          d='M246.406 21.406c-14.586.572-28.81 2.492-42.594 5.594l9.5 35.438c10.742-2.328 21.784-3.8 33.094-4.313v-36.72zm18.688 0v36.72c11.26.532 22.273 2.01 32.97 4.343l9.53-35.532c-13.753-3.082-27.95-4.97-42.5-5.532zm60.562 10.313l-9.53 35.593c10.674 3.416 20.973 7.725 30.78 12.812l18.47-31.97c-12.604-6.63-25.893-12.154-39.72-16.436zm-139.875.06c-13.773 4.28-27.004 9.798-39.56 16.407l18.343 31.75c9.796-5.057 20.06-9.327 30.718-12.718l-9.5-35.44zM381.5 57.5l-18.47 32c9.345 6.022 18.162 12.792 26.345 20.25l26.156-26.156c-10.5-9.696-21.89-18.423-34.03-26.094zm-251.47.063c-12.167 7.697-23.573 16.455-34.093 26.187l25.876 25.875c8.233-7.492 17.125-14.273 26.53-20.313l-18.312-31.75zM255.626 75.97c-99.678 0-180.656 81.01-180.656 180.686 0 99.65 80.977 180.656 180.655 180.656 99.677 0 180.688-80.98 180.688-180.656 0-45.944-17.214-87.905-45.532-119.812-1.284-1.8-2.583-3.594-3.936-5.344l-.563.438c-32.917-34.474-79.306-55.97-130.655-55.97zm0 18.686c47.59 0 90.35 20.44 119.97 53.03 13.164 18.447 22.208 39.743 25.842 62 10.112 61.704-26.617 129.948-91.062 139.533-41.483 6.182-87.313-18.815-93.03-61.94-1.765-13.308 1.52-27.713 8.686-38.78 7.17-11.067 17.735-18.72 31.44-20.28 7.977-.908 16.773 1.222 23.342 5.593 6.57 4.37 10.854 10.442 11.594 18.437v.03c.094.995.085 2.022 0 3.064-3.712-3.68-8.798-5.938-14.437-5.938-11.344 0-20.564 9.19-20.564 20.53 0 11.344 9.22 20.533 20.563 20.533 3.624 0 7.01-.946 9.967-2.595 7.022-2.2 12.792-6.888 16.625-12.47 5-7.275 7.294-16.084 6.47-24.874-1.3-14.016-9.433-25.333-19.876-32.28-10.442-6.947-23.257-10.05-35.812-8.625-19.64 2.238-35.302 13.744-45 28.72-9.698 14.973-13.907 33.487-11.53 51.405 7.274 54.863 63.562 85.533 114.31 77.97 54.573-8.117 91.783-50.963 104.157-100.75-5.308 84.757-75.54 151.686-161.655 151.686-89.58 0-161.97-72.445-161.97-162 0-89.583 72.39-162 161.97-162zm173.094 2.156L402.56 122.97c7.467 8.202 14.288 17.005 20.313 26.374l32-18.47c-7.685-12.147-16.443-23.556-26.156-34.06zm-345.97.157c-9.647 10.453-18.36 21.797-26 33.874l31.656 18.28c6.015-9.322 12.775-18.114 20.22-26.28L82.75 96.97zm-35.375 50.06c-6.64 12.616-12.183 25.91-16.47 39.75l35.25 9.44c3.43-10.743 7.755-21.076 12.876-30.94l-31.655-18.25zm416.875 0l-32.063 18.5c5.08 9.818 9.376 20.097 12.782 30.782l35.75-9.562c-4.285-13.826-9.838-27.117-16.47-39.72zM26.125 204.813c-3.075 13.723-4.964 27.89-5.53 42.407H57c.53-11.257 2.016-22.28 4.344-32.97l-35.22-9.438zm459.375 0l-35.72 9.563c2.313 10.652 3.787 21.632 4.314 32.844h36.937c-.566-14.518-2.455-28.685-5.53-42.407zM20.594 265.906c.566 14.585 2.466 28.81 5.562 42.594l35.188-9.406C59 288.328 57.52 277.244 57 265.906H20.594zm433.5 0c-.517 11.294-1.986 22.336-4.313 33.063l35.69 9.56c3.1-13.79 4.995-28.03 5.56-42.624h-36.936zm-9.125 51.125c-3.386 10.626-7.648 20.86-12.69 30.626l32 18.47c6.6-12.55 12.103-25.772 16.376-39.532l-35.687-9.563zm-378.814.095l-35.22 9.438c4.277 13.774 9.832 27.003 16.44 39.562l31.562-18.22c-5.082-9.812-9.373-20.1-12.782-30.78zm356.813 46.72c-6.05 9.426-12.87 18.31-20.376 26.56l26.062 26.064c9.76-10.55 18.567-21.983 26.28-34.19l-31.967-18.436zm-334.69.25L56.688 382.31c7.672 12.136 16.43 23.503 26.126 34l25.812-25.812c-7.483-8.21-14.307-17.027-20.344-26.406zm301.126 39.53c-8.177 7.454-17.007 14.198-26.344 20.22l18.407 31.905c12.124-7.66 23.476-16.413 33.967-26.094l-26.03-26.03zm-267.594.094l-25.78 25.78c10.514 9.72 21.903 18.5 34.062 26.188l18.25-31.625c-9.412-6.044-18.294-12.846-26.53-20.344zm225.125 29.53c-9.812 5.092-20.13 9.363-30.812 12.78l9.5 35.47c13.816-4.278 27.093-9.815 39.688-16.438l-18.375-31.812zm-182.406.188l-18.25 31.625c12.54 6.595 25.75 12.103 39.5 16.375l9.47-35.313c-10.655-3.392-20.926-7.63-30.72-12.688zm133.564 17.437c-10.706 2.337-21.728 3.81-33 4.344v36.592c14.54-.562 28.724-2.453 42.47-5.53l-9.47-35.407zm-84.78.063l-9.47 35.28c13.773 3.1 27.988 5.023 42.562 5.594V455.25c-11.31-.512-22.353-1.985-33.094-4.313z'\r\n          fill={fill}\r\n          style={{ filter: 'url(#shadow)' }}\r\n        />\r\n      </g>\r\n    </g>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StaticIconProps } from '.'\r\n\r\nexport const Shop = (props: StaticIconProps) => {\r\n  const { fill = 'white' } = props\r\n  return (\r\n    <g style={{ transform: 'scale(0.01)', zIndex: 2 }}>\r\n      <g style={{ transform: 'translate(-253px, -253px)' }}>\r\n        <path\r\n          fill={fill}\r\n          style={{ filter: 'url(#shadow)' }}\r\n          d='M136 25c-16.457 0-31.287 3.45-41.23 8.422C84.826 38.394 81 44.027 81 48c0 3.973 3.826 9.606 13.77 14.578C104.713 67.55 119.543 71 136 71c16.457 0 31.287-3.45 41.23-8.422C187.174 57.606 191 51.973 191 48c0-3.973-3.826-9.606-13.77-14.578C167.287 28.45 152.457 25 136 25zm160 32c-16.457 0-31.287 3.45-41.23 8.422C244.826 70.394 241 76.027 241 80c0 3.973 3.826 9.606 13.77 14.578C264.713 99.55 279.543 103 296 103c4.55 0 8.967-.27 13.2-.758 4.32-5.534 10.53-10.092 17.52-13.588 7.064-3.53 15.262-6.227 24.24-7.98.025-.23.04-.455.04-.674 0-3.973-3.826-9.606-13.77-14.578C327.287 60.45 312.457 57 296 57zM81 75.445V80c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87C189.716 85.574 191 82.515 191 80v-4.555c-1.832 1.158-3.74 2.243-5.72 3.233C172.06 85.288 154.89 89 136 89s-36.06-3.712-49.28-10.322c-1.98-.99-3.888-2.075-5.72-3.233zM376 96.33c-16.457 0-31.287 3.452-41.23 8.424-9.944 4.972-13.77 10.603-13.77 14.576 0 3.973 3.826 9.606 13.77 14.578 9.943 4.972 24.773 8.422 41.23 8.422 16.457 0 31.287-3.45 41.23-8.422 9.944-4.972 13.77-10.605 13.77-14.578 0-3.973-3.826-9.604-13.77-14.576-9.943-4.972-24.773-8.424-41.23-8.424zm-135 11.115v2.313c2.9 1.073 5.67 2.26 8.28 3.564 9.037 4.52 16.8 10.794 20.81 18.69 10.174 2.46 21.72 3.366 32.91 2.718v-13.917c-2.305.116-4.636.187-7 .187-18.89 0-36.06-3.712-49.28-10.322-1.98-.99-3.888-2.075-5.72-3.233zm-160 .024V112c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 6.83 1.972 14.433 3.186 22.216 3.654 1.988-5.227 5.6-9.806 10.19-13.712-12.785.277-25.663-1.26-37.4-4.65-7.796-2.25-14.69-5.2-20.503-8.89zM200 121c-16.457 0-31.287 3.45-41.23 8.422C148.826 134.394 145 140.027 145 144c0 3.973 3.826 9.606 13.77 14.578C168.713 163.55 183.543 167 200 167c16.457 0 31.287-3.45 41.23-8.422C251.174 153.606 255 147.973 255 144c0-3.973-3.826-9.606-13.77-14.578C231.287 124.45 216.457 121 200 121zM81 139.47V144c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 6.328 1.826 13.32 2.993 20.503 3.53V152.75c-8.772-.594-17.406-2.057-25.496-4.393-7.797-2.25-14.69-5.203-20.504-8.89zm240 7.305v4.555c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.285 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.585 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.555c-1.832 1.158-3.74 2.243-5.72 3.233-13.22 6.61-30.39 10.322-49.28 10.322s-36.06-3.712-49.28-10.322c-1.98-.99-3.888-2.075-5.72-3.233zm-48 4.246v13.65c9.435 1.962 19.865 2.647 30 2.06v-13.878c-10.064.53-20.263-.08-30-1.83zm-128 20.425V176c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.555c-1.832 1.158-3.74 2.243-5.72 3.233C236.06 181.288 218.89 185 200 185s-36.06-3.712-49.28-10.322c-1.98-.99-3.888-2.075-5.72-3.233zm-64 .024V176c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 6.328 1.826 13.32 2.993 20.503 3.53V184.75c-8.772-.594-17.406-2.057-25.496-4.393-7.797-2.25-14.69-5.203-20.504-8.89zm240 7.33v4.53c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.285 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.585 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.688-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.202-20.504-8.89zm-48 4.22v13.65c9.435 1.962 19.865 2.647 30 2.06v-13.878c-10.064.53-20.263-.08-30-1.83zM81 203.47V208c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 6.328 1.826 13.32 2.993 20.503 3.53V216.75c-8.772-.594-17.406-2.057-25.496-4.393-7.797-2.25-14.69-5.203-20.504-8.89zm64 0V208c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm176 7.33v4.53c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.285 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.585 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.688-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.202-20.504-8.89zm-48 4.22v13.65c9.435 1.962 19.865 2.647 30 2.06v-13.878c-10.064.53-20.263-.08-30-1.83zm-128 20.45v2.288c2.9 1.073 5.67 2.26 8.28 3.564 9.038 4.52 16.802 10.795 20.812 18.692 17.338 4.196 38.678 3.883 55.412-.948 8.954-2.585 15.845-6.245 20.03-9.87 4.183-3.622 5.466-6.68 5.466-9.196v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm176 7.33v4.53c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.285 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.585 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.688-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.202-20.504-8.89zm-48 4.22v13.65c9.435 1.962 19.865 2.647 30 2.06v-13.878c-10.064.53-20.263-.08-30-1.83zM104 249c-16.457 0-31.287 3.45-41.23 8.422C52.826 262.394 49 268.027 49 272c0 3.973 3.826 9.606 13.77 14.578C72.713 291.55 87.543 295 104 295c16.457 0 31.287-3.45 41.23-8.422C155.174 281.606 159 275.973 159 272c0-3.973-3.826-9.606-13.77-14.578C135.287 252.45 120.457 249 104 249zm151 18.47c-5.813 3.687-12.707 6.64-20.504 8.89-17.97 5.187-38.608 6.05-57.496 2.642v13.664c16.775 3.494 36.694 2.964 52.504-1.6 8.954-2.585 15.845-6.245 20.03-9.87 4.183-3.622 5.466-6.68 5.466-9.196v-4.53zm66 7.33v4.53c0 2.515 1.283 5.574 5.467 9.197 4.045 3.503 10.64 7.03 19.162 9.598 3.74-3.428 8.228-6.37 13.09-8.803 1.152-.575 2.344-1.12 3.553-1.652-7.14-.744-14.137-2.066-20.77-3.98-7.796-2.25-14.69-5.202-20.503-8.89zm110 0c-2.84 1.8-5.938 3.422-9.27 4.876 3.1.31 6.13.734 9.082 1.252.12-.553.188-1.09.188-1.598v-4.53zm-158 4.22v13.62c6.997 1.482 14.783 2.36 23 2.36 2.374 0 4.705-.087 7-.227v-13.92c-10.064.53-20.263-.082-30-1.832zM408 297c-16.457 0-31.287 3.45-41.23 8.422C356.826 310.394 353 316.027 353 320c0 3.973 3.826 9.606 13.77 14.578C376.713 339.55 391.543 343 408 343c16.457 0 31.287-3.45 41.23-8.422C459.174 329.606 463 323.973 463 320c0-3.973-3.826-9.606-13.77-14.578C439.287 300.45 424.457 297 408 297zm-359 2.445V304c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.555c-1.832 1.158-3.74 2.243-5.72 3.233C140.06 309.288 122.89 313 104 313s-36.06-3.712-49.28-10.322c-1.98-.99-3.888-2.075-5.72-3.233zm206 .024c-5.813 3.687-12.707 6.64-20.504 8.89-17.97 5.187-38.608 6.05-57.496 2.642v13.664c16.775 3.494 36.694 2.964 52.504-1.6 8.954-2.585 15.845-6.245 20.03-9.87 4.183-3.622 5.466-6.68 5.466-9.196v-4.53zm66 7.33v4.53c0 3.973 3.826 9.606 13.77 14.578.074.037.155.073.23.11V313.56c-5.168-1.89-9.862-4.135-14-6.76zM49 331.47V336c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zM177 343v13.648c4.885 1.032 10.16 1.767 15.697 2.114 1.985-5.246 5.602-9.84 10.207-13.756-8.726.19-17.487-.487-25.904-2.006zM264 345c-16.457 0-31.287 3.45-41.23 8.422C212.826 358.394 209 364.027 209 368c0 3.973 3.826 9.606 13.77 14.578C232.713 387.55 247.543 391 264 391c16.457 0 31.287-3.45 41.23-8.422C315.174 377.606 319 371.973 319 368c0-3.973-3.826-9.606-13.77-14.578C295.287 348.45 280.457 345 264 345zm89 2.445V352c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.555c-1.832 1.158-3.74 2.243-5.72 3.233C444.06 357.288 426.89 361 408 361s-36.06-3.712-49.28-10.322c-1.98-.99-3.888-2.075-5.72-3.233zM49 363.47V368c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm304 16V384c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm-144 15.975V400c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.555c-1.832 1.158-3.74 2.243-5.72 3.233C300.06 405.288 282.89 409 264 409s-36.06-3.712-49.28-10.322c-1.98-.99-3.888-2.075-5.72-3.233zm-160 .024V400c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm304 16V416c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm-304 16V432c0 2.515 1.283 5.574 5.467 9.197 4.184 3.624 11.075 7.284 20.03 9.87 17.908 5.17 41.098 5.17 59.007 0 8.954-2.586 15.845-6.246 20.03-9.87 4.183-3.623 5.466-6.682 5.466-9.197v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm160 0V432c0 3.973 3.826 9.606 13.77 14.578C232.713 451.55 247.543 455 264 455c16.457 0 31.287-3.45 41.23-8.422C315.174 441.606 319 435.973 319 432v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm144 16V448c0 3.973 3.826 9.606 13.77 14.578C376.713 467.55 391.543 471 408 471c16.457 0 31.287-3.45 41.23-8.422C459.174 457.606 463 451.973 463 448v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89zm-304 16V464c0 3.973 3.826 9.606 13.77 14.578C72.713 483.55 87.543 487 104 487c16.457 0 31.287-3.45 41.23-8.422C155.174 473.606 159 467.973 159 464v-4.53c-5.813 3.687-12.707 6.64-20.504 8.89-21.694 6.262-47.298 6.262-68.992 0-7.797-2.25-14.69-5.203-20.504-8.89z'\r\n        />\r\n      </g>\r\n    </g>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StaticIconProps } from '.'\r\n\r\nexport const Start = (props: StaticIconProps) => {\r\n  const { fill = 'white' } = props\r\n  return (\r\n    <g\r\n      style={{\r\n        transform: 'scale(0.01)',\r\n        zIndex: 2,\r\n        filter: 'drop-shadow(3px 3px 2px rgba(0, 0, 0, 0.7)',\r\n      }}\r\n    >\r\n      <g style={{ transform: 'translate(-277px, -281px)' }}>\r\n        <path\r\n          d='M281.53 23.438c48.44 71.504-18.447 145.556-63.655 58.968 27.295 144.502-65.22 166.347-74.75 74.75-73.554 65.057-59.358 147.17-20.438 210.75l45.844-26.344c-12.004-18.318-17.995-42.502-15.31-66.218 25.688 39.43 106.855 10.088 97.124-59.938 10.695 32.074 37.802 28.97 65.78-20.5C278.07 297.622 337.95 364.248 378.032 333.5c1.47 11.97-2.95 25.657-10.592 38.063l46.968 12.53c55.122-47.503 79.71-135.97-3.812-175.53 39.08 60.478-13.1 105.064-60.72 41.468-38.546-72.133 82.366-113.394-68.343-226.593zM173.876 48.124c-64.128 32.333-14.642 60.51-14.03 92.344 44.122-38.935-3.722-53.508 14.03-92.345zm74.47 269.094L75 416.874c2.71 18.39 8.98 34.417 18.813 48.5l92-44.063-78.688 59.875c3.39 3.38 7.033 6.62 10.938 9.75L192.78 448c-.023-.738-.06-1.475-.06-2.22 0-37.22 30.495-67.56 67.81-67.56 10.53 0 20.527 2.413 29.44 6.717-2.323-13.414-7.28-27.104-14.72-39.28l-94.938 40.124 82.47-56.467c-4.34-4.55-9.166-8.64-14.438-12.094zm58.874 57.624c1.61 7.148 2.6 14.315 2.967 21.312l.22 3.938c11.13 12.042 17.937 28.09 17.937 45.687 0 7.795-1.356 15.276-3.813 22.25l91.345 24.376c4.642-6.327 8.588-12.768 11.844-19.375l-63.158-24.686 70.125 6.844c.866-2.948 1.61-5.923 2.22-8.938l-97.063-34.22L439 427.5c.156-5.772-.103-11.67-.813-17.72L307.22 374.845zm-46.69 22.062c-27.26 0-49.124 21.8-49.124 48.875 0 27.078 21.864 48.876 49.125 48.876 27.263 0 49.126-21.798 49.126-48.875 0-27.075-21.863-48.874-49.125-48.874zm-4.936 11.78c43.778.002 58.435 71.595 0 71.595 26.622-23.113 29.81-46.888 0-71.592zm.187 9.845c-21.616 17.916-19.304 35.177 0 51.94-42.375 0-31.745-51.94 0-51.94z'\r\n          fill={fill}\r\n          style={{ filter: 'url(#shadow)' }}\r\n        />\r\n      </g>\r\n    </g>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Color from 'color'\r\nimport { Hexagon } from 'react-hexgrid'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { HexT } from '../../grid/types'\r\nimport { getDepth, isAdjacent, isValueEqual } from '../../grid/util'\r\nimport { Boss } from '../../icons/static/Boss'\r\nimport { Combat } from '../../icons/static/Combat'\r\nimport { Random } from '../../icons/static/Random'\r\nimport { Shrine } from '../../icons/static/Shine'\r\nimport { Shop } from '../../icons/static/Shop'\r\nimport { Start } from '../../icons/static/Start'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface HexPropsT {\r\n  hex: HexT\r\n  size: number\r\n  onMouseEnter?: () => void\r\n  onMouseLeave?: () => void\r\n}\r\nexport const Hex = (props: HexPropsT) => {\r\n  const { hex, size, onMouseEnter, onMouseLeave } = props\r\n  const { currentHex, chooseNext, encounters } = useGameStateContext()\r\n  const [isHovering, setIsHovering] = useState(false)\r\n  const encounter = encounters[hex.q][hex.r][hex.s]\r\n  const active = currentHex ? isValueEqual(hex, currentHex) : false\r\n  const adjacent = isAdjacent(currentHex)(hex)\r\n  const depth = getDepth(hex, size)\r\n  const fill =\r\n    !encounter || encounter.completed || active || isHovering\r\n      ? 'white'\r\n      : 'rgba(255,255,255,0.6)'\r\n  return (\r\n    <Hexagon\r\n      q={hex.q}\r\n      r={hex.r}\r\n      s={hex.s}\r\n      cellStyle={{\r\n        fontSize: '7px',\r\n        stroke: 'black',\r\n        fill:\r\n          encounter?.completed || encounter === undefined || active\r\n            ? 'green'\r\n            : adjacent\r\n            ? Color(Theme.physicalColor).darken(0.5).rgb().toString()\r\n            : Theme.otherGrey,\r\n        cursor: adjacent ? 'pointer' : 'default',\r\n      }}\r\n      onClick={(c: any, h: any) => {\r\n        if (adjacent) {\r\n          chooseNext(hex)\r\n        }\r\n      }}\r\n      onMouseEnter={() => {\r\n        if (adjacent) setIsHovering(true)\r\n        onMouseEnter && onMouseEnter()\r\n      }}\r\n      onMouseLeave={() => {\r\n        setIsHovering(false)\r\n        onMouseLeave && onMouseLeave()\r\n      }}\r\n    >\r\n      <g style={{ cursor: adjacent ? 'pointer' : 'default' }}>\r\n        {depth === size - 1 ? (\r\n          <Boss fill={fill} />\r\n        ) : encounter === undefined ? (\r\n          <Start fill={fill} />\r\n        ) : encounter?.type === 'shop' ? (\r\n          <Shop fill={fill} />\r\n        ) : encounter?.completed ? (\r\n          encounter?.type === 'shrine' ? (\r\n            <Shrine fill={fill} />\r\n          ) : (\r\n            <Combat fill={fill} />\r\n          )\r\n        ) : (\r\n          <Random fill={fill} />\r\n        )}\r\n      </g>\r\n    </Hexagon>\r\n  )\r\n}\r\n","import React, { useMemo, useState } from 'react'\r\nimport Color from 'color'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Theme } from '../../theme'\r\nimport { HexGrid, Layout, GridGenerator } from 'react-hexgrid'\r\nimport { HexT } from '../../grid/types'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Hex } from './hex'\r\nimport { Text } from '../../elements/typography'\r\nimport { HexBadge } from '../../elements/shapes'\r\nimport { Icon } from '../../components/Icon'\r\nimport Unknown from '../../icons/svg/delapouite/perspective-dice-six.svg'\r\nimport Shop from '../../icons/svg/delapouite/coins.svg'\r\nimport Boss from '../../icons/svg/lorc/crowned-skull.svg'\r\nimport Start from '../../icons/svg/lorc/campfire.svg'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { getDepth } from '../../grid/util'\r\n\r\nexport const Grid = () => {\r\n  const { floor, floors } = useGameStateContext()\r\n  const currentFloor = floors[floor]\r\n  const hexagons = useMemo(() => GridGenerator.triangle(currentFloor.size), [])\r\n  const [activeHex, setActiveHex] = useState<HexT | undefined>()\r\n  console.log(hexagons)\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      style={{\r\n        color: 'white',\r\n        fontSize: '3px',\r\n        justifyContent: 'center',\r\n      }}\r\n    >\r\n      <FlexContainer\r\n        $full\r\n        style={{ alignItems: 'center', justifyContent: 'center' }}\r\n      >\r\n        <div className='shadow' style={{ width: 594, height: 510 }}>\r\n          <HexGrid>\r\n            <defs>\r\n              <filter id='shadow' width='200%' height='200%'>\r\n                <feDropShadow dx={30} dy={30} stdDeviation={50} />\r\n              </filter>\r\n            </defs>\r\n            <Layout\r\n              size={{ x: 4.5, y: 4.5 }}\r\n              origin={{ x: -57, y: -40 }}\r\n              spacing={1.02}\r\n              flat={false}\r\n            >\r\n              {hexagons\r\n                .filter(\r\n                  (hex: HexT) =>\r\n                    hex.r !== 0 ||\r\n                    hex.s === 0 ||\r\n                    hex.s === currentFloor.size * -1,\r\n                )\r\n                .map((hex: HexT, i: number) => (\r\n                  <Hex\r\n                    hex={hex}\r\n                    size={currentFloor.size}\r\n                    onMouseEnter={() => setActiveHex(hex)}\r\n                    onMouseLeave={() => setActiveHex(undefined)}\r\n                  />\r\n                ))}\r\n            </Layout>\r\n          </HexGrid>\r\n        </div>\r\n      </FlexContainer>\r\n      <div>\r\n        <BoxContainer\r\n          style={{\r\n            fontSize: 12,\r\n            maxWidth: 300,\r\n            background: Theme.darkBgColor,\r\n            margin: '16px 16px 16px 36px',\r\n          }}\r\n          substyle={{\r\n            background: Theme.darkBgColor,\r\n          }}\r\n        >\r\n          <h3\r\n            style={{\r\n              fontFamily: Theme.titleFont,\r\n              fontWeight: 'normal',\r\n              marginTop: 0,\r\n            }}\r\n          >\r\n            Floor Map\r\n          </h3>\r\n          <Text>\r\n            {activeHex\r\n              ? `${activeHex.q}, ${getDepth(activeHex, currentFloor.size)}`\r\n              : 'hover to see location'}\r\n          </Text>\r\n          <Text style={{ marginBottom: 16, display: 'block' }}>\r\n            This is the floor map. Here you can see the cleared encounters\r\n            (green) and the encounters you can travel to (blue). Click a blue\r\n            hex to advance.\r\n          </Text>\r\n          <FlexContainer style={{ alignItems: 'center', height: 36 }}>\r\n            <HexBadge\r\n              color='green'\r\n              size={28}\r\n              stroke={3}\r\n              style={{ marginRight: 8 }}\r\n            />\r\n            Cleared Encounters\r\n          </FlexContainer>\r\n          <FlexContainer style={{ alignItems: 'center', height: 36 }}>\r\n            <HexBadge\r\n              color={Color(Theme.physicalColor).darken(0.5).rgb().toString()}\r\n              size={28}\r\n              stroke={3}\r\n              style={{ marginRight: 8 }}\r\n            />\r\n            Adjacent Encounters\r\n          </FlexContainer>\r\n          <FlexContainer style={{ alignItems: 'center', height: 36 }}>\r\n            <Icon src={Start} size={24} style={{ marginRight: 12 }} />\r\n            Starting Location\r\n          </FlexContainer>\r\n          <FlexContainer style={{ alignItems: 'center', height: 36 }}>\r\n            <Icon src={Shop} size={24} style={{ marginRight: 12 }} />\r\n            Shop\r\n          </FlexContainer>\r\n          <FlexContainer style={{ alignItems: 'center', height: 36 }}>\r\n            <Icon src={Unknown} size={24} style={{ marginRight: 12 }} />\r\n            Random Encounter\r\n          </FlexContainer>\r\n          <FlexContainer style={{ alignItems: 'center', height: 36 }}>\r\n            <Icon src={Boss} size={24} style={{ marginRight: 12 }} />\r\n            Boss\r\n          </FlexContainer>\r\n          <FullContainer />\r\n        </BoxContainer>\r\n      </div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { usePartyContext } from '../contexts/PartyContext'\r\nimport { FlexContainer, FullContainer } from '../elements/flex'\r\nimport { Button } from '../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { AppHeader } from '../components/AppHeader'\r\nimport { PartyResources } from '../components/PartyResources'\r\nimport { useUIContext } from '../contexts/UIContext'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport { getSkillResult } from '../game/Skill/util'\r\nimport { commitSkillResults } from '../game/Skill/committer'\r\nimport { NonCombatEncounter } from '../components/NonCombatEncounter'\r\nimport { EncounterActions } from '../components/EncounterActions'\r\nimport { HeadingSm } from '../elements/typography'\r\nimport { Grid } from './Grid'\r\n\r\nexport const Party = () => {\r\n  const { party, rawParty, updateParty } = usePartyContext()\r\n  const { floors, floor, currentEncounter } = useGameStateContext()\r\n  const currentFloor = floors[floor]\r\n  const history = useHistory()\r\n  const {\r\n    setPlayerCanEquipItem,\r\n    setOnCharacterConsumableClick,\r\n  } = useUIContext()\r\n\r\n  useEffect(() => {\r\n    setPlayerCanEquipItem(true)\r\n    setOnCharacterConsumableClick((character, consumableIndex) => {\r\n      if (!character) return\r\n      const consumable = character.consumables[consumableIndex]\r\n      const targets =\r\n        consumable.skill.targetType === 'self'\r\n          ? [character]\r\n          : consumable.skill.targetType === 'party'\r\n          ? party.characters\r\n          : []\r\n      const result = getSkillResult(character, targets, consumable.skill)\r\n      const parties = commitSkillResults(rawParty, rawParty, {})(result)\r\n      updateParty(parties.playerParty)\r\n    })\r\n    return () => {\r\n      setPlayerCanEquipItem(false)\r\n      setOnCharacterConsumableClick((c, i, item) => {})\r\n    }\r\n  }, [party, rawParty, updateParty])\r\n\r\n  return (\r\n    <FlexContainer $full $direction='column' style={{ height: '100%' }}>\r\n      <AppHeader\r\n        left={\r\n          <>\r\n            <Button\r\n              onClick={() => history.push('/')}\r\n              style={{ borderBottom: 0 }}\r\n            >\r\n              Restart\r\n            </Button>\r\n\r\n            <FullContainer />\r\n          </>\r\n        }\r\n        right={\r\n          <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n            <PartyResources />\r\n          </FlexContainer>\r\n        }\r\n      >\r\n        <FlexContainer\r\n          $full\r\n          style={{\r\n            color: 'white',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <HeadingSm style={{ margin: 0 }}>{currentFloor.name}</HeadingSm>\r\n        </FlexContainer>\r\n      </AppHeader>\r\n      <FlexContainer $full $direction='column'>\r\n        <FlexContainer $full>\r\n          {(currentEncounter && !currentEncounter.completed) ||\r\n          (currentEncounter && currentEncounter.type === 'boss') ? (\r\n            <NonCombatEncounter />\r\n          ) : (\r\n            <Grid />\r\n          )}\r\n          <EncounterActions />\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { FullContainer, FlexContainer } from '../elements/flex'\r\nimport { BoxContainer } from '../elements/box'\r\nimport { usePartyContext } from '../contexts/PartyContext'\r\nimport { RedButton } from '../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { INITIAL_STATE } from '../state/party'\r\nimport { Monospace } from '../elements/monospace'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport {\r\n  tProcessedCharacter,\r\n  tCharacter,\r\n  tCharacterClass,\r\n} from '../game/Character/type'\r\nimport { makeCharacter } from '../game/Character/util'\r\nimport { STAT_BONUS_KEYS } from '../game/Stats/constants'\r\nimport { Theme } from '../theme'\r\nimport { AppHeader } from '../components/AppHeader'\r\nimport { HeadingSm } from '../elements/typography'\r\nimport { Gauge2 } from '../components/Gauge/v2'\r\nimport { TEST_WEAPON } from '../game/Weapon/builders/unique/test_weapon'\r\nimport { noneg } from '../util'\r\nimport { useModalContext } from '../contexts/ModalContext'\r\n\r\nexport const Start = () => {\r\n  const {\r\n    party,\r\n    rawParty,\r\n    updateParty,\r\n    upsertCharacter,\r\n    findRawCharacter,\r\n  } = usePartyContext()\r\n  const history = useHistory()\r\n  const { open, close } = useModalContext()\r\n  const { reset, loading } = useGameStateContext()\r\n  useEffect(() => {\r\n    updateParty(INITIAL_STATE)\r\n    reset()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log('LOADING', loading)\r\n    if (loading) {\r\n      open(\r\n        <div>\r\n          <h1 style={{ fontFamily: Theme.titleFont, textAlign: 'center' }}>\r\n            Loading...\r\n          </h1>\r\n        </div>,\r\n        {},\r\n        true,\r\n      )\r\n    } else {\r\n      close()\r\n    }\r\n  }, [loading])\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{ height: '100%', overflow: 'hidden' }}\r\n    >\r\n      <AppHeader\r\n        left={\r\n          <Monospace\r\n            style={{\r\n              fontWeight: 'normal',\r\n              color: 'rgba(255,255,255,0.5)',\r\n              fontSize: 12,\r\n            }}\r\n            onClick={() => {\r\n              updateParty({\r\n                ...rawParty,\r\n                characters: rawParty.characters.map((c) => ({\r\n                  ...c,\r\n                  weapon: TEST_WEAPON(),\r\n                })),\r\n              })\r\n            }}\r\n          >\r\n            alpha-0.0.6.3\r\n          </Monospace>\r\n        }\r\n      >\r\n        <span\r\n          style={{ color: 'white', lineHeight: '52px', whiteSpace: 'nowrap' }}\r\n        >\r\n          I am looking for help with: item, and enemy, and general design! If\r\n          you would like to help, shoot me a message or head over to my github\r\n        </span>\r\n      </AppHeader>\r\n      <FullContainer />\r\n      <FlexContainer $full>\r\n        <FullContainer />\r\n        <BoxContainer\r\n          style={{\r\n            maxWidth: 340,\r\n            marginRight: 8,\r\n          }}\r\n          substyle={{\r\n            padding: 16,\r\n            background: Theme.darkBgColor,\r\n            lineHeight: 1.4,\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          <HeadingSm\r\n            style={{\r\n              marginTop: 8,\r\n            }}\r\n          >\r\n            About this game\r\n          </HeadingSm>\r\n          <p>\r\n            Each character class has different stats and starting items. Your\r\n            stats determine your character's chances of succeeding in various\r\n            checks during combat.\r\n          </p>\r\n          <p>\r\n            For example, if your character has 76 Strength, then each Strength\r\n            check has a 76% chance of succeeding.\r\n          </p>\r\n          <p>\r\n            So if an attack has 4 Strength checks at 76% each, then that attack\r\n            has a 33% chance of being \"perfect.\" Some attacks will have special\r\n            bonus actions when they are \"perfect.\" Such as splash damage, or\r\n            status effects.\r\n          </p>\r\n          <p>\r\n            More power attacks may require more checks or use negative-offset\r\n            stat values\r\n          </p>\r\n        </BoxContainer>\r\n        <BoxContainer>\r\n          <h1\r\n            style={{\r\n              marginTop: 8,\r\n              textAlign: 'center',\r\n              fontFamily: Theme.titleFont,\r\n              textShadow: '1px 3px 3px black',\r\n              color: 'rgba(255,255,255,1)',\r\n            }}\r\n          >\r\n            Choose your Party!\r\n          </h1>\r\n          <FlexContainer>\r\n            {party.characters.map((character) => (\r\n              <FlexContainer\r\n                key={character.id}\r\n                $direction='column'\r\n                style={{ padding: 4 }}\r\n              >\r\n                <StartCharacterCard\r\n                  character={character}\r\n                  onChange={(characterId, updater) => {\r\n                    const rc = findRawCharacter(characterId)\r\n                    if (rc) {\r\n                      upsertCharacter(updater(rc))\r\n                    }\r\n                  }}\r\n                />\r\n              </FlexContainer>\r\n            ))}\r\n          </FlexContainer>\r\n          <FlexContainer>\r\n            <FullContainer />\r\n            <RedButton\r\n              style={{ margin: '16px 0 12px 0' }}\r\n              onClick={() => {\r\n                history.push('/party')\r\n              }}\r\n            >\r\n              Begin Adventure\r\n            </RedButton>\r\n            <FullContainer />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        <FullContainer />\r\n      </FlexContainer>\r\n      <FullContainer />\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface StartCharacterCardPropsT {\r\n  character: tProcessedCharacter\r\n  onChange: (\r\n    characterId: string,\r\n    updater: (c: tCharacter) => tCharacter,\r\n  ) => void\r\n}\r\nexport const StartCharacterCard = (props: StartCharacterCardPropsT) => {\r\n  const { character, onChange } = props\r\n  return (\r\n    <FlexContainer $direction='column' style={{ width: 200 }}>\r\n      <input\r\n        style={{\r\n          background: Theme.mediumBgColor,\r\n          border: '1px solid rgba(255,255,255,0.4)',\r\n          padding: 8,\r\n          color: 'white',\r\n          marginBottom: 8,\r\n        }}\r\n        value={character.name}\r\n        onChange={(e) => {\r\n          onChange(character.id, (c) => ({\r\n            ...c,\r\n            name: e.target.value,\r\n          }))\r\n        }}\r\n      />\r\n      <select\r\n        style={{\r\n          background: Theme.mediumBgColor,\r\n          border: '1px solid rgba(255,255,255,0.4)',\r\n          padding: 8,\r\n          color: 'white',\r\n          marginBottom: 8,\r\n        }}\r\n        value={character.class}\r\n        onChange={(e) => {\r\n          onChange(character.id, (c) => ({\r\n            ...makeCharacter(e.target.value as tCharacterClass),\r\n            id: character.id,\r\n            name: character.name,\r\n          }))\r\n        }}\r\n      >\r\n        <option value='executioner'>Executioner</option>\r\n        <option value='ranger'>Ranger</option>\r\n        <option value='student'>Student</option>\r\n        <option value='patrician'>Patrician</option>\r\n        <option value='reaper'>Reaper</option>\r\n        <option value='drifter'>Drifter</option>\r\n      </select>\r\n      <FlexContainer $direction='column' style={{ padding: 8 }}>\r\n        {STAT_BONUS_KEYS.map((key) => (\r\n          <FlexContainer key={key} style={{ height: 20 }}>\r\n            <div\r\n              style={{\r\n                width: 80,\r\n                fontSize: 12,\r\n                textTransform: 'capitalize',\r\n                marginRight: 4,\r\n              }}\r\n            >\r\n              {key}\r\n            </div>\r\n            <FullContainer>\r\n              <Gauge2\r\n                max={40}\r\n                value={noneg(character.stats[key] - 40)}\r\n                color='rgba(255,255,255,0.6)'\r\n                height={15}\r\n              />\r\n            </FullContainer>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { createWeapon } from '..'\r\nimport { CHOP } from '../../../Skill/skills/axe'\r\nimport { ARCANE, NOVA, PROTECT } from '../../../Skill/skills/catalyst'\r\nimport { tWeapon } from '../../type'\r\n\r\nexport const TEST_WEAPON = (): tWeapon => ({\r\n  ...createWeapon(\r\n    'greatsword',\r\n    'mythic',\r\n    [ARCANE, NOVA, CHOP, PROTECT],\r\n    {\r\n      strength: 100,\r\n      agility: 100,\r\n      charisma: -4,\r\n      damageModifiers: {\r\n        undead: 0.1,\r\n        beast: 0.05,\r\n        flying: 0.15,\r\n      },\r\n    },\r\n    ['burning'],\r\n  ),\r\n  name: `Test Weapon of Evil`,\r\n  // breakable: true,\r\n  damage: {\r\n    value: 100,\r\n    range: 'melee',\r\n    type: 'physical',\r\n  },\r\n})\r\n","import { tProcessedCharacter } from '../Character/type'\r\nimport { CELESTIAL_LOTUS } from './objects/celestial_lotus'\r\nimport { GODSBEARD } from './objects/godsbeard'\r\nimport { POISON_KNIFE } from './objects/poison_knife'\r\nimport { BEAST_DRUG } from './objects/beast_drug'\r\nimport { CURE_POTION } from './objects/curing_potion'\r\nimport { FIREBOMB } from './objects/firebomb'\r\n\r\nexport const CONSUMABLE_DESCRIPTIONS: Record<\r\n  string,\r\n  (character: tProcessedCharacter) => string\r\n> = {\r\n  [GODSBEARD().cid]: (c) => `Heal for ${c.stats.consumableHealthGainOffset} HP`,\r\n  [CELESTIAL_LOTUS().cid]: () => 'Remove all Curses',\r\n  [POISON_KNIFE().cid]: () => `Inflict Poison`,\r\n  [BEAST_DRUG().cid]: () => `+15 Attack Damage`,\r\n  [CURE_POTION().cid]: () => `Cure Buring, Bleeding, Frozen and Poison`,\r\n  [FIREBOMB().cid]: () => `Deal 15 Damage and inflict Burning`,\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { CONSUMABLE_ITEM_ICONS, CONSUMABLE_ITEM_COLORS } from '../../icons/maps'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { considateConsumableListToStack } from '../../game/Consumable/util'\r\nimport { Theme } from '../../theme'\r\nimport { REMOVE_CURSES } from '../../game/Skill/skills/consumables'\r\nimport { hasAnyStatus } from '../../game/Character/util'\r\nimport { CONSUMABLE_DESCRIPTIONS } from '../../game/Consumable/constants'\r\n\r\nconst HEIGHT = 64\r\nexport interface PartyCharacterConsumablesPropsT {\r\n  character: tProcessedCharacter\r\n  consumables: tConsumable[]\r\n  onClick?: (consumable: tConsumable, index: number) => void\r\n}\r\nexport const PartyCharacterConsumables = (\r\n  props: PartyCharacterConsumablesPropsT,\r\n) => {\r\n  const { character, consumables, onClick } = props\r\n  const stack = useMemo(() => considateConsumableListToStack(consumables), [\r\n    consumables,\r\n  ])\r\n  const onStackClick = (consumable: tConsumable) => {\r\n    let index = undefined\r\n    consumables.forEach((c, i) => {\r\n      if (c.id === consumable.id) index = i\r\n    })\r\n    if (consumable.skill.healing && !(character.healthOffset === 0))\r\n      return onClick && onClick(consumable, index || 0)\r\n    if (\r\n      consumable.skill.id === REMOVE_CURSES.id &&\r\n      hasAnyStatus(character, [\r\n        'cursed-vigor',\r\n        'cursed-strength',\r\n        'cursed-luck',\r\n        'cursed-intelligence',\r\n        'cursed-dexterity',\r\n        'cursed-charisma',\r\n        'cursed-agility',\r\n      ])\r\n    ) {\r\n      return onClick && onClick(consumable, index || 0)\r\n    }\r\n\r\n    if (\r\n      consumable.skill.name === 'Cure Potion' &&\r\n      hasAnyStatus(character, ['poisoned', 'bleeding', 'burning', 'frozen'])\r\n    ) {\r\n      return onClick && onClick(consumable, index || 0)\r\n    }\r\n  }\r\n  const filler = Array(10 - stack.length).fill(null)\r\n\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ flexWrap: 'wrap', height: HEIGHT }}\r\n    >\r\n      {stack.map((s) => (\r\n        <PartyCharacterConsumable\r\n          key={s.consumable.id}\r\n          character={character}\r\n          consumable={s.consumable}\r\n          count={s.count}\r\n          onClick={onStackClick}\r\n        />\r\n      ))}\r\n      {filler.map((f, i) => (\r\n        <ConsumableBox key={i} />\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\ninterface ConsumableBoxPropsT {\r\n  children?: JSX.Element\r\n  onClick?: () => void\r\n}\r\nconst ConsumableBox = (props: ConsumableBoxPropsT) => {\r\n  const { children, onClick } = props\r\n  return (\r\n    <FlexContainer\r\n      onClick={() => onClick && onClick()}\r\n      style={{\r\n        height: HEIGHT / 2,\r\n        width: HEIGHT / 2,\r\n        boxSizing: 'border-box',\r\n        border: '1px solid rgba(0,0,0,0.5)',\r\n        background: Theme.otherGrey,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        cursor: onClick ? 'pointer' : 'default',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      {children}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface PartyCharacterConsumablePropsT {\r\n  consumable: tConsumable\r\n  character: tProcessedCharacter\r\n  count: number\r\n  onClick?: (consumable: tConsumable) => void\r\n}\r\nexport const PartyCharacterConsumable = (\r\n  props: PartyCharacterConsumablePropsT,\r\n) => {\r\n  const { character, consumable, count, onClick } = props\r\n  return (\r\n    <HoverToolTip\r\n      content={\r\n        <PartyCharacterConsumableTooltip\r\n          character={character}\r\n          consumable={consumable}\r\n        />\r\n      }\r\n    >\r\n      <ConsumableBox onClick={() => onClick && onClick(consumable)}>\r\n        <>\r\n          <Icon\r\n            src={CONSUMABLE_ITEM_ICONS[consumable.cid]}\r\n            fill={CONSUMABLE_ITEM_COLORS[consumable.cid]}\r\n            size={24}\r\n            shadow\r\n          />\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              textShadow: '-1px 1px 1px black',\r\n              bottom: -2,\r\n              zIndex: 2,\r\n              right: 1,\r\n            }}\r\n          >\r\n            {count}\r\n          </div>\r\n        </>\r\n      </ConsumableBox>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface PartyCharacterConsumableTooltipProps {\r\n  character: tProcessedCharacter\r\n  consumable: tConsumable\r\n}\r\nexport const PartyCharacterConsumableTooltip = (\r\n  props: PartyCharacterConsumableTooltipProps,\r\n) => {\r\n  const { character, consumable } = props\r\n  const getText = CONSUMABLE_DESCRIPTIONS[consumable.cid]\r\n  return (\r\n    <BoxContainer\r\n      style={{ maxWidth: 200 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <strong>{consumable.name}</strong>\r\n      {getText && <div>{getText(character)}</div>}\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { styled } from 'styletron-react'\r\nimport { Icon } from '../Icon'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tBaseStats } from '../../game/Stats/type'\r\nimport { Theme } from '../../theme'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { NumberChange } from '../NumberChange'\r\n\r\ninterface CharacterStatPropsT {\r\n  statKey: keyof tBaseStats\r\n  character: tProcessedCharacter\r\n}\r\nconst CharacterStat = (props: CharacterStatPropsT) => {\r\n  const { statKey, character } = props\r\n  return (\r\n    <HoverToolTip\r\n      flex\r\n      content={\r\n        <BoxContainer\r\n          substyle={{\r\n            textTransform: 'capitalize',\r\n            background: Theme.darkBgColor,\r\n          }}\r\n        >\r\n          {statKey}\r\n        </BoxContainer>\r\n      }\r\n    >\r\n      <ResourceE $color={getStatColor(character, statKey)}>\r\n        <Icon\r\n          src={STAT_ICONS[statKey] || ''}\r\n          fill={getStatColor(character, statKey)}\r\n          size={14}\r\n          style={{ marginRight: 3, marginTop: 0 }}\r\n        />\r\n        <NumberChange value={character.stats[statKey]} />\r\n      </ResourceE>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface StatsProps {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Stats = (props: StatsProps) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      style={{ paddingTop: 4, background: Theme.darkBgColor, paddingLeft: 42 }}\r\n    >\r\n      <CharacterStat statKey='vigor' character={character} />\r\n      <CharacterStat statKey='strength' character={character} />\r\n      <CharacterStat statKey='dexterity' character={character} />\r\n      <CharacterStat statKey='intelligence' character={character} />\r\n      <CharacterStat statKey='charisma' character={character} />\r\n      <CharacterStat statKey='agility' character={character} />\r\n      <CharacterStat statKey='luck' character={character} />\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nconst ResourceE = styled('div', (props: any) => ({\r\n  height: 15,\r\n  color: props.$color,\r\n  fontSize: '15px',\r\n  padding: '0px 4px',\r\n  lineHeight: '14px',\r\n  flex: 1,\r\n  textAlign: 'center',\r\n  background: Theme.darkBgColor,\r\n  display: 'flex',\r\n}))\r\n\r\nconst getStatColor = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n): string => {\r\n  const a = character.stats[key]\r\n  const b = character.rawStats[key]\r\n  if (a >= 95) return 'gold'\r\n  if (a > b) return Theme.evasionColor\r\n  if (b > a) return 'lightcoral'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { FISTS } from '../../game/Weapon/fists'\r\nimport { Theme } from '../../theme'\r\nexport interface NamePropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Name = (props: NamePropsT) => {\r\n  const { character } = props\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        marginTop: -3,\r\n        marginRight: -3,\r\n        marginLeft: -3,\r\n        paddingLeft: 52,\r\n        paddingRight: 8,\r\n        background: Theme.otherGrey2,\r\n        height: 24,\r\n        alignItems: 'center',\r\n        borderBottom: '1px solid rgba(255,255,255,0.1)',\r\n        boxShadow: '0px 4px 5px black',\r\n        zIndex: 2,\r\n      }}\r\n    >\r\n      <FullContainer\r\n        style={{\r\n          fontFamily: Theme.titleFont,\r\n          textShadow: '1px 1px 3px black',\r\n          flex: 1,\r\n          fontSize: 20,\r\n        }}\r\n      >\r\n        {character.name}\r\n      </FullContainer>\r\n      <div\r\n        style={{\r\n          fontSize: 12,\r\n          color: 'rgba(255,255,255,0.3)',\r\n        }}\r\n      >\r\n        {character.weapon.name !== 'Fists' ? (\r\n          character.class\r\n        ) : (\r\n          <span\r\n            style={{\r\n              color: 'red',\r\n              display: 'inline-block',\r\n              paddingTop: 4,\r\n              textTransform: 'uppercase',\r\n              textShadow: '1px 1px 3px black',\r\n            }}\r\n          >\r\n            No Weapon Equiped\r\n          </span>\r\n        )}\r\n      </div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Inventory from '../../icons/svg/lorc/knapsack.svg'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Tooltip } from '../Tooltip'\r\nimport { PartyActiveCharacter } from '../PartyActiveCharacter'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { Hover } from '../Hover'\r\nimport { Icon } from '../Icon'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ActionsPropsT {\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n}\r\n\r\nexport const Actions = (props: ActionsPropsT) => {\r\n  const { character, canEquip } = props\r\n  const { party } = usePartyContext()\r\n  const {\r\n    openCharacterInventoryId,\r\n    setOpenCharacterInventoryId,\r\n  } = useUIContext()\r\n  const inventoryOpen = character.id === openCharacterInventoryId\r\n  const inventoryStyle = useSpring({\r\n    opacity: inventoryOpen ? 1 : 0,\r\n    config: { tension: 500 },\r\n  })\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{ justifyContent: 'center', boxShadow: 'inset 0px 0px 3px black' }}\r\n    >\r\n      <FlexContainer\r\n        $full\r\n        style={{ alignItems: 'center', justifyContent: 'center' }}\r\n      >\r\n        <Tooltip\r\n          isOpen={inventoryOpen}\r\n          direction='up'\r\n          distance={60}\r\n          background={Theme.darkBgColor}\r\n          arrow\r\n          content={\r\n            <animated.div\r\n              style={{ minWidth: 887, minHeight: 473, ...inventoryStyle }}\r\n            >\r\n              {inventoryOpen && (\r\n                <PartyActiveCharacter\r\n                  character={character}\r\n                  party={party}\r\n                  canEquip={canEquip}\r\n                  onRequestClose={() => {\r\n                    setOpenCharacterInventoryId(undefined)\r\n                  }}\r\n                />\r\n              )}\r\n            </animated.div>\r\n          }\r\n        >\r\n          <Hover delay={0}>\r\n            {({ isHovering }) => (\r\n              <Icon\r\n                src={Inventory}\r\n                fill={\r\n                  isHovering ? 'rgba(255,255,255,1)' : 'rgba(255,255,255,0.7)'\r\n                }\r\n                size={18}\r\n                shadow\r\n                onClick={() => {\r\n                  if (character.id === openCharacterInventoryId) {\r\n                    return setOpenCharacterInventoryId(undefined)\r\n                  }\r\n                  setOpenCharacterInventoryId(character.id)\r\n                }}\r\n                style={{ padding: 6, cursor: 'pointer' }}\r\n              />\r\n            )}\r\n          </Hover>\r\n        </Tooltip>\r\n      </FlexContainer>\r\n      {/*<FlexContainer\r\n        $full\r\n        style={{ alignItems: 'center', justifyContent: 'center' }}\r\n      >\r\n        <Icon\r\n          src={Details}\r\n          fill={'rgba(255,255,255,0.7)'}\r\n          size={18}\r\n          shadow\r\n          style={{ padding: 6, cursor: 'pointer' }}\r\n        />\r\n      </FlexContainer>*/}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { noneg } from '../../util'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Theme } from '../../theme'\r\nimport { NumberChange } from '../NumberChange'\r\n\r\nexport interface HealthPropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Health = (props: HealthPropsT) => {\r\n  const { character } = props\r\n  const health = noneg(character.health)\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'relative',\r\n        zIndex: 3,\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          marginLeft: 44,\r\n          fontSize: 56,\r\n          height: 64,\r\n          minWidth: 86,\r\n          lineHeight: '72px',\r\n          color: Theme.healthRedColor,\r\n          fontFamily: 'New Rocker',\r\n          display: 'flex',\r\n          textAlign: 'center',\r\n          textShadow: '1px 1px 3px black',\r\n          justifyContent: 'center',\r\n          boxShadow: 'inset 0px 0px 3px black',\r\n        }}\r\n      >\r\n        <NumberChange value={health} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { XPGauge, HealthGauge } from '../Gauge'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { styled } from 'styletron-react'\r\nimport { TagPreview } from '../TagPreview'\r\nimport { PartyCharacterConsumables } from '../PartyCharacterConsumables'\r\nimport { Stats } from './Stats'\r\nimport { Name } from './Name'\r\nimport { Actions } from './Actions'\r\nimport { Health } from './Health'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { usePlayerCharacterNotifications } from '../../hooks/usePlayerCharacterNotifications'\r\nimport { Icon } from '../Icon'\r\nimport { CHARACTER_CLASS_ICONS } from '../../icons/maps'\r\nimport { CHARACTER_CLASS_COLORS } from '../../game/Character/constants'\r\nimport { Theme } from '../../theme'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { ZERO_STATS } from '../../game/Stats/constants'\r\nimport { HoverHexBadge, HexBadge } from '../../elements/shapes'\r\nimport { animated } from 'react-spring'\r\nimport { useElementShake } from '../../hooks/useElementShake'\r\nimport { NumberChange } from '../NumberChange'\r\n\r\nexport interface PartyCharacterProps {\r\n  character: tProcessedCharacter\r\n  selected?: boolean\r\n  showActions?: boolean\r\n  onClick?: () => void\r\n  onConsumableClick?: (consumable: tConsumable, index: number) => void\r\n  push: (contents: JSX.Element, type?: string) => void\r\n}\r\nconst Wrapper = styled(animated.div, (props: any) => {\r\n  const { $active } = props\r\n  return {\r\n    margin: 10,\r\n    display: 'flex',\r\n    position: 'relative',\r\n    transform: $active ? 'scale(1.05)' : 'scale(1)',\r\n    transition: 'all 0.4s',\r\n    userSelect: 'none',\r\n  }\r\n})\r\n\r\nconst Halo = styled('div', (props: any) => {\r\n  const { $active, $targeted, $light } = props\r\n  const left = $light ? -20 : 0\r\n  const leftR = $light ? -10 : 0\r\n  return {\r\n    boxShadow: $active\r\n      ? `${left}px 0px 20px ${$light ? 'rgba(255,255,255,0.4)' : 'white'}`\r\n      : $targeted\r\n      ? `${leftR}px 0px 20px #ff6224  `\r\n      : 'none',\r\n  }\r\n})\r\n\r\nexport const PartyCharacter = (props: PartyCharacterProps) => {\r\n  const {\r\n    character,\r\n    selected,\r\n    showActions = true,\r\n    onConsumableClick,\r\n    push,\r\n  } = props\r\n  const { playerCanEquipItem } = useUIContext()\r\n  const { activeRound } = useCombatContext()\r\n  const targetIds = activeRound?.targetResults.map((r) => r.target.id)\r\n  const active = selected\r\n  const targeted = targetIds?.includes(character.id)\r\n  const { styles, exec } = useElementShake()\r\n  usePlayerCharacterNotifications(character, push, exec)\r\n  return (\r\n    <animated.div style={styles}>\r\n      <Wrapper\r\n        $active={active}\r\n        style={{\r\n          opacity: character.health <= 0 ? 0.5 : 1,\r\n        }}\r\n      >\r\n        <HexBadge\r\n          size={110}\r\n          stroke={2}\r\n          color={CHARACTER_CLASS_COLORS[character.class] || Theme.darkBgColor}\r\n          style={{\r\n            padding: 8,\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            transition: 'all 0.3s',\r\n            marginRight: -58,\r\n            marginTop: -11,\r\n            zIndex: 3,\r\n          }}\r\n          childStyle={{\r\n            marginTop: -20,\r\n          }}\r\n        >\r\n          <Icon\r\n            src={CHARACTER_CLASS_ICONS[character.class]}\r\n            size={72}\r\n            shadow\r\n            style={{ marginRight: -4 }}\r\n            fill={selected ? 'white' : 'rgba(255,255,255,0.5)'}\r\n          />\r\n        </HexBadge>\r\n        <Halo $active={active} $targeted={targeted}>\r\n          <BoxContainer\r\n            style={{\r\n              borderWidth: 2,\r\n              transition: 'all 1s',\r\n            }}\r\n            substyle={{\r\n              padding: 0,\r\n              minWidth: 312,\r\n              background: Theme.darkBgColorSolid,\r\n            }}\r\n          >\r\n            <FlexContainer style={{ border: '2px solid black' }}>\r\n              <FlexContainer $full $direction='column'>\r\n                <Name character={character} />\r\n                <FlexContainer style={{ background: Theme.mediumBgColor }}>\r\n                  <Health character={character} />\r\n                  <FlexContainer $full style={{ maxWidth: 160, minWidth: 160 }}>\r\n                    <PartyCharacterConsumables\r\n                      character={character}\r\n                      consumables={character.consumables}\r\n                      onClick={onConsumableClick}\r\n                    />\r\n                  </FlexContainer>\r\n                  <FlexContainer $full $direction='column'>\r\n                    {showActions && (\r\n                      <Actions\r\n                        character={character}\r\n                        canEquip={playerCanEquipItem}\r\n                      />\r\n                    )}\r\n                  </FlexContainer>\r\n                </FlexContainer>\r\n                <FullContainer />\r\n                <FlexContainer $direction='column' style={{ paddingLeft: 38 }}>\r\n                  <HealthGauge\r\n                    character={character}\r\n                    style={{ borderRight: 'none' }}\r\n                  />\r\n                  <XPGauge\r\n                    character={character}\r\n                    style={{ borderRight: 'none' }}\r\n                  />\r\n                </FlexContainer>\r\n                <HoverHexBadge\r\n                  position={{ bottom: 14, left: 90 }}\r\n                  size={45}\r\n                  rotate\r\n                  stroke={2}\r\n                  childStyle={{ paddingTop: 1 }}\r\n                  content={<BoxContainer dark>Character Level</BoxContainer>}\r\n                >\r\n                  <span\r\n                    style={{\r\n                      color: 'rgba(98, 128, 116,1)',\r\n                      fontSize: 24,\r\n                      lineHeight: '28px',\r\n                    }}\r\n                  >\r\n                    {character.level}\r\n                  </span>\r\n                </HoverHexBadge>\r\n                <Stats character={character} />\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          </BoxContainer>\r\n        </Halo>\r\n        <FlexContainer\r\n          style={{\r\n            position: 'absolute',\r\n            top: '-24px',\r\n            right: '4px',\r\n          }}\r\n        >\r\n          <>\r\n            {character.status.map((status) => (\r\n              <TagPreview key={status.type} direction='up' status={status} />\r\n            ))}\r\n            {character.immunities.map((status, i) => (\r\n              <TagPreview\r\n                key={i}\r\n                immunity={true}\r\n                status={{\r\n                  type: status,\r\n                  immunities: [],\r\n                  stack: 0,\r\n                  stats: ZERO_STATS,\r\n                  duration: -1,\r\n                }}\r\n              />\r\n            ))}\r\n          </>\r\n        </FlexContainer>\r\n        <HoverHexBadge\r\n          position={{\r\n            bottom: 61,\r\n            left: -3,\r\n          }}\r\n          rotate\r\n          stroke={2}\r\n          size={32}\r\n          childStyle={{\r\n            color: Theme.physicalColor,\r\n            fontSize: 18,\r\n            paddingTop: 1,\r\n          }}\r\n          content={<BoxContainer dark>Armor</BoxContainer>}\r\n        >\r\n          <NumberChange value={character.stats.armor} />\r\n        </HoverHexBadge>\r\n        <HoverHexBadge\r\n          position={{\r\n            bottom: 31,\r\n            left: -3,\r\n          }}\r\n          rotate\r\n          stroke={2}\r\n          size={32}\r\n          childStyle={{\r\n            color: Theme.magicColor,\r\n            fontSize: 18,\r\n            paddingTop: 1,\r\n          }}\r\n          content={<BoxContainer dark>Magic Resistance</BoxContainer>}\r\n        >\r\n          <NumberChange value={character.stats.resistance} />\r\n        </HoverHexBadge>\r\n        <HoverHexBadge\r\n          position={{\r\n            bottom: 16,\r\n            left: 24,\r\n          }}\r\n          rotate\r\n          stroke={2}\r\n          size={32}\r\n          childStyle={{\r\n            color: Theme.evasionColor,\r\n            fontSize: 18,\r\n            paddingTop: 1,\r\n          }}\r\n          content={<BoxContainer dark>Evasion</BoxContainer>}\r\n        >\r\n          <NumberChange value={character.stats.evasion} />\r\n        </HoverHexBadge>\r\n        <HoverHexBadge\r\n          direction='up'\r\n          rotate={true}\r\n          content={<BoxContainer dark>Weapon Damage</BoxContainer>}\r\n          position={{\r\n            bottom: -7,\r\n            left: 52,\r\n          }}\r\n          stroke={2}\r\n          size={45}\r\n          childStyle={{\r\n            color:\r\n              character.weapon.damage.value <= 4\r\n                ? 'red'\r\n                : character.weapon.damage.type === 'physical'\r\n                ? Theme.physicalColor\r\n                : Theme.magicColor,\r\n            fontSize: 24,\r\n            paddingTop: 1,\r\n          }}\r\n        >\r\n          <NumberChange\r\n            value={\r\n              (character.weapon.damage.value +\r\n                character.stats.attackDamageOffset) *\r\n              character.stats.attackDamageModifier\r\n            }\r\n          />\r\n        </HoverHexBadge>\r\n      </Wrapper>\r\n    </animated.div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { PartyCharacter } from '../PartyCharacter'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { RedButton } from '../../elements/button'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { LocalToastRp } from '../../contexts/LocalToastContext'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\n\r\nexport interface PlayerPartyPropsT {\r\n  onCharacterClick?: (character: tProcessedCharacter) => void\r\n}\r\nexport const PlayerParty = (props: PlayerPartyPropsT) => {\r\n  const { onCharacterClick } = props\r\n  const {\r\n    activeCharacter,\r\n    selectedSkill,\r\n    isRunning,\r\n    next,\r\n    onSkillSelect,\r\n  } = useCombatContext()\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { party } = usePartyContext()\r\n  const { onCharacterConsumableClick } = useUIContext()\r\n\r\n  const showConfirmButton = (c: tProcessedCharacter) =>\r\n    selectedSkill &&\r\n    activeCharacter &&\r\n    c.health > 0 &&\r\n    ((selectedSkill.targetType === 'self' && c.id === activeCharacter.id) ||\r\n      selectedSkill.targetType === 'ally')\r\n\r\n  return (\r\n    <FlexContainer $direction='column' style={{ marginBottom: 30 }}>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          alignItems: 'flex-end',\r\n          cursor: selectedSkill?.targetType === 'party' ? 'pointer' : 'default',\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <FlexContainer\r\n            $direction='column'\r\n            key={c.id}\r\n            style={{ height: 177, justifyContent: 'flex-end' }}\r\n          >\r\n            {showConfirmButton(c) && (\r\n              <FlexContainer style={{ justifyContent: 'center' }}>\r\n                <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n                  <RedButton onClick={() => next(c)} $direction='up'>\r\n                    {c.id === activeCharacter.id\r\n                      ? 'Target Self'\r\n                      : 'Target Ally'}\r\n                  </RedButton>\r\n                </div>\r\n              </FlexContainer>\r\n            )}\r\n            <LocalToastRp>\r\n              {({ push }) => (\r\n                <PartyCharacter\r\n                  push={push}\r\n                  selected={\r\n                    isRunning &&\r\n                    currentEncounter &&\r\n                    currentEncounter.type !== 'shop' &&\r\n                    activeCharacter &&\r\n                    c &&\r\n                    c.id === activeCharacter.id\r\n                  }\r\n                  character={c}\r\n                  onClick={() => onCharacterClick && onCharacterClick(c)}\r\n                  onConsumableClick={(consumable, index) => {\r\n                    try {\r\n                      if (!c || !consumable || index === undefined) return\r\n                      if (onCharacterConsumableClick) {\r\n                        onCharacterConsumableClick(c, index, consumable)\r\n                      }\r\n                      if (c && c.id === activeCharacter.id) {\r\n                        onSkillSelect(consumable.skill, index)\r\n                      }\r\n                    } catch (e) {}\r\n                  }}\r\n                />\r\n              )}\r\n            </LocalToastRp>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && selectedSkill.targetType === 'party' && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n            <RedButton onClick={() => next(party)}>Target Party</RedButton>\r\n          </div>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useGameStateContext } from '../GameStateContext'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { makeParty } from '../../game/Party/util'\r\nimport { tCombatEncounter } from '../../game/Encounter/type'\r\nimport { CombatContextProvider } from '.'\r\n\r\nexport interface LinkedCombatContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const LinkedCombatContext = (\r\n  props: LinkedCombatContextProviderPropsT,\r\n) => {\r\n  const { children } = props\r\n  const { currentEncounter, floor } = useGameStateContext()\r\n  const [combatParty, setCombatParty] = useState<tParty>(makeParty(0, floor))\r\n  useEffect(() => {\r\n    if (currentEncounter && (currentEncounter as tCombatEncounter).party)\r\n      setCombatParty((currentEncounter as tCombatEncounter).party)\r\n  }, [currentEncounter])\r\n\r\n  return (\r\n    <CombatContextProvider\r\n      enemyParty={combatParty}\r\n      setEnemyParty={setCombatParty}\r\n    >\r\n      {children}\r\n    </CombatContextProvider>\r\n  )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { getEncounterBg } from '../../game/Encounter/constants'\r\nimport { getDepth } from '../../grid/util'\r\n\r\nexport interface AppBgPropsT {\r\n  children: JSX.Element | JSX.Element[]\r\n}\r\nexport const AppBg = (props: AppBgPropsT) => {\r\n  const { children } = props\r\n  const { floor, currentHex, floors, currentEncounter } = useGameStateContext()\r\n  const currentFloor = floors[floor]\r\n\r\n  const baseBg = useMemo(() => {\r\n    return getEncounterBg(getDepth(currentHex, currentFloor.size), floor)\r\n  }, [floor, currentHex])\r\n  const bg = currentEncounter?.completed ? baseBg.completed || baseBg : baseBg\r\n\r\n  /*\r\n  const deadCount = party.characters.filter((c) => c.health <= 0).length\r\n  const deadDiff = party.characters.length - deadCount\r\n  const filter = `grayscale(${\r\n    ((party.characters.length - deadDiff) / party.characters.length) * 100\r\n  }%)`\r\n  */\r\n\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        background: `url(${bg.bg}) center center fixed no-repeat`,\r\n        backgroundSize: 'cover',\r\n        transition: 'all 2s',\r\n        //filter,\r\n      }}\r\n    >\r\n      <FlexContainer\r\n        $full\r\n        $direction='column'\r\n        style={{\r\n          background: bg.overlay,\r\n          transition: 'all 2s',\r\n        }}\r\n      >\r\n        {children}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Switch } from 'react-router-dom'\r\nimport { Combat } from './domain/Combat'\r\nimport { CombatLogContextProvider } from './contexts/CombatLogContext'\r\nimport { ModalContextProvider } from './contexts/ModalContext'\r\nimport { makeRoute, RouteController } from './routes'\r\nimport { Party } from './domain/Party'\r\nimport { Start } from './domain/Start'\r\nimport { UIContextProvider } from './contexts/UIContext'\r\nimport { PlayerParty } from './components/PlayerParty'\r\nimport { FullContainer } from './elements/flex'\r\nimport { LinkedCombatContext } from './contexts/CombatContext/context'\r\nimport { AppBg } from './components/AppBg'\r\n\r\nexport const App = () => {\r\n  return (\r\n    <ModalContextProvider>\r\n      <LinkedCombatContext>\r\n        <UIContextProvider>\r\n          <CombatLogContextProvider>\r\n            <AppBg>\r\n              <RouteController />\r\n              <FullContainer>\r\n                <Switch>\r\n                  {makeRoute('/party', Party)}\r\n                  {makeRoute('/combat', Combat)}\r\n                  {makeRoute('/', Start)}\r\n                </Switch>\r\n              </FullContainer>\r\n              <PlayerParty />\r\n            </AppBg>\r\n          </CombatLogContextProvider>\r\n        </UIContextProvider>\r\n      </LinkedCombatContext>\r\n    </ModalContextProvider>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './index.css'\n\nimport { Provider as StyletronProvider, DebugEngine } from 'styletron-react'\nimport { Client as Styletron } from 'styletron-engine-atomic'\nimport { Provider as ReduxProvider } from 'react-redux'\nimport { HashRouter as Router } from 'react-router-dom'\nimport { makeStore } from './state'\nimport { PartyContextProvider } from './contexts/PartyContext'\nimport { GameStateContextProvider } from './contexts/GameStateContext'\n\nconst debug = process.env.NODE_ENV === 'production' ? void 0 : new DebugEngine()\nconst engine: Styletron = new Styletron()\nconst store = makeStore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n        <GameStateContextProvider>\n          <PartyContextProvider>\n            <Router basename='/JSFTK_combat/'>\n              <App />\n            </Router>\n          </PartyContextProvider>\n        </GameStateContextProvider>\n      </StyletronProvider>\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport party from './party'\r\nimport game from './game2'\r\n\r\nexport const makeStore = () =>\r\n  createStore(combineReducers({ party, game }), compose(applyMiddleware(thunk)))\r\n"],"sourceRoot":""}