{"version":3,"sources":["icons/svg/delapouite/coins.svg","icons/svg/lorc/broadsword.svg","icons/svg/lorc/dodging.svg","icons/svg/delapouite/perspective-dice-six.svg","icons/svg/lorc/sprint.svg","icons/svg/delapouite/shield-impact.svg","icons/svg/lorc/heavy-timer.svg","icons/svg/lorc/ubisoft-sun.svg","icons/svg/lorc/flat-hammer.svg","icons/svg/delapouite/g-clef.svg","icons/svg/lorc/shieldcomb.svg","icons/svg/lorc/pointy-sword.svg","icons/svg/delapouite/chest-armor.svg","icons/svg/delapouite/viking-shield.svg","icons/svg/lorc/leather-boot.svg","icons/svg/lorc/visored-helm.svg","assets/img/flat-forestred.jpg","icons/svg/lorc/wolf-head.svg","icons/svg/delapouite/orc-head.svg","icons/svg/lorc/imp-laugh.svg","icons/svg/lorc/bee.svg","icons/svg/delapouite/bandit.svg","icons/svg/delapouite/pirate-captain.svg","icons/svg/lorc/cultist.svg","icons/svg/delapouite/overlord-helm.svg","icons/svg/lorc/laurel-crown.svg","icons/svg/delapouite/heart-beats.svg","icons/svg/delapouite/biceps.svg","icons/svg/lorc/brain.svg","icons/svg/delapouite/eye-target.svg","icons/svg/lorc/juggler.svg","icons/svg/lorc/clover.svg","icons/svg/lorc/star-swirl.svg","icons/svg/sbed/targeted.svg","icons/svg/delapouite/sticky-boot.svg","icons/svg/lorc/biohazard.svg","icons/svg/carl-olsen/flame.svg","icons/svg/lorc/bleeding-wound.svg","icons/svg/lorc/high-shot.svg","icons/svg/lorc/fire-zone.svg","icons/svg/lorc/hammer-drop.svg","icons/svg/lorc/bordered-shield.svg","icons/svg/lorc/energy-arrow.svg","icons/svg/delapouite/backward-time.svg","icons/svg/lorc/double-shot.svg","icons/svg/delapouite/extra-time.svg","icons/svg/sbed/health-normal.svg","icons/svg/lorc/wave-strike.svg","icons/svg/lorc/life-support.svg","icons/svg/lorc/axe-in-stump.svg","icons/svg/lorc/robe.svg","icons/svg/lorc/scale-mail.svg","icons/svg/lorc/lightning-shield.svg","icons/svg/delapouite/robin-hood-hat.svg","icons/svg/lorc/pointy-hat.svg","icons/svg/lorc/battle-axe.svg","icons/svg/lorc/gavel.svg","icons/svg/lorc/heavy-arrow.svg","icons/svg/lorc/bowie-knife.svg","icons/svg/skoll/revolver.svg","icons/svg/lorc/guitar.svg","icons/svg/lorc/wizard-staff.svg","icons/svg/lorc/stone-spear.svg","icons/svg/lorc/book-cover.svg","icons/svg/delapouite/torch.svg","icons/svg/skoll/fist.svg","icons/svg/delapouite/herbs-bundle.svg","icons/svg/delapouite/viking-head.svg","icons/svg/lorc/cowled.svg","icons/svg/cathelineau/nun-face.svg","icons/svg/delapouite/wizard-face.svg","icons/svg/lorc/split-cross.svg","icons/svg/lorc/hand.svg","icons/svg/delapouite/arrow-wings.svg","icons/svg/lorc/battered-axe.svg","icons/svg/lorc/crossed-swords.svg","icons/svg/lorc/divided-spiral.svg","icons/svg/lorc/crowned-skull.svg","icons/svg/delapouite/skills.svg","icons/svg/lorc/knapsack.svg","icons/svg/delapouite/light-backpack.svg","icons/svg/delapouite/leather-armor.svg","state/util.ts","hooks/useActions.ts","game/Stats/constants.ts","util/undefAdd.ts","game/Stats/util.ts","game/Status/constants.ts","util/noneg.ts","game/Skill/objects/smash.ts","game/Skill/objects/shockwave.ts","game/Weapon/objects/blunt/blacksmiths_hammer.ts","game/Skill/objects/shot.ts","game/Skill/objects/snipe_shot.ts","game/Skill/objects/surge.ts","game/Skill/objects/area_blast.ts","game/Skill/objects/alto.ts","game/Skill/objects/dazzle.ts","game/Skill/objects/stun_attack.ts","game/Skill/objects/piercing_blow.ts","game/Skill/objects/spread_shot.ts","game/Skill/objects/pin_down.ts","game/Skill/objects/ritardando.ts","game/Skill/objects/symphony.ts","game/Skill/objects/rubato.ts","game/Skill/objects/presto.ts","game/Skill/objects/protect.ts","game/Skill/objects/time_jump.ts","game/Skill/objects/cutting_swing.ts","game/Skill/objects/restore.ts","game/Skill/objects/power_strike.ts","game/Weapon/constants.ts","game/Weapon/objects/bow/hunting_bow.ts","game/Weapon/objects/tome/scholars_book.ts","game/Weapon/objects/lute/simple_lute.ts","game/Weapon/objects/dagger/hobo_dagger.ts","game/Weapon/objects/blunt/index.ts","game/Weapon/objects/blunt/mace.ts","game/Weapon/objects/blunt/war_pick.ts","game/Weapon/objects/blunt/crude_club.ts","game/Weapon/objects/bow/index.ts","game/Weapon/objects/bow/composite_bow.ts","game/Weapon/objects/bow/curved_bow.ts","game/Weapon/objects/lute/index.ts","game/Weapon/objects/lute/archlute.ts","game/Weapon/objects/lute/barbat.ts","game/Weapon/objects/lute/decent_lute.ts","game/Weapon/objects/lute/fancy_lute.ts","game/Weapon/objects/tome/index.ts","game/Weapon/objects/tome/mages_tome.ts","game/Weapon/objects/tome/apprentices_tome.ts","game/Weapon/objects/tome/dusty_book.ts","game/Weapon/objects/spear/bandit_glaive.ts","game/Weapon/objects/sword/bokken.ts","game/Weapon/objects/axe/woodcutters_axe.ts","game/Roll/util.ts","game/Skill/objects/taunt.ts","game/Armor/constants.ts","game/Armor/objects/simple_iron_shield.ts","game/Skill/objects/heal.ts","game/Consumable/objects/godsbeard.ts","game/Consumable/constants.ts","game/Consumable/util.ts","theme/index.ts","game/Character/constants.ts","game/Weapon/objects/fists.ts","game/Character/util.ts","util/getRandom.ts","game/Skill/objects/enemy/bite.ts","game/Armor/objects/index.ts","game/Armor/objects/adventure_boots.ts","game/Armor/objects/adventure_cloak.ts","game/Armor/objects/explorers_boots.ts","game/Armor/objects/explorers_cloak.ts","game/Armor/objects/explorers_hat.ts","game/Armor/objects/fur_armor.ts","game/Armor/objects/fur_boots.ts","game/Armor/objects/performers_boots.ts","game/Armor/objects/performers_vest.ts","game/Armor/objects/town_guard_helm.ts","game/Armor/objects/town_guard_armor.ts","game/Armor/objects/town_guard_boots.ts","game/Armor/objects/apprentice_cap.ts","game/Armor/objects/apprentice_robe.ts","game/Armor/objects/apprentice_shoes.ts","game/Armor/objects/fancy_hat.ts","game/Armor/objects/fancy_shoes.ts","game/Armor/objects/fancy_vest.ts","game/Armor/objects/cloth_shoes.ts","game/Armor/objects/chain_mail_vest.ts","game/Armor/objects/leather_greaves.ts","game/Armor/objects/leather_armor.ts","game/Armor/objects/leather_vest.ts","game/Armor/objects/travellers_boots.ts","game/Armor/objects/travellers_hat.ts","game/Armor/objects/travellers_tunic.ts","game/Armor/objects/goblin_helm.ts","game/Armor/objects/goblin_vest.ts","game/Armor/objects/bone_buckler.ts","game/Armor/objects/ward_shield.ts","game/Armor/objects/wooden_heater.ts","game/Armor/objects/iron_round_shield.ts","game/Encounter/constants.ts","game/Character/enemies/timberwolf.ts","game/Skill/objects/enemy/impale.ts","game/Character/enemies/beastman.ts","game/Skill/objects/enemy/slap.ts","game/Character/enemies/vale_imp.ts","game/Skill/objects/enemy/sting.ts","game/Character/enemies/bee.ts","game/Skill/objects/enemy/stab.ts","game/Character/enemies/bandit.ts","game/Character/enemies/buccaneer.ts","game/Skill/objects/enemy/torch.ts","game/Character/enemies/cultist.ts","game/Party/constants.ts","game/Skill/objects/enemy/lich_drain.ts","game/Skill/objects/enemy/lich_screech.ts","game/Skill/objects/enemy/lich_mass_screech.ts","game/Skill/objects/enemy/lich_smite.ts","game/Party/util.ts","state/party/index.ts","game/Encounter/util.ts","game/Character/bosses/index.ts","game/Character/bosses/lich.ts","state/game/index.ts","contexts/GameStateContext/index.tsx","contexts/PartyContext/index.tsx","contexts/ModalContext/reducer.ts","contexts/ModalContext/index.tsx","elements/flex.ts","elements/button.tsx","components/Icon/index.tsx","components/Hover/index.tsx","elements/box.tsx","components/StatsPreview/index.tsx","game/Skill/objects/animato.ts","icons/maps.tsx","game/Item/constants.ts","components/Tooltip/index.tsx","hooks/useOnClickOutside.ts","elements/badge.tsx","components/SkillChecks/index.tsx","components/ArmorPreview/index.tsx","elements/typography.tsx","game/Skill/constants.ts","game/Skill/util.ts","components/SkillPreview/index.tsx","components/WeaponPreview/index.tsx","components/ConsumablePreview/index.tsx","components/ItemPreview/index.tsx","components/CombatVictoryModal/index.tsx","game/Other/util.ts","game/Queue/util.ts","game/Skill/committer.ts","contexts/CombatContext/index.tsx","game/AI/util.ts","components/RoundResultRenderer/Perfect.tsx","components/RoundResultRenderer/index.tsx","contexts/UIContext/index.tsx","components/CombatActions/index.tsx","elements/monospace.tsx","hooks/usePrevious.ts","components/Gauge/v2.tsx","components/Gauge/index.tsx","components/TagPreview/index.tsx","hooks/usePlayerCharacterNotifications.tsx","components/EnemyCharacter/Health.tsx","contexts/LocalToastContext/index.tsx","components/EnemyCharacter/index.tsx","components/CombatParty/index.tsx","components/AppHeader/index.tsx","components/PartyResources/index.tsx","components/CharacterIcon/index.tsx","components/CombatQueue/index.tsx","contexts/CombatLogContext/util.tsx","contexts/CombatLogContext/index.tsx","components/CombatLog/index.tsx","domain/Combat.tsx","hooks/useCombatStart.tsx","routes/index.tsx","components/Shop/index.tsx","components/Shrine/index.tsx","components/EncounterHistory/index.tsx","domain/Party.tsx","util/stringArr.ts","domain/Start.tsx","components/PartyCharacterConsumables/index.tsx","components/PartyCharacter/Stats.tsx","components/PartyCharacter/Name.tsx","components/PartyActiveCharacter/StatBar.tsx","components/PartyActiveCharacter/Items.tsx","components/PartyActiveCharacter/Name.tsx","components/CharacterImage/index.tsx","components/PartyActiveCharacter/Image.tsx","components/PartyActiveCharacter/ArmorList.tsx","components/PartyActiveCharacter/WeaponList.tsx","components/PartyActiveCharacter/MenuSelect.tsx","components/PartyActiveCharacter/HoverArea.tsx","components/PartyActiveCharacter/index.tsx","components/PartyCharacter/Actions.tsx","components/PartyCharacter/Health.tsx","components/PartyCharacter/index.tsx","components/PlayerParty/index.tsx","contexts/CombatContext/context.tsx","App.tsx","serviceWorker.ts","index.tsx","state/index.ts"],"names":["module","exports","makeReducer","core","initialState","state","action","coreFn","type","useActions","actions","dispatch","useDispatch","useMemo","bindActionCreators","ZERO_STATS","vigor","strength","intelligence","dexterity","charisma","agility","luck","armor","resistance","evasion","maxHealthOffset","healthRegeneration","damageTakenModifier","damageReflection","melee","ranged","attackDamageOffset","attackDamageModifier","criticalChance","damageModifiers","flying","undead","queueConsolidationModifier","queueValueSet","undefined","goldModifier","maxInspirationOffset","consumableHealthGainOffset","minHealthOffset","BASE_C_STATS","CLASS_STATS","blacksmith","hunter","scholar","bard","hobo","enemy","DAMAGE_BONUS_KEYS","DEFENSE_BONUS_KEYS","HEALTH_FOCUS_BONUS_KEYS","STAT_BONUS_KEYS","STAT_KEY_LABELS","undefAdd","a","b","combineStats","stats","reduce","result","STATUS_CONFIG","bleeding","name","description","canStack","isTemporary","duration","immunities","burning","cursed","frozen","poisoned","shocked","stunned","wet","rushed","interrupted","reset","evasive","resilient","protected","targeted","cure","noneg","value","BASIC_ATTACK","id","rolls","v4","damageModifier","splashDamageModifier","targetType","damage","healing","offset","perfectSplash","perfectPierce","perfectStatus","SMASH_ID","SMASH","STRIKE_ID","STRIKE","CHOP_ID","CHOP","PUNCH_ID","PUNCH","HOBO_STAB_ID","HOBO_STAB","SHOCKWAVE","BLACKSMITHS_HAMMER","itemType","rarity","stat","twoHand","breakable","range","skills","SHOT","SNIPE_SHOT","SURGE","AREA_BLAST","ALTO","DAZZLE","STUN_ATTACK","DAZE","PIERCING_BLOW","SPREAD_SHOT","PIN_DOWN","RITARDANDO","SYMPHONY","RUBATO","PRESTO","PROTECT","TIME_JUMP","CUTTING_SWING","RESTORE","POWER_STRIKE","CLASS_WEAPONS","ALL_WEAPONS","resolveCheck","character","key","statValue","getBaseStatValue","roll","DiceRoll","total","TAUNT","weaponStatOverride","CLASS_ARMOR","resource","HEAL","consumableId","cid","GODSBEARD","skill","CLASS_CONSUMABLES","considateConsumableListToStack","consumables","stack","forEach","c","map","s","consumable","includes","count","updateStackItem","Theme","CHARACTER_XP_MAX","CHARACTER_CLASS_COLORS","FISTS","checkForProcessedCharacter","processed","Error","makeCharacter","characterClass","isCharacter","partyId","level","experience","class","healthOffset","inspirationOffset","tags","weapon","status","possibleRewards","processCharacter","r","getSkills","statusImmunities","baseVigor","startingHealth","Math","floor","maxHealth","health","maxInspiration","inspiration","rawStats","getDamageResistance","hasStatus","statusType","hasImmunity","getReflectedDamage","target","rawDamage","commitDamage","ignoreResistance","pc","rawDamageValue","filter","ceil","decrementStatusDurations","addMultipleStatus","types","durationOverride","statusConfig","existingStatus","find","findStatus","addStatus","levelUp","getRandom","items","random","length","BITE","ALL_ARMOR","ZERO_REWARD","gold","xp","armorDown","resDown","attackDown","armorUp","attackUp","resUp","justGold","justXp","justRandomItem","TIMBERWOLF","icon","Wolf","IMPALE","BEASTMAN","BeastMan","SLAP","VALE_IMP","Imp","STING","INFECTIOUS_STING","BEE","Bee","STAB","BANDIT","Bandit","BUCCANEER","Icon","TORCH","CULTIST","Cultist","PLAYER_PARTY_ID","ENEMY_COMBOS_BY_LEVEL","0","1","2","3","4","5","LICH_DRAIN","LICH_SCREECH","statusDurationOverride","LICH_MASS_SCREECH","LICH_SMITE","isParty","obj","checkForProcessedParty","party","characters","findCharacterInParty","processParty","updateCharacter","characterId","updater","makeParty","getRolledRewards","checkedCharacter","index","rewards","i","getRewardsFromCharacter","commitRewards","goldMultiplier","addExperience","xpToNextLevel","SET_GOLD","actionCreators","payload","item","updateParty","upsertCharacter","deleteCharacter","upsertItem","setGold","jack","jim","john","INITIAL_STATE","makeRandomEncounter","depth","encounterType","encounter","choiceId","reward","boss","Lich","costs","getItemCost","results","makeEncounterList","Array","fill","_","left","right","cost","RESET","encounterId","itemId","chooseCurrent","nextLevel","removeItem","encounters","e","choice","defaultValue","currentChoice","currentEncounter","previousChoice","GameStateContext","React","createContext","useGameStateContext","useContext","GameStateContextProvider","props","children","useSelector","game","Provider","defaultContextValue","rawParty","activeCharacter","findCharacter","findRawCharacter","setActiveCharacter","equipItem","unequipItem","purchaseItem","PartyContext","PartyContextProvider","useState","activeCharacterId","setActiveCharacterId","existingArmor","equipArmor","existingWeapon","equipWeapon","unequipArmor","usePartyContext","isOpen","contents","callback","blocking","styles","OPEN","CLOSE","style","reducer","coreFunction","ModalContext","open","close","setBlocking","setPayload","setContents","setCallback","setStyles","useModalContext","getContextValue","Modal","setAppElement","ModalContextProvider","reducerValue","useReducer","context","onRequestClose","content","backgroundColor","color","width","margin","bottom","borderColor","modal","overlay","zIndex","FlexContainer","styled","display","flexDirection","$direction","flex","$full","FullContainer","Button","cursor","background","boxShadow","textShadow","border","outline","padding","userSelect","RedButton","withStyle","fontFamily","letterSpacing","borderTop","borderBottom","animationDirection","animationIterationCount","animationName","src","size","shadow","onClick","loading","setLoading","svg","setSvg","useEffect","fetch","then","res","text","className","height","dangerouslySetInnerHTML","__html","Hover","delay","internalHovering","setInternalHovering","isHovering","setIsHovering","guid","setGuid","useLayoutEffect","setTimeout","onMouseEnter","preventDefault","stopPropagation","onMouseLeave","BoxContainer","substyle","tag","Element","rest","boxSizing","defense_key_colors","StatsPreview","fontSize","textTransform","Object","keys","ANIMATO","STAT_ICONS","Vigor","Strength","Brain","Awareness","Juggler","Agility","Clover","STATUS_ICONS","Dazed","Targeted","Evasive","Protect","SpeedDown","Poisoned","Burning","Bleeding","SKILL_ICONS","Shot","SnipeShot","PinDown","Surge","AreaBast","Dazzle","Reset","Smash","Shockwave","Taunt","Alto","SpreadShot","TimeJump","Heal","CuttingSwing","Restore","Dodging","Chop","PowerStrike","ARMOR_TYPE_ICONS","MagicArmor","ClothArmor","Armor","Shield","MagicShield","Footwear","Hat","MagicHat","Helmet","WEAPON_TYPE_ICONS","axe","Axe","blunt","Blunt","bow","Bow","dagger","Dagger","pistol","Handgun","lute","Lute","MagicStaff","Spear","Sword","Tome","Torch","Fist","RESOURCE_ICONS","Weapon","offhand","body","head","feet","CONSUMABLE_ITEM_ICONS","Godsbeard","CONSUMABLE_ITEM_COLORS","CHARACTER_CLASS_ICONS","Blacksmith","Bard","Hunter","Scholar","Hobo","ITEM_RARITY_COLORS","common","uncommon","rare","mythic","CHARACTER_RESOURCES","Tooltip","direction","tagName","arrow","HoverToolTip","ClickToolTip","setIsOpen","ref","useRef","handler","listener","event","current","contains","document","addEventListener","removeEventListener","useOnClickOutside","p","v","Div","transform","Badge","withWrapper","$style","position","$absolute","$size","alignItems","justifyContent","lineHeight","borderRadius","$color","top","$top","$bottom","$right","$left","transition","HoverBadge","badgeProps","distance","SkillChecks","perfect","every","check","label","SkillCheck","crit","colors","getPerfectStatusColors","opacity","getColor","X","ArmorPreview","showEquipButton","showBuyButton","onEquipClick","onBuyClick","rarityColor","from","Color","darken","rgb","toString","to","gradient","minWidth","marginBottom","marginRight","fontWeight","marginLeft","minHeight","textAlign","marginTop","FakeLink","textDecoration","PERFECT_DISPLAY_INFO","splash","pierce","heal","getTargetSkillResult","sourceResult","dodgeResult","dodgeSuccess","source","console","log","getRawDamage","totalDamage","reflectedDamage","loggedDamgge","getSkillResult","targets","rollResults","passedCount","criticalHitSuccess","rollDamageModifier","round","weaponRangeOverride","accuracySuccess","splashDamage","addedStatus","getSourceSkillResult","targetResults","resolveSkillTarget","makeSkillTarget","getSkillDamage","getPerfectText","perfectKeys","base","getPerfectKeys","pre","SkillPreview","perfectChance","getDamageColor","WeaponPreview","basicAttack","Melee","Ranged","Hands","paddingLeft","ConsumablePreview","ItemPreivew","CombatVictoryModal","consolidatedRewards","consolidateRewards","setItems","first","Gold","XP","makeCombatQueue","sortedCharacters","sort","validateQueue","AGILITY_OFFSET","consolidateQueue","queue","min","Number","POSITIVE_INFINITY","getMin","getFirst","commitQueueUpdates","pcs","shiftedQueue","shiftQueue","q","partyUpdater","commitSkillResults","playerParty","enemyParty","targetResult","sourceParty","targetParty","localUpdate","selectedSkill","selectedTargets","selectedConsumableIndex","roundResults","activeRound","isRunning","isRenderingResult","onSkillSelect","onTargetsSelect","onConsumableSelect","consumableIndex","start","next","commit","CombatContext","useCombatContext","CombatContextProvider","setEnemyParty","onRequestNewParty","history","useHistory","setIsRunning","setIsRenderingResult","setQueue","resultCommitter","roundId","setRoundId","setRoundResults","setActiveRound","selectedTarget","setSelectedTarget","setSelectedSkill","setSelectedConsumableIndex","useCallback","targetedCharacters","t","getSkillTargetOptions","getAIAction","execEnemyTurn","alert","push","nextTarget","roundTarget","Perfect","show","useSpring","div","RoundResultRenderer","isModal","RoundResult","isDone","setIsDone","activeIndex","setActiveIndex","stream","Kefir","sequentially","onValue","onEnd","later","showPerfect","isPlayer","showTarget","lighten","hex","playerCanEquipItem","openCharacterInventoryId","showSkillTooltips","onCharacterConsumableClick","setPlayerCanEquipItem","setOpenCharacterInventoryId","setOnCharacterConsumableClick","fn","setShowSkillTooltips","UIContext","useUIContext","UIContextProvider","_setOnCharacterConsumableClick","CombatActions","Fragment","Monospace","Monodiv","usePrevious","Gauge2","max","percentage","oldPercentage","setOldPercentage","borderLeft","config","friction","mass","tension","maxWidth","overflow","Gauge","HealthGauge","XPGauge","TagPreview","immunity","usePlayerCharacterNotifications","previousHealth","setPreviousHealth","previousLevel","setPreviousLevel","healthDiff","abs","lastRound","chResult","Health","hp","clamp","hpp","Toast","animation","useTransition","maxHeight","enter","leave","whiteSpace","LocalToastRp","EnemyCharacter","$selected","$active","isBoss","active","borderWidth","CombatParty","AppHeader","PartyResources","paddingRight","CharacterIcon","iconStyle","CombatQueue","sortedIds","getSortedIds","bigList","NEGATIVE_INFINITY","getMax","widthCoef","Span","SkillSpan","CombatLogContext","combatLog","clear","useCombatLogContext","CombatLogContextProvider","setCombatLog","deadLog","setDeadLog","NameSpan","isUserParty","isEnemyParty","NameSpanBuilder","line","dLog","latestRounds","baseRound","subTarget","splashDamageResistance","CombatLog","scrollRef","isExpanded","setIsExpanded","scrollIntoView","behavior","Combat","useCombatStart","makeRoute","path","Component","RouteController","CardList","flexWrap","tabs","render","w","Shop","activeTab","setActiveTab","tab","overflowY","Shrine","setResults","disabled","JSON","stringify","EncounterHistory","chosenEncounters","getIcon","Boss","Unknown","Party","parties","paddingTop","arr","previousEncounter","f","l","getChoiceText","Start","onChange","rc","StartCharacterCard","PartyCharacterConsumables","onStackClick","filler","ConsumableBox","HEIGHT","PartyCharacterConsumable","PartyCharacterConsumableTooltip","CharacterStat","statKey","ResourceE","getStatColor","Stats","Name","StatBar","paddingBottom","ItemRow","$disabled","Items","setActiveItem","onHover","canUnequip","ArmorItem","CharacterImage","alt","Image","ArmorList","canEquip","activeItemId","setActiveItemId","localeCompare","WeaponItem","WeaponList","ACTIVE_CHARACTER_MENU_KEYS","Weapons","MenuSelect","activeKey","onActiveKeyChange","option","HoverArea","activeItem","foundArmor","PartyActiveCharacter","activeMenuKey","setActiveMenuKey","activeOption","o","Actions","inventoryOpen","inventoryStyle","Inventory","Details","setStoredHealth","Wrapper","$targeted","PartyCharacter","selected","showActions","onConsumableClick","targetIds","borderRight","PlayerParty","onCharacterClick","showConfirmButton","LinkedCombatContext","combatParty","setCombatParty","CombatDomain","GlobalCharacters","App","ForestBg","backgroundSize","Boolean","window","location","hostname","match","engine","Styletron","store","createStore","combineReducers","compose","applyMiddleware","thunk","ReactDOM","StrictMode","debug","debugAfterHydration","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,uCCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,kD,sCCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,kECA3CD,EAAOC,QAAU,IAA0B,4C,kBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,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","file":"static/js/main.43b9f519.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/coins.97dc8c40.svg\";","module.exports = __webpack_public_path__ + \"static/media/broadsword.47ecfebc.svg\";","module.exports = __webpack_public_path__ + \"static/media/dodging.3c689d6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/perspective-dice-six.8b7e2589.svg\";","module.exports = __webpack_public_path__ + \"static/media/sprint.968b443a.svg\";","module.exports = __webpack_public_path__ + \"static/media/shield-impact.54fdc5c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/heavy-timer.1072a406.svg\";","module.exports = __webpack_public_path__ + \"static/media/ubisoft-sun.30335592.svg\";","module.exports = __webpack_public_path__ + \"static/media/flat-hammer.dff14efb.svg\";","module.exports = __webpack_public_path__ + \"static/media/g-clef.77d209b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/shieldcomb.802f20f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointy-sword.bd82b38d.svg\";","module.exports = __webpack_public_path__ + \"static/media/chest-armor.f1f52a3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/viking-shield.a61f8230.svg\";","module.exports = __webpack_public_path__ + \"static/media/leather-boot.89b85474.svg\";","module.exports = __webpack_public_path__ + \"static/media/visored-helm.1f2ced7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/flat-forestred.951e7322.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wolf-head.4e7bf362.svg\";","module.exports = __webpack_public_path__ + \"static/media/orc-head.ff410513.svg\";","module.exports = __webpack_public_path__ + \"static/media/imp-laugh.b3e04d0d.svg\";","module.exports = __webpack_public_path__ + \"static/media/bee.7b0a0467.svg\";","module.exports = __webpack_public_path__ + \"static/media/bandit.f798765b.svg\";","module.exports = __webpack_public_path__ + \"static/media/pirate-captain.daa0fd39.svg\";","module.exports = __webpack_public_path__ + \"static/media/cultist.998af3b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/overlord-helm.03e5b513.svg\";","module.exports = __webpack_public_path__ + \"static/media/laurel-crown.00b6e803.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-beats.6b1fff9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/biceps.e62c221f.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain.ce65603a.svg\";","module.exports = __webpack_public_path__ + \"static/media/eye-target.4c5ae680.svg\";","module.exports = __webpack_public_path__ + \"static/media/juggler.1188c0be.svg\";","module.exports = __webpack_public_path__ + \"static/media/clover.df6a0d57.svg\";","module.exports = __webpack_public_path__ + \"static/media/star-swirl.3045bd1f.svg\";","module.exports = __webpack_public_path__ + \"static/media/targeted.b4ce8dd7.svg\";","module.exports = __webpack_public_path__ + \"static/media/sticky-boot.f097559f.svg\";","module.exports = __webpack_public_path__ + \"static/media/biohazard.cdfb567d.svg\";","module.exports = __webpack_public_path__ + \"static/media/flame.332be8c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/bleeding-wound.8d92779f.svg\";","module.exports = __webpack_public_path__ + \"static/media/high-shot.eed9def8.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire-zone.42e13657.svg\";","module.exports = __webpack_public_path__ + \"static/media/hammer-drop.120a92c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/bordered-shield.56c12b47.svg\";","module.exports = __webpack_public_path__ + \"static/media/energy-arrow.514fc56c.svg\";","module.exports = __webpack_public_path__ + \"static/media/backward-time.d0246d45.svg\";","module.exports = __webpack_public_path__ + \"static/media/double-shot.70211522.svg\";","module.exports = __webpack_public_path__ + \"static/media/extra-time.4d418333.svg\";","module.exports = __webpack_public_path__ + \"static/media/health-normal.0da85e24.svg\";","module.exports = __webpack_public_path__ + \"static/media/wave-strike.1fe6dbab.svg\";","module.exports = __webpack_public_path__ + \"static/media/life-support.c0c7c040.svg\";","module.exports = __webpack_public_path__ + \"static/media/axe-in-stump.cd8a3e4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/robe.5b61ecba.svg\";","module.exports = __webpack_public_path__ + \"static/media/scale-mail.cb5ff7d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/lightning-shield.85367254.svg\";","module.exports = __webpack_public_path__ + \"static/media/robin-hood-hat.6bab1449.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointy-hat.d042ac98.svg\";","module.exports = __webpack_public_path__ + \"static/media/battle-axe.47a5ba50.svg\";","module.exports = __webpack_public_path__ + \"static/media/gavel.e0256fff.svg\";","module.exports = __webpack_public_path__ + \"static/media/heavy-arrow.56b29a8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/bowie-knife.e7821736.svg\";","module.exports = __webpack_public_path__ + \"static/media/revolver.25251236.svg\";","module.exports = __webpack_public_path__ + \"static/media/guitar.a02399f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/wizard-staff.3e6091b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/stone-spear.446ebd42.svg\";","module.exports = __webpack_public_path__ + \"static/media/book-cover.a02eb2a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/torch.ae5d9c4c.svg\";","module.exports = __webpack_public_path__ + \"static/media/fist.d1b25a44.svg\";","module.exports = __webpack_public_path__ + \"static/media/herbs-bundle.e02bcec1.svg\";","module.exports = __webpack_public_path__ + \"static/media/viking-head.42e0046d.svg\";","module.exports = __webpack_public_path__ + \"static/media/cowled.d0cad9db.svg\";","module.exports = __webpack_public_path__ + \"static/media/nun-face.ca639d11.svg\";","module.exports = __webpack_public_path__ + \"static/media/wizard-face.2a49683a.svg\";","module.exports = __webpack_public_path__ + \"static/media/split-cross.fa0be1a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/hand.7bd9b12d.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-wings.bb52c66a.svg\";","module.exports = __webpack_public_path__ + \"static/media/battered-axe.819d2726.svg\";","module.exports = __webpack_public_path__ + \"static/media/crossed-swords.b7d2c27a.svg\";","module.exports = __webpack_public_path__ + \"static/media/divided-spiral.a8e90e0d.svg\";","module.exports = __webpack_public_path__ + \"static/media/crowned-skull.458d8f78.svg\";","module.exports = __webpack_public_path__ + \"static/media/skills.60519e24.svg\";","module.exports = __webpack_public_path__ + \"static/media/knapsack.62049a62.svg\";","module.exports = __webpack_public_path__ + \"static/media/light-backpack.6ad63d45.svg\";","module.exports = __webpack_public_path__ + \"static/media/leather-armor.f3d5462f.svg\";","import { StateCoreT, StateReducerT } from './types'\r\n\r\nexport const makeReducer = (\r\n  core: StateCoreT,\r\n  initialState: any,\r\n): StateReducerT => {\r\n  return (state = initialState, action) => {\r\n    const coreFn = core[action.type]\r\n    if (coreFn) return coreFn(state, action)\r\n    return state\r\n  }\r\n}\r\n","import { useMemo } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nexport const useActions = (actions: any) => {\r\n  const dispatch = useDispatch()\r\n  return useMemo(() => bindActionCreators(actions, dispatch), [\r\n    dispatch,\r\n    actions,\r\n  ])\r\n}\r\n","import { tStats, tBaseStats } from './type'\r\nimport { tCharacterClass } from '../Character/type'\r\n\r\nexport const ZERO_STATS: tStats = {\r\n  vigor: 0,\r\n  strength: 0,\r\n  intelligence: 0,\r\n  dexterity: 0,\r\n  charisma: 0,\r\n  agility: 0,\r\n  luck: 0,\r\n\r\n  armor: 0,\r\n  resistance: 0,\r\n  evasion: 0,\r\n\r\n  maxHealthOffset: 0,\r\n  healthRegeneration: 0,\r\n  damageTakenModifier: 0,\r\n  damageReflection: {\r\n    melee: 0,\r\n    ranged: 0,\r\n  },\r\n\r\n  attackDamageOffset: 0,\r\n  attackDamageModifier: 0,\r\n  criticalChance: 0,\r\n  damageModifiers: {\r\n    flying: 0,\r\n    undead: 0,\r\n  },\r\n\r\n  queueConsolidationModifier: 0,\r\n  queueValueSet: undefined,\r\n\r\n  goldModifier: 0,\r\n  maxInspirationOffset: 0,\r\n  consumableHealthGainOffset: 0,\r\n  minHealthOffset: 0,\r\n}\r\n\r\nexport const BASE_C_STATS: tStats = {\r\n  ...ZERO_STATS,\r\n  damageTakenModifier: 1,\r\n  attackDamageModifier: 1,\r\n  criticalChance: 5,\r\n  damageModifiers: {\r\n    flying: 0,\r\n    undead: 0,\r\n  },\r\n  queueConsolidationModifier: 1,\r\n  consumableHealthGainOffset: 15,\r\n}\r\n\r\nexport const CLASS_STATS: Record<tCharacterClass, tStats> = {\r\n  blacksmith: {\r\n    ...BASE_C_STATS,\r\n    strength: 76,\r\n    vigor: 80,\r\n    intelligence: 40,\r\n    dexterity: 52,\r\n    charisma: 72,\r\n    agility: 56,\r\n    luck: 50,\r\n    armor: 2,\r\n    resistance: 0,\r\n    evasion: 7,\r\n  },\r\n  hunter: {\r\n    ...BASE_C_STATS,\r\n    strength: 52,\r\n    vigor: 66,\r\n    intelligence: 46,\r\n    dexterity: 78,\r\n    charisma: 64,\r\n    agility: 78,\r\n    luck: 50,\r\n    armor: 1,\r\n    resistance: 0,\r\n    evasion: 20,\r\n  },\r\n  scholar: {\r\n    ...BASE_C_STATS,\r\n    strength: 42,\r\n    vigor: 60,\r\n    intelligence: 78,\r\n    dexterity: 66,\r\n    charisma: 70,\r\n    agility: 70,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 1,\r\n    evasion: 13,\r\n  },\r\n  bard: {\r\n    ...BASE_C_STATS,\r\n    strength: 44,\r\n    vigor: 50,\r\n    intelligence: 70,\r\n    dexterity: 68,\r\n    charisma: 78,\r\n    agility: 68,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 1,\r\n    evasion: 11,\r\n  },\r\n  hobo: {\r\n    ...BASE_C_STATS,\r\n    strength: 70,\r\n    vigor: 70,\r\n    intelligence: 70,\r\n    dexterity: 70,\r\n    charisma: 70,\r\n    agility: 70,\r\n    luck: 30,\r\n    armor: 1,\r\n    resistance: 1,\r\n    evasion: 13,\r\n  },\r\n  enemy: BASE_C_STATS,\r\n}\r\n\r\nexport const DAMAGE_BONUS_KEYS: (keyof tStats)[] = [\r\n  'goldModifier',\r\n  'attackDamageOffset',\r\n  'attackDamageModifier',\r\n  'criticalChance',\r\n]\r\nexport const DEFENSE_BONUS_KEYS: (keyof tStats)[] = [\r\n  'armor',\r\n  'resistance',\r\n  'evasion',\r\n  'healthRegeneration',\r\n  'damageReflection',\r\n]\r\nexport const HEALTH_FOCUS_BONUS_KEYS: (keyof tStats)[] = [\r\n  'maxHealthOffset',\r\n  'maxInspirationOffset',\r\n]\r\nexport const STAT_BONUS_KEYS: (keyof tBaseStats)[] = [\r\n  'vigor',\r\n  'strength',\r\n  'intelligence',\r\n  'dexterity',\r\n  'charisma',\r\n  'agility',\r\n  'luck',\r\n]\r\n\r\nexport const STAT_KEY_LABELS: Record<keyof tStats, string> = {\r\n  strength: ' Strength',\r\n  vigor: ' Vigor',\r\n  intelligence: ' Intelligence',\r\n  dexterity: ' Dexterity',\r\n  charisma: ' Charisma',\r\n  agility: ' Agility',\r\n  luck: ' Luck',\r\n  evasion: ' Evasion',\r\n  criticalChance: '% Crit Chance',\r\n\r\n  armor: ' Armor',\r\n  resistance: ' Resistance',\r\n\r\n  maxHealthOffset: ' Health',\r\n  healthRegeneration: ' Health Regen',\r\n  damageReflection: ' Damage Reflection',\r\n  damageTakenModifier: '% Recieved Damage',\r\n\r\n  // TODO: Make this work\r\n  damageModifiers: ' Damage to certain Enemeies',\r\n\r\n  queueConsolidationModifier: ' Queue Consolidation Modifier',\r\n  queueValueSet: ' Queue Value Set',\r\n\r\n  attackDamageOffset: ' Raw Damage',\r\n  attackDamageModifier: '% Attack Damage',\r\n\r\n  goldModifier: '% Gold Recieved',\r\n  maxInspirationOffset: ' Max Inspiration',\r\n  minHealthOffset: ' Minumum Health',\r\n  consumableHealthGainOffset: ' HP from Consumables',\r\n}\r\n","export const undefAdd = (\r\n  a: number | undefined,\r\n  b: number | undefined,\r\n): number | undefined => {\r\n  if (a === undefined && b === undefined) return undefined\r\n  if (a === undefined && b !== undefined) return b\r\n  if (a !== undefined && b === undefined) return a\r\n  if (a !== undefined && b !== undefined) return a + b\r\n}\r\n","import { tStats } from './type'\r\nimport { ZERO_STATS } from './constants'\r\nimport { undefAdd } from '../../util/undefAdd'\r\n\r\nexport const combineStats = (...stats: tStats[]) => {\r\n  return stats.reduce(\r\n    (result, stats) => ({\r\n      vigor: result.vigor + stats.vigor,\r\n      strength: result.strength + stats.strength,\r\n      intelligence: result.intelligence + stats.intelligence,\r\n      dexterity: result.dexterity + stats.dexterity,\r\n      charisma: result.charisma + stats.charisma,\r\n      agility: result.agility + stats.agility,\r\n      luck: result.luck + stats.luck,\r\n\r\n      armor: result.armor + stats.armor,\r\n      resistance: result.resistance + stats.resistance,\r\n      evasion: result.evasion + stats.evasion,\r\n\r\n      maxHealthOffset: result.maxHealthOffset + stats.maxHealthOffset,\r\n      healthRegeneration: result.healthRegeneration + stats.healthRegeneration,\r\n      damageTakenModifier:\r\n        result.damageTakenModifier + stats.damageTakenModifier,\r\n      damageReflection: {\r\n        melee: result.damageReflection.melee + stats.damageReflection.melee,\r\n        ranged: result.damageReflection.ranged + stats.damageReflection.ranged,\r\n      },\r\n\r\n      attackDamageOffset: result.attackDamageOffset + stats.attackDamageOffset,\r\n      attackDamageModifier:\r\n        result.attackDamageModifier + stats.attackDamageModifier,\r\n      criticalChance: result.criticalChance + stats.criticalChance,\r\n      damageModifiers: {\r\n        flying: result.damageModifiers.flying + stats.damageModifiers.flying,\r\n        undead: result.damageModifiers.undead + stats.damageModifiers.undead,\r\n      },\r\n\r\n      queueConsolidationModifier:\r\n        result.queueConsolidationModifier + stats.queueConsolidationModifier,\r\n      queueValueSet: undefAdd(result.queueValueSet, stats.queueValueSet),\r\n\r\n      goldModifier: result.goldModifier + stats.goldModifier,\r\n      maxInspirationOffset:\r\n        result.maxInspirationOffset + stats.maxInspirationOffset,\r\n      consumableHealthGainOffset:\r\n        result.consumableHealthGainOffset + stats.consumableHealthGainOffset,\r\n      minHealthOffset: result.minHealthOffset + stats.minHealthOffset,\r\n    }),\r\n    ZERO_STATS,\r\n  )\r\n}\r\n\r\nexport const multiplyStats = (stats: tStats, modifier: number): tStats => ({\r\n  vigor: stats.vigor * modifier,\r\n  strength: stats.strength * modifier,\r\n  intelligence: stats.intelligence * modifier,\r\n  dexterity: stats.dexterity * modifier,\r\n  charisma: stats.charisma * modifier,\r\n  agility: stats.agility * modifier,\r\n  luck: stats.luck * modifier,\r\n\r\n  armor: stats.armor * modifier,\r\n  resistance: stats.resistance * modifier,\r\n  evasion: stats.evasion * modifier,\r\n\r\n  maxHealthOffset: stats.maxHealthOffset * modifier,\r\n  healthRegeneration: stats.healthRegeneration * modifier,\r\n  damageTakenModifier: stats.damageTakenModifier * modifier,\r\n  damageReflection: {\r\n    melee: stats.damageReflection.melee * modifier,\r\n    ranged: stats.damageReflection.ranged * modifier,\r\n  },\r\n\r\n  attackDamageOffset: stats.attackDamageOffset * modifier,\r\n  attackDamageModifier: stats.attackDamageModifier * modifier,\r\n  criticalChance: stats.criticalChance * modifier,\r\n  damageModifiers: {\r\n    flying: stats.damageModifiers.flying * modifier,\r\n    undead: stats.damageModifiers.undead * modifier,\r\n  },\r\n\r\n  queueConsolidationModifier: stats.queueConsolidationModifier * modifier,\r\n  queueValueSet: stats.queueValueSet,\r\n\r\n  goldModifier: stats.goldModifier * modifier,\r\n  maxInspirationOffset: stats.maxInspirationOffset * modifier,\r\n  consumableHealthGainOffset: stats.consumableHealthGainOffset * modifier,\r\n  minHealthOffset: stats.minHealthOffset * modifier,\r\n})\r\n","import { tStatusType, tStatusConfig } from './type'\r\nimport { ZERO_STATS } from '../Stats/constants'\r\n\r\nexport const STATUS_CONFIG: Record<tStatusType, tStatusConfig> = {\r\n  bleeding: {\r\n    name: 'Bleeding',\r\n    description: '-10 HP on your turn.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      healthRegeneration: -6,\r\n    },\r\n    immunities: [],\r\n  },\r\n  burning: {\r\n    name: 'Burning',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      healthRegeneration: -6,\r\n    },\r\n    immunities: [],\r\n  },\r\n  // TODO: Different cursed status' for different stats\r\n  cursed: {\r\n    name: 'Cursed',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  frozen: {\r\n    name: 'Frozen',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      damageTakenModifier: 25,\r\n    },\r\n    immunities: [],\r\n  },\r\n  poisoned: {\r\n    name: 'Poisoned',\r\n    description: \"-5 HP on this character's turn and -5 to each stat.\",\r\n    canStack: true,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      vigor: -5,\r\n      strength: -5,\r\n      intelligence: -5,\r\n      dexterity: -5,\r\n      charisma: -5,\r\n      healthRegeneration: -3,\r\n    },\r\n    immunities: [],\r\n  },\r\n  // TODO: Shocked status\r\n  shocked: {\r\n    name: 'Shocked',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  stunned: {\r\n    name: 'Stunned',\r\n    description: 'This character will not progress on the battle timeline.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 2,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueConsolidationModifier: -1,\r\n    },\r\n    immunities: [],\r\n  },\r\n  // TODO: Wet Status\r\n  wet: {\r\n    name: 'Wet',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'armor-up': {\r\n    name: 'Armor Up',\r\n    description: '+5 Armor',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      armor: 5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'attack-up': {\r\n    name: 'Attack Up',\r\n    description: '+5 Attack Damage',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      attackDamageOffset: 5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'evade-up': {\r\n    name: 'Evade Up',\r\n    description: '+15 Evasion',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      evasion: 15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'resistance-up': {\r\n    name: 'Resistance Up',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      resistance: 5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'speed-up': {\r\n    name: 'Speed Up',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      agility: 15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'armor-down': {\r\n    name: 'Armor Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      armor: -5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'attack-down': {\r\n    name: 'Attack Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      attackDamageOffset: -5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'evade-down': {\r\n    name: 'Evade Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      evasion: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'resistance-down': {\r\n    name: 'Resistance Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      resistance: -5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'speed-down': {\r\n    name: 'Speed Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      agility: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  rushed: {\r\n    name: 'Rushed',\r\n    description: 'Bring to front of queue.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 0,\r\n    },\r\n    immunities: [],\r\n  },\r\n  interrupted: {\r\n    name: 'Interrupted',\r\n    description: 'Set back 70 unites.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 70,\r\n    },\r\n    immunities: [],\r\n  },\r\n  reset: {\r\n    name: 'Reset',\r\n    description: 'Set back 100 units.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 100,\r\n    },\r\n    immunities: [],\r\n  },\r\n  evasive: {\r\n    name: 'Evasive',\r\n    description: 'Non-perfect attacks will miss when targeting this character.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  resilient: {\r\n    name: 'Resilient',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  protected: {\r\n    name: 'Protected',\r\n    description: 'Negate the next bit of damage.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  targeted: {\r\n    name: 'Targeted',\r\n    description: 'All enemies will attack this player.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 6,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  cure: {\r\n    name: 'Cure',\r\n    description: 'remove Poisoned, Bleeding, and Burning',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: ['poisoned', 'bleeding', 'burning', 'frozen', 'wet', 'shocked'],\r\n  },\r\n}\r\n","export const noneg = (value: number) => (value > 0 ? value : 0)\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const BASIC_ATTACK = (\r\n  name: string,\r\n  id?: string,\r\n  rolls?: number,\r\n): tSkill => ({\r\n  id: id || v4(),\r\n  name,\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: rolls || 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n})\r\n\r\nconst SMASH_ID = v4()\r\nexport const SMASH = BASIC_ATTACK('Smash', SMASH_ID)\r\nconst STRIKE_ID = v4()\r\nexport const STRIKE = BASIC_ATTACK('Strike', STRIKE_ID)\r\nconst CHOP_ID = v4()\r\nexport const CHOP = BASIC_ATTACK('Chop', CHOP_ID)\r\nconst PUNCH_ID = v4()\r\nexport const PUNCH = BASIC_ATTACK('Punch', PUNCH_ID)\r\nconst HOBO_STAB_ID = v4()\r\nexport const HOBO_STAB = BASIC_ATTACK('Stab', HOBO_STAB_ID)\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const SHOCKWAVE: tSkill = {\r\n  id: v4(),\r\n  name: 'Shockwave',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0.5,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 4,\r\n  offset: -10,\r\n  perfectSplash: true,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { tWeapon } from '../../type'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\nimport { SMASH } from '../../../Skill/objects/smash'\r\nimport { SHOCKWAVE } from '../../../Skill/objects/shockwave'\r\n\r\nexport const BLACKSMITHS_HAMMER = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Blacksmith's Hammer`,\r\n  itemType: 'weapon',\r\n  type: 'blunt',\r\n  rarity: 'common',\r\n  stat: 'strength',\r\n  twoHand: false,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'melee', value: 10 },\r\n  skills: [SMASH, SHOCKWAVE],\r\n  immunities: [],\r\n  stats: ZERO_STATS,\r\n})\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const SHOT: tSkill = {\r\n  id: v4(),\r\n  name: 'Shot',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const SNIPE_SHOT: tSkill = {\r\n  id: v4(),\r\n  name: 'Snipe Shot',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: -10,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const SURGE: tSkill = {\r\n  id: v4(),\r\n  name: 'Surge',\r\n  damageModifier: 0.8,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const AREA_BLAST: tSkill = {\r\n  id: v4(),\r\n  name: 'Area Blast',\r\n  damageModifier: 0.5,\r\n  splashDamageModifier: 0,\r\n  targetType: 'group',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: -5,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const ALTO: tSkill = {\r\n  id: v4(),\r\n  name: 'Alto',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { tSkill } from '../type'\r\n\r\nexport const DAZZLE: tSkill = {\r\n  id: v4(),\r\n  name: 'Dazzle',\r\n  damageModifier: 0.5,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: -5,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['stunned'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const STUN_ATTACK: tSkill = {\r\n  id: v4(),\r\n  name: 'Stun Attack',\r\n  damageModifier: 0.5,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: -10,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['stunned'],\r\n}\r\n\r\nexport const DAZE = {\r\n  ...STUN_ATTACK,\r\n  name: 'Daze',\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const PIERCING_BLOW: tSkill = {\r\n  id: v4(),\r\n  name: 'Piercing Blow',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const SPREAD_SHOT: tSkill = {\r\n  id: v4(),\r\n  name: 'Spread Shot',\r\n  damageModifier: 0.5,\r\n  splashDamageModifier: 0,\r\n  targetType: 'group',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: -5,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const PIN_DOWN: tSkill = {\r\n  id: v4(),\r\n  name: 'Pin Down',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: -10,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['speed-down'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const RITARDANDO: tSkill = {\r\n  id: v4(),\r\n  name: 'Ritardando',\r\n  damageModifier: 0.5,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 4,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['speed-down'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const SYMPHONY: tSkill = {\r\n  id: v4(),\r\n  name: 'Symphony',\r\n  damageModifier: 0.5,\r\n  splashDamageModifier: 0,\r\n  targetType: 'group',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 4,\r\n  offset: -5,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const RUBATO: tSkill = {\r\n  id: v4(),\r\n  name: 'Rubato',\r\n  damageModifier: 0.5,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: false,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: -10,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['reset'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const PRESTO: tSkill = {\r\n  id: v4(),\r\n  name: 'Presto',\r\n  damageModifier: 0,\r\n  splashDamageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['rushed'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const PROTECT: tSkill = {\r\n  id: v4(),\r\n  name: 'Protect',\r\n  damageModifier: 0,\r\n  splashDamageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['protected'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const TIME_JUMP: tSkill = {\r\n  id: v4(),\r\n  name: 'Time Jump',\r\n  damageModifier: 0,\r\n  splashDamageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: -5,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['rushed'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const CUTTING_SWING: tSkill = {\r\n  id: v4(),\r\n  name: 'Cutting Swing',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0.5,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 4,\r\n  offset: -10,\r\n  perfectSplash: true,\r\n  perfectPierce: false,\r\n  perfectStatus: ['bleeding'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const RESTORE: tSkill = {\r\n  id: v4(),\r\n  name: 'Restore',\r\n  damageModifier: 0,\r\n  splashDamageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['cure'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const POWER_STRIKE: tSkill = {\r\n  id: v4(),\r\n  name: 'Power Strike',\r\n  damageModifier: 1.6,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: -15,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { tCharacterClass } from '../Character/type'\r\nimport { tWeapon } from './type'\r\nimport { BLACKSMITHS_HAMMER } from './objects/blunt/blacksmiths_hammer'\r\nimport { HUNTING_BOW } from './objects/bow/hunting_bow'\r\nimport { SCHOLARS_BOOK } from './objects/tome/scholars_book'\r\nimport { SIMPLE_LUTE } from './objects/lute/simple_lute'\r\nimport { ALL_BLUNT } from './objects/blunt'\r\nimport { ALL_BOWS } from './objects/bow'\r\nimport { ALL_LUTES } from './objects/lute'\r\nimport { ALL_TOMES } from './objects/tome'\r\nimport { BANDIT_GLAIVE } from './objects/spear/bandit_glaive'\r\nimport { BOKKEN } from './objects/sword/bokken'\r\nimport { WOODCUTTERS_AXE } from './objects/axe/woodcutters_axe'\r\nimport { HOBO_DAGGER } from './objects/dagger/hobo_dagger'\r\n\r\nexport const CLASS_WEAPONS: Record<tCharacterClass, tWeapon> = {\r\n  blacksmith: BLACKSMITHS_HAMMER(),\r\n  hunter: HUNTING_BOW(),\r\n  scholar: SCHOLARS_BOOK(),\r\n  bard: SIMPLE_LUTE(),\r\n  hobo: HOBO_DAGGER(),\r\n  enemy: BLACKSMITHS_HAMMER(),\r\n}\r\nexport const ALL_WEAPONS = () => [\r\n  ...ALL_BLUNT(),\r\n  ...ALL_BOWS(),\r\n  ...ALL_LUTES(),\r\n  ...ALL_TOMES(),\r\n\r\n  BANDIT_GLAIVE(),\r\n  BOKKEN(),\r\n  WOODCUTTERS_AXE(),\r\n]\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { SHOT } from '../../../Skill/objects/shot'\r\nimport { SNIPE_SHOT } from '../../../Skill/objects/snipe_shot'\r\n\r\nexport const HUNTING_BOW = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Hunting Bow`,\r\n  itemType: 'weapon',\r\n  type: 'bow',\r\n  rarity: 'common',\r\n  stat: 'dexterity',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'ranged', value: 6 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    evasion: 3,\r\n    damageModifiers: {\r\n      ...ZERO_STATS.damageModifiers,\r\n      flying: 0.15,\r\n    },\r\n  },\r\n  skills: [SHOT, SNIPE_SHOT],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { SURGE } from '../../../Skill/objects/surge'\r\nimport { AREA_BLAST } from '../../../Skill/objects/area_blast'\r\n\r\nexport const SCHOLARS_BOOK = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Scholar's Book`,\r\n  itemType: 'weapon',\r\n  type: 'tome',\r\n  rarity: 'common',\r\n  stat: 'intelligence',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'magic', range: 'ranged', value: 6 },\r\n  stats: { ...ZERO_STATS },\r\n  skills: [SURGE, AREA_BLAST],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { ALTO } from '../../../Skill/objects/alto'\r\nimport { DAZZLE } from '../../../Skill/objects/dazzle'\r\n\r\nexport const SIMPLE_LUTE = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Simple Lute`,\r\n  itemType: 'weapon',\r\n  type: 'lute',\r\n  rarity: 'common',\r\n  stat: 'charisma',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'magic', range: 'ranged', value: 6 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    goldModifier: 12,\r\n  },\r\n  skills: [ALTO, DAZZLE],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { HOBO_STAB } from '../../../Skill/objects/smash'\r\n\r\nexport const HOBO_DAGGER = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Hobo Dagger`,\r\n  itemType: 'weapon',\r\n  type: 'dagger',\r\n  rarity: 'common',\r\n  stat: 'dexterity',\r\n  twoHand: false,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'melee', value: 6 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n  },\r\n  skills: [HOBO_STAB],\r\n  immunities: ['poisoned'],\r\n})\r\n","import { MACE } from './mace'\r\nimport { WAR_PICK } from './war_pick'\r\nimport { CRUDE_CLUB } from './crude_club'\r\nimport { tWeapon } from '../../type'\r\n\r\nexport const ALL_BLUNT = (): tWeapon[] => [MACE(), WAR_PICK(), CRUDE_CLUB()]\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { SMASH } from '../../../Skill/objects/smash'\r\nimport { STUN_ATTACK } from '../../../Skill/objects/stun_attack'\r\n\r\nexport const MACE = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Mace`,\r\n  itemType: 'weapon',\r\n  type: 'blunt',\r\n  rarity: 'common',\r\n  stat: 'strength',\r\n  twoHand: false,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'melee', value: 21 },\r\n  stats: ZERO_STATS,\r\n  skills: [SMASH, STUN_ATTACK],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { PIERCING_BLOW } from '../../../Skill/objects/piercing_blow'\r\n\r\nexport const WAR_PICK = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `War Pick`,\r\n  itemType: 'weapon',\r\n  type: 'blunt',\r\n  rarity: 'common',\r\n  stat: 'strength',\r\n  twoHand: false,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'melee', value: 14 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    agility: 5,\r\n    criticalChance: 5,\r\n  },\r\n  skills: [PIERCING_BLOW],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\nimport { SMASH } from '../../../Skill/objects/smash'\r\nimport { DAZE } from '../../../Skill/objects/stun_attack'\r\n\r\nexport const CRUDE_CLUB = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Crude Club`,\r\n  itemType: 'weapon',\r\n  type: 'blunt',\r\n  rarity: 'common',\r\n  stat: 'strength',\r\n  twoHand: false,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'melee', value: 12 },\r\n  skills: [SMASH, DAZE],\r\n  immunities: [],\r\n  stats: ZERO_STATS,\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { COMPOSITE_BOW } from './composite_bow'\r\nimport { CURVED_BOW } from './curved_bow'\r\n\r\nexport const ALL_BOWS = (): tWeapon[] => [COMPOSITE_BOW(), CURVED_BOW()]\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { SHOT } from '../../../Skill/objects/shot'\r\nimport { SPREAD_SHOT } from '../../../Skill/objects/spread_shot'\r\nimport { PIN_DOWN } from '../../../Skill/objects/pin_down'\r\n\r\nexport const COMPOSITE_BOW = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Composite Bow`,\r\n  itemType: 'weapon',\r\n  type: 'bow',\r\n  rarity: 'common',\r\n  stat: 'dexterity',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'ranged', value: 11 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    evasion: 4,\r\n    damageModifiers: {\r\n      ...ZERO_STATS.damageModifiers,\r\n      flying: 0.15,\r\n    },\r\n  },\r\n  skills: [SHOT, SPREAD_SHOT, PIN_DOWN],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { SPREAD_SHOT } from '../../../Skill/objects/spread_shot'\r\nimport { SNIPE_SHOT } from '../../../Skill/objects/snipe_shot'\r\n\r\nexport const CURVED_BOW = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Curved Bow`,\r\n  itemType: 'weapon',\r\n  type: 'bow',\r\n  rarity: 'common',\r\n  stat: 'dexterity',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'ranged', value: 11 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    evasion: 4,\r\n    damageModifiers: {\r\n      ...ZERO_STATS.damageModifiers,\r\n      flying: 0.15,\r\n    },\r\n  },\r\n  skills: [SPREAD_SHOT, SNIPE_SHOT],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { ARCHLUTE } from './archlute'\r\nimport { BARBAT } from './barbat'\r\nimport { DECENT_LUTE } from './decent_lute'\r\nimport { FANCY_LUTE } from './fancy_lute'\r\n\r\nexport const ALL_LUTES = (): tWeapon[] => [\r\n  ARCHLUTE(),\r\n  BARBAT(),\r\n  DECENT_LUTE(),\r\n  FANCY_LUTE(),\r\n]\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { RITARDANDO } from '../../../Skill/objects/ritardando'\r\nimport { SYMPHONY } from '../../../Skill/objects/symphony'\r\nimport { RUBATO } from '../../../Skill/objects/rubato'\r\n\r\nexport const ARCHLUTE = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Archlute`,\r\n  itemType: 'weapon',\r\n  type: 'lute',\r\n  rarity: 'common',\r\n  stat: 'charisma',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'magic', range: 'ranged', value: 13 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    goldModifier: 10,\r\n  },\r\n  skills: [RITARDANDO, SYMPHONY, RUBATO],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { RITARDANDO } from '../../../Skill/objects/ritardando'\r\nimport { SYMPHONY } from '../../../Skill/objects/symphony'\r\nimport { DAZZLE } from '../../../Skill/objects/dazzle'\r\n\r\nexport const BARBAT = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Barbat`,\r\n  itemType: 'weapon',\r\n  type: 'lute',\r\n  rarity: 'common',\r\n  stat: 'charisma',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'magic', range: 'ranged', value: 9 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    goldModifier: 10,\r\n  },\r\n  skills: [RITARDANDO, SYMPHONY, DAZZLE],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { ALTO } from '../../../Skill/objects/alto'\r\nimport { DAZZLE } from '../../../Skill/objects/dazzle'\r\n\r\nexport const DECENT_LUTE = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Decent Lute`,\r\n  itemType: 'weapon',\r\n  type: 'lute',\r\n  rarity: 'common',\r\n  stat: 'charisma',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'magic', range: 'ranged', value: 8 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    goldModifier: 10,\r\n  },\r\n  skills: [ALTO, DAZZLE],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { ALTO } from '../../../Skill/objects/alto'\r\nimport { DAZZLE } from '../../../Skill/objects/dazzle'\r\nimport { PRESTO } from '../../../Skill/objects/presto'\r\n\r\nexport const FANCY_LUTE = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Fancy Lute`,\r\n  itemType: 'weapon',\r\n  type: 'lute',\r\n  rarity: 'common',\r\n  stat: 'charisma',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'magic', range: 'ranged', value: 12 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    goldModifier: 15,\r\n  },\r\n  skills: [ALTO, PRESTO, DAZZLE],\r\n  immunities: [],\r\n})\r\n","import { APPRENTICES_TOME } from './apprentices_tome'\r\nimport { DUSTY_BOOK } from './dusty_book'\r\nimport { MAGES_TOME } from './mages_tome'\r\nimport { tWeapon } from '../../type'\r\n\r\nexport const ALL_TOMES = (): tWeapon[] => [\r\n  MAGES_TOME(),\r\n  APPRENTICES_TOME(),\r\n  DUSTY_BOOK(),\r\n]\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { SURGE } from '../../../Skill/objects/surge'\r\nimport { AREA_BLAST } from '../../../Skill/objects/area_blast'\r\nimport { PROTECT } from '../../../Skill/objects/protect'\r\nimport { TIME_JUMP } from '../../../Skill/objects/time_jump'\r\n\r\nexport const MAGES_TOME = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Mage's Tome`,\r\n  itemType: 'weapon',\r\n  type: 'tome',\r\n  rarity: 'common',\r\n  stat: 'intelligence',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'magic', range: 'ranged', value: 18 },\r\n  stats: { ...ZERO_STATS },\r\n  skills: [SURGE, AREA_BLAST, PROTECT, TIME_JUMP],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { SURGE } from '../../../Skill/objects/surge'\r\nimport { AREA_BLAST } from '../../../Skill/objects/area_blast'\r\nimport { PROTECT } from '../../../Skill/objects/protect'\r\nimport { TIME_JUMP } from '../../../Skill/objects/time_jump'\r\n\r\nexport const APPRENTICES_TOME = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Apprentice's Tome`,\r\n  itemType: 'weapon',\r\n  type: 'tome',\r\n  rarity: 'common',\r\n  stat: 'intelligence',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'magic', range: 'ranged', value: 13 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n  },\r\n  skills: [SURGE, AREA_BLAST, PROTECT, TIME_JUMP],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { SURGE } from '../../../Skill/objects/surge'\r\nimport { AREA_BLAST } from '../../../Skill/objects/area_blast'\r\nimport { PROTECT } from '../../../Skill/objects/protect'\r\n\r\nexport const DUSTY_BOOK = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Dusty Book`,\r\n  itemType: 'weapon',\r\n  type: 'tome',\r\n  rarity: 'common',\r\n  stat: 'intelligence',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'magic', range: 'ranged', value: 9 },\r\n  stats: { ...ZERO_STATS },\r\n  skills: [SURGE, AREA_BLAST, PROTECT],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\nimport { CUTTING_SWING } from '../../../Skill/objects/cutting_swing'\r\n\r\nexport const BANDIT_GLAIVE = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Bandit Glaive`,\r\n  itemType: 'weapon',\r\n  type: 'spear',\r\n  rarity: 'common',\r\n  stat: 'dexterity',\r\n  twoHand: true,\r\n  breakable: true,\r\n  damage: { type: 'physical', range: 'melee', value: 16 },\r\n  skills: [CUTTING_SWING],\r\n  immunities: [],\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 1,\r\n  },\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { STRIKE } from '../../../Skill/objects/smash'\r\nimport { RESTORE } from '../../../Skill/objects/restore'\r\n\r\nexport const BOKKEN = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Bokken`,\r\n  itemType: 'weapon',\r\n  type: 'sword',\r\n  rarity: 'common',\r\n  stat: 'strength',\r\n  twoHand: false,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'melee', value: 8 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n  },\r\n  skills: [STRIKE, RESTORE],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\nimport { CHOP } from '../../../Skill/objects/smash'\r\nimport { POWER_STRIKE } from '../../../Skill/objects/power_strike'\r\n\r\nexport const WOODCUTTERS_AXE = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Woodcutter's Axe`,\r\n  itemType: 'weapon',\r\n  type: 'axe',\r\n  rarity: 'common',\r\n  stat: 'strength',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'melee', value: 12 },\r\n  skills: [CHOP, POWER_STRIKE],\r\n  immunities: [],\r\n  stats: ZERO_STATS,\r\n})\r\n","import { tProcessedCharacter } from '../Character/type'\r\nimport { tBaseStats } from '../Stats/type'\r\nimport { getBaseStatValue } from '../Character/util'\r\nimport { DiceRoll } from 'rpg-dice-roller'\r\n\r\nexport const resolveCheck = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n  offset: number = 0,\r\n): boolean => {\r\n  const statValue = getBaseStatValue(character, key, offset)\r\n  const roll = new DiceRoll('1d100')\r\n  return roll.total <= statValue\r\n}\r\n\r\nexport const getChecksProbability = (\r\n  character: tProcessedCharacter,\r\n  checks: { key: keyof tBaseStats; offset: number }[],\r\n): number => {\r\n  const statValues = checks.map(({ key, offset }) =>\r\n    getBaseStatValue(character, key, offset),\r\n  )\r\n  const result = statValues.reduce((p, c) => {\r\n    return p * (c / 100)\r\n  }, 1)\r\n  return result\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const TAUNT: tSkill = {\r\n  id: v4(),\r\n  name: 'Taunt',\r\n  weaponStatOverride: 'vigor',\r\n  damageModifier: 0,\r\n  splashDamageModifier: 0,\r\n  targetType: 'self',\r\n  damage: false,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['targeted'],\r\n}\r\n","import { tCharacterClass } from '../Character/type'\r\nimport { tArmor } from './type'\r\nimport { SIMPLE_IRON_SHIELD } from './objects/simple_iron_shield'\r\n\r\nexport const CLASS_ARMOR: Record<tCharacterClass, tArmor[]> = {\r\n  blacksmith: [SIMPLE_IRON_SHIELD()],\r\n  hunter: [],\r\n  scholar: [],\r\n  bard: [],\r\n  hobo: [],\r\n  enemy: [],\r\n}\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { TAUNT } from '../../Skill/objects/taunt'\r\n\r\nexport const SIMPLE_IRON_SHIELD = (): tArmor => ({\r\n  id: v4(),\r\n  name: 'Simple Iron Shield',\r\n  itemType: 'armor',\r\n  resource: 'offhand',\r\n  rarity: 'common',\r\n  type: 'shield',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 1,\r\n  },\r\n  skills: [TAUNT],\r\n  immunities: [],\r\n})\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nconst id = v4()\r\nexport const HEAL = (consumableId: string): tSkill => ({\r\n  id,\r\n  name: 'Heal',\r\n  damageModifier: 0,\r\n  splashDamageModifier: 0,\r\n  targetType: 'self',\r\n  rolls: 0,\r\n  offset: 0,\r\n  damage: false,\r\n  healing: true,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n  consumableId,\r\n})\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { HEAL } from '../../Skill/objects/heal'\r\n\r\nconst cid = v4()\r\nconst healingId = v4()\r\nexport const GODSBEARD = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Godsbeard',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: HEAL(id),\r\n  }\r\n}\r\n","import { GODSBEARD } from './objects/godsbeard'\r\nimport { tCharacterClass } from '../Character/type'\r\nimport { tConsumable } from './type'\r\n\r\nexport const CLASS_CONSUMABLES: Record<tCharacterClass, tConsumable[]> = {\r\n  blacksmith: [GODSBEARD()],\r\n  hunter: [GODSBEARD()],\r\n  scholar: [GODSBEARD()],\r\n  bard: [GODSBEARD()],\r\n  hobo: [],\r\n  enemy: [],\r\n}\r\n","import { tConsumable, tConsumableStack } from './type'\r\n\r\nexport const considateConsumableListToStack = (\r\n  consumables: tConsumable[],\r\n): tConsumableStack[] => {\r\n  let stack: tConsumableStack[] = []\r\n  const updateStackItem = (cid: string) =>\r\n    stack.map((s) =>\r\n      s.consumable.cid === cid ? { ...s, count: s.count + 1 } : s,\r\n    )\r\n  const containsId = (cid: string) =>\r\n    stack.map((s) => s.consumable.cid).includes(cid)\r\n  consumables.forEach((c) => {\r\n    if (containsId(c.cid)) {\r\n      stack = updateStackItem(c.cid)\r\n    } else {\r\n      stack = [...stack, { consumable: c, count: 1 }]\r\n    }\r\n  })\r\n  return stack\r\n}\r\n","export const Theme = {\r\n  darkBgColor: 'rgba(0,5,10,0.9)',\r\n  mediumBgColor: 'rgb(34,34,39)',\r\n  otherGrey: 'rgb(51,51,58)',\r\n  lightBgColor: '#4b5157',\r\n  textColor: 'rgba(255,255,255,0.8)',\r\n  physicalColor: 'lightblue',\r\n  magicColor: 'plum',\r\n  evasionColor: 'lightgreen',\r\n  playerPartyColor: 'lightblue',\r\n  enemyPartyColor: 'lightsalmon',\r\n  meleeRangeColor: 'rgba(255,255,255,0.8)',\r\n  rangedRangeColor: 'rgba(255,255,255,0.8)',\r\n\r\n  paddingS: '4px',\r\n  padding: '8px',\r\n  paddingL: '16px',\r\n  paddingXL: '24px',\r\n}\r\n","import { noneg } from '../../util'\r\nimport { tCharacterClass } from './type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport const CHARACTER_XP_MAX: Record<number, number> = {\r\n  [-1]: 0,\r\n  0: 25,\r\n  1: 45,\r\n  2: 85,\r\n  3: 135,\r\n  4: 215,\r\n  5: 295,\r\n  6: 425,\r\n  7: 675,\r\n  8: 925,\r\n  9: 1257,\r\n  10: 1925,\r\n  11: 1400,\r\n  12: 2200,\r\n}\r\n\r\nexport const CHARACTER_CLASS_COLORS: Record<tCharacterClass, string> = {\r\n  enemy: Theme.enemyPartyColor,\r\n  blacksmith: '#3c4d52',\r\n  bard: '#472321',\r\n  scholar: '#665166',\r\n  hunter: '#334233',\r\n  hobo: '#111',\r\n}\r\n","import { tWeapon } from '../type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\nimport { PUNCH } from '../../Skill/objects/smash'\r\n\r\nexport const FISTS = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Fists`,\r\n  itemType: 'weapon',\r\n  type: 'blunt',\r\n  rarity: 'common',\r\n  stat: 'vigor',\r\n  twoHand: false,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'melee', value: 4 },\r\n  skills: [PUNCH],\r\n  immunities: [],\r\n  stats: ZERO_STATS,\r\n})\r\n","import { tCharacter, tProcessedCharacter, tCharacterClass } from './type'\r\nimport { tStats, tBaseStats } from '../Stats/type'\r\nimport { combineStats } from '../Stats/util'\r\nimport { tSkill } from '../Skill/type'\r\nimport { CLASS_STATS } from '../Stats/constants'\r\nimport { tStatusType, tStatus } from '../Status/type'\r\nimport { STATUS_CONFIG } from '../Status/constants'\r\nimport { v4 } from 'uuid'\r\nimport { tDamage } from '../Damage/type'\r\nimport { noneg } from '../../util/noneg'\r\nimport { CLASS_WEAPONS } from '../Weapon/constants'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { tArmorResourceType, tArmor } from '../Armor/type'\r\nimport { resolveCheck } from '../Roll/util'\r\nimport { CLASS_ARMOR } from '../Armor/constants'\r\nimport { CLASS_CONSUMABLES } from '../Consumable/constants'\r\nimport { considateConsumableListToStack } from '../Consumable/util'\r\nimport { CHARACTER_XP_MAX } from './constants'\r\nimport { tEncounterReward } from '../Encounter/type'\r\nimport { FISTS } from '../Weapon/objects/fists'\r\n\r\nexport const isCharacter = (obj: any): boolean =>\r\n  obj !== undefined && obj.isCharacter !== undefined\r\n\r\nexport const checkForProcessedCharacter = (character: tCharacter) => {\r\n  if ((character as tProcessedCharacter).processed) {\r\n    throw new Error('No Processed Characters Allowed')\r\n  }\r\n}\r\n\r\nexport const makeCharacter = (characterClass: tCharacterClass): tCharacter => {\r\n  return {\r\n    isCharacter: true,\r\n    id: v4(),\r\n    name: '',\r\n    partyId: '',\r\n    level: 0,\r\n    experience: 0,\r\n    class: characterClass,\r\n\r\n    stats: CLASS_STATS[characterClass],\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n\r\n    tags: [],\r\n\r\n    weapon: CLASS_WEAPONS[characterClass],\r\n    armor: CLASS_ARMOR[characterClass],\r\n    consumables: CLASS_CONSUMABLES[characterClass],\r\n\r\n    status: [],\r\n    immunities: [],\r\n    possibleRewards: [],\r\n  }\r\n}\r\n\r\nexport const getSkills = (character: tCharacter): tSkill[] => {\r\n  return [\r\n    ...(character.weapon || FISTS()).skills,\r\n    ...character.armor.reduce((r, a) => [...r, ...a.skills], [] as tSkill[]),\r\n    ...considateConsumableListToStack(character.consumables).reduce(\r\n      (r, s) => [...r, s.consumable.skill],\r\n      [] as tSkill[],\r\n    ),\r\n  ]\r\n}\r\n\r\nexport const processCharacter = (\r\n  character: tCharacter,\r\n): tProcessedCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const stats: tStats = combineStats(\r\n    character.stats,\r\n    (character.weapon || FISTS()).stats,\r\n    ...character.armor.map((a) => a.stats),\r\n    ...character.status.map((s) => s.stats),\r\n  )\r\n  const skills = getSkills(character)\r\n  const statusImmunities = character.status.reduce(\r\n    (r, s) => [...r, ...s.immunities],\r\n    [] as tStatusType[],\r\n  )\r\n  const immunities = [\r\n    ...character.immunities,\r\n    ...(character?.weapon?.immunities || []),\r\n    ...character.armor.reduce(\r\n      (r, a) => [...r, ...a.immunities],\r\n      [] as tStatusType[],\r\n    ),\r\n    ...statusImmunities,\r\n  ]\r\n  const baseVigor = CLASS_STATS[character.class].vigor || character.stats.vigor\r\n  const startingHealth = 25 + Math.floor(0.1 * baseVigor)\r\n  const maxHealth =\r\n    Math.floor(\r\n      startingHealth + character.level + 0.1 * character.level * stats.vigor,\r\n    ) + stats.maxHealthOffset\r\n  const health = maxHealth - character.healthOffset\r\n  const maxInspiration = 3 + stats.maxInspirationOffset\r\n  const inspiration = maxInspiration + character.inspirationOffset\r\n\r\n  return {\r\n    processed: true,\r\n    ...character,\r\n\r\n    health,\r\n    maxHealth,\r\n    inspiration,\r\n    maxInspiration,\r\n\r\n    weapon: character.weapon || FISTS(),\r\n    stats,\r\n    immunities,\r\n    rawStats: character.stats,\r\n    skills,\r\n  }\r\n}\r\n\r\nexport const getBaseStatValue = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n  offset: number = 0,\r\n) => {\r\n  return character.stats[key] + offset\r\n}\r\n\r\nexport const getDamageResistance = (\r\n  character: tProcessedCharacter,\r\n  damage: tDamage,\r\n) => {\r\n  if (damage.type === 'physical') return character.stats.armor\r\n  if (damage.type === 'magic') return character.stats.resistance\r\n  return 0\r\n}\r\nexport const hasStatus = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.status.map((s) => s.type).includes(statusType)\r\n}\r\nexport const findStatus = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.status.find((s) => s.type === statusType)\r\n}\r\nexport const hasImmunity = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.immunities.includes(statusType)\r\n}\r\nexport const getReflectedDamage = (target: tCharacter, rawDamage: tDamage) => {\r\n  return {\r\n    ...rawDamage,\r\n    value: target.stats.damageReflection[rawDamage.range],\r\n  }\r\n}\r\nexport const getRawDamage = (\r\n  source: tProcessedCharacter,\r\n  target: tProcessedCharacter,\r\n  rawDamage: tDamage,\r\n): tDamage => {\r\n  let damageModifier = 1\r\n  target.tags.forEach((tag) => {\r\n    if (source.stats.damageModifiers[tag]) {\r\n      damageModifier += source.stats.damageModifiers[tag]\r\n    }\r\n  })\r\n  console.log(source.name, damageModifier)\r\n  console.log(source)\r\n  return {\r\n    ...rawDamage,\r\n    value: rawDamage.value * damageModifier,\r\n  }\r\n}\r\n\r\nexport const commitDamage = (\r\n  character: tCharacter,\r\n  damage: tDamage,\r\n  ignoreResistance: boolean,\r\n): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const pc = processCharacter(character)\r\n  const resistance = ignoreResistance ? 0 : getDamageResistance(pc, damage)\r\n  const damageTakenModifier = pc.stats.damageTakenModifier\r\n  const rawDamageValue = damage.value * damageTakenModifier\r\n  if (hasStatus(character, 'protected')) {\r\n    return {\r\n      ...character,\r\n      status: character.status.filter((s) => s.type !== 'protected'),\r\n    }\r\n  }\r\n  return {\r\n    ...character,\r\n    healthOffset: Math.ceil(\r\n      character.healthOffset + noneg(rawDamageValue - resistance),\r\n    ),\r\n  }\r\n}\r\n\r\nexport const decrementStatusDurations = (character: tCharacter): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    status: character.status\r\n      .map((status) => ({ ...status, duration: status.duration - 1 }))\r\n      .filter((status) => status.duration !== 0),\r\n  }\r\n}\r\nexport const addStatus = (\r\n  character: tCharacter,\r\n  type: tStatusType,\r\n  durationOverride?: number,\r\n): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const statusConfig = STATUS_CONFIG[type]\r\n  const existingStatus = findStatus(character, type)\r\n  if (hasImmunity(character, type)) {\r\n    return character\r\n  }\r\n  if (existingStatus && !statusConfig.canStack) {\r\n    return character\r\n  }\r\n  if (existingStatus && statusConfig.canStack) {\r\n    return {\r\n      ...character,\r\n      status: [\r\n        ...character.status.filter((s) => s.type !== type),\r\n        { ...existingStatus, stack: existingStatus.stack + 1 },\r\n      ],\r\n    }\r\n  }\r\n  return {\r\n    ...character,\r\n    status: [\r\n      ...character.status,\r\n      {\r\n        type,\r\n        stats: statusConfig.stats,\r\n        immunities: statusConfig.immunities,\r\n        duration: durationOverride || statusConfig.duration,\r\n        stack: 1,\r\n      },\r\n    ],\r\n  }\r\n}\r\n\r\nexport const addMultipleStatus = (\r\n  character: tCharacter,\r\n  types: tStatusType[],\r\n): tCharacter => {\r\n  return types.reduce((result, type) => {\r\n    return addStatus(result, type)\r\n  }, character)\r\n}\r\n\r\nexport const checkStatus = (character: tCharacter) => {\r\n  checkForProcessedCharacter(character)\r\n  let c = { ...character }\r\n  character.status.forEach((status) => {\r\n    if (hasImmunity(character, status.type)) {\r\n      c = {\r\n        ...c,\r\n        status: c.status.filter((c) => c.type !== status.type),\r\n      }\r\n    }\r\n  })\r\n  return c\r\n}\r\n\r\nexport const removeTemporaryStatus = (character: tCharacter): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    status: character.status.filter((s) => {\r\n      const config = STATUS_CONFIG[s.type]\r\n      return !config.isTemporary\r\n    }),\r\n  }\r\n}\r\n\r\nexport const equipArmor = (\r\n  character: tCharacter,\r\n  armor: tArmor,\r\n): { character: tCharacter; armor: tArmor | undefined } => {\r\n  checkForProcessedCharacter(character)\r\n  const existingArmor = character.armor.find(\r\n    (a) => a.resource === armor.resource,\r\n  )\r\n  return {\r\n    character: {\r\n      ...character,\r\n      armor: existingArmor\r\n        ? [...character.armor.filter((a) => a.id !== existingArmor.id), armor]\r\n        : [...character.armor, armor],\r\n    },\r\n    armor: existingArmor,\r\n  }\r\n}\r\n\r\nexport const unequipArmor = (\r\n  character: tCharacter,\r\n  resource: tArmorResourceType,\r\n): { character: tCharacter; armor: tArmor | undefined } => {\r\n  checkForProcessedCharacter(character)\r\n  const armor = character.armor.find((a) => a.resource === resource)\r\n  return {\r\n    character: {\r\n      ...character,\r\n      armor: character.armor.filter((a) => a.resource !== resource),\r\n    },\r\n    armor,\r\n  }\r\n}\r\n\r\nexport const equipWeapon = (\r\n  character: tCharacter,\r\n  weapon: tWeapon,\r\n): { character: tCharacter; weapon: tWeapon | undefined } => {\r\n  const existingWeapon = character.weapon\r\n  return {\r\n    character: {\r\n      ...character,\r\n      weapon,\r\n    },\r\n    weapon: existingWeapon,\r\n  }\r\n}\r\n\r\n// DO NOT USE\r\nexport const unequipWeapon = (\r\n  character: tCharacter,\r\n): { character: tCharacter; weapon: tWeapon | undefined } => {\r\n  const existingWeapon = character.weapon\r\n  return {\r\n    character: {\r\n      ...character,\r\n      // weapon: undefined\r\n    },\r\n    weapon: existingWeapon,\r\n  }\r\n}\r\n\r\nexport const getRewardsFromCharacter = (\r\n  character: tProcessedCharacter,\r\n  checkedCharacter: tProcessedCharacter,\r\n): tEncounterReward[] => {\r\n  let index: number | undefined = undefined\r\n  character.possibleRewards.forEach((rewards, i) => {\r\n    const luckReslt = resolveCheck(checkedCharacter, 'luck')\r\n    if (luckReslt) {\r\n      index = i\r\n    }\r\n  })\r\n  if (index !== undefined) {\r\n    return character.possibleRewards[index]\r\n      ? [character.possibleRewards[index]]\r\n      : []\r\n  }\r\n  return []\r\n}\r\n\r\nexport const addExperience = (\r\n  character: tCharacter,\r\n  xp: number,\r\n): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const xpToNextLevel = CHARACTER_XP_MAX[character.level]\r\n  const experience = character.experience + xp\r\n  if (experience > xpToNextLevel) {\r\n    return addExperience(\r\n      levelUp({\r\n        ...character,\r\n        experience,\r\n      }),\r\n      0,\r\n    )\r\n  }\r\n  return {\r\n    ...character,\r\n    experience,\r\n  }\r\n}\r\n\r\nexport const levelUp = (character: tCharacter): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const experience = character.experience - CHARACTER_XP_MAX[character.level]\r\n  return {\r\n    ...character,\r\n    level: character.level + 1,\r\n    healthOffset: Math.floor(character.healthOffset / 2),\r\n    experience,\r\n    status: character.status.filter((s) => s.type !== 'poisoned'),\r\n  }\r\n}\r\n","export const getRandom = <T>(items: T[]) =>\r\n  items[Math.floor(Math.random() * items.length)]\r\n","import { tSkill } from '../../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const BITE: tSkill = {\r\n  id: v4(),\r\n  name: 'Bite',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { ADVENTURE_BOOTS } from './adventure_boots'\r\nimport { ADVENTURE_CLOAK } from './adventure_cloak'\r\nimport { EXPLORERS_BOOTS } from './explorers_boots'\r\nimport { EXPLORERS_CLOAK } from './explorers_cloak'\r\nimport { EXPLORERS_HAT } from './explorers_hat'\r\nimport { FUR_ARMOR } from './fur_armor'\r\nimport { FUR_BOOTS } from './fur_boots'\r\nimport { PERFORMERS_BOOTS } from './performers_boots'\r\nimport { PERFORMERS_VEST } from './performers_vest'\r\nimport { tArmor } from '../type'\r\nimport { WOODEN_HEATER } from './wooden_heater'\r\nimport { WARD_SHIELD } from './ward_shield'\r\nimport { TOWN_GUARD_HELM } from './town_guard_helm'\r\nimport { TOWN_GUARD_ARMOR } from './town_guard_armor'\r\nimport { TOWN_GUARD_BOOTS } from './town_guard_boots'\r\nimport { BONE_BUCKLER } from './bone_buckler'\r\nimport { APPRENTICE_CAP } from './apprentice_cap'\r\nimport { APRRENTICE_ROBE } from './apprentice_robe'\r\nimport { APPRENTICE_SHOES } from './apprentice_shoes'\r\nimport { CLOTH_SHOES } from './cloth_shoes'\r\nimport { FANCY_HAT } from './fancy_hat'\r\nimport { FANCY_SHOES } from './fancy_shoes'\r\nimport { FANCY_VEST } from './fancy_vest'\r\nimport { LEATHER_GREAVES } from './leather_greaves'\r\nimport { LEATHER_ARMOR } from './leather_armor'\r\nimport { CHAIN_MAIL_VEST } from './chain_mail_vest'\r\nimport { LEATHER_VEST } from './leather_vest'\r\nimport { IRON_ROUND_SHIELD } from './iron_round_shield'\r\nimport { GOBLIN_HELM } from './goblin_helm'\r\nimport { GOBLIN_VEST } from './goblin_vest'\r\nimport { TRAVELLERS_BOOTS } from './travellers_boots'\r\nimport { TRAVELLERS_HAT } from './travellers_hat'\r\nimport { TRAVELLERS_TUNIC } from './travellers_tunic'\r\n\r\nexport const ALL_ARMOR = (): tArmor[] => [\r\n  ADVENTURE_BOOTS(),\r\n  ADVENTURE_CLOAK(),\r\n\r\n  EXPLORERS_BOOTS(),\r\n  EXPLORERS_CLOAK(),\r\n  EXPLORERS_HAT(),\r\n\r\n  FUR_ARMOR(),\r\n  FUR_BOOTS(),\r\n\r\n  PERFORMERS_BOOTS(),\r\n  PERFORMERS_VEST(),\r\n\r\n  TOWN_GUARD_HELM(),\r\n  TOWN_GUARD_ARMOR(),\r\n  TOWN_GUARD_BOOTS(),\r\n\r\n  APPRENTICE_CAP(),\r\n  APRRENTICE_ROBE(),\r\n  APPRENTICE_SHOES(),\r\n\r\n  FANCY_HAT(),\r\n  FANCY_SHOES(),\r\n  FANCY_VEST(),\r\n\r\n  CLOTH_SHOES(),\r\n  CHAIN_MAIL_VEST(),\r\n\r\n  LEATHER_GREAVES(),\r\n  LEATHER_ARMOR(),\r\n  LEATHER_VEST(),\r\n\r\n  TRAVELLERS_BOOTS(),\r\n  TRAVELLERS_HAT(),\r\n  TRAVELLERS_TUNIC(),\r\n\r\n  GOBLIN_HELM(),\r\n  GOBLIN_VEST(),\r\n\r\n  BONE_BUCKLER(),\r\n  WARD_SHIELD(),\r\n  WOODEN_HEATER(),\r\n  IRON_ROUND_SHIELD(),\r\n]\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const ADVENTURE_BOOTS = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Adventure Boots`,\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 3,\r\n    evasion: 4,\r\n    agility: 3,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const ADVENTURE_CLOAK = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Adventure Cloak`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'magic-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 5,\r\n    resistance: 5,\r\n    dexterity: 4,\r\n    charisma: -3,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const EXPLORERS_BOOTS = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Explorer's Boots`,\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  stat: 'vigor',\r\n\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 2,\r\n    evasion: 3,\r\n    agility: 2,\r\n  },\r\n\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const EXPLORERS_CLOAK = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Explorer's Cloak`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'magic-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 3,\r\n    resistance: 6,\r\n    evasion: 6,\r\n    dexterity: 3,\r\n    charisma: -3,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const EXPLORERS_HAT = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Explorer's Hat`,\r\n  itemType: 'armor',\r\n  resource: 'head',\r\n  rarity: 'common',\r\n  type: 'hat',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    resistance: 3,\r\n    evasion: 3,\r\n    dexterity: 2,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const FUR_ARMOR = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Fur Armor`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'cloth-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 5,\r\n    resistance: 5,\r\n    maxHealthOffset: 5,\r\n    healthRegeneration: 2,\r\n    vigor: 4,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const FUR_BOOTS = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Fur Boots`,\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 2,\r\n    resistance: 2,\r\n    healthRegeneration: 1,\r\n    vigor: 4,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const PERFORMERS_BOOTS = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Performer's Boots`,\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 2,\r\n    resistance: 3,\r\n    dexterity: -3,\r\n    charisma: 3,\r\n    luck: 3,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const PERFORMERS_VEST = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Performer's Vest`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'cloth-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 6,\r\n    resistance: 6,\r\n    dexterity: -4,\r\n    charisma: 4,\r\n    luck: 4,\r\n  },\r\n\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const TOWN_GUARD_HELM = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Town Guard Helm`,\r\n  itemType: 'armor',\r\n  resource: 'head',\r\n  rarity: 'common',\r\n  type: 'hat',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 3,\r\n    resistance: 3,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const TOWN_GUARD_ARMOR = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Town Guard Armor`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'common',\r\n  type: 'cloth-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 7,\r\n    resistance: 5,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const TOWN_GUARD_BOOTS = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Town Guard Boots`,\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 3,\r\n    resistance: 2,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const APPRENTICE_CAP = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Apprentice Cap`,\r\n  itemType: 'armor',\r\n  resource: 'head',\r\n  rarity: 'common',\r\n  type: 'magic-hat',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    resistance: 4,\r\n    maxInspirationOffset: 1,\r\n    intelligence: 2,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const APRRENTICE_ROBE = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Apprentice Robe`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'magic-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 2,\r\n    resistance: 6,\r\n    maxInspirationOffset: 1,\r\n    strength: -3,\r\n    intelligence: 3,\r\n  },\r\n  skills: [],\r\n  immunities: ['cursed'],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const APPRENTICE_SHOES = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Apprentice Shoes`,\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 1,\r\n    resistance: 3,\r\n    strength: -2,\r\n    intelligence: 2,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const FANCY_HAT = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Fancy Hat`,\r\n  itemType: 'armor',\r\n  resource: 'head',\r\n  rarity: 'common',\r\n  type: 'hat',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 1,\r\n    resistance: 2,\r\n    maxInspirationOffset: 1,\r\n    charisma: 2,\r\n    luck: 2,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const FANCY_SHOES = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Fancy Shoes`,\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  stat: 'vigor',\r\n\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 1,\r\n    resistance: 2,\r\n    dexterity: -2,\r\n    charisma: 2,\r\n    luck: 2,\r\n  },\r\n\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const FANCY_VEST = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Fancy Vest`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'cloth-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 4,\r\n    resistance: 4,\r\n    charisma: 4,\r\n    luck: 4,\r\n  },\r\n\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const CLOTH_SHOES = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Cloth Shoes`,\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  stat: 'vigor',\r\n\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    resistance: 1,\r\n    charisma: 1,\r\n    luck: 1,\r\n  },\r\n\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const CHAIN_MAIL_VEST = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Chain Mail Vest`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 4,\r\n    strength: 2,\r\n    intelligence: -2,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const LEATHER_GREAVES = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Leather Greaves`,\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  stat: 'vigor',\r\n\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 2,\r\n    strength: 1,\r\n    agility: -1,\r\n  },\r\n\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const LEATHER_ARMOR = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Leather Armor`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'common',\r\n  type: 'cloth-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 5,\r\n    resistance: 3,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const LEATHER_VEST = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Leather Vest`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'common',\r\n  type: 'cloth-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 3,\r\n    resistance: 1,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const TRAVELLERS_BOOTS = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Traveller's Boots`,\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  stat: 'vigor',\r\n\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 1,\r\n    evasion: 2,\r\n    dexterity: 1,\r\n    agility: 1,\r\n  },\r\n\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const TRAVELLERS_HAT = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Traveller's Hat`,\r\n  itemType: 'armor',\r\n  resource: 'head',\r\n  rarity: 'common',\r\n  type: 'hat',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    resistance: 1,\r\n    evasion: 3,\r\n    dexterity: 1,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const TRAVELLERS_TUNIC = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Traveller's Tunic`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'common',\r\n  type: 'magic-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 1,\r\n    resistance: 1,\r\n    evasion: 5,\r\n    dexterity: 2,\r\n    charisma: -2,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const GOBLIN_HELM = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Goblin Helm`,\r\n  itemType: 'armor',\r\n  resource: 'head',\r\n  rarity: 'common',\r\n  type: 'helmet',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 2,\r\n    agility: 4,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const GOBLIN_VEST = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Goblin Vest`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'cloth-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 3,\r\n    evasion: 5,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { TAUNT } from '../../Skill/objects/taunt'\r\n\r\nexport const BONE_BUCKLER = (): tArmor => ({\r\n  id: v4(),\r\n  name: 'Bone Buckler',\r\n  itemType: 'armor',\r\n  resource: 'offhand',\r\n  rarity: 'uncommon',\r\n  type: 'shield',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 1,\r\n    evasion: 4,\r\n  },\r\n  skills: [TAUNT],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { TAUNT } from '../../Skill/objects/taunt'\r\n\r\nexport const WARD_SHIELD = (): tArmor => ({\r\n  id: v4(),\r\n  name: 'Ward Shield',\r\n  itemType: 'armor',\r\n  resource: 'offhand',\r\n  rarity: 'uncommon',\r\n  type: 'magic-shield',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    resistance: 2,\r\n  },\r\n  skills: [TAUNT],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { TAUNT } from '../../Skill/objects/taunt'\r\n\r\nexport const WOODEN_HEATER = (): tArmor => ({\r\n  id: v4(),\r\n  name: 'Wooden Heater',\r\n  itemType: 'armor',\r\n  resource: 'offhand',\r\n  rarity: 'common',\r\n  type: 'shield',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 2,\r\n    resistance: 2,\r\n  },\r\n  skills: [TAUNT],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { TAUNT } from '../../Skill/objects/taunt'\r\n\r\nexport const IRON_ROUND_SHIELD = (): tArmor => ({\r\n  id: v4(),\r\n  name: 'Iron Round Shield',\r\n  itemType: 'armor',\r\n  resource: 'offhand',\r\n  rarity: 'common',\r\n  type: 'shield',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 4,\r\n    resistance: 2,\r\n  },\r\n  skills: [TAUNT],\r\n  immunities: [],\r\n})\r\n","import { tEncounterReward, tEncounterChoice, tCombatEncounter } from './type'\r\nimport { getRandom } from '../../util'\r\nimport { ALL_WEAPONS } from '../Weapon/constants'\r\nimport { ALL_ARMOR } from '../Armor/objects'\r\nimport { stringArr } from '../../util/stringArr'\r\n\r\nexport const ZERO_REWARD: tEncounterReward = {\r\n  gold: 0,\r\n  xp: 0,\r\n  items: [],\r\n  status: [],\r\n  immunities: [],\r\n}\r\n\r\nconst poisoned: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['poisoned'],\r\n}\r\nconst burning: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['burning'],\r\n}\r\nconst bleeding: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['bleeding'],\r\n}\r\nconst armorDown: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['armor-down'],\r\n}\r\nconst resDown: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['resistance-down'],\r\n}\r\nconst attackDown: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['armor-down'],\r\n}\r\n\r\nconst armorUp: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['armor-up'],\r\n}\r\nconst attackUp: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['attack-up'],\r\n}\r\nconst resUp: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['resistance-up'],\r\n}\r\n\r\nconst justGold = (gold: number) => ({\r\n  ...ZERO_REWARD,\r\n  gold,\r\n})\r\nconst justXp = (xp: number) => ({\r\n  ...ZERO_REWARD,\r\n  xp,\r\n})\r\nconst justRandomItem = (): tEncounterReward => ({\r\n  ...ZERO_REWARD,\r\n  items: [getRandom([...ALL_WEAPONS(), ...ALL_ARMOR()])],\r\n})\r\n\r\nexport const POSSIBLE_SHINE_REWARDS = (): tEncounterReward[][] => [\r\n  [poisoned, ZERO_REWARD, armorUp],\r\n  [ZERO_REWARD, ZERO_REWARD, ZERO_REWARD, justGold(50)],\r\n  [burning, burning, ZERO_REWARD, justXp(25)],\r\n  [poisoned, burning, ZERO_REWARD, justRandomItem()],\r\n  [attackDown, ZERO_REWARD, ZERO_REWARD, justXp(25)],\r\n  [armorDown, resDown, ZERO_REWARD, justXp(10), justRandomItem()],\r\n  [attackDown, armorDown, resDown, justRandomItem()],\r\n  [poisoned, attackDown, ZERO_REWARD, justGold(100)],\r\n  [burning, burning, burning, justGold(10), justRandomItem()],\r\n  [poisoned, burning, bleeding, justRandomItem(), justRandomItem()],\r\n  [ZERO_REWARD, ZERO_REWARD, ZERO_REWARD, ZERO_REWARD, justRandomItem()],\r\n  [ZERO_REWARD, ZERO_REWARD, ZERO_REWARD, justXp(10), justGold(50)],\r\n  [resDown, armorDown, ZERO_REWARD, resUp, attackUp],\r\n  [ZERO_REWARD, ZERO_REWARD, attackUp],\r\n  [ZERO_REWARD, ZERO_REWARD, armorUp],\r\n  [ZERO_REWARD, ZERO_REWARD, resUp],\r\n  [armorDown, ZERO_REWARD, armorUp],\r\n  [resDown, ZERO_REWARD, resUp],\r\n  [attackDown, ZERO_REWARD, attackUp],\r\n  [poisoned, bleeding, resUp, attackUp],\r\n]\r\n\r\nexport const getChoiceText = (\r\n  currentChoice: tEncounterChoice | undefined,\r\n  previousChoice: tEncounterChoice | undefined,\r\n): string => {\r\n  let text = ''\r\n  console.log(previousChoice)\r\n  console.log('get choice text')\r\n  const previousEncounter = previousChoice\r\n    ? previousChoice[previousChoice.value || 'left']\r\n    : undefined\r\n  if (previousChoice === undefined) {\r\n    text =\r\n      'As your party begins their journy, you travel down an empty road. You arrive at a split path, you must make a choice on which way to proceed.'\r\n  }\r\n  if (previousEncounter?.type === 'combat') {\r\n    text = getRandom([\r\n      `After the fierce battle against the ${stringArr(\r\n        (previousEncounter as tCombatEncounter).party.characters.map(\r\n          (c) => c.name,\r\n        ),\r\n      )}, your party again arrives at a choice:`,\r\n    ])\r\n  } else if (previousChoice) {\r\n    text =\r\n      'After a brief rest, your party continues their journey to dispel the evil. You feel it around you as your travel deeper. However, there now seem to be two options before you:'\r\n  }\r\n  if (currentChoice?.depth === 11) {\r\n    text =\r\n      'Your party has traveled far, but it is now time for the final fight.'\r\n  }\r\n  return text\r\n}\r\n","import Wolf from '../../../icons/svg/lorc/wolf-head.svg'\r\nimport { tCharacter } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS, BASE_C_STATS } from '../../Stats/constants'\r\nimport { BITE } from '../../Skill/objects/enemy/bite'\r\nimport { getRandom } from '../../../util'\r\nimport { ALL_WEAPONS } from '../../Weapon/constants'\r\nimport { ALL_ARMOR } from '../../Armor/objects'\r\nimport { ZERO_REWARD } from '../../Encounter/constants'\r\n\r\nexport const TIMBERWOLF = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: 'Timberwolf',\r\n    isCharacter: true,\r\n    icon: Wolf,\r\n    partyId: '',\r\n    level: 1,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      vigor: -80,\r\n      strength: 52,\r\n      intelligence: 40,\r\n      dexterity: 52,\r\n      charisma: 30,\r\n      agility: getRandom([60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70]),\r\n      luck: 50,\r\n      armor: 0,\r\n      resistance: 0,\r\n      evasion: 10,\r\n      maxHealthOffset: -1,\r\n    },\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      id: v4(),\r\n      name: 'Wolf Fangs',\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'enemy',\r\n      stat: 'dexterity',\r\n      twoHand: true,\r\n      breakable: false,\r\n      damage: {\r\n        value: 7,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      stats: ZERO_STATS,\r\n      skills: [BITE],\r\n      immunities: [],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 4,\r\n        xp: 3,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 4,\r\n        xp: 3,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 4,\r\n        xp: 3,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 4,\r\n        xp: 3,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 4,\r\n        xp: 3,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 4,\r\n        xp: 3,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 19,\r\n        xp: 3,\r\n        items: [getRandom([...ALL_WEAPONS(), ...ALL_ARMOR()])],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { tSkill } from '../../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const IMPALE: tSkill = {\r\n  id: v4(),\r\n  name: 'Impale',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 5,\r\n  offset: -5,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: ['bleeding'],\r\n}\r\n","import BeastMan from '../../../icons/svg/delapouite/orc-head.svg'\r\nimport { tCharacter } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS, BASE_C_STATS } from '../../Stats/constants'\r\nimport { IMPALE } from '../../Skill/objects/enemy/impale'\r\nimport { getRandom } from '../../../util'\r\nimport { ALL_WEAPONS } from '../../Weapon/constants'\r\nimport { ALL_ARMOR } from '../../Armor/objects'\r\nimport { ZERO_REWARD } from '../../Encounter/constants'\r\n\r\nexport const BEASTMAN = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: 'Beastman',\r\n    isCharacter: true,\r\n    icon: BeastMan,\r\n    partyId: '',\r\n    level: 1,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      vigor: -80,\r\n      strength: 52,\r\n      intelligence: 40,\r\n      dexterity: 52,\r\n      charisma: 30,\r\n      agility: 60,\r\n      luck: 50,\r\n      armor: 2,\r\n      resistance: 0,\r\n      evasion: 10,\r\n    },\r\n    armor: [],\r\n    status: [],\r\n    consumables: [],\r\n    immunities: [],\r\n    weapon: {\r\n      id: v4(),\r\n      name: 'Beastman Spear',\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'spear',\r\n      stat: 'strength',\r\n      twoHand: true,\r\n      breakable: false,\r\n      damage: {\r\n        value: 8,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      stats: ZERO_STATS,\r\n      skills: [IMPALE],\r\n      immunities: [],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 6,\r\n        xp: 5,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 7,\r\n        xp: 7,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 7,\r\n        xp: 7,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 10,\r\n        xp: 8,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 10,\r\n        xp: 8,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 12,\r\n        xp: 10,\r\n        items: [getRandom([...ALL_WEAPONS(), ...ALL_ARMOR()])],\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 19,\r\n        xp: 10,\r\n        items: [getRandom([...ALL_WEAPONS(), ...ALL_ARMOR()])],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { tSkill } from '../../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const SLAP: tSkill = {\r\n  id: v4(),\r\n  name: 'Slap',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import Imp from '../../../icons/svg/lorc/imp-laugh.svg'\r\nimport { tCharacter } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS, BASE_C_STATS } from '../../Stats/constants'\r\nimport { SLAP } from '../../Skill/objects/enemy/slap'\r\nimport { getRandom } from '../../../util'\r\nimport { ALL_WEAPONS } from '../../Weapon/constants'\r\nimport { ALL_ARMOR } from '../../Armor/objects'\r\nimport { ZERO_REWARD } from '../../Encounter/constants'\r\n\r\nexport const VALE_IMP = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: 'Vale Imp',\r\n    isCharacter: true,\r\n    icon: Imp,\r\n    partyId: '',\r\n    level: 1,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      vigor: -80,\r\n      strength: 40,\r\n      intelligence: 40,\r\n      dexterity: 52,\r\n      charisma: 30,\r\n      agility: 76,\r\n      luck: 50,\r\n      armor: 0,\r\n      resistance: 0,\r\n      evasion: 10,\r\n    },\r\n    armor: [],\r\n    consumables: [],\r\n    status: [\r\n      {\r\n        duration: -1,\r\n        type: 'evasive',\r\n        stats: ZERO_STATS,\r\n        stack: 0,\r\n        immunities: [],\r\n      },\r\n    ],\r\n    immunities: [],\r\n    weapon: {\r\n      id: v4(),\r\n      name: 'Imp Fists',\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'enemy',\r\n      stat: 'dexterity',\r\n      twoHand: true,\r\n      breakable: false,\r\n      damage: {\r\n        value: 6,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      stats: ZERO_STATS,\r\n      skills: [SLAP],\r\n      immunities: [],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 0,\r\n        xp: 5,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 3,\r\n        xp: 7,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 3,\r\n        xp: 7,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 3,\r\n        xp: 7,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 0,\r\n        xp: 7,\r\n        items: [getRandom(ALL_ARMOR())],\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 0,\r\n        xp: 7,\r\n        items: [getRandom(ALL_WEAPONS())],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { tSkill } from '../../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const STING: tSkill = {\r\n  id: v4(),\r\n  name: 'Sting',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n\r\nexport const INFECTIOUS_STING: tSkill = {\r\n  id: v4(),\r\n  name: 'Infectious Sting',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: -10,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['poisoned'],\r\n}\r\n","import Bee from '../../../icons/svg/lorc/bee.svg'\r\nimport { v4 } from 'uuid'\r\nimport { tCharacter } from '../type'\r\nimport { ZERO_STATS, BASE_C_STATS } from '../../Stats/constants'\r\nimport { STING, INFECTIOUS_STING } from '../../Skill/objects/enemy/sting'\r\nimport { getRandom } from '../../../util'\r\nimport { ALL_ARMOR } from '../../Armor/objects'\r\nimport { GODSBEARD } from '../../Consumable/objects/godsbeard'\r\nimport { ZERO_REWARD } from '../../Encounter/constants'\r\n\r\nexport const BEE = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: 'Bee',\r\n    isCharacter: true,\r\n    icon: Bee,\r\n    partyId: '',\r\n    level: 1,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: ['flying'],\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      vigor: -80,\r\n      strength: 30,\r\n      intelligence: 30,\r\n      dexterity: 52,\r\n      charisma: 30,\r\n      agility: 80,\r\n      luck: 0,\r\n      armor: 0,\r\n      resistance: 0,\r\n      evasion: 17,\r\n      maxHealthOffset: -4,\r\n    },\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      id: v4(),\r\n      name: 'Bee Stinger',\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'enemy',\r\n      stat: 'dexterity',\r\n      twoHand: true,\r\n      breakable: false,\r\n      damage: {\r\n        value: 12,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      stats: ZERO_STATS,\r\n      skills: [STING, INFECTIOUS_STING],\r\n      immunities: [],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 1,\r\n        xp: 4,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 4,\r\n        xp: 6,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 4,\r\n        xp: 6,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 4,\r\n        xp: 6,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 8,\r\n        xp: 8,\r\n        items: [getRandom(ALL_ARMOR())],\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 0,\r\n        xp: 10,\r\n        items: [GODSBEARD()],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { tSkill } from '../../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const STAB: tSkill = {\r\n  id: v4(),\r\n  name: 'Stab',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: ['bleeding'],\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Bandit from '../../../icons/svg/delapouite/bandit.svg'\r\nimport { tCharacter } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS, BASE_C_STATS } from '../../Stats/constants'\r\nimport { EXPLORERS_BOOTS } from '../../Armor/objects/explorers_boots'\r\nimport { EXPLORERS_HAT } from '../../Armor/objects/explorers_hat'\r\nimport { ALL_ARMOR } from '../../Armor/objects'\r\nimport { ALL_WEAPONS } from '../../Weapon/constants'\r\nimport { STAB } from '../../Skill/objects/enemy/stab'\r\nimport { ZERO_REWARD } from '../../Encounter/constants'\r\n\r\nexport const BANDIT = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: 'Bandit',\r\n    isCharacter: true,\r\n    icon: Bandit,\r\n    partyId: '',\r\n    level: 2,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      strength: 76,\r\n      vigor: 50,\r\n      intelligence: 40,\r\n      dexterity: 52,\r\n      charisma: 72,\r\n      agility: 61,\r\n      luck: 50,\r\n      armor: 4,\r\n      resistance: 0,\r\n      evasion: 10,\r\n      maxHealthOffset: -20,\r\n    },\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      id: v4(),\r\n      name: 'Buccaneer Dagger',\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'dagger',\r\n      stat: 'strength',\r\n      twoHand: false,\r\n      breakable: false,\r\n      damage: {\r\n        value: 12,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      stats: ZERO_STATS,\r\n      skills: [STAB],\r\n      immunities: [],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 1,\r\n        xp: 10,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 1,\r\n        xp: 12,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 10,\r\n        xp: 15,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 20,\r\n        xp: 20,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 80,\r\n        xp: 20,\r\n        items: [getRandom(ALL_ARMOR())],\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 80,\r\n        xp: 20,\r\n        items: [getRandom(ALL_ARMOR()), getRandom(ALL_WEAPONS())],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import Icon from '../../../icons/svg/delapouite/pirate-captain.svg'\r\nimport { tCharacter } from '../type'\r\nimport { ZERO_STATS, BASE_C_STATS } from '../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\nimport { STAB } from '../../Skill/objects/enemy/stab'\r\nimport { ADVENTURE_BOOTS } from '../../Armor/objects/adventure_boots'\r\nimport { FUR_BOOTS } from '../../Armor/objects/fur_boots'\r\nimport { getRandom } from '../../../util'\r\nimport { ALL_ARMOR } from '../../Armor/objects'\r\nimport { ALL_WEAPONS } from '../../Weapon/constants'\r\nimport { ZERO_REWARD } from '../../Encounter/constants'\r\n\r\nexport const BUCCANEER = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: 'Buccaneer',\r\n    isCharacter: true,\r\n    icon: Icon,\r\n    partyId: '',\r\n    level: 4,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      strength: 52,\r\n      vigor: 66,\r\n      intelligence: 46,\r\n      dexterity: 78,\r\n      charisma: 64,\r\n      agility: 78,\r\n      luck: 50,\r\n      armor: 1,\r\n      resistance: 0,\r\n      evasion: 20,\r\n      maxHealthOffset: -31,\r\n    },\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      id: v4(),\r\n      name: 'Buccaneer Dagger',\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'dagger',\r\n      stat: 'strength',\r\n      twoHand: false,\r\n      breakable: false,\r\n      damage: {\r\n        value: 12,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      stats: ZERO_STATS,\r\n      skills: [STAB],\r\n      immunities: [],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 20,\r\n        xp: 15,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 20,\r\n        xp: 16,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 20,\r\n        xp: 16,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 20,\r\n        xp: 17,\r\n        items: [getRandom(ALL_ARMOR())],\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 20,\r\n        xp: 18,\r\n        items: [getRandom(ALL_ARMOR())],\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 80,\r\n        xp: 20,\r\n        items: [getRandom(ALL_ARMOR()), getRandom(ALL_WEAPONS())],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { tSkill } from '../../type'\r\n\r\nexport const TORCH: tSkill = {\r\n  id: v4(),\r\n  name: 'Torch',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 4,\r\n  offset: -10,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['burning'],\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Cultist from '../../../icons/svg/lorc/cultist.svg'\r\nimport { tCharacter } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS, BASE_C_STATS } from '../../Stats/constants'\r\nimport { ALL_ARMOR } from '../../Armor/objects'\r\nimport { ALL_WEAPONS } from '../../Weapon/constants'\r\nimport { TORCH } from '../../Skill/objects/enemy/torch'\r\nimport { IMPALE } from '../../Skill/objects/enemy/impale'\r\nimport { ZERO_REWARD } from '../../Encounter/constants'\r\n\r\nexport const CULTIST = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: 'Cultist',\r\n    isCharacter: true,\r\n    icon: Cultist,\r\n    partyId: '',\r\n    level: 1,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      strength: 50,\r\n      vigor: 50,\r\n      intelligence: 75,\r\n      dexterity: 52,\r\n      charisma: 72,\r\n      agility: 70,\r\n      luck: 50,\r\n      armor: 1,\r\n      resistance: 4,\r\n      evasion: 15,\r\n      maxHealthOffset: -19,\r\n    },\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      id: v4(),\r\n      name: 'Cultist Torch',\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'magic-staff',\r\n      stat: 'intelligence',\r\n      twoHand: true,\r\n      breakable: false,\r\n      damage: {\r\n        value: 14,\r\n        range: 'melee',\r\n        type: 'magic',\r\n      },\r\n      stats: ZERO_STATS,\r\n      skills: [TORCH, IMPALE],\r\n      immunities: [],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 10,\r\n        xp: 12,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 15,\r\n        xp: 13,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 15,\r\n        xp: 13,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 15,\r\n        xp: 13,\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [getRandom(ALL_ARMOR())],\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [getRandom(ALL_ARMOR())],\r\n      },\r\n      {\r\n        ...ZERO_REWARD,\r\n        gold: 80,\r\n        xp: 20,\r\n        items: [getRandom(ALL_ARMOR()), getRandom(ALL_WEAPONS())],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { tCharacter } from '../Character/type'\r\nimport { TIMBERWOLF } from '../Character/enemies/timberwolf'\r\nimport { BEASTMAN } from '../Character/enemies/beastman'\r\nimport { VALE_IMP } from '../Character/enemies/vale_imp'\r\nimport { BEE } from '../Character/enemies/bee'\r\nimport { BANDIT } from '../Character/enemies/bandit'\r\nimport { BUCCANEER } from '../Character/enemies/buccaneer'\r\nimport { CULTIST } from '../Character/enemies/cultist'\r\n\r\nexport const PLAYER_PARTY_ID = v4()\r\n\r\nexport const ENEMY_COMBOS_BY_LEVEL: Record<number, tCharacter[][]> = {\r\n  0: [\r\n    [TIMBERWOLF(), TIMBERWOLF(), TIMBERWOLF()],\r\n    [TIMBERWOLF(), BEASTMAN()],\r\n    [BEASTMAN(), BEASTMAN()],\r\n    [VALE_IMP(), TIMBERWOLF()],\r\n    [VALE_IMP()],\r\n    [BEE()],\r\n    [BEE(), BEASTMAN()],\r\n    [BEE(), TIMBERWOLF()],\r\n    [CULTIST()],\r\n  ],\r\n  1: [\r\n    [VALE_IMP(), TIMBERWOLF(), BEASTMAN()],\r\n    [BEASTMAN(), BEASTMAN(), BEASTMAN()],\r\n    [BEE(), BEE(), BEE()],\r\n    [VALE_IMP(), BEE(), BEASTMAN()],\r\n    [CULTIST()],\r\n  ],\r\n  2: [\r\n    [BEE(), BEE(), BEE()],\r\n    [VALE_IMP(), BEE(), BEE()],\r\n    [VALE_IMP(), VALE_IMP(), VALE_IMP()],\r\n    [BANDIT(), TIMBERWOLF()],\r\n    [BANDIT(), TIMBERWOLF(), TIMBERWOLF()],\r\n    [CULTIST()],\r\n  ],\r\n  3: [\r\n    [CULTIST(), CULTIST()],\r\n    [CULTIST(), BANDIT()],\r\n    [BANDIT(), BANDIT()],\r\n    [BUCCANEER()],\r\n    [BANDIT(), BEE(), BEE()],\r\n    [CULTIST(), BEE(), BEE()],\r\n    [CULTIST(), BANDIT(), BEE()],\r\n    [BANDIT(), VALE_IMP(), VALE_IMP()],\r\n    [CULTIST(), CULTIST(), VALE_IMP()],\r\n    [VALE_IMP(), CULTIST(), VALE_IMP()],\r\n    [BANDIT(), VALE_IMP(), BEE()],\r\n    [BUCCANEER(), VALE_IMP()],\r\n  ],\r\n  4: [\r\n    [CULTIST(), BANDIT(), VALE_IMP()],\r\n    [CULTIST(), CULTIST(), BEE()],\r\n    [CULTIST(), VALE_IMP(), CULTIST()],\r\n    [CULTIST(), CULTIST(), CULTIST()],\r\n    [BANDIT(), BANDIT(), VALE_IMP()],\r\n    [BANDIT(), BANDIT(), BEE()],\r\n    [BANDIT(), BANDIT(), BANDIT()],\r\n    [BUCCANEER(), BUCCANEER()],\r\n    [BUCCANEER(), VALE_IMP(), VALE_IMP()],\r\n  ],\r\n  5: [\r\n    [BANDIT(), BANDIT(), BANDIT()],\r\n    [BANDIT(), VALE_IMP(), BUCCANEER()],\r\n    [BUCCANEER(), VALE_IMP(), VALE_IMP()],\r\n    [BUCCANEER(), BUCCANEER(), BANDIT()],\r\n    [CULTIST(), CULTIST(), CULTIST()],\r\n    [BUCCANEER(), BUCCANEER(), BUCCANEER()],\r\n  ],\r\n}\r\n","import { tSkill } from '../../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const LICH_DRAIN: tSkill = {\r\n  id: v4(),\r\n  name: 'Drain',\r\n  damageModifier: 0.5,\r\n  splashDamageModifier: 0,\r\n  weaponStatOverride: 'intelligence',\r\n  targetType: 'group',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 4,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['speed-down'],\r\n}\r\n","import { tSkill } from '../../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const LICH_SCREECH: tSkill = {\r\n  id: v4(),\r\n  name: 'Screech',\r\n  damageModifier: 0,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: false,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  statusDurationOverride: 3,\r\n  perfectStatus: ['stunned'],\r\n}\r\n","import { tSkill } from '../../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const LICH_MASS_SCREECH: tSkill = {\r\n  id: v4(),\r\n  name: 'Mass Screech',\r\n  damageModifier: 0,\r\n  splashDamageModifier: 0,\r\n  targetType: 'group',\r\n  damage: false,\r\n  healing: false,\r\n  rolls: 4,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  statusDurationOverride: 3,\r\n  perfectStatus: ['stunned'],\r\n}\r\n","import { tSkill } from '../../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const LICH_SMITE: tSkill = {\r\n  id: v4(),\r\n  name: 'Smite',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 4,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['armor-down'],\r\n}\r\n","import { tParty, tProcessedParty } from './type'\r\nimport {\r\n  checkForProcessedCharacter,\r\n  processCharacter,\r\n  getRewardsFromCharacter,\r\n  addExperience,\r\n  addMultipleStatus,\r\n} from '../Character/util'\r\nimport { tCharacter, tProcessedCharacter } from '../Character/type'\r\nimport { v4 } from 'uuid'\r\nimport { getRandom } from '../../util'\r\nimport { ENEMY_COMBOS_BY_LEVEL } from './constants'\r\nimport { tEncounterReward } from '../Encounter/type'\r\nimport { tArmor } from '../Armor/type'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { tConsumable } from '../Consumable/type'\r\nimport { ALL_BOSSES } from '../Character/bosses'\r\n\r\nexport const isParty = (obj: any): boolean =>\r\n  obj !== undefined && obj.isParty !== undefined\r\n\r\nexport const checkForProcessedParty = (party: tParty) => {\r\n  if ((party as tProcessedParty).processed) {\r\n    throw new Error('No Processed Parties Allowed')\r\n  }\r\n  party.characters.forEach((character) => {\r\n    checkForProcessedCharacter(character)\r\n  })\r\n}\r\n\r\nexport const findCharacterInParty = <\r\n  T extends tParty = tParty,\r\n  R extends tCharacter = tCharacter\r\n>(\r\n  party: T,\r\n  id: string,\r\n): R | undefined => {\r\n  return (party.characters as R[]).find((c) => c.id === id)\r\n}\r\n\r\nexport const getOtherCharacters = (\r\n  party: tParty,\r\n  characterId: string,\r\n): tCharacter[] => party.characters.filter((c) => c.id !== characterId)\r\n\r\nexport const processParty = (party: tParty): tProcessedParty => {\r\n  checkForProcessedParty(party)\r\n  return {\r\n    ...party,\r\n    processed: true,\r\n    characters: party.characters.map((c) => ({\r\n      ...processCharacter(c),\r\n      partyId: party.id,\r\n    })),\r\n  }\r\n}\r\n\r\nexport const updateCharacter = (\r\n  party: tParty,\r\n  characterId: string,\r\n  updater: (character: tCharacter) => tCharacter,\r\n): tParty => {\r\n  checkForProcessedParty(party)\r\n  return {\r\n    ...party,\r\n    characters: party.characters.map((c) =>\r\n      c.id === characterId ? updater(c) : c,\r\n    ),\r\n  }\r\n}\r\n\r\nexport const makeParty = (level: number = 0): tParty => {\r\n  level = level > 4 ? 4 : level\r\n  return {\r\n    isParty: true,\r\n    id: v4(),\r\n    gold: 0,\r\n    items: [],\r\n    characters: getRandom(ENEMY_COMBOS_BY_LEVEL[level]),\r\n  }\r\n}\r\n\r\nexport const makeBossParty = (): tParty => {\r\n  return {\r\n    isParty: true,\r\n    id: v4(),\r\n    gold: 0,\r\n    items: [],\r\n    characters: [getRandom(ALL_BOSSES())],\r\n  }\r\n}\r\n\r\nexport const getRolledRewards = (\r\n  party: tProcessedParty,\r\n  checkedCharacter: tProcessedCharacter,\r\n): tEncounterReward[] => {\r\n  return party.characters.reduce((r, character) => {\r\n    return [...r, ...getRewardsFromCharacter(character, checkedCharacter)]\r\n  }, [] as tEncounterReward[])\r\n}\r\n\r\nexport const commitRewards = (\r\n  party: tParty,\r\n  rewards: tEncounterReward,\r\n): tParty => {\r\n  checkForProcessedParty(party)\r\n  const goldMultiplier =\r\n    1 +\r\n    processParty(party).characters.reduce(\r\n      (r, c) => (r > c.stats.goldModifier ? r : c.stats.goldModifier),\r\n      0,\r\n    ) /\r\n      100\r\n  return {\r\n    ...party,\r\n    gold: party.gold + Math.floor(rewards.gold * goldMultiplier),\r\n    items: [\r\n      ...party.items,\r\n      ...(rewards.items.filter((i) => i.itemType !== 'consumable') as (\r\n        | tArmor\r\n        | tWeapon\r\n      )[]),\r\n    ],\r\n    characters: party.characters.map((c) =>\r\n      addMultipleStatus(\r\n        addExperience(\r\n          {\r\n            ...c,\r\n            consumables: [\r\n              ...c.consumables,\r\n              ...(rewards.items.filter(\r\n                (i) => i.itemType === 'consumable',\r\n              ) as tConsumable[]),\r\n            ],\r\n          },\r\n          rewards.xp,\r\n        ),\r\n        rewards.status,\r\n      ),\r\n    ),\r\n  }\r\n}\r\n","import { useSelector } from 'react-redux'\r\nimport { StateCoreT, StateActionT, StateT } from '../types'\r\nimport { Dispatch } from 'redux'\r\nimport { makeReducer } from '../util'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { checkForProcessedParty, updateCharacter } from '../../game/Party/util'\r\nimport { tCharacter } from '../../game/Character/type'\r\nimport { makeCharacter } from '../../game/Character/util'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\n\r\nexport const UPDATE_PARTY = '@actions/parties/set-party'\r\nexport const UPSERT_CHARACTER = '@actions/parties/upsert-character'\r\nexport const DELETE_CHARACTER = '@actions/parties/delete-character'\r\nexport const UPSERT_ITEM = '@actions/parties/upsert-item'\r\nexport const SET_GOLD = '@actions/parties/set-gold'\r\n\r\nexport const actionCreators = {\r\n  updateParty: (party: tParty): StateActionT => {\r\n    return {\r\n      type: UPDATE_PARTY,\r\n      payload: {\r\n        party,\r\n      },\r\n    }\r\n  },\r\n  upsertCharacter: (character: tCharacter): StateActionT => {\r\n    return {\r\n      type: UPSERT_CHARACTER,\r\n      payload: {\r\n        character,\r\n      },\r\n    }\r\n  },\r\n  deleteCharacter: (characterId: string): StateActionT => {\r\n    return {\r\n      type: DELETE_CHARACTER,\r\n      payload: {\r\n        characterId,\r\n      },\r\n    }\r\n  },\r\n  upsertItem: (item: tArmor | tWeapon): StateActionT => {\r\n    return {\r\n      type: UPSERT_ITEM,\r\n      payload: {\r\n        item,\r\n      },\r\n    }\r\n  },\r\n  setGold: (gold: number): StateActionT => {\r\n    return {\r\n      type: SET_GOLD,\r\n      payload: {\r\n        gold,\r\n      },\r\n    }\r\n  },\r\n}\r\n\r\nexport const actions = {\r\n  updateParty: (party: tParty) => (dispatch: Dispatch) => {\r\n    checkForProcessedParty(party)\r\n    dispatch(actionCreators.updateParty(party))\r\n  },\r\n  upsertCharacter: (character: tCharacter) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.upsertCharacter(character))\r\n  },\r\n  deleteCharacter: (characterId: string) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.deleteCharacter(characterId))\r\n  },\r\n  upsertItem: (item: tArmor | tWeapon) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.upsertItem(item))\r\n  },\r\n  setGold: (gold: number) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.setGold(gold))\r\n  },\r\n}\r\n\r\nexport const core: StateCoreT<tParty> = {\r\n  [UPDATE_PARTY]: (state, action) => {\r\n    return {\r\n      ...action.payload.party,\r\n    }\r\n  },\r\n  [UPSERT_CHARACTER]: (state, action) => {\r\n    return updateCharacter(\r\n      state,\r\n      action.payload.character.id,\r\n      (c) => action.payload.character,\r\n    )\r\n  },\r\n  [DELETE_CHARACTER]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      characters: state.characters.filter(\r\n        (c) => c.id !== action.payload.characterId,\r\n      ),\r\n    }\r\n  },\r\n  [UPSERT_ITEM]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      items: [\r\n        ...state.items.filter((item) => item.id !== action.payload.item.id),\r\n        action.payload.item,\r\n      ],\r\n    }\r\n  },\r\n  [SET_GOLD]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      gold: action.payload.gold,\r\n    }\r\n  },\r\n}\r\nconst jack = { ...makeCharacter('blacksmith'), name: 'Jack' }\r\nconst jim = { ...makeCharacter('bard'), name: 'Jim' }\r\nconst john = { ...makeCharacter('scholar'), name: 'Johnny' }\r\nexport const INITIAL_STATE: tParty = {\r\n  isParty: true,\r\n  id: PLAYER_PARTY_ID,\r\n  items: [],\r\n  gold: 0,\r\n  characters: [\r\n    {\r\n      ...jack,\r\n      // healthOffset: 30,\r\n    },\r\n    {\r\n      ...jim,\r\n      //healthOffset: 30\r\n    },\r\n    {\r\n      ...john,\r\n      //healthOffset: 30\r\n    },\r\n  ],\r\n}\r\nexport default makeReducer(core, INITIAL_STATE)\r\nexport const useParty = () => useSelector((state: StateT) => state.party)\r\nexport const usePartyActions = () =>\r\n  useActions(actions) as {\r\n    updateParty: (party: tParty) => void\r\n    upsertCharacter: (character: tCharacter) => void\r\n    deleteCharacter: (characterId: string) => void\r\n    upsertItem: (item: tArmor | tWeapon) => void\r\n    setGold: (gold: number) => void\r\n  }\r\n","import { v4 } from 'uuid'\r\nimport {\r\n  tEncounter,\r\n  tEncounterType,\r\n  tCombatEncounter,\r\n  tEncounterChoice,\r\n  tShopEncounter,\r\n  tShrineEncounter,\r\n  tBossEncounter,\r\n} from './type'\r\nimport { getRandom, noneg } from '../../util'\r\nimport { makeParty, makeBossParty } from '../Party/util'\r\nimport { ALL_WEAPONS } from '../Weapon/constants'\r\nimport { ALL_ARMOR } from '../Armor/objects'\r\nimport { tArmor } from '../Armor/type'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { GODSBEARD } from '../Consumable/objects/godsbeard'\r\nimport { tConsumable } from '../Consumable/type'\r\nimport { tBaseStats } from '../Stats/type'\r\nimport { POSSIBLE_SHINE_REWARDS, ZERO_REWARD } from './constants'\r\n\r\nexport const makeRandomEncounter = (depth: number) => {\r\n  const MAX_DEPTH = 10\r\n  let encounterType: tEncounterType =\r\n    depth === 0\r\n      ? 'combat'\r\n      : depth === 10\r\n      ? 'boss'\r\n      : getRandom([\r\n          'combat',\r\n          'combat',\r\n          'combat',\r\n          'combat',\r\n          'combat',\r\n          'combat',\r\n          'combat',\r\n          'combat',\r\n          'combat',\r\n          'shop',\r\n          'shrine',\r\n        ])\r\n  //encounterType = 'boss'\r\n  let encounter: tEncounter = {\r\n    id: v4(),\r\n    choiceId: '',\r\n    name: `Encounter ${depth}`,\r\n    type: encounterType,\r\n    reward: ZERO_REWARD,\r\n  }\r\n\r\n  if (encounter.type === 'combat') {\r\n    encounter = {\r\n      ...encounter,\r\n      party: makeParty(noneg(depth - 1)),\r\n    } as tCombatEncounter\r\n  }\r\n  if (encounter.type === 'boss') {\r\n    encounter = {\r\n      ...encounter,\r\n      boss: true,\r\n      party: makeBossParty(),\r\n    } as tBossEncounter\r\n  }\r\n  if (encounter.type === 'shop') {\r\n    const items = [GODSBEARD(), ...ALL_WEAPONS(), ...ALL_ARMOR()]\r\n    encounter = {\r\n      ...encounter,\r\n      items,\r\n      consumables: [],\r\n      costs: items.reduce((r, i) => {\r\n        return {\r\n          ...r,\r\n          [i.id]: getItemCost(i),\r\n        }\r\n      }, {}),\r\n    } as tShopEncounter\r\n  }\r\n  if (encounter.type === 'shrine') {\r\n    const stat: keyof tBaseStats = getRandom<keyof tBaseStats>([\r\n      'vigor',\r\n      'strength',\r\n      'dexterity',\r\n      'intelligence',\r\n      'charisma',\r\n      'luck',\r\n    ])\r\n    const rewards = getRandom(POSSIBLE_SHINE_REWARDS())\r\n    encounter = {\r\n      ...encounter,\r\n      stat,\r\n      offset: 0,\r\n      rolls: rewards.length,\r\n      results: rewards,\r\n    } as tShrineEncounter\r\n  }\r\n\r\n  return encounter\r\n}\r\n\r\nexport const makeEncounterList = (depth: number): tEncounterChoice[] => {\r\n  return Array(depth)\r\n    .fill(undefined)\r\n    .map((_, index) => {\r\n      const id = v4()\r\n      return {\r\n        id,\r\n        depth: index,\r\n        value: undefined,\r\n        left: {\r\n          ...makeRandomEncounter(index),\r\n          choiceId: id,\r\n        },\r\n        right: {\r\n          ...makeRandomEncounter(index),\r\n          choiceId: id,\r\n        },\r\n      }\r\n    })\r\n}\r\n\r\nexport const getItemCost = (item: tArmor | tWeapon | tConsumable): number => {\r\n  let cost = 0\r\n  if (item.itemType === 'armor') cost += 40\r\n  if (item.itemType === 'weapon') cost += 80\r\n  if (item.itemType === 'consumable') cost += 110\r\n  switch (item.rarity) {\r\n    case 'common':\r\n      cost += 10\r\n      break\r\n    case 'uncommon':\r\n      cost += 30\r\n      break\r\n    case 'rare':\r\n      cost += 50\r\n      break\r\n    case 'mythic':\r\n      cost += 70\r\n      break\r\n    default: {\r\n      cost += 0\r\n      break\r\n    }\r\n  }\r\n  return cost\r\n}\r\n","import { tCharacter } from '../type'\r\nimport { LICH } from './lich'\r\n\r\nexport * from './lich'\r\n\r\nexport const ALL_BOSSES = (): tCharacter[] => [LICH()]\r\n","import { getRandom } from '../../../util'\r\nimport Lich from '../../../icons/svg/delapouite/overlord-helm.svg'\r\nimport { tCharacter } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS, BASE_C_STATS } from '../../Stats/constants'\r\nimport { ALL_ARMOR } from '../../Armor/objects'\r\nimport { ALL_WEAPONS } from '../../Weapon/constants'\r\nimport { LICH_DRAIN } from '../../Skill/objects/enemy/lich_drain'\r\nimport { LICH_SCREECH } from '../../Skill/objects/enemy/lich_screech'\r\nimport { LICH_MASS_SCREECH } from '../../Skill/objects/enemy/lich_mass_screech'\r\nimport { LICH_SMITE } from '../../Skill/objects/enemy/lich_smite'\r\n\r\nexport const LICH = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: 'Lich',\r\n    isCharacter: true,\r\n    icon: Lich,\r\n    partyId: '',\r\n    level: 5,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: ['undead'],\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      strength: 82,\r\n      vigor: 64,\r\n      intelligence: 70,\r\n      dexterity: 48,\r\n      charisma: 60,\r\n      agility: 80,\r\n      luck: 50,\r\n      armor: 6,\r\n      resistance: 8,\r\n      evasion: 16,\r\n    },\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: ['bleeding', 'stunned'],\r\n    weapon: {\r\n      id: v4(),\r\n      name: 'Lich Sword',\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'sword',\r\n      stat: 'strength',\r\n      twoHand: false,\r\n      breakable: false,\r\n      damage: {\r\n        value: 28,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      stats: ZERO_STATS,\r\n      skills: [LICH_DRAIN, LICH_SCREECH, LICH_MASS_SCREECH, LICH_SMITE],\r\n      immunities: [],\r\n    },\r\n    possibleRewards: [],\r\n  }\r\n}\r\n","import { StateCoreT, StateT, StateActionT } from '../types'\r\nimport { makeReducer } from '../util'\r\nimport { useSelector } from 'react-redux'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport { Dispatch } from 'redux'\r\nimport { tEncounterChoice, tShopEncounter } from '../../game/Encounter/type'\r\nimport { makeEncounterList } from '../../game/Encounter/util'\r\n\r\nexport interface GameStateT {\r\n  encounters: tEncounterChoice[]\r\n  level: number\r\n}\r\n\r\nexport const RESET = '@action/game/reset'\r\nexport const CHOOSE_CURRENT = '@action/game/choose-current'\r\nexport const NEXT_LEVEL = '@action/game/next-level'\r\nexport const REMOVE_ITEM = '@action/game/remove-item'\r\n\r\nexport const actionCreators = {\r\n  reset: (): StateActionT => ({\r\n    type: RESET,\r\n    payload: {},\r\n  }),\r\n  chooseCurrent: (value: 'left' | 'right'): StateActionT => ({\r\n    type: CHOOSE_CURRENT,\r\n    payload: {\r\n      value,\r\n    },\r\n  }),\r\n  nextLevel: (): StateActionT => ({\r\n    type: NEXT_LEVEL,\r\n    payload: {},\r\n  }),\r\n  removeItem: (\r\n    choiceId: string,\r\n    encounterId: string,\r\n    itemId: string,\r\n  ): StateActionT => ({\r\n    type: REMOVE_ITEM,\r\n    payload: {\r\n      choiceId,\r\n      encounterId,\r\n      itemId,\r\n    },\r\n  }),\r\n}\r\n\r\nexport const actions = {\r\n  reset: () => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.reset())\r\n  },\r\n  chooseCurrent: (value: 'left' | 'right') => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.chooseCurrent(value))\r\n  },\r\n  nextLevel: () => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.nextLevel())\r\n  },\r\n  removeItem: (choiceId: string, encounterId: string, itemId: string) => (\r\n    dispatch: Dispatch,\r\n  ) => {\r\n    dispatch(actionCreators.removeItem(choiceId, encounterId, itemId))\r\n  },\r\n}\r\n\r\nexport const core: StateCoreT<GameStateT> = {\r\n  [RESET]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      level: 0,\r\n      encounters: makeEncounterList(11),\r\n    }\r\n  },\r\n  [CHOOSE_CURRENT]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      encounters: state.encounters.map((e, i) => {\r\n        if (i === state.level) {\r\n          return {\r\n            ...e,\r\n            value: action.payload.value,\r\n          }\r\n        }\r\n        return e\r\n      }),\r\n    }\r\n  },\r\n  [NEXT_LEVEL]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      level: state.level + 1,\r\n    }\r\n  },\r\n  [REMOVE_ITEM]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      encounters: state.encounters.map((choice) => {\r\n        if (choice.id === action.payload.choiceId) {\r\n          if (\r\n            choice.left.id === action.payload.encounterId &&\r\n            choice.left.type === 'shop'\r\n          ) {\r\n            return {\r\n              ...choice,\r\n              left: {\r\n                ...choice.left,\r\n                items: (choice.left as tShopEncounter).items.filter(\r\n                  (i) => i.id !== action.payload.itemId,\r\n                ),\r\n              } as tShopEncounter,\r\n            }\r\n          }\r\n          if (\r\n            choice.right.id === action.payload.encounterId &&\r\n            choice.right.type === 'shop'\r\n          ) {\r\n            return {\r\n              ...choice,\r\n              right: {\r\n                ...choice.right,\r\n                items: (choice.right as tShopEncounter).items.filter(\r\n                  (i) => i.id !== action.payload.itemId,\r\n                ),\r\n              } as tShopEncounter,\r\n            }\r\n          }\r\n          return choice\r\n        } else {\r\n          return choice\r\n        }\r\n      }),\r\n    }\r\n  },\r\n}\r\n\r\nexport const INITIAL_STATE: GameStateT = {\r\n  encounters: makeEncounterList(11),\r\n  level: 0,\r\n}\r\n\r\nexport default makeReducer(core, INITIAL_STATE)\r\nexport const useGameState = () => useSelector((state: StateT) => state.game)\r\nexport const useGameStateActions = () =>\r\n  useActions(actions) as {\r\n    reset: () => void\r\n    chooseCurrent: (value: 'left' | 'right') => void\r\n    nextLevel: () => void\r\n    removeItem: (choiceId: string, encounterId: string, itemId: string) => void\r\n  }\r\n","import React, { useContext, useMemo } from 'react'\r\nimport { useGameState, useGameStateActions } from '../../state/game'\r\nimport { tEncounterChoice, tEncounter } from '../../game/Encounter/type'\r\n\r\nexport interface GameStateContextT {\r\n  encounters: tEncounterChoice[]\r\n  level: number\r\n  currentChoice: tEncounterChoice | undefined\r\n  previousChoice: tEncounterChoice | undefined\r\n  currentEncounter: tEncounter | undefined\r\n  chooseCurrent: (value: 'left' | 'right') => void\r\n  nextLevel: () => void\r\n  reset: () => void\r\n  removeItem: (choiceId: string, encounterId: string, itemId: string) => void\r\n}\r\n\r\nexport const defaultValue: GameStateContextT = {\r\n  encounters: [],\r\n  level: 0,\r\n  currentChoice: undefined,\r\n  currentEncounter: undefined,\r\n  previousChoice: undefined,\r\n  chooseCurrent: (value) => {},\r\n  nextLevel: () => {},\r\n  reset: () => {},\r\n  removeItem: (choiceId, encounterId, itemId) => {},\r\n}\r\nexport const GameStateContext = React.createContext<GameStateContextT>(\r\n  defaultValue,\r\n)\r\nexport const useGameStateContext = () => useContext(GameStateContext)\r\n\r\nexport interface GameStateProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const GameStateContextProvider = (props: GameStateProviderPropsT) => {\r\n  const { children } = props\r\n  const { encounters, level } = useGameState()\r\n  const { nextLevel, chooseCurrent, reset, removeItem } = useGameStateActions()\r\n  const currentChoice = useMemo(() => {\r\n    return encounters[level]\r\n  }, [encounters, level])\r\n  const previousChoice = useMemo(() => {\r\n    return encounters[level - 1]\r\n  }, [encounters, level])\r\n  const currentEncounter = useMemo(() => {\r\n    const choice = encounters[level]\r\n    if (choice && choice.value) {\r\n      return choice[choice.value]\r\n    }\r\n  }, [encounters, level])\r\n\r\n  return (\r\n    <GameStateContext.Provider\r\n      value={{\r\n        encounters,\r\n        level,\r\n        currentChoice,\r\n        previousChoice,\r\n        currentEncounter,\r\n        reset,\r\n        nextLevel,\r\n        chooseCurrent,\r\n        removeItem,\r\n      }}\r\n    >\r\n      {children}\r\n    </GameStateContext.Provider>\r\n  )\r\n}\r\n","import React, { useMemo, useContext, useState } from 'react'\r\nimport { usePartyActions, useParty } from '../../state/party'\r\nimport { tProcessedParty, tParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter, tCharacter } from '../../game/Character/type'\r\nimport {\r\n  processParty,\r\n  makeParty,\r\n  findCharacterInParty,\r\n  updateCharacter,\r\n} from '../../game/Party/util'\r\nimport {\r\n  checkForProcessedCharacter,\r\n  processCharacter,\r\n  makeCharacter,\r\n  equipArmor,\r\n  equipWeapon,\r\n  unequipArmor,\r\n} from '../../game/Character/util'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { useGameStateContext } from '../GameStateContext'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { FISTS } from '../../game/Weapon/objects/fists'\r\n\r\nexport interface PartyContextT {\r\n  party: tProcessedParty\r\n  rawParty: tParty\r\n  activeCharacter: tProcessedCharacter\r\n  updateParty: (party: tParty) => void\r\n  upsertCharacter: (character: tCharacter) => void\r\n  deleteCharacter: (characterId: string) => void\r\n  findCharacter: (characterId: string) => tProcessedCharacter | undefined\r\n  findRawCharacter: (characterId: string) => tCharacter | undefined\r\n  setActiveCharacter: (character: tProcessedCharacter) => void\r\n  equipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n  unequipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n  purchaseItem: (item: tArmor | tWeapon | tConsumable, cost: number) => void\r\n}\r\nconst defaultContextValue: PartyContextT = {\r\n  rawParty: makeParty(),\r\n  party: processParty(makeParty()),\r\n  activeCharacter: processCharacter(makeCharacter('blacksmith')),\r\n  updateParty: (party) => {},\r\n  upsertCharacter: (character) => {},\r\n  deleteCharacter: (characterId) => {},\r\n  findCharacter: (characterId) => undefined,\r\n  findRawCharacter: (characterId) => undefined,\r\n  setActiveCharacter: (character) => {},\r\n  equipItem: (characterId, item) => {},\r\n  unequipItem: (characterId, item) => {},\r\n  purchaseItem: (item, cost) => {},\r\n}\r\nexport const PartyContext = React.createContext<PartyContextT>(\r\n  defaultContextValue,\r\n)\r\n\r\nexport interface PartyContextProviderPropsT {\r\n  children: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const PartyContextProvider = (props: PartyContextProviderPropsT) => {\r\n  const { children } = props\r\n  const actions = usePartyActions()\r\n  const rawParty = useParty()\r\n  const { currentChoice, currentEncounter, removeItem } = useGameStateContext()\r\n  const party = useMemo(() => processParty(rawParty), [rawParty])\r\n  const [activeCharacterId, setActiveCharacterId] = useState<string>(\r\n    party.characters[0].id,\r\n  )\r\n  const activeCharacter = useMemo(() => {\r\n    return party.characters.find(\r\n      (c) => c.id === activeCharacterId,\r\n    ) as tProcessedCharacter\r\n  }, [activeCharacterId, party.characters])\r\n  const setActiveCharacter = (character: tProcessedCharacter) =>\r\n    setActiveCharacterId(character.id)\r\n  const updateParty = (party: tParty) => {\r\n    actions.updateParty(party)\r\n  }\r\n  const upsertCharacter = (character: tCharacter) => {\r\n    if (!character) return\r\n    checkForProcessedCharacter(character)\r\n    actions.upsertCharacter(character)\r\n  }\r\n  const deleteCharacter = (characterId: string) => {\r\n    actions.deleteCharacter(characterId)\r\n  }\r\n  const findCharacter = (characterId: string) => {\r\n    return findCharacterInParty<tProcessedParty, tProcessedCharacter>(\r\n      party,\r\n      characterId,\r\n    )\r\n  }\r\n  const findRawCharacter = (characterId: string) => {\r\n    return findCharacterInParty(rawParty, characterId)\r\n  }\r\n\r\n  const equipItem = (characterId: string, item: tWeapon | tArmor) => {\r\n    const character = findRawCharacter(characterId)\r\n    if (!character) return\r\n    if (item.itemType === 'armor') {\r\n      const armor = item as tArmor\r\n      if (armor.resource === 'offhand' && (character.weapon || FISTS()).twoHand)\r\n        return\r\n      const result = equipArmor(character, armor)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.armor ? [result.armor] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n    if (item.itemType === 'weapon') {\r\n      const weapon = item as tWeapon\r\n      if ((character.weapon || FISTS()).twoHand) {\r\n        if (character.armor.find((a) => a.resource === 'offhand')) {\r\n          return\r\n        }\r\n      }\r\n      const result = equipWeapon(character, weapon)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.weapon ? [result.weapon] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n  }\r\n  const unequipItem = (characterId: string, item: tWeapon | tArmor) => {\r\n    const character = findRawCharacter(characterId)\r\n    if (!character) return\r\n    if (item.itemType === 'armor') {\r\n      const armor = item as tArmor\r\n      const result = unequipArmor(character, armor.resource)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.armor ? [result.armor] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n    if (item.itemType === 'weapon') {\r\n    }\r\n  }\r\n  const purchaseItem = (item: tArmor | tWeapon | tConsumable, cost: number) => {\r\n    if (party.gold > cost && currentChoice && currentEncounter) {\r\n      if (item.itemType === 'armor' || item.itemType === 'weapon') {\r\n        actions.upsertItem(item as tArmor | tWeapon)\r\n      }\r\n      if (item.itemType === 'consumable') {\r\n        updateParty({\r\n          ...rawParty,\r\n          characters: rawParty.characters.map((c) => ({\r\n            ...c,\r\n            consumables: [...c.consumables, item as tConsumable],\r\n          })),\r\n        })\r\n      }\r\n      actions.setGold(party.gold - cost)\r\n      removeItem(currentChoice.id, currentEncounter.id, item.id)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PartyContext.Provider\r\n      value={{\r\n        party,\r\n        rawParty,\r\n        activeCharacter,\r\n        updateParty,\r\n        upsertCharacter,\r\n        deleteCharacter,\r\n        findCharacter,\r\n        findRawCharacter,\r\n        setActiveCharacter,\r\n        equipItem,\r\n        unequipItem,\r\n        purchaseItem,\r\n      }}\r\n    >\r\n      {children}\r\n    </PartyContext.Provider>\r\n  )\r\n}\r\n\r\nexport const usePartyContext = () => useContext(PartyContext)\r\n","import { ModalStylesT } from '.'\r\n\r\nexport interface ModalContextStateT {\r\n  isOpen: boolean\r\n  contents: JSX.Element | null\r\n  callback: ((payload?: any) => void) | null\r\n  payload: any | null\r\n  blocking: boolean\r\n  styles: ModalStylesT\r\n}\r\nexport const initialState: ModalContextStateT = {\r\n  isOpen: false,\r\n  contents: null,\r\n  callback: null,\r\n  payload: null,\r\n  blocking: false,\r\n  styles: {},\r\n}\r\n\r\nexport const OPEN = 'modalContext/OPEN'\r\nexport const CLOSE = 'modalContext/CLOSE'\r\nexport const SET_CONTENTS = 'modalContext/SET_CONTENTS'\r\nexport const SET_CALLBACK = 'modalContext/SET_CALLBACK'\r\nexport const SET_PAYLOAD = 'modalContext/SET_PAYLOAD'\r\nexport const SET_BLOCKING = 'modalContext/SET_BLOCKING'\r\nexport const SET_STYLE = 'modalContext/SET_STYLE'\r\n\r\nexport const actions = {\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => ({\r\n    type: OPEN,\r\n    contents,\r\n    styles,\r\n    blocking,\r\n    callback,\r\n  }),\r\n  close: () => ({ type: CLOSE }),\r\n  setPayload: (payload: any) => ({ type: SET_PAYLOAD, payload }),\r\n  setContents: (contents: JSX.Element | null) => ({\r\n    type: SET_CONTENTS,\r\n    contents,\r\n  }),\r\n  setCallback: (callback: (() => void) | null) => ({\r\n    type: SET_CALLBACK,\r\n    callback,\r\n  }),\r\n  setBlocking: (blocking: boolean) => ({ type: SET_BLOCKING, blocking }),\r\n  setStyles: (styles: ModalStylesT) => ({ type: SET_STYLE, styles }),\r\n}\r\n\r\nconst core: Record<\r\n  string,\r\n  (state: ModalContextStateT, action: any) => ModalContextStateT\r\n> = {\r\n  [OPEN]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    isOpen: true,\r\n    contents: action.contents ? action.contents : state.contents,\r\n    styles: action.styles ? action.styles : state.styles || {},\r\n    blocking: action.blocking || false,\r\n    callback: action.callback ? action.callback : state.callback,\r\n  }),\r\n  [CLOSE]: (state: ModalContextStateT) => ({\r\n    ...state,\r\n    isOpen: false,\r\n  }),\r\n  [SET_PAYLOAD]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    payload: action.payload,\r\n  }),\r\n  [SET_CONTENTS]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: null,\r\n    payload: null,\r\n    contents: action.contents,\r\n    blocking: false,\r\n    style: {},\r\n  }),\r\n  [SET_CALLBACK]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: action.callback,\r\n  }),\r\n  [SET_BLOCKING]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    blocking: action.blocking,\r\n  }),\r\n  [SET_STYLE]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    styles: action.styles,\r\n  }),\r\n}\r\n\r\nexport const reducer = (\r\n  state: ModalContextStateT = initialState,\r\n  action: any,\r\n) => {\r\n  const coreFunction = core[action.type]\r\n  return coreFunction ? coreFunction(state, action) : state\r\n}\r\n","import React, { useContext, useReducer, useMemo, CSSProperties } from 'react'\r\nimport Modal from 'react-modal'\r\nimport { actions, reducer, initialState, ModalContextStateT } from './reducer'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ModalContextT {\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => void\r\n  close: (payload?: any) => void\r\n  setPayload: (payload: any) => void\r\n  setBlocking: (blocking: boolean) => void\r\n  setContents: (contents: JSX.Element) => void\r\n  setCallback: (callback: (payload?: any) => void) => void\r\n  setStyles: (styles: ModalStylesT) => void\r\n}\r\nconst defaultContext: ModalContextT = {\r\n  open: () => null,\r\n  close: () => null,\r\n  setBlocking: () => null,\r\n  setPayload: () => null,\r\n  setContents: () => null,\r\n  setCallback: () => null,\r\n  setStyles: () => null,\r\n}\r\nexport const ModalContext = React.createContext<ModalContextT>(defaultContext)\r\nexport const useModalContext = () => useContext(ModalContext)\r\n\r\nexport interface ModalStylesT {\r\n  modal?: CSSProperties\r\n  overlay?: CSSProperties\r\n}\r\n\r\nconst getContextValue = (\r\n  state: ModalContextStateT,\r\n  dispatch: React.Dispatch<any>,\r\n) => ({\r\n  isOpen: state.isOpen,\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => {\r\n    dispatch(actions.open(contents, styles, blocking, callback))\r\n  },\r\n  close: (payload?: any) => {\r\n    if (state.callback) state.callback(payload || state.payload)\r\n    dispatch(actions.close())\r\n  },\r\n  setPayload: (payload: any) => dispatch(actions.setPayload(payload)),\r\n  setContents: (contents: JSX.Element) =>\r\n    dispatch(actions.setContents(contents)),\r\n  setCallback: (callback: (payload?: any) => void) =>\r\n    dispatch(actions.setCallback(callback)),\r\n  setBlocking: (blocking: boolean) => dispatch(actions.setBlocking(blocking)),\r\n  setStyles: (styles: ModalStylesT) => dispatch(actions.setStyles(styles)),\r\n})\r\nModal.setAppElement('#root')\r\nexport interface ModalContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const ModalContextProvider = (props: ModalContextProviderPropsT) => {\r\n  const { children } = props\r\n  const reducerValue = useReducer(reducer, initialState)\r\n  const [state] = reducerValue\r\n  const context = useMemo(() => getContextValue(...reducerValue), [\r\n    reducerValue,\r\n  ])\r\n\r\n  return (\r\n    <ModalContext.Provider value={context}>\r\n      {children}\r\n      <Modal\r\n        isOpen={state.isOpen}\r\n        onRequestClose={() => {\r\n          if (!state.blocking) context.close()\r\n        }}\r\n        style={{\r\n          content: {\r\n            backgroundColor: Theme.darkBgColor,\r\n            color: 'white',\r\n            width: 400,\r\n            margin: '0 auto',\r\n            bottom: 'unset',\r\n            borderColor: Theme.lightBgColor,\r\n            ...state.styles.modal,\r\n          },\r\n          overlay: {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n            zIndex: 900,\r\n            ...state.styles.overlay,\r\n          },\r\n        }}\r\n      >\r\n        {state.contents || <div />}\r\n      </Modal>\r\n    </ModalContext.Provider>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport interface FlexContainerPropsT {\r\n  $direction?: 'row' | 'column' | 'column-reverse'\r\n  $full?: boolean\r\n}\r\nexport const FlexContainer = styled('div', (props: FlexContainerPropsT) => ({\r\n  display: 'flex',\r\n  flexDirection: props.$direction || 'row',\r\n  flex: props.$full ? 1 : 'default',\r\n}))\r\nexport const FullContainer = styled('div', () => ({\r\n  flex: 1,\r\n}))\r\n","import React from 'react'\r\nimport { styled, withStyle } from 'styletron-react'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { Theme } from '../theme'\r\n\r\nexport interface ButtonPropsT {\r\n  $direction?: 'up' | 'down'\r\n}\r\nexport const Button = styled('button', (props: ButtonPropsT) => {\r\n  return {\r\n    cursor: 'pointer',\r\n    background: Theme.mediumBgColor,\r\n    boxShadow: 'inset 0px 0px 3px black',\r\n    textShadow: '0px 1px 3px black',\r\n    border: '1px solid rgba(255,255,255,0.2)',\r\n    color: 'rgba(255,255,255,1)',\r\n    ':hover': {\r\n      border: '1px solid rgba(255,255,255,0.4)',\r\n    },\r\n    ':active': {\r\n      outline: 'none',\r\n      border: '1px solid rgba(255,255,255,0.7)',\r\n    },\r\n    ':focus': {\r\n      outline: 'none',\r\n    },\r\n    padding: '10px 30px',\r\n    userSelect: 'none',\r\n  }\r\n})\r\n\r\nexport const RedButton = withStyle(Button, (props: ButtonPropsT) => {\r\n  return {\r\n    fontFamily: 'Bangers',\r\n    letterSpacing: '1px',\r\n    background:\r\n      'linear-gradient(0deg, rgba(157,0,0,1) 0%, rgba(110,0,0,1) 100%)',\r\n  }\r\n})\r\n\r\nexport const ConfirmButton = withStyle(Button, (props: ButtonPropsT) => {\r\n  const { $direction } = props\r\n  return {\r\n    // background: 'linear-gradient(0deg, rgba(157,0,0,1) 0%, rgba(110,0,0,1) 100%)',\r\n    // fontWeight: 'bold',\r\n    borderTop: $direction === 'down' ? 'none' : undefined,\r\n    borderBottom: $direction === 'up' ? 'none' : undefined,\r\n    padding: '10px 30px',\r\n    boxShadow: 'inset 0px 2px 8px black',\r\n    ':hover': {\r\n      borderTop: $direction === 'down' ? 'none' : undefined,\r\n      borderBottom: $direction === 'up' ? 'none' : undefined,\r\n    },\r\n    animationDirection: '1s',\r\n    animationIterationCount: 'infinite',\r\n    animationName: `\r\n      from: {\r\n        background: 'rgba(255,255,255,0.4)',\r\n      },\r\n\r\n      to: {\r\n        background: 'rgba(255,255,255,1)',\r\n      },\r\n    `,\r\n  }\r\n})\r\n\r\nexport const ConfirmButton2 = (props: any) => {\r\n  const styles = useSpring({\r\n    from: {\r\n      border: '1px solid rgba(255,255,255,0)',\r\n    },\r\n    to: async (next: any) => {\r\n      while (1) {\r\n        await next({\r\n          border: '1px solid rgba(255,255,255,0)',\r\n        })\r\n        await next({ border: '1px solid rgba(255,255,255,1)' })\r\n      }\r\n    },\r\n  })\r\n  return (\r\n    <animated.div style={styles}>\r\n      <ConfirmButton style={{ border: 'none' }}>{props.children}</ConfirmButton>\r\n    </animated.div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nexport interface IconPropsT {\r\n  src: string\r\n  size: number\r\n  fill?: string\r\n  style?: React.CSSProperties\r\n  shadow?: boolean\r\n  onClick?: () => void\r\n}\r\nexport const Icon = ({\r\n  src,\r\n  size,\r\n  style = {},\r\n  fill = 'white',\r\n  shadow,\r\n  onClick,\r\n}: IconPropsT) => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [svg, setSvg] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (src) {\r\n      fetch(src)\r\n        .then((res) => res.text())\r\n        .then((text) => setSvg(text))\r\n        .then(() => setLoading(false))\r\n    }\r\n  }, [src])\r\n\r\n  return !loading ? (\r\n    <div\r\n      className={`icon ${shadow ? 'shadow' : ''}`}\r\n      onClick={() => {\r\n        if (onClick) onClick()\r\n      }}\r\n      style={{ ...style, height: size, width: size, fill }}\r\n      dangerouslySetInnerHTML={{ __html: svg }}\r\n    />\r\n  ) : (\r\n    <div />\r\n  )\r\n}\r\n","import React, { useState, useLayoutEffect } from 'react'\r\nimport { v4 } from 'uuid'\r\n\r\nexport interface HoverChildrenT {\r\n  isHovering: boolean\r\n}\r\nexport interface HoverPropsT {\r\n  delay?: number\r\n  children: (props: HoverChildrenT) => JSX.Element\r\n}\r\nexport const Hover = (props: HoverPropsT) => {\r\n  const { delay = 500, children } = props\r\n  const [internalHovering, setInternalHovering] = useState<boolean>(false)\r\n  const [isHovering, setIsHovering] = useState<boolean>(false)\r\n  const [guid, setGuid] = useState<string>(v4())\r\n  useLayoutEffect(() => {\r\n    const action = async () => {\r\n      if (internalHovering) {\r\n        setTimeout(() => {\r\n          setGuid(v4())\r\n        }, delay)\r\n      }\r\n    }\r\n    action()\r\n  }, [internalHovering])\r\n  useLayoutEffect(() => {\r\n    if (internalHovering) {\r\n      setIsHovering(true)\r\n    }\r\n  }, [guid])\r\n  const onMouseEnter = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(true)\r\n  }\r\n  const onMouseLeave = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(false)\r\n    setIsHovering(false)\r\n  }\r\n  return (\r\n    <div onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\r\n      {children({ isHovering })}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Hover } from '../components/Hover'\r\nimport { Theme } from '../theme'\r\n\r\nexport interface BoxContainerPropsT extends React.HTMLProps<HTMLDivElement> {\r\n  substyle?: React.CSSProperties\r\n  tag?: any\r\n  to?: string\r\n}\r\nexport const BoxContainer = (props: BoxContainerPropsT) => {\r\n  const {\r\n    style = {},\r\n    substyle = {},\r\n    children,\r\n    tag: Element = 'div',\r\n    ...rest\r\n  } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        border: '1px solid #000',\r\n        display: 'flex',\r\n        boxSizing: 'border-box',\r\n        ...style,\r\n      }}\r\n    >\r\n      <Element\r\n        style={{\r\n          border: substyle.border || `1px solid ${Theme.lightBgColor}`,\r\n          background: `linear-gradient(0deg, ${Theme.mediumBgColor} 0%, rgba(42,42,44) 100%)`,\r\n          padding: 10,\r\n          color: '#ccc',\r\n          flex: 1,\r\n          boxShadow: 'inset 0px 0px 2px black',\r\n          ...substyle,\r\n        }}\r\n        {...rest}\r\n      >\r\n        {children}\r\n      </Element>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const SmallBox = (props: BoxContainerPropsT) => (\r\n  <BoxContainer\r\n    {...props}\r\n    style={{\r\n      height: 40,\r\n      width: 40,\r\n      ...props.style,\r\n    }}\r\n    substyle={{\r\n      display: 'flex',\r\n      padding: 0,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      background: Theme.darkBgColor,\r\n      ...props.substyle,\r\n    }}\r\n  >\r\n    {props.children}\r\n  </BoxContainer>\r\n)\r\n\r\nexport const BoxButton = (props: BoxContainerPropsT) => {\r\n  return (\r\n    <Hover delay={0}>\r\n      {({ isHovering }) => (\r\n        <BoxContainer\r\n          {...props}\r\n          tag='button'\r\n          style={{\r\n            margin: 0,\r\n            ...(props.style || {}),\r\n          }}\r\n          substyle={{\r\n            borderColor:\r\n              isHovering && !props.disabled ? '#999' : Theme.lightBgColor,\r\n            padding: '4px',\r\n            cursor: props.disabled ? 'default' : 'pointer',\r\n            background: props.disabled ? '#444' : Theme.darkBgColor,\r\n            boxShadow: props.disabled ? 'none' : undefined,\r\n            ...(props.substyle || {}),\r\n          }}\r\n        />\r\n      )}\r\n    </Hover>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tStats } from '../../game/Stats/type'\r\nimport {\r\n  DEFENSE_BONUS_KEYS,\r\n  STAT_KEY_LABELS,\r\n  DAMAGE_BONUS_KEYS,\r\n  STAT_BONUS_KEYS,\r\n  HEALTH_FOCUS_BONUS_KEYS,\r\n} from '../../game/Stats/constants'\r\nimport { tCharacterTag } from '../../game/Character/type'\r\n\r\nexport interface StatsPreviewPropsT {\r\n  stats: tStats\r\n}\r\n\r\nconst defense_key_colors: any = {\r\n  armor: 'lightblue',\r\n  resistance: 'plum',\r\n}\r\n\r\nexport const StatsPreview = (props: StatsPreviewPropsT) => {\r\n  const { stats } = props\r\n  return (\r\n    <FlexContainer $direction='column' style={{ fontSize: 14 }}>\r\n      {DEFENSE_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: defense_key_colors[key],\r\n              }}\r\n            >\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {DAMAGE_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span style={{ textTransform: 'capitalize' }}>\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {HEALTH_FOCUS_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span style={{ textTransform: 'capitalize' }}>\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {STAT_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] > 0 && (\r\n            <span\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: 'lightgreen',\r\n              }}\r\n            >\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {STAT_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] < 0 && (\r\n            <span\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: 'lightcoral',\r\n              }}\r\n            >\r\n              {stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {(Object.keys(stats.damageModifiers) as tCharacterTag[])\r\n        .filter((tag) => stats.damageModifiers[tag] > 0)\r\n        .map((tag) => (\r\n          <span>\r\n            +{Math.floor(stats.damageModifiers[tag] * 100)}% damage against{' '}\r\n            {tag}\r\n          </span>\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const ANIMATO: tSkill = {\r\n  id: v4(),\r\n  name: 'Animato',\r\n  damageModifier: 0,\r\n  splashDamageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['evade-up'],\r\n}\r\n","import Vigor from './svg/delapouite/heart-beats.svg'\r\nimport Strength from './svg/delapouite/biceps.svg'\r\nimport Brain from './svg/lorc/brain.svg'\r\nimport Awareness from './svg/delapouite/eye-target.svg'\r\nimport Juggler from './svg/lorc/juggler.svg'\r\nimport Agility from './svg/lorc/sprint.svg'\r\nimport Clover from './svg/lorc/clover.svg'\r\nimport Accuracy from './svg/delapouite/convergence-target.svg'\r\n\r\nimport Dazed from './svg/lorc/star-swirl.svg'\r\nimport Targeted from './svg/sbed/targeted.svg'\r\nimport Evasive from './svg/lorc/dodging.svg'\r\nimport SpeedDown from './svg/delapouite/sticky-boot.svg'\r\nimport Poisoned from './svg/lorc/biohazard.svg'\r\nimport Burning from './svg/carl-olsen/flame.svg'\r\nimport Bleeding from './svg/lorc/bleeding-wound.svg'\r\n\r\nimport Shot from './svg/lorc/high-shot.svg'\r\nimport SnipeShot from './svg/delapouite/shield-impact.svg'\r\nimport Surge from './svg/lorc/fire-zone.svg'\r\nimport AreaBast from './svg/lorc/heavy-timer.svg'\r\nimport Dazzle from './svg/lorc/ubisoft-sun.svg'\r\nimport Smash from './svg/lorc/flat-hammer.svg'\r\nimport Shockwave from './svg/lorc/hammer-drop.svg'\r\nimport Taunt from './svg/lorc/bordered-shield.svg'\r\nimport Alto from './svg/delapouite/g-clef.svg'\r\nimport Protect from './svg/lorc/shieldcomb.svg'\r\nimport PinDown from './svg/lorc/energy-arrow.svg'\r\nimport Reset from './svg/delapouite/backward-time.svg'\r\nimport SpreadShot from './svg/lorc/double-shot.svg'\r\nimport TimeJump from './svg/delapouite/extra-time.svg'\r\nimport Heal from './svg/sbed/health-normal.svg'\r\nimport CuttingSwing from './svg/lorc/wave-strike.svg'\r\nimport Restore from './svg/lorc/life-support.svg'\r\nimport Dodging from './svg/lorc/dodging.svg'\r\nimport Chop from './svg/lorc/axe-in-stump.svg'\r\nimport PowerStrike from './svg/lorc/pointy-sword.svg'\r\n\r\nimport MagicArmor from './svg/lorc/robe.svg'\r\nimport ClothArmor from './svg/lorc/scale-mail.svg'\r\nimport Armor from './svg/delapouite/chest-armor.svg'\r\nimport Shield from './svg/delapouite/viking-shield.svg'\r\nimport MagicShield from './svg/lorc/lightning-shield.svg'\r\nimport Footwear from './svg/lorc/leather-boot.svg'\r\nimport Hat from './svg/delapouite/robin-hood-hat.svg'\r\nimport MagicHat from './svg/lorc/pointy-hat.svg'\r\nimport Helmet from './svg/lorc/visored-helm.svg'\r\nimport Weapon from './svg/lorc/broadsword.svg'\r\n\r\nimport Axe from './svg/lorc/battle-axe.svg'\r\nimport Blunt from './svg/lorc/gavel.svg'\r\nimport Bow from './svg/lorc/heavy-arrow.svg'\r\nimport Dagger from './svg/lorc/bowie-knife.svg'\r\nimport Handgun from './svg/skoll/revolver.svg'\r\nimport Lute from './svg/lorc/guitar.svg'\r\nimport MagicStaff from './svg/lorc/wizard-staff.svg'\r\nimport Sword from './svg/lorc/broadsword.svg'\r\nimport Spear from './svg/lorc/stone-spear.svg'\r\nimport Tome from './svg/lorc/book-cover.svg'\r\nimport Torch from './svg/delapouite/torch.svg'\r\nimport Fist from './svg/skoll/fist.svg'\r\n\r\nimport Godsbeard from './svg/delapouite/herbs-bundle.svg'\r\nimport { tBaseStats } from '../game/Stats/type'\r\nimport { tStatusType } from '../game/Status/type'\r\nimport { SHOT } from '../game/Skill/objects/shot'\r\nimport { SNIPE_SHOT } from '../game/Skill/objects/snipe_shot'\r\nimport { PIERCING_BLOW } from '../game/Skill/objects/piercing_blow'\r\nimport { PIN_DOWN } from '../game/Skill/objects/pin_down'\r\nimport { SURGE } from '../game/Skill/objects/surge'\r\nimport { AREA_BLAST } from '../game/Skill/objects/area_blast'\r\nimport { SYMPHONY } from '../game/Skill/objects/symphony'\r\nimport { DAZZLE } from '../game/Skill/objects/dazzle'\r\nimport { RUBATO } from '../game/Skill/objects/rubato'\r\nimport { SMASH, STRIKE, CHOP, HOBO_STAB } from '../game/Skill/objects/smash'\r\nimport { SHOCKWAVE } from '../game/Skill/objects/shockwave'\r\nimport { TAUNT } from '../game/Skill/objects/taunt'\r\nimport { ALTO } from '../game/Skill/objects/alto'\r\nimport { RITARDANDO } from '../game/Skill/objects/ritardando'\r\nimport { PROTECT } from '../game/Skill/objects/protect'\r\nimport { SPREAD_SHOT } from '../game/Skill/objects/spread_shot'\r\nimport { STUN_ATTACK } from '../game/Skill/objects/stun_attack'\r\nimport { TIME_JUMP } from '../game/Skill/objects/time_jump'\r\nimport { GODSBEARD } from '../game/Consumable/objects/godsbeard'\r\nimport { tArmorResourceType, tArmorType } from '../game/Armor/type'\r\nimport { HEAL } from '../game/Skill/objects/heal'\r\nimport { tWeaponType } from '../game/Weapon/type'\r\nimport { CUTTING_SWING } from '../game/Skill/objects/cutting_swing'\r\nimport { RESTORE } from '../game/Skill/objects/restore'\r\nimport { PRESTO } from '../game/Skill/objects/presto'\r\nimport { ANIMATO } from '../game/Skill/objects/animato'\r\nimport { POWER_STRIKE } from '../game/Skill/objects/power_strike'\r\nimport { tCharacterClass } from '../game/Character/type'\r\n\r\nimport Blacksmith from './svg/delapouite/viking-head.svg'\r\nimport Hunter from './svg/lorc/cowled.svg'\r\nimport Bard from './svg/cathelineau/nun-face.svg'\r\nimport Scholar from './svg/delapouite/wizard-face.svg'\r\nimport Hobo from './svg/delapouite/perspective-dice-six.svg'\r\n\r\nexport const STAT_ICONS: Record<keyof tBaseStats, string> = {\r\n  vigor: Vigor,\r\n  strength: Strength,\r\n  intelligence: Brain,\r\n  dexterity: Awareness,\r\n  charisma: Juggler,\r\n  agility: Agility,\r\n  luck: Clover,\r\n  evasion: '',\r\n  criticalChance: '',\r\n}\r\n\r\nexport const STATUS_ICONS: Partial<Record<tStatusType, string>> = {\r\n  stunned: Dazed,\r\n  targeted: Targeted,\r\n  evasive: Evasive,\r\n  protected: Protect,\r\n  ['speed-down']: SpeedDown,\r\n  poisoned: Poisoned,\r\n  burning: Burning,\r\n  bleeding: Bleeding,\r\n}\r\n\r\nexport const SKILL_ICONS: Record<string, string> = {\r\n  [SHOT.id]: Shot,\r\n  [SNIPE_SHOT.id]: SnipeShot,\r\n  [PIERCING_BLOW.id]: SnipeShot,\r\n  [PIN_DOWN.id]: PinDown,\r\n  [SURGE.id]: Surge,\r\n  [AREA_BLAST.id]: AreaBast,\r\n  [SYMPHONY.id]: AreaBast,\r\n  [DAZZLE.id]: Dazzle,\r\n  [RUBATO.id]: Reset,\r\n  [SMASH.id]: Smash,\r\n  [STRIKE.id]: Smash,\r\n  [SHOCKWAVE.id]: Shockwave,\r\n  [TAUNT.id]: Taunt,\r\n  [ALTO.id]: Alto,\r\n  [RITARDANDO.id]: Alto,\r\n  [PROTECT.id]: Protect,\r\n  [SPREAD_SHOT.id]: SpreadShot,\r\n  [STUN_ATTACK.id]: Dazzle,\r\n  [TIME_JUMP.id]: TimeJump,\r\n  [HEAL('').id]: Heal,\r\n  [CUTTING_SWING.id]: CuttingSwing,\r\n  [RESTORE.id]: Restore,\r\n  [PRESTO.id]: Agility,\r\n  [ANIMATO.id]: Dodging,\r\n  [CHOP.id]: Chop,\r\n  [POWER_STRIKE.id]: PowerStrike,\r\n  [HOBO_STAB.id]: PowerStrike,\r\n}\r\n\r\nexport const ARMOR_TYPE_ICONS: Record<tArmorType, string> = {\r\n  ['magic-armor']: MagicArmor,\r\n  ['cloth-armor']: ClothArmor,\r\n  armor: Armor,\r\n  shield: Shield,\r\n  ['magic-shield']: MagicShield,\r\n  footwear: Footwear,\r\n  hat: Hat,\r\n  ['magic-hat']: MagicHat,\r\n  helmet: Helmet,\r\n  charm: '',\r\n  ring: '',\r\n}\r\n\r\nexport const WEAPON_TYPE_ICONS: Record<tWeaponType, string> = {\r\n  enemy: '',\r\n  axe: Axe,\r\n  blunt: Blunt,\r\n  bow: Bow,\r\n  dagger: Dagger,\r\n  pistol: Handgun,\r\n  lute: Lute,\r\n  ['magic-staff']: MagicStaff,\r\n  spear: Spear,\r\n  sword: Sword,\r\n  tome: Tome,\r\n  torch: Torch,\r\n  fist: Fist,\r\n}\r\n\r\nexport const RESOURCE_ICONS: Record<tArmorResourceType | 'weapon', string> = {\r\n  weapon: Weapon,\r\n  offhand: Shield,\r\n  body: Armor,\r\n  head: Helmet,\r\n  feet: Footwear,\r\n}\r\n\r\nexport const CONSUMABLE_ITEM_ICONS: Record<string, string> = {\r\n  [GODSBEARD().cid]: Godsbeard,\r\n}\r\nexport const CONSUMABLE_ITEM_COLORS: Record<string, string> = {\r\n  [GODSBEARD().cid]: '#84a397',\r\n}\r\n\r\nexport const CHARACTER_CLASS_ICONS: Record<tCharacterClass, string> = {\r\n  enemy: '',\r\n  blacksmith: Blacksmith,\r\n  bard: Bard,\r\n  hunter: Hunter,\r\n  scholar: Scholar,\r\n  hobo: Hobo,\r\n}\r\n","import { tItemRarity } from './type'\r\nimport { tCharacterClass } from '../Character/type'\r\nimport { tConsumable } from '../Consumable/type'\r\nimport { tArmorResourceType } from '../Armor/type'\r\nimport { GODSBEARD } from '../Consumable/objects/godsbeard'\r\n\r\nexport const ITEM_RARITY_COLORS: Record<tItemRarity, string> = {\r\n  common: 'rgba(255,255,255,0.8)',\r\n  uncommon: 'rgba(173,216,230,1)',\r\n  rare: 'rgba(221,160,221,1)',\r\n  mythic: 'rgb(255,160,122,1)',\r\n}\r\n\r\nexport const CLASS_STARTING_CONSUMABLES: Record<\r\n  tCharacterClass,\r\n  tConsumable[]\r\n> = {\r\n  blacksmith: [GODSBEARD()],\r\n  hunter: [GODSBEARD()],\r\n  scholar: [GODSBEARD()],\r\n  bard: [GODSBEARD()],\r\n  hobo: [],\r\n  enemy: [],\r\n}\r\n\r\nexport const CHARACTER_RESOURCES: tArmorResourceType[] = [\r\n  'offhand',\r\n  'body',\r\n  'head',\r\n  'feet',\r\n]\r\n","import React, { useState, useRef } from 'react'\r\nimport BaseTooltip, { TooltipProps } from 'react-tooltip-lite'\r\nimport { Hover } from '../Hover'\r\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\r\n\r\nexport interface ClickToolTipChildrenT {\r\n  onClick: (value?: boolean) => void\r\n  ref: React.MutableRefObject<HTMLElement | undefined>\r\n}\r\ninterface PropsT extends TooltipProps {\r\n  children: JSX.Element | ((props: ClickToolTipChildrenT) => JSX.Element)\r\n  content: JSX.Element | ((props: ClickToolTipChildrenT) => JSX.Element)\r\n}\r\nexport const Tooltip = (props: PropsT) => {\r\n  const { ...rest } = props\r\n  return (\r\n    <BaseTooltip\r\n      direction='up'\r\n      tagName='div'\r\n      padding='0'\r\n      arrow={false}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nexport const HoverToolTip = (props: PropsT) => {\r\n  return (\r\n    <Hover>\r\n      {({ isHovering }) => <Tooltip {...props} isOpen={isHovering} />}\r\n    </Hover>\r\n  )\r\n}\r\n\r\nexport const ClickToolTip = (props: PropsT) => {\r\n  const { children, content, ...rest } = props\r\n  const [isOpen, setIsOpen] = useState<boolean>(false)\r\n  const ref = useRef<HTMLElement>()\r\n  useOnClickOutside(ref, () => {\r\n    setIsOpen(false)\r\n  })\r\n  if (typeof children !== 'function') return null\r\n  if (typeof content !== 'function') return null\r\n  const p = {\r\n    onClick: (value?: boolean) => {\r\n      setIsOpen((v) => (value !== undefined ? value : !v))\r\n    },\r\n    ref,\r\n  }\r\n  return (\r\n    <Tooltip content={content(p)} {...rest} isOpen={isOpen}>\r\n      {children(p)}\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport const useOnClickOutside = (\r\n  ref: React.MutableRefObject<HTMLElement | undefined>,\r\n  handler: Function,\r\n) => {\r\n  useEffect(() => {\r\n    const listener = (event: any) => {\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return\r\n      }\r\n\r\n      setTimeout(() => handler(event), 150)\r\n    }\r\n\r\n    document.addEventListener('mousedown', listener)\r\n    document.addEventListener('touchstart', listener)\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', listener)\r\n      document.removeEventListener('touchstart', listener)\r\n    }\r\n  }, [ref, handler])\r\n}\r\n","import React from 'react'\r\nimport { styled, withWrapper } from 'styletron-react'\r\nimport { HoverToolTip } from '../components/Tooltip'\r\nimport { Theme } from '../theme'\r\n\r\nconst Div = styled('div', {\r\n  transform: 'rotateY(0deg) rotate(-45deg)',\r\n})\r\nexport const Badge = withWrapper(Div, (Element) => (props: any) => {\r\n  const { onClick, $style, ...rest } = props\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      style={{\r\n        position: props.$absolute === false ? 'relative' : 'absolute',\r\n        background: Theme.darkBgColor,\r\n        padding: '4px',\r\n        fontFamily: 'New Rocker',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        boxShadow: '1px 1px 0px black',\r\n        height: props.$size || '20px',\r\n        width: props.$size || '20px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        lineHeight: '20px',\r\n        letterSpacing: '1px',\r\n        borderRadius: '30%',\r\n        transform: 'rotateY(0deg) rotate(45deg)',\r\n        color: props.$color || 'white',\r\n        cursor: 'pointer',\r\n        top: props.$top,\r\n        userSelect: 'none',\r\n        bottom: props.$bottom,\r\n        right: props.$right,\r\n        left: props.$left,\r\n        transition: 'all 0.2s',\r\n        zIndex: 2,\r\n        ...($style || {}),\r\n      }}\r\n    >\r\n      <Element {...rest} />\r\n    </div>\r\n  )\r\n})\r\n\r\nexport interface HoverBadgePropsT {\r\n  children: JSX.Element\r\n  content: JSX.Element\r\n  badgeProps: any\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n}\r\nexport const HoverBadge = (props: HoverBadgePropsT) => {\r\n  const { children, content, badgeProps, direction } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        top: badgeProps.$top,\r\n        bottom: badgeProps.$bottom,\r\n        left: badgeProps.$left,\r\n        right: badgeProps.$right,\r\n      }}\r\n    >\r\n      <HoverToolTip\r\n        distance={2}\r\n        direction={direction || 'right'}\r\n        // styles={{ position: 'absolute' }}\r\n        content={content || <div />}\r\n      >\r\n        <Badge\r\n          $absolute={false}\r\n          $size={badgeProps.$size}\r\n          $color={badgeProps.$color}\r\n          $style={badgeProps.style}\r\n        >\r\n          {children}\r\n        </Badge>\r\n      </HoverToolTip>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Badge } from '../../elements/badge'\r\nimport { CheckKVT } from '../RoundResultRenderer'\r\nimport X from '../../icons/svg/lorc/split-cross.svg'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tBaseStats } from '../../game/Stats/type'\r\nimport { tStatusType } from '../../game/Status/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface SkillChecksPropsT {\r\n  stat: keyof tBaseStats\r\n  skill?: tSkill\r\n  rolls?: number\r\n  results?: boolean[]\r\n}\r\nexport const SkillChecks = (props: SkillChecksPropsT) => {\r\n  const { stat, skill, rolls, results = [] } = props\r\n  return (\r\n    <FlexContainer\r\n      style={{ justifyContent: 'center', padding: '0px 0 24px 0' }}\r\n    >\r\n      {Array(skill?.rolls || rolls)\r\n        .fill(null)\r\n        .map((_, i) => (\r\n          <SkillCheck\r\n            key={i}\r\n            skill={skill}\r\n            perfect={\r\n              results.every((r) => r === true) && results.length === rolls\r\n            }\r\n            check={{ label: stat, result: results[i] }}\r\n          />\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface SkillCheckT {\r\n  check: CheckKVT\r\n  size?: number\r\n  padding?: number\r\n  perfect?: boolean\r\n  crit?: boolean\r\n  skill?: tSkill\r\n}\r\nexport const SkillCheck = (props: SkillCheckT) => {\r\n  const { check, size = 36, padding = 12, perfect = false, skill, crit } = props\r\n  const colors = getPerfectStatusColors(skill?.perfectStatus || [], crit)\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: `0px ${padding}px`,\r\n        opacity: check.result === undefined ? 0.75 : 1,\r\n      }}\r\n    >\r\n      <Badge\r\n        $absolute={false}\r\n        $size={size}\r\n        $style={{\r\n          borderColor: perfect ? colors.border : undefined,\r\n          background: perfect ? colors.background : Theme.darkBgColor,\r\n        }}\r\n      >\r\n        <Icon\r\n          src={STAT_ICONS[check.label as keyof tBaseStats]}\r\n          fill={perfect ? colors.fill : getColor(check.result)}\r\n          size={size - 4}\r\n        />\r\n        {check.result === false && (\r\n          <Icon\r\n            src={X}\r\n            shadow\r\n            fill={'lightcoral'}\r\n            size={size - 4}\r\n            style={{ position: 'absolute', top: 0 }}\r\n          />\r\n        )}\r\n      </Badge>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst getColor = (result: boolean | undefined) => {\r\n  if (result === true) return 'white'\r\n  if (result === false) return 'rgba(255,255,255,0.3)'\r\n  return 'rgba(255,255,255,0.3)'\r\n}\r\ninterface SCColorsT {\r\n  border: string\r\n  background: string\r\n  fill: string\r\n}\r\nexport const getPerfectStatusColors = (\r\n  status: tStatusType[],\r\n  crit: boolean = false,\r\n): SCColorsT => {\r\n  if (crit) {\r\n    return {\r\n      border: '#white',\r\n      background: '#00134a',\r\n      fill: '#d9e3ff',\r\n    }\r\n  }\r\n  if (status.includes('burning')) {\r\n    return {\r\n      border: '#ff9100',\r\n      background: '#5c2c00',\r\n      fill: '#d48a46',\r\n    }\r\n  }\r\n  if (status.includes('poisoned')) {\r\n    return {\r\n      border: '#00870f',\r\n      background: '#001202',\r\n      fill: '#888f88',\r\n    }\r\n  }\r\n  if (status.includes('bleeding')) {\r\n    return {\r\n      border: '#ff0000',\r\n      background: '#120000',\r\n      fill: '#d19999',\r\n    }\r\n  }\r\n  if (status.includes('cursed')) {\r\n    return {\r\n      border: '#6400a3',\r\n      background: '#10001a',\r\n      fill: '#b093c2',\r\n    }\r\n  }\r\n  if (status.includes('frozen')) {\r\n    return {\r\n      border: '#009ac4',\r\n      background: '#00161c',\r\n      fill: '#a5c8d1',\r\n    }\r\n  }\r\n\r\n  return {\r\n    border: '#ffd400',\r\n    background: '#261d00',\r\n    fill: '#ede5be',\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Color from 'color'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { StatsPreview } from '../StatsPreview'\r\nimport { Icon } from '../Icon'\r\nimport { ARMOR_TYPE_ICONS } from '../../icons/maps'\r\nimport { Button } from '../../elements/button'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { STAT_KEY_LABELS } from '../../game/Stats/constants'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ArmorPreviewPropsT {\r\n  armor: tArmor\r\n  showEquipButton?: boolean\r\n  showBuyButton?: boolean\r\n  cost?: number\r\n  onEquipClick?: () => void\r\n  onBuyClick?: () => void\r\n}\r\nexport const ArmorPreview = (props: ArmorPreviewPropsT) => {\r\n  const {\r\n    armor,\r\n    showEquipButton,\r\n    showBuyButton,\r\n    cost,\r\n    onEquipClick,\r\n    onBuyClick,\r\n  } = props\r\n  const rarityColor = ITEM_RARITY_COLORS[armor.rarity]\r\n  const from = Color(rarityColor).darken(0.5).rgb().toString()\r\n  const to = Color(rarityColor).darken(0.7).rgb().toString()\r\n  const gradient = `linear-gradient(180deg, ${from} 0%, ${to} 100%)`\r\n  const skill = armor.skills[0]\r\n  return (\r\n    <BoxContainer\r\n      style={{ minWidth: 240 }}\r\n      substyle={{\r\n        background: gradient,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      }}\r\n    >\r\n      <FlexContainer $direction='column' $full>\r\n        <FullContainer />\r\n        {skill && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginBottom: 10 }}>\r\n            {Array(skill.rolls)\r\n              .fill(null)\r\n              .map((_, i) => (\r\n                <SkillCheck\r\n                  check={{\r\n                    label: skill.weaponStatOverride || 'strength',\r\n                    result: true,\r\n                  }}\r\n                  size={18}\r\n                  padding={4}\r\n                  skill={skill}\r\n                />\r\n              ))}\r\n          </FlexContainer>\r\n        )}\r\n        <FlexContainer $full style={{ marginBottom: 8 }}>\r\n          <Icon\r\n            src={ARMOR_TYPE_ICONS[armor.type]}\r\n            size={32}\r\n            style={{ marginRight: 10 }}\r\n            shadow\r\n          />\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              textShadow: '1px 1px 2px rgba(0,0,0,0.8)',\r\n            }}\r\n          >\r\n            <span style={{ fontWeight: 600 }}>{armor.name}</span>\r\n            <span style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n              {armor.rarity}\r\n            </span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n          {showEquipButton && (\r\n            <div style={{ marginLeft: 10 }}>\r\n              <Button onClick={onEquipClick} style={{ padding: 4 }}>\r\n                Equip\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </FlexContainer>\r\n        <BoxContainer\r\n          substyle={{\r\n            background: 'rgba(0,0,0,0.7)',\r\n            minHeight: 120,\r\n            textAlign: 'left',\r\n          }}\r\n        >\r\n          <FlexContainer $direction='column'>\r\n            <FlexContainer\r\n              style={{ justifyContent: 'space-between', marginBottom: 8 }}\r\n            >\r\n              <FlexContainer\r\n                $full\r\n                style={{\r\n                  textTransform: 'capitalize',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    color: Theme.physicalColor,\r\n                    fontSize: 24,\r\n                    fontWeight: 'bolder',\r\n                    marginRight: 8,\r\n                  }}\r\n                >\r\n                  {armor.stats.armor}\r\n                </div>\r\n                <div>{STAT_KEY_LABELS.armor}</div>\r\n              </FlexContainer>\r\n              <FlexContainer\r\n                $full\r\n                style={{\r\n                  textTransform: 'capitalize',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    color: 'plum',\r\n                    fontSize: 24,\r\n                    fontWeight: 'bolder',\r\n                    marginRight: 8,\r\n                  }}\r\n                >\r\n                  <span>{armor.stats.resistance}</span>\r\n                </span>\r\n                {STAT_KEY_LABELS.resistance}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n            {armor.skills.length > 0 && (\r\n              <span style={{ color: 'plum', marginBottom: 8 }}>\r\n                {armor.skills.map(\r\n                  (skill, i) => `${i > 0 ? ', ' : ''}${skill.name}`,\r\n                )}\r\n              </span>\r\n            )}\r\n            <StatsPreview stats={{ ...armor.stats, armor: 0, resistance: 0 }} />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        {showBuyButton && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginTop: 10 }}>\r\n            <Button onClick={onBuyClick} style={{ padding: '4px 16px' }}>\r\n              Buy ({cost || 0})\r\n            </Button>\r\n          </FlexContainer>\r\n        )}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport const FakeLink = styled('span', (props: any) => {\r\n  return {\r\n    ':hover': {\r\n      textDecoration: 'underline',\r\n      cursor: 'pointer',\r\n    },\r\n  }\r\n})\r\n","import { tStatusType } from '../Status/type'\r\n\r\nexport type tPerfectKey = tStatusType | 'splash' | 'pierce' | 'heal'\r\nexport const PERFECT_DISPLAY_INFO: Partial<Record<tPerfectKey, string>> = {\r\n  splash: 'Splash Damage',\r\n  pierce: 'Ignore Resistances',\r\n  bleeding: 'Bleed',\r\n  burning: 'Burn',\r\n  frozen: 'Freeze',\r\n  poisoned: 'Poison',\r\n  targeted: 'Taunt Enemies',\r\n  stunned: 'Stun',\r\n  evasive: 'Become Evasive',\r\n  heal: 'Heal',\r\n  protected: 'Protect',\r\n  ['speed-down']: 'Speed Down',\r\n  rushed: 'Rush Character',\r\n  reset: 'Reset Character',\r\n}\r\n","import { tProcessedCharacter } from '../Character/type'\r\nimport {\r\n  tSkill,\r\n  tSourceSkillResult,\r\n  tTargetSkillResult,\r\n  tSkillResult,\r\n  tSkillTarget,\r\n  tSkillTargetType,\r\n} from './type'\r\nimport { resolveCheck } from '../Roll/util'\r\nimport {\r\n  getRawDamage,\r\n  getReflectedDamage,\r\n  isCharacter,\r\n  hasStatus,\r\n  getDamageResistance,\r\n} from '../Character/util'\r\nimport { tProcessedParty } from '../Party/type'\r\nimport { isParty } from '../Party/util'\r\nimport { tDamage } from '../Damage/type'\r\nimport { tPerfectKey, PERFECT_DISPLAY_INFO } from './constants'\r\nimport { noneg } from '../../util'\r\n\r\nexport const getSourceSkillResult = (\r\n  source: tProcessedCharacter,\r\n  skill: tSkill,\r\n): tSourceSkillResult => {\r\n  const rollResults = Array(skill.rolls)\r\n    .fill(null)\r\n    .map((_, i) =>\r\n      resolveCheck(\r\n        source,\r\n        skill.weaponStatOverride || source.weapon.stat,\r\n        skill.offset,\r\n      ),\r\n    )\r\n  const passedCount = rollResults.filter((r) => r).length\r\n  const perfect = passedCount === skill.rolls\r\n  const criticalHitSuccess = resolveCheck(source, 'criticalChance')\r\n  const rollDamageModifier = passedCount / skill.rolls\r\n  const rawDamage = {\r\n    ...source.weapon.damage,\r\n    value: Math.round(\r\n      (source.weapon.damage.value + source.stats.attackDamageOffset) *\r\n        source.stats.attackDamageModifier *\r\n        skill.damageModifier *\r\n        rollDamageModifier *\r\n        (perfect && criticalHitSuccess ? 1.2 : 1),\r\n    ),\r\n    range: skill.weaponRangeOverride || source.weapon.damage.range,\r\n  }\r\n  return {\r\n    source,\r\n    skill,\r\n    rollResults,\r\n    passedCount,\r\n    perfect,\r\n    accuracySuccess: skill.damage ? passedCount > 0 : perfect,\r\n    criticalHitSuccess: perfect && criticalHitSuccess,\r\n    rawDamage,\r\n    splashDamage: {\r\n      ...source.weapon.damage,\r\n      value:\r\n        perfect && skill.perfectSplash\r\n          ? Math.round(rawDamage.value * skill.splashDamageModifier)\r\n          : 0,\r\n      range: skill.weaponRangeOverride || source.weapon.damage.range,\r\n    },\r\n    ignoreResistance: perfect && skill.perfectPierce,\r\n    addedStatus: perfect ? skill.perfectStatus : [],\r\n  }\r\n}\r\n\r\nexport const getTargetSkillResult = (\r\n  target: tProcessedCharacter,\r\n  sourceResult: tSourceSkillResult,\r\n): tTargetSkillResult => {\r\n  const dodgeResult = resolveCheck(target, 'evasion')\r\n  const dodgeSuccess = hasStatus(target, 'evasive')\r\n    ? !sourceResult.perfect\r\n    : !sourceResult.perfect && dodgeResult\r\n  const damage = getRawDamage(\r\n    sourceResult.source,\r\n    target,\r\n    sourceResult.rawDamage,\r\n  )\r\n  return {\r\n    ...sourceResult,\r\n    target,\r\n    dodgeSuccess,\r\n    totalDamage: {\r\n      ...damage,\r\n      value: dodgeSuccess ? 0 : damage.value,\r\n    },\r\n    reflectedDamage: getReflectedDamage(target, damage),\r\n    loggedDamgge: {\r\n      ...damage,\r\n      value: dodgeSuccess\r\n        ? 0\r\n        : noneg(damage.value - getDamageResistance(target, damage)),\r\n    },\r\n  }\r\n}\r\n\r\nexport const getSkillResult = (\r\n  source: tProcessedCharacter,\r\n  targets: tProcessedCharacter[],\r\n  skill: tSkill,\r\n): tSkillResult => {\r\n  const sourceResult = getSourceSkillResult(source, skill)\r\n  return {\r\n    sourceResult,\r\n    targetResults: targets.map((target) =>\r\n      getTargetSkillResult(target, sourceResult),\r\n    ),\r\n  }\r\n}\r\n\r\nexport const resolveSkillTarget = (\r\n  target: tSkillTarget,\r\n): tProcessedCharacter[] => {\r\n  switch (target.type) {\r\n    case 'single':\r\n      return target.character ? [target.character] : []\r\n    case 'ally':\r\n      return target.character ? [target.character] : []\r\n    case 'self':\r\n      return target.character ? [target.character] : []\r\n    case 'party':\r\n      return target.party?.characters || []\r\n    case 'group':\r\n      return target.party?.characters || []\r\n    default:\r\n      return []\r\n  }\r\n}\r\n\r\nexport const makeSkillTarget = (\r\n  type: tSkillTargetType,\r\n  target: tProcessedCharacter | tProcessedParty,\r\n): tSkillTarget => {\r\n  return {\r\n    type,\r\n    character: isCharacter(target)\r\n      ? (target as tProcessedCharacter)\r\n      : undefined,\r\n    party: isParty(target) ? (target as tProcessedParty) : undefined,\r\n  }\r\n}\r\n\r\nexport const getSkillTargetOptions = (\r\n  source: tProcessedCharacter,\r\n  sourceParty: tProcessedParty,\r\n  targetParty: tProcessedParty,\r\n  skill: tSkill,\r\n): tProcessedCharacter[] | tProcessedParty[] => {\r\n  switch (skill.targetType) {\r\n    case 'single':\r\n      return targetParty.characters.filter((c) => c.health > 0)\r\n    case 'ally':\r\n      return sourceParty.characters.filter((c) => c.health > 0)\r\n    case 'group':\r\n      return [targetParty]\r\n    case 'party':\r\n      return [sourceParty]\r\n    case 'self':\r\n      return [source]\r\n    default:\r\n      return []\r\n  }\r\n}\r\n\r\nexport const getSkillDamage = (\r\n  skill: tSkill,\r\n  source: tProcessedCharacter,\r\n): tDamage => {\r\n  return {\r\n    ...source.weapon.damage,\r\n    value:\r\n      (source.weapon.damage.value + source.stats.attackDamageOffset) *\r\n      (skill.damageModifier + source.stats.attackDamageModifier / 100),\r\n  }\r\n}\r\n\r\nexport const getPerfectKeys = (skill: tSkill): tPerfectKey[] => {\r\n  let base: tPerfectKey[] = [...skill.perfectStatus]\r\n  if (skill.perfectSplash) base = [...base, 'splash']\r\n  if (skill.perfectPierce) base = [...base, 'pierce']\r\n  if (skill.healing) base = [...base, 'heal']\r\n  return base\r\n}\r\n\r\nexport const getPerfectText = (\r\n  skill: tSkill,\r\n  character: tProcessedCharacter,\r\n): string => {\r\n  const perfectKeys = getPerfectKeys(skill)\r\n  const rawDamage = getSkillDamage(skill, character)\r\n\r\n  return perfectKeys.reduce((res, key, i) => {\r\n    let pre = `${res}${i > 0 ? ',' : ''}`\r\n    const text = PERFECT_DISPLAY_INFO[key]\r\n    switch (key) {\r\n      case 'splash':\r\n        return `${pre} ${Math.floor(skill.splashDamageModifier * 100)}% ${text}`\r\n      case 'heal':\r\n        return `${pre} ${text} ${character.stats.consumableHealthGainOffset} HP`\r\n      default:\r\n        return `${pre} ${text}`\r\n    }\r\n  }, '')\r\n}\r\n","import React from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { getSkillDamage, getPerfectText } from '../../game/Skill/util'\r\nimport { getChecksProbability } from '../../game/Roll/util'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface SkillPreviewPropsT {\r\n  skill: tSkill\r\n  source: tProcessedCharacter\r\n  targets?: tProcessedCharacter[]\r\n}\r\nexport const SkillPreview = (props: SkillPreviewPropsT) => {\r\n  const { skill, source, targets } = props\r\n  const perfectChance = getChecksProbability(\r\n    source,\r\n    Array(skill.rolls)\r\n      .fill(null)\r\n      .map((_, i) => ({ key: source.weapon.stat, offset: skill.offset })),\r\n  )\r\n  const stat = skill.weaponStatOverride || source.weapon.stat\r\n  const damage = getSkillDamage(skill, source)\r\n  const perfectKeys = getPerfectText(skill, source)\r\n  if (damage.value === 0) {\r\n    console.log('ZERO DAMGE', skill.name, skill, source)\r\n  }\r\n  return (\r\n    <BoxContainer\r\n      style={{ marginTop: 30, position: 'relative', minWidth: 300 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <FlexContainer $direction='column' style={{ alignItems: 'center' }}>\r\n        <FlexContainer style={{ marginTop: -27 }}>\r\n          <FullContainer />\r\n          <BoxContainer\r\n            substyle={{\r\n              padding: '4px 12px',\r\n              background: Theme.lightBgColor,\r\n              letterSpacing: '1px',\r\n              fontFamily: 'Bangers',\r\n            }}\r\n          >\r\n            {skill.name}\r\n          </BoxContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n        <span\r\n          style={{\r\n            color: 'rgba(255,255,255,0.4)',\r\n            marginTop: 8,\r\n            marginBottom: 8,\r\n          }}\r\n        >\r\n          Perfect ({Math.floor(perfectChance * 100)}%){' '}\r\n          {perfectKeys.length > 0 && '='} {perfectKeys}\r\n        </span>\r\n        <FlexContainer $full style={{ width: '100%', marginBottom: 8 }}>\r\n          {damage.value > 0 && skill.damage && (\r\n            <FlexContainer\r\n              $full\r\n              $direction='column'\r\n              style={{ alignItems: 'center', marginRight: 10 }}\r\n            >\r\n              <span\r\n                style={{\r\n                  color: damage.type === 'physical' ? 'lightblue' : 'plum',\r\n                  fontFamily: 'New Rocker',\r\n                  fontSize: 32,\r\n                }}\r\n              >\r\n                {`${Math.floor(damage.value)}`}\r\n              </span>\r\n              <span style={{ color: 'rgba(255,255,255,0.2)' }}>Max DMG</span>\r\n            </FlexContainer>\r\n          )}\r\n          {skill.rolls > 0 && (\r\n            <FlexContainer\r\n              $full\r\n              $direction='column'\r\n              style={{ alignItems: 'center' }}\r\n            >\r\n              <span\r\n                style={{\r\n                  fontFamily: 'New Rocker',\r\n                  fontSize: 32,\r\n                }}\r\n              >\r\n                {source.stats[stat] + skill.offset}%\r\n              </span>\r\n              <span style={{ color: 'rgba(255,255,255,0.2)' }}>\r\n                Per Check ACC\r\n              </span>\r\n            </FlexContainer>\r\n          )}\r\n        </FlexContainer>\r\n        <FlexContainer style={{ marginBottom: -18 }}>\r\n          <FullContainer />\r\n          <BoxContainer\r\n            substyle={{\r\n              padding: '0px 12px',\r\n              background: Theme.lightBgColor,\r\n              fontWeight: 'bolder',\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            {skill.targetType} target\r\n          </BoxContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Color from 'color'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { StatsPreview } from '../StatsPreview'\r\nimport { Button } from '../../elements/button'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { Icon } from '../Icon'\r\nimport { WEAPON_TYPE_ICONS } from '../../icons/maps'\r\nimport Hands from '../../icons/svg/lorc/hand.svg'\r\nimport Ranged from '../../icons/svg/delapouite/arrow-wings.svg'\r\nimport Melee from '../../icons/svg/lorc/battered-axe.svg'\r\nimport { FakeLink } from '../../elements/typography'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { SkillPreview } from '../SkillPreview'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\n\r\nexport const getDamageColor = (weapon: tWeapon) => {\r\n  if (weapon.damage.type === 'physical') return 'lightblue'\r\n  if (weapon.damage.type === 'magic') return 'plum'\r\n  return 'white'\r\n}\r\n\r\nexport interface WeaponPreviewPropsT {\r\n  character?: tProcessedCharacter\r\n  weapon: tWeapon\r\n  showEquipButton?: boolean\r\n  showBuyButton?: boolean\r\n  cost?: number\r\n  onEquipClick?: () => void\r\n  onBuyClick?: () => void\r\n}\r\nexport const WeaponPreview = (props: WeaponPreviewPropsT) => {\r\n  const {\r\n    character,\r\n    weapon,\r\n    showEquipButton,\r\n    showBuyButton,\r\n    cost = 0,\r\n    onEquipClick,\r\n    onBuyClick,\r\n  } = props\r\n  const basicAttack = weapon.skills[0]\r\n  const rarityColor = ITEM_RARITY_COLORS[weapon.rarity]\r\n  const from = Color(rarityColor).darken(0.5).rgb().toString()\r\n  const to = Color(rarityColor).darken(0.7).rgb().toString()\r\n  const gradient = `linear-gradient(180deg, ${from} 0%, ${to} 100%)`\r\n  return (\r\n    <BoxContainer style={{ width: 240 }} substyle={{ background: gradient }}>\r\n      <FlexContainer $direction='column'>\r\n        {basicAttack && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginBottom: 10 }}>\r\n            <FlexContainer $full style={{ alignItems: 'center' }}>\r\n              <Icon\r\n                src={weapon.damage.range === 'melee' ? Melee : Ranged}\r\n                size={16}\r\n              />\r\n            </FlexContainer>\r\n            {Array(basicAttack.rolls)\r\n              .fill(null)\r\n              .map((_, i) => (\r\n                <SkillCheck\r\n                  check={{ label: weapon.stat, result: true }}\r\n                  size={18}\r\n                  padding={4}\r\n                  skill={weapon.skills[0]}\r\n                />\r\n              ))}\r\n            <FlexContainer\r\n              $full\r\n              style={{\r\n                fontSize: 18,\r\n                justifyContent: 'flex-end',\r\n                fontWeight: 'bolder',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Icon\r\n                size={16}\r\n                src={Hands}\r\n                fill='rgba(255,255,255,0.8)'\r\n                style={{ marginRight: 4 }}\r\n              />\r\n              {weapon.twoHand && '2'}\r\n              {!weapon.twoHand && '1'}\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        )}\r\n        <FlexContainer style={{ alignItems: 'center' }}>\r\n          <Icon\r\n            src={WEAPON_TYPE_ICONS[weapon.type]}\r\n            size={32}\r\n            style={{ marginRight: 10 }}\r\n            shadow\r\n          />\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              margin: '8px 0',\r\n              textShadow: '1px 1px 2px rgba(0,0,0,0.8)',\r\n              textAlign: 'left',\r\n            }}\r\n          >\r\n            <span style={{ fontWeight: 600 }}>{weapon.name}</span>\r\n            <span style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n              {weapon.rarity} {weapon.type}\r\n            </span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n\r\n          {showEquipButton && (\r\n            <div style={{ marginLeft: 10 }}>\r\n              <Button onClick={onEquipClick} style={{ padding: 4 }}>\r\n                Equip\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </FlexContainer>\r\n        <BoxContainer\r\n          substyle={{\r\n            background: 'rgba(0,0,0,0.7)',\r\n            minHeight: 120,\r\n            textAlign: 'left',\r\n          }}\r\n        >\r\n          <FlexContainer $direction='column'>\r\n            <FlexContainer style={{ lineHeight: '24px', marginBottom: 4 }}>\r\n              <span\r\n                style={{\r\n                  color: getDamageColor(weapon),\r\n                  fontWeight: 'bolder',\r\n                  marginRight: 8,\r\n                  fontSize: 24,\r\n                }}\r\n              >\r\n                {weapon.damage.value}\r\n              </span>\r\n              <span style={{ textTransform: 'capitalize' }}>\r\n                {weapon.damage.type} Damage\r\n              </span>\r\n            </FlexContainer>\r\n            <span style={{ color: 'plum', marginBottom: 8, display: 'flex' }}>\r\n              {weapon.skills.map((skill, i) => (\r\n                <>\r\n                  {i > 0 ? ', ' : ''}\r\n                  <HoverToolTip\r\n                    direction='down'\r\n                    content={\r\n                      character ? (\r\n                        <SkillPreview skill={skill} source={character} />\r\n                      ) : (\r\n                        <div />\r\n                      )\r\n                    }\r\n                  >\r\n                    <FakeLink style={{ paddingLeft: i === 0 ? 0 : 4 }}>\r\n                      {skill.name}\r\n                    </FakeLink>\r\n                  </HoverToolTip>\r\n                </>\r\n              ))}\r\n            </span>\r\n            <StatsPreview stats={weapon.stats} />\r\n            {weapon.immunities.map((status) => (\r\n              <span style={{ textTransform: 'capitalize', fontSize: 14 }}>\r\n                {status} immunity\r\n              </span>\r\n            ))}\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        {showBuyButton && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginTop: 10 }}>\r\n            <Button onClick={onBuyClick} style={{ padding: '4px 16px' }}>\r\n              Buy ({cost || 0})\r\n            </Button>\r\n          </FlexContainer>\r\n        )}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Color from 'color'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { StatsPreview } from '../StatsPreview'\r\nimport { Icon } from '../Icon'\r\nimport { ARMOR_TYPE_ICONS, CONSUMABLE_ITEM_ICONS } from '../../icons/maps'\r\nimport { Button } from '../../elements/button'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { STAT_KEY_LABELS } from '../../game/Stats/constants'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\n\r\nexport interface ConsumablePreviewPropsT {\r\n  item: tConsumable\r\n  showEquipButton?: boolean\r\n  showBuyButton?: boolean\r\n  cost?: number\r\n  onEquipClick?: () => void\r\n  onBuyClick?: () => void\r\n}\r\nexport const ConsumablePreview = (props: ConsumablePreviewPropsT) => {\r\n  const { item, showBuyButton, cost, onBuyClick } = props\r\n  const rarityColor = ITEM_RARITY_COLORS[item.rarity]\r\n  const from = Color(rarityColor).darken(0.5).rgb().toString()\r\n  const to = Color(rarityColor).darken(0.7).rgb().toString()\r\n  const gradient = `linear-gradient(180deg, ${from} 0%, ${to} 100%)`\r\n  const skill = item.skill\r\n  return (\r\n    <BoxContainer style={{ minWidth: 240 }} substyle={{ background: gradient }}>\r\n      <FlexContainer $direction='column'>\r\n        {skill && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginBottom: 10 }}>\r\n            {Array(skill.rolls)\r\n              .fill(null)\r\n              .map((_, i) => (\r\n                <SkillCheck\r\n                  check={{\r\n                    label: skill.weaponStatOverride || 'strength',\r\n                    result: true,\r\n                  }}\r\n                  size={18}\r\n                  padding={4}\r\n                  skill={skill}\r\n                />\r\n              ))}\r\n          </FlexContainer>\r\n        )}\r\n        <FlexContainer style={{ marginBottom: 8 }}>\r\n          <Icon\r\n            src={CONSUMABLE_ITEM_ICONS[item.id]}\r\n            size={32}\r\n            style={{ marginRight: 10 }}\r\n            shadow\r\n          />\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              textShadow: '1px 1px 2px rgba(0,0,0,0.8)',\r\n            }}\r\n          >\r\n            <span style={{ fontWeight: 600 }}>{item.name}</span>\r\n            <span style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n              {item.rarity}\r\n            </span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n        <BoxContainer\r\n          substyle={{\r\n            background: 'rgba(0,0,0,0.7)',\r\n            minHeight: 120,\r\n            textAlign: 'left',\r\n          }}\r\n        >\r\n          <FlexContainer $direction='column'>\r\n            <span style={{ color: 'plum', marginBottom: 8 }}>{skill.name}</span>\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        {showBuyButton && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginTop: 10 }}>\r\n            <Button onClick={onBuyClick} style={{ padding: '4px 16px' }}>\r\n              Buy ({cost || 0})\r\n            </Button>\r\n          </FlexContainer>\r\n        )}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ArmorPreview } from '../ArmorPreview'\r\nimport { WeaponPreview } from '../WeaponPreview'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { ConsumablePreview } from '../ConsumablePreview'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\n\r\nexport interface ItemPreviewPropsT {\r\n  item: tWeapon | tArmor | tConsumable\r\n}\r\n\r\nexport const ItemPreivew = (props: ItemPreviewPropsT) => {\r\n  const { item } = props\r\n\r\n  if (item.itemType === 'armor') return <ArmorPreview armor={item as tArmor} />\r\n  if (item.itemType === 'weapon')\r\n    return <WeaponPreview weapon={item as tWeapon} />\r\n  if (item.itemType === 'consumable') {\r\n    return <ConsumablePreview item={item as tConsumable} />\r\n  }\r\n  return <div />\r\n}\r\n","import React, { useMemo, useEffect, useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport Gold from '../../icons/svg/delapouite/coins.svg'\r\nimport XP from '../../icons/svg/lorc/laurel-crown.svg'\r\nimport { Icon } from '../Icon'\r\nimport { ItemPreivew } from '../ItemPreview'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { consolidateRewards } from '../../game/Other/util'\r\nimport { commitRewards } from '../../game/Party/util'\r\nimport { tEncounterReward } from '../../game/Encounter/type'\r\n\r\nexport interface CombatVictoryModalPropsT {\r\n  rewards: tEncounterReward[]\r\n}\r\n\r\nexport const CombatVictoryModal = (props: CombatVictoryModalPropsT) => {\r\n  const { rewards } = props\r\n  const { rawParty, updateParty } = usePartyContext()\r\n  const { nextLevel } = useGameStateContext()\r\n  const { close } = useModalContext()\r\n  const consolidatedRewards = useMemo(() => consolidateRewards(rewards), [\r\n    rewards,\r\n  ])\r\n\r\n  const [items, setItems] = useState(consolidatedRewards.items)\r\n  const first = items[0]\r\n  const next = () => {\r\n    if (\r\n      (items.length === 1 && consolidatedRewards.items.length > 0) ||\r\n      consolidatedRewards.items.length === 0\r\n    ) {\r\n      close()\r\n      nextLevel()\r\n    } else {\r\n      setItems((i) => {\r\n        const [first, ...rest] = i\r\n        return rest\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateParty(commitRewards(rawParty, consolidatedRewards))\r\n  }, [])\r\n\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ textAlign: 'center', minHeight: 420 }}\r\n    >\r\n      <h1>You Win!</h1>\r\n      <FlexContainer $direction='column' style={{ color: 'white' }}>\r\n        <FlexContainer style={{ marginBottom: 16 }}>\r\n          <FlexContainer>\r\n            <Icon src={Gold} size={18} style={{ marginRight: 8 }} />\r\n            <span>{consolidatedRewards.gold} Gold</span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n          <FlexContainer>\r\n            <Icon src={XP} size={18} style={{ marginRight: 8 }} />\r\n            <span>{consolidatedRewards.xp} XP</span>\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n        {first && (\r\n          <FlexContainer style={{ marginBottom: 16 }}>\r\n            <FullContainer />\r\n            <FlexContainer $direction='column'>\r\n              <ItemPreivew item={first} />\r\n              <span\r\n                style={{\r\n                  marginTop: 8,\r\n                  color: 'rgba(255,255,255,0.3)',\r\n                  fontWeight: 'bold',\r\n                  fontSize: 12,\r\n                }}\r\n              >\r\n                1 of {items.length}\r\n              </span>\r\n            </FlexContainer>\r\n            <FullContainer />\r\n          </FlexContainer>\r\n        )}\r\n      </FlexContainer>\r\n      <FullContainer />\r\n      <Button\r\n        onClick={() => {\r\n          next()\r\n        }}\r\n      >\r\n        {items.length === 0 ? 'Close' : 'Next'}\r\n      </Button>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { tEncounterReward } from '../Encounter/type'\r\nimport { ZERO_REWARD } from '../Encounter/constants'\r\n\r\nexport const consolidateRewards = (\r\n  rewards: tEncounterReward[],\r\n): tEncounterReward => {\r\n  return rewards.reduce((res, reward) => {\r\n    return {\r\n      gold: res.gold + reward.gold,\r\n      xp: res.xp + reward.xp,\r\n      items: [...res.items, ...reward.items],\r\n      status: [...res.status, ...reward.status],\r\n      immunities: [...res.immunities, ...reward.immunities],\r\n    }\r\n  }, ZERO_REWARD)\r\n}\r\n","import { tQueue } from './type'\r\nimport { tProcessedCharacter, tCharacter } from '../Character/type'\r\nimport { processCharacter } from '../Character/util'\r\n\r\nconst AGILITY_OFFSET = 120\r\n\r\nexport const makeCombatQueue = (characters: tProcessedCharacter[]): tQueue => {\r\n  const sortedCharacters = characters.sort(\r\n    (a, b) => b.stats.agility - a.stats.agility,\r\n  )\r\n  return validateQueue(\r\n    sortedCharacters.reduce(\r\n      (r, c, i) => ({\r\n        ...r,\r\n        [c.id]: AGILITY_OFFSET / 2 - c.stats.agility,\r\n      }),\r\n      {},\r\n    ),\r\n    characters,\r\n  )\r\n}\r\n\r\nexport const getMax = (queue: tQueue): number => {\r\n  return Object.keys(queue).reduce((r: number, id: string) => {\r\n    if (r < queue[id]) return queue[id]\r\n    return r\r\n  }, Number.NEGATIVE_INFINITY)\r\n}\r\n\r\nexport const getMin = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): number => {\r\n  if (characters.length === 0) throw new Error('track this call down')\r\n  return Object.keys(queue).reduce((min: number, id: string) => {\r\n    if (queue[id] < min) {\r\n      const c = characters.find((c) => c.id === id) as tProcessedCharacter\r\n      if (c.stats.queueConsolidationModifier > 0) {\r\n        return queue[id]\r\n      } else {\r\n        return min\r\n      }\r\n    }\r\n    return min\r\n  }, Number.POSITIVE_INFINITY)\r\n}\r\n\r\nexport const consolidateQueue = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  let min = getMin(queue, characters)\r\n  return Object.keys(queue).reduce((r, id) => {\r\n    const character = characters.find((c) => c.id === id) as tCharacter\r\n    const offset = character.stats.queueConsolidationModifier * min\r\n    return {\r\n      ...r,\r\n      [id]: queue[id] - offset,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const shiftQueue = (\r\n  queue: tQueue,\r\n  character: tProcessedCharacter,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  const ret = consolidateQueue(\r\n    {\r\n      ...queue,\r\n      [character.id]: AGILITY_OFFSET - character.stats.agility,\r\n    },\r\n    characters,\r\n  )\r\n  return ret\r\n}\r\n\r\nexport const getFirst = (queue: tQueue): string => {\r\n  let min = Number.POSITIVE_INFINITY\r\n  let key = Object.keys(queue)[0]\r\n  Object.keys(queue).forEach((id) => {\r\n    if (min > queue[id]) {\r\n      min = queue[id]\r\n      key = id\r\n    }\r\n  })\r\n  return key\r\n}\r\n\r\nexport const validateQueue = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  return consolidateQueue(\r\n    characters.reduce((r, c) => {\r\n      return c.health <= 0 ? r : { ...r, [c.id]: queue[c.id] }\r\n    }, {}),\r\n    characters,\r\n  )\r\n}\r\n\r\nexport const getSortedIds = (queue: tQueue): string[] => {\r\n  return Object.keys(queue).sort((a, b) => queue[a] - queue[b])\r\n}\r\n\r\nexport const commitQueueUpdates = (\r\n  queue: tQueue,\r\n  source: tProcessedCharacter,\r\n  characters: tCharacter[],\r\n): tQueue => {\r\n  const pcs = characters.map((c) => processCharacter(c))\r\n  const shiftedQueue = shiftQueue(queue, source, pcs)\r\n  const ret = validateQueue(\r\n    Object.keys(shiftedQueue).reduce((q, id) => {\r\n      const character = pcs.find((c) => c.id === id)\r\n      return {\r\n        ...q,\r\n        [id]:\r\n          character?.stats?.queueValueSet !== undefined\r\n            ? character?.stats?.queueValueSet\r\n            : shiftedQueue[id],\r\n      }\r\n    }, {}),\r\n    pcs,\r\n  )\r\n  return ret\r\n}\r\n","import { tParty } from '../Party/type'\r\nimport { tCharacter } from '../Character/type'\r\nimport { updateCharacter, getOtherCharacters } from '../Party/util'\r\nimport { tQueue } from '../Queue/type'\r\nimport { tSkillResult, tSkillCommiterResult } from './type'\r\nimport {\r\n  commitDamage,\r\n  addMultipleStatus,\r\n  decrementStatusDurations,\r\n  processCharacter,\r\n} from '../Character/util'\r\nimport { noneg } from '../../util/noneg'\r\nimport { commitQueueUpdates } from '../Queue/util'\r\nimport { PLAYER_PARTY_ID } from '../Party/constants'\r\n\r\nconst partyUpdater = (\r\n  party: tParty,\r\n  characterId: string,\r\n  updater: (c: tCharacter) => tCharacter,\r\n): tParty => {\r\n  return updateCharacter(party, characterId, updater)\r\n}\r\n\r\nexport const commitSkillResults = (\r\n  playerParty: tParty,\r\n  enemyParty: tParty,\r\n  queue: tQueue,\r\n) => (result: tSkillResult): tSkillCommiterResult => {\r\n  const { source } = result.sourceResult\r\n  result.targetResults.forEach((targetResult, index) => {\r\n    const { target } = targetResult\r\n    let sourceParty = [playerParty, enemyParty].find(\r\n      (p) => p.id === source.partyId,\r\n    ) as tParty\r\n    let targetParty = [playerParty, enemyParty].find(\r\n      (p) => p.id === target.partyId,\r\n    ) as tParty\r\n    const localUpdate = (\r\n      p: tParty,\r\n      id: string,\r\n      updater: (c: tCharacter) => tCharacter,\r\n    ) => {\r\n      if (p.id === sourceParty.id) {\r\n        sourceParty = partyUpdater(p, id, updater)\r\n        return\r\n      }\r\n      if (p.id === targetParty.id) {\r\n        targetParty = partyUpdater(p, id, updater)\r\n        return\r\n      }\r\n      throw new Error('bad party id')\r\n    }\r\n\r\n    // commit main damage\r\n    localUpdate(targetParty, target.id, (c) => {\r\n      return commitDamage(\r\n        c,\r\n        targetResult.totalDamage,\r\n        targetResult.ignoreResistance,\r\n      )\r\n    })\r\n\r\n    // commit main status\r\n    localUpdate(targetParty, target.id, (c) => {\r\n      return addMultipleStatus(c, targetResult.addedStatus)\r\n    })\r\n\r\n    // comit main heal\r\n    if (targetResult.skill.healing) {\r\n      localUpdate(targetParty, target.id, (c) => {\r\n        return {\r\n          ...c,\r\n          healthOffset: c.healthOffset - c.stats.consumableHealthGainOffset,\r\n          consumables: c.consumables.filter(\r\n            (i) => i.id !== targetResult.skill.consumableId,\r\n          ),\r\n        }\r\n      })\r\n    }\r\n\r\n    // commit splash damage\r\n    if (targetResult.splashDamage.value > 0) {\r\n      getOtherCharacters(targetParty, target.id).forEach((character) => {\r\n        localUpdate(targetParty, character.id, (c) => {\r\n          return commitDamage(c, targetResult.splashDamage, false)\r\n        })\r\n      })\r\n    }\r\n\r\n    // commit reflected damage\r\n    if (targetResult.reflectedDamage.value > 0) {\r\n      localUpdate(sourceParty, source.id, (c) => {\r\n        return commitDamage(c, targetResult.reflectedDamage, false)\r\n      })\r\n    }\r\n\r\n    // commet end-of-round actions\r\n    if (index === result.targetResults.length - 1) {\r\n      // source health regen\r\n      localUpdate(sourceParty, source.id, (c) => {\r\n        const pc = processCharacter(c)\r\n        return {\r\n          ...c,\r\n          healthOffset: noneg(c.healthOffset - pc.stats.healthRegeneration),\r\n        }\r\n      })\r\n    }\r\n\r\n    if (sourceParty.id === PLAYER_PARTY_ID) {\r\n      playerParty = sourceParty\r\n    } else {\r\n      enemyParty = sourceParty\r\n    }\r\n    if (targetParty.id === PLAYER_PARTY_ID) {\r\n      if (sourceParty.id !== targetParty.id) {\r\n        playerParty = targetParty\r\n      }\r\n    } else {\r\n      enemyParty = targetParty\r\n    }\r\n  })\r\n\r\n  return {\r\n    playerParty: {\r\n      ...playerParty,\r\n      characters: playerParty.characters.map((c) =>\r\n        decrementStatusDurations(c),\r\n      ),\r\n    },\r\n    enemyParty: {\r\n      ...enemyParty,\r\n      characters: enemyParty.characters.map((c) => decrementStatusDurations(c)),\r\n    },\r\n    queue: commitQueueUpdates(queue, source, [\r\n      ...playerParty.characters,\r\n      ...enemyParty.characters,\r\n    ]),\r\n  }\r\n}\r\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n} from 'react'\r\nimport { usePartyContext } from '../PartyContext'\r\nimport { v4 } from 'uuid'\r\nimport { useHistory } from 'react-router'\r\nimport { useModalContext } from '../ModalContext'\r\nimport { CombatVictoryModal } from '../../components/CombatVictoryModal'\r\nimport { tProcessedParty, tParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tSkill, tSkillResult, tSkillTarget } from '../../game/Skill/type'\r\nimport { tQueue } from '../../game/Queue/type'\r\nimport {\r\n  processParty,\r\n  makeParty,\r\n  getRolledRewards,\r\n} from '../../game/Party/util'\r\nimport {\r\n  processCharacter,\r\n  makeCharacter,\r\n  removeTemporaryStatus,\r\n} from '../../game/Character/util'\r\nimport { makeCombatQueue, getFirst } from '../../game/Queue/util'\r\nimport {\r\n  makeSkillTarget,\r\n  resolveSkillTarget,\r\n  getSkillResult,\r\n} from '../../game/Skill/util'\r\nimport { commitSkillResults } from '../../game/Skill/committer'\r\nimport { getAIAction } from '../../game/AI/util'\r\n\r\nexport interface CombatContextT {\r\n  party: tProcessedParty\r\n  enemyParty: tProcessedParty\r\n  activeCharacter: tProcessedCharacter\r\n  characters: tProcessedCharacter[]\r\n  queue: tQueue\r\n  selectedSkill: tSkill | undefined\r\n  selectedTargets: tProcessedCharacter[]\r\n  selectedConsumableIndex: number | undefined\r\n  roundResults: tSkillResult[]\r\n  activeRound: tSkillResult | undefined\r\n  isRunning: boolean\r\n  isRenderingResult: boolean\r\n  onSkillSelect: (skill: tSkill, consumableIndex?: number) => void\r\n  onTargetsSelect: (target: tProcessedCharacter | tProcessedParty) => void\r\n  onConsumableSelect: (consumableIndex: number | undefined) => void\r\n  reset: () => void\r\n  start: () => void\r\n  next: (nextTarget?: tProcessedCharacter | tProcessedParty) => void\r\n  commit: () => void\r\n}\r\nconst defaultValue: CombatContextT = {\r\n  party: processParty(makeParty()),\r\n  enemyParty: processParty(makeParty()),\r\n  activeCharacter: processCharacter(makeCharacter('blacksmith')),\r\n  characters: [],\r\n  queue: {},\r\n  selectedSkill: undefined,\r\n  selectedTargets: [],\r\n  selectedConsumableIndex: undefined,\r\n  roundResults: [],\r\n  activeRound: undefined,\r\n  isRunning: false,\r\n  isRenderingResult: false,\r\n  onSkillSelect: (skill: tSkill) => {},\r\n  onTargetsSelect: (target: tProcessedCharacter | tProcessedParty) => {},\r\n  onConsumableSelect: (consumableIndex) => {},\r\n  reset: () => {},\r\n  start: () => {},\r\n  next: () => {},\r\n  commit: () => {},\r\n}\r\nexport const CombatContext = createContext<CombatContextT>(defaultValue)\r\nexport const useCombatContext = () => useContext(CombatContext)\r\n\r\nexport interface CombatContextProviderPropsT {\r\n  children: JSX.Element\r\n  enemyParty: tParty\r\n  setEnemyParty: (party: tParty) => void\r\n  onRequestNewParty: () => void\r\n}\r\nexport const CombatContextProvider = (props: CombatContextProviderPropsT) => {\r\n  const { children, setEnemyParty, onRequestNewParty } = props\r\n  const { party, rawParty, updateParty } = usePartyContext()\r\n  const { open } = useModalContext()\r\n  const history = useHistory()\r\n  const enemyParty = useMemo(() => processParty(props.enemyParty), [\r\n    props.enemyParty,\r\n  ])\r\n  const [isRunning, setIsRunning] = useState<boolean>(false)\r\n  const [isRenderingResult, setIsRenderingResult] = useState<boolean>(false)\r\n  const characters = useMemo(\r\n    () => [...party.characters, ...enemyParty.characters],\r\n    [party, enemyParty],\r\n  )\r\n  const [queue, setQueue] = useState<tQueue>(\r\n    makeCombatQueue([...party.characters, ...enemyParty.characters]),\r\n  )\r\n  const resultCommitter = useMemo(\r\n    () => commitSkillResults(rawParty, props.enemyParty, queue),\r\n    [rawParty, props.enemyParty, queue],\r\n  )\r\n  const [roundId, setRoundId] = useState<string>(v4())\r\n  const [roundResults, setRoundResults] = useState<tSkillResult[]>([])\r\n  const [activeRound, setActiveRound] = useState<tSkillResult | undefined>()\r\n  const [selectedTarget, setSelectedTarget] = useState<\r\n    tSkillTarget | undefined\r\n  >()\r\n  const [selectedSkill, setSelectedSkill] = useState<tSkill | undefined>()\r\n  const [selectedConsumableIndex, setSelectedConsumableIndex] = useState<\r\n    number | undefined\r\n  >()\r\n  const activeCharacter = useMemo(\r\n    () =>\r\n      characters.find(\r\n        (c) => c.health > 0 && c.id === getFirst(queue),\r\n      ) as tProcessedCharacter,\r\n    [queue, characters],\r\n  )\r\n\r\n  const start = () => {\r\n    setIsRunning(true)\r\n    setQueue(makeCombatQueue([...party.characters, ...enemyParty.characters]))\r\n    setRoundId(v4())\r\n    setActiveRound(undefined)\r\n    setIsRenderingResult(false)\r\n  }\r\n\r\n  const reset = () => {\r\n    onRequestNewParty()\r\n    setIsRunning(false)\r\n    setActiveRound(undefined)\r\n    setSelectedSkill(undefined)\r\n    setSelectedTarget(undefined)\r\n    setSelectedConsumableIndex(undefined)\r\n    setIsRenderingResult(false)\r\n    setQueue({})\r\n  }\r\n\r\n  const next = (nextTarget?: tProcessedCharacter | tProcessedParty) => {\r\n    if (!selectedSkill) return\r\n    const roundTarget = nextTarget\r\n      ? makeSkillTarget(selectedSkill.targetType, nextTarget)\r\n      : selectedTarget\r\n    if (!selectedSkill || !roundTarget) return\r\n    const results = getSkillResult(\r\n      activeCharacter,\r\n      resolveSkillTarget(roundTarget).filter((c) => c.health > 0),\r\n      selectedSkill,\r\n    )\r\n    setActiveRound(results)\r\n    setSelectedSkill(undefined)\r\n    setSelectedTarget(undefined)\r\n    setSelectedConsumableIndex(undefined)\r\n    setIsRenderingResult(true)\r\n  }\r\n\r\n  const onSkillSelect = (skill: tSkill, consumableIndex?: number) => {\r\n    setSelectedSkill(skill)\r\n    if (consumableIndex !== undefined) {\r\n      setSelectedConsumableIndex(consumableIndex)\r\n    }\r\n    if (skill.targetType !== selectedSkill?.targetType) {\r\n      setSelectedTarget(undefined)\r\n    }\r\n  }\r\n\r\n  const onTargetsSelect = (target: tProcessedCharacter | tProcessedParty) => {\r\n    if (!selectedSkill) return\r\n    setSelectedTarget(makeSkillTarget(selectedSkill.targetType, target))\r\n  }\r\n\r\n  const completeRound = () => {\r\n    setRoundId(v4())\r\n    setActiveRound(undefined)\r\n    setIsRenderingResult(false)\r\n  }\r\n\r\n  const commit = useCallback(() => {\r\n    if (!activeRound) return\r\n    const result = resultCommitter(activeRound)\r\n    setRoundResults((r) => [...r, activeRound])\r\n    setEnemyParty(result.enemyParty)\r\n    updateParty(result.playerParty)\r\n    setQueue(result.queue)\r\n\r\n    completeRound()\r\n  }, [activeRound, queue])\r\n\r\n  const execEnemyTurn = (skill: tSkill, target: tSkillTarget) => {\r\n    const result = getSkillResult(\r\n      activeCharacter,\r\n      resolveSkillTarget(target),\r\n      skill,\r\n    )\r\n    setActiveRound(result)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activeCharacter && isRunning) {\r\n      if (activeCharacter.partyId === enemyParty.id) {\r\n        const { skill, target } = getAIAction(\r\n          activeCharacter,\r\n          party,\r\n          enemyParty,\r\n        )\r\n        execEnemyTurn(skill, makeSkillTarget(skill.targetType, target))\r\n      } else {\r\n        setSelectedSkill(activeCharacter.skills[0])\r\n      }\r\n    }\r\n  }, [roundId])\r\n\r\n  useEffect(() => {\r\n    if (!isRunning) return\r\n    if (enemyParty.characters.every((c) => c.health <= 0)) {\r\n      setIsRunning(false)\r\n      const rewards = getRolledRewards(\r\n        enemyParty,\r\n        party.characters.reduce((p, c) =>\r\n          p.stats.luck > c.stats.luck ? p : c,\r\n        ),\r\n      )\r\n      updateParty({\r\n        ...rawParty,\r\n        characters: rawParty.characters.map((c) => removeTemporaryStatus(c)),\r\n      })\r\n      open(<CombatVictoryModal rewards={rewards} />, {}, true)\r\n      return\r\n    }\r\n    if (party.characters.every((c) => c.health <= 0)) {\r\n      setIsRunning(false)\r\n      alert('you lose')\r\n      history.push('/JSFTK_combat/')\r\n      return\r\n    }\r\n  }, [party, enemyParty])\r\n\r\n  return (\r\n    <CombatContext.Provider\r\n      value={{\r\n        party,\r\n        enemyParty,\r\n        characters,\r\n        queue,\r\n        activeCharacter,\r\n        activeRound,\r\n        selectedSkill,\r\n        selectedTargets: selectedTarget\r\n          ? resolveSkillTarget(selectedTarget)\r\n          : [],\r\n        selectedConsumableIndex,\r\n        roundResults,\r\n        isRunning,\r\n        isRenderingResult,\r\n        onSkillSelect,\r\n        onTargetsSelect,\r\n        onConsumableSelect: setSelectedConsumableIndex,\r\n        start,\r\n        next,\r\n        commit,\r\n        reset,\r\n      }}\r\n    >\r\n      {children}\r\n    </CombatContext.Provider>\r\n  )\r\n}\r\n","import { tSkill } from '../Skill/type'\r\nimport { tProcessedCharacter } from '../Character/type'\r\nimport { tProcessedParty } from '../Party/type'\r\nimport { getRandom } from '../../util'\r\nimport { getSkillTargetOptions } from '../Skill/util'\r\n\r\nexport interface tAIAction {\r\n  skill: tSkill\r\n  target: tProcessedCharacter | tProcessedParty\r\n}\r\nexport const getAIAction = (\r\n  source: tProcessedCharacter,\r\n  playerParty: tProcessedParty,\r\n  enemyParty: tProcessedParty,\r\n): tAIAction => {\r\n  const skill = getRandom(source.skills)\r\n  const targetedCharacters = playerParty.characters.filter(\r\n    (c) => c.status.map((t) => t.type).includes('targeted') && c.health > 0,\r\n  )\r\n  const target =\r\n    skill.targetType === 'single'\r\n      ? targetedCharacters.length > 0\r\n        ? getRandom(targetedCharacters)\r\n        : getRandom(playerParty.characters.filter((c) => c.health > 0))\r\n      : getRandom<tProcessedParty | tProcessedCharacter>(\r\n          getSkillTargetOptions(source, enemyParty, playerParty, skill),\r\n        )\r\n\r\n  return { skill, target }\r\n}\r\n","import React from 'react'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\n\r\nexport interface PerfectPropsT {\r\n  show: boolean | undefined\r\n  partyId: string\r\n}\r\nexport const Perfect = (props: PerfectPropsT) => {\r\n  const { show, partyId } = props\r\n  const style = useSpring({ opacity: show ? 1 : 0 })\r\n  return show ? (\r\n    <animated.div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: 0,\r\n        fontSize: 42,\r\n        color: partyId === PLAYER_PARTY_ID ? 'rgba(255,255,255,1)' : '#c95738',\r\n        textShadow: '4px 4px 4px black',\r\n        fontFamily: 'Bangers',\r\n        ...style,\r\n      }}\r\n    >\r\n      Perfect!\r\n    </animated.div>\r\n  ) : null\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport Kefir from 'kefir'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport Color from 'color'\r\nimport { Perfect } from './Perfect'\r\nimport { Theme } from '../../theme'\r\nimport { CHARACTER_CLASS_COLORS } from '../../game/Character/constants'\r\n\r\nexport interface RoundResultRendererPropsT {\r\n  isModal?: boolean\r\n}\r\nexport const RoundResultRenderer = (props: RoundResultRendererPropsT) => {\r\n  const { isModal = true } = props\r\n  const { activeRound, isRunning, commit } = useCombatContext()\r\n  const { open, close } = useModalContext()\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (activeRound && !isOpen && isRunning) {\r\n      setIsOpen(true)\r\n      if (isModal) {\r\n        open(\r\n          <RoundResult\r\n            close={() => {\r\n              close(true)\r\n              setIsOpen(false)\r\n              commit()\r\n            }}\r\n          />,\r\n          {\r\n            overlay: {\r\n              background: 'transparent',\r\n            },\r\n          },\r\n          true,\r\n        )\r\n      }\r\n    }\r\n  }, [isRunning, isModal, isOpen, activeRound, open, close, commit])\r\n\r\n  if (!isModal && activeRound && isRunning) {\r\n    return (\r\n      <FlexContainer style={{ height: 269 }}>\r\n        <RoundResult\r\n          close={() => {\r\n            setIsOpen(false)\r\n            commit()\r\n          }}\r\n        />\r\n      </FlexContainer>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport interface RoundResultPropsT {\r\n  close: () => void\r\n}\r\nexport interface CheckKVT {\r\n  label: string\r\n  result: boolean | undefined\r\n}\r\nexport const RoundResult = (props: RoundResultPropsT) => {\r\n  const { close } = props\r\n  const { activeRound } = useCombatContext()\r\n  const [isDone, setIsDone] = useState(false)\r\n  const round = activeRound?.sourceResult\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n  const [roundResults, setRoundResults] = useState<CheckKVT[]>(\r\n    !round\r\n      ? []\r\n      : round.rollResults.map((result, i) => ({\r\n          label: round.skill.weaponStatOverride || round.source.weapon.stat,\r\n          result: undefined,\r\n        })),\r\n  )\r\n\r\n  const updateRoundResult = (value: CheckKVT, index: number) => {\r\n    setActiveIndex(index)\r\n    setRoundResults((r) => r.map((r, i) => (i === index ? value : r)))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!round) return\r\n    const stream = Kefir.sequentially(\r\n      200,\r\n      roundResults.map((r, i) => ({ ...r, index: i })),\r\n    )\r\n    stream.onValue((result) => {\r\n      updateRoundResult(\r\n        {\r\n          label: result.label,\r\n          result: round.rollResults[result.index],\r\n        },\r\n        result.index,\r\n      )\r\n    })\r\n    stream.onEnd(() => {\r\n      Kefir.later(round.perfect ? 1200 : 900, undefined).onValue(() => {\r\n        setIsDone(true)\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (isDone) {\r\n      close()\r\n    }\r\n  }, [isDone, close])\r\n\r\n  const showPerfect = activeIndex === roundResults.length - 1 && round?.perfect\r\n  const isPlayer = (partyId: string) => partyId === PLAYER_PARTY_ID\r\n  const targetResult = activeRound?.targetResults[0]\r\n  const showTarget =\r\n    round && targetResult && targetResult.target.id !== round.source.id\r\n  if (!round) return null\r\n  const color = Color(\r\n    CHARACTER_CLASS_COLORS[targetResult?.target?.class || 'enemy'],\r\n  )\r\n    .lighten(0.5)\r\n    //.saturate(2)\r\n    .hex()\r\n    .toString()\r\n  return (\r\n    <FlexContainer $direction='column' style={{ textAlign: 'center' }}>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        {roundResults.map((result, i) => (\r\n          <SkillCheck\r\n            key={i}\r\n            check={result}\r\n            perfect={showPerfect}\r\n            skill={round.skill}\r\n            crit={round.criticalHitSuccess}\r\n          />\r\n        ))}\r\n      </FlexContainer>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        <div\r\n          style={{\r\n            marginTop: 40,\r\n            //background: Theme.darkBgColor,\r\n            fontSize: 32,\r\n            padding: '16px 32px',\r\n            color: 'rgba(255,255,255,0.8)',\r\n            //fontWeight: 'bolder',\r\n            textShadow: '1px 1px 1px black',\r\n          }}\r\n        >\r\n          <strong\r\n            style={{\r\n              fontWeight: 'bold',\r\n              color: isPlayer(round.source.partyId)\r\n                ? Color(CHARACTER_CLASS_COLORS[round.source.class])\r\n                    .lighten(1)\r\n                    //.saturate(1)\r\n                    .hex()\r\n                    .toString()\r\n                : Theme.enemyPartyColor,\r\n            }}\r\n          >\r\n            {round.source.name}\r\n          </strong>{' '}\r\n          uses{' '}\r\n          <span style={{ color: 'rgba(255,255,255,0.9)', fontWeight: 'bold' }}>\r\n            {round.skill.name}\r\n          </span>\r\n          {showTarget && (\r\n            <span>\r\n              {' on '}\r\n              <strong\r\n                style={{\r\n                  fontWeight: 'bold',\r\n                  color: isPlayer(targetResult?.target.partyId || '')\r\n                    ? color\r\n                    : Theme.enemyPartyColor,\r\n                }}\r\n              >\r\n                {targetResult?.target.name}\r\n              </strong>\r\n            </span>\r\n          )}\r\n        </div>\r\n      </FlexContainer>\r\n      <Perfect show={showPerfect} partyId={round.source.partyId} />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\n\r\nexport interface UIContextT {\r\n  playerCanEquipItem: boolean\r\n  openCharacterInventoryId: string | undefined\r\n  showSkillTooltips: boolean\r\n  onCharacterConsumableClick: (\r\n    c: tProcessedCharacter,\r\n    index: number,\r\n    item: tConsumable,\r\n  ) => void\r\n  setPlayerCanEquipItem: (v: boolean) => void\r\n  setOpenCharacterInventoryId: (id: string | undefined) => void\r\n  setOnCharacterConsumableClick: (\r\n    fn: (c: tProcessedCharacter, index: number, item: tConsumable) => void,\r\n  ) => void\r\n  setShowSkillTooltips: (v: boolean) => void\r\n}\r\n\r\nconst defaultValue: UIContextT = {\r\n  playerCanEquipItem: false,\r\n  openCharacterInventoryId: undefined,\r\n  showSkillTooltips: false,\r\n  onCharacterConsumableClick: (c, i, item) => {},\r\n  setPlayerCanEquipItem: (v) => {},\r\n  setOpenCharacterInventoryId: (id) => {},\r\n  setOnCharacterConsumableClick: (fn) => {},\r\n  setShowSkillTooltips: (v) => {},\r\n}\r\n\r\nexport const UIContext = React.createContext<UIContextT>(defaultValue)\r\nexport const useUIContext = () => useContext(UIContext)\r\n\r\nexport interface UIContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const UIContextProvider = (props: UIContextProviderPropsT) => {\r\n  const { children } = props\r\n  const [playerCanEquipItem, setPlayerCanEquipItem] = useState(false)\r\n  const [showSkillTooltips, setShowSkillTooltips] = useState(true)\r\n  const [openCharacterInventoryId, setOpenCharacterInventoryId] = useState<\r\n    string | undefined\r\n  >()\r\n  const [onCharacterConsumableClick, _setOnCharacterConsumableClick] = useState<\r\n    (c: tProcessedCharacter, i: number, item: tConsumable) => void\r\n  >((c, i, item) => {})\r\n\r\n  const setOnCharacterConsumableClick = (\r\n    fn: (c: tProcessedCharacter, index: number, item: tConsumable) => void,\r\n  ) => {\r\n    _setOnCharacterConsumableClick(() => fn)\r\n  }\r\n  return (\r\n    <UIContext.Provider\r\n      value={{\r\n        playerCanEquipItem,\r\n        openCharacterInventoryId,\r\n        showSkillTooltips,\r\n        onCharacterConsumableClick,\r\n        setPlayerCanEquipItem,\r\n        setOpenCharacterInventoryId,\r\n        setOnCharacterConsumableClick,\r\n        setShowSkillTooltips,\r\n      }}\r\n    >\r\n      {children}\r\n    </UIContext.Provider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { Button } from '../../elements/button'\r\nimport { SkillPreview } from '../SkillPreview'\r\nimport { SkillChecks } from '../SkillChecks'\r\nimport { SKILL_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Hover } from '../Hover'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { HEAL } from '../../game/Skill/objects/heal'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { Tooltip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Theme } from '../../theme'\r\n\r\nexport const CombatActions = () => {\r\n  const {\r\n    activeCharacter,\r\n    selectedSkill,\r\n    selectedTargets,\r\n    onSkillSelect,\r\n  } = useCombatContext()\r\n\r\n  const { showSkillTooltips } = useUIContext()\r\n\r\n  if (!activeCharacter || activeCharacter.partyId !== PLAYER_PARTY_ID)\r\n    return null\r\n\r\n  const stat = selectedSkill?.weaponStatOverride || activeCharacter.weapon.stat\r\n  const skills = activeCharacter.skills.filter((skill) => {\r\n    if (activeCharacter.healthOffset === 0 && skill.id === HEAL('').id) {\r\n      return false\r\n    } else {\r\n      return true\r\n    }\r\n  })\r\n  return (\r\n    <FlexContainer $direction='column' style={{ minWidth: 340 }}>\r\n      {selectedSkill && <SkillChecks stat={stat} skill={selectedSkill} />}\r\n      <Tooltip\r\n        isOpen={showSkillTooltips}\r\n        direction='left'\r\n        arrow={true}\r\n        background={Theme.darkBgColor}\r\n        content={\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{ padding: 8, color: 'rgba(255,255,255,0.8)' }}\r\n          >\r\n            Choose a skill.\r\n          </FlexContainer>\r\n        }\r\n      >\r\n        <FlexContainer style={{ justifyContent: 'center', minHeight: 42 }}>\r\n          {skills.map((skill) => (\r\n            <React.Fragment key={skill.id}>\r\n              {SKILL_ICONS[skill.id] ? (\r\n                <Hover delay={0}>\r\n                  {({ isHovering }) => (\r\n                    <Icon\r\n                      src={SKILL_ICONS[skill.id]}\r\n                      size={42}\r\n                      shadow={true}\r\n                      style={{\r\n                        cursor: 'pointer',\r\n                        padding: '0 12px',\r\n                      }}\r\n                      onClick={() => {\r\n                        onSkillSelect(skill)\r\n                      }}\r\n                      fill={\r\n                        skill.id === selectedSkill?.id\r\n                          ? 'lightsalmon'\r\n                          : isHovering\r\n                          ? 'white'\r\n                          : 'rgba(255,255,255,0.8)'\r\n                      }\r\n                    />\r\n                  )}\r\n                </Hover>\r\n              ) : (\r\n                <Button\r\n                  key={skill.id}\r\n                  onClick={() => onSkillSelect(skill)}\r\n                  style={{\r\n                    background: Theme.darkBgColor,\r\n                    borderColor:\r\n                      selectedSkill && skill.id === selectedSkill.id\r\n                        ? 'white'\r\n                        : undefined,\r\n                  }}\r\n                >\r\n                  {skill.name}\r\n                </Button>\r\n              )}\r\n            </React.Fragment>\r\n          ))}\r\n        </FlexContainer>\r\n      </Tooltip>\r\n      {selectedSkill && (\r\n        <SkillPreview\r\n          skill={selectedSkill}\r\n          source={activeCharacter}\r\n          targets={selectedTargets}\r\n        />\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport const Monospace = styled('span', () => ({\r\n  fontFamily: 'Inconsolata, monospace',\r\n  fontWeight: 600,\r\n}))\r\nexport const Monodiv = styled('div', () => ({\r\n  fontFamily: 'Inconsolata, monospace',\r\n  fontWeight: 600,\r\n}))\r\n","import { useState, useEffect, useRef } from 'react'\r\n\r\nexport const usePrevious = <T = any>(value: T) => {\r\n  const ref = useRef<T>()\r\n\r\n  useEffect(() => {\r\n    ref.current = value\r\n  }, [value])\r\n\r\n  return ref.current\r\n}\r\n","import { GaugePropsT } from '.'\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { FullContainer } from '../../elements/flex'\r\nimport { Monodiv } from '../../elements/monospace'\r\nimport { Theme } from '../../theme'\r\n\r\nexport const Gauge2 = (props: GaugePropsT) => {\r\n  const { name = '', value, color, height = 30, children, style } = props\r\n  const max = props.max < 1 ? 1 : props.max\r\n  const p = (value / max) * 100\r\n  const percentage = p > 100 ? 100 : p\r\n  const [oldPercentage, setOldPercentage] = useState(percentage)\r\n  useEffect(() => {\r\n    setOldPercentage(percentage)\r\n  }, [percentage])\r\n  return (\r\n    <HoverToolTip\r\n      direction='right'\r\n      content={<BoxContainer>{`${name} (${value} / ${max})`}</BoxContainer>}\r\n    >\r\n      <BoxContainer\r\n        style={{ borderLeft: 'none', ...(style || {}) }}\r\n        substyle={{\r\n          padding: 0,\r\n          background: Theme.lightBgColor,\r\n          height: height - 2,\r\n          position: 'relative',\r\n          border: 'none',\r\n        }}\r\n      >\r\n        <Spring\r\n          from={{ value: oldPercentage || 0 }}\r\n          to={{ value: percentage }}\r\n          config={{ friction: 200, mass: 4, tension: 600 }}\r\n        >\r\n          {(p) => (\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                left: 0,\r\n                boxSizing: 'border-box',\r\n                height: height - 2,\r\n                maxWidth: `${p.value}%`,\r\n                minWidth: `${p.value}%`,\r\n                boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n                textShadow: '1px 1px 1px black',\r\n                backgroundColor: 'rgba(255,255,255,0.5)',\r\n                color: 'white',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n            ></div>\r\n          )}\r\n        </Spring>\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            left: 0,\r\n            boxSizing: 'border-box',\r\n            height: height - 2,\r\n            maxWidth: `${percentage}%`,\r\n            minWidth: `${percentage}%`,\r\n            boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n            textShadow: '1px 1px 1px black',\r\n            backgroundColor: color,\r\n            color: 'white',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          }}\r\n        ></div>\r\n        <FullContainer\r\n          style={{\r\n            position: 'absolute',\r\n            height,\r\n            lineHeight: `${height - 2}px`,\r\n            right: 4,\r\n            top: 0,\r\n            fontSize: 10,\r\n            fontWeight: 'bold',\r\n            overflow: 'hidden',\r\n            textShadow: '0px 0px 3px black',\r\n          }}\r\n        >\r\n          <Monodiv>{children}</Monodiv>\r\n        </FullContainer>\r\n      </BoxContainer>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FullContainer } from '../../elements/flex'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { Monodiv } from '../../elements/monospace'\r\nimport { noneg } from '../../util'\r\nimport { usePrevious } from '../../hooks/usePrevious'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { CHARACTER_XP_MAX } from '../../game/Character/constants'\r\nimport { Gauge2 } from './v2'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface GaugePropsT {\r\n  name?: string\r\n  color: string\r\n  height?: number\r\n  max: number\r\n  value: number\r\n  style?: CSSProperties\r\n  children?: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const Gauge = (props: GaugePropsT) => {\r\n  const { name = '', value, color, height = 30, children, style } = props\r\n  const max = props.max < 1 ? 1 : props.max\r\n  const p = (value / max) * 100\r\n  const percentage = p > 100 ? 100 : p\r\n  const oldPercentage = usePrevious(percentage)\r\n  return (\r\n    <HoverToolTip\r\n      direction='right'\r\n      content={<BoxContainer>{`${name} (${value} / ${max})`}</BoxContainer>}\r\n    >\r\n      <BoxContainer\r\n        style={{ borderLeft: 'none', ...(style || {}) }}\r\n        substyle={{\r\n          padding: 0,\r\n          background: Theme.lightBgColor,\r\n          height: height - 2,\r\n          position: 'relative',\r\n          border: 'none',\r\n        }}\r\n      >\r\n        <Spring\r\n          from={{ value: oldPercentage || 0 }}\r\n          to={{ value: percentage }}\r\n          config={{ friction: 70, mass: 5, tension: 300 }}\r\n        >\r\n          {(p) => (\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                left: 0,\r\n                boxSizing: 'border-box',\r\n                height: height - 2,\r\n                maxWidth: `${p.value}%`,\r\n                minWidth: `${p.value}%`,\r\n                boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n                textShadow: '1px 1px 1px black',\r\n                backgroundColor: color,\r\n                color: 'white',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n            ></div>\r\n          )}\r\n        </Spring>\r\n        <FullContainer\r\n          style={{\r\n            position: 'absolute',\r\n            height,\r\n            lineHeight: `${height - 2}px`,\r\n            right: 4,\r\n            top: 0,\r\n            fontSize: 10,\r\n            fontWeight: 'bold',\r\n            overflow: 'hidden',\r\n            textShadow: '0px 0px 3px black',\r\n          }}\r\n        >\r\n          <Monodiv>{children}</Monodiv>\r\n        </FullContainer>\r\n      </BoxContainer>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface HealthGaugePropsT {\r\n  character: tProcessedCharacter\r\n  height?: number\r\n  style?: CSSProperties\r\n}\r\nexport const HealthGauge = (props: HealthGaugePropsT) => {\r\n  const { character, height = 12, style } = props\r\n  const health = noneg(character.health)\r\n  return (\r\n    <Gauge2\r\n      name='Health'\r\n      color='rgb(153, 82, 81)'\r\n      max={character.maxHealth}\r\n      value={health}\r\n      height={height}\r\n      style={style}\r\n    >\r\n      {health}/{character.maxHealth}\r\n    </Gauge2>\r\n  )\r\n}\r\nexport interface XPGaugePropsT {\r\n  character: tProcessedCharacter\r\n  style?: CSSProperties\r\n}\r\nexport const XPGauge = (props: HealthGaugePropsT) => {\r\n  const { character, style } = props\r\n  const value = character.experience\r\n  const max = CHARACTER_XP_MAX[character.level]\r\n  return (\r\n    <Gauge\r\n      name='XP'\r\n      color='#5e8575'\r\n      max={max}\r\n      value={value}\r\n      height={12}\r\n      style={style}\r\n    >\r\n      {value}/{max}\r\n    </Gauge>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Tooltip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STATUS_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { tStatus } from '../../game/Status/type'\r\nimport { STATUS_CONFIG } from '../../game/Status/constants'\r\n\r\nexport interface TagPreviewPropsT {\r\n  status: tStatus\r\n  immunity?: boolean\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n}\r\nexport const TagPreview = (props: TagPreviewPropsT) => {\r\n  const { status, direction, immunity } = props\r\n  const statusConfig = STATUS_CONFIG[status.type]\r\n  return (\r\n    <Tooltip\r\n      direction={direction || 'bottom'}\r\n      content={\r\n        <BoxContainer style={{ maxWidth: 200 }}>\r\n          <FlexContainer $direction='column'>\r\n            <strong style={{ marginBottom: statusConfig.description ? 8 : 0 }}>\r\n              {status.type} {immunity && 'immunity'}{' '}\r\n              {status.duration > 0 ? `(${status.duration})` : ''}\r\n            </strong>\r\n            {statusConfig.description && (\r\n              <>{!immunity && <span>{statusConfig.description}</span>}</>\r\n            )}\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n      }\r\n    >\r\n      <Icon\r\n        shadow\r\n        src={STATUS_ICONS[status.type] || ''}\r\n        size={20}\r\n        fill={immunity ? 'red' : 'white'}\r\n        style={{ marginLeft: 4 }}\r\n      />\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { tProcessedCharacter } from '../game/Character/type'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\n\r\nexport const usePlayerCharacterNotifications = (\r\n  character: tProcessedCharacter,\r\n  push: (c: JSX.Element, type?: string) => void,\r\n) => {\r\n  const health = character.health\r\n  const level = character.level\r\n  const { roundResults } = useCombatContext()\r\n  const [previousHealth, setPreviousHealth] = useState(health)\r\n  const [previousLevel, setPreviousLevel] = useState(level)\r\n  useEffect(() => {\r\n    const healthDiff = previousHealth - health\r\n    if (healthDiff > 0) {\r\n      push(<span style={{ fontFamily: 'Bangers' }}>- {healthDiff}</span>)\r\n    }\r\n    if (healthDiff < 0) {\r\n      push(\r\n        <span style={{ fontFamily: 'Bangers' }}>+ {Math.abs(healthDiff)}</span>,\r\n        'good',\r\n      )\r\n    }\r\n    if (level > previousLevel) {\r\n      push(\r\n        <span style={{ fontFamily: 'Bangers', fontSize: 36 }}>Level Up!</span>,\r\n        'good',\r\n      )\r\n    }\r\n    setPreviousLevel(level)\r\n    setPreviousHealth(health)\r\n  }, [health, level])\r\n\r\n  useEffect(() => {\r\n    const lastRound = roundResults[roundResults.length - 1]\r\n    if (lastRound) {\r\n      const chResult = lastRound.targetResults.find(\r\n        (r) => r.target.id === character.id,\r\n      )\r\n      if (chResult) {\r\n        if (chResult.dodgeSuccess) {\r\n          push(<span style={{ fontFamily: 'Bangers' }}>Dodged!</span>, 'base')\r\n        }\r\n        if (\r\n          !chResult.dodgeSuccess &&\r\n          chResult.accuracySuccess &&\r\n          chResult.skill.damage &&\r\n          chResult.loggedDamgge.value <= 0\r\n        ) {\r\n          push(<span style={{ fontFamily: 'Bangers' }}>Blocked!</span>, 'base')\r\n        }\r\n        if (chResult.addedStatus.length > 0) {\r\n          chResult.addedStatus.forEach((status) => {\r\n            push(\r\n              <span style={{ fontFamily: 'Bangers' }}>{status}</span>,\r\n              'base',\r\n            )\r\n          })\r\n        }\r\n        if (chResult.perfect && chResult.skill.perfectPierce) {\r\n          push(<span style={{ fontFamily: 'Bangers' }}>Pierced!</span>, 'base')\r\n        }\r\n        if (chResult.criticalHitSuccess) {\r\n          push(<span style={{ fontFamily: 'Bangers' }}>Critical!</span>, 'base')\r\n        }\r\n      }\r\n      if (\r\n        lastRound.sourceResult.source.id === character.id &&\r\n        !lastRound.sourceResult.accuracySuccess\r\n      ) {\r\n        push(<span style={{ fontFamily: 'Bangers' }}>Missed!</span>, 'base')\r\n      }\r\n    }\r\n  }, [roundResults])\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { noneg } from '../../util'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { usePlayerCharacterNotifications } from '../../hooks/usePlayerCharacterNotifications'\r\n\r\nexport interface HealthPropsT {\r\n  character: tProcessedCharacter\r\n  push: (content: JSX.Element, type?: string) => void\r\n}\r\nexport const Health = (props: HealthPropsT) => {\r\n  const { character, push } = props\r\n  const health = noneg(character.health)\r\n  const [previousHealth, setPreviousHealth] = useState(character.health)\r\n  usePlayerCharacterNotifications(character, push)\r\n\r\n  useEffect(() => {\r\n    setPreviousHealth(health)\r\n  }, [health])\r\n\r\n  return (\r\n    <span\r\n      style={{\r\n        fontSize: 64,\r\n        height: 64,\r\n        width: 60,\r\n        textShadow: '1px 1px 10px black',\r\n        color: '#b55553',\r\n        fontFamily: 'New Rocker',\r\n        userSelect: 'none',\r\n      }}\r\n    >\r\n      <Spring\r\n        from={{ hp: previousHealth || 0 }}\r\n        to={{ hp: health }}\r\n        config={{ friction: 70, mass: 5, tension: 300, clamp: true }}\r\n      >\r\n        {(hpp) => <span>{Math.floor(hpp.hp)}</span>}\r\n      </Spring>\r\n    </span>\r\n  )\r\n}\r\n","import React, {\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useMemo,\r\n  CSSProperties,\r\n} from 'react'\r\nimport { useSpring, animated, useTransition } from 'react-spring'\r\nimport { FullContainer } from '../../elements/flex'\r\nimport { v4 } from 'uuid'\r\n\r\nexport interface LocalToastContextT {\r\n  push: (content: JSX.Element) => void\r\n}\r\nexport const defaultValue: LocalToastContextT = {\r\n  push: (content) => {},\r\n}\r\nexport const LocalToastContext = React.createContext<LocalToastContextT>(\r\n  defaultValue,\r\n)\r\nexport const useLocalToast = () => useContext(LocalToastContext)\r\n\r\nexport interface LocalToastProviderProps {\r\n  children: JSX.Element\r\n}\r\nexport const LocalToastProvider = (props: LocalToastProviderProps) => {\r\n  const { children } = props\r\n  const [queue, setQueue] = useState<\r\n    {\r\n      id: string\r\n      content: JSX.Element\r\n    }[]\r\n  >([])\r\n\r\n  useEffect(() => {\r\n    const i = setInterval(() => {\r\n      setQueue((q) => {\r\n        const [f, ...rest] = q\r\n        return rest || []\r\n      })\r\n    }, 3000)\r\n    return () => {\r\n      clearInterval(i)\r\n    }\r\n  }, [])\r\n\r\n  const push = (c: JSX.Element, type?: string) => {\r\n    setQueue((q) => [\r\n      ...q,\r\n      {\r\n        id: v4(),\r\n        content: c,\r\n        type,\r\n      },\r\n    ])\r\n  }\r\n\r\n  return (\r\n    <LocalToastContext.Provider value={{ push }}>\r\n      <>\r\n        <div style={{ position: 'relative' }}>\r\n          <Toast queue={queue} />\r\n        </div>\r\n        {children}\r\n      </>\r\n    </LocalToastContext.Provider>\r\n  )\r\n}\r\n\r\ninterface ToastQT {\r\n  id: string\r\n  type?: string\r\n  content: JSX.Element\r\n}\r\nexport interface ToastPropsT {\r\n  queue: ToastQT[]\r\n  style?: CSSProperties\r\n}\r\nexport const Toast = (props: ToastPropsT) => {\r\n  const { queue, style } = props\r\n  const hasChildren = queue.length > 0\r\n  const animation = useTransition(queue, (q) => q.id, {\r\n    from: {\r\n      transform: 'translate3d(0,40px,0)',\r\n      maxWidth: 0,\r\n      maxHeight: 0,\r\n      opacity: 0,\r\n    },\r\n    enter: {\r\n      transform: 'translate3d(0,0px,0)',\r\n      maxWidth: 180,\r\n      maxHeight: 40,\r\n      opacity: 1,\r\n    },\r\n    leave: {\r\n      transform: 'translate3d(0,-80px,0)',\r\n      maxWidth: 0,\r\n      maxHeight: 0,\r\n      opacity: 0,\r\n    },\r\n  })\r\n\r\n  return (\r\n    <animated.div\r\n      style={{\r\n        position: 'absolute',\r\n        width: '100%',\r\n        display: 'flex',\r\n        height: 0,\r\n        top: -24,\r\n        zIndex: 3,\r\n        ...(style || {}),\r\n      }}\r\n    >\r\n      {animation.map((item) => (\r\n        <animated.div\r\n          key={item.key}\r\n          style={{\r\n            display: 'flex',\r\n            ...item.props,\r\n          }}\r\n        >\r\n          <FullContainer />\r\n          <div\r\n            style={{\r\n              marginBottom: 4,\r\n              marginRight: 4,\r\n              fontSize: 20,\r\n              padding: 2,\r\n              lineHeight: '20px',\r\n              whiteSpace: 'nowrap',\r\n              background:\r\n                'radial-gradient(circle, rgba(0,0,0,0.3) 0%, rgba(0,0,0,0) 100%)',\r\n              ...color(item.item.type),\r\n            }}\r\n          >\r\n            {item.item.content}\r\n          </div>\r\n          <FullContainer />\r\n        </animated.div>\r\n      ))}\r\n    </animated.div>\r\n  )\r\n}\r\n\r\nexport interface LocalToastRpPropsT {\r\n  children: (props: LocalToastContextT) => JSX.Element\r\n  style?: CSSProperties\r\n}\r\nexport const LocalToastRp = (props: LocalToastRpPropsT) => {\r\n  const { children, style } = props\r\n  const [queue, setQueue] = useState<ToastQT[]>([])\r\n\r\n  const push = (c: JSX.Element, type?: string) => {\r\n    setQueue((q) => [\r\n      ...q,\r\n      {\r\n        id: v4(),\r\n        content: c,\r\n        type,\r\n      },\r\n    ])\r\n    setTimeout(() => {\r\n      setQueue((q) => {\r\n        const [f, ...rest] = q\r\n        return rest || []\r\n      })\r\n    }, 4000)\r\n  }\r\n  return (\r\n    <>\r\n      <div style={{ position: 'relative' }}>\r\n        <Toast queue={queue} style={style} />\r\n      </div>\r\n      {children({ push })}\r\n    </>\r\n  )\r\n}\r\n\r\nconst color = (type: string | undefined) => {\r\n  switch (type) {\r\n    case 'good':\r\n      return {\r\n        color: '#aae6bf',\r\n        textShadow: '0px 3px 1px rgba(0,0,0,0.5)',\r\n      }\r\n    case 'base':\r\n      return {\r\n        color: 'rgba(255,255,255,0.8)',\r\n        textShadow: '0px 3px 1px rgba(0,0,0,0.5)',\r\n      }\r\n    default:\r\n      return {\r\n        // color: 'rgba(219, 114, 114, 0.8)',\r\n        // color: 'red',\r\n        color: 'rgba(255,158,158,0.8)',\r\n        textShadow: '0px 3px 1px rgba(0,0,0,1)',\r\n      }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { HealthGauge } from '../Gauge'\r\nimport { styled } from 'styletron-react'\r\nimport { Badge, HoverBadge } from '../../elements/badge'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { TagPreview } from '../TagPreview'\r\nimport { CharacterImage } from '../CharacterImage'\r\nimport { usePrevious } from '../../hooks/usePrevious'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { noneg } from '../../util'\r\nimport { Icon } from '../Icon'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Health } from './Health'\r\nimport { LocalToastRp } from '../../contexts/LocalToastContext'\r\nimport { STATUS_CONFIG } from '../../game/Status/constants'\r\nimport { tStats } from '../../game/Stats/type'\r\nimport { tStatus } from '../../game/Status/type'\r\nimport { ZERO_STATS } from '../../game/Stats/constants'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface EnemyCharacterPropsT {\r\n  character: tProcessedCharacter\r\n  activeCharacter: tProcessedCharacter\r\n  hoverable?: boolean\r\n  selected?: boolean\r\n  isHovering?: boolean\r\n  isBoss?: boolean\r\n  onClick?: () => void\r\n}\r\nconst Wrapper = styled('div', (props: any) => {\r\n  const { $selected, $active } = props\r\n  return {\r\n    margin: 10,\r\n    boxShadow: $active ? '0px 0px 20px white' : 'none',\r\n    transition: 'all 0.1s',\r\n  }\r\n})\r\nexport const EnemyCharacter = (props: EnemyCharacterPropsT) => {\r\n  const { character, activeCharacter, isBoss = false, onClick } = props\r\n  const health = noneg(character.health)\r\n  const active = activeCharacter?.id === character?.id\r\n  return (\r\n    <div\r\n      onClick={() => (onClick && character.health > 0 ? onClick() : null)}\r\n      style={{\r\n        borderWidth: 2,\r\n        width: isBoss ? 600 : 320,\r\n        position: 'relative',\r\n        cursor: onClick ? 'pointer' : 'default',\r\n        color: 'rgba(255,255,255,0.8)',\r\n        opacity: character.health <= 0 ? 0.5 : 1,\r\n        transition: 'all 0.4s',\r\n        transform: active ? 'scale(1.05)' : 'scale(0.95)',\r\n      }}\r\n    >\r\n      <FlexContainer style={{ alignItems: 'center' }}>\r\n        <FlexContainer>\r\n          <Icon\r\n            src={character.icon || ''}\r\n            shadow\r\n            fill={\r\n              activeCharacter && character.id === activeCharacter.id\r\n                ? 'lightsalmon'\r\n                : 'white'\r\n            }\r\n            size={64}\r\n            style={{ zIndex: 1, position: 'relative', marginRight: -24 }}\r\n          />\r\n        </FlexContainer>\r\n        <FlexContainer $full $direction='column'>\r\n          <FlexContainer\r\n            style={{\r\n              justifyContent: 'flex-end',\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                padding: '2px 4px',\r\n                textAlign: 'right',\r\n                fontSize: 18,\r\n                lineHeight: '18px',\r\n                background: 'rgba(0,0,0,0.4)',\r\n                textShadow: '1px 1px 2px black',\r\n                fontFamily: 'Bangers',\r\n                color: isBoss ? 'red' : 'rgba(255,255,255,0.8)',\r\n                letterSpacing: '1px',\r\n              }}\r\n            >\r\n              {character.name}\r\n            </span>\r\n          </FlexContainer>\r\n          <div style={{ boxShadow: '0px 4px 15px rgba(0,0,0,1)' }}>\r\n            <HealthGauge character={character} height={20} />\r\n          </div>\r\n          <HoverBadge\r\n            direction='down'\r\n            content={<BoxContainer>Enemy Level</BoxContainer>}\r\n            badgeProps={{\r\n              $left: '-6px',\r\n              $bottom: '-6px',\r\n              $size: '16px',\r\n              $color: 'lightcoral',\r\n            }}\r\n          >\r\n            <span>{character.level}</span>\r\n          </HoverBadge>\r\n          <FlexContainer\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: '-12px',\r\n              left: '40px',\r\n            }}\r\n          >\r\n            {character.status.map((status, i) => (\r\n              <TagPreview key={i} status={status} />\r\n            ))}\r\n            {character.immunities.map((status, i) => (\r\n              <TagPreview\r\n                key={i}\r\n                immunity={true}\r\n                status={{\r\n                  type: status,\r\n                  immunities: [],\r\n                  stack: 0,\r\n                  stats: ZERO_STATS,\r\n                  duration: -1,\r\n                }}\r\n              />\r\n            ))}\r\n          </FlexContainer>\r\n          <FlexContainer\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: '-8px',\r\n              right: '16px',\r\n              width: 52,\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <FullContainer />\r\n            {character.stats.armor > 0 && (\r\n              <HoverBadge\r\n                direction='down'\r\n                content={<BoxContainer>Armor</BoxContainer>}\r\n                badgeProps={{\r\n                  $top: '-17px',\r\n                  $right: '-10px',\r\n                  $size: '12px',\r\n                  $color: Theme.physicalColor,\r\n                }}\r\n              >\r\n                <span>{character.stats.armor}</span>\r\n              </HoverBadge>\r\n            )}\r\n            {character.stats.resistance > 0 && (\r\n              <HoverBadge\r\n                direction='down'\r\n                content={<BoxContainer>Magic Resistance</BoxContainer>}\r\n                badgeProps={{\r\n                  $top: '-17px',\r\n                  $right: '17px',\r\n                  $size: '12px',\r\n                  $color: Theme.magicColor,\r\n                }}\r\n              >\r\n                <span>{character.stats.resistance}</span>\r\n              </HoverBadge>\r\n            )}\r\n            <FullContainer />\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n        <LocalToastRp style={{ top: -24, right: -30, flexDirection: 'column' }}>\r\n          {({ push }) => <Health character={character} push={push} />}\r\n        </LocalToastRp>\r\n      </FlexContainer>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { ConfirmButton2, ConfirmButton, RedButton } from '../../elements/button'\r\nimport { EnemyCharacter } from '../EnemyCharacter'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\n\r\nexport interface CombatPartyPropsT {\r\n  party: tProcessedParty\r\n}\r\nexport const CombatParty = (props: CombatPartyPropsT) => {\r\n  const { party } = props\r\n  const { activeCharacter, selectedSkill, next } = useCombatContext()\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { setShowSkillTooltips } = useUIContext()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          padding: '0 120px',\r\n          cursor: selectedSkill?.targetType === 'group' ? 'pointer' : 'default',\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <div key={c.id}>\r\n            <EnemyCharacter\r\n              activeCharacter={activeCharacter}\r\n              character={c}\r\n              isBoss={currentEncounter?.type === 'boss'}\r\n            />\r\n            {selectedSkill &&\r\n              selectedSkill.targetType === 'single' &&\r\n              c.health > 0 &&\r\n              activeCharacter.partyId === PLAYER_PARTY_ID && (\r\n                <FlexContainer\r\n                  style={{ justifyContent: 'center', marginTop: -11 }}\r\n                >\r\n                  <div\r\n                    style={{ boxShadow: '0px 2px 5px black', marginTop: -2 }}\r\n                  >\r\n                    <RedButton\r\n                      onClick={() => {\r\n                        next(c)\r\n                        setShowSkillTooltips(false)\r\n                      }}\r\n                      $direction='down'\r\n                    >\r\n                      Attack\r\n                    </RedButton>\r\n                  </div>\r\n                </FlexContainer>\r\n              )}\r\n          </div>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && selectedSkill.targetType === 'group' && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n            <RedButton\r\n              onClick={() => {\r\n                next(party)\r\n                setShowSkillTooltips(false)\r\n              }}\r\n            >\r\n              Attack Group\r\n            </RedButton>\r\n          </div>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface AppHeaderPropsT {\r\n  children?: JSX.Element\r\n  left?: JSX.Element\r\n  right?: JSX.Element\r\n}\r\n\r\nexport const AppHeader = (props: AppHeaderPropsT) => {\r\n  const { children, left, right } = props\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'center',\r\n          background: Theme.darkBgColor,\r\n          height: 52,\r\n          borderBottom: '2px solid rgba(255,255,255,0.3)',\r\n          boxShadow: '1px 1px 1px black',\r\n        }}\r\n      >\r\n        <FlexContainer $full>{left}</FlexContainer>\r\n        <FlexContainer $full>{children}</FlexContainer>\r\n        <FlexContainer $full>{right}</FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport Gold from '../../icons/svg/delapouite/coins.svg'\r\nimport { Icon } from '../Icon'\r\n\r\nexport const PartyResources = () => {\r\n  const { party } = usePartyContext()\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{ alignItems: 'center', paddingRight: 20, color: '#ded9a6' }}\r\n    >\r\n      <Icon src={Gold} size={18} style={{ marginRight: 8 }} fill='#ded9a6' />\r\n      {party.gold}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { CHARACTER_CLASS_COLORS } from '../../game/Character/constants'\r\nimport { tCharacter } from '../../game/Character/type'\r\nimport { Icon } from '../Icon'\r\nimport { CHARACTER_CLASS_ICONS } from '../../icons/maps'\r\n\r\nexport interface CharacterIconPropsT {\r\n  character: tCharacter\r\n  size: number\r\n  height?: number\r\n  width?: number\r\n  index?: number\r\n  style?: CSSProperties\r\n  iconStyle?: CSSProperties\r\n}\r\nexport const CharacterIcon = (props: CharacterIconPropsT) => {\r\n  const { character, size, height, width, index, style, iconStyle } = props\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        background: CHARACTER_CLASS_COLORS[character.class],\r\n        border: '2px solid rgba(255,255,255,0.8)',\r\n        height: height || size - 10,\r\n        width: width || size - 7,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        overflow: 'hidden',\r\n        ...(style || {}),\r\n      }}\r\n    >\r\n      <Icon\r\n        src={character.icon || CHARACTER_CLASS_ICONS[character.class]}\r\n        shadow\r\n        fill={'white'}\r\n        size={size - 7}\r\n        style={{\r\n          zIndex: index || 1,\r\n          position: 'relative',\r\n          ...(iconStyle || {}),\r\n        }}\r\n      />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { AppHeader } from '../AppHeader'\r\nimport { PartyResources } from '../PartyResources'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { tQueue } from '../../game/Queue/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { getMax, getFirst, getSortedIds } from '../../game/Queue/util'\r\nimport { Theme } from '../../theme'\r\nimport { CharacterIcon } from '../CharacterIcon'\r\n\r\nconst size = 40\r\nexport interface CombatQueuePropsT {\r\n  queue: tQueue\r\n  characters: tProcessedCharacter[]\r\n}\r\nexport const CombatQueue = (props: CombatQueuePropsT) => {\r\n  const { queue, characters } = props\r\n  const { isRunning } = useCombatContext()\r\n  const history = useHistory()\r\n  const { level, nextLevel } = useGameStateContext()\r\n  const first = characters.find(\r\n    (c) => c.id === getFirst(queue),\r\n  ) as tProcessedCharacter\r\n  const sortedIds = getSortedIds(queue)\r\n  const bigList = [\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n  ]\r\n  const count = Math.floor((800 - 52) / size)\r\n  const [f, ...list] = Array(count)\r\n    .fill(null)\r\n    .map((_, i) => bigList[i])\r\n    .map((id) => characters.find((c) => c.id === id))\r\n    .filter((c) => c !== undefined)\r\n  const max = getMax(queue)\r\n  const min = 25\r\n  const widthCoef = max > min ? 100 / max : 100 / min\r\n  return (\r\n    <AppHeader\r\n      left={\r\n        <Button\r\n          onClick={() => history.push('/JSFTK_combat')}\r\n          style={{ borderBottom: 0 }}\r\n        >\r\n          Restart ({level})\r\n        </Button>\r\n      }\r\n      right={\r\n        <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n          <PartyResources />\r\n        </FlexContainer>\r\n      }\r\n    >\r\n      <>\r\n        {first && isRunning && (\r\n          <FlexContainer\r\n            style={{\r\n              width: 800,\r\n              flexDirection: 'row-reverse',\r\n              boxShadow: '0px 0px 3px black',\r\n              borderLeft: '1px solid rgba(255,255,255,0.3)',\r\n              background: Theme.mediumBgColor,\r\n            }}\r\n          >\r\n            <FlexContainer\r\n              style={{ position: 'relative', marginLeft: size, zIndex: 7 }}\r\n            >\r\n              <CharacterIcon\r\n                character={first}\r\n                size={64}\r\n                width={64}\r\n                height={64}\r\n                style={{ borderTop: 'none' }}\r\n              />\r\n              <FlexContainer\r\n                $direction='column'\r\n                style={{\r\n                  position: 'absolute',\r\n                  background: 'rgba(255,255,255,0.8)',\r\n                  color: Theme.darkBgColor,\r\n                  zIndex: 2,\r\n                  width: 120,\r\n                  top: 16,\r\n                  paddingLeft: 4,\r\n                  right: '-124px',\r\n                }}\r\n              >\r\n                {first && <span>{first.name}'s Turn</span>}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n            <FlexContainer $full $direction='column'>\r\n              <FullContainer />\r\n              <FlexContainer $full style={{ position: 'relative' }}>\r\n                {characters\r\n                  .filter((c) => c.id !== first?.id && c.health > 0)\r\n                  .map((c, i) => (\r\n                    <div\r\n                      key={`${c?.id}-${i}`}\r\n                      style={{\r\n                        height: size - 10,\r\n                        width: size - 7,\r\n                        position: 'absolute',\r\n                        bottom: '2px',\r\n                        right: `calc(${queue[c.id] * widthCoef}% - ${\r\n                          size - 6\r\n                        }px)`,\r\n                        transition: 'all 0.3s',\r\n                        zIndex: i,\r\n                      }}\r\n                    >\r\n                      <CharacterIcon\r\n                        character={c}\r\n                        size={size}\r\n                        width={size}\r\n                        index={i}\r\n                        style={{ borderBottom: 'none' }}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        )}\r\n      </>\r\n    </AppHeader>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { tCharacter } from '../../game/Character/type'\r\n\r\nexport const Span = (color: string, text: JSX.Element | string) => (\r\n  <span style={{ color, fontWeight: 'bold' }}>{text}</span>\r\n)\r\nexport const SkillSpan = (skill: tSkill) => Span('plum', skill.name)\r\n\r\nexport const NameSpanBuilder = (party: tParty, enemyParty: tParty) => (\r\n  character: tCharacter,\r\n) => {\r\n  const isUserParty = character.partyId === party.id\r\n  const isEnemyParty = character.partyId === enemyParty.id\r\n  const color = isUserParty\r\n    ? 'lightgreen'\r\n    : isEnemyParty\r\n    ? 'lightsalmon'\r\n    : 'white'\r\n\r\n  return Span(color, character.name)\r\n}\r\n","import React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport { useCombatContext } from '../CombatContext'\r\nimport { Monospace } from '../../elements/monospace'\r\nimport { NameSpanBuilder, SkillSpan, Span } from './util'\r\nimport { noneg } from '../../util'\r\nimport { getDamageResistance } from '../../game/Character/util'\r\nimport { STATUS_CONFIG } from '../../game/Status/constants'\r\n\r\nexport interface CombatLogContextT {\r\n  combatLog: JSX.Element[]\r\n  clear: () => void\r\n}\r\nconst defualtValue: CombatLogContextT = {\r\n  combatLog: [],\r\n  clear: () => {},\r\n}\r\nexport const CombatLogContext = createContext<CombatLogContextT>(defualtValue)\r\nexport const useCombatLogContext = () => useContext(CombatLogContext)\r\n\r\ntype DeadLogT = Record<string, boolean | undefined>\r\n\r\nexport interface CombatLogContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const CombatLogContextProvider = (\r\n  props: CombatLogContextProviderPropsT,\r\n) => {\r\n  const { children } = props\r\n  const { activeRound, roundResults, enemyParty, party } = useCombatContext()\r\n  const [combatLog, setCombatLog] = useState<JSX.Element[]>([])\r\n  const clear = () => setCombatLog([])\r\n  const [deadLog, setDeadLog] = useState<DeadLogT>({})\r\n  const NameSpan = NameSpanBuilder(party, enemyParty)\r\n  const log = (line: JSX.Element) =>\r\n    setCombatLog((log) => [\r\n      ...log,\r\n      <Monospace style={{ display: 'inline-block', fontWeight: 'normal' }}>\r\n        {line}\r\n      </Monospace>,\r\n    ])\r\n\r\n  useEffect(() => {\r\n    const characters = [...enemyParty.characters, ...party.characters]\r\n    setTimeout(() => {\r\n      characters.forEach((character) => {\r\n        if (character.health <= 0 && !deadLog[character.id]) {\r\n          setDeadLog((dLog) => ({ ...dLog, [character.id]: true }))\r\n          log(<span>{Span('lightcoral', `${character.name} died.`)}</span>)\r\n        }\r\n      })\r\n    }, 5)\r\n  }, [enemyParty, party])\r\n\r\n  useEffect(() => {\r\n    if (activeRound && activeRound) {\r\n      log(\r\n        <span>\r\n          {NameSpan(activeRound.sourceResult.source)} uses{' '}\r\n          {SkillSpan(activeRound.sourceResult.skill)}.\r\n        </span>,\r\n      )\r\n    }\r\n  }, [activeRound])\r\n\r\n  useEffect(() => {\r\n    if (roundResults.length === 0) return\r\n    const latestRounds = roundResults[roundResults.length - 1]\r\n    const baseRound = latestRounds.sourceResult\r\n    if (!baseRound) return\r\n\r\n    if (baseRound.skill.damage && baseRound.passedCount === 0) {\r\n      log(<span>{baseRound.source.name}'s attack missed.</span>)\r\n    }\r\n    if (!baseRound.skill.damage && !baseRound.perfect) {\r\n      log(<span>{SkillSpan(baseRound.skill)} failed.</span>)\r\n    }\r\n    if (baseRound.criticalHitSuccess) {\r\n      log(<span>{Span('gold', 'Critical Hit!')}</span>)\r\n    }\r\n    if (baseRound.perfect && baseRound.rollResults.length > 0) {\r\n      log(<span>{Span('gold', 'Perfect!')}</span>)\r\n    }\r\n    latestRounds.targetResults.forEach((round) => {\r\n      const targetParty = party.id === round.source.partyId ? enemyParty : party\r\n      if (round.passedCount > 0) {\r\n        if (round.dodgeSuccess) {\r\n          log(<span>{NameSpan(round.target)} dodged the attack.</span>)\r\n        } else if (round.totalDamage.value > 0) {\r\n          log(\r\n            <span>\r\n              {SkillSpan(round.skill)} deals{' '}\r\n              {Span('white', `${round.loggedDamgge.value} damage`)} to{' '}\r\n              {NameSpan(round.target)}.\r\n            </span>,\r\n          )\r\n        } else if (round.skill.damage) {\r\n          log(\r\n            <span>\r\n              {SkillSpan(round.skill)} did no damage to {NameSpan(round.target)}\r\n              .\r\n            </span>,\r\n          )\r\n        }\r\n        if (round.splashDamage.value > 0) {\r\n          targetParty.characters\r\n            .filter((c) => c.id !== round.target.id && c.health > 0)\r\n            .forEach((subTarget) => {\r\n              const splashDamageResistance = getDamageResistance(\r\n                subTarget,\r\n                round.splashDamage,\r\n              )\r\n              log(\r\n                <span>\r\n                  {SkillSpan(round.skill)} deals{' '}\r\n                  {Span(\r\n                    'white',\r\n                    `${\r\n                      round.splashDamage.value - splashDamageResistance\r\n                    } splash damage`,\r\n                  )}{' '}\r\n                  to {NameSpan(subTarget)}.\r\n                </span>,\r\n              )\r\n            })\r\n        }\r\n\r\n        if (round.reflectedDamage.value > 0) {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} reflected{' '}\r\n              {Span('white', `${round.reflectedDamage.value} damage`)}\r\n            </span>,\r\n          )\r\n        }\r\n\r\n        /* TODO\r\n        if (round.healing > 0) {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} gained{' '}\r\n              {Span('white', `${round.healing} HP`)} from{' '}\r\n              {SkillSpan(round.skill)}\r\n            </span>,\r\n          )\r\n        }\r\n        */\r\n\r\n        round.addedStatus.forEach((status) => {\r\n          const statusConfig = STATUS_CONFIG[status]\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} became {status}\r\n              {statusConfig.duration > 0\r\n                ? ` (${statusConfig.duration} turns)`\r\n                : ''}\r\n              .\r\n            </span>,\r\n          )\r\n        })\r\n      }\r\n    })\r\n  }, [roundResults.length])\r\n\r\n  return (\r\n    <CombatLogContext.Provider value={{ combatLog, clear }}>\r\n      {children}\r\n    </CombatLogContext.Provider>\r\n  )\r\n}\r\n","import React, { useRef, useEffect, useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { useCombatLogContext } from '../../contexts/CombatLogContext'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport { Button } from '../../elements/button'\r\nimport { Theme } from '../../theme'\r\n\r\nexport const CombatLog = () => {\r\n  const { combatLog } = useCombatLogContext()\r\n  const scrollRef = useRef<HTMLDivElement>(null)\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n  useEffect(() => {\r\n    if (scrollRef.current && isExpanded) {\r\n      scrollRef.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n  }, [combatLog])\r\n  const style = useSpring({\r\n    minHeight: isExpanded ? 263 : 0,\r\n    maxHeight: isExpanded ? 263 : 0,\r\n  })\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{\r\n        minWidth: 300,\r\n        overflow: 'auto',\r\n        background: 'rgba(0,0,0,0.7)',\r\n        fontSize: 12,\r\n        color: 'rgba(255,255,255,0.8)',\r\n      }}\r\n    >\r\n      <FlexContainer\r\n        style={{\r\n          background: Theme.darkBgColor,\r\n          padding: 8,\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <FullContainer>Combat Log</FullContainer>\r\n        <Button\r\n          onClick={() => setIsExpanded((v) => !v)}\r\n          style={{ padding: '2px 8px' }}\r\n        >\r\n          {isExpanded ? '_' : '+'}\r\n        </Button>\r\n      </FlexContainer>\r\n      <animated.div\r\n        style={{\r\n          overflow: 'auto',\r\n          ...style,\r\n        }}\r\n      >\r\n        <FlexContainer $direction='column' style={{ padding: 8 }}>\r\n          {combatLog.map((line, i) => (\r\n            <span key={i}>{line}</span>\r\n          ))}\r\n        </FlexContainer>\r\n        <div ref={scrollRef} />\r\n      </animated.div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { FlexContainer, FullContainer } from '../elements/flex'\r\nimport { RoundResultRenderer } from '../components/RoundResultRenderer'\r\nimport { CombatActions } from '../components/CombatActions'\r\nimport { CombatParty } from '../components/CombatParty'\r\nimport { CombatQueue } from '../components/CombatQueue'\r\nimport { CombatLog } from '../components/CombatLog'\r\nimport { useUIContext } from '../contexts/UIContext'\r\nimport { useCombatStart } from '../hooks/useCombatStart'\r\n\r\nexport const Combat = () => {\r\n  const {\r\n    enemyParty,\r\n    activeCharacter,\r\n    characters,\r\n    queue,\r\n    isRunning,\r\n    isRenderingResult,\r\n    onSkillSelect,\r\n  } = useCombatContext()\r\n\r\n  const { setOnCharacterConsumableClick } = useUIContext()\r\n  useCombatStart()\r\n  useEffect(() => {\r\n    setOnCharacterConsumableClick((c, index, item) => {\r\n      if (!c) return\r\n      if (c.id === activeCharacter.id) {\r\n        onSkillSelect(item.skill, index)\r\n      }\r\n    })\r\n  }, [onSkillSelect, activeCharacter])\r\n\r\n  return (\r\n    <FlexContainer $full style={{ height: '100%' }}>\r\n      <FlexContainer $full $direction='column'>\r\n        <CombatQueue queue={queue} characters={characters} />\r\n        <FlexContainer\r\n          $direction='column'\r\n          $full\r\n          style={{ padding: '30px 10px 0 10px' }}\r\n        >\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{ marginBottom: 40, minHeight: 90 }}\r\n          >\r\n            <CombatParty party={enemyParty} />\r\n          </FlexContainer>\r\n          <FlexContainer $full>\r\n            {isRunning && activeCharacter && (\r\n              <>\r\n                <FullContainer />\r\n                <FlexContainer $direction='column'>\r\n                  <div style={{ marginTop: 40 }}>\r\n                    {!isRenderingResult && <CombatActions />}\r\n                    <RoundResultRenderer isModal={false} />\r\n                  </div>\r\n                  <FullContainer />\r\n                </FlexContainer>\r\n                <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n                  <FlexContainer\r\n                    $direction='column'\r\n                    // style={{ justifyContent: 'center' }}\r\n                  >\r\n                    <CombatLog />\r\n                  </FlexContainer>\r\n                </FlexContainer>\r\n              </>\r\n            )}\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useModalContext } from '../contexts/ModalContext'\r\nimport { useCombatLogContext } from '../contexts/CombatLogContext'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { FlexContainer } from '../elements/flex'\r\nimport { Icon } from '../components/Icon'\r\n\r\nexport const useCombatStart = (delay: number = 1000) => {\r\n  const { open, close } = useModalContext()\r\n  const { clear } = useCombatLogContext()\r\n  const { enemyParty, start, reset } = useCombatContext()\r\n  useEffect(() => {\r\n    clear()\r\n    open(\r\n      <div style={{ textAlign: 'center' }}>\r\n        <h1>Combat Start!</h1>\r\n        <FlexContainer\r\n          style={{ justifyContent: 'space-around', marginBottom: 40 }}\r\n        >\r\n          {enemyParty.characters.map((c) => (\r\n            <FlexContainer\r\n              style={{\r\n                background: '#c27a5d',\r\n                border: '2px solid rgba(255,255,255,0.8)',\r\n                height: 60,\r\n                width: 60,\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              <Icon\r\n                src={c.icon || ''}\r\n                shadow\r\n                fill={'white'}\r\n                size={60}\r\n                style={{ zIndex: 1, position: 'relative' }}\r\n              />\r\n            </FlexContainer>\r\n          ))}\r\n        </FlexContainer>\r\n      </div>,\r\n    )\r\n    setTimeout(() => {\r\n      close()\r\n      start()\r\n    }, 1500)\r\n    return () => {\r\n      reset()\r\n      clear()\r\n    }\r\n  }, [])\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Route, useHistory } from 'react-router-dom'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport { useModalContext } from '../contexts/ModalContext'\r\n\r\nexport const makeRoute = (path: string, Component: React.FC) => (\r\n  <Route path={`/JSFTK_combat${path}`}>\r\n    <Component />\r\n  </Route>\r\n)\r\n\r\nexport const RouteController = () => {\r\n  const { encounters, currentEncounter, level } = useGameStateContext()\r\n  const history = useHistory()\r\n  const { open } = useModalContext()\r\n  useEffect(() => {\r\n    if (level > encounters.length - 1) {\r\n      open(\r\n        <div>\r\n          <h1>You Win!!!!!!!!!!!</h1>\r\n        </div>,\r\n      )\r\n      history.push('/JSFTK_combat')\r\n    } else if (\r\n      currentEncounter &&\r\n      (currentEncounter.type === 'combat' || currentEncounter.type === 'boss')\r\n    ) {\r\n      history.push('/JSFTK_combat/combat')\r\n    } else if (!currentEncounter && level > 0) {\r\n      history.push('/JSFTK_combat/party')\r\n    }\r\n  }, [currentEncounter, level])\r\n  return null\r\n}\r\n","import React, { useState, CSSProperties } from 'react'\r\nimport { withStyle } from 'styletron-react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Button } from '../../elements/button'\r\nimport { tShopEncounter } from '../../game/Encounter/type'\r\nimport { WeaponPreview } from '../WeaponPreview'\r\nimport { ArmorPreview } from '../ArmorPreview'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { ConsumablePreview } from '../ConsumablePreview'\r\nimport { Theme } from '../../theme'\r\n\r\nconst CardList = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  }\r\n})\r\n\r\ninterface ShopTabT {\r\n  key: string\r\n  label: string\r\n  render: (\r\n    encounter: tShopEncounter,\r\n    purchaseItem: (item: tArmor | tWeapon | tConsumable, cost: number) => void,\r\n  ) => JSX.Element\r\n}\r\nconst tabs: ShopTabT[] = [\r\n  {\r\n    key: 'all',\r\n    label: 'All',\r\n    render: (encounter: tShopEncounter, purchaseItem) => (\r\n      <FlexContainer $direction='column'>\r\n        {[...encounter.items].map((i) => (\r\n          <FlexContainer style={{ color: ITEM_RARITY_COLORS[i.rarity] }}>\r\n            {i.name}\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n    ),\r\n  },\r\n  {\r\n    key: 'weapons',\r\n    label: 'Weaons',\r\n    render: (encounter: tShopEncounter, purchaseItem) => (\r\n      <CardList>\r\n        {encounter.items\r\n          .filter((i) => i.itemType === 'weapon')\r\n          .map((w) => (\r\n            <WeaponPreview\r\n              weapon={w as tWeapon}\r\n              showBuyButton={true}\r\n              cost={encounter.costs[w.id]}\r\n              onBuyClick={() => purchaseItem(w, encounter.costs[w.id])}\r\n            />\r\n          ))}\r\n      </CardList>\r\n    ),\r\n  },\r\n  {\r\n    key: 'armor',\r\n    label: 'Armor',\r\n    render: (encounter: tShopEncounter, purchaseItem) => (\r\n      <CardList>\r\n        {encounter.items\r\n          .filter((i) => i.itemType === 'armor')\r\n          .map((a) => (\r\n            <ArmorPreview\r\n              armor={a as tArmor}\r\n              showBuyButton={true}\r\n              cost={encounter.costs[a.id]}\r\n              onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n            />\r\n          ))}\r\n      </CardList>\r\n    ),\r\n  },\r\n  {\r\n    key: 'consumables',\r\n    label: 'Consumables',\r\n    render: (encounter: tShopEncounter, purchaseItem) => (\r\n      <CardList>\r\n        {encounter.items\r\n          .filter((i) => i.itemType === 'consumable')\r\n          .map((a) => (\r\n            <ConsumablePreview\r\n              item={a as tConsumable}\r\n              showBuyButton={true}\r\n              cost={encounter.costs[a.id]}\r\n              onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n            />\r\n          ))}\r\n      </CardList>\r\n    ),\r\n  },\r\n]\r\n\r\nexport interface ShopPropsT {}\r\nexport const Shop = (props: ShopPropsT) => {\r\n  const {} = props\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { purchaseItem } = usePartyContext()\r\n  const [activeTab, setActiveTab] = useState(\r\n    tabs.find((t) => t.key === 'all') as ShopTabT,\r\n  )\r\n  const active = (tab: ShopTabT): CSSProperties =>\r\n    tab.key === activeTab.key\r\n      ? {\r\n          borderColor: 'white',\r\n        }\r\n      : {}\r\n  // console.log(currentEncounter)\r\n  return (\r\n    <BoxContainer\r\n      style={{ margin: '20px 20px 20px 0', flex: 1 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <FlexContainer style={{ alignItems: 'center' }}>\r\n        <FullContainer>\r\n          <h1 style={{ margin: 0 }}>Shop</h1>\r\n        </FullContainer>\r\n        <FlexContainer>\r\n          {tabs.map((tab) => (\r\n            <Button style={active(tab)} onClick={() => setActiveTab(tab)}>\r\n              {tab.label}\r\n            </Button>\r\n          ))}\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n      <FlexContainer\r\n        $direction='column'\r\n        $full\r\n        style={{\r\n          overflow: 'auto',\r\n          marginTop: 10,\r\n          height: 'calc(100vh - 374px)',\r\n          overflowY: 'auto',\r\n        }}\r\n      >\r\n        {activeTab.render(currentEncounter as tShopEncounter, purchaseItem)}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Kefir from 'kefir'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { tShrineEncounter } from '../../game/Encounter/type'\r\nimport { SkillChecks } from '../SkillChecks'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { resolveCheck } from '../../game/Roll/util'\r\nimport { ZERO_REWARD } from '../../game/Encounter/constants'\r\nimport { commitRewards } from '../../game/Party/util'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ShrinePropsT {}\r\nexport const Shrine = (props: ShrinePropsT) => {\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { party, rawParty, updateParty } = usePartyContext()\r\n  const encounter = currentEncounter as tShrineEncounter\r\n  const [results, setResults] = useState<boolean[]>([])\r\n  console.log(encounter.results)\r\n  const onClick = (c: tProcessedCharacter) => {\r\n    const stream = Kefir.sequentially(\r\n      200,\r\n      Array(encounter.rolls)\r\n        .fill(0)\r\n        .map((_, i) => ({\r\n          index: i,\r\n          result: resolveCheck(c, encounter.stat),\r\n        })),\r\n    )\r\n    stream.onValue((value) => {\r\n      setResults((r) => [...r, value.result])\r\n    })\r\n    stream.onEnd(() => {})\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (results.length === encounter.rolls) {\r\n      const rewards =\r\n        encounter.results[results.filter((r) => r === true).length - 1]\r\n      if (!rewards) {\r\n        console.log(encounter, results)\r\n        return\r\n      }\r\n      updateParty(commitRewards(rawParty, rewards))\r\n    }\r\n  }, [results])\r\n\r\n  return (\r\n    <BoxContainer\r\n      style={{ margin: '20px 20px 20px 0', flex: 1 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <FlexContainer>\r\n        <FlexContainer $direction='column'>\r\n          <h1 style={{ margin: '0 0 24px 0', textTransform: 'capitalize' }}>\r\n            {encounter.stat} Shrine\r\n          </h1>\r\n          <div style={{ maxWidth: 300, marginBottom: 48 }}>\r\n            Shines are optional encounters that test one character in your\r\n            party's stats. Be careful, as if you fail, you may get a negative\r\n            outcome!\r\n          </div>\r\n          <FlexContainer>\r\n            <FlexContainer $direction='column'>\r\n              <SkillChecks\r\n                stat={encounter.stat}\r\n                rolls={encounter.rolls}\r\n                results={results}\r\n              />\r\n              <FlexContainer style={{ justifyContent: 'center' }}>\r\n                {party.characters.map((c) => (\r\n                  <Button\r\n                    onClick={() => onClick(c)}\r\n                    disabled={results.length > 0}\r\n                  >\r\n                    {c.name} ({c.stats[encounter.stat]})\r\n                  </Button>\r\n                ))}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n        <FlexContainer\r\n          $direction='column'\r\n          $full\r\n          style={{ padding: '86px 16px 0 16px' }}\r\n        >\r\n          {encounter.results.map((reward, index) => (\r\n            <FlexContainer\r\n              style={{\r\n                padding: 8,\r\n                alignItems: 'center',\r\n                marginBottom: 4,\r\n                background:\r\n                  results.length === encounter.rolls &&\r\n                  index + 1 === results.filter((r) => r === true).length\r\n                    ? 'rgba(144, 238, 144, 0.3)'\r\n                    : 'linear-gradient(90deg, rgba(255,255,255,0.3) 0%, rgba(255,255,255,0) 100%)',\r\n              }}\r\n            >\r\n              <span style={{ fontSize: 24 }}>{index + 1}</span>\r\n              <span\r\n                style={{\r\n                  display: 'inline-block',\r\n                  marginLeft: 8,\r\n                  textTransform: 'capitalize',\r\n                }}\r\n              >\r\n                {reward.gold > 0 && ` ${reward.gold} Gold`}\r\n                {reward.xp > 0 && ` +${reward.xp} Experience`}\r\n                {reward.status.length > 0 && ` ${reward.status}`}\r\n                {reward.items.length > 0 && ` Random Item`}\r\n                {JSON.stringify(reward) === JSON.stringify(ZERO_REWARD) &&\r\n                  ' No Effect'}\r\n              </span>\r\n            </FlexContainer>\r\n          ))}\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tEncounterType } from '../../game/Encounter/type'\r\n\r\nimport Unknown from '../../icons/svg/delapouite/perspective-dice-six.svg'\r\nimport Shop from '../../icons/svg/delapouite/coins.svg'\r\nimport Combat from '../../icons/svg/lorc/crossed-swords.svg'\r\nimport Shrine from '../../icons/svg/lorc/divided-spiral.svg'\r\nimport Boss from '../../icons/svg/lorc/crowned-skull.svg'\r\nimport { Icon } from '../Icon'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface EncounterHistoryPropsT {}\r\n\r\nexport const EncounterHistory = (props: EncounterHistoryPropsT) => {\r\n  const { encounters, level } = useGameStateContext()\r\n  const chosenEncounters = encounters.map((e) =>\r\n    e.value ? e[e.value] : undefined,\r\n  )\r\n  const getIcon = (type: tEncounterType | undefined): string => {\r\n    switch (type) {\r\n      case 'combat':\r\n        return Combat\r\n      case 'shop':\r\n        return Shop\r\n      case 'shrine':\r\n        return Shrine\r\n      case 'boss':\r\n        return Boss\r\n      default:\r\n        return Unknown\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FlexContainer style={{ justifyContent: 'space-evenly', padding: 32 }}>\r\n      {chosenEncounters.map((e, i) => (\r\n        <FlexContainer $full>\r\n          <BoxContainer\r\n            substyle={{\r\n              padding: 4,\r\n              borderColor:\r\n                level === i\r\n                  ? 'white'\r\n                  : e === undefined\r\n                  ? Theme.lightBgColor\r\n                  : '#8b9e96',\r\n            }}\r\n          >\r\n            <Icon\r\n              src={getIcon(i === encounters.length - 1 ? 'boss' : e?.type)}\r\n              size={32}\r\n              fill={e === undefined ? 'rgba(255,255,255,0.5)' : '#8b9e96'}\r\n            />\r\n          </BoxContainer>\r\n          {i !== chosenEncounters.length - 1 && (\r\n            <FlexContainer\r\n              $direction='column'\r\n              $full\r\n              style={{ justifyContent: 'center' }}\r\n            >\r\n              <FlexContainer\r\n                $full\r\n                style={{\r\n                  maxHeight: 1,\r\n                  background: e === undefined ? Theme.lightBgColor : 'white',\r\n                  borderTop: '1px solid black',\r\n                  borderBottom: '1px solid black',\r\n                }}\r\n              />\r\n            </FlexContainer>\r\n          )}\r\n        </FlexContainer>\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { usePartyContext } from '../contexts/PartyContext'\r\nimport { FlexContainer, FullContainer } from '../elements/flex'\r\nimport { Button } from '../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { AppHeader } from '../components/AppHeader'\r\nimport { PartyResources } from '../components/PartyResources'\r\nimport { useUIContext } from '../contexts/UIContext'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport { getSkillResult } from '../game/Skill/util'\r\nimport { commitSkillResults } from '../game/Skill/committer'\r\nimport { Shop } from '../components/Shop'\r\nimport { Shrine } from '../components/Shrine'\r\nimport { getChoiceText } from '../game/Encounter/constants'\r\nimport { EncounterHistory } from '../components/EncounterHistory'\r\n\r\nexport const Party = () => {\r\n  const { party, rawParty, updateParty } = usePartyContext()\r\n  const {\r\n    currentEncounter,\r\n    currentChoice,\r\n    previousChoice,\r\n    level,\r\n    chooseCurrent,\r\n    nextLevel,\r\n    encounters,\r\n  } = useGameStateContext()\r\n  const history = useHistory()\r\n  const {\r\n    setPlayerCanEquipItem,\r\n    setOnCharacterConsumableClick,\r\n  } = useUIContext()\r\n\r\n  useEffect(() => {\r\n    setPlayerCanEquipItem(true)\r\n    setOnCharacterConsumableClick((character, consumableIndex) => {\r\n      if (!character) return\r\n      const consumable = character.consumables[consumableIndex]\r\n      const targets =\r\n        consumable.skill.targetType === 'self'\r\n          ? [character]\r\n          : consumable.skill.targetType === 'party'\r\n          ? party.characters\r\n          : []\r\n      const result = getSkillResult(character, targets, consumable.skill)\r\n      const parties = commitSkillResults(rawParty, rawParty, {})(result)\r\n      updateParty(parties.playerParty)\r\n    })\r\n    return () => {\r\n      setPlayerCanEquipItem(false)\r\n      setOnCharacterConsumableClick((c, i, item) => {})\r\n    }\r\n  }, [party, rawParty, updateParty])\r\n\r\n  return (\r\n    <FlexContainer $full $direction='column' style={{ height: '100%' }}>\r\n      <AppHeader\r\n        left={\r\n          <>\r\n            <Button\r\n              onClick={() => history.push('/JSFTK_combat')}\r\n              style={{ borderBottom: 0 }}\r\n            >\r\n              Restart\r\n            </Button>\r\n            <FullContainer />\r\n          </>\r\n        }\r\n        right={\r\n          <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n            <PartyResources />\r\n          </FlexContainer>\r\n        }\r\n      >\r\n        <FlexContainer\r\n          $full\r\n          style={{\r\n            color: 'white',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          Level {level}\r\n        </FlexContainer>\r\n      </AppHeader>\r\n      <FlexContainer $full $direction='column'>\r\n        <FlexContainer $full>\r\n          <FlexContainer\r\n            $direction='column'\r\n            $full\r\n            style={{ marginLeft: '10%' }}\r\n          >\r\n            {currentEncounter && currentEncounter.type === 'shop' && <Shop />}\r\n            {currentEncounter && currentEncounter.type === 'shrine' && (\r\n              <Shrine />\r\n            )}\r\n            {!currentEncounter && currentChoice && <EncounterHistory />}\r\n          </FlexContainer>\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              background:\r\n                'linear-gradient(0deg, rgba(0,5,8,0) 0%, rgba(8,8,8,0.6811099439775911) 10%, rgba(17,17,25,1) 35%)',\r\n              marginRight: '10%',\r\n              padding: '16px 8px',\r\n              width: 300,\r\n            }}\r\n          >\r\n            {currentChoice && !currentEncounter && (\r\n              <FlexContainer $direction='column' style={{ paddingTop: 24 }}>\r\n                <h3\r\n                  style={{\r\n                    margin: '0 0 16px 0',\r\n                    color: 'white',\r\n                    textAlign: 'center',\r\n                  }}\r\n                >\r\n                  You have a choice.\r\n                </h3>\r\n                <span\r\n                  style={{\r\n                    color: 'rgba(255,255,255,0.7)',\r\n                    marginBottom: 24,\r\n                    padding: 8,\r\n                  }}\r\n                >\r\n                  {getChoiceText(currentChoice, previousChoice)}\r\n                </span>\r\n                {encounters.length - 1 !== level && (\r\n                  <FlexContainer style={{ justifyContent: 'center' }}>\r\n                    <Button onClick={() => chooseCurrent('left')}>\r\n                      Go Left\r\n                    </Button>\r\n                    <Button onClick={() => chooseCurrent('right')}>\r\n                      Go Right\r\n                    </Button>\r\n                  </FlexContainer>\r\n                )}\r\n                {encounters.length - 1 === level && (\r\n                  <FlexContainer style={{ justifyContent: 'center' }}>\r\n                    <Button onClick={() => chooseCurrent('right')}>\r\n                      Proceed\r\n                    </Button>\r\n                  </FlexContainer>\r\n                )}\r\n              </FlexContainer>\r\n            )}\r\n            {currentEncounter && (\r\n              <FlexContainer\r\n                $direction='column'\r\n                style={{ justifyContent: 'center' }}\r\n              >\r\n                {currentEncounter.type === 'shop' && (\r\n                  <>\r\n                    <h3\r\n                      style={{\r\n                        margin: '0 0 16px 0',\r\n                        color: 'white',\r\n                        textAlign: 'center',\r\n                      }}\r\n                    >\r\n                      You found a shop!\r\n                    </h3>\r\n                    <span\r\n                      style={{\r\n                        color: 'rgba(255,255,255,0.7)',\r\n                        marginBottom: 24,\r\n                      }}\r\n                    >\r\n                      Amidst your journey, you discover a merchant, a traveling\r\n                      salemen with all manor of wares to assist in your\r\n                      adventure.\r\n                    </span>\r\n                  </>\r\n                )}\r\n                <FlexContainer style={{ justifyContent: 'center' }}>\r\n                  <Button onClick={() => nextLevel()}>Travel Deeper</Button>\r\n                </FlexContainer>\r\n              </FlexContainer>\r\n            )}\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","export const stringArr = (arr: string[]): string => {\r\n  return arr.reduce((text, item, index) => {\r\n    const f = index === 0\r\n    const l = index === arr.length - 1 && !f\r\n    return `${text}${!f && arr.length > 2 ? ', ' : ' '}${\r\n      l ? ' and ' : ''\r\n    }${item}`\r\n  })\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { FullContainer, FlexContainer } from '../elements/flex'\r\nimport { BoxContainer } from '../elements/box'\r\nimport { usePartyContext } from '../contexts/PartyContext'\r\nimport { Gauge } from '../components/Gauge'\r\nimport { RedButton } from '../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { INITIAL_STATE } from '../state/party'\r\nimport { Monospace } from '../elements/monospace'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport {\r\n  tProcessedCharacter,\r\n  tCharacter,\r\n  tCharacterClass,\r\n} from '../game/Character/type'\r\nimport { makeCharacter } from '../game/Character/util'\r\nimport { STAT_BONUS_KEYS } from '../game/Stats/constants'\r\nimport { Theme } from '../theme'\r\n\r\nexport const Start = () => {\r\n  const {\r\n    party,\r\n    updateParty,\r\n    upsertCharacter,\r\n    findRawCharacter,\r\n  } = usePartyContext()\r\n  const history = useHistory()\r\n  const { reset } = useGameStateContext()\r\n  useEffect(() => {\r\n    updateParty(INITIAL_STATE)\r\n    reset()\r\n  }, [])\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{ height: '100%', overflow: 'hidden' }}\r\n    >\r\n      <FullContainer />\r\n      <FlexContainer $full>\r\n        <FullContainer />\r\n        <BoxContainer\r\n          style={{ maxWidth: 340, marginRight: 8 }}\r\n          substyle={{ padding: 16, background: Theme.darkBgColor }}\r\n        >\r\n          <strong style={{ marginBottom: 16 }}>\r\n            Choose your starting classes.\r\n          </strong>\r\n          <p>\r\n            Each character class has different stats and starting items. Your\r\n            stats determine your character's chances of succeeding in various\r\n            checks during combat.\r\n          </p>\r\n          <p>\r\n            For example, if your character has 76 Strength, then each Strength\r\n            check has a 76% chance of succeeding.\r\n          </p>\r\n          <p>\r\n            So if an attack has 4 Strength checks at 76% each, then that attack\r\n            has a 33% chance of being \"perfect.\" Some attacks will have special\r\n            bonus actions when they are \"perfect.\" Such as splash damage, or\r\n            status effects.\r\n          </p>\r\n          <p>\r\n            More power attacks may require more checks or use negative-offset\r\n            stat values\r\n          </p>\r\n        </BoxContainer>\r\n        <BoxContainer>\r\n          <h1\r\n            style={{\r\n              marginTop: 8,\r\n              textAlign: 'center',\r\n              fontFamily: 'Bangers',\r\n              letterSpacing: '1px',\r\n              textShadow: '1px 3px 3px black',\r\n            }}\r\n          >\r\n            Choose your Party!\r\n          </h1>\r\n          <FlexContainer>\r\n            {party.characters.map((character) => (\r\n              <FlexContainer $direction='column' style={{ padding: 4 }}>\r\n                <StartCharacterCard\r\n                  character={character}\r\n                  onChange={(characterId, updater) => {\r\n                    const rc = findRawCharacter(characterId)\r\n                    if (rc) {\r\n                      upsertCharacter(updater(rc))\r\n                    }\r\n                  }}\r\n                />\r\n              </FlexContainer>\r\n            ))}\r\n          </FlexContainer>\r\n          <FlexContainer>\r\n            <FullContainer />\r\n            <RedButton\r\n              style={{ margin: '16px 0 12px 0' }}\r\n              onClick={() => {\r\n                history.push('/JSFTK_combat/party')\r\n              }}\r\n            >\r\n              Begin Adventure\r\n            </RedButton>\r\n            <FullContainer />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        <FullContainer />\r\n      </FlexContainer>\r\n      <FullContainer />\r\n      <Monospace\r\n        style={{\r\n          fontWeight: 'normal',\r\n          color: 'rgba(255,255,255,0.5)',\r\n          fontSize: 12,\r\n        }}\r\n      >\r\n        alpha v0.0.3.7\r\n      </Monospace>\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface StartCharacterCardPropsT {\r\n  character: tProcessedCharacter\r\n  onChange: (\r\n    characterId: string,\r\n    updater: (c: tCharacter) => tCharacter,\r\n  ) => void\r\n}\r\nexport const StartCharacterCard = (props: StartCharacterCardPropsT) => {\r\n  const { character, onChange } = props\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <input\r\n        style={{\r\n          background: Theme.mediumBgColor,\r\n          border: '1px solid rgba(255,255,255,0.4)',\r\n          padding: 8,\r\n          color: 'white',\r\n          marginBottom: 8,\r\n        }}\r\n        value={character.name}\r\n        onChange={(e) => {\r\n          onChange(character.id, (c) => ({\r\n            ...c,\r\n            name: e.target.value,\r\n          }))\r\n        }}\r\n      />\r\n      <select\r\n        style={{\r\n          background: Theme.mediumBgColor,\r\n          border: '1px solid rgba(255,255,255,0.4)',\r\n          padding: 8,\r\n          color: 'white',\r\n          marginBottom: 8,\r\n        }}\r\n        value={character.class}\r\n        onChange={(e) => {\r\n          onChange(character.id, (c) => ({\r\n            ...makeCharacter(e.target.value as tCharacterClass),\r\n            id: character.id,\r\n            name: character.name,\r\n          }))\r\n        }}\r\n      >\r\n        <option value='blacksmith'>Blacksmith</option>\r\n        <option value='hunter'>Hunter</option>\r\n        <option value='scholar'>Scholar</option>\r\n        <option value='bard'>Bard</option>\r\n        <option value='hobo'>Hobo</option>\r\n      </select>\r\n      <FlexContainer $direction='column' style={{ padding: 8 }}>\r\n        {STAT_BONUS_KEYS.map((key) => (\r\n          <FlexContainer key={key} style={{ height: 20 }}>\r\n            <div\r\n              style={{\r\n                width: 60,\r\n                fontSize: 12,\r\n                textTransform: 'capitalize',\r\n                marginRight: 4,\r\n              }}\r\n            >\r\n              {key}\r\n            </div>\r\n            <FullContainer>\r\n              <Gauge\r\n                max={100}\r\n                value={character.stats[key]}\r\n                color='white'\r\n                height={15}\r\n              />\r\n            </FullContainer>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { CONSUMABLE_ITEM_ICONS, CONSUMABLE_ITEM_COLORS } from '../../icons/maps'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { considateConsumableListToStack } from '../../game/Consumable/util'\r\nimport { Theme } from '../../theme'\r\n\r\nconst HEIGHT = 70\r\nexport interface PartyCharacterConsumablesPropsT {\r\n  character: tProcessedCharacter\r\n  consumables: tConsumable[]\r\n  onClick?: (consumable: tConsumable, index: number) => void\r\n}\r\nexport const PartyCharacterConsumables = (\r\n  props: PartyCharacterConsumablesPropsT,\r\n) => {\r\n  const { character, consumables, onClick } = props\r\n  const stack = useMemo(() => considateConsumableListToStack(consumables), [\r\n    consumables,\r\n  ])\r\n  const onStackClick = (consumable: tConsumable) => {\r\n    let index = undefined\r\n    consumables.forEach((c, i) => {\r\n      if (c.id === consumable.id) index = i\r\n    })\r\n    if (consumable.skill.healing && !(character.healthOffset === 0))\r\n      return onClick && onClick(consumable, index || 0)\r\n  }\r\n  const filler = Array(10 - stack.length).fill(null)\r\n\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ flexWrap: 'wrap', height: HEIGHT }}\r\n    >\r\n      {stack.map((s) => (\r\n        <PartyCharacterConsumable\r\n          key={s.consumable.id}\r\n          character={character}\r\n          consumable={s.consumable}\r\n          count={s.count}\r\n          onClick={onStackClick}\r\n        />\r\n      ))}\r\n      {filler.map((f, i) => (\r\n        <ConsumableBox key={i} />\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\ninterface ConsumableBoxPropsT {\r\n  children?: JSX.Element\r\n  onClick?: () => void\r\n}\r\nconst ConsumableBox = (props: ConsumableBoxPropsT) => {\r\n  const { children, onClick } = props\r\n  return (\r\n    <FlexContainer\r\n      onClick={() => onClick && onClick()}\r\n      style={{\r\n        height: HEIGHT / 2,\r\n        width: HEIGHT / 2,\r\n        boxSizing: 'border-box',\r\n        border: '1px solid rgba(0,0,0,0.5)',\r\n        background: Theme.otherGrey,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        cursor: onClick ? 'pointer' : 'default',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      {children}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface PartyCharacterConsumablePropsT {\r\n  consumable: tConsumable\r\n  character: tProcessedCharacter\r\n  count: number\r\n  onClick?: (consumable: tConsumable) => void\r\n}\r\nexport const PartyCharacterConsumable = (\r\n  props: PartyCharacterConsumablePropsT,\r\n) => {\r\n  const { character, consumable, count, onClick } = props\r\n  return (\r\n    <HoverToolTip\r\n      content={\r\n        <PartyCharacterConsumableTooltip\r\n          character={character}\r\n          consumable={consumable}\r\n        />\r\n      }\r\n    >\r\n      <ConsumableBox onClick={() => onClick && onClick(consumable)}>\r\n        <>\r\n          <Icon\r\n            src={CONSUMABLE_ITEM_ICONS[consumable.cid]}\r\n            fill={CONSUMABLE_ITEM_COLORS[consumable.cid]}\r\n            size={24}\r\n          />\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: -2,\r\n              right: 1,\r\n            }}\r\n          >\r\n            {count}\r\n          </div>\r\n        </>\r\n      </ConsumableBox>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface PartyCharacterConsumableTooltipProps {\r\n  character: tProcessedCharacter\r\n  consumable: tConsumable\r\n}\r\nexport const PartyCharacterConsumableTooltip = (\r\n  props: PartyCharacterConsumableTooltipProps,\r\n) => {\r\n  const { character, consumable } = props\r\n  return (\r\n    <BoxContainer>\r\n      <strong>{consumable.name}</strong>\r\n      {consumable.skill.healing && (\r\n        <div>Heal for {character.stats.consumableHealthGainOffset} HP</div>\r\n      )}\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { withStyle, styled } from 'styletron-react'\r\nimport { Monodiv } from '../../elements/monospace'\r\nimport { Icon } from '../Icon'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tStats, tBaseStats } from '../../game/Stats/type'\r\nimport { Theme } from '../../theme'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\n\r\ninterface CharacterStatPropsT {\r\n  statKey: keyof tBaseStats\r\n  character: tProcessedCharacter\r\n}\r\nconst CharacterStat = (props: CharacterStatPropsT) => {\r\n  const { statKey, character } = props\r\n  return (\r\n    <HoverToolTip content={<BoxContainer>{statKey}</BoxContainer>}>\r\n      <ResourceE $color={getStatColor(character, statKey)}>\r\n        <Icon\r\n          src={STAT_ICONS[statKey] || ''}\r\n          fill={getStatColor(character, statKey)}\r\n          size={14}\r\n          style={{ marginRight: 4 }}\r\n        />\r\n        {character.stats[statKey]}\r\n      </ResourceE>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface StatsProps {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Stats = (props: StatsProps) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer style={{ paddingTop: 2, background: Theme.darkBgColor }}>\r\n      <CharacterStat statKey='vigor' character={character} />\r\n      <CharacterStat statKey='strength' character={character} />\r\n      <CharacterStat statKey='intelligence' character={character} />\r\n      <CharacterStat statKey='dexterity' character={character} />\r\n      <CharacterStat statKey='charisma' character={character} />\r\n      <CharacterStat statKey='agility' character={character} />\r\n      <CharacterStat statKey='luck' character={character} />\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nconst ResourceE = styled('div', (props: any) => ({\r\n  height: 15,\r\n  color: props.$color,\r\n  fontSize: '15px',\r\n  padding: '0px 4px',\r\n  lineHeight: '15px',\r\n  flex: 1,\r\n  textAlign: 'center',\r\n  background: Theme.darkBgColor,\r\n  display: 'flex',\r\n}))\r\n\r\nconst getStatColor = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n): string => {\r\n  const a = character.stats[key]\r\n  const b = character.rawStats[key]\r\n  if (a > b) return 'lightgreen'\r\n  if (b > a) return 'lightcoral'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface NamePropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Name = (props: NamePropsT) => {\r\n  const { character } = props\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        marginTop: -3,\r\n        marginRight: -3,\r\n        padding: '0 4px',\r\n        paddingLeft: 8,\r\n        background: Theme.lightBgColor,\r\n        height: 20,\r\n        lineHeight: '24px',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n        boxShadow: '0px 4px 5px black',\r\n        zIndex: 2,\r\n      }}\r\n    >\r\n      <FullContainer\r\n        style={{\r\n          fontFamily: 'Bangers',\r\n          letterSpacing: '1px',\r\n          textShadow: '0px 0px 2px black',\r\n          flex: 1,\r\n        }}\r\n      >\r\n        {character.name}\r\n      </FullContainer>\r\n      <div\r\n        style={{\r\n          fontSize: 12,\r\n          color: 'rgba(255,255,255,0.3)',\r\n        }}\r\n      >\r\n        {character.class}\r\n      </div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { tStats } from '../../game/Stats/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { STAT_BONUS_KEYS } from '../../game/Stats/constants'\r\n\r\nconst getStatColor = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tStats,\r\n): string => {\r\n  const a = character.stats[key]\r\n  const b = character.rawStats[key]\r\n  if (a === undefined || b === undefined) return 'rgba(255,255,255,0.6)'\r\n  if (a > b) return 'lightgreen'\r\n  if (b > a) return 'lightcoral'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n\r\nexport interface StatBarPropsT {\r\n  character: tProcessedCharacter\r\n}\r\nexport const StatBar = (props: StatBarPropsT) => {\r\n  const { character } = props\r\n\r\n  return (\r\n    <BoxContainer>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-between',\r\n          width: 360,\r\n          paddingTop: 10,\r\n          paddingBottom: 6,\r\n        }}\r\n      >\r\n        {STAT_BONUS_KEYS.map((key) => (\r\n          <FlexContainer\r\n            key={key}\r\n            style={{\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Icon\r\n              src={STAT_ICONS[key] || ''}\r\n              size={20}\r\n              fill={getStatColor(character, key)}\r\n              style={{ marginRight: 4 }}\r\n            />\r\n            <span style={{ color: getStatColor(character, key) }}>\r\n              {character.stats[key]}\r\n            </span>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { RESOURCE_ICONS, WEAPON_TYPE_ICONS } from '../../icons/maps'\r\nimport { styled } from 'styletron-react'\r\nimport { ClickToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Button } from '../../elements/button'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tArmor, tArmorResourceType } from '../../game/Armor/type'\r\nimport { CHARACTER_RESOURCES } from '../../game/Item/constants'\r\nimport { Theme } from '../../theme'\r\n\r\nconst ItemRow = styled(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    marginBottom: '4px',\r\n    textShadow: '1px 1px 1px black',\r\n    background: props.$disabled\r\n      ? 'rgba(255,255,255,0.05)'\r\n      : 'linear-gradient(90deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 100%)',\r\n    paddingLeft: '8px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n  }\r\n})\r\n\r\nexport interface ItemPropsT {\r\n  character: tProcessedCharacter\r\n  setActiveItem: (item: tWeapon | tArmor | undefined) => void\r\n}\r\nexport const Items = (props: ItemPropsT) => {\r\n  const { character, setActiveItem } = props\r\n  const { playerCanEquipItem } = useUIContext()\r\n  return (\r\n    <FlexContainer $full $direction='column'>\r\n      <ArmorItem\r\n        disabled={false}\r\n        character={character}\r\n        resource={'weapon'}\r\n        onHover={setActiveItem}\r\n        canUnequip={playerCanEquipItem}\r\n      />\r\n      {CHARACTER_RESOURCES.map((res) => {\r\n        const disabled = res === 'offhand' && character.weapon.twoHand\r\n        return (\r\n          <ArmorItem\r\n            disabled={disabled}\r\n            character={character}\r\n            resource={res}\r\n            onHover={setActiveItem}\r\n            canUnequip={playerCanEquipItem}\r\n          />\r\n        )\r\n      })}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface ArmorItemProps {\r\n  character: tProcessedCharacter\r\n  resource: tArmorResourceType | 'weapon'\r\n  canUnequip?: boolean\r\n  disabled?: boolean\r\n  onHover: (item: tArmor | tWeapon | undefined) => void\r\n}\r\nexport const ArmorItem = (props: ArmorItemProps) => {\r\n  const {\r\n    character,\r\n    resource,\r\n    canUnequip = true,\r\n    disabled = false,\r\n    onHover,\r\n  } = props\r\n  const { unequipItem } = usePartyContext()\r\n  const item =\r\n    resource === 'weapon'\r\n      ? character.weapon\r\n      : character.armor.find((a) => a.resource === resource)\r\n  return (\r\n    <ClickToolTip\r\n      direction='down'\r\n      distance={-2}\r\n      content={() => (\r\n        <>\r\n          {canUnequip && (\r\n            <BoxContainer\r\n              substyle={{\r\n                padding: 4,\r\n                width: 190,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                background: Theme.otherGrey,\r\n              }}\r\n            >\r\n              <Button\r\n                style={{ padding: '4px 8px' }}\r\n                onClick={() => {\r\n                  if (item) {\r\n                    if (resource === 'weapon') {\r\n                    } else {\r\n                      unequipItem(character.id, item)\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                Unequip\r\n              </Button>\r\n              <Button style={{ padding: '4px 8px' }}>Cancel</Button>\r\n            </BoxContainer>\r\n          )}\r\n        </>\r\n      )}\r\n    >\r\n      {({ onClick, ref }) => (\r\n        <ItemRow\r\n          ref={ref}\r\n          $disabled={disabled}\r\n          onMouseEnter={() => onHover(item)}\r\n          onClick={() => {\r\n            if (item) onClick()\r\n          }}\r\n        >\r\n          <Icon\r\n            src={\r\n              resource === 'weapon'\r\n                ? WEAPON_TYPE_ICONS[(item as tWeapon)?.type || 'fist']\r\n                : RESOURCE_ICONS[resource] || ''\r\n            }\r\n            size={16}\r\n            fill={disabled ? 'rgba(255,255,255,0.3)' : 'white'}\r\n            style={{ marginRight: 6 }}\r\n          />\r\n          {item?.name}\r\n        </ItemRow>\r\n      )}\r\n    </ClickToolTip>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface NamePropsT {\r\n  name: string\r\n}\r\n\r\nexport const Name = (props: NamePropsT) => {\r\n  const { name } = props\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        width: '100%',\r\n        height: 40,\r\n        marginBottom: -20,\r\n        marginTop: -20,\r\n      }}\r\n    >\r\n      <FullContainer />\r\n      <BoxContainer\r\n        style={{ zIndex: 2 }}\r\n        substyle={{ background: Theme.darkBgColor }}\r\n      >\r\n        {name}\r\n      </BoxContainer>\r\n      <FullContainer />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { tCharacter } from '../../game/Character/type'\r\n\r\nexport interface CharacterImagePropsT {\r\n  character: tCharacter\r\n  size: number\r\n}\r\nexport const CharacterImage = (props: CharacterImagePropsT) => {\r\n  const { character, size } = props\r\n  return (\r\n    <img\r\n      alt='profile'\r\n      height={size}\r\n      width={size}\r\n      src={`https://picsum.photos/seed/${character.name}/94/94`}\r\n      style={{\r\n        height: size,\r\n        width: size,\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { CharacterImage } from '../CharacterImage'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\n\r\nconst SIZE = 100\r\nexport interface ImagePropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Image = (props: ImagePropsT) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n      <div>\r\n        <BoxContainer\r\n          style={{ marginRight: 20, marginBottom: 10 }}\r\n          substyle={{ padding: 0, height: SIZE, width: SIZE }}\r\n        >\r\n          <CharacterImage character={character} size={100} />\r\n        </BoxContainer>\r\n      </div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { withStyle } from 'styletron-react'\r\nimport { Icon } from '../Icon'\r\nimport { ARMOR_TYPE_ICONS } from '../../icons/maps'\r\nimport { ClickToolTip } from '../Tooltip'\r\nimport { Button } from '../../elements/button'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ArmorListPropsT {\r\n  party: tProcessedParty\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n  equipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n  setActiveItem: (item: tWeapon | tArmor) => void\r\n}\r\n\r\nconst ArmorItem = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    marginBottom: '4px',\r\n    textShadow: '1px 1px 1px black',\r\n    background: props.$active ? 'rgba(255,255,255,0.2)' : undefined,\r\n    paddingLeft: '8px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    cursor: 'pointer',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n  }\r\n})\r\n\r\nexport const ArmorList = (props: ArmorListPropsT) => {\r\n  const { party, character, canEquip, equipItem, setActiveItem } = props\r\n  const [activeItemId, setActiveItemId] = useState<string | undefined>()\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {party.items\r\n        .filter((i) => i.itemType === 'armor')\r\n        .map((i) => i as tArmor)\r\n        .sort((a, b) => a.name.localeCompare(b.name))\r\n        .map((armor) => (\r\n          <ClickToolTip\r\n            direction='down'\r\n            distance={-2}\r\n            content={() => (\r\n              <>\r\n                {canEquip && (\r\n                  <BoxContainer\r\n                    substyle={{\r\n                      padding: 4,\r\n                      width: 346,\r\n                      display: 'flex',\r\n                      justifyContent: 'center',\r\n                      background: Theme.otherGrey,\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      style={{ padding: '4px 8px' }}\r\n                      onClick={(e) => {\r\n                        e.preventDefault()\r\n                        e.stopPropagation()\r\n                        equipItem(character.id, armor)\r\n                        setActiveItemId(undefined)\r\n                      }}\r\n                    >\r\n                      Equip\r\n                    </Button>\r\n                    <Button\r\n                      style={{ padding: '4px 8px' }}\r\n                      onClick={() => {\r\n                        setActiveItemId(undefined)\r\n                      }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </BoxContainer>\r\n                )}\r\n              </>\r\n            )}\r\n          >\r\n            {({ onClick, ref }) => (\r\n              <ArmorItem\r\n                $active={armor.id === activeItemId}\r\n                onMouseEnter={() => setActiveItem(armor)}\r\n                ref={ref}\r\n                onClick={(e: MouseEvent) => {\r\n                  e.stopPropagation()\r\n                  e.preventDefault()\r\n                  setActiveItemId(armor.id)\r\n                  onClick()\r\n                }}\r\n              >\r\n                <Icon\r\n                  src={ARMOR_TYPE_ICONS[armor.type]}\r\n                  size={14}\r\n                  style={{ marginRight: 10 }}\r\n                  fill={ITEM_RARITY_COLORS[armor.rarity]}\r\n                  shadow\r\n                />\r\n                <span style={{ color: ITEM_RARITY_COLORS[armor.rarity] }}>\r\n                  {armor.name}\r\n                </span>\r\n              </ArmorItem>\r\n            )}\r\n          </ClickToolTip>\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { withStyle } from 'styletron-react'\r\nimport { ClickToolTip } from '../Tooltip'\r\nimport { Button } from '../../elements/button'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface WeaponListPropsT {\r\n  party: tProcessedParty\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n  equipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n  setActiveItem: (item: tWeapon | tArmor) => void\r\n}\r\n\r\nconst WeaponItem = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    marginBottom: '4px',\r\n    textShadow: '1px 1px 1px black',\r\n    background: props.$active ? 'rgba(255,255,255,0.2)' : undefined,\r\n    paddingLeft: '8px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    cursor: 'pointer',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n  }\r\n})\r\n\r\nexport const WeaponList = (props: WeaponListPropsT) => {\r\n  const { party, character, canEquip, equipItem, setActiveItem } = props\r\n  const [activeItemId, setActiveItemId] = useState<string | undefined>()\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {party.items\r\n        .filter((i) => i.itemType === 'weapon')\r\n        .map((i) => i as tArmor)\r\n        .sort((a, b) => a.name.localeCompare(b.name))\r\n        .map((weapon) => (\r\n          <ClickToolTip\r\n            direction='down'\r\n            distance={-2}\r\n            content={() => (\r\n              <>\r\n                {canEquip && (\r\n                  <BoxContainer\r\n                    substyle={{\r\n                      padding: 4,\r\n                      width: 346,\r\n                      display: 'flex',\r\n                      justifyContent: 'center',\r\n                      background: Theme.otherGrey,\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      style={{ padding: '4px 8px' }}\r\n                      onClick={(e) => {\r\n                        e.preventDefault()\r\n                        e.stopPropagation()\r\n                        equipItem(character.id, weapon)\r\n                        setActiveItemId(undefined)\r\n                      }}\r\n                    >\r\n                      Equip\r\n                    </Button>\r\n                  </BoxContainer>\r\n                )}\r\n              </>\r\n            )}\r\n          >\r\n            {({ onClick, ref }) => (\r\n              <WeaponItem\r\n                $active={weapon.id === activeItemId}\r\n                onMouseEnter={() => setActiveItem(weapon)}\r\n                ref={ref}\r\n                onClick={(e: MouseEvent) => {\r\n                  e.stopPropagation()\r\n                  e.preventDefault()\r\n                  setActiveItemId(weapon.id)\r\n                  onClick()\r\n                }}\r\n              >\r\n                <span style={{ color: ITEM_RARITY_COLORS[weapon.rarity] }}>\r\n                  {weapon.name}\r\n                </span>\r\n              </WeaponItem>\r\n            )}\r\n          </ClickToolTip>\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport Items from '../../icons/svg/delapouite/light-backpack.svg'\r\nimport Weapons from '../../icons/svg/lorc/broadsword.svg'\r\nimport Armor from '../../icons/svg/delapouite/leather-armor.svg'\r\nimport { Icon } from '../Icon'\r\nimport { ArmorList } from './ArmorList'\r\nimport { WeaponList } from './WeaponList'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\n\r\nexport interface MenuOptionT {\r\n  key: string\r\n  icon: string\r\n  count: (character: tProcessedCharacter, party: tProcessedParty) => number\r\n  render: (\r\n    character: tProcessedCharacter,\r\n    party: tProcessedParty,\r\n    canEquip: boolean,\r\n    equipItem: (characterId: string, item: tWeapon | tArmor) => void,\r\n    setActiveItem: (item: tWeapon | tArmor) => void,\r\n  ) => JSX.Element\r\n}\r\nexport const ACTIVE_CHARACTER_MENU_KEYS: MenuOptionT[] = [\r\n  {\r\n    key: 'items',\r\n    icon: Items,\r\n    count: (c) => c.consumables.length,\r\n    render: (character) => <div>items</div>,\r\n  },\r\n  {\r\n    key: 'weapons',\r\n    icon: Weapons,\r\n    count: (c, p) => p.items.filter((i) => i.itemType === 'weapon').length,\r\n    render: (character, party, canEquip, equipItem, setActiveItem) => (\r\n      <WeaponList\r\n        character={character}\r\n        party={party}\r\n        canEquip={canEquip}\r\n        equipItem={equipItem}\r\n        setActiveItem={setActiveItem}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    key: 'armor',\r\n    icon: Armor,\r\n    count: (c, p) => p.items.filter((i) => i.itemType === 'armor').length,\r\n    render: (character, party, canEquip, equipItem, setActiveItem) => (\r\n      <ArmorList\r\n        character={character}\r\n        party={party}\r\n        canEquip={canEquip}\r\n        equipItem={equipItem}\r\n        setActiveItem={setActiveItem}\r\n      />\r\n    ),\r\n  },\r\n  /*{\r\n    key: 'ot1',\r\n    icon: '',\r\n    count: (c) => 0,\r\n    render: (character) => <div>ot1</div>,\r\n  },\r\n  {\r\n    key: 'ot2',\r\n    icon: '',\r\n    count: (c) => 0,\r\n    render: (character) => <div>ot2</div>,\r\n  },\r\n  {\r\n    key: 'ot3',\r\n    icon: '',\r\n    count: (c) => 0,\r\n    render: (character) => <div>ot3</div>,\r\n  },*/\r\n]\r\n\r\nexport interface MenuSelectPropsT {\r\n  character: tProcessedCharacter\r\n  party: tProcessedParty\r\n  activeKey: string\r\n  onActiveKeyChange: (key: string) => void\r\n}\r\n\r\nexport const MenuSelect = (props: MenuSelectPropsT) => {\r\n  const { character, party, activeKey, onActiveKeyChange } = props\r\n\r\n  return (\r\n    <FlexContainer style={{ justifyContent: 'center', marginTop: 8 }}>\r\n      {ACTIVE_CHARACTER_MENU_KEYS.map((option) => (\r\n        <Button\r\n          style={{\r\n            padding: '4px 0',\r\n            width: 56,\r\n            fontSize: 12,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            background: option.key === activeKey ? '#444' : undefined,\r\n          }}\r\n          onClick={() => {\r\n            onActiveKeyChange(option.key)\r\n          }}\r\n        >\r\n          <FullContainer />\r\n          <FullContainer>\r\n            <Icon src={option.icon} size={14} />\r\n          </FullContainer>\r\n          <FullContainer style={{ paddingRight: 2 }}>\r\n            {option.count(character, party)}\r\n          </FullContainer>\r\n        </Button>\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { ArmorPreview } from '../ArmorPreview'\r\nimport { WeaponPreview } from '../WeaponPreview'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\n\r\nexport interface HoverAreaPropsT {\r\n  character: tProcessedCharacter\r\n  activeItem: tWeapon | tArmor\r\n}\r\n\r\nexport const HoverArea = (props: HoverAreaPropsT) => {\r\n  const { character, activeItem } = props\r\n  const foundArmor = character.armor.find(\r\n    (a) => a.resource === (activeItem as tArmor).resource,\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {activeItem.itemType === 'armor' && (\r\n        <FlexContainer>\r\n          {foundArmor && (\r\n            <ArmorPreview armor={foundArmor} showEquipButton={false} />\r\n          )}\r\n          {foundArmor?.id !== activeItem.id && (\r\n            <ArmorPreview\r\n              armor={activeItem as tArmor}\r\n              showEquipButton={false}\r\n            />\r\n          )}\r\n        </FlexContainer>\r\n      )}\r\n      {activeItem.itemType === 'weapon' && (\r\n        <FlexContainer>\r\n          <WeaponPreview\r\n            weapon={character.weapon}\r\n            showEquipButton={false}\r\n            character={character}\r\n          />\r\n          {character.weapon.id !== activeItem.id && (\r\n            <WeaponPreview\r\n              character={character}\r\n              weapon={activeItem as tWeapon}\r\n              showEquipButton={false}\r\n            />\r\n          )}\r\n        </FlexContainer>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { StatBar } from './StatBar'\r\nimport { Items } from './Items'\r\nimport { Name } from './Name'\r\nimport { Image } from './Image'\r\nimport { MenuSelect, ACTIVE_CHARACTER_MENU_KEYS } from './MenuSelect'\r\nimport { HoverArea } from './HoverArea'\r\nimport { Badge } from '../../elements/badge'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface PartyActiveCharacterPropsT {\r\n  character: tProcessedCharacter\r\n  party: tProcessedParty\r\n  equipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n  canEquip: boolean\r\n  onRequestClose: () => void\r\n}\r\n\r\nexport const PartyActiveCharacter = (props: PartyActiveCharacterPropsT) => {\r\n  const { character, party, canEquip, equipItem, onRequestClose } = props\r\n  const [activeMenuKey, setActiveMenuKey] = useState('armor')\r\n  const [activeItem, setActiveItem] = useState<tArmor | tWeapon | undefined>()\r\n  const activeOption = ACTIVE_CHARACTER_MENU_KEYS.find(\r\n    (o) => o.key === activeMenuKey,\r\n  )\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        justifyContent: 'flex-end',\r\n      }}\r\n    >\r\n      <Badge\r\n        onClick={onRequestClose}\r\n        $top={-10}\r\n        $right={-2}\r\n        style={{ cursor: 'pointer', userSelect: 'none' }}\r\n      >\r\n        X\r\n      </Badge>\r\n      <FlexContainer\r\n        style={{\r\n          maxHeight: 440,\r\n          padding: 10,\r\n          position: 'absolute',\r\n          left: '-6px',\r\n          width: 486,\r\n          justifyContent: 'flex-end',\r\n        }}\r\n      >\r\n        {activeItem && (\r\n          <HoverArea character={character} activeItem={activeItem} />\r\n        )}\r\n      </FlexContainer>\r\n      <BoxContainer substyle={{ background: Theme.darkBgColor, padding: 0 }}>\r\n        <FlexContainer $direction='column'>\r\n          <Name name={character.name} />\r\n          <StatBar character={character} />\r\n          <BoxContainer\r\n            substyle={{\r\n              background: Theme.darkBgColor,\r\n              padding: '16px 0 2px 0',\r\n            }}\r\n          >\r\n            <FlexContainer>\r\n              <Items character={character} setActiveItem={setActiveItem} />\r\n              <Image character={character} />\r\n            </FlexContainer>\r\n            <MenuSelect\r\n              character={character}\r\n              party={party}\r\n              activeKey={activeMenuKey}\r\n              onActiveKeyChange={setActiveMenuKey}\r\n            />\r\n          </BoxContainer>\r\n          <BoxContainer\r\n            substyle={{\r\n              background: Theme.darkBgColor,\r\n              padding: '4px 0',\r\n              height: 200,\r\n              overflow: 'auto',\r\n            }}\r\n          >\r\n            {activeOption &&\r\n              activeOption.render(\r\n                character,\r\n                party,\r\n                canEquip,\r\n                equipItem,\r\n                setActiveItem,\r\n              )}\r\n          </BoxContainer>\r\n        </FlexContainer>\r\n      </BoxContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Details from '../../icons/svg/delapouite/skills.svg'\r\nimport Inventory from '../../icons/svg/lorc/knapsack.svg'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Tooltip } from '../Tooltip'\r\nimport { PartyActiveCharacter } from '../PartyActiveCharacter'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { Hover } from '../Hover'\r\nimport { Icon } from '../Icon'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { animated, useSpring } from 'react-spring'\r\n\r\nexport interface ActionsPropsT {\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n}\r\n\r\nexport const Actions = (props: ActionsPropsT) => {\r\n  const { character, canEquip } = props\r\n  const { party, equipItem } = usePartyContext()\r\n  const {\r\n    openCharacterInventoryId,\r\n    setOpenCharacterInventoryId,\r\n  } = useUIContext()\r\n  const inventoryOpen = character.id === openCharacterInventoryId\r\n  const inventoryStyle = useSpring({\r\n    opacity: inventoryOpen ? 1 : 0,\r\n    config: { tension: 500 },\r\n  })\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{ justifyContent: 'center' }}\r\n    >\r\n      <FlexContainer\r\n        $full\r\n        style={{ alignItems: 'center', justifyContent: 'center' }}\r\n      >\r\n        <Tooltip\r\n          isOpen={inventoryOpen}\r\n          direction='up'\r\n          distance={40}\r\n          background='rgba(0,0,0,0.7)'\r\n          arrow\r\n          content={\r\n            <animated.div\r\n              style={{ minWidth: 887, minHeight: 444, ...inventoryStyle }}\r\n            >\r\n              {inventoryOpen && (\r\n                <PartyActiveCharacter\r\n                  character={character}\r\n                  party={party}\r\n                  equipItem={equipItem}\r\n                  canEquip={canEquip}\r\n                  onRequestClose={() => {\r\n                    setOpenCharacterInventoryId(undefined)\r\n                  }}\r\n                />\r\n              )}\r\n            </animated.div>\r\n          }\r\n        >\r\n          <Hover delay={0}>\r\n            {({ isHovering }) => (\r\n              <Icon\r\n                src={Inventory}\r\n                fill={\r\n                  isHovering ? 'rgba(255,255,255,1)' : 'rgba(255,255,255,0.7)'\r\n                }\r\n                size={18}\r\n                shadow\r\n                onClick={() => {\r\n                  if (character.id === openCharacterInventoryId) {\r\n                    return setOpenCharacterInventoryId(undefined)\r\n                  }\r\n                  setOpenCharacterInventoryId(character.id)\r\n                }}\r\n                style={{ padding: 6, cursor: 'pointer' }}\r\n              />\r\n            )}\r\n          </Hover>\r\n        </Tooltip>\r\n      </FlexContainer>\r\n      <FlexContainer\r\n        $full\r\n        style={{ alignItems: 'center', justifyContent: 'center' }}\r\n      >\r\n        <Icon\r\n          src={Details}\r\n          fill={'rgba(255,255,255,0.7)'}\r\n          size={18}\r\n          shadow\r\n          style={{ padding: 6, cursor: 'pointer' }}\r\n        />\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { noneg } from '../../util'\r\nimport { usePrevious } from '../../hooks/usePrevious'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\n\r\nexport interface HealthPropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Health = (props: HealthPropsT) => {\r\n  const { character } = props\r\n  const health = noneg(character.health)\r\n  const previousHealth = usePrevious<number>(health) || 0\r\n  const [storedHealth, setStoredHealth] = useState(0)\r\n\r\n  useEffect(() => {\r\n    setStoredHealth(health)\r\n    // toast(`${character.name} -${storedHealth - health} HP`)\r\n  }, [health])\r\n\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <span\r\n        style={{\r\n          padding: 4,\r\n          paddingLeft: 2,\r\n          fontSize: 56,\r\n          height: 62,\r\n          width: 62,\r\n          lineHeight: '72px',\r\n          color: '#b55553',\r\n          fontFamily: 'New Rocker',\r\n          minWidth: 44,\r\n          display: 'inline-block',\r\n          textAlign: 'center',\r\n          textShadow: '1px 1px 3px black',\r\n        }}\r\n      >\r\n        <Spring\r\n          from={{ hp: previousHealth || 0 }}\r\n          to={{ hp: health }}\r\n          config={{ friction: 70, mass: 5, tension: 300, clamp: true }}\r\n        >\r\n          {(hpp) => <span style={{}}>{Math.floor(hpp.hp)}</span>}\r\n        </Spring>\r\n      </span>\r\n      <ToastContainer />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { XPGauge, HealthGauge } from '../Gauge'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { styled } from 'styletron-react'\r\nimport { HoverBadge } from '../../elements/badge'\r\nimport { TagPreview } from '../TagPreview'\r\nimport { CharacterImage } from '../CharacterImage'\r\n\r\nimport { PartyCharacterConsumables } from '../PartyCharacterConsumables'\r\nimport { Stats } from './Stats'\r\nimport { Name } from './Name'\r\nimport { Actions } from './Actions'\r\nimport { Health } from './Health'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { usePlayerCharacterNotifications } from '../../hooks/usePlayerCharacterNotifications'\r\nimport { Icon } from '../Icon'\r\nimport { CHARACTER_CLASS_ICONS } from '../../icons/maps'\r\nimport { CHARACTER_CLASS_COLORS } from '../../game/Character/constants'\r\nimport { Theme } from '../../theme'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { ZERO_STATS } from '../../game/Stats/constants'\r\n\r\nexport interface PartyCharacterProps {\r\n  character: tProcessedCharacter\r\n  selected?: boolean\r\n  showActions?: boolean\r\n  onClick?: () => void\r\n  onConsumableClick?: (consumable: tConsumable, index: number) => void\r\n  push: (contents: JSX.Element, type?: string) => void\r\n}\r\nconst Wrapper = styled('div', (props: any) => {\r\n  const { $active, $targeted } = props\r\n  return {\r\n    margin: 10,\r\n    position: 'relative',\r\n    boxShadow: $active\r\n      ? '0px 0px 20px white'\r\n      : $targeted\r\n      ? '0px 0px 20px red'\r\n      : 'none',\r\n    transform: $active ? 'scale(1.04)' : 'scale(0.95)',\r\n    transition: 'all 0.4s',\r\n    userSelect: 'none',\r\n  }\r\n})\r\n\r\nexport const PartyCharacter = (props: PartyCharacterProps) => {\r\n  const {\r\n    character,\r\n    selected,\r\n    showActions = true,\r\n    onConsumableClick,\r\n    push,\r\n  } = props\r\n  const { playerCanEquipItem } = useUIContext()\r\n  const { activeRound } = useCombatContext()\r\n  const targetIds = activeRound?.targetResults.map((r) => r.target.id)\r\n  usePlayerCharacterNotifications(character, push)\r\n  return (\r\n    <Wrapper\r\n      $active={selected}\r\n      $targeted={targetIds?.includes(character.id)}\r\n      style={{\r\n        opacity: character.health <= 0 ? 0.5 : 1,\r\n      }}\r\n    >\r\n      <BoxContainer\r\n        style={{\r\n          borderWidth: 2,\r\n          transition: 'all 1s',\r\n        }}\r\n        substyle={{ padding: 0, minWidth: 396 }}\r\n      >\r\n        <FlexContainer style={{ border: '2px solid black' }}>\r\n          <FlexContainer\r\n            style={{\r\n              borderRight: '2px solid black',\r\n              background:\r\n                CHARACTER_CLASS_COLORS[character.class] || Theme.darkBgColor,\r\n              padding: 8,\r\n              alignItems: 'center',\r\n              transition: 'all 0.3s',\r\n            }}\r\n          >\r\n            <Icon\r\n              src={CHARACTER_CLASS_ICONS[character.class]}\r\n              size={100}\r\n              shadow\r\n              style={{ marginTop: -16 }}\r\n              fill={selected ? 'white' : 'rgba(255,255,255,0.4)'}\r\n            />\r\n          </FlexContainer>\r\n          <FlexContainer $full $direction='column'>\r\n            <Name character={character} />\r\n            <FlexContainer>\r\n              <Health character={character} />\r\n              <FlexContainer $full style={{ maxWidth: 175, minWidth: 175 }}>\r\n                <PartyCharacterConsumables\r\n                  character={character}\r\n                  consumables={character.consumables}\r\n                  onClick={onConsumableClick}\r\n                />\r\n              </FlexContainer>\r\n              <FlexContainer $full $direction='column'>\r\n                {showActions && (\r\n                  <Actions\r\n                    character={character}\r\n                    canEquip={playerCanEquipItem}\r\n                  />\r\n                )}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n            <FullContainer />\r\n            <HealthGauge\r\n              character={character}\r\n              style={{ borderRight: 'none' }}\r\n            />\r\n            <XPGauge character={character} style={{ borderRight: 'none' }} />\r\n            <HoverBadge\r\n              badgeProps={{ $bottom: '18px', $left: '105px' }}\r\n              content={<BoxContainer>Character Level</BoxContainer>}\r\n            >\r\n              <span>{character.level}</span>\r\n            </HoverBadge>\r\n            <Stats character={character} />\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </BoxContainer>\r\n      <FlexContainer\r\n        style={{\r\n          position: 'absolute',\r\n          top: '-24px',\r\n          right: '4px',\r\n        }}\r\n      >\r\n        <>\r\n          {character.status.map((status) => (\r\n            <TagPreview direction='up' status={status} />\r\n          ))}\r\n          {character.immunities.map((status, i) => (\r\n            <TagPreview\r\n              key={i}\r\n              immunity={true}\r\n              status={{\r\n                type: status,\r\n                immunities: [],\r\n                stack: 0,\r\n                stats: ZERO_STATS,\r\n                duration: -1,\r\n              }}\r\n            />\r\n          ))}\r\n        </>\r\n      </FlexContainer>\r\n      <HoverBadge\r\n        badgeProps={{\r\n          $bottom: '64px',\r\n          $left: '-12px',\r\n          $color: Theme.physicalColor,\r\n        }}\r\n        content={<BoxContainer>Armor</BoxContainer>}\r\n      >\r\n        <span>{character.stats.armor}</span>\r\n      </HoverBadge>\r\n      <HoverBadge\r\n        badgeProps={{\r\n          $bottom: '26px',\r\n          $left: '-12px',\r\n          $color: Theme.magicColor,\r\n        }}\r\n        content={<BoxContainer>Magic Resistance</BoxContainer>}\r\n      >\r\n        <span>{character.stats.resistance}</span>\r\n      </HoverBadge>\r\n      <HoverBadge\r\n        badgeProps={{\r\n          $bottom: '-10px',\r\n          $left: '-12px',\r\n          $color: Theme.evasionColor,\r\n        }}\r\n        content={<BoxContainer>Evasion</BoxContainer>}\r\n      >\r\n        <span>{character.stats.evasion}</span>\r\n      </HoverBadge>\r\n      <HoverBadge\r\n        direction='up'\r\n        content={<BoxContainer>Weapon Damage</BoxContainer>}\r\n        badgeProps={{\r\n          $bottom: '-12px',\r\n          $left: '40px',\r\n          $size: '35px',\r\n          $color:\r\n            character.weapon.damage.type === 'physical'\r\n              ? Theme.physicalColor\r\n              : Theme.magicColor,\r\n          style: { fontSize: 30, lineHeight: '32px' },\r\n        }}\r\n      >\r\n        <span>\r\n          {(character.weapon.damage.value +\r\n            character.stats.attackDamageOffset) *\r\n            character.stats.attackDamageModifier}\r\n        </span>\r\n      </HoverBadge>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { PartyCharacter } from '../PartyCharacter'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { ConfirmButton, RedButton } from '../../elements/button'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport {\r\n  LocalToastProvider,\r\n  LocalToastRp,\r\n} from '../../contexts/LocalToastContext'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\n\r\nexport interface PlayerPartyPropsT {\r\n  party: tProcessedParty\r\n  onCharacterClick?: (character: tProcessedCharacter) => void\r\n  onConsumableClick?: (\r\n    character: tProcessedCharacter,\r\n    consumableIndex: number,\r\n    consumable: tConsumable,\r\n  ) => void\r\n}\r\nexport const PlayerParty = (props: PlayerPartyPropsT) => {\r\n  const { party, onCharacterClick, onConsumableClick } = props\r\n  const {\r\n    activeCharacter,\r\n    selectedSkill,\r\n    next,\r\n    onSkillSelect,\r\n  } = useCombatContext()\r\n  const { currentEncounter } = useGameStateContext()\r\n\r\n  const showConfirmButton = (c: tProcessedCharacter) =>\r\n    selectedSkill &&\r\n    activeCharacter &&\r\n    c.health > 0 &&\r\n    ((selectedSkill.targetType === 'self' && c.id === activeCharacter.id) ||\r\n      selectedSkill.targetType === 'ally')\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          alignItems: 'flex-end',\r\n          cursor: selectedSkill?.targetType === 'party' ? 'pointer' : 'default',\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <FlexContainer\r\n            $direction='column'\r\n            key={c.id}\r\n            style={{ height: 177, justifyContent: 'flex-end' }}\r\n          >\r\n            {showConfirmButton(c) && (\r\n              <FlexContainer style={{ justifyContent: 'center' }}>\r\n                <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n                  <RedButton onClick={() => next(c)} $direction='up'>\r\n                    {c.id === activeCharacter.id\r\n                      ? 'Target Self'\r\n                      : 'Target Ally'}\r\n                  </RedButton>\r\n                </div>\r\n              </FlexContainer>\r\n            )}\r\n            <LocalToastRp>\r\n              {({ push }) => (\r\n                <PartyCharacter\r\n                  push={push}\r\n                  selected={\r\n                    currentEncounter &&\r\n                    currentEncounter.type !== 'shop' &&\r\n                    activeCharacter &&\r\n                    c &&\r\n                    c.id === activeCharacter.id\r\n                  }\r\n                  character={c}\r\n                  onClick={() => onCharacterClick && onCharacterClick(c)}\r\n                  onConsumableClick={(consumable, index) => {\r\n                    try {\r\n                      if (!c || !consumable || index === undefined) return\r\n                      if (onConsumableClick) {\r\n                        onConsumableClick(c, index, consumable)\r\n                      }\r\n                      if (c && c.id === activeCharacter.id) {\r\n                        onSkillSelect(consumable.skill, index)\r\n                      }\r\n                    } catch (e) {}\r\n                  }}\r\n                />\r\n              )}\r\n            </LocalToastRp>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && selectedSkill.targetType === 'party' && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n            <RedButton onClick={() => next(party)}>Target Party</RedButton>\r\n          </div>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useGameStateContext } from '../GameStateContext'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { makeParty } from '../../game/Party/util'\r\nimport { tCombatEncounter } from '../../game/Encounter/type'\r\nimport { CombatContextProvider } from '.'\r\n\r\nexport interface LinkedCombatContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const LinkedCombatContext = (\r\n  props: LinkedCombatContextProviderPropsT,\r\n) => {\r\n  const { children } = props\r\n  const { currentEncounter } = useGameStateContext()\r\n  const [combatParty, setCombatParty] = useState<tParty>(makeParty(0))\r\n  useEffect(() => {\r\n    if (currentEncounter && (currentEncounter as tCombatEncounter).party)\r\n      setCombatParty((currentEncounter as tCombatEncounter).party)\r\n  }, [currentEncounter])\r\n\r\n  return (\r\n    <CombatContextProvider\r\n      enemyParty={combatParty}\r\n      setEnemyParty={setCombatParty}\r\n      onRequestNewParty={() => {}}\r\n    >\r\n      {children}\r\n    </CombatContextProvider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ForestBg from './assets/img/flat-forestred.jpg'\r\nimport { Switch } from 'react-router-dom'\r\nimport { Combat } from './domain/Combat'\r\nimport { CombatLogContextProvider } from './contexts/CombatLogContext'\r\nimport { ModalContextProvider } from './contexts/ModalContext'\r\nimport { makeRoute, RouteController } from './routes'\r\nimport { Party } from './domain/Party'\r\nimport { Start } from './domain/Start'\r\nimport { UIContextProvider, useUIContext } from './contexts/UIContext'\r\nimport { usePartyContext } from './contexts/PartyContext'\r\nimport { PlayerParty } from './components/PlayerParty'\r\nimport { FlexContainer, FullContainer } from './elements/flex'\r\nimport { LinkedCombatContext } from './contexts/CombatContext/context'\r\n\r\nconst CombatDomain = () => {\r\n  return (\r\n    <CombatLogContextProvider>\r\n      <Combat />\r\n    </CombatLogContextProvider>\r\n  )\r\n}\r\n\r\nconst GlobalCharacters = () => {\r\n  const { party } = usePartyContext()\r\n  const { onCharacterConsumableClick } = useUIContext()\r\n  return (\r\n    <div style={{ marginBottom: 30 }}>\r\n      <PlayerParty\r\n        party={party}\r\n        onConsumableClick={(c, i, item) => {\r\n          if (onCharacterConsumableClick) {\r\n            onCharacterConsumableClick(c, i, item)\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const App = () => {\r\n  return (\r\n    <ModalContextProvider>\r\n      <LinkedCombatContext>\r\n        <UIContextProvider>\r\n          <FlexContainer\r\n            $full\r\n            $direction='column'\r\n            style={{\r\n              height: '100%',\r\n              overflow: 'hidden',\r\n              background: `url(${ForestBg}) center center fixed no-repeat`,\r\n              backgroundSize: 'cover',\r\n            }}\r\n          >\r\n            <FlexContainer\r\n              $full\r\n              $direction='column'\r\n              style={{ background: 'rgba(20,0,80,0.3)' }}\r\n            >\r\n              <RouteController />\r\n              <FullContainer>\r\n                <Switch>\r\n                  {makeRoute('/party', Party)}\r\n                  {makeRoute('/combat', CombatDomain)}\r\n                  {makeRoute('/', Start)}\r\n                </Switch>\r\n              </FullContainer>\r\n              <GlobalCharacters />\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        </UIContextProvider>\r\n      </LinkedCombatContext>\r\n    </ModalContextProvider>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './index.css'\n\nimport { Provider as StyletronProvider, DebugEngine } from 'styletron-react'\nimport { Client as Styletron } from 'styletron-engine-atomic'\nimport { Provider as ReduxProvider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { makeStore } from './state'\nimport { PartyContextProvider } from './contexts/PartyContext'\nimport { GameStateContextProvider } from './contexts/GameStateContext'\n\nconst debug = process.env.NODE_ENV === 'production' ? void 0 : new DebugEngine()\nconst engine: Styletron = new Styletron()\nconst store = makeStore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n        <GameStateContextProvider>\n          <PartyContextProvider>\n            <Router>\n              <App />\n            </Router>\n          </PartyContextProvider>\n        </GameStateContextProvider>\n      </StyletronProvider>\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport party from './party'\r\nimport game from './game'\r\n\r\nexport const makeStore = () =>\r\n  createStore(combineReducers({ party, game }), compose(applyMiddleware(thunk)))\r\n"],"sourceRoot":""}