{"version":3,"sources":["icons/svg/lorc/broadsword.svg","icons/svg/delapouite/coins.svg","icons/svg/lorc/dodging.svg","icons/svg/lorc/sprint.svg","icons/svg/delapouite/shield-impact.svg","icons/svg/lorc/heavy-timer.svg","icons/svg/lorc/ubisoft-sun.svg","icons/svg/lorc/flat-hammer.svg","icons/svg/delapouite/g-clef.svg","icons/svg/lorc/shieldcomb.svg","icons/svg/delapouite/chest-armor.svg","icons/svg/delapouite/viking-shield.svg","icons/svg/lorc/leather-boot.svg","icons/svg/lorc/visored-helm.svg","assets/img/flat-forestred.jpg","icons/svg/lorc/wolf-head.svg","icons/svg/delapouite/orc-head.svg","icons/svg/lorc/imp-laugh.svg","icons/svg/lorc/bee.svg","icons/svg/delapouite/bandit.svg","icons/svg/delapouite/pirate-captain.svg","icons/svg/lorc/cowled.svg","icons/svg/lorc/laurel-crown.svg","icons/svg/delapouite/heart-beats.svg","icons/svg/delapouite/biceps.svg","icons/svg/lorc/brain.svg","icons/svg/delapouite/eye-target.svg","icons/svg/lorc/juggler.svg","icons/svg/lorc/clover.svg","icons/svg/lorc/star-swirl.svg","icons/svg/sbed/targeted.svg","icons/svg/delapouite/sticky-boot.svg","icons/svg/lorc/biohazard.svg","icons/svg/carl-olsen/flame.svg","icons/svg/lorc/bleeding-wound.svg","icons/svg/lorc/high-shot.svg","icons/svg/lorc/fire-zone.svg","icons/svg/lorc/hammer-drop.svg","icons/svg/lorc/bordered-shield.svg","icons/svg/lorc/energy-arrow.svg","icons/svg/delapouite/backward-time.svg","icons/svg/lorc/double-shot.svg","icons/svg/delapouite/extra-time.svg","icons/svg/sbed/health-normal.svg","icons/svg/lorc/wave-strike.svg","icons/svg/lorc/life-support.svg","icons/svg/lorc/axe-in-stump.svg","icons/svg/lorc/pointy-sword.svg","icons/svg/lorc/robe.svg","icons/svg/lorc/scale-mail.svg","icons/svg/lorc/lightning-shield.svg","icons/svg/delapouite/robin-hood-hat.svg","icons/svg/lorc/pointy-hat.svg","icons/svg/lorc/battle-axe.svg","icons/svg/lorc/gavel.svg","icons/svg/lorc/heavy-arrow.svg","icons/svg/lorc/bowie-knife.svg","icons/svg/skoll/revolver.svg","icons/svg/lorc/guitar.svg","icons/svg/lorc/wizard-staff.svg","icons/svg/lorc/stone-spear.svg","icons/svg/lorc/book-cover.svg","icons/svg/delapouite/torch.svg","icons/svg/delapouite/herbs-bundle.svg","icons/svg/lorc/split-cross.svg","icons/svg/delapouite/skills.svg","icons/svg/lorc/knapsack.svg","icons/svg/delapouite/light-backpack.svg","icons/svg/delapouite/leather-armor.svg","state/util.ts","hooks/useActions.ts","game/Stats/constants.ts","util/undefAdd.ts","game/Stats/util.ts","game/Status/constants.ts","util/noneg.ts","game/Skill/objects/smash.ts","game/Skill/objects/shockwave.ts","game/Weapon/objects/blunt/blacksmiths_hammer.ts","game/Skill/objects/shot.ts","game/Skill/objects/snipe_shot.ts","game/Skill/objects/surge.ts","game/Skill/objects/area_blast.ts","game/Skill/objects/alto.ts","game/Skill/objects/dazzle.ts","game/Skill/objects/stun_attack.ts","game/Skill/objects/piercing_blow.ts","game/Skill/objects/spread_shot.ts","game/Skill/objects/pin_down.ts","game/Skill/objects/ritardando.ts","game/Skill/objects/symphony.ts","game/Skill/objects/rubato.ts","game/Skill/objects/presto.ts","game/Skill/objects/protect.ts","game/Skill/objects/time_jump.ts","game/Skill/objects/cutting_swing.ts","game/Skill/objects/restore.ts","game/Skill/objects/power_strike.ts","game/Weapon/constants.ts","game/Weapon/objects/bow/hunting_bow.ts","game/Weapon/objects/tome/scholars_book.ts","game/Weapon/objects/lute/simple_lute.ts","game/Weapon/objects/blunt/index.ts","game/Weapon/objects/blunt/mace.ts","game/Weapon/objects/blunt/war_pick.ts","game/Weapon/objects/blunt/crude_club.ts","game/Weapon/objects/bow/index.ts","game/Weapon/objects/bow/composite_bow.ts","game/Weapon/objects/bow/curved_bow.ts","game/Weapon/objects/lute/index.ts","game/Weapon/objects/lute/archlute.ts","game/Weapon/objects/lute/barbat.ts","game/Weapon/objects/lute/decent_lute.ts","game/Weapon/objects/lute/fancy_lute.ts","game/Weapon/objects/tome/index.ts","game/Weapon/objects/tome/mages_tome.ts","game/Weapon/objects/tome/apprentices_tome.ts","game/Weapon/objects/tome/dusty_book.ts","game/Weapon/objects/spear/bandit_glaive.ts","game/Weapon/objects/sword/bokken.ts","game/Weapon/objects/axe/woodcutters_axe.ts","game/Roll/util.ts","game/Skill/objects/taunt.ts","game/Armor/constants.ts","game/Armor/objects/simple_iron_shield.ts","game/Skill/objects/heal.ts","game/Consumable/objects/godsbeard.ts","game/Consumable/constants.ts","game/Consumable/util.ts","game/Character/util.ts","util/getRandom.ts","game/Skill/objects/enemy/bite.ts","game/Armor/objects/index.ts","game/Armor/objects/adventure_boots.ts","game/Armor/objects/adventure_cloak.ts","game/Armor/objects/explorers_boots.ts","game/Armor/objects/explorers_cloak.ts","game/Armor/objects/explorers_hat.ts","game/Armor/objects/fur_armor.ts","game/Armor/objects/fur_boots.ts","game/Armor/objects/performers_boots.ts","game/Armor/objects/performers_vest.ts","game/Armor/objects/town_guard_helm.ts","game/Armor/objects/town_guard_armor.ts","game/Armor/objects/town_guard_boots.ts","game/Armor/objects/apprentice_cap.ts","game/Armor/objects/apprentice_robe.ts","game/Armor/objects/apprentice_shoes.ts","game/Armor/objects/fancy_hat.ts","game/Armor/objects/fancy_shoes.ts","game/Armor/objects/fancy_vest.ts","game/Armor/objects/cloth_shoes.ts","game/Armor/objects/chain_mail_vest.ts","game/Armor/objects/leather_greaves.ts","game/Armor/objects/leather_armor.ts","game/Armor/objects/leather_vest.ts","game/Armor/objects/travellers_boots.ts","game/Armor/objects/travellers_hat.ts","game/Armor/objects/travellers_tunic.ts","game/Armor/objects/goblin_helm.ts","game/Armor/objects/goblin_vest.ts","game/Armor/objects/bone_buckler.ts","game/Armor/objects/ward_shield.ts","game/Armor/objects/wooden_heater.ts","game/Armor/objects/iron_round_shield.ts","game/Character/enemies/timberwolf.ts","game/Skill/objects/enemy/impale.ts","game/Character/enemies/beastman.ts","game/Skill/objects/enemy/slap.ts","game/Character/enemies/vale_imp.ts","game/Skill/objects/enemy/sting.ts","game/Character/enemies/bee.ts","game/Skill/objects/enemy/stab.ts","game/Character/enemies/bandit.ts","game/Character/enemies/buccaneer.ts","game/Skill/objects/enemy/torch.ts","game/Character/enemies/cultist.ts","game/Party/constants.ts","game/Party/util.ts","state/party/index.ts","contexts/PartyContext/index.tsx","contexts/ModalContext/reducer.ts","contexts/ModalContext/index.tsx","elements/flex.ts","elements/button.tsx","components/Icon/index.tsx","components/Hover/index.tsx","elements/box.tsx","components/StatsPreview/index.tsx","game/Skill/objects/animato.ts","icons/maps.tsx","game/Item/constants.ts","components/Tooltip/index.tsx","hooks/useOnClickOutside.ts","elements/badge.tsx","components/SkillChecks/index.tsx","components/ArmorPreview/index.tsx","components/WeaponPreview/index.tsx","components/ItemPreview/index.tsx","game/Encounter/util.ts","state/game/index.ts","contexts/GameStateContext/index.tsx","components/CombatVictoryModal/index.tsx","game/Other/util.ts","game/Queue/util.ts","game/Skill/constants.ts","game/Skill/util.ts","game/Skill/committer.ts","contexts/CombatContext/index.tsx","game/AI/util.ts","components/RoundResultRenderer/Perfect.tsx","components/RoundResultRenderer/index.tsx","components/SkillPreview/index.tsx","components/CombatActions/index.tsx","elements/monospace.tsx","hooks/usePrevious.ts","game/Character/constants.ts","components/Gauge/index.tsx","components/TagPreview/index.tsx","hooks/usePlayerCharacterNotifications.tsx","components/EnemyCharacter/Health.tsx","contexts/LocalToastContext/index.tsx","components/EnemyCharacter/index.tsx","components/CombatParty/index.tsx","components/AppHeader/index.tsx","components/PartyResources/index.tsx","components/CombatQueue/index.tsx","contexts/CombatLogContext/util.tsx","contexts/CombatLogContext/index.tsx","components/CombatLog/index.tsx","contexts/UIContext/index.tsx","domain/Combat.tsx","hooks/useCombatStart.tsx","routes/index.tsx","components/Shop/index.tsx","domain/Party.tsx","domain/Start.tsx","components/CharacterImage/index.tsx","components/PartyCharacterConsumables/index.tsx","components/PartyCharacter/Stats.tsx","components/PartyCharacter/Name.tsx","components/PartyActiveCharacter/StatBar.tsx","components/PartyActiveCharacter/Items.tsx","components/PartyActiveCharacter/Name.tsx","components/PartyActiveCharacter/Image.tsx","components/PartyActiveCharacter/ArmorList.tsx","components/PartyActiveCharacter/WeaponList.tsx","components/PartyActiveCharacter/MenuSelect.tsx","components/PartyActiveCharacter/HoverArea.tsx","components/PartyActiveCharacter/index.tsx","components/PartyCharacter/Actions.tsx","components/PartyCharacter/Health.tsx","components/PartyCharacter/index.tsx","components/PlayerParty/index.tsx","contexts/CombatContext/context.tsx","App.tsx","serviceWorker.ts","index.tsx","state/index.ts"],"names":["module","exports","makeReducer","core","initialState","state","action","coreFn","type","useActions","actions","dispatch","useDispatch","useMemo","bindActionCreators","ZERO_STATS","vigor","strength","intelligence","dexterity","charisma","agility","luck","armor","resistance","evasion","maxHealthOffset","healthRegeneration","damageTakenModifier","damageReflection","melee","ranged","attackDamageOffset","attackDamageModifier","criticalChance","damageModifiers","flying","undead","queueConsolidationModifier","queueValueSet","undefined","goldModifier","maxInspirationOffset","consumableHealthGainOffset","minHealthOffset","BASE_C_STATS","CLASS_STATS","blacksmith","hunter","scholar","bard","enemy","DAMAGE_BONUS_KEYS","DEFENSE_BONUS_KEYS","HEALTH_FOCUS_BONUS_KEYS","STAT_BONUS_KEYS","STAT_KEY_LABELS","undefAdd","a","b","combineStats","stats","reduce","result","STATUS_CONFIG","bleeding","name","description","canStack","isTemporary","duration","immunities","burning","cursed","frozen","poisoned","shocked","stunned","wet","rushed","interrupted","reset","evasive","resilient","protected","targeted","cure","noneg","value","BASIC_ATTACK","id","rolls","v4","damageModifier","splashDamageModifier","targetType","damage","healing","offset","perfectSplash","perfectPierce","perfectStatus","SMASH_ID","SMASH","STRIKE_ID","STRIKE","CHOP_ID","CHOP","SHOCKWAVE","BLACKSMITHS_HAMMER","itemType","rarity","stat","twoHand","breakable","range","skills","SHOT","SNIPE_SHOT","SURGE","AREA_BLAST","ALTO","DAZZLE","STUN_ATTACK","DAZE","PIERCING_BLOW","SPREAD_SHOT","PIN_DOWN","RITARDANDO","SYMPHONY","RUBATO","PRESTO","PROTECT","TIME_JUMP","CUTTING_SWING","RESTORE","POWER_STRIKE","CLASS_WEAPONS","ALL_WEAPONS","resolveCheck","character","key","statValue","getBaseStatValue","roll","DiceRoll","total","TAUNT","weaponStatOverride","CLASS_ARMOR","resource","HEAL","consumableId","cid","GODSBEARD","skill","CLASS_CONSUMABLES","considateConsumableListToStack","consumables","stack","forEach","c","map","s","consumable","includes","count","updateStackItem","checkForProcessedCharacter","processed","Error","makeCharacter","characterClass","isCharacter","partyId","level","experience","class","healthOffset","inspirationOffset","tags","weapon","status","possibleRewards","processCharacter","r","getSkills","statusImmunities","baseVigor","startingHealth","Math","floor","maxHealth","health","maxInspiration","inspiration","rawStats","getDamageResistance","hasStatus","statusType","hasImmunity","getReflectedDamage","target","rawDamage","commitDamage","ignoreResistance","pc","rawDamageValue","filter","decrementStatusDurations","addMultipleStatus","types","durationOverride","statusConfig","existingStatus","find","findStatus","addStatus","getRandom","items","random","length","BITE","ALL_ARMOR","TIMBERWOLF","icon","Wolf","gold","xp","IMPALE","BEASTMAN","BeastMan","SLAP","VALE_IMP","Imp","STING","INFECTIOUS_STING","BEE","Bee","STAB","BANDIT","Bandit","BUCCANEER","Icon","TORCH","CULTIST","Cultist","PLAYER_PARTY_ID","ENEMY_COMBOS_BY_LEVEL","0","1","2","3","4","5","isParty","obj","checkForProcessedParty","party","characters","findCharacterInParty","processParty","updateCharacter","characterId","updater","makeParty","getRolledRewards","checkedCharacter","index","rewards","i","getRewardsFromCharacter","actionCreators","payload","updateParty","upsertCharacter","deleteCharacter","jack","jim","john","INITIAL_STATE","defaultContextValue","rawParty","activeCharacter","findCharacter","findRawCharacter","setActiveCharacter","equipItem","item","unequipItem","PartyContext","React","createContext","PartyContextProvider","props","children","useSelector","useState","activeCharacterId","setActiveCharacterId","Provider","existingArmor","equipArmor","existingWeapon","equipWeapon","unequipArmor","usePartyContext","useContext","isOpen","contents","callback","blocking","styles","OPEN","CLOSE","style","reducer","coreFunction","ModalContext","open","close","setBlocking","setPayload","setContents","setCallback","setStyles","useModalContext","getContextValue","Modal","setAppElement","ModalContextProvider","reducerValue","useReducer","context","onRequestClose","content","backgroundColor","color","width","margin","bottom","borderColor","modal","overlay","zIndex","FlexContainer","styled","display","flexDirection","$direction","flex","$full","FullContainer","Button","cursor","background","boxShadow","textShadow","border","outline","padding","userSelect","RedButton","withStyle","fontFamily","letterSpacing","borderTop","borderBottom","animationDirection","animationIterationCount","animationName","src","size","fill","shadow","onClick","loading","setLoading","svg","setSvg","useEffect","fetch","then","res","text","className","height","dangerouslySetInnerHTML","__html","Hover","delay","internalHovering","setInternalHovering","isHovering","setIsHovering","guid","setGuid","useLayoutEffect","setTimeout","onMouseEnter","e","preventDefault","stopPropagation","onMouseLeave","BoxContainer","substyle","tag","Element","rest","boxSizing","defense_key_colors","StatsPreview","fontSize","textTransform","ANIMATO","STAT_ICONS","Vigor","Strength","Brain","Awareness","Juggler","Agility","Clover","STATUS_ICONS","Dazed","Targeted","Evasive","Protect","SpeedDown","Poisoned","Burning","Bleeding","SKILL_ICONS","Shot","SnipeShot","PinDown","Surge","AreaBast","Dazzle","Reset","Smash","Shockwave","Taunt","Alto","SpreadShot","TimeJump","Heal","CuttingSwing","Restore","Dodging","Chop","PowerStrike","ARMOR_TYPE_ICONS","MagicArmor","ClothArmor","Armor","Shield","MagicShield","Footwear","Hat","MagicHat","Helmet","WEAPON_TYPE_ICONS","axe","Axe","blunt","Blunt","bow","Bow","dagger","Dagger","pistol","Handgun","lute","Lute","MagicStaff","Spear","Sword","Tome","Torch","RESOURCE_ICONS","Weapon","offhand","body","head","feet","CONSUMABLE_ITEM_ICONS","Godsbeard","CONSUMABLE_ITEM_COLORS","ITEM_RARITY_COLORS","common","uncommon","rare","mythic","CHARACTER_RESOURCES","Tooltip","direction","tagName","arrow","HoverToolTip","ClickToolTip","setIsOpen","ref","useRef","handler","listener","event","current","contains","document","addEventListener","removeEventListener","useOnClickOutside","p","v","Div","transform","Badge","withWrapper","position","$absolute","$size","alignItems","justifyContent","lineHeight","borderRadius","$color","top","$top","$bottom","right","$right","left","$left","transition","$style","HoverBadge","badgeProps","distance","SkillChecks","Array","_","check","label","SkillCheck","perfect","crit","colors","getPerfectStatusColors","opacity","getColor","X","ArmorPreview","showEquipButton","showBuyButton","cost","onEquipClick","onBuyClick","rarityColor","from","Color","darken","rgb","toString","to","gradient","minWidth","marginBottom","marginRight","fontWeight","marginLeft","minHeight","textAlign","marginTop","getDamageColor","WeaponPreview","basicAttack","ItemPreivew","ZERO_REWARD","makeRandomEncounter","depth","encounterType","encounter","reward","weapons","costs","makeEncounterList","RESET","chooseCurrent","nextLevel","encounters","defaultValue","currentChoice","currentEncounter","GameStateContext","useGameStateContext","GameStateContextProvider","game","gsc","choice","CombatVictoryModal","consolidatedRewards","consolidateRewards","setItems","first","goldMultiplier","commitRewards","Gold","XP","makeCombatQueue","sortedCharacters","sort","validateQueue","AGILITY_OFFSET","consolidateQueue","queue","min","Object","keys","Number","POSITIVE_INFINITY","getMin","getFirst","commitQueueUpdates","source","pcs","shiftedQueue","shiftQueue","q","PERFECT_DISPLAY_INFO","splash","pierce","heal","getTargetSkillResult","sourceResult","dodgeResult","dodgeSuccess","getRawDamage","totalDamage","reflectedDamage","loggedDamgge","getSkillResult","targets","rollResults","passedCount","criticalHitSuccess","rollDamageModifier","round","weaponRangeOverride","accuracySuccess","splashDamage","addedStatus","getSourceSkillResult","targetResults","resolveSkillTarget","makeSkillTarget","getSkillDamage","getPerfectText","perfectKeys","base","getPerfectKeys","pre","partyUpdater","commitSkillResults","playerParty","enemyParty","targetResult","sourceParty","targetParty","localUpdate","selectedSkill","selectedTargets","selectedConsumableIndex","roundResults","activeRound","isRunning","isRenderingResult","onSkillSelect","onTargetsSelect","onConsumableSelect","consumableIndex","start","next","commit","CombatContext","useCombatContext","CombatContextProvider","setEnemyParty","onRequestNewParty","history","useHistory","setIsRunning","setIsRenderingResult","setQueue","resultCommitter","roundId","setRoundId","setRoundResults","setActiveRound","selectedTarget","setSelectedTarget","setSelectedSkill","setSelectedConsumableIndex","useCallback","targetedCharacters","t","getSkillTargetOptions","getAIAction","execEnemyTurn","every","alert","push","nextTarget","roundTarget","results","Perfect","show","useSpring","div","RoundResultRenderer","isModal","RoundResult","isDone","setIsDone","activeIndex","setActiveIndex","stream","Kefir","sequentially","onValue","onEnd","later","showPerfect","isPlayer","showTarget","SkillPreview","perfectChance","CombatActions","Fragment","Monospace","Monodiv","usePrevious","CHARACTER_XP_MAX","Gauge","max","percentage","oldPercentage","borderLeft","config","friction","mass","tension","maxWidth","overflow","HealthGauge","XPGauge","TagPreview","usePlayerCharacterNotifications","previousHealth","setPreviousHealth","diff","abs","lastRound","chResult","Health","hp","clamp","hpp","Toast","animation","useTransition","maxHeight","enter","leave","whiteSpace","LocalToastRp","EnemyCharacter","$selected","$active","borderWidth","CombatParty","AppHeader","PartyResources","paddingRight","CombatQueue","sortedIds","getSortedIds","bigList","NEGATIVE_INFINITY","getMax","widthCoef","alt","paddingLeft","Span","SkillSpan","CombatLogContext","combatLog","clear","useCombatLogContext","CombatLogContextProvider","setCombatLog","deadLog","setDeadLog","NameSpan","isUserParty","isEnemyParty","NameSpanBuilder","log","line","dLog","latestRounds","baseRound","subTarget","splashDamageResistance","CombatLog","scrollRef","isExpanded","setIsExpanded","scrollIntoView","behavior","playerCanEquipItem","openCharacterInventoryId","onCharacterConsumableClick","setPlayerCanEquipItem","setOpenCharacterInventoryId","setOnCharacterConsumableClick","fn","UIContext","useUIContext","UIContextProvider","_setOnCharacterConsumableClick","Combat","useCombatStart","makeRoute","path","Component","RouteController","CardList","flexWrap","tabs","render","w","Shop","activeTab","setActiveTab","active","tab","console","overflowY","Party","parties","Start","onChange","rc","StartCharacterCard","CharacterImage","PartyCharacterConsumables","onStackClick","filler","f","ConsumableBox","HEIGHT","PartyCharacterConsumable","PartyCharacterConsumableTooltip","CharacterStat","statKey","ResourceE","getStatColor","Stats","Name","StatBar","paddingTop","paddingBottom","ItemRow","Items","setActiveItem","onHover","canUnequip","ArmorItem","Image","ArmorList","canEquip","activeItemId","setActiveItemId","localeCompare","WeaponItem","WeaponList","ACTIVE_CHARACTER_MENU_KEYS","Weapons","MenuSelect","activeKey","onActiveKeyChange","option","HoverArea","activeItem","foundArmor","PartyActiveCharacter","activeMenuKey","setActiveMenuKey","activeOption","o","Actions","inventoryOpen","inventoryStyle","Inventory","Details","setStoredHealth","Wrapper","PartyCharacter","selected","showActions","onConsumableClick","borderRight","PlayerParty","onCharacterClick","showConfirmButton","LinkedCombatContext","combatParty","setCombatParty","CombatDomain","GlobalCharacters","App","ForestBg","backgroundSize","Boolean","window","location","hostname","match","engine","Styletron","store","createStore","combineReducers","compose","applyMiddleware","thunk","ReactDOM","StrictMode","debug","debugAfterHydration","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,wC,wCCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,sCCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,mECA3CD,EAAOC,QAAU,IAA0B,4C,kBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,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","file":"static/js/main.9e8474ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/broadsword.47ecfebc.svg\";","module.exports = __webpack_public_path__ + \"static/media/coins.97dc8c40.svg\";","module.exports = __webpack_public_path__ + \"static/media/dodging.3c689d6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/sprint.968b443a.svg\";","module.exports = __webpack_public_path__ + \"static/media/shield-impact.54fdc5c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/heavy-timer.1072a406.svg\";","module.exports = __webpack_public_path__ + \"static/media/ubisoft-sun.30335592.svg\";","module.exports = __webpack_public_path__ + \"static/media/flat-hammer.dff14efb.svg\";","module.exports = __webpack_public_path__ + \"static/media/g-clef.77d209b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/shieldcomb.802f20f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/chest-armor.f1f52a3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/viking-shield.a61f8230.svg\";","module.exports = __webpack_public_path__ + \"static/media/leather-boot.89b85474.svg\";","module.exports = __webpack_public_path__ + \"static/media/visored-helm.1f2ced7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/flat-forestred.951e7322.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wolf-head.4e7bf362.svg\";","module.exports = __webpack_public_path__ + \"static/media/orc-head.ff410513.svg\";","module.exports = __webpack_public_path__ + \"static/media/imp-laugh.b3e04d0d.svg\";","module.exports = __webpack_public_path__ + \"static/media/bee.7b0a0467.svg\";","module.exports = __webpack_public_path__ + \"static/media/bandit.f798765b.svg\";","module.exports = __webpack_public_path__ + \"static/media/pirate-captain.daa0fd39.svg\";","module.exports = __webpack_public_path__ + \"static/media/cowled.d0cad9db.svg\";","module.exports = __webpack_public_path__ + \"static/media/laurel-crown.00b6e803.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-beats.6b1fff9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/biceps.e62c221f.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain.ce65603a.svg\";","module.exports = __webpack_public_path__ + \"static/media/eye-target.4c5ae680.svg\";","module.exports = __webpack_public_path__ + \"static/media/juggler.1188c0be.svg\";","module.exports = __webpack_public_path__ + \"static/media/clover.df6a0d57.svg\";","module.exports = __webpack_public_path__ + \"static/media/star-swirl.3045bd1f.svg\";","module.exports = __webpack_public_path__ + \"static/media/targeted.b4ce8dd7.svg\";","module.exports = __webpack_public_path__ + \"static/media/sticky-boot.f097559f.svg\";","module.exports = __webpack_public_path__ + \"static/media/biohazard.cdfb567d.svg\";","module.exports = __webpack_public_path__ + \"static/media/flame.332be8c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/bleeding-wound.8d92779f.svg\";","module.exports = __webpack_public_path__ + \"static/media/high-shot.eed9def8.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire-zone.42e13657.svg\";","module.exports = __webpack_public_path__ + \"static/media/hammer-drop.120a92c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/bordered-shield.56c12b47.svg\";","module.exports = __webpack_public_path__ + \"static/media/energy-arrow.514fc56c.svg\";","module.exports = __webpack_public_path__ + \"static/media/backward-time.d0246d45.svg\";","module.exports = __webpack_public_path__ + \"static/media/double-shot.70211522.svg\";","module.exports = __webpack_public_path__ + \"static/media/extra-time.4d418333.svg\";","module.exports = __webpack_public_path__ + \"static/media/health-normal.0da85e24.svg\";","module.exports = __webpack_public_path__ + \"static/media/wave-strike.1fe6dbab.svg\";","module.exports = __webpack_public_path__ + \"static/media/life-support.c0c7c040.svg\";","module.exports = __webpack_public_path__ + \"static/media/axe-in-stump.cd8a3e4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointy-sword.bd82b38d.svg\";","module.exports = __webpack_public_path__ + \"static/media/robe.5b61ecba.svg\";","module.exports = __webpack_public_path__ + \"static/media/scale-mail.cb5ff7d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/lightning-shield.85367254.svg\";","module.exports = __webpack_public_path__ + \"static/media/robin-hood-hat.6bab1449.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointy-hat.d042ac98.svg\";","module.exports = __webpack_public_path__ + \"static/media/battle-axe.47a5ba50.svg\";","module.exports = __webpack_public_path__ + \"static/media/gavel.e0256fff.svg\";","module.exports = __webpack_public_path__ + \"static/media/heavy-arrow.56b29a8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/bowie-knife.e7821736.svg\";","module.exports = __webpack_public_path__ + \"static/media/revolver.25251236.svg\";","module.exports = __webpack_public_path__ + \"static/media/guitar.a02399f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/wizard-staff.3e6091b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/stone-spear.446ebd42.svg\";","module.exports = __webpack_public_path__ + \"static/media/book-cover.a02eb2a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/torch.ae5d9c4c.svg\";","module.exports = __webpack_public_path__ + \"static/media/herbs-bundle.e02bcec1.svg\";","module.exports = __webpack_public_path__ + \"static/media/split-cross.fa0be1a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/skills.60519e24.svg\";","module.exports = __webpack_public_path__ + \"static/media/knapsack.62049a62.svg\";","module.exports = __webpack_public_path__ + \"static/media/light-backpack.6ad63d45.svg\";","module.exports = __webpack_public_path__ + \"static/media/leather-armor.f3d5462f.svg\";","import { StateCoreT, StateReducerT } from './types'\r\n\r\nexport const makeReducer = (\r\n  core: StateCoreT,\r\n  initialState: any,\r\n): StateReducerT => {\r\n  return (state = initialState, action) => {\r\n    const coreFn = core[action.type]\r\n    if (coreFn) return coreFn(state, action)\r\n    return state\r\n  }\r\n}\r\n","import { useMemo } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nexport const useActions = (actions: any) => {\r\n  const dispatch = useDispatch()\r\n  return useMemo(() => bindActionCreators(actions, dispatch), [\r\n    dispatch,\r\n    actions,\r\n  ])\r\n}\r\n","import { tStats, tBaseStats } from './type'\r\nimport { tCharacterClass } from '../Character/type'\r\n\r\nexport const ZERO_STATS: tStats = {\r\n  vigor: 0,\r\n  strength: 0,\r\n  intelligence: 0,\r\n  dexterity: 0,\r\n  charisma: 0,\r\n  agility: 0,\r\n  luck: 0,\r\n\r\n  armor: 0,\r\n  resistance: 0,\r\n  evasion: 0,\r\n\r\n  maxHealthOffset: 0,\r\n  healthRegeneration: 0,\r\n  damageTakenModifier: 0,\r\n  damageReflection: {\r\n    melee: 0,\r\n    ranged: 0,\r\n  },\r\n\r\n  attackDamageOffset: 0,\r\n  attackDamageModifier: 0,\r\n  criticalChance: 0,\r\n  damageModifiers: {\r\n    flying: 0,\r\n    undead: 0,\r\n  },\r\n\r\n  queueConsolidationModifier: 0,\r\n  queueValueSet: undefined,\r\n\r\n  goldModifier: 0,\r\n  maxInspirationOffset: 0,\r\n  consumableHealthGainOffset: 0,\r\n  minHealthOffset: 0,\r\n}\r\n\r\nexport const BASE_C_STATS: tStats = {\r\n  ...ZERO_STATS,\r\n  damageTakenModifier: 1,\r\n  attackDamageModifier: 1,\r\n  criticalChance: 5,\r\n  damageModifiers: {\r\n    flying: 1,\r\n    undead: 1,\r\n  },\r\n  queueConsolidationModifier: 1,\r\n  consumableHealthGainOffset: 15,\r\n}\r\n\r\nexport const CLASS_STATS: Record<tCharacterClass, tStats> = {\r\n  blacksmith: {\r\n    ...BASE_C_STATS,\r\n    strength: 76,\r\n    vigor: 80,\r\n    intelligence: 40,\r\n    dexterity: 52,\r\n    charisma: 72,\r\n    agility: 56,\r\n    luck: 50,\r\n    armor: 2,\r\n    resistance: 0,\r\n    evasion: 7,\r\n  },\r\n  hunter: {\r\n    ...BASE_C_STATS,\r\n    strength: 52,\r\n    vigor: 66,\r\n    intelligence: 46,\r\n    dexterity: 78,\r\n    charisma: 64,\r\n    agility: 78,\r\n    luck: 50,\r\n    armor: 1,\r\n    resistance: 0,\r\n    evasion: 20,\r\n  },\r\n  scholar: {\r\n    ...BASE_C_STATS,\r\n    strength: 42,\r\n    vigor: 60,\r\n    intelligence: 78,\r\n    dexterity: 66,\r\n    charisma: 70,\r\n    agility: 70,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 1,\r\n    evasion: 13,\r\n  },\r\n  bard: {\r\n    ...BASE_C_STATS,\r\n    strength: 44,\r\n    vigor: 50,\r\n    intelligence: 70,\r\n    dexterity: 68,\r\n    charisma: 78,\r\n    agility: 68,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 1,\r\n    evasion: 11,\r\n  },\r\n  enemy: BASE_C_STATS,\r\n}\r\n\r\nexport const DAMAGE_BONUS_KEYS: (keyof tStats)[] = [\r\n  'goldModifier',\r\n  'attackDamageOffset',\r\n  'attackDamageModifier',\r\n  'criticalChance',\r\n]\r\nexport const DEFENSE_BONUS_KEYS: (keyof tStats)[] = [\r\n  'armor',\r\n  'resistance',\r\n  'evasion',\r\n  'healthRegeneration',\r\n  'damageReflection',\r\n]\r\nexport const HEALTH_FOCUS_BONUS_KEYS: (keyof tStats)[] = [\r\n  'maxHealthOffset',\r\n  'maxInspirationOffset',\r\n]\r\nexport const STAT_BONUS_KEYS: (keyof tBaseStats)[] = [\r\n  'vigor',\r\n  'strength',\r\n  'intelligence',\r\n  'dexterity',\r\n  'charisma',\r\n  'agility',\r\n  'luck',\r\n]\r\n\r\nexport const STAT_KEY_LABELS: Record<keyof tStats, string> = {\r\n  strength: ' Strength',\r\n  vigor: ' Vigor',\r\n  intelligence: ' Intelligence',\r\n  dexterity: ' Dexterity',\r\n  charisma: ' Charisma',\r\n  agility: ' Agility',\r\n  luck: ' Luck',\r\n  evasion: ' Evasion',\r\n  criticalChance: '% Crit Chance',\r\n\r\n  armor: ' Armor',\r\n  resistance: ' Resistance',\r\n\r\n  maxHealthOffset: ' Health',\r\n  healthRegeneration: ' Health Regen',\r\n  damageReflection: ' Damage Reflection',\r\n  damageTakenModifier: '% Recieved Damage',\r\n\r\n  // TODO: Make this work\r\n  damageModifiers: ' Damage to certain Enemeies',\r\n\r\n  queueConsolidationModifier: ' Queue Consolidation Modifier',\r\n  queueValueSet: ' Queue Value Set',\r\n\r\n  attackDamageOffset: ' Raw Damage',\r\n  attackDamageModifier: '% Attack Damage',\r\n\r\n  goldModifier: '% Gold Recieved',\r\n  maxInspirationOffset: ' Max Inspiration',\r\n  minHealthOffset: ' Minumum Health',\r\n  consumableHealthGainOffset: ' HP from Consumables',\r\n}\r\n","export const undefAdd = (\r\n  a: number | undefined,\r\n  b: number | undefined,\r\n): number | undefined => {\r\n  if (a === undefined && b === undefined) return undefined\r\n  if (a === undefined && b !== undefined) return b\r\n  if (a !== undefined && b === undefined) return a\r\n  if (a !== undefined && b !== undefined) return a + b\r\n}\r\n","import { tStats } from './type'\r\nimport { ZERO_STATS } from './constants'\r\nimport { undefAdd } from '../../util/undefAdd'\r\n\r\nexport const combineStats = (...stats: tStats[]) => {\r\n  return stats.reduce(\r\n    (result, stats) => ({\r\n      vigor: result.vigor + stats.vigor,\r\n      strength: result.strength + stats.strength,\r\n      intelligence: result.intelligence + stats.intelligence,\r\n      dexterity: result.dexterity + stats.dexterity,\r\n      charisma: result.charisma + stats.charisma,\r\n      agility: result.agility + stats.agility,\r\n      luck: result.luck + stats.luck,\r\n\r\n      armor: result.armor + stats.armor,\r\n      resistance: result.resistance + stats.resistance,\r\n      evasion: result.evasion + stats.evasion,\r\n\r\n      maxHealthOffset: result.maxHealthOffset + stats.maxHealthOffset,\r\n      healthRegeneration: result.healthRegeneration + stats.healthRegeneration,\r\n      damageTakenModifier:\r\n        result.damageTakenModifier + stats.damageTakenModifier,\r\n      damageReflection: {\r\n        melee: result.damageReflection.melee + stats.damageReflection.melee,\r\n        ranged: result.damageReflection.ranged + stats.damageReflection.ranged,\r\n      },\r\n\r\n      attackDamageOffset: result.attackDamageOffset + stats.attackDamageOffset,\r\n      attackDamageModifier:\r\n        result.attackDamageModifier + stats.attackDamageModifier,\r\n      criticalChance: result.criticalChance + stats.criticalChance,\r\n      damageModifiers: {\r\n        flying: result.damageModifiers.flying + stats.damageModifiers.flying,\r\n        undead: result.damageModifiers.undead + stats.damageModifiers.undead,\r\n      },\r\n\r\n      queueConsolidationModifier:\r\n        result.queueConsolidationModifier + stats.queueConsolidationModifier,\r\n      queueValueSet: undefAdd(result.queueValueSet, stats.queueValueSet),\r\n\r\n      goldModifier: result.goldModifier + stats.goldModifier,\r\n      maxInspirationOffset:\r\n        result.maxInspirationOffset + stats.maxInspirationOffset,\r\n      consumableHealthGainOffset:\r\n        result.consumableHealthGainOffset + stats.consumableHealthGainOffset,\r\n      minHealthOffset: result.minHealthOffset + stats.minHealthOffset,\r\n    }),\r\n    ZERO_STATS,\r\n  )\r\n}\r\n\r\nexport const multiplyStats = (stats: tStats, modifier: number): tStats => ({\r\n  vigor: stats.vigor * modifier,\r\n  strength: stats.strength * modifier,\r\n  intelligence: stats.intelligence * modifier,\r\n  dexterity: stats.dexterity * modifier,\r\n  charisma: stats.charisma * modifier,\r\n  agility: stats.agility * modifier,\r\n  luck: stats.luck * modifier,\r\n\r\n  armor: stats.armor * modifier,\r\n  resistance: stats.resistance * modifier,\r\n  evasion: stats.evasion * modifier,\r\n\r\n  maxHealthOffset: stats.maxHealthOffset * modifier,\r\n  healthRegeneration: stats.healthRegeneration * modifier,\r\n  damageTakenModifier: stats.damageTakenModifier * modifier,\r\n  damageReflection: {\r\n    melee: stats.damageReflection.melee * modifier,\r\n    ranged: stats.damageReflection.ranged * modifier,\r\n  },\r\n\r\n  attackDamageOffset: stats.attackDamageOffset * modifier,\r\n  attackDamageModifier: stats.attackDamageModifier * modifier,\r\n  criticalChance: stats.criticalChance * modifier,\r\n  damageModifiers: {\r\n    flying: stats.damageModifiers.flying * modifier,\r\n    undead: stats.damageModifiers.undead * modifier,\r\n  },\r\n\r\n  queueConsolidationModifier: stats.queueConsolidationModifier * modifier,\r\n  queueValueSet: stats.queueValueSet,\r\n\r\n  goldModifier: stats.goldModifier * modifier,\r\n  maxInspirationOffset: stats.maxInspirationOffset * modifier,\r\n  consumableHealthGainOffset: stats.consumableHealthGainOffset * modifier,\r\n  minHealthOffset: stats.minHealthOffset * modifier,\r\n})\r\n","import { tStatusType, tStatusConfig } from './type'\r\nimport { ZERO_STATS } from '../Stats/constants'\r\n\r\nexport const STATUS_CONFIG: Record<tStatusType, tStatusConfig> = {\r\n  bleeding: {\r\n    name: 'Bleeding',\r\n    description: '-10 HP on your turn.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      healthRegeneration: -6,\r\n    },\r\n    immunities: [],\r\n  },\r\n  burning: {\r\n    name: 'Burning',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      healthRegeneration: -6,\r\n    },\r\n    immunities: [],\r\n  },\r\n  // TODO: Different cursed status' for different stats\r\n  cursed: {\r\n    name: 'Cursed',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  frozen: {\r\n    name: 'Frozen',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      damageTakenModifier: 25,\r\n    },\r\n    immunities: [],\r\n  },\r\n  poisoned: {\r\n    name: 'Poisoned',\r\n    description: \"-5 HP on this character's turn and -5 to each stat.\",\r\n    canStack: true,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      vigor: -5,\r\n      strength: -5,\r\n      intelligence: -5,\r\n      dexterity: -5,\r\n      charisma: -5,\r\n      healthRegeneration: -3,\r\n    },\r\n    immunities: [],\r\n  },\r\n  // TODO: Shocked status\r\n  shocked: {\r\n    name: 'Shocked',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  stunned: {\r\n    name: 'Stunned',\r\n    description: 'This character will not progress on the battle timeline.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 4,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueConsolidationModifier: -1,\r\n    },\r\n    immunities: [],\r\n  },\r\n  // TODO: Wet Status\r\n  wet: {\r\n    name: 'Wet',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'armor-up': {\r\n    name: 'Armor Up',\r\n    description: '+5 Armor',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      armor: 5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'attack-up': {\r\n    name: 'Attack Up',\r\n    description: '+5 Attack Damage',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      attackDamageOffset: 5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'evade-up': {\r\n    name: 'Evade Up',\r\n    description: '+15 Evasion',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      evasion: 15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'resistance-up': {\r\n    name: 'Resistance Up',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      resistance: 5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'speed-up': {\r\n    name: 'Speed Up',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      agility: 15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'armor-down': {\r\n    name: 'Armor Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      armor: -5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'attack-down': {\r\n    name: 'Attack Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      attackDamageOffset: -5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'evade-down': {\r\n    name: 'Evade Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      evasion: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'resistance-down': {\r\n    name: 'Resistance Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      resistance: -5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'speed-down': {\r\n    name: 'Speed Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      agility: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  rushed: {\r\n    name: 'Rushed',\r\n    description: 'Bring to front of queue.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 0,\r\n    },\r\n    immunities: [],\r\n  },\r\n  interrupted: {\r\n    name: 'Interrupted',\r\n    description: 'Set back 70 unites.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 70,\r\n    },\r\n    immunities: [],\r\n  },\r\n  reset: {\r\n    name: 'Reset',\r\n    description: 'Set back 100 units.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 100,\r\n    },\r\n    immunities: [],\r\n  },\r\n  evasive: {\r\n    name: 'Evasive',\r\n    description: 'Non-perfect attacks will miss when targeting this character.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  resilient: {\r\n    name: 'Resilient',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  protected: {\r\n    name: 'Protected',\r\n    description: 'Negate the next bit of damage.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  targeted: {\r\n    name: 'Targeted',\r\n    description: 'All enemies will attack this player.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 6,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  cure: {\r\n    name: 'Cure',\r\n    description: 'remove Poisoned, Bleeding, and Burning',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: ['poisoned', 'bleeding', 'burning', 'frozen', 'wet', 'shocked'],\r\n  },\r\n}\r\n","export const noneg = (value: number) => (value > 0 ? value : 0)\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const BASIC_ATTACK = (\r\n  name: string,\r\n  id?: string,\r\n  rolls?: number,\r\n): tSkill => ({\r\n  id: id || v4(),\r\n  name,\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: rolls || 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n})\r\n\r\nconst SMASH_ID = v4()\r\nexport const SMASH = BASIC_ATTACK('Smash', SMASH_ID)\r\nconst STRIKE_ID = v4()\r\nexport const STRIKE = BASIC_ATTACK('Strike', STRIKE_ID)\r\nconst CHOP_ID = v4()\r\nexport const CHOP = BASIC_ATTACK('Chop', CHOP_ID)\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const SHOCKWAVE: tSkill = {\r\n  id: v4(),\r\n  name: 'Shockwave',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0.5,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 4,\r\n  offset: -10,\r\n  perfectSplash: true,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { tWeapon } from '../../type'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\nimport { SMASH } from '../../../Skill/objects/smash'\r\nimport { SHOCKWAVE } from '../../../Skill/objects/shockwave'\r\n\r\nexport const BLACKSMITHS_HAMMER = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Blacksmith's Hammer`,\r\n  itemType: 'weapon',\r\n  type: 'blunt',\r\n  rarity: 'common',\r\n  stat: 'strength',\r\n  twoHand: false,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'melee', value: 10 },\r\n  skills: [SMASH, SHOCKWAVE],\r\n  immunities: [],\r\n  stats: ZERO_STATS,\r\n})\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const SHOT: tSkill = {\r\n  id: v4(),\r\n  name: 'Shot',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const SNIPE_SHOT: tSkill = {\r\n  id: v4(),\r\n  name: 'Snipe Shot',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: -10,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const SURGE: tSkill = {\r\n  id: v4(),\r\n  name: 'Surge',\r\n  damageModifier: 0.8,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const AREA_BLAST: tSkill = {\r\n  id: v4(),\r\n  name: 'Area Blast',\r\n  damageModifier: 0.5,\r\n  splashDamageModifier: 0,\r\n  targetType: 'group',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: -5,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const ALTO: tSkill = {\r\n  id: v4(),\r\n  name: 'Alto',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { tSkill } from '../type'\r\n\r\nexport const DAZZLE: tSkill = {\r\n  id: v4(),\r\n  name: 'Dazzle',\r\n  damageModifier: 0.5,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: -5,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['stunned'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const STUN_ATTACK: tSkill = {\r\n  id: v4(),\r\n  name: 'Stun Attack',\r\n  damageModifier: 0.5,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: -10,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['stunned'],\r\n}\r\n\r\nexport const DAZE = {\r\n  ...STUN_ATTACK,\r\n  name: 'Daze',\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const PIERCING_BLOW: tSkill = {\r\n  id: v4(),\r\n  name: 'Piercing Blow',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const SPREAD_SHOT: tSkill = {\r\n  id: v4(),\r\n  name: 'Spread Shot',\r\n  damageModifier: 0.5,\r\n  splashDamageModifier: 0,\r\n  targetType: 'group',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: -5,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const PIN_DOWN: tSkill = {\r\n  id: v4(),\r\n  name: 'Pin Down',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: -10,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['speed-down'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const RITARDANDO: tSkill = {\r\n  id: v4(),\r\n  name: 'Ritardando',\r\n  damageModifier: 0.5,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 4,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['speed-down'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const SYMPHONY: tSkill = {\r\n  id: v4(),\r\n  name: 'Symphony',\r\n  damageModifier: 0.5,\r\n  splashDamageModifier: 0,\r\n  targetType: 'group',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 4,\r\n  offset: -5,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const RUBATO: tSkill = {\r\n  id: v4(),\r\n  name: 'Rubato',\r\n  damageModifier: 0.5,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: false,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: -10,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['reset'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const PRESTO: tSkill = {\r\n  id: v4(),\r\n  name: 'Presto',\r\n  damageModifier: 0,\r\n  splashDamageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['rushed'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const PROTECT: tSkill = {\r\n  id: v4(),\r\n  name: 'Protect',\r\n  damageModifier: 0,\r\n  splashDamageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['protected'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const TIME_JUMP: tSkill = {\r\n  id: v4(),\r\n  name: 'Time Jump',\r\n  damageModifier: 0,\r\n  splashDamageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: -5,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['rushed'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const CUTTING_SWING: tSkill = {\r\n  id: v4(),\r\n  name: 'Cutting Swing',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0.5,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 4,\r\n  offset: -10,\r\n  perfectSplash: true,\r\n  perfectPierce: false,\r\n  perfectStatus: ['bleeding'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const RESTORE: tSkill = {\r\n  id: v4(),\r\n  name: 'Restore',\r\n  damageModifier: 0,\r\n  splashDamageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['cure'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const POWER_STRIKE: tSkill = {\r\n  id: v4(),\r\n  name: 'Power Strike',\r\n  damageModifier: 1.6,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: -15,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { tCharacterClass } from '../Character/type'\r\nimport { tWeapon } from './type'\r\nimport { BLACKSMITHS_HAMMER } from './objects/blunt/blacksmiths_hammer'\r\nimport { HUNTING_BOW } from './objects/bow/hunting_bow'\r\nimport { SCHOLARS_BOOK } from './objects/tome/scholars_book'\r\nimport { SIMPLE_LUTE } from './objects/lute/simple_lute'\r\nimport { ALL_BLUNT } from './objects/blunt'\r\nimport { ALL_BOWS } from './objects/bow'\r\nimport { ALL_LUTES } from './objects/lute'\r\nimport { ALL_TOMES } from './objects/tome'\r\nimport { BANDIT_GLAIVE } from './objects/spear/bandit_glaive'\r\nimport { BOKKEN } from './objects/sword/bokken'\r\nimport { WOODCUTTERS_AXE } from './objects/axe/woodcutters_axe'\r\n\r\nexport const CLASS_WEAPONS: Record<tCharacterClass, tWeapon> = {\r\n  blacksmith: BLACKSMITHS_HAMMER(),\r\n  hunter: HUNTING_BOW(),\r\n  scholar: SCHOLARS_BOOK(),\r\n  bard: SIMPLE_LUTE(),\r\n  enemy: BLACKSMITHS_HAMMER(),\r\n}\r\nexport const ALL_WEAPONS = () => [\r\n  ...ALL_BLUNT(),\r\n  ...ALL_BOWS(),\r\n  ...ALL_LUTES(),\r\n  ...ALL_TOMES(),\r\n\r\n  BANDIT_GLAIVE(),\r\n  BOKKEN(),\r\n  WOODCUTTERS_AXE(),\r\n]\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { SHOT } from '../../../Skill/objects/shot'\r\nimport { SNIPE_SHOT } from '../../../Skill/objects/snipe_shot'\r\n\r\nexport const HUNTING_BOW = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Hunting Bow`,\r\n  itemType: 'weapon',\r\n  type: 'bow',\r\n  rarity: 'common',\r\n  stat: 'dexterity',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'ranged', value: 6 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    evasion: 3,\r\n  },\r\n  skills: [SHOT, SNIPE_SHOT],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { SURGE } from '../../../Skill/objects/surge'\r\nimport { AREA_BLAST } from '../../../Skill/objects/area_blast'\r\n\r\nexport const SCHOLARS_BOOK = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Scholar's Book`,\r\n  itemType: 'weapon',\r\n  type: 'tome',\r\n  rarity: 'common',\r\n  stat: 'intelligence',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'magic', range: 'ranged', value: 6 },\r\n  stats: { ...ZERO_STATS },\r\n  skills: [SURGE, AREA_BLAST],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { ALTO } from '../../../Skill/objects/alto'\r\nimport { DAZZLE } from '../../../Skill/objects/dazzle'\r\n\r\nexport const SIMPLE_LUTE = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Simple Lute`,\r\n  itemType: 'weapon',\r\n  type: 'lute',\r\n  rarity: 'common',\r\n  stat: 'charisma',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'magic', range: 'ranged', value: 6 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    goldModifier: 12,\r\n  },\r\n  skills: [ALTO, DAZZLE],\r\n  immunities: [],\r\n})\r\n","import { MACE } from './mace'\r\nimport { WAR_PICK } from './war_pick'\r\nimport { CRUDE_CLUB } from './crude_club'\r\nimport { tWeapon } from '../../type'\r\n\r\nexport const ALL_BLUNT = (): tWeapon[] => [MACE(), WAR_PICK(), CRUDE_CLUB()]\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { SMASH } from '../../../Skill/objects/smash'\r\nimport { STUN_ATTACK } from '../../../Skill/objects/stun_attack'\r\n\r\nexport const MACE = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Mace`,\r\n  itemType: 'weapon',\r\n  type: 'blunt',\r\n  rarity: 'common',\r\n  stat: 'strength',\r\n  twoHand: false,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'melee', value: 21 },\r\n  stats: ZERO_STATS,\r\n  skills: [SMASH, STUN_ATTACK],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { PIERCING_BLOW } from '../../../Skill/objects/piercing_blow'\r\n\r\nexport const WAR_PICK = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `War Pick`,\r\n  itemType: 'weapon',\r\n  type: 'blunt',\r\n  rarity: 'common',\r\n  stat: 'strength',\r\n  twoHand: false,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'melee', value: 14 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    agility: 5,\r\n    criticalChance: 5,\r\n  },\r\n  skills: [PIERCING_BLOW],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\nimport { SMASH } from '../../../Skill/objects/smash'\r\nimport { DAZE } from '../../../Skill/objects/stun_attack'\r\n\r\nexport const CRUDE_CLUB = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Crude Club`,\r\n  itemType: 'weapon',\r\n  type: 'blunt',\r\n  rarity: 'common',\r\n  stat: 'strength',\r\n  twoHand: false,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'melee', value: 12 },\r\n  skills: [SMASH, DAZE],\r\n  immunities: [],\r\n  stats: ZERO_STATS,\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { COMPOSITE_BOW } from './composite_bow'\r\nimport { CURVED_BOW } from './curved_bow'\r\n\r\nexport const ALL_BOWS = (): tWeapon[] => [COMPOSITE_BOW(), CURVED_BOW()]\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { SHOT } from '../../../Skill/objects/shot'\r\nimport { SPREAD_SHOT } from '../../../Skill/objects/spread_shot'\r\nimport { PIN_DOWN } from '../../../Skill/objects/pin_down'\r\n\r\nexport const COMPOSITE_BOW = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Composite Bow`,\r\n  itemType: 'weapon',\r\n  type: 'bow',\r\n  rarity: 'common',\r\n  stat: 'dexterity',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'ranged', value: 11 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    evasion: 4,\r\n  },\r\n  skills: [SHOT, SPREAD_SHOT, PIN_DOWN],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { SPREAD_SHOT } from '../../../Skill/objects/spread_shot'\r\nimport { SNIPE_SHOT } from '../../../Skill/objects/snipe_shot'\r\n\r\nexport const CURVED_BOW = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Curved Bow`,\r\n  itemType: 'weapon',\r\n  type: 'bow',\r\n  rarity: 'common',\r\n  stat: 'dexterity',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'ranged', value: 11 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    evasion: 4,\r\n  },\r\n  skills: [SPREAD_SHOT, SNIPE_SHOT],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { ARCHLUTE } from './archlute'\r\nimport { BARBAT } from './barbat'\r\nimport { DECENT_LUTE } from './decent_lute'\r\nimport { FANCY_LUTE } from './fancy_lute'\r\n\r\nexport const ALL_LUTES = (): tWeapon[] => [\r\n  ARCHLUTE(),\r\n  BARBAT(),\r\n  DECENT_LUTE(),\r\n  FANCY_LUTE(),\r\n]\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { RITARDANDO } from '../../../Skill/objects/ritardando'\r\nimport { SYMPHONY } from '../../../Skill/objects/symphony'\r\nimport { RUBATO } from '../../../Skill/objects/rubato'\r\n\r\nexport const ARCHLUTE = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Archlute`,\r\n  itemType: 'weapon',\r\n  type: 'lute',\r\n  rarity: 'common',\r\n  stat: 'charisma',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'magic', range: 'ranged', value: 13 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    goldModifier: 10,\r\n  },\r\n  skills: [RITARDANDO, SYMPHONY, RUBATO],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { RITARDANDO } from '../../../Skill/objects/ritardando'\r\nimport { SYMPHONY } from '../../../Skill/objects/symphony'\r\nimport { DAZZLE } from '../../../Skill/objects/dazzle'\r\n\r\nexport const BARBAT = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Barbat`,\r\n  itemType: 'weapon',\r\n  type: 'lute',\r\n  rarity: 'common',\r\n  stat: 'charisma',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'magic', range: 'ranged', value: 9 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    goldModifier: 10,\r\n  },\r\n  skills: [RITARDANDO, SYMPHONY, DAZZLE],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { ALTO } from '../../../Skill/objects/alto'\r\nimport { DAZZLE } from '../../../Skill/objects/dazzle'\r\n\r\nexport const DECENT_LUTE = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Decent Lute`,\r\n  itemType: 'weapon',\r\n  type: 'lute',\r\n  rarity: 'common',\r\n  stat: 'charisma',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'magic', range: 'ranged', value: 8 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    goldModifier: 10,\r\n  },\r\n  skills: [ALTO, DAZZLE],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { ALTO } from '../../../Skill/objects/alto'\r\nimport { DAZZLE } from '../../../Skill/objects/dazzle'\r\nimport { PRESTO } from '../../../Skill/objects/presto'\r\n\r\nexport const FANCY_LUTE = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Fancy Lute`,\r\n  itemType: 'weapon',\r\n  type: 'lute',\r\n  rarity: 'common',\r\n  stat: 'charisma',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'magic', range: 'ranged', value: 12 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    goldModifier: 15,\r\n  },\r\n  skills: [ALTO, PRESTO, DAZZLE],\r\n  immunities: [],\r\n})\r\n","import { APPRENTICES_TOME } from './apprentices_tome'\r\nimport { DUSTY_BOOK } from './dusty_book'\r\nimport { MAGES_TOME } from './mages_tome'\r\nimport { tWeapon } from '../../type'\r\n\r\nexport const ALL_TOMES = (): tWeapon[] => [\r\n  MAGES_TOME(),\r\n  APPRENTICES_TOME(),\r\n  DUSTY_BOOK(),\r\n]\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { SURGE } from '../../../Skill/objects/surge'\r\nimport { AREA_BLAST } from '../../../Skill/objects/area_blast'\r\nimport { PROTECT } from '../../../Skill/objects/protect'\r\nimport { TIME_JUMP } from '../../../Skill/objects/time_jump'\r\n\r\nexport const MAGES_TOME = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Mage's Tome`,\r\n  itemType: 'weapon',\r\n  type: 'tome',\r\n  rarity: 'common',\r\n  stat: 'intelligence',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'magic', range: 'ranged', value: 18 },\r\n  stats: { ...ZERO_STATS },\r\n  skills: [SURGE, AREA_BLAST, PROTECT, TIME_JUMP],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { SURGE } from '../../../Skill/objects/surge'\r\nimport { AREA_BLAST } from '../../../Skill/objects/area_blast'\r\nimport { PROTECT } from '../../../Skill/objects/protect'\r\nimport { TIME_JUMP } from '../../../Skill/objects/time_jump'\r\n\r\nexport const APPRENTICES_TOME = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Apprentice's Tome`,\r\n  itemType: 'weapon',\r\n  type: 'tome',\r\n  rarity: 'common',\r\n  stat: 'intelligence',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'magic', range: 'ranged', value: 13 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n  },\r\n  skills: [SURGE, AREA_BLAST, PROTECT, TIME_JUMP],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { SURGE } from '../../../Skill/objects/surge'\r\nimport { AREA_BLAST } from '../../../Skill/objects/area_blast'\r\nimport { PROTECT } from '../../../Skill/objects/protect'\r\n\r\nexport const DUSTY_BOOK = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Dusty Book`,\r\n  itemType: 'weapon',\r\n  type: 'tome',\r\n  rarity: 'common',\r\n  stat: 'intelligence',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'magic', range: 'ranged', value: 9 },\r\n  stats: { ...ZERO_STATS },\r\n  skills: [SURGE, AREA_BLAST, PROTECT],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\nimport { CUTTING_SWING } from '../../../Skill/objects/cutting_swing'\r\n\r\nexport const BANDIT_GLAIVE = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Bandit Glaive`,\r\n  itemType: 'weapon',\r\n  type: 'blunt',\r\n  rarity: 'common',\r\n  stat: 'dexterity',\r\n  twoHand: true,\r\n  breakable: true,\r\n  damage: { type: 'physical', range: 'melee', value: 16 },\r\n  skills: [CUTTING_SWING],\r\n  immunities: [],\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 1,\r\n  },\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { STRIKE } from '../../../Skill/objects/smash'\r\nimport { RESTORE } from '../../../Skill/objects/restore'\r\n\r\nexport const BOKKEN = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Bokken`,\r\n  itemType: 'weapon',\r\n  type: 'sword',\r\n  rarity: 'common',\r\n  stat: 'strength',\r\n  twoHand: false,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'melee', value: 8 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n  },\r\n  skills: [STRIKE, RESTORE],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\nimport { CHOP } from '../../../Skill/objects/smash'\r\nimport { POWER_STRIKE } from '../../../Skill/objects/power_strike'\r\n\r\nexport const WOODCUTTERS_AXE = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Woodcutter's Axe`,\r\n  itemType: 'weapon',\r\n  type: 'axe',\r\n  rarity: 'common',\r\n  stat: 'strength',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'melee', value: 12 },\r\n  skills: [CHOP, POWER_STRIKE],\r\n  immunities: [],\r\n  stats: ZERO_STATS,\r\n})\r\n","import { tProcessedCharacter } from '../Character/type'\r\nimport { tBaseStats } from '../Stats/type'\r\nimport { getBaseStatValue } from '../Character/util'\r\nimport { DiceRoll } from 'rpg-dice-roller'\r\n\r\nexport const resolveCheck = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n  offset: number = 0,\r\n): boolean => {\r\n  const statValue = getBaseStatValue(character, key, offset)\r\n  const roll = new DiceRoll('1d100')\r\n  return roll.total <= statValue\r\n}\r\n\r\nexport const getChecksProbability = (\r\n  character: tProcessedCharacter,\r\n  checks: { key: keyof tBaseStats; offset: number }[],\r\n): number => {\r\n  const statValues = checks.map(({ key, offset }) =>\r\n    getBaseStatValue(character, key, offset),\r\n  )\r\n  const result = statValues.reduce((p, c) => {\r\n    return p * (c / 100)\r\n  }, 1)\r\n  return result\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const TAUNT: tSkill = {\r\n  id: v4(),\r\n  name: 'Taunt',\r\n  weaponStatOverride: 'vigor',\r\n  damageModifier: 0,\r\n  splashDamageModifier: 0,\r\n  targetType: 'self',\r\n  damage: false,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['targeted'],\r\n}\r\n","import { tCharacterClass } from '../Character/type'\r\nimport { tArmor } from './type'\r\nimport { SIMPLE_IRON_SHIELD } from './objects/simple_iron_shield'\r\n\r\nexport const CLASS_ARMOR: Record<tCharacterClass, tArmor[]> = {\r\n  blacksmith: [SIMPLE_IRON_SHIELD()],\r\n  hunter: [],\r\n  scholar: [],\r\n  bard: [],\r\n  enemy: [],\r\n}\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { TAUNT } from '../../Skill/objects/taunt'\r\n\r\nexport const SIMPLE_IRON_SHIELD = (): tArmor => ({\r\n  id: v4(),\r\n  name: 'Simple Iron Shield',\r\n  itemType: 'armor',\r\n  resource: 'offhand',\r\n  rarity: 'common',\r\n  type: 'shield',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 1,\r\n  },\r\n  skills: [TAUNT],\r\n  immunities: [],\r\n})\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nconst id = v4()\r\nexport const HEAL = (consumableId: string): tSkill => ({\r\n  id,\r\n  name: 'Heal',\r\n  damageModifier: 0,\r\n  splashDamageModifier: 0,\r\n  targetType: 'self',\r\n  rolls: 0,\r\n  offset: 0,\r\n  damage: false,\r\n  healing: true,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n  consumableId,\r\n})\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { HEAL } from '../../Skill/objects/heal'\r\n\r\nconst cid = v4()\r\nconst healingId = v4()\r\nexport const GODSBEARD = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Godsbeard',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: HEAL(id),\r\n  }\r\n}\r\n","import { GODSBEARD } from './objects/godsbeard'\r\nimport { tCharacterClass } from '../Character/type'\r\nimport { tConsumable } from './type'\r\n\r\nexport const CLASS_CONSUMABLES: Record<tCharacterClass, tConsumable[]> = {\r\n  blacksmith: [GODSBEARD()],\r\n  hunter: [GODSBEARD()],\r\n  scholar: [GODSBEARD()],\r\n  bard: [GODSBEARD()],\r\n  enemy: [],\r\n}\r\n","import { tConsumable, tConsumableStack } from './type'\r\n\r\nexport const considateConsumableListToStack = (\r\n  consumables: tConsumable[],\r\n): tConsumableStack[] => {\r\n  let stack: tConsumableStack[] = []\r\n  const updateStackItem = (cid: string) =>\r\n    stack.map((s) =>\r\n      s.consumable.cid === cid ? { ...s, count: s.count + 1 } : s,\r\n    )\r\n  const containsId = (cid: string) =>\r\n    stack.map((s) => s.consumable.cid).includes(cid)\r\n  consumables.forEach((c) => {\r\n    if (containsId(c.cid)) {\r\n      stack = updateStackItem(c.cid)\r\n    } else {\r\n      stack = [...stack, { consumable: c, count: 1 }]\r\n    }\r\n  })\r\n  return stack\r\n}\r\n","import { tCharacter, tProcessedCharacter, tCharacterClass } from './type'\r\nimport { tStats, tBaseStats } from '../Stats/type'\r\nimport { combineStats } from '../Stats/util'\r\nimport { tSkill } from '../Skill/type'\r\nimport { CLASS_STATS } from '../Stats/constants'\r\nimport { tStatusType, tStatus } from '../Status/type'\r\nimport { STATUS_CONFIG } from '../Status/constants'\r\nimport { v4 } from 'uuid'\r\nimport { tDamage } from '../Damage/type'\r\nimport { noneg } from '../../util/noneg'\r\nimport { CLASS_WEAPONS } from '../Weapon/constants'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { tArmorResourceType, tArmor } from '../Armor/type'\r\nimport { resolveCheck } from '../Roll/util'\r\nimport { CLASS_ARMOR } from '../Armor/constants'\r\nimport { tCombatReward } from '../Other/types'\r\nimport { CLASS_CONSUMABLES } from '../Consumable/constants'\r\nimport { considateConsumableListToStack } from '../Consumable/util'\r\nimport { mapTypeToStatus } from '../Status/util'\r\n\r\nexport const isCharacter = (obj: any): boolean =>\r\n  obj !== undefined && obj.isCharacter !== undefined\r\n\r\nexport const checkForProcessedCharacter = (character: tCharacter) => {\r\n  if ((character as tProcessedCharacter).processed) {\r\n    throw new Error('No Processed Characters Allowed')\r\n  }\r\n}\r\n\r\nexport const makeCharacter = (characterClass: tCharacterClass): tCharacter => {\r\n  return {\r\n    isCharacter: true,\r\n    id: v4(),\r\n    name: '',\r\n    partyId: '',\r\n    level: 0,\r\n    experience: 0,\r\n    class: characterClass,\r\n\r\n    stats: CLASS_STATS[characterClass],\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n\r\n    tags: [],\r\n\r\n    weapon: CLASS_WEAPONS[characterClass],\r\n    armor: CLASS_ARMOR[characterClass],\r\n    consumables: CLASS_CONSUMABLES[characterClass],\r\n\r\n    status: [],\r\n    immunities: [],\r\n    possibleRewards: [],\r\n  }\r\n}\r\n\r\nexport const getSkills = (character: tCharacter): tSkill[] => {\r\n  return [\r\n    ...character.weapon.skills,\r\n    ...character.armor.reduce((r, a) => [...r, ...a.skills], [] as tSkill[]),\r\n    ...considateConsumableListToStack(character.consumables).reduce(\r\n      (r, s) => [...r, s.consumable.skill],\r\n      [] as tSkill[],\r\n    ),\r\n  ]\r\n}\r\n\r\nexport const processCharacter = (\r\n  character: tCharacter,\r\n): tProcessedCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const stats: tStats = combineStats(\r\n    character.stats,\r\n    character.weapon.stats,\r\n    ...character.armor.map((a) => a.stats),\r\n    ...character.status.map((s) => s.stats),\r\n  )\r\n  const skills = getSkills(character)\r\n  const statusImmunities = character.status.reduce(\r\n    (r, s) => [...r, ...s.immunities],\r\n    [] as tStatusType[],\r\n  )\r\n  const immunities = [\r\n    ...character.immunities,\r\n    ...character.weapon.immunities,\r\n    ...character.armor.reduce(\r\n      (r, a) => [...r, ...a.immunities],\r\n      [] as tStatusType[],\r\n    ),\r\n    ...statusImmunities,\r\n  ]\r\n  const baseVigor = CLASS_STATS[character.class].vigor || character.stats.vigor\r\n  const startingHealth = 25 + Math.floor(0.1 * baseVigor)\r\n  const maxHealth =\r\n    Math.floor(\r\n      startingHealth + character.level + 0.1 * character.level * stats.vigor,\r\n    ) + stats.maxHealthOffset\r\n  const health = maxHealth - character.healthOffset\r\n  const maxInspiration = 3 + stats.maxInspirationOffset\r\n  const inspiration = maxInspiration + character.inspirationOffset\r\n\r\n  return {\r\n    processed: true,\r\n    ...character,\r\n\r\n    health,\r\n    maxHealth,\r\n    inspiration,\r\n    maxInspiration,\r\n\r\n    stats,\r\n    immunities,\r\n    rawStats: character.stats,\r\n    skills,\r\n  }\r\n}\r\n\r\nexport const getBaseStatValue = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n  offset: number = 0,\r\n) => {\r\n  return character.stats[key] + offset\r\n}\r\n\r\nexport const getDamageResistance = (\r\n  character: tProcessedCharacter,\r\n  damage: tDamage,\r\n) => {\r\n  if (damage.type === 'physical') return character.stats.armor\r\n  if (damage.type === 'magic') return character.stats.resistance\r\n  return 0\r\n}\r\nexport const hasStatus = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.status.map((s) => s.type).includes(statusType)\r\n}\r\nexport const findStatus = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.status.find((s) => s.type === statusType)\r\n}\r\nexport const hasImmunity = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.immunities.includes(statusType)\r\n}\r\nexport const getReflectedDamage = (target: tCharacter, rawDamage: tDamage) => {\r\n  return {\r\n    ...rawDamage,\r\n    value: target.stats.damageReflection[rawDamage.range],\r\n  }\r\n}\r\nexport const getRawDamage = (\r\n  source: tProcessedCharacter,\r\n  target: tProcessedCharacter,\r\n  rawDamage: tDamage,\r\n): tDamage => {\r\n  let damageModifier = 1\r\n  target.tags.forEach((tag) => {\r\n    if (source.stats.damageModifiers[tag]) {\r\n      damageModifier += source.stats.damageModifiers[tag]\r\n    }\r\n  })\r\n  return {\r\n    ...rawDamage,\r\n    value: rawDamage.value * damageModifier,\r\n  }\r\n}\r\n\r\nexport const commitDamage = (\r\n  character: tCharacter,\r\n  damage: tDamage,\r\n  ignoreResistance: boolean,\r\n): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const pc = processCharacter(character)\r\n  const resistance = ignoreResistance ? 0 : getDamageResistance(pc, damage)\r\n  const damageTakenModifier = pc.stats.damageTakenModifier\r\n  const rawDamageValue = damage.value * damageTakenModifier\r\n  if (hasStatus(character, 'protected')) {\r\n    return {\r\n      ...character,\r\n      status: character.status.filter((s) => s.type !== 'protected'),\r\n    }\r\n  }\r\n  return {\r\n    ...character,\r\n    healthOffset: character.healthOffset + noneg(rawDamageValue - resistance),\r\n  }\r\n}\r\n\r\nexport const decrementStatusDurations = (character: tCharacter): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    status: character.status\r\n      .map((status) => ({ ...status, duration: status.duration - 1 }))\r\n      .filter((status) => status.duration !== 0),\r\n  }\r\n}\r\nexport const addStatus = (\r\n  character: tCharacter,\r\n  type: tStatusType,\r\n  durationOverride?: number,\r\n): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const statusConfig = STATUS_CONFIG[type]\r\n  const existingStatus = findStatus(character, type)\r\n  if (hasImmunity(character, type)) {\r\n    return character\r\n  }\r\n  if (existingStatus && !statusConfig.canStack) {\r\n    return character\r\n  }\r\n  if (existingStatus && statusConfig.canStack) {\r\n    return {\r\n      ...character,\r\n      status: [\r\n        ...character.status.filter((s) => s.type !== type),\r\n        { ...existingStatus, stack: existingStatus.stack + 1 },\r\n      ],\r\n    }\r\n  }\r\n  return {\r\n    ...character,\r\n    status: [\r\n      ...character.status,\r\n      {\r\n        type,\r\n        stats: statusConfig.stats,\r\n        immunities: statusConfig.immunities,\r\n        duration: durationOverride || statusConfig.duration,\r\n        stack: 1,\r\n      },\r\n    ],\r\n  }\r\n}\r\n\r\nexport const addMultipleStatus = (\r\n  character: tCharacter,\r\n  types: tStatusType[],\r\n): tCharacter => {\r\n  return types.reduce((result, type) => {\r\n    return addStatus(result, type)\r\n  }, character)\r\n}\r\n\r\nexport const checkStatus = (character: tCharacter) => {\r\n  checkForProcessedCharacter(character)\r\n  let c = { ...character }\r\n  character.status.forEach((status) => {\r\n    if (hasImmunity(character, status.type)) {\r\n      c = {\r\n        ...c,\r\n        status: c.status.filter((c) => c.type !== status.type),\r\n      }\r\n    }\r\n  })\r\n  return c\r\n}\r\n\r\nexport const removeTemporaryStatus = (character: tCharacter): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    status: character.status.filter((s) => {\r\n      const config = STATUS_CONFIG[s.type]\r\n      return !config.isTemporary\r\n    }),\r\n  }\r\n}\r\n\r\nexport const equipArmor = (\r\n  character: tCharacter,\r\n  armor: tArmor,\r\n): { character: tCharacter; armor: tArmor | undefined } => {\r\n  checkForProcessedCharacter(character)\r\n  const existingArmor = character.armor.find(\r\n    (a) => a.resource === armor.resource,\r\n  )\r\n  return {\r\n    character: {\r\n      ...character,\r\n      armor: existingArmor\r\n        ? [...character.armor.filter((a) => a.id !== existingArmor.id), armor]\r\n        : [...character.armor, armor],\r\n    },\r\n    armor: existingArmor,\r\n  }\r\n}\r\n\r\nexport const unequipArmor = (\r\n  character: tCharacter,\r\n  resource: tArmorResourceType,\r\n): { character: tCharacter; armor: tArmor | undefined } => {\r\n  checkForProcessedCharacter(character)\r\n  const armor = character.armor.find((a) => a.resource === resource)\r\n  return {\r\n    character: {\r\n      ...character,\r\n      armor: character.armor.filter((a) => a.resource !== resource),\r\n    },\r\n    armor,\r\n  }\r\n}\r\n\r\nexport const equipWeapon = (\r\n  character: tCharacter,\r\n  weapon: tWeapon,\r\n): { character: tCharacter; weapon: tWeapon | undefined } => {\r\n  const existingWeapon = character.weapon\r\n  return {\r\n    character: {\r\n      ...character,\r\n      weapon,\r\n    },\r\n    weapon: existingWeapon,\r\n  }\r\n}\r\n\r\n// DO NOT USE\r\nexport const unequipWeapon = (\r\n  character: tCharacter,\r\n): { character: tCharacter; weapon: tWeapon | undefined } => {\r\n  const existingWeapon = character.weapon\r\n  return {\r\n    character: {\r\n      ...character,\r\n      // weapon: undefined\r\n    },\r\n    weapon: existingWeapon,\r\n  }\r\n}\r\n\r\nexport const getRewardsFromCharacter = (\r\n  character: tProcessedCharacter,\r\n  checkedCharacter: tProcessedCharacter,\r\n): tCombatReward[] => {\r\n  let index: number | undefined = undefined\r\n  character.possibleRewards.forEach((rewards, i) => {\r\n    const luckReslt = resolveCheck(checkedCharacter, 'luck')\r\n    if (luckReslt) {\r\n      index = i\r\n    }\r\n  })\r\n  if (index !== undefined) {\r\n    return character.possibleRewards[index]\r\n      ? [character.possibleRewards[index]]\r\n      : []\r\n  }\r\n  return []\r\n}\r\n","export const getRandom = <T>(items: T[]) =>\r\n  items[Math.floor(Math.random() * items.length)]\r\n","import { tSkill } from '../../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const BITE: tSkill = {\r\n  id: v4(),\r\n  name: 'Bite',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { ADVENTURE_BOOTS } from './adventure_boots'\r\nimport { ADVENTURE_CLOAK } from './adventure_cloak'\r\nimport { EXPLORERS_BOOTS } from './explorers_boots'\r\nimport { EXPLORERS_CLOAK } from './explorers_cloak'\r\nimport { EXPLORERS_HAT } from './explorers_hat'\r\nimport { FUR_ARMOR } from './fur_armor'\r\nimport { FUR_BOOTS } from './fur_boots'\r\nimport { PERFORMERS_BOOTS } from './performers_boots'\r\nimport { PERFORMERS_VEST } from './performers_vest'\r\nimport { tArmor } from '../type'\r\nimport { WOODEN_HEATER } from './wooden_heater'\r\nimport { WARD_SHIELD } from './ward_shield'\r\nimport { TOWN_GUARD_HELM } from './town_guard_helm'\r\nimport { TOWN_GUARD_ARMOR } from './town_guard_armor'\r\nimport { TOWN_GUARD_BOOTS } from './town_guard_boots'\r\nimport { BONE_BUCKLER } from './bone_buckler'\r\nimport { APPRENTICE_CAP } from './apprentice_cap'\r\nimport { APRRENTICE_ROBE } from './apprentice_robe'\r\nimport { APPRENTICE_SHOES } from './apprentice_shoes'\r\nimport { CLOTH_SHOES } from './cloth_shoes'\r\nimport { FANCY_HAT } from './fancy_hat'\r\nimport { FANCY_SHOES } from './fancy_shoes'\r\nimport { FANCY_VEST } from './fancy_vest'\r\nimport { LEATHER_GREAVES } from './leather_greaves'\r\nimport { LEATHER_ARMOR } from './leather_armor'\r\nimport { CHAIN_MAIL_VEST } from './chain_mail_vest'\r\nimport { LEATHER_VEST } from './leather_vest'\r\nimport { IRON_ROUND_SHIELD } from './iron_round_shield'\r\nimport { GOBLIN_HELM } from './goblin_helm'\r\nimport { GOBLIN_VEST } from './goblin_vest'\r\nimport { TRAVELLERS_BOOTS } from './travellers_boots'\r\nimport { TRAVELLERS_HAT } from './travellers_hat'\r\nimport { TRAVELLERS_TUNIC } from './travellers_tunic'\r\n\r\nexport const ALL_ARMOR = (): tArmor[] => [\r\n  ADVENTURE_BOOTS(),\r\n  ADVENTURE_CLOAK(),\r\n\r\n  EXPLORERS_BOOTS(),\r\n  EXPLORERS_CLOAK(),\r\n  EXPLORERS_HAT(),\r\n\r\n  FUR_ARMOR(),\r\n  FUR_BOOTS(),\r\n\r\n  PERFORMERS_BOOTS(),\r\n  PERFORMERS_VEST(),\r\n\r\n  TOWN_GUARD_HELM(),\r\n  TOWN_GUARD_ARMOR(),\r\n  TOWN_GUARD_BOOTS(),\r\n\r\n  APPRENTICE_CAP(),\r\n  APRRENTICE_ROBE(),\r\n  APPRENTICE_SHOES(),\r\n\r\n  FANCY_HAT(),\r\n  FANCY_SHOES(),\r\n  FANCY_VEST(),\r\n\r\n  CLOTH_SHOES(),\r\n  CHAIN_MAIL_VEST(),\r\n\r\n  LEATHER_GREAVES(),\r\n  LEATHER_ARMOR(),\r\n  LEATHER_VEST(),\r\n\r\n  TRAVELLERS_BOOTS(),\r\n  TRAVELLERS_HAT(),\r\n  TRAVELLERS_TUNIC(),\r\n\r\n  GOBLIN_HELM(),\r\n  GOBLIN_VEST(),\r\n\r\n  BONE_BUCKLER(),\r\n  WARD_SHIELD(),\r\n  WOODEN_HEATER(),\r\n  IRON_ROUND_SHIELD(),\r\n]\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const ADVENTURE_BOOTS = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Adventure Boots`,\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 3,\r\n    evasion: 4,\r\n    agility: 3,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const ADVENTURE_CLOAK = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Adventure Cloak`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'magic-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 5,\r\n    resistance: 5,\r\n    dexterity: 4,\r\n    charisma: -3,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const EXPLORERS_BOOTS = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Explorer's Boots`,\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  stat: 'vigor',\r\n\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 2,\r\n    evasion: 3,\r\n    agility: 2,\r\n  },\r\n\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const EXPLORERS_CLOAK = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Explorer's Cloak`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'magic-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 3,\r\n    resistance: 6,\r\n    evasion: 6,\r\n    dexterity: 3,\r\n    charisma: -3,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const EXPLORERS_HAT = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Explorer's Hat`,\r\n  itemType: 'armor',\r\n  resource: 'head',\r\n  rarity: 'common',\r\n  type: 'hat',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    resistance: 3,\r\n    evasion: 3,\r\n    dexterity: 2,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const FUR_ARMOR = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Fur Armor`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'cloth-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 5,\r\n    resistance: 5,\r\n    maxHealthOffset: 5,\r\n    healthRegeneration: 2,\r\n    vigor: 4,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const FUR_BOOTS = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Fur Boots`,\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 2,\r\n    resistance: 2,\r\n    healthRegeneration: 1,\r\n    vigor: 4,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const PERFORMERS_BOOTS = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Performer's Boots`,\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 2,\r\n    resistance: 3,\r\n    dexterity: -3,\r\n    charisma: 3,\r\n    luck: 3,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const PERFORMERS_VEST = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Performer's Vest`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'cloth-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 6,\r\n    resistance: 6,\r\n    dexterity: -4,\r\n    charisma: 4,\r\n    luck: 4,\r\n  },\r\n\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const TOWN_GUARD_HELM = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Town Guard Helm`,\r\n  itemType: 'armor',\r\n  resource: 'head',\r\n  rarity: 'common',\r\n  type: 'hat',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 3,\r\n    resistance: 3,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const TOWN_GUARD_ARMOR = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Town Guard Armor`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'common',\r\n  type: 'cloth-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 7,\r\n    resistance: 5,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const TOWN_GUARD_BOOTS = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Town Guard Boots`,\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 3,\r\n    resistance: 2,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const APPRENTICE_CAP = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Apprentice Cap`,\r\n  itemType: 'armor',\r\n  resource: 'head',\r\n  rarity: 'common',\r\n  type: 'magic-hat',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    resistance: 4,\r\n    maxInspirationOffset: 1,\r\n    intelligence: 2,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const APRRENTICE_ROBE = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Apprentice Robe`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'magic-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 2,\r\n    resistance: 6,\r\n    maxInspirationOffset: 1,\r\n    strength: -3,\r\n    intelligence: 3,\r\n  },\r\n  skills: [],\r\n  immunities: ['cursed'],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const APPRENTICE_SHOES = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Apprentice Shoes`,\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 1,\r\n    resistance: 3,\r\n    strength: -2,\r\n    intelligence: 2,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const FANCY_HAT = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Fancy Hat`,\r\n  itemType: 'armor',\r\n  resource: 'head',\r\n  rarity: 'common',\r\n  type: 'hat',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 1,\r\n    resistance: 2,\r\n    maxInspirationOffset: 1,\r\n    charisma: 2,\r\n    luck: 2,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const FANCY_SHOES = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Fancy Shoes`,\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  stat: 'vigor',\r\n\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 1,\r\n    resistance: 2,\r\n    dexterity: -2,\r\n    charisma: 2,\r\n    luck: 2,\r\n  },\r\n\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const FANCY_VEST = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Fancy Vest`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'cloth-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 4,\r\n    resistance: 4,\r\n    charisma: 4,\r\n    luck: 4,\r\n  },\r\n\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const CLOTH_SHOES = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Cloth Shoes`,\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  stat: 'vigor',\r\n\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    resistance: 1,\r\n    charisma: 1,\r\n    luck: 1,\r\n  },\r\n\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const CHAIN_MAIL_VEST = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Chain Mail Vest`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 4,\r\n    strength: 2,\r\n    intelligence: -2,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const LEATHER_GREAVES = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Leather Greaves`,\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  stat: 'vigor',\r\n\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 2,\r\n    strength: 1,\r\n    agility: -1,\r\n  },\r\n\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const LEATHER_ARMOR = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Leather Armor`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'common',\r\n  type: 'cloth-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 5,\r\n    resistance: 3,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const LEATHER_VEST = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Leather Vest`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'common',\r\n  type: 'cloth-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 3,\r\n    resistance: 1,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const TRAVELLERS_BOOTS = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Traveller's Boots`,\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  stat: 'vigor',\r\n\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 1,\r\n    evasion: 2,\r\n    dexterity: 1,\r\n    agility: 1,\r\n  },\r\n\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const TRAVELLERS_HAT = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Traveller's Hat`,\r\n  itemType: 'armor',\r\n  resource: 'head',\r\n  rarity: 'common',\r\n  type: 'hat',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    resistance: 1,\r\n    evasion: 3,\r\n    dexterity: 1,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const TRAVELLERS_TUNIC = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Traveller's Tunic`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'common',\r\n  type: 'magic-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 1,\r\n    resistance: 1,\r\n    evasion: 5,\r\n    dexterity: 2,\r\n    charisma: -2,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const GOBLIN_HELM = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Goblin Helm`,\r\n  itemType: 'armor',\r\n  resource: 'head',\r\n  rarity: 'common',\r\n  type: 'helmet',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 2,\r\n    agility: 4,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const GOBLIN_VEST = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Goblin Vest`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'cloth-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 3,\r\n    evasion: 5,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { TAUNT } from '../../Skill/objects/taunt'\r\n\r\nexport const BONE_BUCKLER = (): tArmor => ({\r\n  id: v4(),\r\n  name: 'Bone Buckler',\r\n  itemType: 'armor',\r\n  resource: 'offhand',\r\n  rarity: 'uncommon',\r\n  type: 'shield',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 1,\r\n    evasion: 4,\r\n  },\r\n  skills: [TAUNT],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { TAUNT } from '../../Skill/objects/taunt'\r\n\r\nexport const WARD_SHIELD = (): tArmor => ({\r\n  id: v4(),\r\n  name: 'Ward Shield',\r\n  itemType: 'armor',\r\n  resource: 'offhand',\r\n  rarity: 'uncommon',\r\n  type: 'magic-shield',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    resistance: 2,\r\n  },\r\n  skills: [TAUNT],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { TAUNT } from '../../Skill/objects/taunt'\r\n\r\nexport const WOODEN_HEATER = (): tArmor => ({\r\n  id: v4(),\r\n  name: 'Wooden Heater',\r\n  itemType: 'armor',\r\n  resource: 'offhand',\r\n  rarity: 'common',\r\n  type: 'shield',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 2,\r\n    resistance: 2,\r\n  },\r\n  skills: [TAUNT],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { TAUNT } from '../../Skill/objects/taunt'\r\n\r\nexport const IRON_ROUND_SHIELD = (): tArmor => ({\r\n  id: v4(),\r\n  name: 'Iron Round Shield',\r\n  itemType: 'armor',\r\n  resource: 'offhand',\r\n  rarity: 'common',\r\n  type: 'shield',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 4,\r\n    resistance: 2,\r\n  },\r\n  skills: [TAUNT],\r\n  immunities: [],\r\n})\r\n","import Wolf from '../../../icons/svg/lorc/wolf-head.svg'\r\nimport { tCharacter } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS, BASE_C_STATS } from '../../Stats/constants'\r\nimport { BITE } from '../../Skill/objects/enemy/bite'\r\nimport { getRandom } from '../../../util'\r\nimport { ALL_WEAPONS } from '../../Weapon/constants'\r\nimport { ALL_ARMOR } from '../../Armor/objects'\r\n\r\nexport const TIMBERWOLF = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: 'Timberwolf',\r\n    isCharacter: true,\r\n    icon: Wolf,\r\n    partyId: '',\r\n    level: 1,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      vigor: -80,\r\n      strength: 52,\r\n      intelligence: 40,\r\n      dexterity: 52,\r\n      charisma: 30,\r\n      agility: 65,\r\n      luck: 50,\r\n      armor: 0,\r\n      resistance: 0,\r\n      evasion: 10,\r\n      maxHealthOffset: -1,\r\n    },\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      id: v4(),\r\n      name: 'Wolf Fangs',\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'enemy',\r\n      stat: 'dexterity',\r\n      twoHand: true,\r\n      breakable: false,\r\n      damage: {\r\n        value: 7,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      stats: ZERO_STATS,\r\n      skills: [BITE],\r\n      immunities: [],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 4,\r\n        xp: 10,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 4,\r\n        xp: 10,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 19,\r\n        xp: 20,\r\n        items: [getRandom([...ALL_WEAPONS(), ...ALL_ARMOR()])],\r\n        consumables: [],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { tSkill } from '../../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const IMPALE: tSkill = {\r\n  id: v4(),\r\n  name: 'Impale',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 5,\r\n  offset: -5,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: ['bleeding'],\r\n}\r\n","import BeastMan from '../../../icons/svg/delapouite/orc-head.svg'\r\nimport { tCharacter } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS, BASE_C_STATS } from '../../Stats/constants'\r\nimport { IMPALE } from '../../Skill/objects/enemy/impale'\r\nimport { getRandom } from '../../../util'\r\nimport { ALL_WEAPONS } from '../../Weapon/constants'\r\nimport { ALL_ARMOR } from '../../Armor/objects'\r\n\r\nexport const BEASTMAN = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: 'Beastman',\r\n    isCharacter: true,\r\n    icon: BeastMan,\r\n    partyId: '',\r\n    level: 1,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      vigor: -80,\r\n      strength: 52,\r\n      intelligence: 40,\r\n      dexterity: 52,\r\n      charisma: 30,\r\n      agility: 60,\r\n      luck: 50,\r\n      armor: 2,\r\n      resistance: 0,\r\n      evasion: 10,\r\n    },\r\n    armor: [],\r\n    status: [],\r\n    consumables: [],\r\n    immunities: [],\r\n    weapon: {\r\n      id: v4(),\r\n      name: 'Beastman Spear',\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'spear',\r\n      stat: 'strength',\r\n      twoHand: true,\r\n      breakable: false,\r\n      damage: {\r\n        value: 8,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      stats: ZERO_STATS,\r\n      skills: [IMPALE],\r\n      immunities: [],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 6,\r\n        xp: 15,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 6,\r\n        xp: 15,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 1,\r\n        xp: 12,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 6,\r\n        xp: 15,\r\n        items: [getRandom(ALL_WEAPONS())],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 19,\r\n        xp: 20,\r\n        items: [getRandom([...ALL_WEAPONS(), ...ALL_ARMOR()])],\r\n        consumables: [],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { tSkill } from '../../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const SLAP: tSkill = {\r\n  id: v4(),\r\n  name: 'Slap',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import Imp from '../../../icons/svg/lorc/imp-laugh.svg'\r\nimport { tCharacter } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS, BASE_C_STATS } from '../../Stats/constants'\r\nimport { SLAP } from '../../Skill/objects/enemy/slap'\r\nimport { getRandom } from '../../../util'\r\nimport { ALL_WEAPONS } from '../../Weapon/constants'\r\nimport { ALL_ARMOR } from '../../Armor/objects'\r\n\r\nexport const VALE_IMP = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: 'Vale Imp',\r\n    isCharacter: true,\r\n    icon: Imp,\r\n    partyId: '',\r\n    level: 1,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      vigor: -80,\r\n      strength: 40,\r\n      intelligence: 40,\r\n      dexterity: 52,\r\n      charisma: 30,\r\n      agility: 76,\r\n      luck: 50,\r\n      armor: 0,\r\n      resistance: 0,\r\n      evasion: 10,\r\n    },\r\n    armor: [],\r\n    consumables: [],\r\n    status: [\r\n      {\r\n        duration: -1,\r\n        type: 'evasive',\r\n        stats: ZERO_STATS,\r\n        stack: 0,\r\n        immunities: [],\r\n      },\r\n    ],\r\n    immunities: [],\r\n    weapon: {\r\n      id: v4(),\r\n      name: 'Imp Fists',\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'enemy',\r\n      stat: 'dexterity',\r\n      twoHand: true,\r\n      breakable: false,\r\n      damage: {\r\n        value: 6,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      stats: ZERO_STATS,\r\n      skills: [SLAP],\r\n      immunities: [],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 0,\r\n        xp: 15,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 1,\r\n        xp: 12,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 0,\r\n        xp: 15,\r\n        items: [getRandom(ALL_ARMOR())],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 0,\r\n        xp: 15,\r\n        items: [getRandom(ALL_WEAPONS())],\r\n        consumables: [],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { tSkill } from '../../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const STING: tSkill = {\r\n  id: v4(),\r\n  name: 'Sting',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n\r\nexport const INFECTIOUS_STING: tSkill = {\r\n  id: v4(),\r\n  name: 'Infectious Sting',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: -10,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['poisoned'],\r\n}\r\n","import Bee from '../../../icons/svg/lorc/bee.svg'\r\nimport { v4 } from 'uuid'\r\nimport { tCharacter } from '../type'\r\nimport { ZERO_STATS, BASE_C_STATS } from '../../Stats/constants'\r\nimport { STING, INFECTIOUS_STING } from '../../Skill/objects/enemy/sting'\r\nimport { getRandom } from '../../../util'\r\nimport { ALL_ARMOR } from '../../Armor/objects'\r\nimport { GODSBEARD } from '../../Consumable/objects/godsbeard'\r\n\r\nexport const BEE = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: 'Bee',\r\n    isCharacter: true,\r\n    icon: Bee,\r\n    partyId: '',\r\n    level: 1,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      vigor: -80,\r\n      strength: 30,\r\n      intelligence: 30,\r\n      dexterity: 52,\r\n      charisma: 30,\r\n      agility: 80,\r\n      luck: 0,\r\n      armor: 0,\r\n      resistance: 0,\r\n      evasion: 17,\r\n      maxHealthOffset: -4,\r\n    },\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      id: v4(),\r\n      name: 'Bee Stinger',\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'enemy',\r\n      stat: 'dexterity',\r\n      twoHand: true,\r\n      breakable: false,\r\n      damage: {\r\n        value: 12,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      stats: ZERO_STATS,\r\n      skills: [STING, INFECTIOUS_STING],\r\n      immunities: [],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 1,\r\n        xp: 12,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 1,\r\n        xp: 12,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 1,\r\n        xp: 12,\r\n        items: [getRandom(ALL_ARMOR())],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 1,\r\n        xp: 12,\r\n        items: [],\r\n        consumables: [GODSBEARD()],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { tSkill } from '../../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const STAB: tSkill = {\r\n  id: v4(),\r\n  name: 'Stab',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: ['bleeding'],\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Bandit from '../../../icons/svg/delapouite/bandit.svg'\r\nimport { tCharacter } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS, BASE_C_STATS } from '../../Stats/constants'\r\nimport { EXPLORERS_BOOTS } from '../../Armor/objects/explorers_boots'\r\nimport { EXPLORERS_HAT } from '../../Armor/objects/explorers_hat'\r\nimport { ALL_ARMOR } from '../../Armor/objects'\r\nimport { ALL_WEAPONS } from '../../Weapon/constants'\r\nimport { STAB } from '../../Skill/objects/enemy/stab'\r\n\r\nexport const BANDIT = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: 'Bandit',\r\n    isCharacter: true,\r\n    icon: Bandit,\r\n    partyId: '',\r\n    level: 2,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      strength: 76,\r\n      vigor: 50,\r\n      intelligence: 40,\r\n      dexterity: 52,\r\n      charisma: 72,\r\n      agility: 61,\r\n      luck: 50,\r\n      armor: 4,\r\n      resistance: 0,\r\n      evasion: 10,\r\n      maxHealthOffset: -20,\r\n    },\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      id: v4(),\r\n      name: 'Buccaneer Dagger',\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'dagger',\r\n      stat: 'strength',\r\n      twoHand: false,\r\n      breakable: false,\r\n      damage: {\r\n        value: 12,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      stats: ZERO_STATS,\r\n      skills: [STAB],\r\n      immunities: [],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 1,\r\n        xp: 12,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [getRandom(ALL_ARMOR())],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [getRandom(ALL_ARMOR())],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 80,\r\n        xp: 20,\r\n        items: [getRandom(ALL_ARMOR())],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 80,\r\n        xp: 20,\r\n        items: [getRandom(ALL_ARMOR()), getRandom(ALL_WEAPONS())],\r\n        consumables: [],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import Icon from '../../../icons/svg/delapouite/pirate-captain.svg'\r\nimport { tCharacter } from '../type'\r\nimport { ZERO_STATS, BASE_C_STATS } from '../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\nimport { STAB } from '../../Skill/objects/enemy/stab'\r\nimport { ADVENTURE_BOOTS } from '../../Armor/objects/adventure_boots'\r\nimport { FUR_BOOTS } from '../../Armor/objects/fur_boots'\r\nimport { getRandom } from '../../../util'\r\nimport { ALL_ARMOR } from '../../Armor/objects'\r\nimport { ALL_WEAPONS } from '../../Weapon/constants'\r\n\r\nexport const BUCCANEER = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: 'Buccaneer',\r\n    isCharacter: true,\r\n    icon: Icon,\r\n    partyId: '',\r\n    level: 4,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      strength: 52,\r\n      vigor: 66,\r\n      intelligence: 46,\r\n      dexterity: 78,\r\n      charisma: 64,\r\n      agility: 78,\r\n      luck: 50,\r\n      armor: 1,\r\n      resistance: 0,\r\n      evasion: 20,\r\n      maxHealthOffset: -31,\r\n    },\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      id: v4(),\r\n      name: 'Buccaneer Dagger',\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'dagger',\r\n      stat: 'strength',\r\n      twoHand: false,\r\n      breakable: false,\r\n      damage: {\r\n        value: 12,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      stats: ZERO_STATS,\r\n      skills: [STAB],\r\n      immunities: [],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [getRandom(ALL_ARMOR())],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [getRandom(ALL_ARMOR())],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 80,\r\n        xp: 20,\r\n        items: [getRandom(ALL_ARMOR()), getRandom(ALL_WEAPONS())],\r\n        consumables: [],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { tSkill } from '../../type'\r\n\r\nexport const TORCH: tSkill = {\r\n  id: v4(),\r\n  name: 'Torch',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 4,\r\n  offset: -10,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['burning'],\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Cultist from '../../../icons/svg/lorc/cowled.svg'\r\nimport { tCharacter } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS, BASE_C_STATS } from '../../Stats/constants'\r\nimport { EXPLORERS_BOOTS } from '../../Armor/objects/explorers_boots'\r\nimport { EXPLORERS_HAT } from '../../Armor/objects/explorers_hat'\r\nimport { ALL_ARMOR } from '../../Armor/objects'\r\nimport { ALL_WEAPONS } from '../../Weapon/constants'\r\nimport { TORCH } from '../../Skill/objects/enemy/torch'\r\nimport { IMPALE } from '../../Skill/objects/enemy/impale'\r\n\r\nexport const CULTIST = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: 'Cultist',\r\n    isCharacter: true,\r\n    icon: Cultist,\r\n    partyId: '',\r\n    level: 1,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      strength: 50,\r\n      vigor: 50,\r\n      intelligence: 75,\r\n      dexterity: 52,\r\n      charisma: 72,\r\n      agility: 70,\r\n      luck: 50,\r\n      armor: 1,\r\n      resistance: 4,\r\n      evasion: 15,\r\n      maxHealthOffset: -19,\r\n    },\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      id: v4(),\r\n      name: 'Cultist Torch',\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'magic-staff',\r\n      stat: 'intelligence',\r\n      twoHand: true,\r\n      breakable: false,\r\n      damage: {\r\n        value: 14,\r\n        range: 'melee',\r\n        type: 'magic',\r\n      },\r\n      stats: ZERO_STATS,\r\n      skills: [TORCH, IMPALE],\r\n      immunities: [],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 1,\r\n        xp: 12,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [getRandom(ALL_ARMOR())],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [getRandom(ALL_ARMOR())],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 80,\r\n        xp: 20,\r\n        items: [getRandom(ALL_ARMOR())],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 80,\r\n        xp: 20,\r\n        items: [getRandom(ALL_ARMOR()), getRandom(ALL_WEAPONS())],\r\n        consumables: [],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { tCharacter } from '../Character/type'\r\nimport { TIMBERWOLF } from '../Character/enemies/timberwolf'\r\nimport { BEASTMAN } from '../Character/enemies/beastman'\r\nimport { VALE_IMP } from '../Character/enemies/vale_imp'\r\nimport { BEE } from '../Character/enemies/bee'\r\nimport { BANDIT } from '../Character/enemies/bandit'\r\nimport { BUCCANEER } from '../Character/enemies/buccaneer'\r\nimport { CULTIST } from '../Character/enemies/cultist'\r\n\r\nexport const PLAYER_PARTY_ID = v4()\r\n\r\nexport const ENEMY_COMBOS_BY_LEVEL: Record<number, tCharacter[][]> = {\r\n  0: [\r\n    [TIMBERWOLF(), TIMBERWOLF(), TIMBERWOLF()],\r\n    [TIMBERWOLF(), BEASTMAN()],\r\n    [BEASTMAN(), BEASTMAN()],\r\n    [VALE_IMP(), TIMBERWOLF()],\r\n    [VALE_IMP()],\r\n    [BEE()],\r\n    [BEE(), BEASTMAN()],\r\n    [BEE(), TIMBERWOLF()],\r\n    [CULTIST()],\r\n  ],\r\n  1: [\r\n    [VALE_IMP(), TIMBERWOLF(), BEASTMAN()],\r\n    [BEASTMAN(), BEASTMAN(), BEASTMAN()],\r\n    [BEE(), BEE(), BEE()],\r\n    [VALE_IMP(), BEE(), BEASTMAN()],\r\n    [CULTIST()],\r\n  ],\r\n  2: [\r\n    [BEE(), BEE(), BEE()],\r\n    [VALE_IMP(), BEE(), BEE()],\r\n    [VALE_IMP(), VALE_IMP(), VALE_IMP()],\r\n    [BANDIT(), TIMBERWOLF()],\r\n    [BANDIT(), TIMBERWOLF(), TIMBERWOLF()],\r\n    [CULTIST()],\r\n  ],\r\n  3: [\r\n    [CULTIST(), CULTIST()],\r\n    [CULTIST(), BANDIT()],\r\n    [BANDIT(), BANDIT()],\r\n    [BUCCANEER()],\r\n    [BANDIT(), BEE(), BEE()],\r\n    [CULTIST(), BEE(), BEE()],\r\n    [CULTIST(), BANDIT(), BEE()],\r\n    [BANDIT(), VALE_IMP(), VALE_IMP()],\r\n    [CULTIST(), CULTIST(), VALE_IMP()],\r\n    [VALE_IMP(), CULTIST(), VALE_IMP()],\r\n    [BANDIT(), VALE_IMP(), BEE()],\r\n    [BUCCANEER(), VALE_IMP()],\r\n  ],\r\n  4: [\r\n    [CULTIST(), BANDIT(), VALE_IMP()],\r\n    [CULTIST(), CULTIST(), BEE()],\r\n    [CULTIST(), VALE_IMP(), CULTIST()],\r\n    [CULTIST(), CULTIST(), CULTIST()],\r\n    [BANDIT(), BANDIT(), VALE_IMP()],\r\n    [BANDIT(), BANDIT(), BEE()],\r\n    [BANDIT(), BANDIT(), BANDIT()],\r\n    [BUCCANEER(), BUCCANEER()],\r\n    [BUCCANEER(), VALE_IMP(), VALE_IMP()],\r\n  ],\r\n  5: [\r\n    [BANDIT(), BANDIT(), BANDIT()],\r\n    [BANDIT(), VALE_IMP(), BUCCANEER()],\r\n    [BUCCANEER(), VALE_IMP(), VALE_IMP()],\r\n    [BUCCANEER(), BUCCANEER(), BANDIT()],\r\n    [CULTIST(), CULTIST(), CULTIST()],\r\n    [BUCCANEER(), BUCCANEER(), BUCCANEER()],\r\n  ],\r\n}\r\n","import { tParty, tProcessedParty } from './type'\r\nimport {\r\n  checkForProcessedCharacter,\r\n  processCharacter,\r\n  getRewardsFromCharacter,\r\n} from '../Character/util'\r\nimport { tCharacter, tProcessedCharacter } from '../Character/type'\r\nimport { v4 } from 'uuid'\r\nimport { tCombatReward } from '../Other/types'\r\nimport { getRandom } from '../../util'\r\nimport { ENEMY_COMBOS_BY_LEVEL } from './constants'\r\n\r\nexport const isParty = (obj: any): boolean =>\r\n  obj !== undefined && obj.isParty !== undefined\r\n\r\nexport const checkForProcessedParty = (party: tParty) => {\r\n  if ((party as tProcessedParty).processed) {\r\n    throw new Error('No Processed Parties Allowed')\r\n  }\r\n  party.characters.forEach((character) => {\r\n    checkForProcessedCharacter(character)\r\n  })\r\n}\r\n\r\nexport const findCharacterInParty = <\r\n  T extends tParty = tParty,\r\n  R extends tCharacter = tCharacter\r\n>(\r\n  party: T,\r\n  id: string,\r\n): R | undefined => {\r\n  return (party.characters as R[]).find((c) => c.id === id)\r\n}\r\n\r\nexport const getOtherCharacters = (\r\n  party: tParty,\r\n  characterId: string,\r\n): tCharacter[] => party.characters.filter((c) => c.id !== characterId)\r\n\r\nexport const processParty = (party: tParty): tProcessedParty => {\r\n  checkForProcessedParty(party)\r\n  return {\r\n    ...party,\r\n    processed: true,\r\n    characters: party.characters.map((c) => ({\r\n      ...processCharacter(c),\r\n      partyId: party.id,\r\n    })),\r\n  }\r\n}\r\n\r\nexport const updateCharacter = (\r\n  party: tParty,\r\n  characterId: string,\r\n  updater: (character: tCharacter) => tCharacter,\r\n): tParty => {\r\n  checkForProcessedParty(party)\r\n  return {\r\n    ...party,\r\n    characters: party.characters.map((c) =>\r\n      c.id === characterId ? updater(c) : c,\r\n    ),\r\n  }\r\n}\r\n\r\nexport const makeParty = (level: number = 0): tParty => {\r\n  level = level > 4 ? 4 : level\r\n  return {\r\n    isParty: true,\r\n    id: v4(),\r\n    gold: 0,\r\n    items: [],\r\n    characters: getRandom(ENEMY_COMBOS_BY_LEVEL[level]),\r\n  }\r\n}\r\n\r\nexport const getRolledRewards = (\r\n  party: tProcessedParty,\r\n  checkedCharacter: tProcessedCharacter,\r\n): tCombatReward[] => {\r\n  return party.characters.reduce((r, character) => {\r\n    return [...r, ...getRewardsFromCharacter(character, checkedCharacter)]\r\n  }, [] as tCombatReward[])\r\n}\r\n\r\nexport const commitRewards = (\r\n  party: tParty,\r\n  rewards: tCombatReward,\r\n): tParty => {\r\n  checkForProcessedParty(party)\r\n  const goldMultiplier =\r\n    1 +\r\n    processParty(party).characters.reduce(\r\n      (r, c) => (r > c.stats.goldModifier ? r : c.stats.goldModifier),\r\n      0,\r\n    ) /\r\n      100\r\n  return {\r\n    ...party,\r\n    gold: party.gold + Math.floor(rewards.gold * goldMultiplier),\r\n    items: [...party.items, ...rewards.items],\r\n    characters: party.characters.map((c) => ({\r\n      ...c,\r\n      consumables: [...c.consumables, ...rewards.consumables],\r\n      experience: c.experience + rewards.xp,\r\n    })),\r\n  }\r\n}\r\n","import { useSelector } from 'react-redux'\r\nimport { StateCoreT, StateActionT, StateT } from '../types'\r\nimport { Dispatch } from 'redux'\r\nimport { makeReducer } from '../util'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { checkForProcessedParty, updateCharacter } from '../../game/Party/util'\r\nimport { tCharacter } from '../../game/Character/type'\r\nimport { makeCharacter } from '../../game/Character/util'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\n\r\nexport const UPDATE_PARTY = '@actions/parties/set-party'\r\nexport const UPSERT_CHARACTER = '@actions/parties/upsert-character'\r\nexport const DELETE_CHARACTER = '@actions/parties/delete-character'\r\nexport const UPSERT_ITEM = '@actions/parties/upsert-item'\r\nexport const DELETE_ITEM = '@actions/parties/delete-item'\r\nexport const UPSERT_MOD = '@actions/parties/upsert-mod'\r\nexport const DELETE_MOD = '@actions/parties/delete-mod'\r\n\r\nexport const actionCreators = {\r\n  updateParty: (party: tParty): StateActionT => {\r\n    return {\r\n      type: UPDATE_PARTY,\r\n      payload: {\r\n        party,\r\n      },\r\n    }\r\n  },\r\n  upsertCharacter: (character: tCharacter): StateActionT => {\r\n    return {\r\n      type: UPSERT_CHARACTER,\r\n      payload: {\r\n        character,\r\n      },\r\n    }\r\n  },\r\n  deleteCharacter: (characterId: string): StateActionT => {\r\n    return {\r\n      type: DELETE_CHARACTER,\r\n      payload: {\r\n        characterId,\r\n      },\r\n    }\r\n  },\r\n}\r\n\r\nexport const actions = {\r\n  updateParty: (party: tParty) => (dispatch: Dispatch) => {\r\n    checkForProcessedParty(party)\r\n    dispatch(actionCreators.updateParty(party))\r\n  },\r\n  upsertCharacter: (character: tCharacter) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.upsertCharacter(character))\r\n  },\r\n  deleteCharacter: (characterId: string) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.deleteCharacter(characterId))\r\n  },\r\n}\r\n\r\nexport const core: StateCoreT<tParty> = {\r\n  [UPDATE_PARTY]: (state, action) => {\r\n    return {\r\n      ...action.payload.party,\r\n    }\r\n  },\r\n  [UPSERT_CHARACTER]: (state, action) => {\r\n    return updateCharacter(\r\n      state,\r\n      action.payload.character.id,\r\n      (c) => action.payload.character,\r\n    )\r\n  },\r\n  [DELETE_CHARACTER]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      characters: state.characters.filter(\r\n        (c) => c.id !== action.payload.characterId,\r\n      ),\r\n    }\r\n  },\r\n}\r\nconst jack = { ...makeCharacter('blacksmith'), name: 'Jack' }\r\nconst jim = { ...makeCharacter('bard'), name: 'Jim' }\r\nconst john = { ...makeCharacter('scholar'), name: 'Johnny' }\r\nexport const INITIAL_STATE: tParty = {\r\n  isParty: true,\r\n  id: PLAYER_PARTY_ID,\r\n  items: [],\r\n  gold: 0,\r\n  characters: [\r\n    {\r\n      ...jack,\r\n      // healthOffset: 30,\r\n    },\r\n    {\r\n      ...jim,\r\n      //healthOffset: 30\r\n    },\r\n    {\r\n      ...john,\r\n      //healthOffset: 30\r\n    },\r\n  ],\r\n}\r\nexport default makeReducer(core, INITIAL_STATE)\r\nexport const useParty = () => useSelector((state: StateT) => state.party)\r\nexport const usePartyActions = () =>\r\n  useActions(actions) as {\r\n    updateParty: (party: tParty) => void\r\n    upsertCharacter: (character: tCharacter) => void\r\n    deleteCharacter: (characterId: string) => void\r\n  }\r\n","import React, { useMemo, useContext, useState } from 'react'\r\nimport { usePartyActions, useParty } from '../../state/party'\r\nimport { tProcessedParty, tParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter, tCharacter } from '../../game/Character/type'\r\nimport {\r\n  processParty,\r\n  makeParty,\r\n  findCharacterInParty,\r\n} from '../../game/Party/util'\r\nimport {\r\n  checkForProcessedCharacter,\r\n  processCharacter,\r\n  makeCharacter,\r\n  equipArmor,\r\n  equipWeapon,\r\n  unequipArmor,\r\n} from '../../game/Character/util'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\n\r\nexport interface PartyContextT {\r\n  party: tProcessedParty\r\n  rawParty: tParty\r\n  activeCharacter: tProcessedCharacter\r\n  updateParty: (party: tParty) => void\r\n  upsertCharacter: (character: tCharacter) => void\r\n  deleteCharacter: (characterId: string) => void\r\n  findCharacter: (characterId: string) => tProcessedCharacter | undefined\r\n  findRawCharacter: (characterId: string) => tCharacter | undefined\r\n  setActiveCharacter: (character: tProcessedCharacter) => void\r\n  equipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n  unequipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n}\r\nconst defaultContextValue: PartyContextT = {\r\n  rawParty: makeParty(),\r\n  party: processParty(makeParty()),\r\n  activeCharacter: processCharacter(makeCharacter('blacksmith')),\r\n  updateParty: (party) => {},\r\n  upsertCharacter: (character) => {},\r\n  deleteCharacter: (characterId) => {},\r\n  findCharacter: (characterId) => undefined,\r\n  findRawCharacter: (characterId) => undefined,\r\n  setActiveCharacter: (character) => {},\r\n  equipItem: (characterId, item) => {},\r\n  unequipItem: (characterId, item) => {},\r\n}\r\nexport const PartyContext = React.createContext<PartyContextT>(\r\n  defaultContextValue,\r\n)\r\n\r\nexport interface PartyContextProviderPropsT {\r\n  children: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const PartyContextProvider = (props: PartyContextProviderPropsT) => {\r\n  const { children } = props\r\n  const actions = usePartyActions()\r\n  const rawParty = useParty()\r\n  const party = useMemo(() => processParty(rawParty), [rawParty])\r\n  const [activeCharacterId, setActiveCharacterId] = useState<string>(\r\n    party.characters[0].id,\r\n  )\r\n  const activeCharacter = useMemo(() => {\r\n    return party.characters.find(\r\n      (c) => c.id === activeCharacterId,\r\n    ) as tProcessedCharacter\r\n  }, [activeCharacterId, party.characters])\r\n  const setActiveCharacter = (character: tProcessedCharacter) =>\r\n    setActiveCharacterId(character.id)\r\n  const updateParty = (party: tParty) => {\r\n    actions.updateParty(party)\r\n  }\r\n  const upsertCharacter = (character: tCharacter) => {\r\n    if (!character) return\r\n    checkForProcessedCharacter(character)\r\n    actions.upsertCharacter(character)\r\n  }\r\n  const deleteCharacter = (characterId: string) => {\r\n    actions.deleteCharacter(characterId)\r\n  }\r\n  const findCharacter = (characterId: string) => {\r\n    return findCharacterInParty<tProcessedParty, tProcessedCharacter>(\r\n      party,\r\n      characterId,\r\n    )\r\n  }\r\n  const findRawCharacter = (characterId: string) => {\r\n    return findCharacterInParty(rawParty, characterId)\r\n  }\r\n\r\n  const equipItem = (characterId: string, item: tWeapon | tArmor) => {\r\n    const character = findRawCharacter(characterId)\r\n    if (!character) return\r\n    if (item.itemType === 'armor') {\r\n      const armor = item as tArmor\r\n      if (armor.resource === 'offhand' && character.weapon.twoHand) return\r\n      const result = equipArmor(character, armor)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.armor ? [result.armor] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n    if (item.itemType === 'weapon') {\r\n      const weapon = item as tWeapon\r\n      if (character.weapon.twoHand) {\r\n        if (character.armor.find((a) => a.resource === 'offhand')) {\r\n          return\r\n        }\r\n      }\r\n      const result = equipWeapon(character, weapon)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.weapon ? [result.weapon] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n  }\r\n  const unequipItem = (characterId: string, item: tWeapon | tArmor) => {\r\n    const character = findRawCharacter(characterId)\r\n    if (!character) return\r\n    if (item.itemType === 'armor') {\r\n      const armor = item as tArmor\r\n      const result = unequipArmor(character, armor.resource)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.armor ? [result.armor] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n    if (item.itemType === 'weapon') {\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PartyContext.Provider\r\n      value={{\r\n        party,\r\n        rawParty,\r\n        activeCharacter,\r\n        updateParty,\r\n        upsertCharacter,\r\n        deleteCharacter,\r\n        findCharacter,\r\n        findRawCharacter,\r\n        setActiveCharacter,\r\n        equipItem,\r\n        unequipItem,\r\n      }}\r\n    >\r\n      {children}\r\n    </PartyContext.Provider>\r\n  )\r\n}\r\n\r\nexport const usePartyContext = () => useContext(PartyContext)\r\n","import { ModalStylesT } from '.'\r\n\r\nexport interface ModalContextStateT {\r\n  isOpen: boolean\r\n  contents: JSX.Element | null\r\n  callback: ((payload?: any) => void) | null\r\n  payload: any | null\r\n  blocking: boolean\r\n  styles: ModalStylesT\r\n}\r\nexport const initialState: ModalContextStateT = {\r\n  isOpen: false,\r\n  contents: null,\r\n  callback: null,\r\n  payload: null,\r\n  blocking: false,\r\n  styles: {},\r\n}\r\n\r\nexport const OPEN = 'modalContext/OPEN'\r\nexport const CLOSE = 'modalContext/CLOSE'\r\nexport const SET_CONTENTS = 'modalContext/SET_CONTENTS'\r\nexport const SET_CALLBACK = 'modalContext/SET_CALLBACK'\r\nexport const SET_PAYLOAD = 'modalContext/SET_PAYLOAD'\r\nexport const SET_BLOCKING = 'modalContext/SET_BLOCKING'\r\nexport const SET_STYLE = 'modalContext/SET_STYLE'\r\n\r\nexport const actions = {\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => ({\r\n    type: OPEN,\r\n    contents,\r\n    styles,\r\n    blocking,\r\n    callback,\r\n  }),\r\n  close: () => ({ type: CLOSE }),\r\n  setPayload: (payload: any) => ({ type: SET_PAYLOAD, payload }),\r\n  setContents: (contents: JSX.Element | null) => ({\r\n    type: SET_CONTENTS,\r\n    contents,\r\n  }),\r\n  setCallback: (callback: (() => void) | null) => ({\r\n    type: SET_CALLBACK,\r\n    callback,\r\n  }),\r\n  setBlocking: (blocking: boolean) => ({ type: SET_BLOCKING, blocking }),\r\n  setStyles: (styles: ModalStylesT) => ({ type: SET_STYLE, styles }),\r\n}\r\n\r\nconst core: Record<\r\n  string,\r\n  (state: ModalContextStateT, action: any) => ModalContextStateT\r\n> = {\r\n  [OPEN]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    isOpen: true,\r\n    contents: action.contents ? action.contents : state.contents,\r\n    styles: action.styles ? action.styles : state.styles || {},\r\n    blocking: action.blocking || false,\r\n    callback: action.callback ? action.callback : state.callback,\r\n  }),\r\n  [CLOSE]: (state: ModalContextStateT) => ({\r\n    ...state,\r\n    isOpen: false,\r\n  }),\r\n  [SET_PAYLOAD]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    payload: action.payload,\r\n  }),\r\n  [SET_CONTENTS]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: null,\r\n    payload: null,\r\n    contents: action.contents,\r\n    blocking: false,\r\n    style: {},\r\n  }),\r\n  [SET_CALLBACK]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: action.callback,\r\n  }),\r\n  [SET_BLOCKING]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    blocking: action.blocking,\r\n  }),\r\n  [SET_STYLE]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    styles: action.styles,\r\n  }),\r\n}\r\n\r\nexport const reducer = (\r\n  state: ModalContextStateT = initialState,\r\n  action: any,\r\n) => {\r\n  const coreFunction = core[action.type]\r\n  return coreFunction ? coreFunction(state, action) : state\r\n}\r\n","import React, { useContext, useReducer, useMemo, CSSProperties } from 'react'\r\nimport Modal from 'react-modal'\r\nimport { actions, reducer, initialState, ModalContextStateT } from './reducer'\r\n\r\nexport interface ModalContextT {\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => void\r\n  close: (payload?: any) => void\r\n  setPayload: (payload: any) => void\r\n  setBlocking: (blocking: boolean) => void\r\n  setContents: (contents: JSX.Element) => void\r\n  setCallback: (callback: (payload?: any) => void) => void\r\n  setStyles: (styles: ModalStylesT) => void\r\n}\r\nconst defaultContext: ModalContextT = {\r\n  open: () => null,\r\n  close: () => null,\r\n  setBlocking: () => null,\r\n  setPayload: () => null,\r\n  setContents: () => null,\r\n  setCallback: () => null,\r\n  setStyles: () => null,\r\n}\r\nexport const ModalContext = React.createContext<ModalContextT>(defaultContext)\r\nexport const useModalContext = () => useContext(ModalContext)\r\n\r\nexport interface ModalStylesT {\r\n  modal?: CSSProperties\r\n  overlay?: CSSProperties\r\n}\r\n\r\nconst getContextValue = (\r\n  state: ModalContextStateT,\r\n  dispatch: React.Dispatch<any>,\r\n) => ({\r\n  isOpen: state.isOpen,\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => {\r\n    dispatch(actions.open(contents, styles, blocking, callback))\r\n  },\r\n  close: (payload?: any) => {\r\n    if (state.callback) state.callback(payload || state.payload)\r\n    dispatch(actions.close())\r\n  },\r\n  setPayload: (payload: any) => dispatch(actions.setPayload(payload)),\r\n  setContents: (contents: JSX.Element) =>\r\n    dispatch(actions.setContents(contents)),\r\n  setCallback: (callback: (payload?: any) => void) =>\r\n    dispatch(actions.setCallback(callback)),\r\n  setBlocking: (blocking: boolean) => dispatch(actions.setBlocking(blocking)),\r\n  setStyles: (styles: ModalStylesT) => dispatch(actions.setStyles(styles)),\r\n})\r\nModal.setAppElement('#root')\r\nexport interface ModalContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const ModalContextProvider = (props: ModalContextProviderPropsT) => {\r\n  const { children } = props\r\n  const reducerValue = useReducer(reducer, initialState)\r\n  const [state] = reducerValue\r\n  const context = useMemo(() => getContextValue(...reducerValue), [\r\n    reducerValue,\r\n  ])\r\n\r\n  return (\r\n    <ModalContext.Provider value={context}>\r\n      {children}\r\n      <Modal\r\n        isOpen={state.isOpen}\r\n        onRequestClose={() => {\r\n          if (!state.blocking) context.close()\r\n        }}\r\n        style={{\r\n          content: {\r\n            backgroundColor: '#111',\r\n            color: 'white',\r\n            width: 400,\r\n            margin: '0 auto',\r\n            bottom: 'unset',\r\n            borderColor: '#555',\r\n            ...state.styles.modal,\r\n          },\r\n          overlay: {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n            zIndex: 900,\r\n            ...state.styles.overlay,\r\n          },\r\n        }}\r\n      >\r\n        {state.contents || <div />}\r\n      </Modal>\r\n    </ModalContext.Provider>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport interface FlexContainerPropsT {\r\n  $direction?: 'row' | 'column' | 'column-reverse'\r\n  $full?: boolean\r\n}\r\nexport const FlexContainer = styled('div', (props: FlexContainerPropsT) => ({\r\n  display: 'flex',\r\n  flexDirection: props.$direction || 'row',\r\n  flex: props.$full ? 1 : 'default',\r\n}))\r\nexport const FullContainer = styled('div', () => ({\r\n  flex: 1,\r\n}))\r\n","import React from 'react'\r\nimport { styled, withStyle } from 'styletron-react'\r\nimport { animated, useSpring } from 'react-spring'\r\n\r\nexport interface ButtonPropsT {\r\n  $direction?: 'up' | 'down'\r\n}\r\nexport const Button = styled('button', (props: ButtonPropsT) => {\r\n  return {\r\n    cursor: 'pointer',\r\n    background: '#222',\r\n    boxShadow: 'inset 0px 0px 3px black',\r\n    textShadow: '0px 1px 3px black',\r\n    border: '1px solid rgba(255,255,255,0.2)',\r\n    color: 'rgba(255,255,255,1)',\r\n    ':hover': {\r\n      border: '1px solid rgba(255,255,255,0.4)',\r\n    },\r\n    ':active': {\r\n      outline: 'none',\r\n      border: '1px solid rgba(255,255,255,0.7)',\r\n    },\r\n    ':focus': {\r\n      outline: 'none',\r\n    },\r\n    padding: '10px 30px',\r\n    userSelect: 'none',\r\n  }\r\n})\r\n\r\nexport const RedButton = withStyle(Button, (props: ButtonPropsT) => {\r\n  return {\r\n    fontFamily: 'Bangers',\r\n    letterSpacing: '1px',\r\n    background:\r\n      'linear-gradient(0deg, rgba(157,0,0,1) 0%, rgba(110,0,0,1) 100%)',\r\n  }\r\n})\r\n\r\nexport const ConfirmButton = withStyle(Button, (props: ButtonPropsT) => {\r\n  const { $direction } = props\r\n  return {\r\n    // background: 'linear-gradient(0deg, rgba(157,0,0,1) 0%, rgba(110,0,0,1) 100%)',\r\n    // fontWeight: 'bold',\r\n    borderTop: $direction === 'down' ? 'none' : undefined,\r\n    borderBottom: $direction === 'up' ? 'none' : undefined,\r\n    padding: '10px 30px',\r\n    boxShadow: 'inset 0px 2px 8px black',\r\n    ':hover': {\r\n      borderTop: $direction === 'down' ? 'none' : undefined,\r\n      borderBottom: $direction === 'up' ? 'none' : undefined,\r\n    },\r\n    animationDirection: '1s',\r\n    animationIterationCount: 'infinite',\r\n    animationName: `\r\n      from: {\r\n        background: 'rgba(255,255,255,0.4)',\r\n      },\r\n\r\n      to: {\r\n        background: 'rgba(255,255,255,1)',\r\n      },\r\n    `,\r\n  }\r\n})\r\n\r\nexport const ConfirmButton2 = (props: any) => {\r\n  const styles = useSpring({\r\n    from: {\r\n      border: '1px solid rgba(255,255,255,0)',\r\n    },\r\n    to: async (next: any) => {\r\n      while (1) {\r\n        await next({\r\n          border: '1px solid rgba(255,255,255,0)',\r\n        })\r\n        await next({ border: '1px solid rgba(255,255,255,1)' })\r\n      }\r\n    },\r\n  })\r\n  return (\r\n    <animated.div style={styles}>\r\n      <ConfirmButton style={{ border: 'none' }}>{props.children}</ConfirmButton>\r\n    </animated.div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nexport interface IconPropsT {\r\n  src: string\r\n  size: number\r\n  fill?: string\r\n  style?: React.CSSProperties\r\n  shadow?: boolean\r\n  onClick?: () => void\r\n}\r\nexport const Icon = ({\r\n  src,\r\n  size,\r\n  style = {},\r\n  fill = 'white',\r\n  shadow,\r\n  onClick,\r\n}: IconPropsT) => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [svg, setSvg] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (src) {\r\n      fetch(src)\r\n        .then((res) => res.text())\r\n        .then((text) => setSvg(text))\r\n        .then(() => setLoading(false))\r\n    }\r\n  }, [src])\r\n\r\n  return !loading ? (\r\n    <div\r\n      className={`icon ${shadow ? 'shadow' : ''}`}\r\n      onClick={() => {\r\n        if (onClick) onClick()\r\n      }}\r\n      style={{ ...style, height: size, width: size, fill }}\r\n      dangerouslySetInnerHTML={{ __html: svg }}\r\n    />\r\n  ) : (\r\n    <div />\r\n  )\r\n}\r\n","import React, { useState, useLayoutEffect } from 'react'\r\nimport { v4 } from 'uuid'\r\n\r\nexport interface HoverChildrenT {\r\n  isHovering: boolean\r\n}\r\nexport interface HoverPropsT {\r\n  delay?: number\r\n  children: (props: HoverChildrenT) => JSX.Element\r\n}\r\nexport const Hover = (props: HoverPropsT) => {\r\n  const { delay = 500, children } = props\r\n  const [internalHovering, setInternalHovering] = useState<boolean>(false)\r\n  const [isHovering, setIsHovering] = useState<boolean>(false)\r\n  const [guid, setGuid] = useState<string>(v4())\r\n  useLayoutEffect(() => {\r\n    const action = async () => {\r\n      if (internalHovering) {\r\n        setTimeout(() => {\r\n          setGuid(v4())\r\n        }, delay)\r\n      }\r\n    }\r\n    action()\r\n  }, [internalHovering])\r\n  useLayoutEffect(() => {\r\n    if (internalHovering) {\r\n      setIsHovering(true)\r\n    }\r\n  }, [guid])\r\n  const onMouseEnter = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(true)\r\n  }\r\n  const onMouseLeave = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(false)\r\n    setIsHovering(false)\r\n  }\r\n  return (\r\n    <div onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\r\n      {children({ isHovering })}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Hover } from '../components/Hover'\r\n\r\nexport interface BoxContainerPropsT extends React.HTMLProps<HTMLDivElement> {\r\n  substyle?: React.CSSProperties\r\n  tag?: any\r\n  to?: string\r\n}\r\nexport const BoxContainer = (props: BoxContainerPropsT) => {\r\n  const {\r\n    style = {},\r\n    substyle = {},\r\n    children,\r\n    tag: Element = 'div',\r\n    ...rest\r\n  } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        border: '1px solid #000',\r\n        display: 'flex',\r\n        boxSizing: 'border-box',\r\n        ...style,\r\n      }}\r\n    >\r\n      <Element\r\n        style={{\r\n          border: substyle.border || '1px solid #555',\r\n          background: 'linear-gradient(0deg, #222222 0%, #2a2a2a 100%)',\r\n          padding: 10,\r\n          color: '#ccc',\r\n          flex: 1,\r\n          boxShadow: 'inset 0px 0px 2px black',\r\n          ...substyle,\r\n        }}\r\n        {...rest}\r\n      >\r\n        {children}\r\n      </Element>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const SmallBox = (props: BoxContainerPropsT) => (\r\n  <BoxContainer\r\n    {...props}\r\n    style={{\r\n      height: 40,\r\n      width: 40,\r\n      ...props.style,\r\n    }}\r\n    substyle={{\r\n      display: 'flex',\r\n      padding: 0,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      background: '#111',\r\n      ...props.substyle,\r\n    }}\r\n  >\r\n    {props.children}\r\n  </BoxContainer>\r\n)\r\n\r\nexport const BoxButton = (props: BoxContainerPropsT) => {\r\n  return (\r\n    <Hover delay={0}>\r\n      {({ isHovering }) => (\r\n        <BoxContainer\r\n          {...props}\r\n          tag='button'\r\n          style={{\r\n            margin: 0,\r\n            ...(props.style || {}),\r\n          }}\r\n          substyle={{\r\n            borderColor: isHovering && !props.disabled ? '#999' : '#555',\r\n            padding: '4px',\r\n            cursor: props.disabled ? 'default' : 'pointer',\r\n            background: props.disabled ? '#444' : '#111',\r\n            boxShadow: props.disabled ? 'none' : undefined,\r\n            ...(props.substyle || {}),\r\n          }}\r\n        />\r\n      )}\r\n    </Hover>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tStats } from '../../game/Stats/type'\r\nimport {\r\n  DEFENSE_BONUS_KEYS,\r\n  STAT_KEY_LABELS,\r\n  DAMAGE_BONUS_KEYS,\r\n  STAT_BONUS_KEYS,\r\n  HEALTH_FOCUS_BONUS_KEYS,\r\n} from '../../game/Stats/constants'\r\n\r\nexport interface StatsPreviewPropsT {\r\n  stats: tStats\r\n}\r\n\r\nconst defense_key_colors: any = {\r\n  armor: 'lightblue',\r\n  resistance: 'plum',\r\n}\r\n\r\nexport const StatsPreview = (props: StatsPreviewPropsT) => {\r\n  const { stats } = props\r\n  return (\r\n    <FlexContainer $direction='column' style={{ fontSize: 14 }}>\r\n      {DEFENSE_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: defense_key_colors[key],\r\n              }}\r\n            >\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {DAMAGE_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span style={{ textTransform: 'capitalize' }}>\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {HEALTH_FOCUS_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span style={{ textTransform: 'capitalize' }}>\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {STAT_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] > 0 && (\r\n            <span\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: 'lightgreen',\r\n              }}\r\n            >\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {STAT_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] < 0 && (\r\n            <span\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: 'lightcoral',\r\n              }}\r\n            >\r\n              {stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const ANIMATO: tSkill = {\r\n  id: v4(),\r\n  name: 'Animato',\r\n  damageModifier: 0,\r\n  splashDamageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['evade-up'],\r\n}\r\n","import Vigor from './svg/delapouite/heart-beats.svg'\r\nimport Strength from './svg/delapouite/biceps.svg'\r\nimport Brain from './svg/lorc/brain.svg'\r\nimport Awareness from './svg/delapouite/eye-target.svg'\r\nimport Juggler from './svg/lorc/juggler.svg'\r\nimport Agility from './svg/lorc/sprint.svg'\r\nimport Clover from './svg/lorc/clover.svg'\r\nimport Accuracy from './svg/delapouite/convergence-target.svg'\r\n\r\nimport Dazed from './svg/lorc/star-swirl.svg'\r\nimport Targeted from './svg/sbed/targeted.svg'\r\nimport Evasive from './svg/lorc/dodging.svg'\r\nimport SpeedDown from './svg/delapouite/sticky-boot.svg'\r\nimport Poisoned from './svg/lorc/biohazard.svg'\r\nimport Burning from './svg/carl-olsen/flame.svg'\r\nimport Bleeding from './svg/lorc/bleeding-wound.svg'\r\n\r\nimport Shot from './svg/lorc/high-shot.svg'\r\nimport SnipeShot from './svg/delapouite/shield-impact.svg'\r\nimport Surge from './svg/lorc/fire-zone.svg'\r\nimport AreaBast from './svg/lorc/heavy-timer.svg'\r\nimport Dazzle from './svg/lorc/ubisoft-sun.svg'\r\nimport Smash from './svg/lorc/flat-hammer.svg'\r\nimport Shockwave from './svg/lorc/hammer-drop.svg'\r\nimport Taunt from './svg/lorc/bordered-shield.svg'\r\nimport Alto from './svg/delapouite/g-clef.svg'\r\nimport Protect from './svg/lorc/shieldcomb.svg'\r\nimport PinDown from './svg/lorc/energy-arrow.svg'\r\nimport Reset from './svg/delapouite/backward-time.svg'\r\nimport SpreadShot from './svg/lorc/double-shot.svg'\r\nimport TimeJump from './svg/delapouite/extra-time.svg'\r\nimport Heal from './svg/sbed/health-normal.svg'\r\nimport CuttingSwing from './svg/lorc/wave-strike.svg'\r\nimport Restore from './svg/lorc/life-support.svg'\r\nimport Dodging from './svg/lorc/dodging.svg'\r\nimport Chop from './svg/lorc/axe-in-stump.svg'\r\nimport PowerStrike from './svg/lorc/pointy-sword.svg'\r\n\r\nimport MagicArmor from './svg/lorc/robe.svg'\r\nimport ClothArmor from './svg/lorc/scale-mail.svg'\r\nimport Armor from './svg/delapouite/chest-armor.svg'\r\nimport Shield from './svg/delapouite/viking-shield.svg'\r\nimport MagicShield from './svg/lorc/lightning-shield.svg'\r\nimport Footwear from './svg/lorc/leather-boot.svg'\r\nimport Hat from './svg/delapouite/robin-hood-hat.svg'\r\nimport MagicHat from './svg/lorc/pointy-hat.svg'\r\nimport Helmet from './svg/lorc/visored-helm.svg'\r\nimport Weapon from './svg/lorc/broadsword.svg'\r\n\r\nimport Axe from './svg/lorc/battle-axe.svg'\r\nimport Blunt from './svg/lorc/gavel.svg'\r\nimport Bow from './svg/lorc/heavy-arrow.svg'\r\nimport Dagger from './svg/lorc/bowie-knife.svg'\r\nimport Handgun from './svg/skoll/revolver.svg'\r\nimport Lute from './svg/lorc/guitar.svg'\r\nimport MagicStaff from './svg/lorc/wizard-staff.svg'\r\nimport Sword from './svg/lorc/broadsword.svg'\r\nimport Spear from './svg/lorc/stone-spear.svg'\r\nimport Tome from './svg/lorc/book-cover.svg'\r\nimport Torch from './svg/delapouite/torch.svg'\r\n\r\nimport Godsbeard from './svg/delapouite/herbs-bundle.svg'\r\nimport { tBaseStats } from '../game/Stats/type'\r\nimport { tStatusType } from '../game/Status/type'\r\nimport { SHOT } from '../game/Skill/objects/shot'\r\nimport { SNIPE_SHOT } from '../game/Skill/objects/snipe_shot'\r\nimport { PIERCING_BLOW } from '../game/Skill/objects/piercing_blow'\r\nimport { PIN_DOWN } from '../game/Skill/objects/pin_down'\r\nimport { SURGE } from '../game/Skill/objects/surge'\r\nimport { AREA_BLAST } from '../game/Skill/objects/area_blast'\r\nimport { SYMPHONY } from '../game/Skill/objects/symphony'\r\nimport { DAZZLE } from '../game/Skill/objects/dazzle'\r\nimport { RUBATO } from '../game/Skill/objects/rubato'\r\nimport { SMASH, STRIKE, CHOP } from '../game/Skill/objects/smash'\r\nimport { SHOCKWAVE } from '../game/Skill/objects/shockwave'\r\nimport { TAUNT } from '../game/Skill/objects/taunt'\r\nimport { ALTO } from '../game/Skill/objects/alto'\r\nimport { RITARDANDO } from '../game/Skill/objects/ritardando'\r\nimport { PROTECT } from '../game/Skill/objects/protect'\r\nimport { SPREAD_SHOT } from '../game/Skill/objects/spread_shot'\r\nimport { STUN_ATTACK } from '../game/Skill/objects/stun_attack'\r\nimport { TIME_JUMP } from '../game/Skill/objects/time_jump'\r\nimport { GODSBEARD } from '../game/Consumable/objects/godsbeard'\r\nimport { tArmorResourceType, tArmorType } from '../game/Armor/type'\r\nimport { HEAL } from '../game/Skill/objects/heal'\r\nimport { tWeaponType } from '../game/Weapon/type'\r\nimport { CUTTING_SWING } from '../game/Skill/objects/cutting_swing'\r\nimport { RESTORE } from '../game/Skill/objects/restore'\r\nimport { PRESTO } from '../game/Skill/objects/presto'\r\nimport { ANIMATO } from '../game/Skill/objects/animato'\r\nimport { POWER_STRIKE } from '../game/Skill/objects/power_strike'\r\n\r\nexport const STAT_ICONS: Record<keyof tBaseStats, string> = {\r\n  vigor: Vigor,\r\n  strength: Strength,\r\n  intelligence: Brain,\r\n  dexterity: Awareness,\r\n  charisma: Juggler,\r\n  agility: Agility,\r\n  luck: Clover,\r\n  evasion: '',\r\n  criticalChance: '',\r\n}\r\n\r\nexport const STATUS_ICONS: Partial<Record<tStatusType, string>> = {\r\n  stunned: Dazed,\r\n  targeted: Targeted,\r\n  evasive: Evasive,\r\n  protected: Protect,\r\n  ['speed-down']: SpeedDown,\r\n  poisoned: Poisoned,\r\n  burning: Burning,\r\n  bleeding: Bleeding,\r\n}\r\n\r\nexport const SKILL_ICONS: Record<string, string> = {\r\n  [SHOT.id]: Shot,\r\n  [SNIPE_SHOT.id]: SnipeShot,\r\n  [PIERCING_BLOW.id]: SnipeShot,\r\n  [PIN_DOWN.id]: PinDown,\r\n  [SURGE.id]: Surge,\r\n  [AREA_BLAST.id]: AreaBast,\r\n  [SYMPHONY.id]: AreaBast,\r\n  [DAZZLE.id]: Dazzle,\r\n  [RUBATO.id]: Reset,\r\n  [SMASH.id]: Smash,\r\n  [STRIKE.id]: Smash,\r\n  [SHOCKWAVE.id]: Shockwave,\r\n  [TAUNT.id]: Taunt,\r\n  [ALTO.id]: Alto,\r\n  [RITARDANDO.id]: Alto,\r\n  [PROTECT.id]: Protect,\r\n  [SPREAD_SHOT.id]: SpreadShot,\r\n  [STUN_ATTACK.id]: Dazzle,\r\n  [TIME_JUMP.id]: TimeJump,\r\n  [HEAL('').id]: Heal,\r\n  [CUTTING_SWING.id]: CuttingSwing,\r\n  [RESTORE.id]: Restore,\r\n  [PRESTO.id]: Agility,\r\n  [ANIMATO.id]: Dodging,\r\n  [CHOP.id]: Chop,\r\n  [POWER_STRIKE.id]: PowerStrike,\r\n}\r\n\r\nexport const ARMOR_TYPE_ICONS: Record<tArmorType, string> = {\r\n  ['magic-armor']: MagicArmor,\r\n  ['cloth-armor']: ClothArmor,\r\n  armor: Armor,\r\n  shield: Shield,\r\n  ['magic-shield']: MagicShield,\r\n  footwear: Footwear,\r\n  hat: Hat,\r\n  ['magic-hat']: MagicHat,\r\n  helmet: Helmet,\r\n  charm: '',\r\n  ring: '',\r\n}\r\n\r\nexport const WEAPON_TYPE_ICONS: Record<tWeaponType, string> = {\r\n  enemy: '',\r\n  axe: Axe,\r\n  blunt: Blunt,\r\n  bow: Bow,\r\n  dagger: Dagger,\r\n  pistol: Handgun,\r\n  lute: Lute,\r\n  ['magic-staff']: MagicStaff,\r\n  spear: Spear,\r\n  sword: Sword,\r\n  tome: Tome,\r\n  torch: Torch,\r\n}\r\n\r\nexport const RESOURCE_ICONS: Record<tArmorResourceType | 'weapon', string> = {\r\n  weapon: Weapon,\r\n  offhand: Shield,\r\n  body: Armor,\r\n  head: Helmet,\r\n  feet: Footwear,\r\n}\r\n\r\nexport const CONSUMABLE_ITEM_ICONS: Record<string, string> = {\r\n  [GODSBEARD().cid]: Godsbeard,\r\n}\r\nexport const CONSUMABLE_ITEM_COLORS: Record<string, string> = {\r\n  [GODSBEARD().cid]: '#84a397',\r\n}\r\n","import { tItemRarity } from './type'\r\nimport { tCharacterClass } from '../Character/type'\r\nimport { tConsumable } from '../Consumable/type'\r\nimport { tArmorResourceType } from '../Armor/type'\r\nimport { GODSBEARD } from '../Consumable/objects/godsbeard'\r\n\r\nexport const ITEM_RARITY_COLORS: Record<tItemRarity, string> = {\r\n  common: 'rgba(255,255,255,0.8)',\r\n  uncommon: 'rgba(173,216,230,1)',\r\n  rare: 'rgba(221,160,221,1)',\r\n  mythic: 'rgb(255,160,122,1)',\r\n}\r\n\r\nexport const CLASS_STARTING_CONSUMABLES: Record<\r\n  tCharacterClass,\r\n  tConsumable[]\r\n> = {\r\n  blacksmith: [GODSBEARD()],\r\n  hunter: [GODSBEARD()],\r\n  scholar: [GODSBEARD()],\r\n  bard: [GODSBEARD()],\r\n  enemy: [],\r\n}\r\n\r\nexport const CHARACTER_RESOURCES: tArmorResourceType[] = [\r\n  'offhand',\r\n  'body',\r\n  'head',\r\n  'feet',\r\n]\r\n","import React, { useState, useRef } from 'react'\r\nimport BaseTooltip, { TooltipProps } from 'react-tooltip-lite'\r\nimport { Hover } from '../Hover'\r\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\r\n\r\nexport interface ClickToolTipChildrenT {\r\n  onClick: (value?: boolean) => void\r\n  ref: React.MutableRefObject<HTMLElement | undefined>\r\n}\r\ninterface PropsT extends TooltipProps {\r\n  children: JSX.Element | ((props: ClickToolTipChildrenT) => JSX.Element)\r\n  content: JSX.Element | ((props: ClickToolTipChildrenT) => JSX.Element)\r\n}\r\nexport const Tooltip = (props: PropsT) => {\r\n  const { ...rest } = props\r\n  return (\r\n    <BaseTooltip\r\n      direction='up'\r\n      tagName='div'\r\n      padding='0'\r\n      arrow={false}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nexport const HoverToolTip = (props: PropsT) => {\r\n  return (\r\n    <Hover>\r\n      {({ isHovering }) => <Tooltip {...props} isOpen={isHovering} />}\r\n    </Hover>\r\n  )\r\n}\r\n\r\nexport const ClickToolTip = (props: PropsT) => {\r\n  const { children, content, ...rest } = props\r\n  const [isOpen, setIsOpen] = useState<boolean>(false)\r\n  const ref = useRef<HTMLElement>()\r\n  useOnClickOutside(ref, () => {\r\n    setIsOpen(false)\r\n  })\r\n  if (typeof children !== 'function') return null\r\n  if (typeof content !== 'function') return null\r\n  const p = {\r\n    onClick: (value?: boolean) => {\r\n      setIsOpen((v) => (value !== undefined ? value : !v))\r\n    },\r\n    ref,\r\n  }\r\n  return (\r\n    <Tooltip content={content(p)} {...rest} isOpen={isOpen}>\r\n      {children(p)}\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport const useOnClickOutside = (\r\n  ref: React.MutableRefObject<HTMLElement | undefined>,\r\n  handler: Function,\r\n) => {\r\n  useEffect(() => {\r\n    const listener = (event: any) => {\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return\r\n      }\r\n\r\n      setTimeout(() => handler(event), 150)\r\n    }\r\n\r\n    document.addEventListener('mousedown', listener)\r\n    document.addEventListener('touchstart', listener)\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', listener)\r\n      document.removeEventListener('touchstart', listener)\r\n    }\r\n  }, [ref, handler])\r\n}\r\n","import React from 'react'\r\nimport { styled, withWrapper } from 'styletron-react'\r\nimport { HoverToolTip } from '../components/Tooltip'\r\n\r\nconst Div = styled('div', {\r\n  transform: 'rotateY(0deg) rotate(-45deg)',\r\n})\r\nexport const Badge = withWrapper(Div, (Element) => (props: any) => {\r\n  const { onClick, ...rest } = props\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      style={{\r\n        position: props.$absolute === false ? 'relative' : 'absolute',\r\n        background: '#111',\r\n        padding: '4px',\r\n        fontFamily: 'Bangers',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        boxShadow: '1px 1px 0px black',\r\n        height: props.$size || '20px',\r\n        width: props.$size || '20px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        lineHeight: '20px',\r\n        letterSpacing: '1px',\r\n        borderRadius: '30%',\r\n        transform: 'rotateY(0deg) rotate(45deg)',\r\n        color: props.$color || 'white',\r\n        cursor: 'pointer',\r\n        top: props.$top,\r\n        userSelect: 'none',\r\n        bottom: props.$bottom,\r\n        right: props.$right,\r\n        left: props.$left,\r\n        transition: 'all 0.2s',\r\n        zIndex: 2,\r\n        ...(props.$style || {}),\r\n      }}\r\n    >\r\n      <Element {...rest} />\r\n    </div>\r\n  )\r\n})\r\n\r\nexport interface HoverBadgePropsT {\r\n  children: JSX.Element\r\n  content: JSX.Element\r\n  badgeProps: any\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n}\r\nexport const HoverBadge = (props: HoverBadgePropsT) => {\r\n  const { children, content, badgeProps, direction } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        top: badgeProps.$top,\r\n        bottom: badgeProps.$bottom,\r\n        left: badgeProps.$left,\r\n        right: badgeProps.$right,\r\n      }}\r\n    >\r\n      <HoverToolTip\r\n        distance={2}\r\n        direction={direction || 'right'}\r\n        // styles={{ position: 'absolute' }}\r\n        content={content || <div />}\r\n      >\r\n        <Badge\r\n          $absolute={false}\r\n          $size={badgeProps.$size}\r\n          $color={badgeProps.$color}\r\n          style={badgeProps.style}\r\n        >\r\n          {children}\r\n        </Badge>\r\n      </HoverToolTip>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Badge } from '../../elements/badge'\r\nimport { CheckKVT } from '../RoundResultRenderer'\r\nimport X from '../../icons/svg/lorc/split-cross.svg'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tStats, tBaseStats } from '../../game/Stats/type'\r\nimport { tStatusType } from '../../game/Status/type'\r\n\r\nexport interface SkillChecksPropsT {\r\n  stat: keyof tBaseStats\r\n  skill: tSkill\r\n}\r\nexport const SkillChecks = (props: SkillChecksPropsT) => {\r\n  const { stat, skill } = props\r\n  return (\r\n    <FlexContainer\r\n      style={{ justifyContent: 'center', padding: '0px 0 24px 0' }}\r\n    >\r\n      {Array(skill.rolls)\r\n        .fill(null)\r\n        .map((_, i) => (\r\n          <SkillCheck\r\n            key={i}\r\n            skill={skill}\r\n            check={{ label: stat, result: undefined }}\r\n          />\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface SkillCheckT {\r\n  check: CheckKVT\r\n  size?: number\r\n  padding?: number\r\n  perfect?: boolean\r\n  crit?: boolean\r\n  skill: tSkill\r\n}\r\nexport const SkillCheck = (props: SkillCheckT) => {\r\n  const { check, size = 36, padding = 12, perfect = false, skill, crit } = props\r\n  const colors = getPerfectStatusColors(skill.perfectStatus, crit)\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: `0px ${padding}px`,\r\n        opacity: check.result === undefined ? 0.75 : 1,\r\n      }}\r\n    >\r\n      <Badge\r\n        $absolute={false}\r\n        $size={size}\r\n        $style={{\r\n          borderColor: perfect ? colors.border : undefined,\r\n          background: perfect ? colors.background : '#111',\r\n        }}\r\n      >\r\n        <Icon\r\n          src={STAT_ICONS[check.label as keyof tBaseStats]}\r\n          fill={perfect ? colors.fill : getColor(check.result)}\r\n          size={size - 4}\r\n        />\r\n        {check.result === false && (\r\n          <Icon\r\n            src={X}\r\n            shadow\r\n            fill={'lightcoral'}\r\n            size={size - 4}\r\n            style={{ position: 'absolute', top: 0 }}\r\n          />\r\n        )}\r\n      </Badge>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst getColor = (result: boolean | undefined) => {\r\n  if (result === true) return 'white'\r\n  if (result === false) return 'rgba(255,255,255,0.3)'\r\n  return 'rgba(255,255,255,0.3)'\r\n}\r\ninterface SCColorsT {\r\n  border: string\r\n  background: string\r\n  fill: string\r\n}\r\nexport const getPerfectStatusColors = (\r\n  status: tStatusType[],\r\n  crit: boolean = false,\r\n): SCColorsT => {\r\n  if (crit) {\r\n    return {\r\n      border: '#white',\r\n      background: '#00134a',\r\n      fill: '#d9e3ff',\r\n    }\r\n  }\r\n  if (status.includes('burning')) {\r\n    return {\r\n      border: '#ff9100',\r\n      background: '#5c2c00',\r\n      fill: '#d48a46',\r\n    }\r\n  }\r\n  if (status.includes('poisoned')) {\r\n    return {\r\n      border: '#00870f',\r\n      background: '#001202',\r\n      fill: '#ad8e8e',\r\n    }\r\n  }\r\n  if (status.includes('bleeding')) {\r\n    return {\r\n      border: '#ff0000',\r\n      background: '#120000',\r\n      fill: '#d19999',\r\n    }\r\n  }\r\n  if (status.includes('cursed')) {\r\n    return {\r\n      border: '#6400a3',\r\n      background: '#10001a',\r\n      fill: '#b093c2',\r\n    }\r\n  }\r\n  if (status.includes('frozen')) {\r\n    return {\r\n      border: '#009ac4',\r\n      background: '#00161c',\r\n      fill: '#a5c8d1',\r\n    }\r\n  }\r\n\r\n  return {\r\n    border: '#ffd400',\r\n    background: '#261d00',\r\n    fill: '#ede5be',\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Color from 'color'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { StatsPreview } from '../StatsPreview'\r\nimport { Icon } from '../Icon'\r\nimport { ARMOR_TYPE_ICONS } from '../../icons/maps'\r\nimport { Button } from '../../elements/button'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { STAT_KEY_LABELS } from '../../game/Stats/constants'\r\nimport { SkillCheck } from '../SkillChecks'\r\n\r\nexport interface ArmorPreviewPropsT {\r\n  armor: tArmor\r\n  showEquipButton?: boolean\r\n  showBuyButton?: boolean\r\n  cost?: number\r\n  onEquipClick?: () => void\r\n  onBuyClick?: () => void\r\n}\r\nexport const ArmorPreview = (props: ArmorPreviewPropsT) => {\r\n  const {\r\n    armor,\r\n    showEquipButton,\r\n    showBuyButton,\r\n    cost,\r\n    onEquipClick,\r\n    onBuyClick,\r\n  } = props\r\n  const rarityColor = ITEM_RARITY_COLORS[armor.rarity]\r\n  const from = Color(rarityColor).darken(0.5).rgb().toString()\r\n  const to = Color(rarityColor).darken(0.7).rgb().toString()\r\n  const gradient = `linear-gradient(180deg, ${from} 0%, ${to} 100%)`\r\n  const skill = armor.skills[0]\r\n  return (\r\n    <BoxContainer style={{ minWidth: 240 }} substyle={{ background: gradient }}>\r\n      <FlexContainer $direction='column'>\r\n        {skill && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginBottom: 10 }}>\r\n            {Array(skill.rolls)\r\n              .fill(null)\r\n              .map((_, i) => (\r\n                <SkillCheck\r\n                  check={{\r\n                    label: skill.weaponStatOverride || 'strength',\r\n                    result: true,\r\n                  }}\r\n                  size={18}\r\n                  padding={4}\r\n                  skill={skill}\r\n                />\r\n              ))}\r\n          </FlexContainer>\r\n        )}\r\n        <FlexContainer style={{ marginBottom: 8 }}>\r\n          <Icon\r\n            src={ARMOR_TYPE_ICONS[armor.type]}\r\n            size={32}\r\n            style={{ marginRight: 10 }}\r\n            shadow\r\n          />\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              textShadow: '1px 1px 2px rgba(0,0,0,0.8)',\r\n            }}\r\n          >\r\n            <span style={{ fontWeight: 600 }}>{armor.name}</span>\r\n            <span style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n              {armor.rarity}\r\n            </span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n          {showEquipButton && (\r\n            <div style={{ marginLeft: 10 }}>\r\n              <Button onClick={onEquipClick} style={{ padding: 4 }}>\r\n                Equip\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </FlexContainer>\r\n        <BoxContainer\r\n          substyle={{\r\n            background: 'rgba(0,0,0,0.7)',\r\n            minHeight: 120,\r\n            textAlign: 'left',\r\n          }}\r\n        >\r\n          <FlexContainer $direction='column'>\r\n            <FlexContainer\r\n              style={{ justifyContent: 'space-between', marginBottom: 8 }}\r\n            >\r\n              <FlexContainer\r\n                $full\r\n                style={{\r\n                  textTransform: 'capitalize',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    color: 'lightblue',\r\n                    fontSize: 24,\r\n                    fontWeight: 'bolder',\r\n                    marginRight: 8,\r\n                  }}\r\n                >\r\n                  {armor.stats.armor}\r\n                </div>\r\n                <div>{STAT_KEY_LABELS.armor}</div>\r\n              </FlexContainer>\r\n              <FlexContainer\r\n                $full\r\n                style={{\r\n                  textTransform: 'capitalize',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    color: 'plum',\r\n                    fontSize: 24,\r\n                    fontWeight: 'bolder',\r\n                    marginRight: 8,\r\n                  }}\r\n                >\r\n                  <span>{armor.stats.resistance}</span>\r\n                </span>\r\n                {STAT_KEY_LABELS.resistance}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n            {armor.skills.length > 0 && (\r\n              <span style={{ color: 'plum', marginBottom: 8 }}>\r\n                {armor.skills.map(\r\n                  (skill, i) => `${i > 0 ? ', ' : ''}${skill.name}`,\r\n                )}\r\n              </span>\r\n            )}\r\n            <StatsPreview stats={{ ...armor.stats, armor: 0, resistance: 0 }} />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        {showBuyButton && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginTop: 10 }}>\r\n            <Button onClick={onBuyClick} style={{ padding: '4px 16px' }}>\r\n              Buy ({cost || 0})\r\n            </Button>\r\n          </FlexContainer>\r\n        )}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Color from 'color'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { StatsPreview } from '../StatsPreview'\r\nimport { Button } from '../../elements/button'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { Icon } from '../Icon'\r\nimport { WEAPON_TYPE_ICONS } from '../../icons/maps'\r\n\r\nexport const getDamageColor = (weapon: tWeapon) => {\r\n  if (weapon.damage.type === 'physical') return 'lightblue'\r\n  if (weapon.damage.type === 'magic') return 'plum'\r\n  return 'white'\r\n}\r\n\r\nexport interface WeaponPreviewPropsT {\r\n  weapon: tWeapon\r\n  showEquipButton?: boolean\r\n  showBuyButton?: boolean\r\n  cost?: number\r\n  onEquipClick?: () => void\r\n  onBuyClick?: () => void\r\n}\r\nexport const WeaponPreview = (props: WeaponPreviewPropsT) => {\r\n  const {\r\n    weapon,\r\n    showEquipButton,\r\n    showBuyButton,\r\n    cost = 0,\r\n    onEquipClick,\r\n    onBuyClick,\r\n  } = props\r\n  const basicAttack = weapon.skills[0]\r\n  const rarityColor = ITEM_RARITY_COLORS[weapon.rarity]\r\n  const from = Color(rarityColor).darken(0.5).rgb().toString()\r\n  const to = Color(rarityColor).darken(0.7).rgb().toString()\r\n  const gradient = `linear-gradient(180deg, ${from} 0%, ${to} 100%)`\r\n  return (\r\n    <BoxContainer style={{ width: 240 }} substyle={{ background: gradient }}>\r\n      <FlexContainer $direction='column'>\r\n        {basicAttack && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginBottom: 10 }}>\r\n            {Array(basicAttack.rolls)\r\n              .fill(null)\r\n              .map((_, i) => (\r\n                <SkillCheck\r\n                  check={{ label: weapon.stat, result: true }}\r\n                  size={18}\r\n                  padding={4}\r\n                  skill={weapon.skills[0]}\r\n                />\r\n              ))}\r\n          </FlexContainer>\r\n        )}\r\n        <FlexContainer style={{ alignItems: 'center' }}>\r\n          <Icon\r\n            src={WEAPON_TYPE_ICONS[weapon.type]}\r\n            size={32}\r\n            style={{ marginRight: 10 }}\r\n            shadow\r\n          />\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              margin: '8px 0',\r\n              textShadow: '1px 1px 2px rgba(0,0,0,0.8)',\r\n            }}\r\n          >\r\n            <span style={{ fontWeight: 600 }}>{weapon.name}</span>\r\n            <span style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n              {weapon.rarity} {weapon.type}\r\n            </span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n          {showEquipButton && (\r\n            <div style={{ marginLeft: 10 }}>\r\n              <Button onClick={onEquipClick} style={{ padding: 4 }}>\r\n                Equip\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </FlexContainer>\r\n        <BoxContainer\r\n          substyle={{\r\n            background: 'rgba(0,0,0,0.7)',\r\n            minHeight: 120,\r\n            textAlign: 'left',\r\n          }}\r\n        >\r\n          <FlexContainer $direction='column'>\r\n            <FlexContainer style={{ lineHeight: '24px', marginBottom: 4 }}>\r\n              <span\r\n                style={{\r\n                  color: getDamageColor(weapon),\r\n                  fontWeight: 'bolder',\r\n                  marginRight: 8,\r\n                  fontSize: 24,\r\n                }}\r\n              >\r\n                {weapon.damage.value}\r\n              </span>\r\n              <span style={{ textTransform: 'capitalize' }}>\r\n                {weapon.damage.type} Damage\r\n              </span>\r\n            </FlexContainer>\r\n            <span style={{ color: 'plum', marginBottom: 8 }}>\r\n              {weapon.skills.map(\r\n                (skill, i) => `${i > 0 ? ', ' : ''}${skill.name}`,\r\n              )}\r\n            </span>\r\n            <StatsPreview stats={weapon.stats} />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        {showBuyButton && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginTop: 10 }}>\r\n            <Button onClick={onBuyClick} style={{ padding: '4px 16px' }}>\r\n              Buy ({cost || 0})\r\n            </Button>\r\n          </FlexContainer>\r\n        )}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ArmorPreview } from '../ArmorPreview'\r\nimport { WeaponPreview } from '../WeaponPreview'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\n\r\nexport interface ItemPreviewPropsT {\r\n  item: tWeapon | tArmor\r\n}\r\n\r\nexport const ItemPreivew = (props: ItemPreviewPropsT) => {\r\n  const { item } = props\r\n\r\n  if (item.itemType === 'armor') return <ArmorPreview armor={item as tArmor} />\r\n  if (item.itemType === 'weapon')\r\n    return <WeaponPreview weapon={item as tWeapon} />\r\n  return <div />\r\n}\r\n","import { v4 } from 'uuid'\r\nimport {\r\n  tEncounterReward,\r\n  tEncounter,\r\n  tEncounterType,\r\n  tCombatEncounter,\r\n  tEncounterChoice,\r\n  tShopEncounter,\r\n} from './type'\r\nimport { getRandom, noneg } from '../../util'\r\nimport { makeParty } from '../Party/util'\r\nimport { ALL_WEAPONS } from '../Weapon/constants'\r\nimport { ALL_ARMOR } from '../Armor/objects'\r\n\r\nconst ZERO_REWARD: tEncounterReward = {\r\n  gold: 0,\r\n  xp: 0,\r\n  items: [],\r\n  consumables: [],\r\n  status: [],\r\n}\r\n\r\nexport const makeRandomEncounter = (depth: number) => {\r\n  const encounterType: tEncounterType = getRandom([\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    // 'shop',\r\n    //'shrine',\r\n  ])\r\n  let encounter: tEncounter = {\r\n    id: v4(),\r\n    name: `Encounter ${depth}`,\r\n    type: encounterType,\r\n    reward: ZERO_REWARD,\r\n  }\r\n\r\n  if (encounter.type === 'combat') {\r\n    encounter = {\r\n      ...encounter,\r\n      party: makeParty(noneg(depth - 1)),\r\n    } as tCombatEncounter\r\n  }\r\n  if (encounter.type === 'shop') {\r\n    encounter = {\r\n      ...encounter,\r\n      weapons: ALL_WEAPONS(),\r\n      armor: ALL_ARMOR(),\r\n      consumables: [],\r\n      costs: {},\r\n    } as tShopEncounter\r\n  }\r\n\r\n  return encounter\r\n}\r\n\r\nexport const makeEncounterList = (depth: number): tEncounterChoice[] => {\r\n  return Array(depth)\r\n    .fill(undefined)\r\n    .map((_, index) => {\r\n      return {\r\n        depth: index,\r\n        value: undefined,\r\n        left: makeRandomEncounter(index),\r\n        right: makeRandomEncounter(index),\r\n      }\r\n    })\r\n}\r\n","import { StateCoreT, StateT, StateActionT } from '../types'\r\nimport { makeReducer } from '../util'\r\nimport { useSelector } from 'react-redux'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport { Dispatch } from 'redux'\r\nimport { tEncounterChoice } from '../../game/Encounter/type'\r\nimport { makeEncounterList } from '../../game/Encounter/util'\r\n\r\nexport interface GameStateT {\r\n  encounters: tEncounterChoice[]\r\n  level: number\r\n}\r\n\r\nexport const RESET = '@action/game/reset'\r\nexport const CHOOSE_CURRENT = '@action/game/choose-current'\r\nexport const NEXT_LEVEL = '@action/game/next-level'\r\n\r\nexport const actionCreators = {\r\n  reset: (): StateActionT => ({\r\n    type: RESET,\r\n    payload: {},\r\n  }),\r\n  chooseCurrent: (value: 'left' | 'right'): StateActionT => ({\r\n    type: CHOOSE_CURRENT,\r\n    payload: {\r\n      value,\r\n    },\r\n  }),\r\n  nextLevel: (): StateActionT => ({\r\n    type: NEXT_LEVEL,\r\n    payload: {},\r\n  }),\r\n}\r\n\r\nexport const actions = {\r\n  reset: () => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.reset())\r\n  },\r\n  chooseCurrent: (value: 'left' | 'right') => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.chooseCurrent(value))\r\n  },\r\n  nextLevel: () => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.nextLevel())\r\n  },\r\n}\r\n\r\nexport const core: StateCoreT<GameStateT> = {\r\n  [RESET]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      level: 0,\r\n      encounters: makeEncounterList(10),\r\n    }\r\n  },\r\n  [CHOOSE_CURRENT]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      encounters: state.encounters.map((e, i) => {\r\n        if (i === state.level) {\r\n          return {\r\n            ...e,\r\n            value: action.payload.value,\r\n          }\r\n        }\r\n        return e\r\n      }),\r\n    }\r\n  },\r\n  [NEXT_LEVEL]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      level: state.level + 1,\r\n    }\r\n  },\r\n}\r\n\r\nexport const INITIAL_STATE: GameStateT = {\r\n  encounters: makeEncounterList(10),\r\n  level: 0,\r\n}\r\n\r\nexport default makeReducer(core, INITIAL_STATE)\r\nexport const useGameState = () => useSelector((state: StateT) => state.game)\r\nexport const useGameStateActions = () =>\r\n  useActions(actions) as {\r\n    reset: () => void\r\n    chooseCurrent: (value: 'left' | 'right') => void\r\n    nextLevel: () => void\r\n  }\r\n","import React, { useContext, useMemo } from 'react'\r\nimport { useGameState, useGameStateActions } from '../../state/game'\r\nimport { tEncounterChoice, tEncounter } from '../../game/Encounter/type'\r\n\r\nexport interface GameStateContextT {\r\n  encounters: tEncounterChoice[]\r\n  level: number\r\n  currentChoice: tEncounterChoice | undefined\r\n  currentEncounter: tEncounter | undefined\r\n  chooseCurrent: (value: 'left' | 'right') => void\r\n  nextLevel: () => void\r\n  reset: () => void\r\n}\r\n\r\nexport const defaultValue: GameStateContextT = {\r\n  encounters: [],\r\n  level: 0,\r\n  currentChoice: undefined,\r\n  currentEncounter: undefined,\r\n  chooseCurrent: (value) => {},\r\n  nextLevel: () => {},\r\n  reset: () => {},\r\n}\r\nexport const GameStateContext = React.createContext<GameStateContextT>(\r\n  defaultValue,\r\n)\r\nexport const useGameStateContext = () => useContext(GameStateContext)\r\n\r\nexport interface GameStateProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const GameStateContextProvider = (props: GameStateProviderPropsT) => {\r\n  const { children } = props\r\n  const { encounters, level } = useGameState()\r\n  const gsc = useGameStateActions()\r\n  const { nextLevel, chooseCurrent } = gsc\r\n  const currentChoice = useMemo(() => {\r\n    return encounters[level]\r\n  }, [encounters, level])\r\n  const currentEncounter = useMemo(() => {\r\n    const choice = encounters[level]\r\n    if (choice && choice.value) {\r\n      return choice[choice.value]\r\n    }\r\n  }, [encounters, level])\r\n\r\n  const reset = () => {\r\n    gsc.reset()\r\n  }\r\n\r\n  return (\r\n    <GameStateContext.Provider\r\n      value={{\r\n        encounters,\r\n        level,\r\n        currentChoice,\r\n        currentEncounter,\r\n        reset,\r\n        nextLevel,\r\n        chooseCurrent,\r\n      }}\r\n    >\r\n      {children}\r\n    </GameStateContext.Provider>\r\n  )\r\n}\r\n","import React, { useMemo, useEffect, useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport Gold from '../../icons/svg/delapouite/coins.svg'\r\nimport XP from '../../icons/svg/lorc/laurel-crown.svg'\r\nimport { Icon } from '../Icon'\r\nimport { ItemPreivew } from '../ItemPreview'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { tCombatReward } from '../../game/Other/types'\r\nimport { consolidateRewards } from '../../game/Other/util'\r\nimport { commitRewards } from '../../game/Party/util'\r\n\r\nexport interface CombatVictoryModalPropsT {\r\n  rewards: tCombatReward[]\r\n}\r\n\r\nexport const CombatVictoryModal = (props: CombatVictoryModalPropsT) => {\r\n  const { rewards } = props\r\n  const { rawParty, updateParty } = usePartyContext()\r\n  const { nextLevel } = useGameStateContext()\r\n  const { close } = useModalContext()\r\n  const consolidatedRewards = useMemo(() => consolidateRewards(rewards), [\r\n    rewards,\r\n  ])\r\n\r\n  const [items, setItems] = useState(consolidatedRewards.items)\r\n  const first = items[0]\r\n  const next = () => {\r\n    if (items.length === 0) {\r\n      close()\r\n      nextLevel()\r\n    } else {\r\n      setItems((i) => {\r\n        const [first, ...rest] = i\r\n        return rest\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateParty(commitRewards(rawParty, consolidatedRewards))\r\n  }, [])\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <h1>You Win!</h1>\r\n      <FlexContainer $direction='column' style={{ color: 'white' }}>\r\n        <FlexContainer style={{ marginBottom: 16 }}>\r\n          <FlexContainer>\r\n            <Icon src={Gold} size={18} style={{ marginRight: 8 }} />\r\n            <span>{consolidatedRewards.gold} Gold</span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n          <FlexContainer>\r\n            <Icon src={XP} size={18} style={{ marginRight: 8 }} />\r\n            <span>{consolidatedRewards.xp} XP</span>\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n        {first && (\r\n          <FlexContainer style={{ marginBottom: 16 }}>\r\n            <FullContainer />\r\n            <FlexContainer $direction='column'>\r\n              <ItemPreivew item={first} />\r\n              <span\r\n                style={{\r\n                  marginTop: 8,\r\n                  color: 'rgba(255,255,255,0.3)',\r\n                  fontWeight: 'bold',\r\n                  fontSize: 12,\r\n                }}\r\n              >\r\n                1 of {items.length}\r\n              </span>\r\n            </FlexContainer>\r\n            <FullContainer />\r\n          </FlexContainer>\r\n        )}\r\n      </FlexContainer>\r\n      <Button\r\n        onClick={() => {\r\n          next()\r\n        }}\r\n      >\r\n        {items.length === 0 ? 'Close' : 'Next'}\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n","import { tCombatReward } from './types'\r\n\r\nexport const consolidateRewards = (rewards: tCombatReward[]): tCombatReward => {\r\n  return rewards.reduce(\r\n    (res, reward) => {\r\n      return {\r\n        gold: res.gold + reward.gold,\r\n        xp: res.xp + reward.xp,\r\n        items: [...res.items, ...reward.items],\r\n        consumables: [...res.consumables, ...reward.consumables],\r\n      }\r\n    },\r\n    {\r\n      gold: 0,\r\n      xp: 0,\r\n      items: [],\r\n      consumables: [],\r\n    },\r\n  )\r\n}\r\n","import { tQueue } from './type'\r\nimport { tProcessedCharacter, tCharacter } from '../Character/type'\r\nimport { processCharacter } from '../Character/util'\r\n\r\nconst AGILITY_OFFSET = 200\r\n\r\nexport const makeCombatQueue = (characters: tProcessedCharacter[]): tQueue => {\r\n  const sortedCharacters = characters.sort(\r\n    (a, b) => b.stats.agility - a.stats.agility,\r\n  )\r\n  return validateQueue(\r\n    sortedCharacters.reduce(\r\n      (r, c, i) => ({\r\n        ...r,\r\n        [c.id]: AGILITY_OFFSET / 2 - c.stats.agility,\r\n      }),\r\n      {},\r\n    ),\r\n    characters,\r\n  )\r\n}\r\n\r\nexport const getMax = (queue: tQueue): number => {\r\n  return Object.keys(queue).reduce((r: number, id: string) => {\r\n    if (r < queue[id]) return queue[id]\r\n    return r\r\n  }, Number.NEGATIVE_INFINITY)\r\n}\r\n\r\nexport const getMin = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): number => {\r\n  if (characters.length === 0) throw new Error('track this call down')\r\n  return Object.keys(queue).reduce((min: number, id: string) => {\r\n    if (queue[id] < min) {\r\n      const c = characters.find((c) => c.id === id) as tProcessedCharacter\r\n      if (c.stats.queueConsolidationModifier > 0) {\r\n        return queue[id]\r\n      } else {\r\n        return min\r\n      }\r\n    }\r\n    return min\r\n  }, Number.POSITIVE_INFINITY)\r\n}\r\n\r\nexport const consolidateQueue = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  let min = getMin(queue, characters)\r\n  return Object.keys(queue).reduce((r, id) => {\r\n    const character = characters.find((c) => c.id === id) as tCharacter\r\n    const offset = character.stats.queueConsolidationModifier * min\r\n    return {\r\n      ...r,\r\n      [id]: queue[id] - offset,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const shiftQueue = (\r\n  queue: tQueue,\r\n  character: tProcessedCharacter,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  const ret = consolidateQueue(\r\n    {\r\n      ...queue,\r\n      [character.id]: AGILITY_OFFSET - character.stats.agility,\r\n    },\r\n    characters,\r\n  )\r\n  return ret\r\n}\r\n\r\nexport const getFirst = (queue: tQueue): string => {\r\n  let min = Number.POSITIVE_INFINITY\r\n  let key = Object.keys(queue)[0]\r\n  Object.keys(queue).forEach((id) => {\r\n    if (min > queue[id]) {\r\n      min = queue[id]\r\n      key = id\r\n    }\r\n  })\r\n  return key\r\n}\r\n\r\nexport const validateQueue = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  return consolidateQueue(\r\n    characters.reduce((r, c) => {\r\n      return c.health <= 0 ? r : { ...r, [c.id]: queue[c.id] }\r\n    }, {}),\r\n    characters,\r\n  )\r\n}\r\n\r\nexport const getSortedIds = (queue: tQueue): string[] => {\r\n  return Object.keys(queue).sort((a, b) => queue[a] - queue[b])\r\n}\r\n\r\nexport const commitQueueUpdates = (\r\n  queue: tQueue,\r\n  source: tProcessedCharacter,\r\n  characters: tCharacter[],\r\n): tQueue => {\r\n  const pcs = characters.map((c) => processCharacter(c))\r\n  const shiftedQueue = shiftQueue(queue, source, pcs)\r\n  const ret = validateQueue(\r\n    Object.keys(shiftedQueue).reduce((q, id) => {\r\n      const character = pcs.find((c) => c.id === id)\r\n      return {\r\n        ...q,\r\n        [id]:\r\n          character?.stats?.queueValueSet !== undefined\r\n            ? character?.stats?.queueValueSet\r\n            : shiftedQueue[id],\r\n      }\r\n    }, {}),\r\n    pcs,\r\n  )\r\n  return ret\r\n}\r\n","import { tStatusType } from '../Status/type'\r\n\r\nexport type tPerfectKey = tStatusType | 'splash' | 'pierce' | 'heal'\r\nexport const PERFECT_DISPLAY_INFO: Partial<Record<tPerfectKey, string>> = {\r\n  splash: 'Splash Damage',\r\n  pierce: 'Ignore Resistances',\r\n  bleeding: 'Bleed',\r\n  burning: 'Burn',\r\n  frozen: 'Freeze',\r\n  poisoned: 'Poison',\r\n  targeted: 'Taunt Enemies',\r\n  stunned: 'Stun',\r\n  evasive: 'Become Evasive',\r\n  heal: 'Heal',\r\n  protected: 'Protect',\r\n  ['speed-down']: 'Speed Down',\r\n  rushed: 'Rush Character',\r\n  reset: 'Reset Character',\r\n}\r\n","import { tProcessedCharacter } from '../Character/type'\r\nimport {\r\n  tSkill,\r\n  tSourceSkillResult,\r\n  tTargetSkillResult,\r\n  tSkillResult,\r\n  tSkillTarget,\r\n  tSkillTargetType,\r\n} from './type'\r\nimport { resolveCheck } from '../Roll/util'\r\nimport {\r\n  getRawDamage,\r\n  getReflectedDamage,\r\n  isCharacter,\r\n  hasStatus,\r\n  getDamageResistance,\r\n} from '../Character/util'\r\nimport { tProcessedParty } from '../Party/type'\r\nimport { isParty } from '../Party/util'\r\nimport { tDamage } from '../Damage/type'\r\nimport { tPerfectKey, PERFECT_DISPLAY_INFO } from './constants'\r\nimport { noneg } from '../../util'\r\n\r\nexport const getSourceSkillResult = (\r\n  source: tProcessedCharacter,\r\n  skill: tSkill,\r\n): tSourceSkillResult => {\r\n  const rollResults = Array(skill.rolls)\r\n    .fill(null)\r\n    .map((_, i) =>\r\n      resolveCheck(\r\n        source,\r\n        skill.weaponStatOverride || source.weapon.stat,\r\n        skill.offset,\r\n      ),\r\n    )\r\n  const passedCount = rollResults.filter((r) => r).length\r\n  const perfect = passedCount === skill.rolls\r\n  const criticalHitSuccess = resolveCheck(source, 'criticalChance')\r\n  const rollDamageModifier = passedCount / skill.rolls\r\n  const rawDamage = {\r\n    ...source.weapon.damage,\r\n    value: Math.round(\r\n      (source.weapon.damage.value + source.stats.attackDamageOffset) *\r\n        source.stats.attackDamageModifier *\r\n        skill.damageModifier *\r\n        rollDamageModifier *\r\n        (perfect && criticalHitSuccess ? 1.2 : 1),\r\n    ),\r\n    range: skill.weaponRangeOverride || source.weapon.damage.range,\r\n  }\r\n  return {\r\n    source,\r\n    skill,\r\n    rollResults,\r\n    passedCount,\r\n    perfect,\r\n    accuracySuccess: skill.damage ? passedCount > 0 : perfect,\r\n    criticalHitSuccess: perfect && criticalHitSuccess,\r\n    rawDamage,\r\n    splashDamage: {\r\n      ...source.weapon.damage,\r\n      value:\r\n        perfect && skill.perfectSplash\r\n          ? Math.round(rawDamage.value * skill.splashDamageModifier)\r\n          : 0,\r\n      range: skill.weaponRangeOverride || source.weapon.damage.range,\r\n    },\r\n    ignoreResistance: perfect && skill.perfectPierce,\r\n    addedStatus: perfect ? skill.perfectStatus : [],\r\n  }\r\n}\r\n\r\nexport const getTargetSkillResult = (\r\n  target: tProcessedCharacter,\r\n  sourceResult: tSourceSkillResult,\r\n): tTargetSkillResult => {\r\n  const dodgeResult = resolveCheck(target, 'evasion')\r\n  const dodgeSuccess = hasStatus(target, 'evasive')\r\n    ? !sourceResult.perfect\r\n    : !sourceResult.perfect && dodgeResult\r\n  const damage = getRawDamage(\r\n    sourceResult.source,\r\n    target,\r\n    sourceResult.rawDamage,\r\n  )\r\n  return {\r\n    ...sourceResult,\r\n    target,\r\n    dodgeSuccess,\r\n    totalDamage: {\r\n      ...damage,\r\n      value: dodgeSuccess ? 0 : damage.value,\r\n    },\r\n    reflectedDamage: getReflectedDamage(target, damage),\r\n    loggedDamgge: {\r\n      ...damage,\r\n      value: dodgeSuccess\r\n        ? 0\r\n        : noneg(damage.value - getDamageResistance(target, damage)),\r\n    },\r\n  }\r\n}\r\n\r\nexport const getSkillResult = (\r\n  source: tProcessedCharacter,\r\n  targets: tProcessedCharacter[],\r\n  skill: tSkill,\r\n): tSkillResult => {\r\n  const sourceResult = getSourceSkillResult(source, skill)\r\n  return {\r\n    sourceResult,\r\n    targetResults: targets.map((target) =>\r\n      getTargetSkillResult(target, sourceResult),\r\n    ),\r\n  }\r\n}\r\n\r\nexport const resolveSkillTarget = (\r\n  target: tSkillTarget,\r\n): tProcessedCharacter[] => {\r\n  switch (target.type) {\r\n    case 'single':\r\n      return target.character ? [target.character] : []\r\n    case 'ally':\r\n      return target.character ? [target.character] : []\r\n    case 'self':\r\n      return target.character ? [target.character] : []\r\n    case 'party':\r\n      return target.party?.characters || []\r\n    case 'group':\r\n      return target.party?.characters || []\r\n    default:\r\n      return []\r\n  }\r\n}\r\n\r\nexport const makeSkillTarget = (\r\n  type: tSkillTargetType,\r\n  target: tProcessedCharacter | tProcessedParty,\r\n): tSkillTarget => {\r\n  return {\r\n    type,\r\n    character: isCharacter(target)\r\n      ? (target as tProcessedCharacter)\r\n      : undefined,\r\n    party: isParty(target) ? (target as tProcessedParty) : undefined,\r\n  }\r\n}\r\n\r\nexport const getSkillTargetOptions = (\r\n  source: tProcessedCharacter,\r\n  sourceParty: tProcessedParty,\r\n  targetParty: tProcessedParty,\r\n  skill: tSkill,\r\n): tProcessedCharacter[] | tProcessedParty[] => {\r\n  switch (skill.targetType) {\r\n    case 'single':\r\n      return targetParty.characters.filter((c) => c.health > 0)\r\n    case 'ally':\r\n      return sourceParty.characters.filter((c) => c.health > 0)\r\n    case 'group':\r\n      return [targetParty]\r\n    case 'party':\r\n      return [sourceParty]\r\n    case 'self':\r\n      return [source]\r\n    default:\r\n      return []\r\n  }\r\n}\r\n\r\nexport const getSkillDamage = (\r\n  skill: tSkill,\r\n  source: tProcessedCharacter,\r\n): tDamage => {\r\n  return {\r\n    ...source.weapon.damage,\r\n    value:\r\n      (source.weapon.damage.value + source.stats.attackDamageOffset) *\r\n      (skill.damageModifier + source.stats.attackDamageModifier / 100),\r\n  }\r\n}\r\n\r\nexport const getPerfectKeys = (skill: tSkill): tPerfectKey[] => {\r\n  let base: tPerfectKey[] = [...skill.perfectStatus]\r\n  if (skill.perfectSplash) base = [...base, 'splash']\r\n  if (skill.perfectPierce) base = [...base, 'pierce']\r\n  if (skill.healing) base = [...base, 'heal']\r\n  return base\r\n}\r\n\r\nexport const getPerfectText = (\r\n  skill: tSkill,\r\n  character: tProcessedCharacter,\r\n): string => {\r\n  const perfectKeys = getPerfectKeys(skill)\r\n  const rawDamage = getSkillDamage(skill, character)\r\n\r\n  return perfectKeys.reduce((res, key, i) => {\r\n    let pre = `${res}${i > 0 ? ',' : ''}`\r\n    const text = PERFECT_DISPLAY_INFO[key]\r\n    switch (key) {\r\n      case 'splash':\r\n        return `${pre} ${Math.floor(skill.splashDamageModifier * 100)}% ${text}`\r\n      case 'heal':\r\n        return `${pre} ${text} ${character.stats.consumableHealthGainOffset} HP`\r\n      default:\r\n        return `${pre} ${text}`\r\n    }\r\n  }, '')\r\n}\r\n","import { tParty } from '../Party/type'\r\nimport { tCharacter } from '../Character/type'\r\nimport { updateCharacter, getOtherCharacters } from '../Party/util'\r\nimport { tQueue } from '../Queue/type'\r\nimport { tSkillResult, tSkillCommiterResult } from './type'\r\nimport {\r\n  commitDamage,\r\n  addMultipleStatus,\r\n  decrementStatusDurations,\r\n  processCharacter,\r\n} from '../Character/util'\r\nimport { noneg } from '../../util/noneg'\r\nimport { commitQueueUpdates } from '../Queue/util'\r\nimport { PLAYER_PARTY_ID } from '../Party/constants'\r\n\r\nconst partyUpdater = (\r\n  party: tParty,\r\n  characterId: string,\r\n  updater: (c: tCharacter) => tCharacter,\r\n): tParty => {\r\n  return updateCharacter(party, characterId, updater)\r\n}\r\n\r\nexport const commitSkillResults = (\r\n  playerParty: tParty,\r\n  enemyParty: tParty,\r\n  queue: tQueue,\r\n) => (result: tSkillResult): tSkillCommiterResult => {\r\n  const { source } = result.sourceResult\r\n  result.targetResults.forEach((targetResult, index) => {\r\n    const { target } = targetResult\r\n    let sourceParty = [playerParty, enemyParty].find(\r\n      (p) => p.id === source.partyId,\r\n    ) as tParty\r\n    let targetParty = [playerParty, enemyParty].find(\r\n      (p) => p.id === target.partyId,\r\n    ) as tParty\r\n    const localUpdate = (\r\n      p: tParty,\r\n      id: string,\r\n      updater: (c: tCharacter) => tCharacter,\r\n    ) => {\r\n      if (p.id === sourceParty.id) {\r\n        sourceParty = partyUpdater(p, id, updater)\r\n        return\r\n      }\r\n      if (p.id === targetParty.id) {\r\n        targetParty = partyUpdater(p, id, updater)\r\n        return\r\n      }\r\n      throw new Error('bad party id')\r\n    }\r\n\r\n    // commit main damage\r\n    localUpdate(targetParty, target.id, (c) => {\r\n      return commitDamage(\r\n        c,\r\n        targetResult.totalDamage,\r\n        targetResult.ignoreResistance,\r\n      )\r\n    })\r\n\r\n    // commit main status\r\n    localUpdate(targetParty, target.id, (c) => {\r\n      return addMultipleStatus(c, targetResult.addedStatus)\r\n    })\r\n\r\n    // comit main heal\r\n    if (targetResult.skill.healing) {\r\n      localUpdate(targetParty, target.id, (c) => {\r\n        return {\r\n          ...c,\r\n          healthOffset: c.healthOffset - c.stats.consumableHealthGainOffset,\r\n          consumables: c.consumables.filter(\r\n            (i) => i.id !== targetResult.skill.consumableId,\r\n          ),\r\n        }\r\n      })\r\n    }\r\n\r\n    // commit splash damage\r\n    if (targetResult.splashDamage.value > 0) {\r\n      getOtherCharacters(targetParty, target.id).forEach((character) => {\r\n        localUpdate(targetParty, character.id, (c) => {\r\n          return commitDamage(c, targetResult.splashDamage, false)\r\n        })\r\n      })\r\n    }\r\n\r\n    // commit reflected damage\r\n    if (targetResult.reflectedDamage.value > 0) {\r\n      localUpdate(sourceParty, source.id, (c) => {\r\n        return commitDamage(c, targetResult.reflectedDamage, false)\r\n      })\r\n    }\r\n\r\n    // commet end-of-round actions\r\n    if (index === result.targetResults.length - 1) {\r\n      // source health regen\r\n      localUpdate(sourceParty, source.id, (c) => {\r\n        const pc = processCharacter(c)\r\n        return {\r\n          ...c,\r\n          healthOffset: noneg(c.healthOffset - pc.stats.healthRegeneration),\r\n        }\r\n      })\r\n    }\r\n\r\n    if (sourceParty.id === PLAYER_PARTY_ID) {\r\n      playerParty = sourceParty\r\n    } else {\r\n      enemyParty = sourceParty\r\n    }\r\n    if (targetParty.id === PLAYER_PARTY_ID) {\r\n      if (sourceParty.id !== targetParty.id) {\r\n        playerParty = targetParty\r\n      }\r\n    } else {\r\n      enemyParty = targetParty\r\n    }\r\n  })\r\n\r\n  return {\r\n    playerParty: {\r\n      ...playerParty,\r\n      characters: playerParty.characters.map((c) =>\r\n        decrementStatusDurations(c),\r\n      ),\r\n    },\r\n    enemyParty: {\r\n      ...enemyParty,\r\n      characters: enemyParty.characters.map((c) => decrementStatusDurations(c)),\r\n    },\r\n    queue: commitQueueUpdates(queue, source, [\r\n      ...playerParty.characters,\r\n      ...enemyParty.characters,\r\n    ]),\r\n  }\r\n}\r\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n} from 'react'\r\nimport { usePartyContext } from '../PartyContext'\r\nimport { v4 } from 'uuid'\r\nimport { useHistory } from 'react-router'\r\nimport { useModalContext } from '../ModalContext'\r\nimport { CombatVictoryModal } from '../../components/CombatVictoryModal'\r\nimport { tProcessedParty, tParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tSkill, tSkillResult, tSkillTarget } from '../../game/Skill/type'\r\nimport { tQueue } from '../../game/Queue/type'\r\nimport {\r\n  processParty,\r\n  makeParty,\r\n  getRolledRewards,\r\n} from '../../game/Party/util'\r\nimport {\r\n  processCharacter,\r\n  makeCharacter,\r\n  removeTemporaryStatus,\r\n} from '../../game/Character/util'\r\nimport { makeCombatQueue, getFirst } from '../../game/Queue/util'\r\nimport {\r\n  makeSkillTarget,\r\n  resolveSkillTarget,\r\n  getSkillResult,\r\n} from '../../game/Skill/util'\r\nimport { commitSkillResults } from '../../game/Skill/committer'\r\nimport { getAIAction } from '../../game/AI/util'\r\n\r\nexport interface CombatContextT {\r\n  party: tProcessedParty\r\n  enemyParty: tProcessedParty\r\n  activeCharacter: tProcessedCharacter\r\n  characters: tProcessedCharacter[]\r\n  queue: tQueue\r\n  selectedSkill: tSkill | undefined\r\n  selectedTargets: tProcessedCharacter[]\r\n  selectedConsumableIndex: number | undefined\r\n  roundResults: tSkillResult[]\r\n  activeRound: tSkillResult | undefined\r\n  isRunning: boolean\r\n  isRenderingResult: boolean\r\n  onSkillSelect: (skill: tSkill, consumableIndex?: number) => void\r\n  onTargetsSelect: (target: tProcessedCharacter | tProcessedParty) => void\r\n  onConsumableSelect: (consumableIndex: number | undefined) => void\r\n  reset: () => void\r\n  start: () => void\r\n  next: (nextTarget?: tProcessedCharacter | tProcessedParty) => void\r\n  commit: () => void\r\n}\r\nconst defaultValue: CombatContextT = {\r\n  party: processParty(makeParty()),\r\n  enemyParty: processParty(makeParty()),\r\n  activeCharacter: processCharacter(makeCharacter('blacksmith')),\r\n  characters: [],\r\n  queue: {},\r\n  selectedSkill: undefined,\r\n  selectedTargets: [],\r\n  selectedConsumableIndex: undefined,\r\n  roundResults: [],\r\n  activeRound: undefined,\r\n  isRunning: false,\r\n  isRenderingResult: false,\r\n  onSkillSelect: (skill: tSkill) => {},\r\n  onTargetsSelect: (target: tProcessedCharacter | tProcessedParty) => {},\r\n  onConsumableSelect: (consumableIndex) => {},\r\n  reset: () => {},\r\n  start: () => {},\r\n  next: () => {},\r\n  commit: () => {},\r\n}\r\nexport const CombatContext = createContext<CombatContextT>(defaultValue)\r\nexport const useCombatContext = () => useContext(CombatContext)\r\n\r\nexport interface CombatContextProviderPropsT {\r\n  children: JSX.Element\r\n  enemyParty: tParty\r\n  setEnemyParty: (party: tParty) => void\r\n  onRequestNewParty: () => void\r\n}\r\nexport const CombatContextProvider = (props: CombatContextProviderPropsT) => {\r\n  const { children, setEnemyParty, onRequestNewParty } = props\r\n  const { party, rawParty, updateParty } = usePartyContext()\r\n  const { open } = useModalContext()\r\n  const history = useHistory()\r\n  const enemyParty = useMemo(() => processParty(props.enemyParty), [\r\n    props.enemyParty,\r\n  ])\r\n  const [isRunning, setIsRunning] = useState<boolean>(false)\r\n  const [isRenderingResult, setIsRenderingResult] = useState<boolean>(false)\r\n  const characters = useMemo(\r\n    () => [...party.characters, ...enemyParty.characters],\r\n    [party, enemyParty],\r\n  )\r\n  const [queue, setQueue] = useState<tQueue>(\r\n    makeCombatQueue([...party.characters, ...enemyParty.characters]),\r\n  )\r\n  const resultCommitter = useMemo(\r\n    () => commitSkillResults(rawParty, props.enemyParty, queue),\r\n    [rawParty, props.enemyParty, queue],\r\n  )\r\n  const [roundId, setRoundId] = useState<string>(v4())\r\n  const [roundResults, setRoundResults] = useState<tSkillResult[]>([])\r\n  const [activeRound, setActiveRound] = useState<tSkillResult | undefined>()\r\n  const [selectedTarget, setSelectedTarget] = useState<\r\n    tSkillTarget | undefined\r\n  >()\r\n  const [selectedSkill, setSelectedSkill] = useState<tSkill | undefined>()\r\n  const [selectedConsumableIndex, setSelectedConsumableIndex] = useState<\r\n    number | undefined\r\n  >()\r\n  const activeCharacter = useMemo(\r\n    () =>\r\n      characters.find(\r\n        (c) => c.health > 0 && c.id === getFirst(queue),\r\n      ) as tProcessedCharacter,\r\n    [queue, characters],\r\n  )\r\n\r\n  const start = () => {\r\n    setIsRunning(true)\r\n    setQueue(makeCombatQueue([...party.characters, ...enemyParty.characters]))\r\n    setRoundId(v4())\r\n    setActiveRound(undefined)\r\n    setIsRenderingResult(false)\r\n  }\r\n\r\n  const reset = () => {\r\n    onRequestNewParty()\r\n    setIsRunning(false)\r\n    setActiveRound(undefined)\r\n    setSelectedSkill(undefined)\r\n    setSelectedTarget(undefined)\r\n    setSelectedConsumableIndex(undefined)\r\n    setIsRenderingResult(false)\r\n    setQueue({})\r\n  }\r\n\r\n  const next = (nextTarget?: tProcessedCharacter | tProcessedParty) => {\r\n    if (!selectedSkill) return\r\n    const roundTarget = nextTarget\r\n      ? makeSkillTarget(selectedSkill.targetType, nextTarget)\r\n      : selectedTarget\r\n    if (!selectedSkill || !roundTarget) return\r\n    const results = getSkillResult(\r\n      activeCharacter,\r\n      resolveSkillTarget(roundTarget).filter((c) => c.health > 0),\r\n      selectedSkill,\r\n    )\r\n    setActiveRound(results)\r\n    setSelectedSkill(undefined)\r\n    setSelectedTarget(undefined)\r\n    setSelectedConsumableIndex(undefined)\r\n    setIsRenderingResult(true)\r\n  }\r\n\r\n  const onSkillSelect = (skill: tSkill, consumableIndex?: number) => {\r\n    setSelectedSkill(skill)\r\n    if (consumableIndex !== undefined) {\r\n      setSelectedConsumableIndex(consumableIndex)\r\n    }\r\n    if (skill.targetType !== selectedSkill?.targetType) {\r\n      setSelectedTarget(undefined)\r\n    }\r\n  }\r\n\r\n  const onTargetsSelect = (target: tProcessedCharacter | tProcessedParty) => {\r\n    if (!selectedSkill) return\r\n    setSelectedTarget(makeSkillTarget(selectedSkill.targetType, target))\r\n  }\r\n\r\n  const completeRound = () => {\r\n    setRoundId(v4())\r\n    setActiveRound(undefined)\r\n    setIsRenderingResult(false)\r\n  }\r\n\r\n  const commit = useCallback(() => {\r\n    if (!activeRound) return\r\n    const result = resultCommitter(activeRound)\r\n    setRoundResults((r) => [...r, activeRound])\r\n    setEnemyParty(result.enemyParty)\r\n    updateParty(result.playerParty)\r\n    setQueue(result.queue)\r\n\r\n    completeRound()\r\n  }, [activeRound, queue])\r\n\r\n  const execEnemyTurn = (skill: tSkill, target: tSkillTarget) => {\r\n    const result = getSkillResult(\r\n      activeCharacter,\r\n      resolveSkillTarget(target),\r\n      skill,\r\n    )\r\n    setActiveRound(result)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activeCharacter && isRunning) {\r\n      if (activeCharacter.partyId === enemyParty.id) {\r\n        const { skill, target } = getAIAction(\r\n          activeCharacter,\r\n          party,\r\n          enemyParty,\r\n        )\r\n        execEnemyTurn(skill, makeSkillTarget(skill.targetType, target))\r\n      } else {\r\n        setSelectedSkill(activeCharacter.skills[0])\r\n      }\r\n    }\r\n  }, [roundId])\r\n\r\n  useEffect(() => {\r\n    if (!isRunning) return\r\n    if (enemyParty.characters.every((c) => c.health <= 0)) {\r\n      setIsRunning(false)\r\n      const rewards = getRolledRewards(\r\n        enemyParty,\r\n        party.characters.reduce((p, c) =>\r\n          p.stats.luck > c.stats.luck ? p : c,\r\n        ),\r\n      )\r\n      updateParty({\r\n        ...rawParty,\r\n        characters: rawParty.characters.map((c) => removeTemporaryStatus(c)),\r\n      })\r\n      open(<CombatVictoryModal rewards={rewards} />, {}, true)\r\n      return\r\n    }\r\n    if (party.characters.every((c) => c.health <= 0)) {\r\n      setIsRunning(false)\r\n      alert('you lose')\r\n      history.push('/JSFTK_combat/')\r\n      return\r\n    }\r\n  }, [party, enemyParty])\r\n\r\n  return (\r\n    <CombatContext.Provider\r\n      value={{\r\n        party,\r\n        enemyParty,\r\n        characters,\r\n        queue,\r\n        activeCharacter,\r\n        activeRound,\r\n        selectedSkill,\r\n        selectedTargets: selectedTarget\r\n          ? resolveSkillTarget(selectedTarget)\r\n          : [],\r\n        selectedConsumableIndex,\r\n        roundResults,\r\n        isRunning,\r\n        isRenderingResult,\r\n        onSkillSelect,\r\n        onTargetsSelect,\r\n        onConsumableSelect: setSelectedConsumableIndex,\r\n        start,\r\n        next,\r\n        commit,\r\n        reset,\r\n      }}\r\n    >\r\n      {children}\r\n    </CombatContext.Provider>\r\n  )\r\n}\r\n","import { tSkill } from '../Skill/type'\r\nimport { tProcessedCharacter } from '../Character/type'\r\nimport { tProcessedParty } from '../Party/type'\r\nimport { getRandom } from '../../util'\r\nimport { getSkillTargetOptions } from '../Skill/util'\r\n\r\nexport interface tAIAction {\r\n  skill: tSkill\r\n  target: tProcessedCharacter | tProcessedParty\r\n}\r\nexport const getAIAction = (\r\n  source: tProcessedCharacter,\r\n  playerParty: tProcessedParty,\r\n  enemyParty: tProcessedParty,\r\n): tAIAction => {\r\n  const skill = getRandom(source.skills)\r\n  const targetedCharacters = playerParty.characters.filter(\r\n    (c) => c.status.map((t) => t.type).includes('targeted') && c.health > 0,\r\n  )\r\n  const target =\r\n    skill.targetType === 'single'\r\n      ? targetedCharacters.length > 0\r\n        ? getRandom(targetedCharacters)\r\n        : getRandom(playerParty.characters.filter((c) => c.health > 0))\r\n      : getRandom<tProcessedParty | tProcessedCharacter>(\r\n          getSkillTargetOptions(source, enemyParty, playerParty, skill),\r\n        )\r\n\r\n  return { skill, target }\r\n}\r\n","import React from 'react'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\n\r\nexport interface PerfectPropsT {\r\n  show: boolean | undefined\r\n  partyId: string\r\n}\r\nexport const Perfect = (props: PerfectPropsT) => {\r\n  const { show, partyId } = props\r\n  const style = useSpring({ opacity: show ? 1 : 0 })\r\n  return show ? (\r\n    <animated.div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: 30,\r\n        fontSize: 32,\r\n        color:\r\n          partyId === PLAYER_PARTY_ID ? 'rgba(255,255,255,0.8)' : '#c95738',\r\n        textShadow: '4px 4px 4px black',\r\n        fontFamily: 'Bangers',\r\n        ...style,\r\n      }}\r\n    >\r\n      Perfect!\r\n    </animated.div>\r\n  ) : null\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport Kefir from 'kefir'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Perfect } from './Perfect'\r\n\r\nexport interface RoundResultRendererPropsT {\r\n  isModal?: boolean\r\n}\r\nexport const RoundResultRenderer = (props: RoundResultRendererPropsT) => {\r\n  const { isModal = true } = props\r\n  const { activeRound, isRunning, commit } = useCombatContext()\r\n  const { open, close } = useModalContext()\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (activeRound && !isOpen && isRunning) {\r\n      setIsOpen(true)\r\n      if (isModal) {\r\n        open(\r\n          <RoundResult\r\n            close={() => {\r\n              close(true)\r\n              setIsOpen(false)\r\n              commit()\r\n            }}\r\n          />,\r\n          {\r\n            overlay: {\r\n              background: 'transparent',\r\n            },\r\n          },\r\n          true,\r\n        )\r\n      }\r\n    }\r\n  }, [isRunning, isModal, isOpen, activeRound, open, close, commit])\r\n\r\n  if (!isModal && activeRound && isRunning) {\r\n    return (\r\n      <FlexContainer style={{ height: 269 }}>\r\n        <RoundResult\r\n          close={() => {\r\n            setIsOpen(false)\r\n            commit()\r\n          }}\r\n        />\r\n      </FlexContainer>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport interface RoundResultPropsT {\r\n  close: () => void\r\n}\r\nexport interface CheckKVT {\r\n  label: string\r\n  result: boolean | undefined\r\n}\r\nexport const RoundResult = (props: RoundResultPropsT) => {\r\n  const { close } = props\r\n  const { activeRound } = useCombatContext()\r\n  const [isDone, setIsDone] = useState(false)\r\n  const round = activeRound?.sourceResult\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n  const [roundResults, setRoundResults] = useState<CheckKVT[]>(\r\n    !round\r\n      ? []\r\n      : round.rollResults.map((result, i) => ({\r\n          label: round.skill.weaponStatOverride || round.source.weapon.stat,\r\n          result: undefined,\r\n        })),\r\n  )\r\n\r\n  const updateRoundResult = (value: CheckKVT, index: number) => {\r\n    setActiveIndex(index)\r\n    setRoundResults((r) => r.map((r, i) => (i === index ? value : r)))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!round) return\r\n    const stream = Kefir.sequentially(\r\n      200,\r\n      roundResults.map((r, i) => ({ ...r, index: i })),\r\n    )\r\n    stream.onValue((result) => {\r\n      updateRoundResult(\r\n        {\r\n          label: result.label,\r\n          result: round.rollResults[result.index],\r\n        },\r\n        result.index,\r\n      )\r\n    })\r\n    stream.onEnd(() => {\r\n      Kefir.later(round.perfect ? 1200 : 900, undefined).onValue(() => {\r\n        setIsDone(true)\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (isDone) {\r\n      close()\r\n    }\r\n  }, [isDone, close])\r\n\r\n  const showPerfect = activeIndex === roundResults.length - 1 && round?.perfect\r\n  const isPlayer = (partyId: string) => partyId === PLAYER_PARTY_ID\r\n  const targetResult = activeRound?.targetResults[0]\r\n  const showTarget =\r\n    round && targetResult && targetResult.target.id !== round.source.id\r\n  if (!round) return null\r\n  return (\r\n    <FlexContainer $direction='column' style={{ textAlign: 'center' }}>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        {roundResults.map((result, i) => (\r\n          <SkillCheck\r\n            key={i}\r\n            check={result}\r\n            perfect={showPerfect}\r\n            skill={round.skill}\r\n            crit={round.criticalHitSuccess}\r\n          />\r\n        ))}\r\n      </FlexContainer>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        <BoxContainer\r\n          style={{ marginTop: 40 }}\r\n          substyle={{ background: '#111', fontSize: 20, padding: '16px 32px' }}\r\n        >\r\n          <strong\r\n            style={{\r\n              color: isPlayer(round.source.partyId)\r\n                ? 'lightblue'\r\n                : 'lightsalmon',\r\n            }}\r\n          >\r\n            {round.source.name}\r\n          </strong>{' '}\r\n          uses <span style={{ color: 'plum' }}>{round.skill.name}</span>\r\n          {showTarget && (\r\n            <span>\r\n              {' '}\r\n              on{' '}\r\n              <strong\r\n                style={{\r\n                  color: isPlayer(targetResult?.target.partyId || '')\r\n                    ? 'lightblue'\r\n                    : 'lightsalmon',\r\n                }}\r\n              >\r\n                {targetResult?.target.name}\r\n              </strong>\r\n            </span>\r\n          )}\r\n        </BoxContainer>\r\n      </FlexContainer>\r\n      <Perfect show={showPerfect} partyId={round.source.partyId} />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { getSkillDamage, getPerfectText } from '../../game/Skill/util'\r\nimport { getChecksProbability } from '../../game/Roll/util'\r\n\r\nexport interface SkillPreviewPropsT {\r\n  skill: tSkill\r\n  source: tProcessedCharacter\r\n  targets: tProcessedCharacter[]\r\n}\r\nexport const SkillPreview = (props: SkillPreviewPropsT) => {\r\n  const { skill, source, targets } = props\r\n  const perfectChance = getChecksProbability(\r\n    source,\r\n    Array(skill.rolls)\r\n      .fill(null)\r\n      .map((_, i) => ({ key: source.weapon.stat, offset: skill.offset })),\r\n  )\r\n  const stat = skill.weaponStatOverride || source.weapon.stat\r\n  const damage = getSkillDamage(skill, source)\r\n  const perfectKeys = getPerfectText(skill, source)\r\n  return (\r\n    <BoxContainer\r\n      style={{ marginTop: 30, position: 'relative' }}\r\n      substyle={{ background: '#111' }}\r\n    >\r\n      <FlexContainer $direction='column' style={{ alignItems: 'center' }}>\r\n        <FlexContainer style={{ marginTop: -27 }}>\r\n          <FullContainer />\r\n          <BoxContainer\r\n            substyle={{\r\n              padding: '4px 12px',\r\n              background: '#555',\r\n              letterSpacing: '1px',\r\n              fontFamily: 'Bangers',\r\n            }}\r\n          >\r\n            {skill.name}\r\n          </BoxContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n        <span\r\n          style={{\r\n            color: 'rgba(255,255,255,0.4)',\r\n            marginTop: 8,\r\n            marginBottom: 8,\r\n          }}\r\n        >\r\n          Perfect ({Math.floor(perfectChance * 100)}%){' '}\r\n          {perfectKeys.length > 0 && '='} {perfectKeys}\r\n        </span>\r\n        <FlexContainer $full style={{ width: '100%', marginBottom: 8 }}>\r\n          {damage.value > 0 && skill.damage && (\r\n            <FlexContainer\r\n              $full\r\n              $direction='column'\r\n              style={{ alignItems: 'center', marginRight: 10 }}\r\n            >\r\n              <span\r\n                style={{\r\n                  color: damage.type === 'physical' ? 'lightblue' : 'plum',\r\n                  fontWeight: 'bolder',\r\n                  fontSize: 32,\r\n                }}\r\n              >\r\n                {`${Math.floor(damage.value)}`}\r\n              </span>\r\n              <span style={{ color: 'rgba(255,255,255,0.2)' }}>Max DMG</span>\r\n            </FlexContainer>\r\n          )}\r\n          {skill.rolls > 0 && (\r\n            <FlexContainer\r\n              $full\r\n              $direction='column'\r\n              style={{ alignItems: 'center' }}\r\n            >\r\n              <span\r\n                style={{\r\n                  fontWeight: 'bolder',\r\n                  fontSize: 32,\r\n                }}\r\n              >\r\n                {source.stats[stat] + skill.offset}%\r\n              </span>\r\n              <span style={{ color: 'rgba(255,255,255,0.2)' }}>\r\n                Per Check ACC\r\n              </span>\r\n            </FlexContainer>\r\n          )}\r\n        </FlexContainer>\r\n        <FlexContainer style={{ marginBottom: -18 }}>\r\n          <FullContainer />\r\n          <BoxContainer\r\n            substyle={{ padding: '0px 12px', background: '#555', fontSize: 10 }}\r\n          >\r\n            {skill.targetType}\r\n          </BoxContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { Button } from '../../elements/button'\r\nimport { SkillPreview } from '../SkillPreview'\r\nimport { SkillChecks } from '../SkillChecks'\r\nimport { SKILL_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Hover } from '../Hover'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { HEAL } from '../../game/Skill/objects/heal'\r\n\r\nexport const CombatActions = () => {\r\n  const {\r\n    activeCharacter,\r\n    selectedSkill,\r\n    selectedTargets,\r\n    onSkillSelect,\r\n  } = useCombatContext()\r\n\r\n  if (!activeCharacter || activeCharacter.partyId !== PLAYER_PARTY_ID)\r\n    return null\r\n\r\n  const stat = selectedSkill?.weaponStatOverride || activeCharacter.weapon.stat\r\n  const skills = activeCharacter.skills.filter((skill) => {\r\n    if (activeCharacter.healthOffset === 0 && skill.id === HEAL('').id) {\r\n      return false\r\n    } else {\r\n      return true\r\n    }\r\n  })\r\n  return (\r\n    <FlexContainer $direction='column' style={{ minWidth: 340 }}>\r\n      {selectedSkill && <SkillChecks stat={stat} skill={selectedSkill} />}\r\n      <FlexContainer style={{ justifyContent: 'center', minHeight: 42 }}>\r\n        {skills.map((skill) => (\r\n          <React.Fragment key={skill.id}>\r\n            {SKILL_ICONS[skill.id] ? (\r\n              <Hover delay={0}>\r\n                {({ isHovering }) => (\r\n                  <Icon\r\n                    src={SKILL_ICONS[skill.id]}\r\n                    size={42}\r\n                    shadow={true}\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      padding: '0 12px',\r\n                    }}\r\n                    onClick={() => onSkillSelect(skill)}\r\n                    fill={\r\n                      skill.id === selectedSkill?.id\r\n                        ? 'lightsalmon'\r\n                        : isHovering\r\n                        ? 'white'\r\n                        : 'rgba(255,255,255,0.8)'\r\n                    }\r\n                  />\r\n                )}\r\n              </Hover>\r\n            ) : (\r\n              <Button\r\n                key={skill.id}\r\n                onClick={() => onSkillSelect(skill)}\r\n                style={{\r\n                  background: '#111',\r\n                  borderColor:\r\n                    selectedSkill && skill.id === selectedSkill.id\r\n                      ? 'white'\r\n                      : undefined,\r\n                }}\r\n              >\r\n                {skill.name}\r\n              </Button>\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && (\r\n        <SkillPreview\r\n          skill={selectedSkill}\r\n          source={activeCharacter}\r\n          targets={selectedTargets}\r\n        />\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport const Monospace = styled('span', () => ({\r\n  fontFamily: 'Inconsolata, monospace',\r\n  fontWeight: 600,\r\n}))\r\nexport const Monodiv = styled('div', () => ({\r\n  fontFamily: 'Inconsolata, monospace',\r\n  fontWeight: 600,\r\n}))\r\n","import { useState, useEffect, useRef } from 'react'\r\n\r\nexport const usePrevious = <T = any>(value: T) => {\r\n  const ref = useRef<T>()\r\n\r\n  useEffect(() => {\r\n    ref.current = value\r\n  }, [value])\r\n\r\n  return ref.current\r\n}\r\n","export const CHARACTER_XP_MAX: Record<number, number> = {\r\n  0: 100,\r\n  1: 120,\r\n  2: 400,\r\n  3: 900,\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FullContainer } from '../../elements/flex'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { Monodiv } from '../../elements/monospace'\r\nimport { noneg } from '../../util'\r\nimport { usePrevious } from '../../hooks/usePrevious'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { CHARACTER_XP_MAX } from '../../game/Character/constants'\r\n\r\nexport interface GaugePropsT {\r\n  name?: string\r\n  color: string\r\n  height?: number\r\n  max: number\r\n  value: number\r\n  style?: CSSProperties\r\n  children?: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const Gauge = (props: GaugePropsT) => {\r\n  const { name = '', value, color, height = 30, children } = props\r\n  const max = props.max < 1 ? 1 : props.max\r\n  const p = (value / max) * 100\r\n  const percentage = p > 100 ? 100 : p\r\n  const oldPercentage = usePrevious(percentage)\r\n  return (\r\n    <HoverToolTip\r\n      direction='right'\r\n      content={<BoxContainer>{`${name} (${value} / ${max})`}</BoxContainer>}\r\n    >\r\n      <BoxContainer\r\n        style={{ borderLeft: 'none' }}\r\n        substyle={{\r\n          padding: 0,\r\n          background: '#555',\r\n          height: height - 2,\r\n          position: 'relative',\r\n          border: 'none',\r\n        }}\r\n      >\r\n        <Spring\r\n          from={{ value: oldPercentage || 0 }}\r\n          to={{ value: percentage }}\r\n          config={{ friction: 70, mass: 5, tension: 300 }}\r\n        >\r\n          {(p) => (\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                left: 0,\r\n                boxSizing: 'border-box',\r\n                height: height - 2,\r\n                maxWidth: `${p.value}%`,\r\n                minWidth: `${p.value}%`,\r\n                boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n                textShadow: '1px 1px 1px black',\r\n                backgroundColor: color,\r\n                color: 'white',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n            ></div>\r\n          )}\r\n        </Spring>\r\n        <FullContainer\r\n          style={{\r\n            position: 'absolute',\r\n            height,\r\n            lineHeight: `${height - 2}px`,\r\n            right: 4,\r\n            top: 0,\r\n            fontSize: 10,\r\n            fontWeight: 'bold',\r\n            overflow: 'hidden',\r\n            textShadow: '0px 0px 3px black',\r\n          }}\r\n        >\r\n          <Monodiv>{children}</Monodiv>\r\n        </FullContainer>\r\n      </BoxContainer>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface HealthGaugePropsT {\r\n  character: tProcessedCharacter\r\n  height?: number\r\n}\r\nexport const HealthGauge = (props: HealthGaugePropsT) => {\r\n  const { character, height = 12 } = props\r\n  const health = noneg(character.health)\r\n  return (\r\n    <Gauge\r\n      name='Health'\r\n      color='rgb(153, 82, 81)'\r\n      max={character.maxHealth}\r\n      value={health}\r\n      height={height}\r\n    >\r\n      {health}/{character.maxHealth}\r\n    </Gauge>\r\n  )\r\n}\r\nexport interface XPGaugePropsT {\r\n  character: tProcessedCharacter\r\n}\r\nexport const XPGauge = (props: HealthGaugePropsT) => {\r\n  const { character } = props\r\n  const value = character.experience\r\n  const max = CHARACTER_XP_MAX[character.level]\r\n  return (\r\n    <Gauge name='XP' color='#5e8575' max={max} value={value} height={12}>\r\n      {value}/{max}\r\n    </Gauge>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Tooltip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STATUS_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { tStatus } from '../../game/Status/type'\r\nimport { STATUS_CONFIG } from '../../game/Status/constants'\r\n\r\nexport interface TagPreviewPropsT {\r\n  status: tStatus\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n}\r\nexport const TagPreview = (props: TagPreviewPropsT) => {\r\n  const { status, direction } = props\r\n  const statusConfig = STATUS_CONFIG[status.type]\r\n  return (\r\n    <Tooltip\r\n      direction={direction || 'bottom'}\r\n      content={\r\n        <BoxContainer style={{ maxWidth: 200 }}>\r\n          <FlexContainer $direction='column'>\r\n            <strong style={{ marginBottom: 8 }}>\r\n              {status.type} {status.duration > 0 ? `(${status.duration})` : ''}\r\n            </strong>\r\n            {statusConfig.description && (\r\n              <span>{statusConfig.description}</span>\r\n            )}\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n      }\r\n    >\r\n      <Icon shadow src={STATUS_ICONS[status.type] || ''} size={20} />\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { tProcessedCharacter } from '../game/Character/type'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\n\r\nexport const usePlayerCharacterNotifications = (\r\n  character: tProcessedCharacter,\r\n  push: (c: JSX.Element, type?: string) => void,\r\n) => {\r\n  const health = character.health\r\n  const status = character.status.map((s) => s.type)\r\n  const { roundResults } = useCombatContext()\r\n  const [previousHealth, setPreviousHealth] = useState(health)\r\n  useEffect(() => {\r\n    const diff = previousHealth - health\r\n    if (diff > 0) {\r\n      push(<span style={{ fontFamily: 'Bangers' }}>- {diff}</span>)\r\n    }\r\n    if (diff < 0) {\r\n      push(\r\n        <span style={{ fontFamily: 'Bangers' }}>+ {Math.abs(diff)}</span>,\r\n        'good',\r\n      )\r\n    }\r\n    setPreviousHealth(health)\r\n  }, [health])\r\n\r\n  useEffect(() => {\r\n    const lastRound = roundResults[roundResults.length - 1]\r\n    if (lastRound) {\r\n      const chResult = lastRound.targetResults.find(\r\n        (r) => r.target.id === character.id,\r\n      )\r\n      if (chResult) {\r\n        if (chResult.dodgeSuccess) {\r\n          push(<span style={{ fontFamily: 'Bangers' }}>Dodged!</span>, 'base')\r\n        }\r\n        if (\r\n          !chResult.dodgeSuccess &&\r\n          chResult.accuracySuccess &&\r\n          chResult.skill.damage &&\r\n          chResult.loggedDamgge.value <= 0\r\n        ) {\r\n          push(<span style={{ fontFamily: 'Bangers' }}>Blocked!</span>, 'base')\r\n        }\r\n        if (chResult.addedStatus.length > 0) {\r\n          chResult.addedStatus.forEach((status) => {\r\n            push(\r\n              <span style={{ fontFamily: 'Bangers' }}>{status}</span>,\r\n              'base',\r\n            )\r\n          })\r\n        }\r\n        if (chResult.perfect && chResult.skill.perfectPierce) {\r\n          push(<span style={{ fontFamily: 'Bangers' }}>Pierced!</span>, 'base')\r\n        }\r\n        if (chResult.criticalHitSuccess) {\r\n          push(<span style={{ fontFamily: 'Bangers' }}>Critical!</span>, 'base')\r\n        }\r\n      }\r\n      if (\r\n        lastRound.sourceResult.source.id === character.id &&\r\n        !lastRound.sourceResult.accuracySuccess\r\n      ) {\r\n        push(<span style={{ fontFamily: 'Bangers' }}>Missed!</span>, 'base')\r\n      }\r\n    }\r\n  }, [roundResults])\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { noneg } from '../../util'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { usePlayerCharacterNotifications } from '../../hooks/usePlayerCharacterNotifications'\r\n\r\nexport interface HealthPropsT {\r\n  character: tProcessedCharacter\r\n  push: (content: JSX.Element, type?: string) => void\r\n}\r\nexport const Health = (props: HealthPropsT) => {\r\n  const { character, push } = props\r\n  const health = noneg(character.health)\r\n  const [previousHealth, setPreviousHealth] = useState(character.health)\r\n  usePlayerCharacterNotifications(character, push)\r\n\r\n  useEffect(() => {\r\n    setPreviousHealth(health)\r\n  }, [health])\r\n\r\n  return (\r\n    <span\r\n      style={{\r\n        fontSize: 52,\r\n        height: 52,\r\n        width: 60,\r\n        textShadow: '1px 1px 10px black',\r\n        color: '#b55553',\r\n        fontFamily: 'Bangers',\r\n        userSelect: 'none',\r\n      }}\r\n    >\r\n      <Spring\r\n        from={{ hp: previousHealth || 0 }}\r\n        to={{ hp: health }}\r\n        config={{ friction: 70, mass: 5, tension: 300, clamp: true }}\r\n      >\r\n        {(hpp) => <span>{Math.floor(hpp.hp)}</span>}\r\n      </Spring>\r\n    </span>\r\n  )\r\n}\r\n","import React, {\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useMemo,\r\n  CSSProperties,\r\n} from 'react'\r\nimport { useSpring, animated, useTransition } from 'react-spring'\r\nimport { FullContainer } from '../../elements/flex'\r\nimport { v4 } from 'uuid'\r\n\r\nexport interface LocalToastContextT {\r\n  push: (content: JSX.Element) => void\r\n}\r\nexport const defaultValue: LocalToastContextT = {\r\n  push: (content) => {},\r\n}\r\nexport const LocalToastContext = React.createContext<LocalToastContextT>(\r\n  defaultValue,\r\n)\r\nexport const useLocalToast = () => useContext(LocalToastContext)\r\n\r\nexport interface LocalToastProviderProps {\r\n  children: JSX.Element\r\n}\r\nexport const LocalToastProvider = (props: LocalToastProviderProps) => {\r\n  const { children } = props\r\n  const [queue, setQueue] = useState<\r\n    {\r\n      id: string\r\n      content: JSX.Element\r\n    }[]\r\n  >([])\r\n\r\n  useEffect(() => {\r\n    const i = setInterval(() => {\r\n      setQueue((q) => {\r\n        const [f, ...rest] = q\r\n        return rest || []\r\n      })\r\n    }, 3000)\r\n    return () => {\r\n      clearInterval(i)\r\n    }\r\n  }, [])\r\n\r\n  const push = (c: JSX.Element, type?: string) => {\r\n    setQueue((q) => [\r\n      ...q,\r\n      {\r\n        id: v4(),\r\n        content: c,\r\n        type,\r\n      },\r\n    ])\r\n  }\r\n\r\n  return (\r\n    <LocalToastContext.Provider value={{ push }}>\r\n      <>\r\n        <div style={{ position: 'relative' }}>\r\n          <Toast queue={queue} />\r\n        </div>\r\n        {children}\r\n      </>\r\n    </LocalToastContext.Provider>\r\n  )\r\n}\r\n\r\ninterface ToastQT {\r\n  id: string\r\n  type?: string\r\n  content: JSX.Element\r\n}\r\nexport interface ToastPropsT {\r\n  queue: ToastQT[]\r\n  style?: CSSProperties\r\n}\r\nexport const Toast = (props: ToastPropsT) => {\r\n  const { queue, style } = props\r\n  const hasChildren = queue.length > 0\r\n  const animation = useTransition(queue, (q) => q.id, {\r\n    from: {\r\n      transform: 'translate3d(0,40px,0)',\r\n      maxWidth: 0,\r\n      maxHeight: 0,\r\n      opacity: 0,\r\n    },\r\n    enter: {\r\n      transform: 'translate3d(0,0px,0)',\r\n      maxWidth: 180,\r\n      maxHeight: 40,\r\n      opacity: 1,\r\n    },\r\n    leave: {\r\n      transform: 'translate3d(0,-80px,0)',\r\n      maxWidth: 0,\r\n      maxHeight: 0,\r\n      opacity: 0,\r\n    },\r\n  })\r\n\r\n  return (\r\n    <animated.div\r\n      style={{\r\n        position: 'absolute',\r\n        width: '100%',\r\n        display: 'flex',\r\n        height: 0,\r\n        top: -24,\r\n        zIndex: 3,\r\n        ...(style || {}),\r\n      }}\r\n    >\r\n      {animation.map((item) => (\r\n        <animated.div\r\n          key={item.key}\r\n          style={{\r\n            display: 'flex',\r\n            ...item.props,\r\n          }}\r\n        >\r\n          <FullContainer />\r\n          <div\r\n            style={{\r\n              marginBottom: 4,\r\n              marginRight: 4,\r\n              fontSize: 20,\r\n              padding: 2,\r\n              lineHeight: '20px',\r\n              whiteSpace: 'nowrap',\r\n              background:\r\n                'radial-gradient(circle, rgba(0,0,0,0.3) 0%, rgba(0,0,0,0) 100%)',\r\n              ...color(item.item.type),\r\n            }}\r\n          >\r\n            {item.item.content}\r\n          </div>\r\n          <FullContainer />\r\n        </animated.div>\r\n      ))}\r\n    </animated.div>\r\n  )\r\n}\r\n\r\nexport interface LocalToastRpPropsT {\r\n  children: (props: LocalToastContextT) => JSX.Element\r\n  style?: CSSProperties\r\n}\r\nexport const LocalToastRp = (props: LocalToastRpPropsT) => {\r\n  const { children, style } = props\r\n  const [queue, setQueue] = useState<ToastQT[]>([])\r\n\r\n  const push = (c: JSX.Element, type?: string) => {\r\n    setQueue((q) => [\r\n      ...q,\r\n      {\r\n        id: v4(),\r\n        content: c,\r\n        type,\r\n      },\r\n    ])\r\n    setTimeout(() => {\r\n      setQueue((q) => {\r\n        const [f, ...rest] = q\r\n        return rest || []\r\n      })\r\n    }, 4000)\r\n  }\r\n  return (\r\n    <>\r\n      <div style={{ position: 'relative' }}>\r\n        <Toast queue={queue} style={style} />\r\n      </div>\r\n      {children({ push })}\r\n    </>\r\n  )\r\n}\r\n\r\nconst color = (type: string | undefined) => {\r\n  switch (type) {\r\n    case 'good':\r\n      return {\r\n        color: '#aae6bf',\r\n        textShadow: '0px 3px 1px rgba(0,0,0,0.5)',\r\n      }\r\n    case 'base':\r\n      return {\r\n        color: 'rgba(255,255,255,0.8)',\r\n        textShadow: '0px 3px 1px rgba(0,0,0,0.5)',\r\n      }\r\n    default:\r\n      return {\r\n        // color: 'rgba(219, 114, 114, 0.8)',\r\n        // color: 'red',\r\n        color: 'rgba(255,158,158,0.8)',\r\n        textShadow: '0px 3px 1px rgba(0,0,0,1)',\r\n      }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { HealthGauge } from '../Gauge'\r\nimport { styled } from 'styletron-react'\r\nimport { Badge, HoverBadge } from '../../elements/badge'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { TagPreview } from '../TagPreview'\r\nimport { CharacterImage } from '../CharacterImage'\r\nimport { usePrevious } from '../../hooks/usePrevious'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { noneg } from '../../util'\r\nimport { Icon } from '../Icon'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Health } from './Health'\r\nimport { LocalToastRp } from '../../contexts/LocalToastContext'\r\n\r\nexport interface EnemyCharacterPropsT {\r\n  character: tProcessedCharacter\r\n  activeCharacter: tProcessedCharacter\r\n  hoverable?: boolean\r\n  selected?: boolean\r\n  isHovering?: boolean\r\n  onClick?: () => void\r\n}\r\nconst Wrapper = styled('div', (props: any) => {\r\n  const { $selected, $active } = props\r\n  return {\r\n    margin: 10,\r\n    boxShadow: $active ? '0px 0px 20px white' : 'none',\r\n    transition: 'all 0.1s',\r\n  }\r\n})\r\nexport const EnemyCharacter = (props: EnemyCharacterPropsT) => {\r\n  const { character, activeCharacter, onClick } = props\r\n  const health = noneg(character.health)\r\n  const previousHealth = usePrevious<number>(health)\r\n  return (\r\n    <div\r\n      onClick={() => (onClick && character.health > 0 ? onClick() : null)}\r\n      style={{\r\n        borderWidth: 2,\r\n        width: 320,\r\n        position: 'relative',\r\n        cursor: onClick ? 'pointer' : 'default',\r\n        color: 'rgba(255,255,255,0.8)',\r\n        opacity: character.health <= 0 ? 0.5 : 1,\r\n      }}\r\n    >\r\n      <FlexContainer style={{ alignItems: 'center' }}>\r\n        <FlexContainer>\r\n          <Icon\r\n            src={character.icon || ''}\r\n            shadow\r\n            fill={\r\n              activeCharacter && character.id === activeCharacter.id\r\n                ? 'lightsalmon'\r\n                : 'white'\r\n            }\r\n            size={64}\r\n            style={{ zIndex: 1, position: 'relative', marginRight: -24 }}\r\n          />\r\n        </FlexContainer>\r\n        <FlexContainer $full $direction='column'>\r\n          <FlexContainer\r\n            style={{\r\n              justifyContent: 'flex-end',\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                padding: '2px 4px',\r\n                textAlign: 'right',\r\n                fontSize: 18,\r\n                lineHeight: '18px',\r\n                background: 'rgba(0,0,0,0.4)',\r\n                textShadow: '1px 1px 2px black',\r\n                fontFamily: 'Bangers',\r\n                letterSpacing: '1px',\r\n              }}\r\n            >\r\n              {character.name}\r\n            </span>\r\n          </FlexContainer>\r\n          <div style={{ boxShadow: '0px 4px 15px rgba(0,0,0,1)' }}>\r\n            <HealthGauge character={character} height={20} />\r\n          </div>\r\n          <HoverBadge\r\n            direction='down'\r\n            content={<BoxContainer>Enemy Level</BoxContainer>}\r\n            badgeProps={{\r\n              $left: '-6px',\r\n              $bottom: '-6px',\r\n              $size: '20px',\r\n              $color: 'lightcoral',\r\n            }}\r\n          >\r\n            <span>{character.level}</span>\r\n          </HoverBadge>\r\n          <FlexContainer\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: '-12px',\r\n              left: '40px',\r\n            }}\r\n          >\r\n            {character.status.map((status, i) => (\r\n              <TagPreview key={i} status={status} />\r\n            ))}\r\n          </FlexContainer>\r\n          <FlexContainer\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: '-8px',\r\n              right: '16px',\r\n              width: 52,\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <FullContainer />\r\n            {character.stats.armor > 0 && (\r\n              <Badge\r\n                $absolute={false}\r\n                $right='4px'\r\n                $size='12px'\r\n                $color='lightblue'\r\n              >\r\n                {character.stats.armor}\r\n              </Badge>\r\n            )}\r\n            {character.stats.resistance > 0 && (\r\n              <Badge $absolute={false} $size='12px' $color='plum'>\r\n                {character.stats.resistance}\r\n              </Badge>\r\n            )}\r\n            <FullContainer />\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n        <LocalToastRp style={{ top: -24, right: -30, flexDirection: 'column' }}>\r\n          {({ push }) => <Health character={character} push={push} />}\r\n        </LocalToastRp>\r\n      </FlexContainer>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { ConfirmButton2, ConfirmButton, RedButton } from '../../elements/button'\r\nimport { EnemyCharacter } from '../EnemyCharacter'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\n\r\nexport interface CombatPartyPropsT {\r\n  party: tProcessedParty\r\n}\r\nexport const CombatParty = (props: CombatPartyPropsT) => {\r\n  const { party } = props\r\n  const {\r\n    activeCharacter,\r\n    selectedSkill,\r\n    onTargetsSelect,\r\n    next,\r\n  } = useCombatContext()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          padding: '0 120px',\r\n          cursor: selectedSkill?.targetType === 'group' ? 'pointer' : 'default',\r\n        }}\r\n        onClick={() => {\r\n          if (selectedSkill && selectedSkill.targetType === 'group') {\r\n            onTargetsSelect(party)\r\n          }\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <div key={c.id}>\r\n            <EnemyCharacter activeCharacter={activeCharacter} character={c} />\r\n            {selectedSkill &&\r\n              selectedSkill.targetType === 'single' &&\r\n              c.health > 0 &&\r\n              activeCharacter.partyId === PLAYER_PARTY_ID && (\r\n                <FlexContainer\r\n                  style={{ justifyContent: 'center', marginTop: -11 }}\r\n                >\r\n                  <div\r\n                    style={{ boxShadow: '0px 2px 5px black', marginTop: -2 }}\r\n                  >\r\n                    <RedButton onClick={() => next(c)} $direction='down'>\r\n                      Attack\r\n                    </RedButton>\r\n                  </div>\r\n                </FlexContainer>\r\n              )}\r\n          </div>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && selectedSkill.targetType === 'group' && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n            <RedButton onClick={() => next(party)}>Attack Group</RedButton>\r\n          </div>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\n\r\nexport interface AppHeaderPropsT {\r\n  children?: JSX.Element\r\n  left?: JSX.Element\r\n  right?: JSX.Element\r\n}\r\n\r\nexport const AppHeader = (props: AppHeaderPropsT) => {\r\n  const { children, left, right } = props\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'center',\r\n          background: '#111',\r\n          height: 52,\r\n          borderBottom: '2px solid rgba(255,255,255,0.3)',\r\n          boxShadow: '1px 1px 1px black',\r\n        }}\r\n      >\r\n        <FlexContainer $full>{left}</FlexContainer>\r\n        <FlexContainer $full>{children}</FlexContainer>\r\n        <FlexContainer $full>{right}</FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport Gold from '../../icons/svg/delapouite/coins.svg'\r\nimport { Icon } from '../Icon'\r\n\r\nexport const PartyResources = () => {\r\n  const { party } = usePartyContext()\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{ alignItems: 'center', color: 'white', paddingRight: 20 }}\r\n    >\r\n      <Icon src={Gold} size={18} style={{ marginRight: 8 }} />\r\n      {party.gold}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button, RedButton } from '../../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { AppHeader } from '../AppHeader'\r\nimport { PartyResources } from '../PartyResources'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { Icon } from '../Icon'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { tQueue } from '../../game/Queue/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { getMax, getFirst, getSortedIds } from '../../game/Queue/util'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\n\r\nconst size = 40\r\nexport interface CombatQueuePropsT {\r\n  queue: tQueue\r\n  characters: tProcessedCharacter[]\r\n}\r\nexport const CombatQueue = (props: CombatQueuePropsT) => {\r\n  const { queue, characters } = props\r\n  const { isRunning } = useCombatContext()\r\n  const history = useHistory()\r\n  const { level, nextLevel } = useGameStateContext()\r\n  const first = characters.find(\r\n    (c) => c.id === getFirst(queue),\r\n  ) as tProcessedCharacter\r\n  const sortedIds = getSortedIds(queue)\r\n  const bigList = [\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n  ]\r\n  const count = Math.floor((800 - 52) / size)\r\n  const [f, ...list] = Array(count)\r\n    .fill(null)\r\n    .map((_, i) => bigList[i])\r\n    .map((id) => characters.find((c) => c.id === id))\r\n    .filter((c) => c !== undefined)\r\n  const max = getMax(queue)\r\n  const min = 50\r\n  const widthCoef = max > min ? 100 / max : 100 / min\r\n  return (\r\n    <AppHeader\r\n      left={\r\n        <>\r\n          {/*<RedButton onClick={gotoParty}>Edit Party</RedButton>*/}\r\n          <Button onClick={() => history.push('/JSFTK_combat')}>\r\n            Restart ({level})\r\n          </Button>\r\n        </>\r\n      }\r\n      right={\r\n        <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n          <PartyResources />\r\n        </FlexContainer>\r\n      }\r\n    >\r\n      <>\r\n        {first && isRunning && (\r\n          <FlexContainer\r\n            style={{\r\n              width: 800,\r\n              flexDirection: 'row-reverse',\r\n              boxShadow: '0px 0px 3px black',\r\n              borderLeft: '1px solid rgba(255,255,255,0.3)',\r\n              background: '#222',\r\n            }}\r\n          >\r\n            <FlexContainer style={{ position: 'relative', marginLeft: 22 }}>\r\n              {first?.partyId === PLAYER_PARTY_ID ? (\r\n                <img\r\n                  alt='profile'\r\n                  height='64'\r\n                  width='64'\r\n                  src={`https://picsum.photos/seed/${first?.name}/115/115`}\r\n                  style={{\r\n                    height: 64,\r\n                    width: 64,\r\n                    border: '2px solid rgba(255,255,255,0.8)',\r\n                    borderTop: 'none',\r\n                    boxShadow: '1px 1px 1px black',\r\n                    zIndex: 2,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <FlexContainer\r\n                  style={{\r\n                    background: 'lightsalmon',\r\n                    border: '2px solid rgba(255,255,255,0.8)',\r\n                    height: 64,\r\n                    width: 64,\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    zIndex: 2,\r\n                  }}\r\n                >\r\n                  <Icon\r\n                    src={first?.icon || ''}\r\n                    shadow\r\n                    fill={'white'}\r\n                    size={52}\r\n                    style={{ zIndex: 2, position: 'relative' }}\r\n                  />\r\n                </FlexContainer>\r\n              )}\r\n              <FlexContainer\r\n                $direction='column'\r\n                style={{\r\n                  position: 'absolute',\r\n                  background: 'rgba(255,255,255,0.8)',\r\n                  color: '#111',\r\n                  zIndex: 2,\r\n                  width: 120,\r\n                  top: 16,\r\n                  paddingLeft: 4,\r\n                  right: '-124px',\r\n                }}\r\n              >\r\n                {first && <span>{first.name}'s Turn</span>}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n            <FlexContainer $full $direction='column'>\r\n              <FullContainer />\r\n              <FlexContainer $full style={{ position: 'relative' }}>\r\n                {characters\r\n                  .filter((c) => c.id !== first?.id && c.health > 0)\r\n                  .map((c, i) => (\r\n                    <div\r\n                      key={`${c?.id}-${i}`}\r\n                      style={{\r\n                        height: size - 10,\r\n                        width: size - 7,\r\n                        position: 'absolute',\r\n                        bottom: '0px',\r\n                        right: `calc(${queue[c.id] * widthCoef}% - ${\r\n                          size - 6\r\n                        }px)`,\r\n                        transition: 'all 0.3s',\r\n                      }}\r\n                    >\r\n                      {c.partyId === PLAYER_PARTY_ID ? (\r\n                        <img\r\n                          alt={`${queue[c?.id || '']}`}\r\n                          height={size}\r\n                          width={size}\r\n                          src={`https://picsum.photos/seed/${c?.name}/115/115`}\r\n                          style={{\r\n                            height: size - 10,\r\n                            width: size - 7,\r\n                            border: `1px solid ${\r\n                              c.partyId === PLAYER_PARTY_ID\r\n                                ? 'lightblue'\r\n                                : 'lightsalmon'\r\n                            }`,\r\n                            borderBottom: 'none',\r\n                          }}\r\n                        />\r\n                      ) : (\r\n                        <FlexContainer\r\n                          style={{\r\n                            background: 'lightsalmon',\r\n                            border: '2px solid rgba(255,255,255,0.8)',\r\n                            height: size - 10,\r\n                            width: size - 7,\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                          }}\r\n                        >\r\n                          <Icon\r\n                            src={c.icon || ''}\r\n                            shadow\r\n                            fill={'white'}\r\n                            size={size - 13}\r\n                            style={{ zIndex: 1, position: 'relative' }}\r\n                          />\r\n                        </FlexContainer>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        )}\r\n      </>\r\n    </AppHeader>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { tCharacter } from '../../game/Character/type'\r\n\r\nexport const Span = (color: string, text: JSX.Element | string) => (\r\n  <span style={{ color, fontWeight: 'bold' }}>{text}</span>\r\n)\r\nexport const SkillSpan = (skill: tSkill) => Span('plum', skill.name)\r\n\r\nexport const NameSpanBuilder = (party: tParty, enemyParty: tParty) => (\r\n  character: tCharacter,\r\n) => {\r\n  const isUserParty = character.partyId === party.id\r\n  const isEnemyParty = character.partyId === enemyParty.id\r\n  const color = isUserParty\r\n    ? 'lightgreen'\r\n    : isEnemyParty\r\n    ? 'lightsalmon'\r\n    : 'white'\r\n\r\n  return Span(color, character.name)\r\n}\r\n","import React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport { useCombatContext } from '../CombatContext'\r\nimport { Monospace } from '../../elements/monospace'\r\nimport { NameSpanBuilder, SkillSpan, Span } from './util'\r\nimport { noneg } from '../../util'\r\nimport { getDamageResistance } from '../../game/Character/util'\r\nimport { STATUS_CONFIG } from '../../game/Status/constants'\r\n\r\nexport interface CombatLogContextT {\r\n  combatLog: JSX.Element[]\r\n  clear: () => void\r\n}\r\nconst defualtValue: CombatLogContextT = {\r\n  combatLog: [],\r\n  clear: () => {},\r\n}\r\nexport const CombatLogContext = createContext<CombatLogContextT>(defualtValue)\r\nexport const useCombatLogContext = () => useContext(CombatLogContext)\r\n\r\ntype DeadLogT = Record<string, boolean | undefined>\r\n\r\nexport interface CombatLogContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const CombatLogContextProvider = (\r\n  props: CombatLogContextProviderPropsT,\r\n) => {\r\n  const { children } = props\r\n  const { activeRound, roundResults, enemyParty, party } = useCombatContext()\r\n  const [combatLog, setCombatLog] = useState<JSX.Element[]>([])\r\n  const clear = () => setCombatLog([])\r\n  const [deadLog, setDeadLog] = useState<DeadLogT>({})\r\n  const NameSpan = NameSpanBuilder(party, enemyParty)\r\n  const log = (line: JSX.Element) =>\r\n    setCombatLog((log) => [\r\n      ...log,\r\n      <Monospace style={{ display: 'inline-block', fontWeight: 'normal' }}>\r\n        {line}\r\n      </Monospace>,\r\n    ])\r\n\r\n  useEffect(() => {\r\n    const characters = [...enemyParty.characters, ...party.characters]\r\n    setTimeout(() => {\r\n      characters.forEach((character) => {\r\n        if (character.health <= 0 && !deadLog[character.id]) {\r\n          setDeadLog((dLog) => ({ ...dLog, [character.id]: true }))\r\n          log(<span>{Span('lightcoral', `${character.name} died.`)}</span>)\r\n        }\r\n      })\r\n    }, 5)\r\n  }, [enemyParty, party])\r\n\r\n  useEffect(() => {\r\n    if (activeRound && activeRound) {\r\n      log(\r\n        <span>\r\n          {NameSpan(activeRound.sourceResult.source)} uses{' '}\r\n          {SkillSpan(activeRound.sourceResult.skill)}.\r\n        </span>,\r\n      )\r\n    }\r\n  }, [activeRound])\r\n\r\n  useEffect(() => {\r\n    if (roundResults.length === 0) return\r\n    const latestRounds = roundResults[roundResults.length - 1]\r\n    const baseRound = latestRounds.sourceResult\r\n    if (!baseRound) return\r\n\r\n    if (baseRound.skill.damage && baseRound.passedCount === 0) {\r\n      log(<span>{baseRound.source.name}'s attack missed.</span>)\r\n    }\r\n    if (!baseRound.skill.damage && !baseRound.perfect) {\r\n      log(<span>{SkillSpan(baseRound.skill)} failed.</span>)\r\n    }\r\n    if (baseRound.criticalHitSuccess) {\r\n      log(<span>{Span('gold', 'Critical Hit!')}</span>)\r\n    }\r\n    if (baseRound.perfect && baseRound.rollResults.length > 0) {\r\n      log(<span>{Span('gold', 'Perfect!')}</span>)\r\n    }\r\n    latestRounds.targetResults.forEach((round) => {\r\n      const targetParty = party.id === round.source.partyId ? enemyParty : party\r\n      if (round.passedCount > 0) {\r\n        if (round.dodgeSuccess) {\r\n          log(<span>{NameSpan(round.target)} dodged the attack.</span>)\r\n        } else if (round.totalDamage.value > 0) {\r\n          log(\r\n            <span>\r\n              {SkillSpan(round.skill)} deals{' '}\r\n              {Span('white', `${round.loggedDamgge.value} damage`)} to{' '}\r\n              {NameSpan(round.target)}.\r\n            </span>,\r\n          )\r\n        } else if (round.skill.damage) {\r\n          log(\r\n            <span>\r\n              {SkillSpan(round.skill)} did no damage to {NameSpan(round.target)}\r\n              .\r\n            </span>,\r\n          )\r\n        }\r\n        if (round.splashDamage.value > 0) {\r\n          targetParty.characters\r\n            .filter((c) => c.id !== round.target.id && c.health > 0)\r\n            .forEach((subTarget) => {\r\n              const splashDamageResistance = getDamageResistance(\r\n                subTarget,\r\n                round.splashDamage,\r\n              )\r\n              log(\r\n                <span>\r\n                  {SkillSpan(round.skill)} deals{' '}\r\n                  {Span(\r\n                    'white',\r\n                    `${\r\n                      round.splashDamage.value - splashDamageResistance\r\n                    } splash damage`,\r\n                  )}{' '}\r\n                  to {NameSpan(subTarget)}.\r\n                </span>,\r\n              )\r\n            })\r\n        }\r\n\r\n        if (round.reflectedDamage.value > 0) {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} reflected{' '}\r\n              {Span('white', `${round.reflectedDamage.value} damage`)}\r\n            </span>,\r\n          )\r\n        }\r\n\r\n        /* TODO\r\n        if (round.healing > 0) {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} gained{' '}\r\n              {Span('white', `${round.healing} HP`)} from{' '}\r\n              {SkillSpan(round.skill)}\r\n            </span>,\r\n          )\r\n        }\r\n        */\r\n\r\n        round.addedStatus.forEach((status) => {\r\n          const statusConfig = STATUS_CONFIG[status]\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} became {status}\r\n              {statusConfig.duration > 0\r\n                ? ` (${statusConfig.duration} turns)`\r\n                : ''}\r\n              .\r\n            </span>,\r\n          )\r\n        })\r\n      }\r\n    })\r\n  }, [roundResults.length])\r\n\r\n  return (\r\n    <CombatLogContext.Provider value={{ combatLog, clear }}>\r\n      {children}\r\n    </CombatLogContext.Provider>\r\n  )\r\n}\r\n","import React, { useRef, useEffect, useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { useCombatLogContext } from '../../contexts/CombatLogContext'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport { Button } from '../../elements/button'\r\n\r\nexport const CombatLog = () => {\r\n  const { combatLog } = useCombatLogContext()\r\n  const scrollRef = useRef<HTMLDivElement>(null)\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n  useEffect(() => {\r\n    if (scrollRef.current && isExpanded) {\r\n      scrollRef.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n  }, [combatLog])\r\n  const style = useSpring({\r\n    minHeight: isExpanded ? 263 : 0,\r\n    maxHeight: isExpanded ? 263 : 0,\r\n  })\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{\r\n        minWidth: 300,\r\n        overflow: 'auto',\r\n        background: 'rgba(0,0,0,0.7)',\r\n        fontSize: 12,\r\n        color: 'rgba(255,255,255,0.8)',\r\n      }}\r\n    >\r\n      <FlexContainer\r\n        style={{\r\n          background: '#111',\r\n          padding: 8,\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <FullContainer>Combat Log</FullContainer>\r\n        <Button\r\n          onClick={() => setIsExpanded((v) => !v)}\r\n          style={{ padding: '2px 8px' }}\r\n        >\r\n          {isExpanded ? '_' : '+'}\r\n        </Button>\r\n      </FlexContainer>\r\n      <animated.div\r\n        style={{\r\n          display: 'flex',\r\n          overflow: 'auto',\r\n          ...style,\r\n        }}\r\n      >\r\n        <FlexContainer $direction='column' style={{ padding: 8 }}>\r\n          {combatLog.map((line, i) => (\r\n            <span key={i}>{line}</span>\r\n          ))}\r\n        </FlexContainer>\r\n        <div ref={scrollRef} />\r\n      </animated.div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\n\r\nexport interface UIContextT {\r\n  playerCanEquipItem: boolean\r\n  openCharacterInventoryId: string | undefined\r\n  onCharacterConsumableClick: (\r\n    c: tProcessedCharacter,\r\n    index: number,\r\n    item: tConsumable,\r\n  ) => void\r\n  setPlayerCanEquipItem: (v: boolean) => void\r\n  setOpenCharacterInventoryId: (id: string | undefined) => void\r\n  setOnCharacterConsumableClick: (\r\n    fn: (c: tProcessedCharacter, index: number, item: tConsumable) => void,\r\n  ) => void\r\n}\r\n\r\nconst defaultValue: UIContextT = {\r\n  playerCanEquipItem: false,\r\n  openCharacterInventoryId: undefined,\r\n  onCharacterConsumableClick: (c, i, item) => {},\r\n  setPlayerCanEquipItem: (v) => {},\r\n  setOpenCharacterInventoryId: (id) => {},\r\n  setOnCharacterConsumableClick: (fn) => {},\r\n}\r\n\r\nexport const UIContext = React.createContext<UIContextT>(defaultValue)\r\nexport const useUIContext = () => useContext(UIContext)\r\n\r\nexport interface UIContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const UIContextProvider = (props: UIContextProviderPropsT) => {\r\n  const { children } = props\r\n  const [playerCanEquipItem, setPlayerCanEquipItem] = useState(false)\r\n  const [openCharacterInventoryId, setOpenCharacterInventoryId] = useState<\r\n    string | undefined\r\n  >()\r\n  const [onCharacterConsumableClick, _setOnCharacterConsumableClick] = useState<\r\n    (c: tProcessedCharacter, i: number, item: tConsumable) => void\r\n  >((c, i, item) => {})\r\n\r\n  const setOnCharacterConsumableClick = (\r\n    fn: (c: tProcessedCharacter, index: number, item: tConsumable) => void,\r\n  ) => {\r\n    _setOnCharacterConsumableClick(() => fn)\r\n  }\r\n  return (\r\n    <UIContext.Provider\r\n      value={{\r\n        playerCanEquipItem,\r\n        openCharacterInventoryId,\r\n        onCharacterConsumableClick,\r\n        setPlayerCanEquipItem,\r\n        setOpenCharacterInventoryId,\r\n        setOnCharacterConsumableClick,\r\n      }}\r\n    >\r\n      {children}\r\n    </UIContext.Provider>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { FlexContainer, FullContainer } from '../elements/flex'\r\nimport { RoundResultRenderer } from '../components/RoundResultRenderer'\r\nimport { CombatActions } from '../components/CombatActions'\r\nimport { CombatParty } from '../components/CombatParty'\r\nimport { CombatQueue } from '../components/CombatQueue'\r\nimport { CombatLog } from '../components/CombatLog'\r\nimport { useUIContext } from '../contexts/UIContext'\r\nimport { useCombatStart } from '../hooks/useCombatStart'\r\n\r\nexport const Combat = () => {\r\n  const {\r\n    enemyParty,\r\n    activeCharacter,\r\n    characters,\r\n    queue,\r\n    isRunning,\r\n    isRenderingResult,\r\n    onSkillSelect,\r\n  } = useCombatContext()\r\n\r\n  const { setOnCharacterConsumableClick } = useUIContext()\r\n  useCombatStart()\r\n  useEffect(() => {\r\n    setOnCharacterConsumableClick((c, index, item) => {\r\n      if (!c) return\r\n      if (c.id === activeCharacter.id) {\r\n        onSkillSelect(item.skill, index)\r\n      }\r\n    })\r\n  }, [onSkillSelect, activeCharacter])\r\n\r\n  return (\r\n    <FlexContainer $full style={{ height: '100%' }}>\r\n      <FlexContainer $full $direction='column'>\r\n        <CombatQueue queue={queue} characters={characters} />\r\n        <FlexContainer\r\n          $direction='column'\r\n          $full\r\n          style={{ padding: '30px 10px 0 10px' }}\r\n        >\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{ marginBottom: 40, minHeight: 90 }}\r\n          >\r\n            <CombatParty party={enemyParty} />\r\n          </FlexContainer>\r\n          <FlexContainer $full>\r\n            {isRunning && activeCharacter && (\r\n              <>\r\n                <FullContainer />\r\n                <FlexContainer $direction='column'>\r\n                  <div style={{ marginTop: 40 }}>\r\n                    {!isRenderingResult && <CombatActions />}\r\n                    <RoundResultRenderer isModal={false} />\r\n                  </div>\r\n                  <FullContainer />\r\n                </FlexContainer>\r\n                <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n                  <FlexContainer\r\n                    $direction='column'\r\n                    // style={{ justifyContent: 'center' }}\r\n                  >\r\n                    <CombatLog />\r\n                  </FlexContainer>\r\n                </FlexContainer>\r\n              </>\r\n            )}\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useModalContext } from '../contexts/ModalContext'\r\nimport { useCombatLogContext } from '../contexts/CombatLogContext'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { FlexContainer } from '../elements/flex'\r\nimport { Icon } from '../components/Icon'\r\n\r\nexport const useCombatStart = (delay: number = 1000) => {\r\n  const { open, close } = useModalContext()\r\n  const { clear } = useCombatLogContext()\r\n  const { enemyParty, start, reset } = useCombatContext()\r\n  useEffect(() => {\r\n    clear()\r\n    open(\r\n      <div style={{ textAlign: 'center' }}>\r\n        <h1>Combat Start!</h1>\r\n        <FlexContainer\r\n          style={{ justifyContent: 'space-around', marginBottom: 40 }}\r\n        >\r\n          {enemyParty.characters.map((c) => (\r\n            <FlexContainer\r\n              style={{\r\n                background: 'lightsalmon',\r\n                border: '2px solid rgba(255,255,255,0.8)',\r\n                height: 60,\r\n                width: 60,\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              <Icon\r\n                src={c.icon || ''}\r\n                shadow\r\n                fill={'white'}\r\n                size={60}\r\n                style={{ zIndex: 1, position: 'relative' }}\r\n              />\r\n            </FlexContainer>\r\n          ))}\r\n        </FlexContainer>\r\n      </div>,\r\n    )\r\n    setTimeout(() => {\r\n      close()\r\n      start()\r\n    }, 1500)\r\n    return () => {\r\n      reset()\r\n      clear()\r\n    }\r\n  }, [])\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Route, useHistory } from 'react-router-dom'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport { useModalContext } from '../contexts/ModalContext'\r\n\r\nexport const makeRoute = (path: string, Component: React.FC) => (\r\n  <Route path={`/JSFTK_combat${path}`}>\r\n    <Component />\r\n  </Route>\r\n)\r\n\r\nexport const RouteController = () => {\r\n  const { encounters, currentEncounter, level } = useGameStateContext()\r\n  const history = useHistory()\r\n  const { open } = useModalContext()\r\n  useEffect(() => {\r\n    if (level > encounters.length - 1) {\r\n      open(\r\n        <div>\r\n          <h1>You Win!!!!!!!!!!!</h1>\r\n        </div>,\r\n      )\r\n      history.push('/JSFTK_combat')\r\n    } else if (currentEncounter && currentEncounter.type === 'combat') {\r\n      history.push('/JSFTK_combat/combat')\r\n    } else if (!currentEncounter && level > 0) {\r\n      history.push('/JSFTK_combat/party')\r\n    }\r\n  }, [currentEncounter, level])\r\n  return null\r\n}\r\n","import React, { useState, CSSProperties } from 'react'\r\nimport { withStyle } from 'styletron-react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Button } from '../../elements/button'\r\nimport { tShopEncounter } from '../../game/Encounter/type'\r\nimport { WeaponPreview } from '../WeaponPreview'\r\nimport { ArmorPreview } from '../ArmorPreview'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\n\r\nconst CardList = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  }\r\n})\r\n\r\ninterface ShopTabT {\r\n  key: string\r\n  label: string\r\n  render: (encounter: tShopEncounter) => JSX.Element\r\n}\r\nconst tabs: ShopTabT[] = [\r\n  {\r\n    key: 'all',\r\n    label: 'All',\r\n    render: (encounter: tShopEncounter) => (\r\n      <FlexContainer $direction='column'>\r\n        {[\r\n          ...encounter.weapons,\r\n          ...encounter.consumables,\r\n          ...encounter.armor,\r\n        ].map((i) => (\r\n          <FlexContainer style={{ color: ITEM_RARITY_COLORS[i.rarity] }}>\r\n            {i.name}\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n    ),\r\n  },\r\n  {\r\n    key: 'weapons',\r\n    label: 'Weaons',\r\n    render: (encounter: tShopEncounter) => (\r\n      <CardList>\r\n        {encounter.weapons.map((w) => (\r\n          <WeaponPreview weapon={w} showBuyButton={true} />\r\n        ))}\r\n      </CardList>\r\n    ),\r\n  },\r\n  {\r\n    key: 'armor',\r\n    label: 'Armor',\r\n    render: (encounter: tShopEncounter) => (\r\n      <CardList>\r\n        {encounter.armor.map((a) => (\r\n          <ArmorPreview armor={a} showBuyButton={true} />\r\n        ))}\r\n      </CardList>\r\n    ),\r\n  },\r\n  {\r\n    key: 'consumables',\r\n    label: 'Consumables',\r\n    render: (encounter: tShopEncounter) => <span>Consumables</span>,\r\n  },\r\n]\r\n\r\nexport interface ShopPropsT {}\r\nexport const Shop = (props: ShopPropsT) => {\r\n  const {} = props\r\n  const { currentEncounter } = useGameStateContext()\r\n  const [activeTab, setActiveTab] = useState(\r\n    tabs.find((t) => t.key === 'all') as ShopTabT,\r\n  )\r\n  const active = (tab: ShopTabT): CSSProperties =>\r\n    tab.key === activeTab.key\r\n      ? {\r\n          borderColor: 'white',\r\n        }\r\n      : {}\r\n  console.log(currentEncounter)\r\n  return (\r\n    <BoxContainer\r\n      style={{ margin: '20px 20px 20px 0', flex: 1 }}\r\n      substyle={{ background: '#111' }}\r\n    >\r\n      <FlexContainer style={{ alignItems: 'center' }}>\r\n        <FullContainer>\r\n          <h1 style={{ margin: 0 }}>Shop</h1>\r\n        </FullContainer>\r\n        <FlexContainer>\r\n          {tabs.map((tab) => (\r\n            <Button style={active(tab)} onClick={() => setActiveTab(tab)}>\r\n              {tab.label}\r\n            </Button>\r\n          ))}\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n      <FlexContainer\r\n        $direction='column'\r\n        $full\r\n        style={{\r\n          overflow: 'auto',\r\n          marginTop: 10,\r\n          height: 'calc(100vh - 374px)',\r\n          overflowY: 'auto',\r\n        }}\r\n      >\r\n        {activeTab.render(currentEncounter as tShopEncounter)}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { usePartyContext } from '../contexts/PartyContext'\r\nimport { FlexContainer, FullContainer } from '../elements/flex'\r\nimport { Button } from '../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { AppHeader } from '../components/AppHeader'\r\nimport { PartyResources } from '../components/PartyResources'\r\nimport { useUIContext } from '../contexts/UIContext'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport { BoxContainer } from '../elements/box'\r\nimport { getSkillResult } from '../game/Skill/util'\r\nimport { commitSkillResults } from '../game/Skill/committer'\r\nimport { Shop } from '../components/Shop'\r\n\r\nexport const Party = () => {\r\n  const { party, rawParty, updateParty } = usePartyContext()\r\n  const {\r\n    currentEncounter,\r\n    currentChoice,\r\n    level,\r\n    chooseCurrent,\r\n    nextLevel,\r\n  } = useGameStateContext()\r\n  const history = useHistory()\r\n  const {\r\n    setPlayerCanEquipItem,\r\n    setOnCharacterConsumableClick,\r\n  } = useUIContext()\r\n\r\n  useEffect(() => {\r\n    setPlayerCanEquipItem(true)\r\n    setOnCharacterConsumableClick((character, consumableIndex) => {\r\n      if (!character) return\r\n      const consumable = character.consumables[consumableIndex]\r\n      const targets =\r\n        consumable.skill.targetType === 'self'\r\n          ? [character]\r\n          : consumable.skill.targetType === 'party'\r\n          ? party.characters\r\n          : []\r\n      const result = getSkillResult(character, targets, consumable.skill)\r\n      const parties = commitSkillResults(rawParty, rawParty, {})(result)\r\n      updateParty(parties.playerParty)\r\n    })\r\n    return () => {\r\n      setPlayerCanEquipItem(false)\r\n      setOnCharacterConsumableClick((c, i, item) => {})\r\n    }\r\n  }, [party, rawParty, updateParty])\r\n\r\n  return (\r\n    <FlexContainer $full $direction='column' style={{ height: '100%' }}>\r\n      <AppHeader\r\n        left={\r\n          <>\r\n            {/*<RedButton onClick={enterCombat}>Enter Combat</RedButton>*/}\r\n            <Button onClick={() => history.push('/JSFTK_combat')}>\r\n              Restart\r\n            </Button>\r\n            <FullContainer />\r\n          </>\r\n        }\r\n        right={\r\n          <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n            <PartyResources />\r\n          </FlexContainer>\r\n        }\r\n      >\r\n        <FlexContainer\r\n          $full\r\n          style={{\r\n            color: 'white',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          Level {level}\r\n        </FlexContainer>\r\n      </AppHeader>\r\n      <FlexContainer $full $direction='column'>\r\n        <FlexContainer $full>\r\n          <FlexContainer\r\n            $direction='column'\r\n            $full\r\n            style={{ marginLeft: '10%' }}\r\n          >\r\n            {currentEncounter && currentEncounter.type === 'shop' && <Shop />}\r\n          </FlexContainer>\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              background:\r\n                'linear-gradient(0deg, rgba(0,0,0,0) 0%, rgba(8,8,8,0.6811099439775911) 10%, rgba(17,17,17,1) 35%)',\r\n              marginRight: '10%',\r\n              padding: '16px 8px',\r\n              width: 300,\r\n            }}\r\n          >\r\n            {currentChoice && !currentEncounter && (\r\n              <FlexContainer $direction='column'>\r\n                <h3\r\n                  style={{\r\n                    margin: '0 0 16px 0',\r\n                    color: 'white',\r\n                    textAlign: 'center',\r\n                  }}\r\n                >\r\n                  You have a choice.\r\n                </h3>\r\n                <span\r\n                  style={{ color: 'rgba(255,255,255,0.7)', marginBottom: 24 }}\r\n                >\r\n                  You arrive at a split path, you must make a choice on which\r\n                  way to proceed.\r\n                </span>\r\n                <FlexContainer style={{ justifyContent: 'center' }}>\r\n                  <Button onClick={() => chooseCurrent('left')}>Go Left</Button>\r\n                  <Button onClick={() => chooseCurrent('right')}>\r\n                    Go Right\r\n                  </Button>\r\n                </FlexContainer>\r\n              </FlexContainer>\r\n            )}\r\n            {currentEncounter && (\r\n              <FlexContainer\r\n                $direction='column'\r\n                style={{ justifyContent: 'center' }}\r\n              >\r\n                {currentEncounter.type === 'shop' && (\r\n                  <>\r\n                    <h3\r\n                      style={{\r\n                        margin: '0 0 16px 0',\r\n                        color: 'white',\r\n                        textAlign: 'center',\r\n                      }}\r\n                    >\r\n                      You found a shop!\r\n                    </h3>\r\n                    <span\r\n                      style={{\r\n                        color: 'rgba(255,255,255,0.7)',\r\n                        marginBottom: 24,\r\n                      }}\r\n                    >\r\n                      Amidst your journey, you discover a merchant, a traveling\r\n                      salemen with all manor of wares to assist in your\r\n                      adventure.\r\n                    </span>\r\n                  </>\r\n                )}\r\n                <FlexContainer style={{ justifyContent: 'center' }}>\r\n                  <Button onClick={() => nextLevel()}>Travel Deeper</Button>\r\n                </FlexContainer>\r\n              </FlexContainer>\r\n            )}\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { FullContainer, FlexContainer } from '../elements/flex'\r\nimport { BoxContainer } from '../elements/box'\r\nimport { usePartyContext } from '../contexts/PartyContext'\r\nimport { Gauge } from '../components/Gauge'\r\nimport { RedButton } from '../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { INITIAL_STATE } from '../state/party'\r\nimport { Monospace } from '../elements/monospace'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport {\r\n  tProcessedCharacter,\r\n  tCharacter,\r\n  tCharacterClass,\r\n} from '../game/Character/type'\r\nimport { makeCharacter } from '../game/Character/util'\r\nimport { STAT_BONUS_KEYS } from '../game/Stats/constants'\r\n\r\nexport const Start = () => {\r\n  const {\r\n    party,\r\n    updateParty,\r\n    upsertCharacter,\r\n    findRawCharacter,\r\n  } = usePartyContext()\r\n  const history = useHistory()\r\n  const { reset } = useGameStateContext()\r\n  useEffect(() => {\r\n    updateParty(INITIAL_STATE)\r\n    reset()\r\n  }, [])\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{ height: '100%', overflow: 'hidden' }}\r\n    >\r\n      <FullContainer />\r\n      <FlexContainer $full>\r\n        <FullContainer />\r\n        <BoxContainer>\r\n          <h1\r\n            style={{ marginTop: 0, textAlign: 'center', fontFamily: 'Bangers' }}\r\n          >\r\n            Choose your Party!\r\n          </h1>\r\n          <FlexContainer>\r\n            {party.characters.map((character) => (\r\n              <BoxContainer\r\n                key={character.id}\r\n                substyle={{ background: '#111' }}\r\n              >\r\n                <StartCharacterCard\r\n                  character={character}\r\n                  onChange={(characterId, updater) => {\r\n                    const rc = findRawCharacter(characterId)\r\n                    if (rc) {\r\n                      upsertCharacter(updater(rc))\r\n                    }\r\n                  }}\r\n                />\r\n              </BoxContainer>\r\n            ))}\r\n          </FlexContainer>\r\n          <FlexContainer>\r\n            <FullContainer />\r\n            <RedButton\r\n              style={{ marginTop: 16 }}\r\n              onClick={() => {\r\n                history.push('/JSFTK_combat/party')\r\n              }}\r\n            >\r\n              Begin Adventure\r\n            </RedButton>\r\n            <FullContainer />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        <FullContainer />\r\n      </FlexContainer>\r\n      <FullContainer />\r\n      <Monospace\r\n        style={{\r\n          fontWeight: 'normal',\r\n          color: 'rgba(255,255,255,0.5)',\r\n          fontSize: 12,\r\n        }}\r\n      >\r\n        pre-pre-pre-pre alpha v0.0.1.13\r\n      </Monospace>\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface StartCharacterCardPropsT {\r\n  character: tProcessedCharacter\r\n  onChange: (\r\n    characterId: string,\r\n    updater: (c: tCharacter) => tCharacter,\r\n  ) => void\r\n}\r\nexport const StartCharacterCard = (props: StartCharacterCardPropsT) => {\r\n  const { character, onChange } = props\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <input\r\n        style={{\r\n          background: '#333',\r\n          border: '1px solid rgba(255,255,255,0.4)',\r\n          padding: 8,\r\n          color: 'white',\r\n          marginBottom: 8,\r\n        }}\r\n        value={character.name}\r\n        onChange={(e) => {\r\n          onChange(character.id, (c) => ({\r\n            ...c,\r\n            name: e.target.value,\r\n          }))\r\n        }}\r\n      />\r\n      <select\r\n        style={{\r\n          background: '#333',\r\n          border: '1px solid rgba(255,255,255,0.4)',\r\n          padding: 8,\r\n          color: 'white',\r\n          marginBottom: 8,\r\n        }}\r\n        value={character.class}\r\n        onChange={(e) => {\r\n          onChange(character.id, (c) => ({\r\n            ...makeCharacter(e.target.value as tCharacterClass),\r\n            id: character.id,\r\n            name: character.name,\r\n          }))\r\n        }}\r\n      >\r\n        <option value='blacksmith'>blacksmith</option>\r\n        <option value='hunter'>hunter</option>\r\n        <option value='scholar'>scholar</option>\r\n        <option value='bard'>bard</option>\r\n      </select>\r\n      <BoxContainer>\r\n        {STAT_BONUS_KEYS.map((key) => (\r\n          <FlexContainer key={key} style={{ height: 20 }}>\r\n            <div\r\n              style={{ width: 60, fontSize: 12, textTransform: 'capitalize' }}\r\n            >\r\n              {key}\r\n            </div>\r\n            <FullContainer>\r\n              <Gauge\r\n                max={100}\r\n                value={character.stats[key]}\r\n                color='white'\r\n                height={15}\r\n              />\r\n            </FullContainer>\r\n          </FlexContainer>\r\n        ))}\r\n      </BoxContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { tCharacter } from '../../game/Character/type'\r\n\r\nexport interface CharacterImagePropsT {\r\n  character: tCharacter\r\n  size: number\r\n}\r\nexport const CharacterImage = (props: CharacterImagePropsT) => {\r\n  const { character, size } = props\r\n  return (\r\n    <img\r\n      alt='profile'\r\n      height={size}\r\n      width={size}\r\n      src={`https://picsum.photos/seed/${character.name}/94/94`}\r\n      style={{\r\n        height: size,\r\n        width: size,\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { CONSUMABLE_ITEM_ICONS, CONSUMABLE_ITEM_COLORS } from '../../icons/maps'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { considateConsumableListToStack } from '../../game/Consumable/util'\r\n\r\nconst HEIGHT = 70\r\nexport interface PartyCharacterConsumablesPropsT {\r\n  character: tProcessedCharacter\r\n  consumables: tConsumable[]\r\n  onClick?: (consumable: tConsumable, index: number) => void\r\n}\r\nexport const PartyCharacterConsumables = (\r\n  props: PartyCharacterConsumablesPropsT,\r\n) => {\r\n  const { character, consumables, onClick } = props\r\n  const stack = useMemo(() => considateConsumableListToStack(consumables), [\r\n    consumables,\r\n  ])\r\n  const onStackClick = (consumable: tConsumable) => {\r\n    let index = undefined\r\n    consumables.forEach((c, i) => {\r\n      if (c.id === consumable.id) index = i\r\n    })\r\n    if (consumable.skill.healing && !(character.healthOffset === 0))\r\n      return onClick && onClick(consumable, index || 0)\r\n  }\r\n  const filler = Array(10 - stack.length).fill(null)\r\n\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ flexWrap: 'wrap', height: HEIGHT }}\r\n    >\r\n      {stack.map((s) => (\r\n        <PartyCharacterConsumable\r\n          key={s.consumable.id}\r\n          character={character}\r\n          consumable={s.consumable}\r\n          count={s.count}\r\n          onClick={onStackClick}\r\n        />\r\n      ))}\r\n      {filler.map((f, i) => (\r\n        <ConsumableBox key={i} />\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\ninterface ConsumableBoxPropsT {\r\n  children?: JSX.Element\r\n  onClick?: () => void\r\n}\r\nconst ConsumableBox = (props: ConsumableBoxPropsT) => {\r\n  const { children, onClick } = props\r\n  return (\r\n    <FlexContainer\r\n      onClick={() => onClick && onClick()}\r\n      style={{\r\n        height: HEIGHT / 2,\r\n        width: HEIGHT / 2,\r\n        boxSizing: 'border-box',\r\n        border: '1px solid rgba(0,0,0,0.5)',\r\n        background: '#333',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        cursor: onClick ? 'pointer' : 'default',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      {children}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface PartyCharacterConsumablePropsT {\r\n  consumable: tConsumable\r\n  character: tProcessedCharacter\r\n  count: number\r\n  onClick?: (consumable: tConsumable) => void\r\n}\r\nexport const PartyCharacterConsumable = (\r\n  props: PartyCharacterConsumablePropsT,\r\n) => {\r\n  const { character, consumable, count, onClick } = props\r\n  return (\r\n    <HoverToolTip\r\n      content={\r\n        <PartyCharacterConsumableTooltip\r\n          character={character}\r\n          consumable={consumable}\r\n        />\r\n      }\r\n    >\r\n      <ConsumableBox onClick={() => onClick && onClick(consumable)}>\r\n        <>\r\n          <Icon\r\n            src={CONSUMABLE_ITEM_ICONS[consumable.cid]}\r\n            fill={CONSUMABLE_ITEM_COLORS[consumable.cid]}\r\n            size={24}\r\n          />\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: -2,\r\n              right: 1,\r\n            }}\r\n          >\r\n            {count}\r\n          </div>\r\n        </>\r\n      </ConsumableBox>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface PartyCharacterConsumableTooltipProps {\r\n  character: tProcessedCharacter\r\n  consumable: tConsumable\r\n}\r\nexport const PartyCharacterConsumableTooltip = (\r\n  props: PartyCharacterConsumableTooltipProps,\r\n) => {\r\n  const { character, consumable } = props\r\n  return (\r\n    <BoxContainer>\r\n      <strong>{consumable.name}</strong>\r\n      {consumable.skill.healing && (\r\n        <div>Heal for {character.stats.consumableHealthGainOffset} HP</div>\r\n      )}\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { withStyle } from 'styletron-react'\r\nimport { Monodiv } from '../../elements/monospace'\r\nimport { Icon } from '../Icon'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tStats, tBaseStats } from '../../game/Stats/type'\r\n\r\ninterface CharacterStatPropsT {\r\n  statKey: keyof tBaseStats\r\n  character: tProcessedCharacter\r\n}\r\nconst CharacterStat = (props: CharacterStatPropsT) => {\r\n  const { statKey, character } = props\r\n  return (\r\n    <ResourceE $color={getStatColor(character, statKey)}>\r\n      <Icon\r\n        src={STAT_ICONS[statKey] || ''}\r\n        fill={getStatColor(character, statKey)}\r\n        size={14}\r\n        style={{ marginRight: 4 }}\r\n      />\r\n      {character.stats[statKey]}\r\n    </ResourceE>\r\n  )\r\n}\r\n\r\nexport interface StatsProps {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Stats = (props: StatsProps) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer>\r\n      <CharacterStat statKey='strength' character={character} />\r\n      <CharacterStat statKey='vigor' character={character} />\r\n      <CharacterStat statKey='intelligence' character={character} />\r\n      <CharacterStat statKey='dexterity' character={character} />\r\n      <CharacterStat statKey='charisma' character={character} />\r\n      <CharacterStat statKey='agility' character={character} />\r\n      <CharacterStat statKey='luck' character={character} />\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nconst ResourceE = withStyle(Monodiv, (props: any) => ({\r\n  height: 15,\r\n  color: props.$color,\r\n  fontSize: '12px',\r\n  fontWeight: 'bolder',\r\n  padding: '0px 4px',\r\n  lineHeight: '15px',\r\n  flex: 1,\r\n  textAlign: 'center',\r\n  background: '#111',\r\n  display: 'flex',\r\n}))\r\n\r\nconst getStatColor = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n): string => {\r\n  const a = character.stats[key]\r\n  const b = character.rawStats[key]\r\n  if (a > b) return 'lightgreen'\r\n  if (b > a) return 'lightcoral'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\n\r\nexport interface NamePropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Name = (props: NamePropsT) => {\r\n  const { character } = props\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        marginTop: -3,\r\n        marginRight: -3,\r\n        padding: '0 4px',\r\n        paddingLeft: 8,\r\n        background: '#555',\r\n        height: 20,\r\n        lineHeight: '24px',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n        boxShadow: '0px 4px 5px black',\r\n        zIndex: 2,\r\n      }}\r\n    >\r\n      <FullContainer\r\n        style={{\r\n          fontFamily: 'Bangers',\r\n          letterSpacing: '1px',\r\n          textShadow: '0px 0px 2px black',\r\n          flex: 1,\r\n        }}\r\n      >\r\n        {character.name}\r\n      </FullContainer>\r\n      <div\r\n        style={{\r\n          fontSize: 12,\r\n          color: 'rgba(255,255,255,0.3)',\r\n        }}\r\n      >\r\n        {character.class}\r\n      </div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { tStats } from '../../game/Stats/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { STAT_BONUS_KEYS } from '../../game/Stats/constants'\r\n\r\nconst getStatColor = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tStats,\r\n): string => {\r\n  const a = character.stats[key]\r\n  const b = character.rawStats[key]\r\n  if (a === undefined || b === undefined) return 'rgba(255,255,255,0.6)'\r\n  if (a > b) return 'lightgreen'\r\n  if (b > a) return 'lightcoral'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n\r\nexport interface StatBarPropsT {\r\n  character: tProcessedCharacter\r\n}\r\nexport const StatBar = (props: StatBarPropsT) => {\r\n  const { character } = props\r\n\r\n  return (\r\n    <BoxContainer>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-between',\r\n          width: 360,\r\n          paddingTop: 10,\r\n          paddingBottom: 6,\r\n        }}\r\n      >\r\n        {STAT_BONUS_KEYS.map((key) => (\r\n          <FlexContainer\r\n            key={key}\r\n            style={{\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Icon\r\n              src={STAT_ICONS[key] || ''}\r\n              size={20}\r\n              fill={getStatColor(character, key)}\r\n              style={{ marginRight: 4 }}\r\n            />\r\n            <span style={{ color: getStatColor(character, key) }}>\r\n              {character.stats[key]}\r\n            </span>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { RESOURCE_ICONS } from '../../icons/maps'\r\nimport { styled } from 'styletron-react'\r\nimport { ClickToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Button } from '../../elements/button'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tArmor, tArmorResourceType } from '../../game/Armor/type'\r\nimport { CHARACTER_RESOURCES } from '../../game/Item/constants'\r\n\r\nconst ItemRow = styled(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    marginBottom: '4px',\r\n    textShadow: '1px 1px 1px black',\r\n    background:\r\n      'linear-gradient(90deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 100%)',\r\n    paddingLeft: '8px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n  }\r\n})\r\n\r\nexport interface ItemPropsT {\r\n  character: tProcessedCharacter\r\n  setActiveItem: (item: tWeapon | tArmor | undefined) => void\r\n}\r\nexport const Items = (props: ItemPropsT) => {\r\n  const { character, setActiveItem } = props\r\n  const { playerCanEquipItem } = useUIContext()\r\n  return (\r\n    <FlexContainer $full $direction='column'>\r\n      <ItemRow onMouseEnter={() => setActiveItem(character.weapon)}>\r\n        <Icon\r\n          src={RESOURCE_ICONS.weapon || ''}\r\n          size={16}\r\n          style={{ marginRight: 6 }}\r\n        />\r\n        {character.weapon.name}\r\n      </ItemRow>\r\n      {CHARACTER_RESOURCES.map((res) => (\r\n        <ArmorItem\r\n          character={character}\r\n          resource={res}\r\n          onHover={setActiveItem}\r\n          canUnequip={playerCanEquipItem}\r\n        />\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface ArmorItemProps {\r\n  character: tProcessedCharacter\r\n  resource: tArmorResourceType\r\n  canUnequip?: boolean\r\n  onHover: (item: tArmor | tWeapon | undefined) => void\r\n}\r\nexport const ArmorItem = (props: ArmorItemProps) => {\r\n  const { character, resource, canUnequip = true, onHover } = props\r\n  const { unequipItem } = usePartyContext()\r\n  const item = character.armor.find((a) => a.resource === resource)\r\n  return (\r\n    <ClickToolTip\r\n      direction='down'\r\n      distance={-2}\r\n      content={() => (\r\n        <>\r\n          {canUnequip && (\r\n            <BoxContainer\r\n              substyle={{\r\n                padding: 4,\r\n                width: 190,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                background: '#333',\r\n              }}\r\n            >\r\n              <Button\r\n                style={{ padding: '4px 8px' }}\r\n                onClick={() => {\r\n                  if (item) {\r\n                    unequipItem(character.id, item)\r\n                  }\r\n                }}\r\n              >\r\n                Unequip\r\n              </Button>\r\n              <Button style={{ padding: '4px 8px' }}>Cancel</Button>\r\n            </BoxContainer>\r\n          )}\r\n        </>\r\n      )}\r\n    >\r\n      {({ onClick, ref }) => (\r\n        <ItemRow\r\n          ref={ref}\r\n          onMouseEnter={() => onHover(item)}\r\n          onClick={() => item && onClick()}\r\n        >\r\n          <Icon\r\n            src={RESOURCE_ICONS[resource] || ''}\r\n            size={16}\r\n            style={{ marginRight: 6 }}\r\n          />\r\n          {item?.name}\r\n        </ItemRow>\r\n      )}\r\n    </ClickToolTip>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\n\r\nexport interface NamePropsT {\r\n  name: string\r\n}\r\n\r\nexport const Name = (props: NamePropsT) => {\r\n  const { name } = props\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        width: '100%',\r\n        height: 40,\r\n        marginBottom: -20,\r\n        marginTop: -20,\r\n      }}\r\n    >\r\n      <FullContainer />\r\n      <BoxContainer style={{ zIndex: 2 }} substyle={{ background: '#444' }}>\r\n        {name}\r\n      </BoxContainer>\r\n      <FullContainer />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { CharacterImage } from '../CharacterImage'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\n\r\nconst SIZE = 100\r\nexport interface ImagePropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Image = (props: ImagePropsT) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n      <div>\r\n        <BoxContainer\r\n          style={{ marginRight: 20, marginBottom: 10 }}\r\n          substyle={{ padding: 0, height: SIZE, width: SIZE }}\r\n        >\r\n          <CharacterImage character={character} size={100} />\r\n        </BoxContainer>\r\n      </div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { withStyle } from 'styletron-react'\r\nimport { Icon } from '../Icon'\r\nimport { ARMOR_TYPE_ICONS } from '../../icons/maps'\r\nimport { ClickToolTip } from '../Tooltip'\r\nimport { Button } from '../../elements/button'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\n\r\nexport interface ArmorListPropsT {\r\n  party: tProcessedParty\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n  equipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n  setActiveItem: (item: tWeapon | tArmor) => void\r\n}\r\n\r\nconst ArmorItem = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    marginBottom: '4px',\r\n    textShadow: '1px 1px 1px black',\r\n    background: props.$active ? 'rgba(255,255,255,0.2)' : undefined,\r\n    paddingLeft: '8px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    cursor: 'pointer',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n  }\r\n})\r\n\r\nexport const ArmorList = (props: ArmorListPropsT) => {\r\n  const { party, character, canEquip, equipItem, setActiveItem } = props\r\n  const [activeItemId, setActiveItemId] = useState<string | undefined>()\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {party.items\r\n        .filter((i) => i.itemType === 'armor')\r\n        .map((i) => i as tArmor)\r\n        .sort((a, b) => a.name.localeCompare(b.name))\r\n        .map((armor) => (\r\n          <ClickToolTip\r\n            direction='down'\r\n            distance={-2}\r\n            content={() => (\r\n              <>\r\n                {canEquip && (\r\n                  <BoxContainer\r\n                    substyle={{\r\n                      padding: 4,\r\n                      width: 346,\r\n                      display: 'flex',\r\n                      justifyContent: 'center',\r\n                      background: '#333',\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      style={{ padding: '4px 8px' }}\r\n                      onClick={() => {\r\n                        equipItem(character.id, armor)\r\n                        setActiveItemId(undefined)\r\n                      }}\r\n                    >\r\n                      Equip\r\n                    </Button>\r\n                    <Button\r\n                      style={{ padding: '4px 8px' }}\r\n                      onClick={() => {\r\n                        setActiveItemId(undefined)\r\n                      }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </BoxContainer>\r\n                )}\r\n              </>\r\n            )}\r\n          >\r\n            {({ onClick, ref }) => (\r\n              <ArmorItem\r\n                $active={armor.id === activeItemId}\r\n                onMouseEnter={() => setActiveItem(armor)}\r\n                ref={ref}\r\n                onClick={(e: MouseEvent) => {\r\n                  e.stopPropagation()\r\n                  e.preventDefault()\r\n                  setActiveItemId(armor.id)\r\n                  onClick()\r\n                }}\r\n              >\r\n                <Icon\r\n                  src={ARMOR_TYPE_ICONS[armor.type]}\r\n                  size={14}\r\n                  style={{ marginRight: 10 }}\r\n                  fill={ITEM_RARITY_COLORS[armor.rarity]}\r\n                  shadow\r\n                />\r\n                <span style={{ color: ITEM_RARITY_COLORS[armor.rarity] }}>\r\n                  {armor.name}\r\n                </span>\r\n              </ArmorItem>\r\n            )}\r\n          </ClickToolTip>\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { withStyle } from 'styletron-react'\r\nimport { ClickToolTip } from '../Tooltip'\r\nimport { Button } from '../../elements/button'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\n\r\nexport interface WeaponListPropsT {\r\n  party: tProcessedParty\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n  equipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n  setActiveItem: (item: tWeapon | tArmor) => void\r\n}\r\n\r\nconst WeaponItem = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    marginBottom: '4px',\r\n    textShadow: '1px 1px 1px black',\r\n    background: props.$active ? 'rgba(255,255,255,0.2)' : undefined,\r\n    paddingLeft: '8px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    cursor: 'pointer',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n  }\r\n})\r\n\r\nexport const WeaponList = (props: WeaponListPropsT) => {\r\n  const { party, character, canEquip, equipItem, setActiveItem } = props\r\n  const [activeItemId, setActiveItemId] = useState<string | undefined>()\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {party.items\r\n        .filter((i) => i.itemType === 'weapon')\r\n        .map((i) => i as tArmor)\r\n        .sort((a, b) => a.name.localeCompare(b.name))\r\n        .map((weapon) => (\r\n          <ClickToolTip\r\n            direction='down'\r\n            distance={-2}\r\n            content={() => (\r\n              <>\r\n                {canEquip && (\r\n                  <BoxContainer\r\n                    substyle={{\r\n                      padding: 4,\r\n                      width: 346,\r\n                      display: 'flex',\r\n                      justifyContent: 'center',\r\n                      background: '#333',\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      style={{ padding: '4px 8px' }}\r\n                      onClick={() => {\r\n                        equipItem(character.id, weapon)\r\n                        setActiveItemId(undefined)\r\n                      }}\r\n                    >\r\n                      Equip\r\n                    </Button>\r\n                  </BoxContainer>\r\n                )}\r\n              </>\r\n            )}\r\n          >\r\n            {({ onClick, ref }) => (\r\n              <WeaponItem\r\n                $active={weapon.id === activeItemId}\r\n                onMouseEnter={() => setActiveItem(weapon)}\r\n                ref={ref}\r\n                onClick={(e: MouseEvent) => {\r\n                  e.stopPropagation()\r\n                  e.preventDefault()\r\n                  setActiveItemId(weapon.id)\r\n                  onClick()\r\n                }}\r\n              >\r\n                <span style={{ color: ITEM_RARITY_COLORS[weapon.rarity] }}>\r\n                  {weapon.name}\r\n                </span>\r\n              </WeaponItem>\r\n            )}\r\n          </ClickToolTip>\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport Items from '../../icons/svg/delapouite/light-backpack.svg'\r\nimport Weapons from '../../icons/svg/lorc/broadsword.svg'\r\nimport Armor from '../../icons/svg/delapouite/leather-armor.svg'\r\nimport { Icon } from '../Icon'\r\nimport { ArmorList } from './ArmorList'\r\nimport { WeaponList } from './WeaponList'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\n\r\nexport interface MenuOptionT {\r\n  key: string\r\n  icon: string\r\n  count: (character: tProcessedCharacter, party: tProcessedParty) => number\r\n  render: (\r\n    character: tProcessedCharacter,\r\n    party: tProcessedParty,\r\n    canEquip: boolean,\r\n    equipItem: (characterId: string, item: tWeapon | tArmor) => void,\r\n    setActiveItem: (item: tWeapon | tArmor) => void,\r\n  ) => JSX.Element\r\n}\r\nexport const ACTIVE_CHARACTER_MENU_KEYS: MenuOptionT[] = [\r\n  {\r\n    key: 'items',\r\n    icon: Items,\r\n    count: (c) => c.consumables.length,\r\n    render: (character) => <div>items</div>,\r\n  },\r\n  {\r\n    key: 'weapons',\r\n    icon: Weapons,\r\n    count: (c, p) => p.items.filter((i) => i.itemType === 'weapon').length,\r\n    render: (character, party, canEquip, equipItem, setActiveItem) => (\r\n      <WeaponList\r\n        character={character}\r\n        party={party}\r\n        canEquip={canEquip}\r\n        equipItem={equipItem}\r\n        setActiveItem={setActiveItem}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    key: 'armor',\r\n    icon: Armor,\r\n    count: (c, p) => p.items.filter((i) => i.itemType === 'armor').length,\r\n    render: (character, party, canEquip, equipItem, setActiveItem) => (\r\n      <ArmorList\r\n        character={character}\r\n        party={party}\r\n        canEquip={canEquip}\r\n        equipItem={equipItem}\r\n        setActiveItem={setActiveItem}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    key: 'ot1',\r\n    icon: '',\r\n    count: (c) => 0,\r\n    render: (character) => <div>ot1</div>,\r\n  },\r\n  {\r\n    key: 'ot2',\r\n    icon: '',\r\n    count: (c) => 0,\r\n    render: (character) => <div>ot2</div>,\r\n  },\r\n  {\r\n    key: 'ot3',\r\n    icon: '',\r\n    count: (c) => 0,\r\n    render: (character) => <div>ot3</div>,\r\n  },\r\n]\r\n\r\nexport interface MenuSelectPropsT {\r\n  character: tProcessedCharacter\r\n  party: tProcessedParty\r\n  activeKey: string\r\n  onActiveKeyChange: (key: string) => void\r\n}\r\n\r\nexport const MenuSelect = (props: MenuSelectPropsT) => {\r\n  const { character, party, activeKey, onActiveKeyChange } = props\r\n\r\n  return (\r\n    <FlexContainer style={{ justifyContent: 'center', marginTop: 8 }}>\r\n      {ACTIVE_CHARACTER_MENU_KEYS.map((option) => (\r\n        <Button\r\n          style={{\r\n            padding: '4px 0',\r\n            width: 56,\r\n            fontSize: 12,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            background: option.key === activeKey ? '#444' : undefined,\r\n          }}\r\n          onClick={() => {\r\n            onActiveKeyChange(option.key)\r\n          }}\r\n        >\r\n          <FullContainer />\r\n          <FullContainer>\r\n            <Icon src={option.icon} size={14} />\r\n          </FullContainer>\r\n          <FullContainer style={{ paddingRight: 2 }}>\r\n            {option.count(character, party)}\r\n          </FullContainer>\r\n        </Button>\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { ArmorPreview } from '../ArmorPreview'\r\nimport { WeaponPreview } from '../WeaponPreview'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\n\r\nexport interface HoverAreaPropsT {\r\n  character: tProcessedCharacter\r\n  activeItem: tWeapon | tArmor\r\n}\r\n\r\nexport const HoverArea = (props: HoverAreaPropsT) => {\r\n  const { character, activeItem } = props\r\n  const foundArmor = character.armor.find(\r\n    (a) => a.resource === (activeItem as tArmor).resource,\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {activeItem.itemType === 'armor' && (\r\n        <FlexContainer>\r\n          {foundArmor && (\r\n            <ArmorPreview armor={foundArmor} showEquipButton={false} />\r\n          )}\r\n          {foundArmor?.id !== activeItem.id && (\r\n            <ArmorPreview\r\n              armor={activeItem as tArmor}\r\n              showEquipButton={false}\r\n            />\r\n          )}\r\n        </FlexContainer>\r\n      )}\r\n      {activeItem.itemType === 'weapon' && (\r\n        <FlexContainer>\r\n          <WeaponPreview weapon={character.weapon} showEquipButton={false} />\r\n          {character.weapon.id !== activeItem.id && (\r\n            <WeaponPreview\r\n              weapon={activeItem as tWeapon}\r\n              showEquipButton={false}\r\n            />\r\n          )}\r\n        </FlexContainer>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { StatBar } from './StatBar'\r\nimport { Items } from './Items'\r\nimport { Name } from './Name'\r\nimport { Image } from './Image'\r\nimport { MenuSelect, ACTIVE_CHARACTER_MENU_KEYS } from './MenuSelect'\r\nimport { HoverArea } from './HoverArea'\r\nimport { Badge } from '../../elements/badge'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\n\r\nexport interface PartyActiveCharacterPropsT {\r\n  character: tProcessedCharacter\r\n  party: tProcessedParty\r\n  equipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n  canEquip: boolean\r\n  onRequestClose: () => void\r\n}\r\n\r\nexport const PartyActiveCharacter = (props: PartyActiveCharacterPropsT) => {\r\n  const { character, party, canEquip, equipItem, onRequestClose } = props\r\n  const [activeMenuKey, setActiveMenuKey] = useState('armor')\r\n  const [activeItem, setActiveItem] = useState<tArmor | tWeapon | undefined>()\r\n  const activeOption = ACTIVE_CHARACTER_MENU_KEYS.find(\r\n    (o) => o.key === activeMenuKey,\r\n  )\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        justifyContent: 'flex-end',\r\n      }}\r\n    >\r\n      <Badge\r\n        onClick={onRequestClose}\r\n        $top={-10}\r\n        $right={-2}\r\n        style={{ cursor: 'pointer', userSelect: 'none' }}\r\n      >\r\n        X\r\n      </Badge>\r\n      <FlexContainer\r\n        style={{\r\n          maxHeight: 440,\r\n          padding: 10,\r\n          position: 'absolute',\r\n          left: '-6px',\r\n          width: 486,\r\n          justifyContent: 'flex-end',\r\n        }}\r\n      >\r\n        {activeItem && (\r\n          <HoverArea character={character} activeItem={activeItem} />\r\n        )}\r\n      </FlexContainer>\r\n      <BoxContainer substyle={{ background: '#111', padding: 0 }}>\r\n        <FlexContainer $direction='column'>\r\n          <Name name={character.name} />\r\n          <StatBar character={character} />\r\n          <BoxContainer\r\n            substyle={{ background: '#111', padding: '16px 0 2px 0' }}\r\n          >\r\n            <FlexContainer>\r\n              <Items character={character} setActiveItem={setActiveItem} />\r\n              <Image character={character} />\r\n            </FlexContainer>\r\n            <MenuSelect\r\n              character={character}\r\n              party={party}\r\n              activeKey={activeMenuKey}\r\n              onActiveKeyChange={setActiveMenuKey}\r\n            />\r\n          </BoxContainer>\r\n          <BoxContainer\r\n            substyle={{\r\n              background: '#111',\r\n              padding: '4px 0',\r\n              height: 200,\r\n              overflow: 'auto',\r\n            }}\r\n          >\r\n            {activeOption &&\r\n              activeOption.render(\r\n                character,\r\n                party,\r\n                canEquip,\r\n                equipItem,\r\n                setActiveItem,\r\n              )}\r\n          </BoxContainer>\r\n        </FlexContainer>\r\n      </BoxContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Details from '../../icons/svg/delapouite/skills.svg'\r\nimport Inventory from '../../icons/svg/lorc/knapsack.svg'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Tooltip } from '../Tooltip'\r\nimport { PartyActiveCharacter } from '../PartyActiveCharacter'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { Hover } from '../Hover'\r\nimport { Icon } from '../Icon'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { animated, useSpring } from 'react-spring'\r\n\r\nexport interface ActionsPropsT {\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n}\r\n\r\nexport const Actions = (props: ActionsPropsT) => {\r\n  const { character, canEquip } = props\r\n  const { party, equipItem } = usePartyContext()\r\n  const {\r\n    openCharacterInventoryId,\r\n    setOpenCharacterInventoryId,\r\n  } = useUIContext()\r\n  const inventoryOpen = character.id === openCharacterInventoryId\r\n  const inventoryStyle = useSpring({\r\n    opacity: inventoryOpen ? 1 : 0,\r\n    config: { tension: 500 },\r\n  })\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{ justifyContent: 'center' }}\r\n    >\r\n      <FlexContainer\r\n        $full\r\n        style={{ alignItems: 'center', justifyContent: 'center' }}\r\n      >\r\n        <Tooltip\r\n          isOpen={inventoryOpen}\r\n          direction='up'\r\n          distance={40}\r\n          background='rgba(0,0,0,0.5)'\r\n          arrow\r\n          content={\r\n            <animated.div\r\n              style={{ minWidth: 887, minHeight: 444, ...inventoryStyle }}\r\n            >\r\n              {inventoryOpen && (\r\n                <PartyActiveCharacter\r\n                  character={character}\r\n                  party={party}\r\n                  equipItem={equipItem}\r\n                  canEquip={canEquip}\r\n                  onRequestClose={() => {\r\n                    setOpenCharacterInventoryId(undefined)\r\n                  }}\r\n                />\r\n              )}\r\n            </animated.div>\r\n          }\r\n        >\r\n          <Hover delay={0}>\r\n            {({ isHovering }) => (\r\n              <Icon\r\n                src={Inventory}\r\n                fill={\r\n                  isHovering ? 'rgba(255,255,255,1)' : 'rgba(255,255,255,0.7)'\r\n                }\r\n                size={18}\r\n                shadow\r\n                onClick={() => {\r\n                  if (character.id === openCharacterInventoryId) {\r\n                    return setOpenCharacterInventoryId(undefined)\r\n                  }\r\n                  setOpenCharacterInventoryId(character.id)\r\n                }}\r\n                style={{ padding: 6, cursor: 'pointer' }}\r\n              />\r\n            )}\r\n          </Hover>\r\n        </Tooltip>\r\n      </FlexContainer>\r\n      <FlexContainer\r\n        $full\r\n        style={{ alignItems: 'center', justifyContent: 'center' }}\r\n      >\r\n        <Icon\r\n          src={Details}\r\n          fill={'rgba(255,255,255,0.7)'}\r\n          size={18}\r\n          shadow\r\n          style={{ padding: 6, cursor: 'pointer' }}\r\n        />\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { noneg } from '../../util'\r\nimport { usePrevious } from '../../hooks/usePrevious'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\n\r\nexport interface HealthPropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Health = (props: HealthPropsT) => {\r\n  const { character } = props\r\n  const health = noneg(character.health)\r\n  const previousHealth = usePrevious<number>(health) || 0\r\n  const [storedHealth, setStoredHealth] = useState(0)\r\n\r\n  useEffect(() => {\r\n    setStoredHealth(health)\r\n    // toast(`${character.name} -${storedHealth - health} HP`)\r\n  }, [health])\r\n\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <span\r\n        style={{\r\n          padding: 4,\r\n          paddingLeft: 2,\r\n          fontSize: 42,\r\n          height: 62,\r\n          lineHeight: '72px',\r\n          color: '#b55553',\r\n          fontFamily: 'Bangers',\r\n          minWidth: 44,\r\n          display: 'inline-block',\r\n          textAlign: 'center',\r\n        }}\r\n      >\r\n        <Spring\r\n          from={{ hp: previousHealth || 0 }}\r\n          to={{ hp: health }}\r\n          config={{ friction: 70, mass: 5, tension: 300, clamp: true }}\r\n        >\r\n          {(hpp) => <span style={{}}>{Math.floor(hpp.hp)}</span>}\r\n        </Spring>\r\n      </span>\r\n      <ToastContainer />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { XPGauge, HealthGauge } from '../Gauge'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { styled } from 'styletron-react'\r\nimport { HoverBadge } from '../../elements/badge'\r\nimport { TagPreview } from '../TagPreview'\r\nimport { CharacterImage } from '../CharacterImage'\r\n\r\nimport { PartyCharacterConsumables } from '../PartyCharacterConsumables'\r\nimport { Stats } from './Stats'\r\nimport { Name } from './Name'\r\nimport { Actions } from './Actions'\r\nimport { Health } from './Health'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { usePlayerCharacterNotifications } from '../../hooks/usePlayerCharacterNotifications'\r\n\r\nexport interface PartyCharacterProps {\r\n  character: tProcessedCharacter\r\n  selected?: boolean\r\n  showActions?: boolean\r\n  onClick?: () => void\r\n  onConsumableClick?: (consumable: tConsumable, index: number) => void\r\n  push: (contents: JSX.Element, type?: string) => void\r\n}\r\nconst Wrapper = styled('div', (props: any) => {\r\n  const { $active } = props\r\n  return {\r\n    margin: 10,\r\n    position: 'relative',\r\n    boxShadow: $active ? '0px 0px 20px white' : 'none',\r\n    transition: 'all 0.4s',\r\n    userSelect: 'none',\r\n  }\r\n})\r\n\r\nexport const PartyCharacter = (props: PartyCharacterProps) => {\r\n  const {\r\n    character,\r\n    selected,\r\n    showActions = true,\r\n    onConsumableClick,\r\n    push,\r\n  } = props\r\n  const { playerCanEquipItem } = useUIContext()\r\n  usePlayerCharacterNotifications(character, push)\r\n  return (\r\n    <Wrapper\r\n      $active={selected}\r\n      style={{\r\n        opacity: character.health <= 0 ? 0.5 : 1,\r\n      }}\r\n    >\r\n      <BoxContainer\r\n        style={{\r\n          borderWidth: 2,\r\n          transition: 'all 1s',\r\n          boxShadow: selected ? '0px 0px 20px white' : 'none',\r\n        }}\r\n        substyle={{ padding: 0, minWidth: 396 }}\r\n      >\r\n        <FlexContainer style={{ border: '2px solid black' }}>\r\n          <FlexContainer\r\n            style={{ borderRight: '2px solid black', background: '#111' }}\r\n          >\r\n            <CharacterImage character={character} size={115} />\r\n          </FlexContainer>\r\n          <FlexContainer $full $direction='column'>\r\n            <Name character={character} />\r\n            <FlexContainer>\r\n              <Health character={character} />\r\n              <FlexContainer $full style={{ maxWidth: 175, minWidth: 175 }}>\r\n                <PartyCharacterConsumables\r\n                  character={character}\r\n                  consumables={character.consumables}\r\n                  onClick={onConsumableClick}\r\n                />\r\n              </FlexContainer>\r\n              <FlexContainer $full $direction='column'>\r\n                {showActions && (\r\n                  <Actions\r\n                    character={character}\r\n                    canEquip={playerCanEquipItem}\r\n                  />\r\n                )}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n            <FullContainer />\r\n            <HealthGauge character={character} />\r\n            <XPGauge character={character} />\r\n            <HoverBadge\r\n              badgeProps={{ $bottom: '18px', $left: '105px' }}\r\n              content={<BoxContainer>Character Level</BoxContainer>}\r\n            >\r\n              <span>{character.level}</span>\r\n            </HoverBadge>\r\n            <Stats character={character} />\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </BoxContainer>\r\n      <FlexContainer\r\n        style={{\r\n          position: 'absolute',\r\n          top: '-24px',\r\n          right: '4px',\r\n        }}\r\n      >\r\n        {character.status.map((status) => (\r\n          <TagPreview direction='up' status={status} />\r\n        ))}\r\n      </FlexContainer>\r\n      <HoverBadge\r\n        badgeProps={{ $bottom: '64px', $left: '-12px', $color: 'lightblue' }}\r\n        content={<BoxContainer>Armor</BoxContainer>}\r\n      >\r\n        <span>{character.stats.armor}</span>\r\n      </HoverBadge>\r\n      <HoverBadge\r\n        badgeProps={{ $bottom: '26px', $left: '-12px', $color: 'plum' }}\r\n        content={<BoxContainer>Magic Resistance</BoxContainer>}\r\n      >\r\n        <span>{character.stats.resistance}</span>\r\n      </HoverBadge>\r\n      <HoverBadge\r\n        badgeProps={{ $bottom: '-10px', $left: '-12px', $color: 'lightgreen' }}\r\n        content={<BoxContainer>Evasion</BoxContainer>}\r\n      >\r\n        <span>{character.stats.evasion}</span>\r\n      </HoverBadge>\r\n      <HoverBadge\r\n        direction='up'\r\n        content={<BoxContainer>Weapon Damage</BoxContainer>}\r\n        badgeProps={{\r\n          $bottom: '-12px',\r\n          $left: '40px',\r\n          $size: '35px',\r\n          $color:\r\n            character.weapon.damage.type === 'physical'\r\n              ? 'rgba(255,255,255,0.8)'\r\n              : 'plum',\r\n          style: { fontSize: 24 },\r\n        }}\r\n      >\r\n        <span>\r\n          {(character.weapon.damage.value +\r\n            character.stats.attackDamageOffset) *\r\n            character.stats.attackDamageModifier}\r\n        </span>\r\n      </HoverBadge>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { PartyCharacter } from '../PartyCharacter'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { ConfirmButton, RedButton } from '../../elements/button'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport {\r\n  LocalToastProvider,\r\n  LocalToastRp,\r\n} from '../../contexts/LocalToastContext'\r\n\r\nexport interface PlayerPartyPropsT {\r\n  party: tProcessedParty\r\n  onCharacterClick?: (character: tProcessedCharacter) => void\r\n  onConsumableClick?: (\r\n    character: tProcessedCharacter,\r\n    consumableIndex: number,\r\n    consumable: tConsumable,\r\n  ) => void\r\n}\r\nexport const PlayerParty = (props: PlayerPartyPropsT) => {\r\n  const { party, onCharacterClick, onConsumableClick } = props\r\n  const {\r\n    activeCharacter,\r\n    selectedSkill,\r\n    next,\r\n    onSkillSelect,\r\n  } = useCombatContext()\r\n\r\n  const showConfirmButton = (c: tProcessedCharacter) =>\r\n    selectedSkill &&\r\n    activeCharacter &&\r\n    c.health > 0 &&\r\n    ((selectedSkill.targetType === 'self' && c.id === activeCharacter.id) ||\r\n      selectedSkill.targetType === 'ally')\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          alignItems: 'flex-end',\r\n          cursor: selectedSkill?.targetType === 'party' ? 'pointer' : 'default',\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <FlexContainer\r\n            $direction='column'\r\n            key={c.id}\r\n            style={{ height: 177, justifyContent: 'flex-end' }}\r\n          >\r\n            {showConfirmButton(c) && (\r\n              <FlexContainer style={{ justifyContent: 'center' }}>\r\n                <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n                  <RedButton onClick={() => next(c)} $direction='up'>\r\n                    {c.id === activeCharacter.id\r\n                      ? 'Target Self'\r\n                      : 'Target Ally'}\r\n                  </RedButton>\r\n                </div>\r\n              </FlexContainer>\r\n            )}\r\n            <LocalToastRp>\r\n              {({ push }) => (\r\n                <PartyCharacter\r\n                  push={push}\r\n                  selected={activeCharacter && c && c.id === activeCharacter.id}\r\n                  character={c}\r\n                  onClick={() => onCharacterClick && onCharacterClick(c)}\r\n                  onConsumableClick={(consumable, index) => {\r\n                    try {\r\n                      if (!c || !consumable || index === undefined) return\r\n                      if (onConsumableClick) {\r\n                        onConsumableClick(c, index, consumable)\r\n                      }\r\n                      if (c && c.id === activeCharacter.id) {\r\n                        onSkillSelect(consumable.skill, index)\r\n                      }\r\n                    } catch (e) {}\r\n                  }}\r\n                />\r\n              )}\r\n            </LocalToastRp>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && selectedSkill.targetType === 'party' && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n            <RedButton onClick={() => next(party)}>Target Party</RedButton>\r\n          </div>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useGameStateContext } from '../GameStateContext'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { makeParty } from '../../game/Party/util'\r\nimport { tCombatEncounter } from '../../game/Encounter/type'\r\nimport { CombatContextProvider } from '.'\r\n\r\nexport interface LinkedCombatContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const LinkedCombatContext = (\r\n  props: LinkedCombatContextProviderPropsT,\r\n) => {\r\n  const { children } = props\r\n  const { currentEncounter } = useGameStateContext()\r\n  const [combatParty, setCombatParty] = useState<tParty>(makeParty(0))\r\n  useEffect(() => {\r\n    if (currentEncounter && (currentEncounter as tCombatEncounter).party)\r\n      setCombatParty((currentEncounter as tCombatEncounter).party)\r\n  }, [currentEncounter])\r\n\r\n  return (\r\n    <CombatContextProvider\r\n      enemyParty={combatParty}\r\n      setEnemyParty={setCombatParty}\r\n      onRequestNewParty={() => {}}\r\n    >\r\n      {children}\r\n    </CombatContextProvider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ForestBg from './assets/img/flat-forestred.jpg'\r\nimport { Switch } from 'react-router-dom'\r\nimport { Combat } from './domain/Combat'\r\nimport { CombatLogContextProvider } from './contexts/CombatLogContext'\r\nimport { ModalContextProvider } from './contexts/ModalContext'\r\nimport { makeRoute, RouteController } from './routes'\r\nimport { Party } from './domain/Party'\r\nimport { Start } from './domain/Start'\r\nimport { UIContextProvider, useUIContext } from './contexts/UIContext'\r\nimport { usePartyContext } from './contexts/PartyContext'\r\nimport { PlayerParty } from './components/PlayerParty'\r\nimport { FlexContainer, FullContainer } from './elements/flex'\r\nimport { LinkedCombatContext } from './contexts/CombatContext/context'\r\n\r\nconst CombatDomain = () => {\r\n  return (\r\n    <CombatLogContextProvider>\r\n      <Combat />\r\n    </CombatLogContextProvider>\r\n  )\r\n}\r\n\r\nconst GlobalCharacters = () => {\r\n  const { party } = usePartyContext()\r\n  const { onCharacterConsumableClick } = useUIContext()\r\n  return (\r\n    <div style={{ marginBottom: 30 }}>\r\n      <PlayerParty\r\n        party={party}\r\n        onConsumableClick={(c, i, item) => {\r\n          if (onCharacterConsumableClick) {\r\n            onCharacterConsumableClick(c, i, item)\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const App = () => {\r\n  return (\r\n    <ModalContextProvider>\r\n      <LinkedCombatContext>\r\n        <UIContextProvider>\r\n          <FlexContainer\r\n            $full\r\n            $direction='column'\r\n            style={{\r\n              height: '100%',\r\n              overflow: 'hidden',\r\n              background: `url(${ForestBg}) center center fixed no-repeat`,\r\n              backgroundSize: 'cover',\r\n            }}\r\n          >\r\n            <RouteController />\r\n            <FullContainer>\r\n              <Switch>\r\n                {makeRoute('/party', Party)}\r\n                {makeRoute('/combat', CombatDomain)}\r\n                {makeRoute('/', Start)}\r\n              </Switch>\r\n            </FullContainer>\r\n            <GlobalCharacters />\r\n          </FlexContainer>\r\n        </UIContextProvider>\r\n      </LinkedCombatContext>\r\n    </ModalContextProvider>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './index.css'\n\nimport { Provider as StyletronProvider, DebugEngine } from 'styletron-react'\nimport { Client as Styletron } from 'styletron-engine-atomic'\nimport { Provider as ReduxProvider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { makeStore } from './state'\nimport { PartyContextProvider } from './contexts/PartyContext'\nimport { GameStateContextProvider } from './contexts/GameStateContext'\n\nconst debug = process.env.NODE_ENV === 'production' ? void 0 : new DebugEngine()\nconst engine: Styletron = new Styletron()\nconst store = makeStore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n        <PartyContextProvider>\n          <GameStateContextProvider>\n            <Router>\n              <App />\n            </Router>\n          </GameStateContextProvider>\n        </PartyContextProvider>\n      </StyletronProvider>\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport party from './party'\r\nimport game from './game'\r\n\r\nexport const makeStore = () =>\r\n  createStore(combineReducers({ party, game }), compose(applyMiddleware(thunk)))\r\n"],"sourceRoot":""}