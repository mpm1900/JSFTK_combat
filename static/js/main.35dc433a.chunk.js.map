{"version":3,"sources":["icons/svg/lorc/pentagram-rose.svg","icons/svg/delapouite/coins.svg","icons/svg/lorc/broadsword.svg","assets/img/forests/7.png","icons/svg/lorc/dodging.svg","icons/svg/lorc/battered-axe.svg","icons/svg/lorc/all-for-one.svg","assets/img/forests/8.png","icons/svg/lorc/laurel-crown.svg","icons/svg/lorc/sprint.svg","icons/svg/lorc/scythe.svg","icons/svg/lorc/ringing-bell.svg","icons/svg/lorc/bone-knife.svg","icons/svg/lorc/drink-me.svg","icons/svg/delapouite/perspective-dice-six.svg","icons/svg/lorc/shieldcomb.svg","icons/svg/lorc/broken-shield.svg","icons/svg/lorc/knapsack.svg","assets/img/dungeon/1.png","icons/svg/delapouite/chest-armor.svg","icons/svg/delapouite/viking-shield.svg","icons/svg/lorc/leather-boot.svg","icons/svg/lorc/visored-helm.svg","icons/svg/lorc/hammer-drop.svg","icons/svg/lorc/saber-slash.svg","icons/svg/skoll/troll.svg","assets/img/forests/1.png","assets/img/dungeon/3.png","icons/svg/lorc/werewolf.svg","icons/svg/lorc/bee.svg","icons/svg/delapouite/kenku-head.svg","icons/svg/lorc/cultist.svg","icons/svg/lorc/wolf-head.svg","icons/svg/lorc/raven.svg","icons/svg/lorc/witch-flight.svg","icons/svg/delapouite/overlord-helm.svg","icons/svg/lorc/spectre.svg","icons/svg/delapouite/heart-beats.svg","icons/svg/delapouite/biceps.svg","icons/svg/lorc/brain.svg","icons/svg/delapouite/eye-target.svg","icons/svg/lorc/juggler.svg","icons/svg/lorc/clover.svg","icons/svg/lorc/robe.svg","icons/svg/lorc/scale-mail.svg","icons/svg/lorc/lightning-shield.svg","icons/svg/delapouite/robin-hood-hat.svg","icons/svg/lorc/pointy-hat.svg","icons/svg/lorc/battle-axe.svg","icons/svg/lorc/gavel.svg","icons/svg/lorc/heavy-arrow.svg","icons/svg/lorc/bowie-knife.svg","icons/svg/skoll/revolver.svg","icons/svg/lorc/wizard-staff.svg","icons/svg/lorc/croc-sword.svg","icons/svg/skoll/fist.svg","icons/svg/delapouite/herbs-bundle.svg","icons/svg/lorc/lotus-flower.svg","icons/svg/delapouite/medicine-pills.svg","icons/svg/delapouite/executioner-hood.svg","icons/svg/lorc/cowled.svg","icons/svg/delapouite/female-vampire.svg","icons/svg/delapouite/wizard-face.svg","icons/svg/lorc/high-shot.svg","icons/svg/delapouite/shield-impact.svg","icons/svg/lorc/energy-arrow.svg","icons/svg/lorc/fire-zone.svg","icons/svg/lorc/magic-swirl.svg","icons/svg/lorc/heavy-timer.svg","icons/svg/delapouite/extra-time.svg","icons/svg/lorc/flat-hammer.svg","icons/svg/lorc/bordered-shield.svg","icons/svg/lorc/resonance.svg","icons/svg/lorc/gunshot.svg","icons/svg/delapouite/crosshair.svg","icons/svg/delapouite/bullet-impacts.svg","icons/svg/delapouite/backward-time.svg","icons/svg/lorc/snail.svg","icons/svg/lorc/double-shot.svg","icons/svg/sbed/health-normal.svg","icons/svg/lorc/embrassed-energy.svg","icons/svg/lorc/wave-strike.svg","icons/svg/lorc/life-support.svg","icons/svg/lorc/plain-dagger.svg","icons/svg/lorc/knife-thrust.svg","icons/svg/lorc/pointy-sword.svg","icons/svg/lorc/axe-swing.svg","icons/svg/delapouite/vibrating-shield.svg","icons/svg/lorc/punch.svg","icons/svg/lorc/ubisoft-sun.svg","icons/svg/lorc/star-swirl.svg","icons/svg/sbed/targeted.svg","icons/svg/delapouite/sticky-boot.svg","icons/svg/lorc/biohazard.svg","icons/svg/carl-olsen/flame.svg","icons/svg/lorc/bleeding-wound.svg","icons/svg/lorc/snowflake-2.svg","icons/svg/lorc/split-cross.svg","icons/svg/lorc/hand.svg","icons/svg/delapouite/arrow-wings.svg","icons/svg/delapouite/leather-armor.svg","icons/svg/lorc/crossed-swords.svg","icons/svg/lorc/divided-spiral.svg","icons/svg/lorc/crowned-skull.svg","state/util.ts","hooks/useActions.ts","game/Stats/constants.ts","util/undefAdd.ts","game/Stats/util.ts","game/Status/constants.ts","util/noneg.ts","game/Weapon/builders/damage.ts","game/Weapon/builders/goldValue.ts","game/Weapon/builders/rarity.ts","game/Weapon/builders/stats.ts","game/Weapon/builders/typeConfig.ts","game/Weapon/builders/index.ts","game/Skill/skills/index.ts","game/Skill/skills/axe.ts","game/Weapon/builders/objects/axe.ts","game/Skill/skills/bow.ts","game/Weapon/builders/objects/bow.ts","game/Skill/skills/catalyst.ts","game/Weapon/builders/objects/catalyst.ts","game/Skill/skills/chime.ts","game/Weapon/builders/objects/chime.ts","game/Weapon/constants.ts","game/Roll/util.ts","game/Armor/constants.ts","game/Consumable/util.ts","theme/index.ts","game/Character/constants.ts","game/Weapon/fists.ts","game/Skill/skills/consumables.ts","game/Consumable/objects/godsbeard.ts","game/Consumable/objects/celestial_lotus.ts","game/Consumable/objects/poison_knife.ts","game/Consumable/objects/beast_drug.ts","game/Consumable/objects/curing_potion.ts","game/Item/constants.ts","game/Character/util.ts","util/getRandom.ts","game/Armor/builders/index.ts","game/Armor/builders/sets/index.tsx","game/Armor/builders/sets/ranger.ts","game/Armor/builders/sets/patrician.ts","game/Armor/builders/sets/executioner.ts","game/Armor/builders/sets/student.ts","game/Armor/builders/sets/tomb.ts","game/Armor/builders/sets/adventure.ts","game/Armor/builders/sets/aristocrat.ts","game/Armor/builders/sets/graveguard.ts","game/Armor/builders/sets/apprentice.ts","game/Armor/builders/sets/hunter.ts","game/Armor/builders/sets/antiquated.ts","game/Armor/builders/sets/iron.ts","game/Armor/builders/sets/bone.ts","game/Armor/builders/sets/novice.ts","game/Skill/skills/blunt.ts","game/Weapon/builders/objects/hammer.ts","game/Skill/skills/dagger.ts","game/Weapon/builders/objects/dagger.ts","game/Skill/skills/greatsword.ts","game/Weapon/builders/objects/greatsword.ts","game/Skill/skills/pistol.ts","game/Weapon/builders/objects/pistol.ts","game/Skill/skills/scythe.ts","game/Weapon/builders/objects/scythe.ts","game/Skill/skills/sword.ts","game/Weapon/builders/objects/sword.ts","game/Weapon/builders/objects/index.ts","game/Item/util.ts","game/Encounter/constants.ts","game/Character/enemies/_builder.ts","game/Character/enemies/forest_troll.ts","game/Character/enemies/forest_beast.ts","game/Character/enemies/bee.ts","game/Character/enemies/cultist_brute.ts","game/Character/enemies/cultist.ts","game/Character/enemies/forest_wolf.ts","game/Character/enemies/forest_raven.ts","game/Character/enemies/forest_witch.ts","game/Character/bosses/lich.ts","game/Encounter/floors/util.tsx","game/Character/enemies/tomb_spirit.ts","game/Encounter/floors/floor-2.tsx","game/Encounter/floors/index.tsx","game/Encounter/floors/floor-1.tsx","game/Party/util.ts","game/Party/constants.ts","state/party/index.ts","game/Encounter/util.ts","state/game/index.ts","contexts/GameStateContext/index.tsx","contexts/PartyContext/index.tsx","contexts/ModalContext/reducer.ts","contexts/ModalContext/index.tsx","elements/flex.ts","elements/button.tsx","components/Icon/index.tsx","components/Hover/index.tsx","elements/box.tsx","components/StatsPreview/index.tsx","icons/skills.ts","icons/status.ts","icons/maps.tsx","components/Tooltip/index.tsx","hooks/useOnClickOutside.ts","elements/badge.tsx","components/SkillChecks/index.tsx","components/ArmorPreview/index.tsx","elements/typography.tsx","game/Skill/constants.ts","game/Skill/util.ts","components/SkillPreview/index.tsx","components/WeaponPreview/index.tsx","components/ConsumablePreview/index.tsx","components/ItemPreview/index.tsx","components/CombatVictoryModal/index.tsx","game/Other/util.ts","game/Queue/util.ts","game/Skill/committer.ts","contexts/CombatContext/index.tsx","game/AI/util.ts","components/RoundResultRenderer/Perfect.tsx","components/RoundResultRenderer/index.tsx","components/PartyActiveCharacter/StatBar.tsx","contexts/UIContext/index.tsx","components/PartyActiveCharacter/Items.tsx","components/PartyActiveCharacter/Name.tsx","components/CharacterIcon/index.tsx","components/PartyActiveCharacter/Image.tsx","components/PartyActiveCharacter/elements.tsx","components/PartyActiveCharacter/WeaponList.tsx","components/PartyActiveCharacter/MenuSelect.tsx","components/PartyActiveCharacter/HoverArea.tsx","elements/shapes.tsx","components/PartyActiveCharacter/index.tsx","components/PartyActiveCharacter/ArmorList.tsx","components/EquipItemModal/index.tsx","components/CombatActions/index.tsx","elements/monospace.tsx","components/Gauge/v2.tsx","components/Gauge/index.tsx","hooks/usePrevious.ts","components/TagPreview/index.tsx","hooks/usePlayerCharacterNotifications.tsx","components/EnemyCharacter/Health.tsx","contexts/LocalToastContext/index.tsx","components/EnemyCharacter/index.tsx","components/CombatParty/index.tsx","components/AppHeader/index.tsx","components/PartyResources/index.tsx","components/CombatQueue/index.tsx","contexts/CombatLogContext/util.tsx","contexts/CombatLogContext/index.tsx","components/CombatLog/index.tsx","domain/Combat.tsx","hooks/useCombatStart.tsx","routes/index.tsx","components/Shop/index.tsx","components/Shrine/index.tsx","components/EncounterHistory/index.tsx","components/BossRewards/index.tsx","components/NonCombatEncounter/index.tsx","components/EncounterActions/Choice.tsx","util/stringArr.ts","components/EncounterActions/Shop.tsx","components/EncounterActions/Reward.tsx","components/EncounterActions/Shrine.tsx","components/EncounterActions/index.tsx","domain/Party.tsx","domain/Start.tsx","game/Consumable/constants.ts","components/PartyCharacterConsumables/index.tsx","components/PartyCharacter/Stats.tsx","components/PartyCharacter/Name.tsx","components/PartyCharacter/Actions.tsx","components/PartyCharacter/Health.tsx","hooks/useElementShake.tsx","components/PartyCharacter/index.tsx","components/PlayerParty/index.tsx","contexts/CombatContext/context.tsx","components/AppBg/index.tsx","App.tsx","serviceWorker.ts","index.tsx","state/index.ts"],"names":["module","exports","makeReducer","core","initialState","state","action","coreFn","type","useActions","actions","dispatch","useDispatch","useMemo","bindActionCreators","ZERO_STATS","vigor","strength","intelligence","dexterity","charisma","agility","luck","armor","resistance","evasion","maxHealthOffset","healthRegeneration","damageTakenModifier","damageTakenRangeModifiers","melee","ranged","damageReflection","attackDamageOffset","attackDamageModifier","criticalChance","damageModifiers","flying","undead","queueConsolidationModifier","queueValueSet","undefined","goldModifier","maxInspirationOffset","consumableHealthGainOffset","minHealthOffset","BASE_C_STATS","CLASS_STATS","executioner","ranger","student","patrician","drifter","enemy","DAMAGE_BONUS_KEYS","DEFENSE_BONUS_KEYS","HEALTH_FOCUS_BONUS_KEYS","STAT_BONUS_KEYS","STAT_KEY_LABELS","undefAdd","a","b","combineStats","stats","reduce","result","STATUS_CONFIG","bleeding","name","description","canStack","isTemporary","duration","immunities","burning","frozen","poisoned","shocked","stunned","wet","rushed","interrupted","reset","evasive","resilient","protected","targeted","cure","blessed","noneg","value","WEAPON_DAMAGE_CONFIG","starting","axe","hammer","sword","greatsword","bow","dagger","scythe","catalyst","chime","pistol","fist","rusted","tomb","buried","withering","glass","iron","steel","stainless","ancient","crystal","elemental","cursed","sharp","hardened","engraved","ethereal","exquisite","divine","arcane","celestial","mythic","unique","BASE_WEAPON_TYPES_GOLD","WEAPON_CLASS_GOLD_OFFSETS","WEAPON_CLASS_RARIES","DEFAULT_WEAPON_TYPE_STATS","DEFAULT_WEAPON_TYPE_CONFIG","stat","twoHand","range","damageType","createWeapon","weaponType","weaponClass","skills","goldValue","damageValue","rarity","defaultStats","id","v4","itemType","breakable","damage","createBreakableWeapon","createSkill","rolls","offset","rest","damageModifier","splashDamageModifier","targetType","healing","perfectSplash","perfectPierce","perfectStatus","CHOP","SWING","WITHERING_SWING","GLASS_SWING","AXE_SPIN","FLURRY","STUN","CLEAVE","SLICE","SLASH","EXECUTIONER_AXE","AXES","0","1","2","3","4","5","SHOT","WITHERING_SHOT","GLASS_SHOT","HEADSHOT","PIN_DOWN","WOUNDING_SHOT","RANGERS_BOW","BOWS","BLAST","GLASS_BLAST","ARCANE","NOVA","ENFLAME","ENGULF","PROTECT","TIME_JUMP","STUDENTS_CATALYST","CATALYSTS","RING","WITHERING_RING","GLASS_RING","REVERBERATE","SLOW","VANISH","RUSH","RESET","PATRICIANS_CHIME","CHIMES","CLASS_WEAPONS","resolveCheck","character","key","statValue","getBaseStatValue","roll","DiceRoll","total","CLASS_ARMOR","considateConsumableListToStack","consumables","stack","forEach","c","cid","map","s","consumable","includes","count","updateStackItem","Theme","CHARACTER_XP_MAX","CHARACTER_CLASS_COLORS","BASE_CHARACTER","isCharacter","icon","partyId","level","experience","class","healthOffset","inspirationOffset","tags","weapon","status","possibleRewards","FISTS","HEAL","REMOVE_CURSES","POISON_KNIFE","GODSBEARD","skill","consumableId","CELESTIAL_LOTUS","BEAST_DRUG","CURE_POTION","ITEM_RARITY_COLORS","common","uncommon","rare","CLASS_STARTING_CONSUMABLES","CHARACTER_RESOURCES","checkForProcessedCharacter","processed","Error","makeCharacter","characterClass","processCharacter","r","getSkills","statusImmunities","baseVigor","startingHealth","Math","floor","maxHealth","health","maxInspiration","inspiration","rawStats","getDamageResistance","hasStatus","statusType","hasAnyStatus","statusTypes","some","hasImmunity","getReflectedDamage","target","rawDamage","commitDamage","ignoreResistance","pc","rawDamageValue","filter","ceil","decrementStatusDurations","addMultipleStatus","types","durationOverride","statusConfig","existingStatus","find","findStatus","addStatus","checkStatus","levelUp","getRandom","items","random","length","createArmor","resource","createFootwear","createHat","createHeavyArmor","createHelmet","createLightArmor","createMagicArmor","createMagicHat","ARMOR_BY_LEVEL","SMASH","WITHERING_SMASH","GLASS_SMASH","RIPPLE","EARTHQUAKE","CRUSH","HAMMERS","STRIKE","WITHERING_STRIKE","GLASS_STRIKE","LUNGE","STAB","DAGGERS","WIDE_SWING","GREATSWORDS","FIRE","SNIPE","FAN_FIRE","PISTOLS","THRUST","ARMOR_UP","EVADE_UP","SCYTHES","SWORDS","WEAPONS","getRandomItem","Object","keys","allWeapons","parseInt","Array","fill","_","index","ZERO_REWARD","gold","xp","armorDown","resDown","attackDown","armorUp","attackUp","resUp","justGold","justXp","justRandomItem","FLOOR_CONFIGS_BY_INDEX","makeEnemy","makeEnemyWeapon","makeEnemyReward","FOREST_TROLL","Troll","FOREST_BEAST","BeastMan","BEE","Bee","CULTIST_BRUTE","Icon","CULTIST","Cultist","FOREST_WOLF","Wolf","FOREST_RAVEN","Raven","FOREST_WITCH","Witch","LICH","Lich","makeRandomFloorEncounter","characterList","enemyCount","TOMB_SPIRIT","Spirit","FloorConfig2","bosses","w","enemies","6","7","isParty","obj","checkForProcessedParty","party","characters","findCharacterInParty","processParty","updateCharacter","characterId","updater","makeParty","floorConfig","makeBossParty","config","getRolledRewards","checkedCharacter","rewards","i","getRewardsFromCharacter","commitRewards","goldMultiplier","addExperience","xpToNextLevel","PLAYER_PARTY_ID","SET_GOLD","actionCreators","payload","item","updateParty","upsertCharacter","deleteCharacter","upsertItem","setGold","jack","jim","john","INITIAL_STATE","makeRandomEncounter","depth","max","encounterType","makeEncounterType","encounter","choiceId","reward","boss","costs","getItemCost","results","makeEncounterList","chosen","choices","makeFloor","encounterCount","encounters","encounterId","itemId","chooseCurrent","nextLevel","nextFloor","removeItem","updateCurrentFloor","floors","e","choice","defaultValue","currentChoice","currentEncounter","previousChoice","GameStateContext","React","createContext","useGameStateContext","useContext","GameStateContextProvider","props","children","useSelector","game","Provider","defaultContextValue","rawParty","activeCharacter","findCharacter","findRawCharacter","setActiveCharacter","equipItem","unequipItem","purchaseItem","cost","sellItem","refreshParty","PartyContext","PartyContextProvider","useState","activeCharacterId","setActiveCharacterId","existingArmor","equipArmor","existingWeapon","equipWeapon","unequipArmor","usePartyContext","isOpen","contents","callback","blocking","styles","OPEN","CLOSE","style","reducer","coreFunction","ModalContext","open","close","setBlocking","setPayload","setContents","setCallback","setStyles","useModalContext","getContextValue","Modal","setAppElement","ModalContextProvider","reducerValue","useReducer","context","onRequestClose","content","backgroundColor","color","width","margin","bottom","borderColor","modal","overlay","zIndex","FlexContainer","styled","display","flexDirection","$direction","flex","$full","FullContainer","Button","cursor","background","boxShadow","textShadow","border","outline","padding","userSelect","RedButton","withStyle","fontWeight","borderTop","borderBottom","animationDirection","animationIterationCount","animationName","src","size","shadow","onClick","loading","setLoading","svg","setSvg","useEffect","fetch","then","res","text","className","height","dangerouslySetInnerHTML","__html","Hover","delay","internalHovering","setInternalHovering","isHovering","setIsHovering","guid","setGuid","useLayoutEffect","setTimeout","onMouseEnter","preventDefault","stopPropagation","onMouseLeave","BoxContainer","substyle","tag","Element","boxSizing","defense_key_colors","StatsPreview","fontSize","textTransform","SKILL_ICONS","Punch","Shot","Headshot","PinDown","Flurry","SpreadShot","Arcane","Nova","Blast","TimeJump","Ring","Reverberate","Smash","Strike","Swing","Chop","Thrust","Earthquake","Shockwave","Ripple","AxeSpin","Cleave","Lunge","Stab","Slice","Swipe","Fire","Snipe","FanFire","Stun","Reset","Taunt","Slow","Protect","Heal","Bless","PoisonKnife","CurePotion","Restore","Rush","Vanish","EvadeUp","ArmorUp","AttackUp","STATUS_ICONS","Evasive","Stunned","Targeted","Protected","Poisoned","Burning","Bleeding","Frozen","SpeedDown","ArmorDown","ResistanceDown","Cursed","STAT_ICONS","Vigor","Strength","Brain","Awareness","Juggler","Agility","Clover","ARMOR_TYPE_ICONS","MagicArmor","ClothArmor","Armor","shield","Shield","ward","MagicShield","footwear","Footwear","hat","Hat","MagicHat","helmet","Helmet","charm","ring","WEAPON_TYPE_ICONS","Axe","Blunt","Bow","Dagger","Chime","Handgun","MagicStaff","Scythe","Sword","Greatsword","Fist","RESOURCE_ICONS","Weapon","offhand","body","head","feet","CONSUMABLE_ITEM_ICONS","Godsbeard","Lotus","BeastDrug","CONSUMABLE_ITEM_COLORS","CHARACTER_CLASS_ICONS","Executioner","Bard","Hunter","Scholar","Hobo","Tooltip","direction","tagName","arrow","HoverToolTip","ClickToolTip","setIsOpen","ref","useRef","handler","listener","event","current","contains","document","addEventListener","removeEventListener","useOnClickOutside","p","v","Div","transform","Badge","withWrapper","$style","position","$absolute","fontFamily","$size","alignItems","justifyContent","lineHeight","borderRadius","$color","top","$top","$bottom","right","$right","left","$left","transition","SkillChecks","minHeight","perfect","every","check","label","SkillCheck","crit","colors","getPerfectStatusColors","opacity","getColor","X","ArmorPreview","showEquipButton","showBuyButton","onEquipClick","onBuyClick","rarityColor","from","Color","darken","rgb","toString","to","gradient","minWidth","marginBottom","weaponStatOverride","marginRight","marginLeft","textAlign","marginTop","FakeLink","whiteSpace","textDecoration","HeadingSm","Text","PERFECT_DISPLAY_INFO","splash","pierce","heal","getTargetSkillResult","sourceResult","dodgeResult","dodgeSuccess","source","getRawDamage","totalDamage","reflectedDamage","loggedDamgge","getSkillResult","targets","rollResults","passedCount","criticalHitSuccess","rollDamageModifier","round","weaponRangeOverride","accuracySuccess","weaponDidBreak","splashDamage","addedStatus","getSourceSkillResult","targetResults","resolveSkillTarget","makeSkillTarget","getSkillDamage","getPerfectText","perfectKeys","base","getPerfectKeys","pre","SkillPreview","perfectChance","getDamageColor","WeaponPreview","basicAttack","Melee","Ranged","Hands","flexWrap","Fragment","paddingLeft","ConsumablePreview","ItemPreivew","getItem","CombatVictoryModal","consolidatedRewards","consolidateRewards","setItems","first","next","Gold","XP","makeCombatQueue","sortedCharacters","sort","validateQueue","AGILITY_OFFSET","consolidateQueue","queue","min","Number","POSITIVE_INFINITY","getMin","shiftQueue","getFirst","commitQueueUpdates","pcs","shiftedQueue","q","partyUpdater","commitSkillResults","playerParty","enemyParty","targetResult","sourceParty","targetParty","localUpdate","selectedSkill","selectedTargets","selectedConsumableIndex","roundResults","activeRound","isRunning","isRenderingResult","onSkillSelect","onTargetsSelect","onConsumableSelect","consumableIndex","start","commit","equipItemCombat","CombatContext","useCombatContext","CombatContextProvider","setEnemyParty","onRequestNewParty","history","useHistory","setIsRunning","setIsRenderingResult","setQueue","resultCommitter","roundId","setRoundId","setRoundResults","setActiveRound","selectedTarget","setSelectedTarget","setSelectedSkill","setSelectedConsumableIndex","completeRound","useCallback","targetedCharacters","t","getSkillTargetOptions","getAIAction","execEnemyTurn","alert","push","nextTarget","roundTarget","Perfect","show","useSpring","div","RoundResultRenderer","isModal","RoundResult","isDone","setIsDone","activeIndex","setActiveIndex","stream","Kefir","sequentially","onValue","onEnd","later","showPerfect","isPlayer","showTarget","lighten","hex","getStatColor","StatBar","paddingTop","paddingBottom","playerCanEquipItem","openCharacterInventoryId","showSkillTooltips","onCharacterConsumableClick","setPlayerCanEquipItem","setOpenCharacterInventoryId","setOnCharacterConsumableClick","fn","setShowSkillTooltips","UIContext","useUIContext","UIContextProvider","_setOnCharacterConsumableClick","ItemRow","$disabled","Items","setActiveItem","disabled","onHover","canUnequip","Item","distance","Name","CharacterIcon","iconStyle","overflow","Image","Row","$active","ActionsRow","WeaponList","canEquip","onEquipItem","activeItemId","setActiveItemId","condenseListToStack","localeCompare","ACTIVE_CHARACTER_MENU_KEYS","Weapons","render","MenuSelect","activeKey","onActiveKeyChange","option","paddingRight","HoverArea","activeItem","foundArmor","Hexagon","childStyle","mod","boxW","boxH","triH","triW","tHeight","borderRight","borderLeft","HexBadge","stroke","rotate","angle","HoverHexBadge","PartyActiveCharacter","activeMenuKey","setActiveMenuKey","activeOption","o","maxHeight","ArmorList","EquipItemModal","CombatActions","Inventory","Monospace","Monodiv","Gauge2","percentage","oldPercentage","setOldPercentage","friction","mass","tension","maxWidth","Gauge","usePrevious","HealthGauge","showNumbers","XPGauge","TagPreview","immunity","usePlayerCharacterNotifications","shake","previousHealth","setPreviousHealth","previousLevel","setPreviousLevel","healthDiff","abs","lastRound","chResult","Health","hp","clamp","hpp","Toast","animation","useTransition","enter","leave","LocalToastRp","EnemyCharacter","$selected","isBoss","active","borderWidth","CombatParty","AppHeader","PartyResources","CombatQueue","sortedIds","getSortedIds","bigList","NEGATIVE_INFINITY","getMax","widthCoef","Span","SkillSpan","CombatLogContext","combatLog","clear","useCombatLogContext","CombatLogContextProvider","setCombatLog","deadLog","setDeadLog","NameSpan","isUserParty","isEnemyParty","NameSpanBuilder","log","line","dLog","latestRounds","baseRound","subTarget","splashDamageResistance","CombatLog","scrollRef","isExpanded","setIsExpanded","scrollIntoView","behavior","Combat","useCombatStart","makeRoute","path","Component","RouteController","CardList","tabs","Shop","activeTab","setActiveTab","tab","overflowY","Shrine","setResults","JSON","stringify","EncounterHistory","chosenEncounters","getIcon","Boss","Reward","Unknown","f","fi","BossRewards","NonCombatEncounter","Choice","arr","previousEncounter","l","getChoiceText","getNextText","EncounterActions","Party","currentFloor","parties","Start","href","onChange","rc","StartCharacterCard","CONSUMABLE_DESCRIPTIONS","PartyCharacterConsumables","onStackClick","filler","ConsumableBox","HEIGHT","PartyCharacterConsumable","PartyCharacterConsumableTooltip","getText","CharacterStat","statKey","ResourceE","Stats","Actions","inventoryOpen","inventoryStyle","storedHealth","setStoredHealth","springConfig","Wrapper","animated","$targeted","Halo","$light","leftR","PartyCharacter","selected","showActions","onConsumableClick","targetIds","immediate","reverse","shakeStyles","exec","useElementShake","PlayerParty","onCharacterClick","showConfirmButton","LinkedCombatContext","combatParty","setCombatParty","AppBg","bg","Forest1","Forest2","Forest3","Dungeon1","Dungeon2","getEncounterBg","backgroundSize","CombatDomain","GlobalCharacters","App","Boolean","window","location","hostname","match","engine","Styletron","store","createStore","combineReducers","compose","applyMiddleware","thunk","ReactDOM","StrictMode","debug","debugAfterHydration","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,4C,qBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,iBCA3CD,EAAOC,QAAU,IAA0B,+B,wBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,iBCA3CD,EAAOC,QAAU,IAA0B,+B,2BCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,kD,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,+B,sCCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,oECA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IA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","file":"static/js/main.35dc433a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pentagram-rose.d7458af6.svg\";","module.exports = __webpack_public_path__ + \"static/media/coins.97dc8c40.svg\";","module.exports = __webpack_public_path__ + \"static/media/broadsword.47ecfebc.svg\";","module.exports = __webpack_public_path__ + \"static/media/7.d2e528ea.png\";","module.exports = __webpack_public_path__ + \"static/media/dodging.3c689d6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/battered-axe.819d2726.svg\";","module.exports = __webpack_public_path__ + \"static/media/all-for-one.33b25b62.svg\";","module.exports = __webpack_public_path__ + \"static/media/8.d80166bd.png\";","module.exports = __webpack_public_path__ + \"static/media/laurel-crown.00b6e803.svg\";","module.exports = __webpack_public_path__ + \"static/media/sprint.968b443a.svg\";","module.exports = __webpack_public_path__ + \"static/media/scythe.f0a97d33.svg\";","module.exports = __webpack_public_path__ + \"static/media/ringing-bell.f8953cca.svg\";","module.exports = __webpack_public_path__ + \"static/media/bone-knife.8d6d549d.svg\";","module.exports = __webpack_public_path__ + \"static/media/drink-me.2ee1fbb7.svg\";","module.exports = __webpack_public_path__ + \"static/media/perspective-dice-six.8b7e2589.svg\";","module.exports = __webpack_public_path__ + \"static/media/shieldcomb.802f20f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/broken-shield.c26ddd72.svg\";","module.exports = __webpack_public_path__ + \"static/media/knapsack.62049a62.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.31fafbe8.png\";","module.exports = __webpack_public_path__ + \"static/media/chest-armor.f1f52a3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/viking-shield.a61f8230.svg\";","module.exports = __webpack_public_path__ + \"static/media/leather-boot.89b85474.svg\";","module.exports = __webpack_public_path__ + \"static/media/visored-helm.1f2ced7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/hammer-drop.120a92c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/saber-slash.54b5f3f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/troll.8e45be35.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.a7dcd7d0.png\";","module.exports = __webpack_public_path__ + \"static/media/3.5b81afea.png\";","module.exports = __webpack_public_path__ + \"static/media/werewolf.fa211e2a.svg\";","module.exports = __webpack_public_path__ + \"static/media/bee.7b0a0467.svg\";","module.exports = __webpack_public_path__ + \"static/media/kenku-head.3292e596.svg\";","module.exports = __webpack_public_path__ + \"static/media/cultist.998af3b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/wolf-head.4e7bf362.svg\";","module.exports = __webpack_public_path__ + \"static/media/raven.581ee1b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/witch-flight.4d7f9b27.svg\";","module.exports = __webpack_public_path__ + \"static/media/overlord-helm.03e5b513.svg\";","module.exports = __webpack_public_path__ + \"static/media/spectre.a7c36843.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-beats.6b1fff9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/biceps.e62c221f.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain.ce65603a.svg\";","module.exports = __webpack_public_path__ + \"static/media/eye-target.4c5ae680.svg\";","module.exports = __webpack_public_path__ + \"static/media/juggler.1188c0be.svg\";","module.exports = __webpack_public_path__ + \"static/media/clover.df6a0d57.svg\";","module.exports = __webpack_public_path__ + \"static/media/robe.5b61ecba.svg\";","module.exports = __webpack_public_path__ + \"static/media/scale-mail.cb5ff7d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/lightning-shield.85367254.svg\";","module.exports = __webpack_public_path__ + \"static/media/robin-hood-hat.6bab1449.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointy-hat.d042ac98.svg\";","module.exports = __webpack_public_path__ + \"static/media/battle-axe.47a5ba50.svg\";","module.exports = __webpack_public_path__ + \"static/media/gavel.e0256fff.svg\";","module.exports = __webpack_public_path__ + \"static/media/heavy-arrow.56b29a8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/bowie-knife.e7821736.svg\";","module.exports = __webpack_public_path__ + \"static/media/revolver.25251236.svg\";","module.exports = __webpack_public_path__ + \"static/media/wizard-staff.3e6091b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/croc-sword.dfa5ecf6.svg\";","module.exports = __webpack_public_path__ + \"static/media/fist.d1b25a44.svg\";","module.exports = __webpack_public_path__ + \"static/media/herbs-bundle.e02bcec1.svg\";","module.exports = __webpack_public_path__ + \"static/media/lotus-flower.4b207eda.svg\";","module.exports = __webpack_public_path__ + \"static/media/medicine-pills.ef75e681.svg\";","module.exports = __webpack_public_path__ + \"static/media/executioner-hood.6e796b5c.svg\";","module.exports = __webpack_public_path__ + \"static/media/cowled.d0cad9db.svg\";","module.exports = __webpack_public_path__ + \"static/media/female-vampire.27d5f882.svg\";","module.exports = __webpack_public_path__ + \"static/media/wizard-face.2a49683a.svg\";","module.exports = __webpack_public_path__ + \"static/media/high-shot.eed9def8.svg\";","module.exports = __webpack_public_path__ + \"static/media/shield-impact.54fdc5c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/energy-arrow.514fc56c.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire-zone.42e13657.svg\";","module.exports = __webpack_public_path__ + \"static/media/magic-swirl.854dc419.svg\";","module.exports = __webpack_public_path__ + \"static/media/heavy-timer.1072a406.svg\";","module.exports = __webpack_public_path__ + \"static/media/extra-time.4d418333.svg\";","module.exports = __webpack_public_path__ + \"static/media/flat-hammer.dff14efb.svg\";","module.exports = __webpack_public_path__ + \"static/media/bordered-shield.56c12b47.svg\";","module.exports = __webpack_public_path__ + \"static/media/resonance.4c1d217b.svg\";","module.exports = __webpack_public_path__ + \"static/media/gunshot.cf3eceba.svg\";","module.exports = __webpack_public_path__ + \"static/media/crosshair.d2c9a9ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/bullet-impacts.00562b6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/backward-time.d0246d45.svg\";","module.exports = __webpack_public_path__ + \"static/media/snail.bbbe7b78.svg\";","module.exports = __webpack_public_path__ + \"static/media/double-shot.70211522.svg\";","module.exports = __webpack_public_path__ + \"static/media/health-normal.0da85e24.svg\";","module.exports = __webpack_public_path__ + \"static/media/embrassed-energy.58fa9df0.svg\";","module.exports = __webpack_public_path__ + \"static/media/wave-strike.1fe6dbab.svg\";","module.exports = __webpack_public_path__ + \"static/media/life-support.c0c7c040.svg\";","module.exports = __webpack_public_path__ + \"static/media/plain-dagger.0509dd2c.svg\";","module.exports = __webpack_public_path__ + \"static/media/knife-thrust.1e29ef7c.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointy-sword.bd82b38d.svg\";","module.exports = __webpack_public_path__ + \"static/media/axe-swing.6958cc19.svg\";","module.exports = __webpack_public_path__ + \"static/media/vibrating-shield.14198b16.svg\";","module.exports = __webpack_public_path__ + \"static/media/punch.2811bb9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/ubisoft-sun.30335592.svg\";","module.exports = __webpack_public_path__ + \"static/media/star-swirl.3045bd1f.svg\";","module.exports = __webpack_public_path__ + \"static/media/targeted.b4ce8dd7.svg\";","module.exports = __webpack_public_path__ + \"static/media/sticky-boot.f097559f.svg\";","module.exports = __webpack_public_path__ + \"static/media/biohazard.cdfb567d.svg\";","module.exports = __webpack_public_path__ + \"static/media/flame.332be8c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/bleeding-wound.8d92779f.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowflake-2.a0b68bb3.svg\";","module.exports = __webpack_public_path__ + \"static/media/split-cross.fa0be1a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/hand.7bd9b12d.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-wings.bb52c66a.svg\";","module.exports = __webpack_public_path__ + \"static/media/leather-armor.f3d5462f.svg\";","module.exports = __webpack_public_path__ + \"static/media/crossed-swords.b7d2c27a.svg\";","module.exports = __webpack_public_path__ + \"static/media/divided-spiral.a8e90e0d.svg\";","module.exports = __webpack_public_path__ + \"static/media/crowned-skull.458d8f78.svg\";","import { StateCoreT, StateReducerT } from './types'\r\n\r\nexport const makeReducer = (\r\n  core: StateCoreT,\r\n  initialState: any,\r\n): StateReducerT => {\r\n  return (state = initialState, action) => {\r\n    const coreFn = core[action.type]\r\n    if (coreFn) return coreFn(state, action)\r\n    return state\r\n  }\r\n}\r\n","import { useMemo } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nexport const useActions = (actions: any) => {\r\n  const dispatch = useDispatch()\r\n  return useMemo(() => bindActionCreators(actions, dispatch), [\r\n    dispatch,\r\n    actions,\r\n  ])\r\n}\r\n","import { tStats, tBaseStats } from './type'\r\nimport { tCharacterClass } from '../Character/type'\r\n\r\nexport const ZERO_STATS: tStats = {\r\n  vigor: 0,\r\n  strength: 0,\r\n  intelligence: 0,\r\n  dexterity: 0,\r\n  charisma: 0,\r\n  agility: 0,\r\n  luck: 0,\r\n\r\n  armor: 0,\r\n  resistance: 0,\r\n  evasion: 0,\r\n\r\n  maxHealthOffset: 0,\r\n  healthRegeneration: 0,\r\n  damageTakenModifier: 0,\r\n  damageTakenRangeModifiers: {\r\n    melee: 0,\r\n    ranged: 0,\r\n  },\r\n  damageReflection: {\r\n    melee: 0,\r\n    ranged: 0,\r\n  },\r\n\r\n  attackDamageOffset: 0,\r\n  attackDamageModifier: 0,\r\n  criticalChance: 0,\r\n  damageModifiers: {\r\n    flying: 0,\r\n    undead: 0,\r\n  },\r\n\r\n  queueConsolidationModifier: 0,\r\n  queueValueSet: undefined,\r\n\r\n  goldModifier: 0,\r\n  maxInspirationOffset: 0,\r\n  consumableHealthGainOffset: 0,\r\n  minHealthOffset: 0,\r\n}\r\n\r\nexport const BASE_C_STATS: tStats = {\r\n  ...ZERO_STATS,\r\n  damageTakenModifier: 1,\r\n  attackDamageModifier: 1,\r\n  criticalChance: 5,\r\n  queueConsolidationModifier: 1,\r\n  consumableHealthGainOffset: 15,\r\n}\r\n\r\nexport const CLASS_STATS: Record<tCharacterClass, tStats> = {\r\n  executioner: {\r\n    ...BASE_C_STATS,\r\n    strength: 76,\r\n    vigor: 80,\r\n    intelligence: 40,\r\n    dexterity: 52,\r\n    charisma: 72,\r\n    agility: 56,\r\n    luck: 50,\r\n    armor: 2,\r\n    resistance: 0,\r\n    evasion: 7,\r\n  },\r\n  ranger: {\r\n    ...BASE_C_STATS,\r\n    strength: 52,\r\n    vigor: 66,\r\n    intelligence: 46,\r\n    dexterity: 78,\r\n    charisma: 64,\r\n    agility: 78,\r\n    luck: 50,\r\n    armor: 1,\r\n    resistance: 0,\r\n    evasion: 20,\r\n  },\r\n  student: {\r\n    ...BASE_C_STATS,\r\n    strength: 42,\r\n    vigor: 60,\r\n    intelligence: 78,\r\n    dexterity: 66,\r\n    charisma: 70,\r\n    agility: 70,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 1,\r\n    evasion: 13,\r\n  },\r\n  patrician: {\r\n    ...BASE_C_STATS,\r\n    strength: 44,\r\n    vigor: 50,\r\n    intelligence: 70,\r\n    dexterity: 68,\r\n    charisma: 78,\r\n    agility: 68,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 1,\r\n    evasion: 11,\r\n  },\r\n  drifter: {\r\n    ...BASE_C_STATS,\r\n    strength: 70,\r\n    vigor: 70,\r\n    intelligence: 70,\r\n    dexterity: 70,\r\n    charisma: 70,\r\n    agility: 70,\r\n    luck: 30,\r\n    armor: 1,\r\n    resistance: 1,\r\n    evasion: 13,\r\n  },\r\n  enemy: BASE_C_STATS,\r\n}\r\n\r\nexport const DAMAGE_BONUS_KEYS: (keyof tStats)[] = [\r\n  'goldModifier',\r\n  'attackDamageOffset',\r\n  'attackDamageModifier',\r\n  'criticalChance',\r\n]\r\nexport const DEFENSE_BONUS_KEYS: (keyof tStats)[] = [\r\n  'armor',\r\n  'resistance',\r\n  'evasion',\r\n  'healthRegeneration',\r\n  'damageReflection',\r\n]\r\nexport const HEALTH_FOCUS_BONUS_KEYS: (keyof tStats)[] = [\r\n  'maxHealthOffset',\r\n  'maxInspirationOffset',\r\n]\r\nexport const STAT_BONUS_KEYS: (keyof tBaseStats)[] = [\r\n  'vigor',\r\n  'strength',\r\n  'intelligence',\r\n  'dexterity',\r\n  'charisma',\r\n  'agility',\r\n  'luck',\r\n]\r\n\r\nexport const STAT_KEY_LABELS: Record<keyof tStats, string> = {\r\n  strength: ' Strength',\r\n  vigor: ' Vigor',\r\n  intelligence: ' Intelligence',\r\n  dexterity: ' Dexterity',\r\n  charisma: ' Charisma',\r\n  agility: ' Agility',\r\n  luck: ' Luck',\r\n  evasion: ' Evasion',\r\n  criticalChance: '% Crit Chance',\r\n\r\n  armor: ' Armor',\r\n  resistance: ' Resistance',\r\n\r\n  maxHealthOffset: ' Health',\r\n  healthRegeneration: ' Health Regen',\r\n  damageReflection: ' Damage Reflection',\r\n  damageTakenModifier: '% Recieved Damage',\r\n  damageTakenRangeModifiers: '% Recieved Damage from certain sources',\r\n\r\n  damageModifiers: ' Damage to certain Enemeies',\r\n\r\n  queueConsolidationModifier: ' Queue Consolidation Modifier',\r\n  queueValueSet: ' Queue Value Set',\r\n\r\n  attackDamageOffset: ' Raw Damage',\r\n  attackDamageModifier: '% Attack Damage',\r\n\r\n  goldModifier: '% Gold Recieved',\r\n  maxInspirationOffset: ' Max Inspiration',\r\n  minHealthOffset: ' Minumum Health',\r\n  consumableHealthGainOffset: ' HP from Consumables',\r\n}\r\n","export const undefAdd = (\r\n  a: number | undefined,\r\n  b: number | undefined,\r\n): number | undefined => {\r\n  if (a === undefined && b === undefined) return undefined\r\n  if (a === undefined && b !== undefined) return b\r\n  if (a !== undefined && b === undefined) return a\r\n  if (a !== undefined && b !== undefined) return a + b\r\n}\r\n","import { tStats } from './type'\r\nimport { ZERO_STATS } from './constants'\r\nimport { undefAdd } from '../../util/undefAdd'\r\n\r\nexport const combineStats = (...stats: tStats[]) => {\r\n  return stats.reduce(\r\n    (result, stats) => ({\r\n      vigor: result.vigor + stats.vigor,\r\n      strength: result.strength + stats.strength,\r\n      intelligence: result.intelligence + stats.intelligence,\r\n      dexterity: result.dexterity + stats.dexterity,\r\n      charisma: result.charisma + stats.charisma,\r\n      agility: result.agility + stats.agility,\r\n      luck: result.luck + stats.luck,\r\n\r\n      armor: result.armor + stats.armor,\r\n      resistance: result.resistance + stats.resistance,\r\n      evasion: result.evasion + stats.evasion,\r\n\r\n      maxHealthOffset: result.maxHealthOffset + stats.maxHealthOffset,\r\n      healthRegeneration: result.healthRegeneration + stats.healthRegeneration,\r\n      damageTakenModifier:\r\n        result.damageTakenModifier + stats.damageTakenModifier,\r\n      damageTakenRangeModifiers: {\r\n        melee:\r\n          result.damageTakenRangeModifiers.melee +\r\n          stats.damageTakenRangeModifiers.melee,\r\n        ranged:\r\n          result.damageTakenRangeModifiers.ranged +\r\n          stats.damageTakenRangeModifiers.ranged,\r\n      },\r\n      damageReflection: {\r\n        melee: result.damageReflection.melee + stats.damageReflection.melee,\r\n        ranged: result.damageReflection.ranged + stats.damageReflection.ranged,\r\n      },\r\n\r\n      attackDamageOffset: result.attackDamageOffset + stats.attackDamageOffset,\r\n      attackDamageModifier:\r\n        result.attackDamageModifier + stats.attackDamageModifier,\r\n      criticalChance: result.criticalChance + stats.criticalChance,\r\n      damageModifiers: {\r\n        flying: result.damageModifiers.flying + stats.damageModifiers.flying,\r\n        undead: result.damageModifiers.undead + stats.damageModifiers.undead,\r\n      },\r\n\r\n      queueConsolidationModifier:\r\n        result.queueConsolidationModifier + stats.queueConsolidationModifier,\r\n      queueValueSet: undefAdd(result.queueValueSet, stats.queueValueSet),\r\n\r\n      goldModifier: result.goldModifier + stats.goldModifier,\r\n      maxInspirationOffset:\r\n        result.maxInspirationOffset + stats.maxInspirationOffset,\r\n      consumableHealthGainOffset:\r\n        result.consumableHealthGainOffset + stats.consumableHealthGainOffset,\r\n      minHealthOffset: result.minHealthOffset + stats.minHealthOffset,\r\n    }),\r\n    ZERO_STATS,\r\n  )\r\n}\r\n\r\nexport const multiplyStats = (stats: tStats, modifier: number): tStats => ({\r\n  vigor: stats.vigor * modifier,\r\n  strength: stats.strength * modifier,\r\n  intelligence: stats.intelligence * modifier,\r\n  dexterity: stats.dexterity * modifier,\r\n  charisma: stats.charisma * modifier,\r\n  agility: stats.agility * modifier,\r\n  luck: stats.luck * modifier,\r\n\r\n  armor: stats.armor * modifier,\r\n  resistance: stats.resistance * modifier,\r\n  evasion: stats.evasion * modifier,\r\n\r\n  maxHealthOffset: stats.maxHealthOffset * modifier,\r\n  healthRegeneration: stats.healthRegeneration * modifier,\r\n  damageTakenModifier: stats.damageTakenModifier * modifier,\r\n  damageTakenRangeModifiers: {\r\n    melee: stats.damageTakenRangeModifiers.melee * modifier,\r\n    ranged: stats.damageTakenRangeModifiers.ranged * modifier,\r\n  },\r\n  damageReflection: {\r\n    melee: stats.damageReflection.melee * modifier,\r\n    ranged: stats.damageReflection.ranged * modifier,\r\n  },\r\n\r\n  attackDamageOffset: stats.attackDamageOffset * modifier,\r\n  attackDamageModifier: stats.attackDamageModifier * modifier,\r\n  criticalChance: stats.criticalChance * modifier,\r\n  damageModifiers: {\r\n    flying: stats.damageModifiers.flying * modifier,\r\n    undead: stats.damageModifiers.undead * modifier,\r\n  },\r\n\r\n  queueConsolidationModifier: stats.queueConsolidationModifier * modifier,\r\n  queueValueSet: stats.queueValueSet,\r\n\r\n  goldModifier: stats.goldModifier * modifier,\r\n  maxInspirationOffset: stats.maxInspirationOffset * modifier,\r\n  consumableHealthGainOffset: stats.consumableHealthGainOffset * modifier,\r\n  minHealthOffset: stats.minHealthOffset * modifier,\r\n})\r\n","import { tStatusType, tStatusConfig } from './type'\r\nimport { ZERO_STATS } from '../Stats/constants'\r\n\r\nexport const STATUS_CONFIG: Record<tStatusType, tStatusConfig> = {\r\n  bleeding: {\r\n    name: 'Bleeding',\r\n    description: '-10 HP on your turn.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      healthRegeneration: -6,\r\n    },\r\n    immunities: [],\r\n  },\r\n  burning: {\r\n    name: 'Burning',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      healthRegeneration: -6,\r\n    },\r\n    immunities: [],\r\n  },\r\n  // TODO: Different cursed status' for different stats\r\n  'cursed-vigor': {\r\n    name: 'Cursed',\r\n    description: '-15 to Vigor',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      vigor: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-strength': {\r\n    name: 'Cursed',\r\n    description: '-15 to Strength',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      strength: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-dexterity': {\r\n    name: 'Cursed',\r\n    description: '-15 to Dexterity',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      dexterity: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-intelligence': {\r\n    name: 'Cursed',\r\n    description: '-15 to Intelligence',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      intelligence: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-charisma': {\r\n    name: 'Cursed',\r\n    description: '-15 to Charisma',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      charisma: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-agility': {\r\n    name: 'Cursed',\r\n    description: '-15 to Agility',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      agility: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'cursed-luck': {\r\n    name: 'Cursed',\r\n    description: '-15 to Luck',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      luck: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  frozen: {\r\n    name: 'Frozen',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      damageTakenModifier: 25,\r\n    },\r\n    immunities: [],\r\n  },\r\n  poisoned: {\r\n    name: 'Poisoned',\r\n    description: \"-5 HP on this character's turn and -5 to each stat.\",\r\n    canStack: true,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      vigor: -5,\r\n      strength: -5,\r\n      intelligence: -5,\r\n      dexterity: -5,\r\n      charisma: -5,\r\n      healthRegeneration: -3,\r\n    },\r\n    immunities: [],\r\n  },\r\n  // TODO: Shocked status\r\n  shocked: {\r\n    name: 'Shocked',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  stunned: {\r\n    name: 'Stunned',\r\n    description: 'This character will not progress on the battle timeline.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 2,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueConsolidationModifier: -1,\r\n    },\r\n    immunities: [],\r\n  },\r\n  // TODO: Wet Status\r\n  wet: {\r\n    name: 'Wet',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'armor-up': {\r\n    name: 'Armor Up',\r\n    description: '+5 Armor',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      armor: 5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'attack-up': {\r\n    name: 'Attack Up',\r\n    description: '+5 Attack Damage',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      attackDamageOffset: 5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'evade-up': {\r\n    name: 'Evade Up',\r\n    description: '+15 Evasion',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      evasion: 15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'resistance-up': {\r\n    name: 'Resistance Up',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      resistance: 5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'speed-up': {\r\n    name: 'Speed Up',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      agility: 15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'armor-down': {\r\n    name: 'Armor Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      armor: -5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'attack-down': {\r\n    name: 'Attack Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      attackDamageOffset: -5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'evade-down': {\r\n    name: 'Evade Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      evasion: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'resistance-down': {\r\n    name: 'Resistance Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      resistance: -5,\r\n    },\r\n    immunities: [],\r\n  },\r\n  'speed-down': {\r\n    name: 'Speed Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      agility: -15,\r\n    },\r\n    immunities: [],\r\n  },\r\n  rushed: {\r\n    name: 'Rushed',\r\n    description: 'Bring to front of queue.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 0,\r\n    },\r\n    immunities: [],\r\n  },\r\n  interrupted: {\r\n    name: 'Interrupted',\r\n    description: 'Set back 70 unites.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 70,\r\n    },\r\n    immunities: [],\r\n  },\r\n  reset: {\r\n    name: 'Reset',\r\n    description: 'Set back 100 units.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 100,\r\n    },\r\n    immunities: [],\r\n  },\r\n  evasive: {\r\n    name: 'Evasive',\r\n    description: 'Non-perfect attacks will miss when targeting this character.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  resilient: {\r\n    name: 'Resilient',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  protected: {\r\n    name: 'Protected',\r\n    description: 'Negate the next bit of damage.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  targeted: {\r\n    name: 'Targeted',\r\n    description: 'All enemies will attack this player.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 6,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: [],\r\n  },\r\n  cure: {\r\n    name: 'Cure',\r\n    description: 'Remove Poisoned, Bleeding, and Burning',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n    immunities: ['poisoned', 'bleeding', 'burning', 'frozen', 'wet', 'shocked'],\r\n  },\r\n  blessed: {\r\n    name: 'Blessed',\r\n    description: 'Temporary Curse Immunity',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: ZERO_STATS,\r\n    immunities: [\r\n      'cursed-agility',\r\n      'cursed-charisma',\r\n      'cursed-dexterity',\r\n      'cursed-intelligence',\r\n      'cursed-luck',\r\n      'cursed-strength',\r\n      'cursed-vigor',\r\n    ],\r\n  },\r\n}\r\n","export const noneg = (value: number) => (value > 0 ? value : 0)\r\n","import { tWeaponClassDamageConfig, tWeaponTypeDamageConfig } from './type'\r\n\r\nexport const GLOBAL_DAMAGE_OFFSETS: tWeaponTypeDamageConfig = {\r\n  axe: 0,\r\n  hammer: 0,\r\n  sword: 0,\r\n  greatsword: 0,\r\n  bow: 0,\r\n  dagger: 0,\r\n  scythe: 0,\r\n  catalyst: 0,\r\n  chime: 0,\r\n  pistol: 0,\r\n  fist: 0,\r\n  enemy: 0,\r\n}\r\nexport const WEAPON_DAMAGE_CONFIG: tWeaponClassDamageConfig = {\r\n  starting: {\r\n    axe: 12,\r\n    hammer: 10,\r\n    sword: 8,\r\n    greatsword: 13,\r\n    bow: 6,\r\n    dagger: 5,\r\n    scythe: 8,\r\n    catalyst: 6,\r\n    chime: 6,\r\n    pistol: 5,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  // LEVEL 1 ccc ur\r\n  rusted: {\r\n    // higher damage than tomb, but worse skills\r\n    axe: 14,\r\n    hammer: 12,\r\n    sword: 11,\r\n    greatsword: 15,\r\n    bow: 14,\r\n    dagger: 7,\r\n    scythe: 12,\r\n    catalyst: 9,\r\n    chime: 9,\r\n    pistol: 7,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  tomb: {\r\n    axe: 15,\r\n    hammer: 12,\r\n    sword: 12,\r\n    greatsword: 16,\r\n    bow: 14,\r\n    dagger: 8,\r\n    scythe: 13,\r\n    catalyst: 12,\r\n    chime: 12,\r\n    pistol: 8,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  buried: {\r\n    axe: 16,\r\n    hammer: 13,\r\n    sword: 13,\r\n    greatsword: 17,\r\n    bow: 15,\r\n    dagger: 9,\r\n    scythe: 13,\r\n    catalyst: 13,\r\n    chime: 13,\r\n    pistol: 9,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  withering: {\r\n    axe: 18,\r\n    hammer: 15,\r\n    sword: 15,\r\n    greatsword: 19,\r\n    bow: 17,\r\n    dagger: 12,\r\n    scythe: 15,\r\n    catalyst: 16,\r\n    chime: 16,\r\n    pistol: 10,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  glass: {\r\n    axe: 22,\r\n    hammer: 18,\r\n    sword: 18,\r\n    greatsword: 23,\r\n    bow: 21,\r\n    dagger: 16,\r\n    scythe: 21,\r\n    catalyst: 21,\r\n    chime: 21,\r\n    pistol: 16,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 2 ccc\r\n  iron: {\r\n    axe: 19,\r\n    hammer: 16,\r\n    sword: 16,\r\n    greatsword: 20,\r\n    bow: 18,\r\n    dagger: 12,\r\n    scythe: 16,\r\n    catalyst: 16,\r\n    chime: 16,\r\n    pistol: 12,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  steel: {\r\n    axe: 20,\r\n    hammer: 17,\r\n    sword: 17,\r\n    greatsword: 21,\r\n    bow: 19,\r\n    dagger: 13,\r\n    scythe: 17,\r\n    catalyst: 17,\r\n    chime: 17,\r\n    pistol: 13,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  stainless: {\r\n    axe: 21,\r\n    hammer: 18,\r\n    sword: 18,\r\n    greatsword: 22,\r\n    bow: 20,\r\n    dagger: 14,\r\n    scythe: 18,\r\n    catalyst: 18,\r\n    chime: 18,\r\n    pistol: 14,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 3 ur rr\r\n  ancient: {\r\n    axe: 24,\r\n    hammer: 21,\r\n    sword: 21,\r\n    greatsword: 25,\r\n    bow: 23,\r\n    dagger: 17,\r\n    scythe: 21,\r\n    catalyst: 21,\r\n    chime: 21,\r\n    pistol: 17,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  crystal: {\r\n    axe: 26,\r\n    hammer: 23,\r\n    sword: 23,\r\n    greatsword: 27,\r\n    bow: 25,\r\n    dagger: 20,\r\n    scythe: 23,\r\n    catalyst: 23,\r\n    chime: 23,\r\n    pistol: 20,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  elemental: {\r\n    axe: 24,\r\n    hammer: 21,\r\n    sword: 21,\r\n    greatsword: 25,\r\n    bow: 23,\r\n    dagger: 17,\r\n    scythe: 21,\r\n    catalyst: 21,\r\n    chime: 21,\r\n    pistol: 17,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  cursed: {\r\n    axe: 25,\r\n    hammer: 22,\r\n    sword: 22,\r\n    greatsword: 26,\r\n    bow: 24,\r\n    dagger: 18,\r\n    scythe: 22,\r\n    catalyst: 22,\r\n    chime: 22,\r\n    pistol: 18,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 4 cuu r\r\n  sharp: {\r\n    axe: 28,\r\n    hammer: 25,\r\n    sword: 25,\r\n    greatsword: 29,\r\n    bow: 26,\r\n    dagger: 21,\r\n    scythe: 25,\r\n    catalyst: 26,\r\n    chime: 26,\r\n    pistol: 21,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  hardened: {\r\n    axe: 30,\r\n    hammer: 27,\r\n    sword: 27,\r\n    greatsword: 31,\r\n    bow: 28,\r\n    dagger: 23,\r\n    scythe: 27,\r\n    catalyst: 28,\r\n    chime: 28,\r\n    pistol: 23,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  engraved: {\r\n    axe: 31,\r\n    hammer: 28,\r\n    sword: 28,\r\n    greatsword: 32,\r\n    bow: 29,\r\n    dagger: 24,\r\n    scythe: 28,\r\n    catalyst: 29,\r\n    chime: 29,\r\n    pistol: 24,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  ethereal: {\r\n    axe: 34,\r\n    hammer: 32,\r\n    sword: 32,\r\n    greatsword: 35,\r\n    bow: 33,\r\n    dagger: 27,\r\n    scythe: 31,\r\n    catalyst: 32,\r\n    chime: 32,\r\n    pistol: 27,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 5 ur mm\r\n  exquisite: {\r\n    axe: 33,\r\n    hammer: 31,\r\n    sword: 31,\r\n    greatsword: 34,\r\n    bow: 32,\r\n    dagger: 26,\r\n    scythe: 30,\r\n    catalyst: 31,\r\n    chime: 31,\r\n    pistol: 26,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  divine: {\r\n    axe: 35,\r\n    hammer: 33,\r\n    sword: 33,\r\n    greatsword: 36,\r\n    bow: 34,\r\n    dagger: 28,\r\n    scythe: 32,\r\n    catalyst: 33,\r\n    chime: 33,\r\n    pistol: 28,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  arcane: {\r\n    axe: 36,\r\n    hammer: 33,\r\n    sword: 33,\r\n    greatsword: 37,\r\n    bow: 35,\r\n    dagger: 29,\r\n    scythe: 33,\r\n    catalyst: 34,\r\n    chime: 34,\r\n    pistol: 29,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  celestial: {\r\n    axe: 38,\r\n    hammer: 35,\r\n    sword: 35,\r\n    greatsword: 39,\r\n    bow: 37,\r\n    dagger: 31,\r\n    scythe: 35,\r\n    catalyst: 36,\r\n    chime: 36,\r\n    pistol: 31,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n\r\n  // LEVEL 6\r\n  mythic: {\r\n    axe: 40,\r\n    hammer: 37,\r\n    sword: 37,\r\n    greatsword: 41,\r\n    bow: 39,\r\n    dagger: 33,\r\n    scythe: 37,\r\n    catalyst: 38,\r\n    chime: 38,\r\n    pistol: 33,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n  unique: {\r\n    axe: 40,\r\n    hammer: 37,\r\n    sword: 37,\r\n    greatsword: 41,\r\n    bow: 39,\r\n    dagger: 33,\r\n    scythe: 37,\r\n    catalyst: 38,\r\n    chime: 38,\r\n    pistol: 33,\r\n    fist: 0,\r\n    enemy: 0,\r\n  },\r\n}\r\n","import { tWeaponType } from '../type'\r\nimport { tWeaponClass } from './type'\r\n\r\nexport const BASE_WEAPON_TYPES_GOLD: Record<tWeaponType, number> = {\r\n  axe: 30,\r\n  bow: 30,\r\n  catalyst: 30,\r\n  chime: 30,\r\n  dagger: 10,\r\n  greatsword: 35,\r\n  hammer: 25,\r\n  pistol: 15,\r\n  scythe: 30,\r\n  sword: 25,\r\n  fist: 0,\r\n  enemy: 0,\r\n}\r\n\r\nexport const WEAPON_CLASS_GOLD_OFFSETS: Record<tWeaponClass, number> = {\r\n  starting: -20,\r\n  rusted: 0,\r\n  tomb: 5,\r\n  buried: 10,\r\n  withering: 30,\r\n  glass: 40,\r\n\r\n  iron: 25,\r\n  steel: 30,\r\n  stainless: 35,\r\n\r\n  ancient: 40,\r\n  crystal: 50,\r\n  elemental: 55,\r\n  cursed: 55,\r\n\r\n  sharp: 50,\r\n  hardened: 55,\r\n  engraved: 60,\r\n  ethereal: 65,\r\n\r\n  exquisite: 80,\r\n  divine: 90,\r\n  arcane: 100,\r\n  celestial: 120,\r\n\r\n  mythic: 150,\r\n  unique: 150,\r\n}\r\n","import { tWeaponRarityConfig } from './type'\r\n\r\nexport const WEAPON_CLASS_RARIES: tWeaponRarityConfig = {\r\n  starting: 'common',\r\n  rusted: 'common',\r\n  tomb: 'common',\r\n  buried: 'common',\r\n  withering: 'uncommon',\r\n  glass: 'rare',\r\n  iron: 'common',\r\n  steel: 'common',\r\n  stainless: 'common',\r\n  ancient: 'common',\r\n  crystal: 'rare',\r\n  elemental: 'rare',\r\n  cursed: 'rare',\r\n  sharp: 'common',\r\n  hardened: 'uncommon',\r\n  engraved: 'uncommon',\r\n  ethereal: 'rare',\r\n  exquisite: 'uncommon',\r\n  divine: 'rare',\r\n  arcane: 'mythic',\r\n  celestial: 'mythic',\r\n  mythic: 'mythic',\r\n  unique: 'mythic',\r\n}\r\n","import { tWeaponStatsConfig } from './type'\r\n\r\nexport const DEFAULT_WEAPON_TYPE_STATS: tWeaponStatsConfig = {\r\n  axe: {},\r\n  hammer: {},\r\n  sword: {},\r\n  greatsword: {},\r\n  bow: {},\r\n  dagger: {},\r\n  scythe: {},\r\n  catalyst: {},\r\n  chime: {},\r\n  pistol: {},\r\n  fist: {},\r\n  enemy: {},\r\n}\r\n","import { tWeaponTypeConfig } from './type'\r\n\r\nexport const DEFAULT_WEAPON_TYPE_CONFIG: tWeaponTypeConfig = {\r\n  axe: {\r\n    stat: 'strength',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  hammer: {\r\n    stat: 'strength',\r\n    twoHand: false,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  sword: {\r\n    stat: 'strength',\r\n    twoHand: false,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  greatsword: {\r\n    stat: 'strength',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  bow: {\r\n    stat: 'dexterity',\r\n    twoHand: true,\r\n    range: 'ranged',\r\n    damageType: 'physical',\r\n  },\r\n  dagger: {\r\n    stat: 'dexterity',\r\n    twoHand: false,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  scythe: {\r\n    stat: 'dexterity',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  catalyst: {\r\n    stat: 'intelligence',\r\n    twoHand: true,\r\n    range: 'ranged',\r\n    damageType: 'magic',\r\n  },\r\n  chime: {\r\n    stat: 'charisma',\r\n    twoHand: true,\r\n    range: 'ranged',\r\n    damageType: 'magic',\r\n  },\r\n  pistol: {\r\n    stat: 'charisma',\r\n    twoHand: false,\r\n    range: 'ranged',\r\n    damageType: 'physical',\r\n  },\r\n  fist: {\r\n    stat: 'vigor',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n  enemy: {\r\n    stat: 'vigor',\r\n    twoHand: true,\r\n    range: 'melee',\r\n    damageType: 'physical',\r\n  },\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { tSkill } from '../../Skill/type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { tStats } from '../../Stats/type'\r\nimport { tStatusType } from '../../Status/type'\r\nimport { tWeapon, tWeaponType } from '../type'\r\nimport { WEAPON_DAMAGE_CONFIG } from './damage'\r\nimport { BASE_WEAPON_TYPES_GOLD, WEAPON_CLASS_GOLD_OFFSETS } from './goldValue'\r\nimport { WEAPON_CLASS_RARIES } from './rarity'\r\nimport { DEFAULT_WEAPON_TYPE_STATS } from './stats'\r\nimport { tWeaponClass } from './type'\r\nimport { DEFAULT_WEAPON_TYPE_CONFIG } from './typeConfig'\r\n\r\nexport const createWeapon = (\r\n  weaponType: tWeaponType,\r\n  weaponClass: tWeaponClass,\r\n  skills: tSkill[],\r\n  stats: Partial<tStats>,\r\n  immunities: tStatusType[] = [],\r\n  goldValue?: number,\r\n): tWeapon => {\r\n  const damageValue = WEAPON_DAMAGE_CONFIG[weaponClass][weaponType]\r\n  const { stat, twoHand, range, damageType } = DEFAULT_WEAPON_TYPE_CONFIG[\r\n    weaponType\r\n  ]\r\n  const rarity = WEAPON_CLASS_RARIES[weaponClass]\r\n  const defaultStats = DEFAULT_WEAPON_TYPE_STATS[weaponType]\r\n  return {\r\n    id: v4(),\r\n    name: `${weaponClass} ${weaponType}`,\r\n    rarity,\r\n    itemType: 'weapon',\r\n    goldValue:\r\n      goldValue ||\r\n      BASE_WEAPON_TYPES_GOLD[weaponType] +\r\n        WEAPON_CLASS_GOLD_OFFSETS[weaponClass],\r\n    type: weaponType,\r\n    twoHand,\r\n    breakable: false,\r\n    damage: {\r\n      value: damageValue,\r\n      type: damageType,\r\n      range,\r\n    },\r\n    stat,\r\n    skills,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      ...defaultStats,\r\n      ...stats,\r\n    },\r\n    immunities,\r\n  }\r\n}\r\n\r\nexport const createBreakableWeapon = (\r\n  weaponType: tWeaponType,\r\n  weaponClass: tWeaponClass,\r\n  skills: tSkill[],\r\n  stats: Partial<tStats>,\r\n  immunities: tStatusType[] = [],\r\n  goldValue?: number,\r\n): tWeapon => {\r\n  return {\r\n    ...createWeapon(\r\n      weaponType,\r\n      weaponClass,\r\n      skills,\r\n      stats,\r\n      immunities,\r\n      goldValue,\r\n    ),\r\n    breakable: true,\r\n  }\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { tSkill } from '../type'\r\n\r\nexport const createSkill = (\r\n  name: string,\r\n  rolls: number,\r\n  offset: number,\r\n  rest: Partial<tSkill> = {},\r\n): tSkill => {\r\n  return {\r\n    id: v4(),\r\n    name,\r\n    damageModifier: 1,\r\n    splashDamageModifier: 0,\r\n    targetType: 'single',\r\n    damage: true,\r\n    healing: false,\r\n    rolls,\r\n    offset,\r\n    perfectSplash: false,\r\n    perfectPierce: false,\r\n    perfectStatus: [],\r\n    ...rest,\r\n  }\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const CHOP = createSkill('Chop', 3, 0)\r\nexport const SWING = createSkill('Swing', 4, 0)\r\nexport const WITHERING_SWING = createSkill('Swing', 2, 0)\r\nexport const GLASS_SWING = createSkill('Swing', 1, 0)\r\nexport const AXE_SPIN = createSkill('Axe Spin', 5, -10, {\r\n  perfectSplash: true,\r\n  splashDamageModifier: 0.5,\r\n})\r\nexport const FLURRY = createSkill('Swipe', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const CLEAVE = createSkill('Cleave', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const SLICE = createSkill('Slice', 4, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  AXE_SPIN,\r\n  CHOP,\r\n  CLEAVE,\r\n  FLURRY,\r\n  GLASS_SWING,\r\n  SLASH,\r\n  SLICE,\r\n  STUN,\r\n  SWING,\r\n  WITHERING_SWING,\r\n} from '../../../Skill/skills/axe'\r\nimport { tWeapon } from '../../type'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'axe'\r\nexport const EXECUTIONER_AXE = (): tWeapon => ({\r\n  ...createWeapon(type, 'starting', [CHOP, AXE_SPIN], {}),\r\n  name: `Executioner Axe`,\r\n})\r\n\r\nexport const RUSTED_AXE = () => createWeapon(type, 'rusted', [CHOP, SWING], {})\r\nexport const TOMB_AXE = () => createWeapon(type, 'tomb', [SWING, FLURRY], {})\r\nexport const BURRIED_AXE = () =>\r\n  createWeapon(type, 'buried', [CHOP, FLURRY, SLICE], {})\r\nexport const WITHERING_AXE = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_SWING], {})\r\nexport const GLASS_AXE = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_SWING], {})\r\n\r\nexport const IRON_AXE = () => createWeapon(type, 'iron', [CHOP, STUN], {})\r\nexport const STEEL_AXE = () =>\r\n  createWeapon(type, 'steel', [CHOP, SLICE, CLEAVE], {})\r\nexport const STAINLESS_AXE = () =>\r\n  createWeapon(type, 'stainless', [SLICE, CLEAVE, SLASH], {})\r\n\r\nexport const ANCIENT_AXE = () =>\r\n  createWeapon(type, 'ancient', [SWING, CLEAVE], {})\r\nexport const CRYSTAL_AXE = () =>\r\n  createWeapon(type, 'crystal', [GLASS_SWING], {})\r\nexport const ELEMENTAL_AXE = () => createWeapon(type, 'elemental', [CHOP], {})\r\nexport const CURSED_AXE = () => createWeapon(type, 'cursed', [CHOP], {})\r\n\r\nexport const SHARP_AXE = () =>\r\n  createWeapon(type, 'sharp', [SLICE, SLASH, AXE_SPIN], {})\r\nexport const HARDENED_AXE = () =>\r\n  createWeapon(type, 'hardened', [SLICE, SLASH, STUN], {})\r\nexport const ENGRAVED_AXE = () =>\r\n  createWeapon(type, 'engraved', [SLICE, SLASH, FLURRY], {})\r\nexport const ETHEREAL_AXE = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_SWING], {})\r\n\r\nexport const EXQUISITE_AXE = () =>\r\n  createWeapon(type, 'exquisite', [SLICE, SLASH, CLEAVE], {})\r\nexport const DIVINE_AXE = () =>\r\n  createWeapon(type, 'divine', [SLICE, SLICE, STUN], {})\r\nexport const ARCANE_AXE = () => createWeapon(type, 'arcane', [CHOP], {})\r\nexport const CELESTIAL_AXE = () =>\r\n  createBreakableWeapon(type, 'celestial', [GLASS_SWING], {})\r\n\r\nexport const AXES: tWeaponsByLevel = {\r\n  0: [EXECUTIONER_AXE],\r\n  1: [RUSTED_AXE, TOMB_AXE, BURRIED_AXE, WITHERING_AXE, GLASS_AXE],\r\n  2: [IRON_AXE, STEEL_AXE, STAINLESS_AXE],\r\n  3: [ANCIENT_AXE, CRYSTAL_AXE, ELEMENTAL_AXE, CURSED_AXE],\r\n  4: [SHARP_AXE, HARDENED_AXE, ENGRAVED_AXE, ETHEREAL_AXE],\r\n  5: [EXQUISITE_AXE, DIVINE_AXE, ARCANE_AXE, CELESTIAL_AXE],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const SHOT = createSkill('Shot', 3, 0)\r\nexport const WITHERING_SHOT = createSkill('Shot', 2, 0)\r\nexport const GLASS_SHOT = createSkill('Shot', 1, 0)\r\nexport const HEADSHOT = createSkill('Headshot', 3, -10, {\r\n  perfectPierce: true,\r\n})\r\nexport const FLURRY = createSkill('Flurry', 2, -5, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const PIN_DOWN = createSkill('Pin Down', 2, -10, {\r\n  perfectStatus: ['speed-down'],\r\n})\r\nexport const WOUNDING_SHOT = createSkill('Wounding Shot', 2, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  HEADSHOT,\r\n  SHOT,\r\n  GLASS_SHOT,\r\n  FLURRY,\r\n  PIN_DOWN,\r\n  WITHERING_SHOT,\r\n  STUN,\r\n  WOUNDING_SHOT,\r\n} from '../../../Skill/skills/bow'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'bow'\r\nexport const RANGERS_BOW = () => ({\r\n  ...createWeapon(type, 'starting', [SHOT, HEADSHOT], {}),\r\n  name: `Ranger Bow`,\r\n})\r\nexport const RUSTED_BOW = () =>\r\n  createWeapon(type, 'rusted', [SHOT, HEADSHOT], {})\r\nexport const TOMB_BOW = () =>\r\n  createWeapon(type, 'tomb', [SHOT, HEADSHOT, FLURRY], {})\r\nexport const BURRIED_BOW = () =>\r\n  createWeapon(type, 'buried', [SHOT, FLURRY, PIN_DOWN], {})\r\nexport const WITHERING_BOW = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_SHOT], {})\r\nexport const GLASS_BOW = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_SHOT], {})\r\n\r\nexport const IRON_BOW = () => createWeapon(type, 'iron', [SHOT, STUN], {})\r\nexport const STEEL_BOW = () =>\r\n  createWeapon(type, 'steel', [SHOT, HEADSHOT, WOUNDING_SHOT], {})\r\nexport const STAINLESS_BOW = () =>\r\n  createWeapon(type, 'stainless', [SHOT, FLURRY, PIN_DOWN], {})\r\n\r\nexport const ANCIENT_BOW = () =>\r\n  createWeapon(type, 'ancient', [SHOT, FLURRY, WOUNDING_SHOT], {})\r\nexport const CRYSTAL_BOW = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_SHOT], {})\r\nexport const ELEMENTAL_BOW = () => createWeapon(type, 'elemental', [SHOT], {})\r\nexport const CURSED_BOW = () => createWeapon(type, 'cursed', [SHOT], {})\r\n\r\nexport const SHARP_BOW = () =>\r\n  createWeapon(type, 'sharp', [SHOT, HEADSHOT, WOUNDING_SHOT], {})\r\nexport const HARDENED_BOW = () =>\r\n  createWeapon(type, 'hardened', [SHOT, FLURRY, PIN_DOWN], {})\r\nexport const ENGRAVED_BOW = () =>\r\n  createWeapon(type, 'engraved', [SHOT, HEADSHOT, STUN, WOUNDING_SHOT], {})\r\nexport const ETHEREAL_BOW = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_SHOT], {})\r\n\r\nexport const EXQUISITE_BOW = () =>\r\n  createWeapon(type, 'exquisite', [SHOT, HEADSHOT], {})\r\nexport const DIVINE_BOW = () =>\r\n  createWeapon(type, 'divine', [SHOT, HEADSHOT], {})\r\nexport const ARCANE_BOW = () => createWeapon(type, 'arcane', [SHOT], {})\r\nexport const CELESTIAL_BOW = () => createWeapon(type, 'celestial', [SHOT], {})\r\n\r\nexport const BOWS: tWeaponsByLevel = {\r\n  0: [RANGERS_BOW],\r\n  1: [RUSTED_BOW, TOMB_BOW, BURRIED_BOW, WITHERING_BOW, GLASS_BOW],\r\n  2: [IRON_BOW, STEEL_BOW, STAINLESS_BOW],\r\n  3: [ANCIENT_BOW, CRYSTAL_BOW, ELEMENTAL_BOW, CURSED_BOW],\r\n  4: [SHARP_BOW, HARDENED_BOW, ENGRAVED_BOW, ETHEREAL_BOW],\r\n  5: [EXQUISITE_BOW, DIVINE_BOW, ARCANE_BOW, CELESTIAL_BOW],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const BLAST = createSkill('Blast', 2, 0)\r\nexport const GLASS_BLAST = createSkill('Blast', 1, 0)\r\nexport const ARCANE = createSkill('Arcane', 3, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const NOVA = createSkill('Nova', 3, -5, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const ENFLAME = createSkill('Enflame', 4, 0, {\r\n  perfectStatus: ['burning'],\r\n})\r\nexport const ENGULF = createSkill('Engulf', 4, -10, {\r\n  perfectStatus: ['burning'],\r\n  targetType: 'group',\r\n})\r\nexport const FREEZE = createSkill('Freeze', 4, 0, {\r\n  perfectStatus: ['frozen'],\r\n})\r\nexport const SHOCK = createSkill('Shock', 4, 0, {\r\n  perfectStatus: ['shocked'],\r\n})\r\nexport const STUN = createSkill('Stun', 2, 0, {\r\n  damageModifier: 0.5,\r\n  damage: false,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const PROTECT = createSkill('Protect', 2, 0, {\r\n  damageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  perfectStatus: ['protected'],\r\n})\r\nexport const TIME_JUMP = createSkill('Time Jump', 3, -5, {\r\n  damageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  perfectStatus: ['rushed'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  ARCANE,\r\n  BLAST,\r\n  ENFLAME,\r\n  ENGULF,\r\n  GLASS_BLAST,\r\n  NOVA,\r\n  PROTECT,\r\n  STUN,\r\n  TIME_JUMP,\r\n} from '../../../Skill/skills/catalyst'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'catalyst'\r\nexport const STUDENTS_CATALYST = () => ({\r\n  ...createWeapon(type, 'starting', [ARCANE, NOVA], {}),\r\n  name: `Student Catalyst`,\r\n})\r\nexport const RUSTED_CATALYST = () =>\r\n  createWeapon(type, 'rusted', [BLAST, ARCANE], {})\r\nexport const TOMB_CATALYST = () =>\r\n  createWeapon(type, 'tomb', [BLAST, ARCANE, NOVA], {})\r\nexport const BURRIED_CATALYST = () =>\r\n  createWeapon(type, 'buried', [BLAST, ARCANE, PROTECT], {})\r\nexport const WITHERING_CATALYST = () =>\r\n  createBreakableWeapon(type, 'withering', [BLAST], {})\r\nexport const GLASS_CATALYST = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_BLAST], {})\r\n\r\nexport const IRON_CATALYST = () =>\r\n  createWeapon(type, 'iron', [ARCANE, NOVA, STUN], {})\r\nexport const STEEL_CATALYST = () =>\r\n  createWeapon(type, 'steel', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const STAINLESS_CATALYST = () =>\r\n  createWeapon(type, 'stainless', [BLAST, ARCANE, NOVA, PROTECT], {})\r\n\r\nexport const ANCIENT_CATALYST = () =>\r\n  createWeapon(type, 'ancient', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const CRYSTAL_CATALYST = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_BLAST], {})\r\nexport const ELEMENTAL_CATALYST = () =>\r\n  createWeapon(type, 'elemental', [ARCANE, ENFLAME, ENGULF], {})\r\nexport const CURSED_CATALYST = () => createWeapon(type, 'cursed', [ARCANE], {})\r\n\r\nexport const SHARP_CATALYST = () => createWeapon(type, 'sharp', [], {})\r\nexport const HARDENED_CATALYST = () =>\r\n  createWeapon(type, 'hardened', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const ENGRAVED_CATALYST = () =>\r\n  createWeapon(type, 'engraved', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const ETHEREAL_CATALYST = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_BLAST], {})\r\n\r\nexport const EXQUISITE_CATALYST = () =>\r\n  createWeapon(type, 'exquisite', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const DIVINE_CATALYST = () =>\r\n  createWeapon(type, 'divine', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const ARCANE_CATALYST = () =>\r\n  createWeapon(type, 'arcane', [ARCANE, NOVA, PROTECT, TIME_JUMP], {})\r\nexport const CELESTIAL_CATALYST = () =>\r\n  createBreakableWeapon(\r\n    type,\r\n    'celestial',\r\n    [ARCANE, NOVA, PROTECT, TIME_JUMP],\r\n    {},\r\n  )\r\n\r\nexport const CATALYSTS: tWeaponsByLevel = {\r\n  0: [STUDENTS_CATALYST],\r\n  1: [\r\n    RUSTED_CATALYST,\r\n    TOMB_CATALYST,\r\n    BURRIED_CATALYST,\r\n    WITHERING_CATALYST,\r\n    GLASS_CATALYST,\r\n  ],\r\n  2: [IRON_CATALYST, STEEL_CATALYST, STAINLESS_CATALYST],\r\n  3: [ANCIENT_CATALYST, CRYSTAL_CATALYST, ELEMENTAL_CATALYST, CURSED_CATALYST],\r\n  4: [SHARP_CATALYST, HARDENED_CATALYST, ENGRAVED_CATALYST, ETHEREAL_CATALYST],\r\n  5: [EXQUISITE_CATALYST, DIVINE_CATALYST, ARCANE_CATALYST, CELESTIAL_CATALYST],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const RING = createSkill('Ring', 3, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const WITHERING_RING = createSkill('Ring', 2, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const GLASS_RING = createSkill('Ring', 1, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const REVERBERATE = createSkill('Reverberate', 4, -5, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 2, -5, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const SLOW = createSkill('Slow', 4, 0, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['speed-down'],\r\n})\r\nexport const VANISH = createSkill('Vanish', 2, 0, {\r\n  damageModifier: 0,\r\n  damage: false,\r\n  targetType: 'ally',\r\n  perfectStatus: ['evade-up'],\r\n})\r\nexport const RUSH = createSkill('Rush', 2, 0, {\r\n  damageModifier: 0,\r\n  damage: false,\r\n  targetType: 'ally',\r\n  perfectStatus: ['rushed'],\r\n})\r\nexport const RESET = createSkill('Reset', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['reset'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  GLASS_RING,\r\n  RESET,\r\n  REVERBERATE,\r\n  RING,\r\n  RUSH,\r\n  SLOW,\r\n  STUN,\r\n  VANISH,\r\n  WITHERING_RING,\r\n} from '../../../Skill/skills/chime'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'chime'\r\nexport const PATRICIANS_CHIME = () => ({\r\n  ...createWeapon(type, 'starting', [RING, STUN], {}),\r\n  name: `Patrician Chime`,\r\n})\r\nexport const RUSTED_CHIME = () =>\r\n  createWeapon(type, 'rusted', [RING, REVERBERATE], {})\r\nexport const TOMB_CHIME = () =>\r\n  createWeapon(type, 'tomb', [RING, SLOW, VANISH], {})\r\nexport const BURRIED_CHIME = () =>\r\n  createWeapon(type, 'buried', [RING, STUN, VANISH], {})\r\nexport const WITHERING_CHIME = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_RING], {})\r\nexport const GLASS_CHIME = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_RING], {})\r\n\r\nexport const IRON_CHIME = () =>\r\n  createWeapon(type, 'iron', [RING, REVERBERATE, STUN], {})\r\nexport const STEEL_CHIME = () =>\r\n  createWeapon(type, 'steel', [RING, RUSH, RESET], {})\r\nexport const STAINLESS_CHIME = () =>\r\n  createWeapon(type, 'stainless', [RING, REVERBERATE, RUSH, RESET], {})\r\n\r\nexport const ANCIENT_CHIME = () =>\r\n  createWeapon(type, 'ancient', [RING, REVERBERATE, STUN], {})\r\nexport const CRYSTAL_CHIME = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_RING], {})\r\nexport const ELEMENTAL_CHIME = () => createWeapon(type, 'elemental', [RING], {})\r\nexport const CURSED_CHIME = () => createWeapon(type, 'cursed', [RING], {})\r\n\r\nexport const SHARP_CHIME = () =>\r\n  createWeapon(type, 'sharp', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const HARDENED_CHIME = () =>\r\n  createWeapon(type, 'hardened', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const ENGRAVED_CHIME = () =>\r\n  createWeapon(type, 'engraved', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const ETHEREAL_CHIME = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_RING], {})\r\n\r\nexport const EXQUISITE_CHIME = () =>\r\n  createWeapon(type, 'exquisite', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const DIVINE_CHIME = () =>\r\n  createWeapon(type, 'divine', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const ARCANE_CHIME = () =>\r\n  createWeapon(type, 'arcane', [RING, REVERBERATE, STUN, SLOW], {})\r\nexport const CELESTIAL_CHIME = () =>\r\n  createBreakableWeapon(type, 'celestial', [RING, REVERBERATE, STUN, SLOW], {})\r\n\r\nexport const CHIMES: tWeaponsByLevel = {\r\n  0: [PATRICIANS_CHIME],\r\n  1: [RUSTED_CHIME, TOMB_CHIME, BURRIED_CHIME, WITHERING_CHIME, GLASS_CHIME],\r\n  2: [IRON_CHIME, STEEL_CHIME, STAINLESS_CHIME],\r\n  3: [ANCIENT_CHIME, CRYSTAL_CHIME, ELEMENTAL_CHIME, CURSED_CHIME],\r\n  4: [SHARP_CHIME, HARDENED_CHIME, ENGRAVED_CHIME, ETHEREAL_CHIME],\r\n  5: [EXQUISITE_CHIME, DIVINE_CHIME, ARCANE_CHIME, CELESTIAL_CHIME],\r\n}\r\n","import { tCharacterClass } from '../Character/type'\r\nimport { tWeapon } from './type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../Stats/constants'\r\nimport { EXECUTIONER_AXE } from './builders/objects/axe'\r\nimport { RANGERS_BOW } from './builders/objects/bow'\r\nimport { STUDENTS_CATALYST } from './builders/objects/catalyst'\r\nimport { PATRICIANS_CHIME } from './builders/objects/chime'\r\n\r\nexport const CLASS_WEAPONS: Record<tCharacterClass, tWeapon | undefined> = {\r\n  executioner: EXECUTIONER_AXE(),\r\n  ranger: RANGERS_BOW(),\r\n  student: STUDENTS_CATALYST(),\r\n  patrician: PATRICIANS_CHIME(),\r\n  drifter: undefined,\r\n  enemy: undefined,\r\n}\r\n\r\nexport const BASE_WEAPON = (): tWeapon => {\r\n  return {\r\n    id: v4(),\r\n    name: '',\r\n    itemType: 'weapon',\r\n    rarity: 'common',\r\n    type: 'fist',\r\n    stat: 'strength',\r\n    goldValue: 0,\r\n    twoHand: false,\r\n    breakable: false,\r\n    damage: {\r\n      value: 0,\r\n      range: 'melee',\r\n      type: 'physical',\r\n    },\r\n    stats: ZERO_STATS,\r\n    skills: [],\r\n    immunities: [],\r\n  }\r\n}\r\n","import { tProcessedCharacter } from '../Character/type'\r\nimport { tBaseStats } from '../Stats/type'\r\nimport { getBaseStatValue } from '../Character/util'\r\nimport { DiceRoll } from 'rpg-dice-roller'\r\n\r\nexport const resolveCheck = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n  offset: number = 0,\r\n): boolean => {\r\n  const statValue = getBaseStatValue(character, key, offset)\r\n  const roll = new DiceRoll('1d100')\r\n  return roll.total <= statValue\r\n}\r\n\r\nexport const getChecksProbability = (\r\n  character: tProcessedCharacter,\r\n  checks: { key: keyof tBaseStats; offset: number }[],\r\n): number => {\r\n  const statValues = checks.map(({ key, offset }) =>\r\n    getBaseStatValue(character, key, offset),\r\n  )\r\n  const result = statValues.reduce((p, c) => {\r\n    return p * (c / 100)\r\n  }, 1)\r\n  return result\r\n}\r\n","import { tCharacterClass } from '../Character/type'\r\nimport { tArmor } from './type'\r\n\r\nexport const CLASS_ARMOR: Record<tCharacterClass, tArmor[]> = {\r\n  executioner: [],\r\n  ranger: [],\r\n  student: [],\r\n  patrician: [],\r\n  drifter: [],\r\n  enemy: [],\r\n}\r\n","import { tConsumable, tConsumableStack } from './type'\r\n\r\nexport const considateConsumableListToStack = (\r\n  consumables: tConsumable[],\r\n): tConsumableStack[] => {\r\n  let stack: tConsumableStack[] = []\r\n  const updateStackItem = (cid: string) =>\r\n    stack.map((s) =>\r\n      s.consumable.cid === cid ? { ...s, count: s.count + 1 } : s,\r\n    )\r\n  const containsId = (cid: string) =>\r\n    stack.map((s) => s.consumable.cid).includes(cid)\r\n  consumables.forEach((c) => {\r\n    if (containsId(c.cid)) {\r\n      stack = updateStackItem(c.cid)\r\n    } else {\r\n      stack = [...stack, { consumable: c, count: 1 }]\r\n    }\r\n  })\r\n  return stack\r\n}\r\n","export const Theme = {\r\n  darkBgColor: 'rgba(0,7,18,0.9)',\r\n  darkBgColorSolid: 'rgba(0,7,18,1)',\r\n  mediumBgColor: 'rgb(34,34,39)',\r\n  otherGrey: 'rgb(51,51,58)',\r\n  otherGrey2: 'rgb(72,72,80)',\r\n  badgeBgColor: 'rgb(17,17,20)',\r\n  badgeBorderColor: 'rgba(140,150,160,1)',\r\n  lightBgColor: 'rgba(255,255,255,0.4)',\r\n  textColor: 'rgba(255,255,255,0.8)',\r\n  physicalColor: '#adcae6',\r\n  magicColor: 'plum',\r\n  evasionColor: 'rgb(133, 199, 133)',\r\n  playerPartyColor: '#adcae6',\r\n  enemyPartyColor: 'lightsalmon',\r\n  meleeRangeColor: 'rgba(255,255,255,0.8)',\r\n  rangedRangeColor: 'rgba(255,255,255,0.8)',\r\n  healthRedColor: 'rgb(151,75,75)',\r\n\r\n  paddingS: '4px',\r\n  padding: '8px',\r\n  paddingL: '16px',\r\n  paddingXL: '24px',\r\n\r\n  titleFont: 'New Rocker',\r\n}\r\n","import { tCharacter, tCharacterClass } from './type'\r\nimport { Theme } from '../../theme'\r\nimport { v4 } from 'uuid'\r\nimport { BASE_C_STATS } from '../Stats/constants'\r\n\r\nexport const CHARACTER_XP_MAX: Record<number, number> = {\r\n  [-1]: 0,\r\n  0: 25,\r\n  1: 45,\r\n  2: 85,\r\n  3: 135,\r\n  4: 215,\r\n  5: 295,\r\n  6: 425,\r\n  7: 675,\r\n  8: 925,\r\n  9: 1257,\r\n  10: 1925,\r\n  11: 1400,\r\n  12: 2200,\r\n}\r\n\r\nexport const CHARACTER_CLASS_COLORS: Record<tCharacterClass, string> = {\r\n  enemy: Theme.enemyPartyColor,\r\n  executioner: '#313d47',\r\n  patrician: '#381c1c',\r\n  student: '#382838',\r\n  ranger: '#202e20',\r\n  drifter: '#111',\r\n}\r\n\r\nexport const BASE_CHARACTER = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: '',\r\n    isCharacter: true,\r\n    icon: '',\r\n    partyId: '',\r\n    level: 0,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: BASE_C_STATS,\r\n    weapon: undefined,\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    possibleRewards: [],\r\n  }\r\n}\r\n","import { tWeapon } from './type'\r\nimport { ZERO_STATS } from '../Stats/constants'\r\nimport { v4 } from 'uuid'\r\nimport { createSkill } from '../Skill/skills'\r\n\r\nexport const FISTS = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Fists`,\r\n  itemType: 'weapon',\r\n  type: 'hammer',\r\n  rarity: 'common',\r\n  stat: 'vigor',\r\n  twoHand: false,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'melee', value: 4 },\r\n  skills: [createSkill('Punch', 3, 0)],\r\n  immunities: [],\r\n  stats: ZERO_STATS,\r\n  goldValue: 0,\r\n})\r\n","import { createSkill } from '.'\r\n\r\nexport const HEAL = createSkill('Heal', 0, 0, {\r\n  damageModifier: 0,\r\n  targetType: 'self',\r\n  damage: false,\r\n  healing: true,\r\n})\r\n\r\nexport const REMOVE_CURSES = createSkill('Remove Curses', 0, 0, {\r\n  targetType: 'self',\r\n  damage: false,\r\n  damageModifier: 0,\r\n  perfectStatus: ['blessed'],\r\n})\r\n\r\nexport const POISON_KNIFE = createSkill('Poison Knife', 0, 0, {\r\n  damage: false,\r\n  damageModifier: 0,\r\n  perfectStatus: ['poisoned'],\r\n})\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { HEAL } from '../../Skill/skills/consumables'\r\n\r\nconst cid = v4()\r\nexport const GODSBEARD = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Mellow Grass',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...HEAL,\r\n      consumableId: id,\r\n    },\r\n    goldValue: 20,\r\n  }\r\n}\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { REMOVE_CURSES } from '../../Skill/skills/consumables'\r\n\r\nconst cid = v4()\r\nexport const CELESTIAL_LOTUS = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Celestial Lotus',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...REMOVE_CURSES,\r\n      consumableId: id,\r\n    },\r\n    goldValue: 20,\r\n  }\r\n}\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { POISON_KNIFE as skill } from '../../Skill/skills/consumables'\r\n\r\nconst cid = v4()\r\nexport const POISON_KNIFE = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Poison Knife',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...skill,\r\n      consumableId: id,\r\n    },\r\n    goldValue: 20,\r\n  }\r\n}\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nconst cid = v4()\r\nexport const BEAST_DRUG = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Beast Drug',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...createSkill('Beast Drug', 0, 0, {\r\n        damage: false,\r\n        targetType: 'self',\r\n        perfectStatus: ['attack-up'],\r\n      }),\r\n      consumableId: id,\r\n    },\r\n    goldValue: 20,\r\n  }\r\n}\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nconst cid = v4()\r\nexport const CURE_POTION = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Cure Potion',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: {\r\n      ...createSkill('Cure Potion', 0, 0, {\r\n        damageModifier: 0,\r\n        damage: false,\r\n        targetType: 'self',\r\n        perfectStatus: ['cure'],\r\n      }),\r\n      consumableId: id,\r\n    },\r\n    goldValue: 20,\r\n  }\r\n}\r\n","import { tItemRarity } from './type'\r\nimport { tCharacterClass } from '../Character/type'\r\nimport { tConsumable } from '../Consumable/type'\r\nimport { tArmorResourceType } from '../Armor/type'\r\nimport { GODSBEARD } from '../Consumable/objects/godsbeard'\r\nimport { CELESTIAL_LOTUS } from '../Consumable/objects/celestial_lotus'\r\nimport { POISON_KNIFE } from '../Consumable/objects/poison_knife'\r\nimport { BEAST_DRUG } from '../Consumable/objects/beast_drug'\r\nimport { CURE_POTION } from '../Consumable/objects/curing_potion'\r\n\r\nexport const ITEM_RARITY_COLORS: Record<tItemRarity, string> = {\r\n  common: 'rgba(255, 255, 255,1)',\r\n  uncommon: 'rgba(173,216,230,1)',\r\n  rare: 'rgba(221,160,221,1)',\r\n  mythic: 'rgb(255,160,122,1)',\r\n}\r\n\r\nexport const CLASS_STARTING_CONSUMABLES: Record<\r\n  tCharacterClass,\r\n  tConsumable[]\r\n> = {\r\n  executioner: [GODSBEARD(), GODSBEARD(), BEAST_DRUG()],\r\n  ranger: [GODSBEARD(), GODSBEARD(), POISON_KNIFE()],\r\n  student: [GODSBEARD(), GODSBEARD(), CELESTIAL_LOTUS()],\r\n  patrician: [GODSBEARD(), GODSBEARD(), CURE_POTION()],\r\n  drifter: [GODSBEARD()],\r\n  enemy: [],\r\n}\r\n\r\nexport const CHARACTER_RESOURCES: tArmorResourceType[] = [\r\n  'offhand',\r\n  'body',\r\n  'head',\r\n  'feet',\r\n]\r\n","import { tCharacter, tProcessedCharacter, tCharacterClass } from './type'\r\nimport { tStats, tBaseStats } from '../Stats/type'\r\nimport { combineStats } from '../Stats/util'\r\nimport { tSkill } from '../Skill/type'\r\nimport { CLASS_STATS } from '../Stats/constants'\r\nimport { tStatusType } from '../Status/type'\r\nimport { STATUS_CONFIG } from '../Status/constants'\r\nimport { v4 } from 'uuid'\r\nimport { tDamage } from '../Damage/type'\r\nimport { noneg } from '../../util/noneg'\r\nimport { CLASS_WEAPONS } from '../Weapon/constants'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { tArmorResourceType, tArmor } from '../Armor/type'\r\nimport { resolveCheck } from '../Roll/util'\r\nimport { CLASS_ARMOR } from '../Armor/constants'\r\nimport { considateConsumableListToStack } from '../Consumable/util'\r\nimport { CHARACTER_XP_MAX } from './constants'\r\nimport { tEncounterReward } from '../Encounter/type'\r\nimport { FISTS } from '../Weapon/fists'\r\nimport { CLASS_STARTING_CONSUMABLES } from '../Item/constants'\r\n\r\nexport const isCharacter = (obj: any): boolean =>\r\n  obj !== undefined && obj.isCharacter !== undefined\r\n\r\nexport const checkForProcessedCharacter = (character: tCharacter) => {\r\n  if ((character as tProcessedCharacter).processed) {\r\n    throw new Error('No Processed Characters Allowed')\r\n  }\r\n}\r\n\r\nexport const makeCharacter = (characterClass: tCharacterClass): tCharacter => {\r\n  return {\r\n    isCharacter: true,\r\n    id: v4(),\r\n    name: '',\r\n    partyId: '',\r\n    level: 0,\r\n    experience: 0,\r\n    class: characterClass,\r\n\r\n    stats: CLASS_STATS[characterClass],\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n\r\n    tags: [],\r\n\r\n    weapon: CLASS_WEAPONS[characterClass],\r\n    armor: CLASS_ARMOR[characterClass],\r\n    consumables: CLASS_STARTING_CONSUMABLES[characterClass],\r\n\r\n    status: [],\r\n    immunities: [],\r\n    possibleRewards: [],\r\n  }\r\n}\r\n\r\nexport const getSkills = (character: tCharacter): tSkill[] => {\r\n  return [\r\n    ...(character.weapon || FISTS()).skills,\r\n    ...character.armor.reduce((r, a) => [...r, ...a.skills], [] as tSkill[]),\r\n    ...considateConsumableListToStack(character.consumables).reduce(\r\n      (r, s) => [...r, s.consumable.skill],\r\n      [] as tSkill[],\r\n    ),\r\n  ]\r\n}\r\n\r\nexport const processCharacter = (\r\n  character: tCharacter,\r\n): tProcessedCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const stats: tStats = combineStats(\r\n    character.stats,\r\n    (character.weapon || FISTS()).stats,\r\n    ...character.armor.map((a) => a.stats),\r\n    ...character.status.map((s) => s.stats),\r\n  )\r\n  const skills = getSkills(character)\r\n  const statusImmunities = character.status.reduce(\r\n    (r, s) => [...r, ...s.immunities],\r\n    [] as tStatusType[],\r\n  )\r\n  const immunities = [\r\n    ...character.immunities,\r\n    ...(character?.weapon?.immunities || []),\r\n    ...character.armor.reduce(\r\n      (r, a) => [...r, ...a.immunities],\r\n      [] as tStatusType[],\r\n    ),\r\n    ...statusImmunities,\r\n  ]\r\n  const baseVigor = CLASS_STATS[character.class].vigor || character.stats.vigor\r\n  const startingHealth = 25 + Math.floor(0.1 * baseVigor)\r\n  const maxHealth =\r\n    Math.floor(\r\n      startingHealth + character.level + 0.1 * character.level * stats.vigor,\r\n    ) + stats.maxHealthOffset\r\n  const health = maxHealth - character.healthOffset\r\n  const maxInspiration = 3 + stats.maxInspirationOffset\r\n  const inspiration = maxInspiration + character.inspirationOffset\r\n\r\n  return {\r\n    processed: true,\r\n    ...character,\r\n\r\n    health,\r\n    maxHealth,\r\n    inspiration,\r\n    maxInspiration,\r\n\r\n    weapon: character.weapon || FISTS(),\r\n    stats,\r\n    immunities,\r\n    rawStats: character.stats,\r\n    skills,\r\n  }\r\n}\r\n\r\nexport const getBaseStatValue = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n  offset: number = 0,\r\n) => {\r\n  return character.stats[key] + offset\r\n}\r\n\r\nexport const getDamageResistance = (\r\n  character: tProcessedCharacter,\r\n  damage: tDamage,\r\n) => {\r\n  if (damage.type === 'physical') return character.stats.armor\r\n  if (damage.type === 'magic') return character.stats.resistance\r\n  return 0\r\n}\r\nexport const hasStatus = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.status.map((s) => s.type).includes(statusType)\r\n}\r\nexport const hasAnyStatus = (\r\n  character: tCharacter,\r\n  statusTypes: tStatusType[],\r\n) => {\r\n  return statusTypes.some((type) => hasStatus(character, type))\r\n}\r\nexport const findStatus = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.status.find((s) => s.type === statusType)\r\n}\r\nexport const hasImmunity = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.immunities.includes(statusType)\r\n}\r\nexport const getReflectedDamage = (target: tCharacter, rawDamage: tDamage) => {\r\n  return {\r\n    ...rawDamage,\r\n    value: target.stats.damageReflection[rawDamage.range],\r\n  }\r\n}\r\nexport const getRawDamage = (\r\n  source: tProcessedCharacter,\r\n  target: tProcessedCharacter,\r\n  rawDamage: tDamage,\r\n): tDamage => {\r\n  let damageModifier = 1\r\n  target.tags.forEach((tag) => {\r\n    if (source.stats.damageModifiers[tag]) {\r\n      damageModifier += source.stats.damageModifiers[tag]\r\n    }\r\n  })\r\n  return {\r\n    ...rawDamage,\r\n    value: rawDamage.value * damageModifier,\r\n  }\r\n}\r\n\r\nexport const commitDamage = (\r\n  character: tCharacter,\r\n  damage: tDamage,\r\n  ignoreResistance: boolean,\r\n): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const pc = processCharacter(character)\r\n  const resistance = ignoreResistance ? 0 : getDamageResistance(pc, damage)\r\n  const damageTakenModifier =\r\n    pc.stats.damageTakenModifier +\r\n    pc.stats.damageTakenRangeModifiers[damage.range]\r\n  const rawDamageValue = damage.value * damageTakenModifier\r\n  if (hasStatus(character, 'protected')) {\r\n    return {\r\n      ...character,\r\n      status: character.status.filter((s) => s.type !== 'protected'),\r\n    }\r\n  }\r\n  return {\r\n    ...character,\r\n    healthOffset: Math.ceil(\r\n      character.healthOffset + noneg(rawDamageValue - resistance),\r\n    ),\r\n  }\r\n}\r\n\r\nexport const decrementStatusDurations = (character: tCharacter): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    status: character.status\r\n      .map((status) => ({ ...status, duration: status.duration - 1 }))\r\n      .filter((status) => status.duration !== 0),\r\n  }\r\n}\r\nexport const addStatus = (\r\n  character: tCharacter,\r\n  type: tStatusType,\r\n  durationOverride?: number,\r\n): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const statusConfig = STATUS_CONFIG[type]\r\n  const existingStatus = findStatus(character, type)\r\n  if (hasImmunity(processCharacter(character), type)) {\r\n    return character\r\n  }\r\n  if (existingStatus && !statusConfig.canStack) {\r\n    return character\r\n  }\r\n  if (existingStatus && statusConfig.canStack) {\r\n    return {\r\n      ...character,\r\n      status: [\r\n        ...character.status.filter((s) => s.type !== type),\r\n        { ...existingStatus, stack: existingStatus.stack + 1 },\r\n      ],\r\n    }\r\n  }\r\n  return {\r\n    ...character,\r\n    status: [\r\n      ...character.status,\r\n      {\r\n        type,\r\n        stats: statusConfig.stats,\r\n        immunities: statusConfig.immunities,\r\n        duration: durationOverride || statusConfig.duration,\r\n        stack: 1,\r\n      },\r\n    ],\r\n  }\r\n}\r\n\r\nexport const addMultipleStatus = (\r\n  character: tCharacter,\r\n  types: tStatusType[],\r\n): tCharacter => {\r\n  return types.reduce((result, type) => {\r\n    return addStatus(result, type)\r\n  }, character)\r\n}\r\n\r\nexport const checkStatus = (character: tCharacter) => {\r\n  checkForProcessedCharacter(character)\r\n  let c = { ...character }\r\n  character.status.forEach((status) => {\r\n    if (hasImmunity(processCharacter(character), status.type)) {\r\n      c = {\r\n        ...c,\r\n        status: c.status.filter((c) => c.type !== status.type),\r\n      }\r\n    }\r\n  })\r\n  return c\r\n}\r\n\r\nexport const removeTemporaryStatus = (character: tCharacter): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    status: character.status.filter((s) => {\r\n      const config = STATUS_CONFIG[s.type]\r\n      return !config.isTemporary\r\n    }),\r\n  }\r\n}\r\n\r\nexport const equipArmor = (\r\n  character: tCharacter,\r\n  armor: tArmor,\r\n): { character: tCharacter; armor: tArmor | undefined } => {\r\n  checkForProcessedCharacter(character)\r\n  const existingArmor = character.armor.find(\r\n    (a) => a.resource === armor.resource,\r\n  )\r\n  return {\r\n    character: {\r\n      ...character,\r\n      armor: existingArmor\r\n        ? [...character.armor.filter((a) => a.id !== existingArmor.id), armor]\r\n        : [...character.armor, armor],\r\n    },\r\n    armor: existingArmor,\r\n  }\r\n}\r\n\r\nexport const unequipArmor = (\r\n  character: tCharacter,\r\n  resource: tArmorResourceType,\r\n): { character: tCharacter; armor: tArmor | undefined } => {\r\n  checkForProcessedCharacter(character)\r\n  const armor = character.armor.find((a) => a.resource === resource)\r\n  return {\r\n    character: {\r\n      ...character,\r\n      armor: character.armor.filter((a) => a.resource !== resource),\r\n    },\r\n    armor,\r\n  }\r\n}\r\n\r\nexport const equipWeapon = (\r\n  character: tCharacter,\r\n  weapon: tWeapon,\r\n): { character: tCharacter; weapon: tWeapon | undefined } => {\r\n  const existingWeapon = character.weapon\r\n  return {\r\n    character: {\r\n      ...character,\r\n      weapon,\r\n    },\r\n    weapon: existingWeapon,\r\n  }\r\n}\r\n\r\n// DO NOT USE\r\nexport const unequipWeapon = (\r\n  character: tCharacter,\r\n): { character: tCharacter; weapon: tWeapon | undefined } => {\r\n  const existingWeapon = character.weapon\r\n  return {\r\n    character: {\r\n      ...character,\r\n      // weapon: undefined\r\n    },\r\n    weapon: existingWeapon,\r\n  }\r\n}\r\n\r\nexport const getRewardsFromCharacter = (\r\n  character: tProcessedCharacter,\r\n  checkedCharacter: tProcessedCharacter,\r\n): tEncounterReward[] => {\r\n  let index: number | undefined = undefined\r\n  character.possibleRewards.forEach((rewards, i) => {\r\n    const luckReslt = resolveCheck(checkedCharacter, 'luck')\r\n    if (luckReslt) {\r\n      index = i\r\n    }\r\n  })\r\n  if (index !== undefined) {\r\n    return character.possibleRewards[index]\r\n      ? [character.possibleRewards[index]]\r\n      : []\r\n  }\r\n  return []\r\n}\r\n\r\nexport const addExperience = (\r\n  character: tCharacter,\r\n  xp: number,\r\n): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const xpToNextLevel = CHARACTER_XP_MAX[character.level]\r\n  const experience = character.experience + xp\r\n  if (experience > xpToNextLevel) {\r\n    return addExperience(\r\n      levelUp({\r\n        ...character,\r\n        experience,\r\n      }),\r\n      0,\r\n    )\r\n  }\r\n  return {\r\n    ...character,\r\n    experience,\r\n  }\r\n}\r\n\r\nexport const levelUp = (character: tCharacter): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const experience = character.experience - CHARACTER_XP_MAX[character.level]\r\n  return {\r\n    ...character,\r\n    level: character.level + 1,\r\n    healthOffset: Math.floor(character.healthOffset / 2),\r\n    experience,\r\n    status: character.status.filter((s) => s.type !== 'poisoned'),\r\n  }\r\n}\r\n","export const getRandom = <T>(items: T[]) =>\r\n  items[Math.floor(Math.random() * items.length)]\r\n","import { v4 } from 'uuid'\r\nimport { tItemRarity } from '../../Item/type'\r\nimport { tSkill } from '../../Skill/type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { tStats } from '../../Stats/type'\r\nimport { tStatusType } from '../../Status/type'\r\nimport { tArmor, tArmorResourceType, tArmorType } from '../type'\r\n\r\nexport const createArmor = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  resource: tArmorResourceType,\r\n  type: tArmorType,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n): tArmor => {\r\n  return {\r\n    id: v4(),\r\n    name,\r\n    rarity,\r\n    itemType: 'armor',\r\n    resource,\r\n    type,\r\n    stat: 'vigor',\r\n    goldValue,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      ...stats,\r\n    },\r\n    skills,\r\n    immunities,\r\n  }\r\n}\r\n\r\nexport const createFootwear = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'feet',\r\n    'footwear',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createHat = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(name, rarity, 'head', 'hat', goldValue, stats, skills, immunities)\r\n\r\nexport const createHeavyArmor = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'body',\r\n    'heavy-armor',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createHelmet = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'head',\r\n    'helmet',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createLightArmor = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'body',\r\n    'light-armor',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createMagicArmor = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'body',\r\n    'magic-armor',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createMagicHat = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'head',\r\n    'magic-hat',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createShield = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'offhand',\r\n    'shield',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n\r\nexport const createWard = (\r\n  name: string,\r\n  rarity: tItemRarity,\r\n  goldValue: number,\r\n  stats: Partial<tStats> = {},\r\n  skills: tSkill[] = [],\r\n  immunities: tStatusType[] = [],\r\n) =>\r\n  createArmor(\r\n    name,\r\n    rarity,\r\n    'offhand',\r\n    'ward',\r\n    goldValue,\r\n    stats,\r\n    skills,\r\n    immunities,\r\n  )\r\n","import { tArmor } from '../../type'\r\nimport {\r\n  ADVENTURER_BOOTS,\r\n  ADVENTURER_CLOAK,\r\n  ADVENTURER_HOOD,\r\n} from './adventure'\r\nimport {\r\n  ANTIQUATED_ATTIRE,\r\n  ANTIQUATED_HAT,\r\n  ANTIQUATED_SHOES,\r\n} from './antiquated'\r\nimport { APPRENTICE_CAP, APPRENTICE_ROBE, APPRENTICE_SHOES } from './apprentice'\r\nimport {\r\n  ARISTOCRAT_ATTIRE,\r\n  ARISTOCRAT_HAT,\r\n  ARISTOCRAT_SHOES,\r\n} from './aristocrat'\r\nimport { BONE_ARMOR, BONE_BOOTS, BONE_HELMET } from './bone'\r\nimport {\r\n  EXECUTIONER_ARMOR,\r\n  EXECUTIONER_BOOTS,\r\n  EXECUTIONER_HELMET,\r\n} from './executioner'\r\nimport {\r\n  GRAVEGUARD_ARMOR,\r\n  GRAVEGUARD_BOOTS,\r\n  GRAVEGUARD_HELMET,\r\n} from './graveguard'\r\nimport { HUNTER_BOOTS, HUNTER_CLOAK, HUNTER_HOOD } from './hunter'\r\nimport { IRON_ARMOR, IRON_BOOTS, IRON_HELMET } from './iron'\r\nimport { NOVICE_HAT, NOVICE_ROBES, NOVICE_SHOES } from './novice'\r\nimport { PATRICIAN_ATTIRE, PATRICIAN_HAT, PATRICIAN_SHOES } from './patrician'\r\nimport { RANGER_BOOTS, RANGER_CLOAK, RANGER_HOOD } from './ranger'\r\nimport { STUDENT_BOOTS, STUDENT_CAP, STUDENT_ROBES } from './student'\r\nimport { TOMB_ARMOR, TOMB_BOOTS, TOMB_HELMET } from './tomb'\r\n\r\nexport const ARMOR_BY_LEVEL: Record<number, (() => tArmor)[]> = {\r\n  0: [\r\n    RANGER_HOOD,\r\n    RANGER_CLOAK,\r\n    RANGER_BOOTS,\r\n    PATRICIAN_HAT,\r\n    PATRICIAN_ATTIRE,\r\n    PATRICIAN_SHOES,\r\n    EXECUTIONER_HELMET,\r\n    EXECUTIONER_ARMOR,\r\n    EXECUTIONER_BOOTS,\r\n    STUDENT_CAP,\r\n    STUDENT_ROBES,\r\n    STUDENT_BOOTS,\r\n    TOMB_HELMET,\r\n    TOMB_ARMOR,\r\n    TOMB_BOOTS,\r\n  ],\r\n  1: [\r\n    ADVENTURER_HOOD,\r\n    ADVENTURER_CLOAK,\r\n    ADVENTURER_BOOTS,\r\n    ARISTOCRAT_HAT,\r\n    ARISTOCRAT_ATTIRE,\r\n    ARISTOCRAT_SHOES,\r\n    GRAVEGUARD_HELMET,\r\n    GRAVEGUARD_ARMOR,\r\n    GRAVEGUARD_BOOTS,\r\n    APPRENTICE_CAP,\r\n    APPRENTICE_ROBE,\r\n    APPRENTICE_SHOES,\r\n  ],\r\n  2: [\r\n    HUNTER_HOOD,\r\n    HUNTER_CLOAK,\r\n    HUNTER_BOOTS,\r\n    ANTIQUATED_HAT,\r\n    ANTIQUATED_ATTIRE,\r\n    ANTIQUATED_SHOES,\r\n    IRON_HELMET,\r\n    IRON_ARMOR,\r\n    IRON_BOOTS,\r\n    BONE_HELMET,\r\n    BONE_ARMOR,\r\n    BONE_BOOTS,\r\n    NOVICE_HAT,\r\n    NOVICE_ROBES,\r\n    NOVICE_SHOES,\r\n  ],\r\n}\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const RANGER_HOOD = () =>\r\n  createHat('Ranger Hood', 'common', 5, {\r\n    resistance: 1,\r\n    evasion: 3,\r\n    dexterity: 1,\r\n  })\r\nexport const RANGER_CLOAK = () =>\r\n  createLightArmor('Ranger Cloak', 'common', 10, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    evasion: 5,\r\n    dexterity: 2,\r\n    charisma: -2,\r\n  })\r\nexport const RANGER_BOOTS = () =>\r\n  createFootwear('Ranger Boots', 'common', 5, {\r\n    armor: 1,\r\n    evasion: 2,\r\n    dexterity: 1,\r\n    agility: 1,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const PATRICIAN_HAT = () =>\r\n  createHat('Patrician Hat', 'common', 5, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    charisma: 1,\r\n  })\r\n\r\nexport const PATRICIAN_ATTIRE = () =>\r\n  createLightArmor('Patrician Attire', 'common', 15, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    charisma: 2,\r\n    luck: 2,\r\n  })\r\n\r\nexport const PATRICIAN_SHOES = () =>\r\n  createFootwear('Patrician Shoes', 'common', 7, {\r\n    armor: 1,\r\n    resistance: 2,\r\n    charisma: 1,\r\n    dexterity: -2,\r\n    luck: 1,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const EXECUTIONER_HELMET = () =>\r\n  createHelmet('Executioner Helmet', 'common', 5, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    vigor: 1,\r\n  })\r\n\r\nexport const EXECUTIONER_ARMOR = () =>\r\n  createHeavyArmor('Executioner Armor', 'common', 10, {\r\n    armor: 3,\r\n    resistance: 2,\r\n    strength: 2,\r\n    intelligence: -2,\r\n  })\r\n\r\nexport const EXECUTIONER_BOOTS = () =>\r\n  createFootwear('Executioner Boots', 'common', 5, {\r\n    armor: 1,\r\n    resistance: 1,\r\n    strength: 1,\r\n    vigor: 1,\r\n  })\r\n","import { createFootwear, createMagicArmor, createMagicHat } from '..'\r\n\r\nexport const STUDENT_CAP = () =>\r\n  createMagicHat('Student Cap', 'common', 5, {\r\n    resistance: 2,\r\n    intelligence: 1,\r\n  })\r\n\r\nexport const STUDENT_ROBES = () =>\r\n  createMagicArmor('Student Robes', 'common', 10, {\r\n    armor: 1,\r\n    resistance: 3,\r\n    strength: -2,\r\n    intelligence: 2,\r\n  })\r\n\r\nexport const STUDENT_BOOTS = () =>\r\n  createFootwear('Student Boots', 'common', 5, {\r\n    resistance: 2,\r\n    intelligence: 1,\r\n    strength: -2,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const TOMB_HELMET = () =>\r\n  createHelmet('Tomb Helment', 'common', 10, {\r\n    armor: 3,\r\n    resistance: 3,\r\n  })\r\n\r\nexport const TOMB_ARMOR = () =>\r\n  createHeavyArmor('Tomb Armor', 'common', 30, {\r\n    armor: 7,\r\n    resistance: 5,\r\n  })\r\n\r\nexport const TOMB_BOOTS = () =>\r\n  createFootwear('Tomb Boots', 'common', 10, {\r\n    armor: 3,\r\n    resistance: 2,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const ADVENTURER_HOOD = () =>\r\n  createHat('Adventurer Hood', 'common', 10, {\r\n    resistance: 2,\r\n    evasion: 3,\r\n    dexterity: 2,\r\n  })\r\n\r\nexport const ADVENTURER_CLOAK = () =>\r\n  createLightArmor('Adventurer Cloak', 'uncommon', 40, {\r\n    armor: 3,\r\n    resistance: 3,\r\n    evasion: 6,\r\n    dexterity: 3,\r\n    charisma: -4,\r\n  })\r\n\r\nexport const ADVENTURER_BOOTS = () =>\r\n  createFootwear('Adventurer Boots', 'common', 10, {\r\n    armor: 2,\r\n    evasion: 3,\r\n    dexterity: 2,\r\n    agility: 2,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const ARISTOCRAT_HAT = () =>\r\n  createHat('Aristocrat Hat', 'common', 10, {\r\n    armor: 1,\r\n    resistance: 2,\r\n    maxInspirationOffset: 1,\r\n    charisma: 2,\r\n    luck: 2,\r\n  })\r\n\r\nexport const ARISTOCRAT_ATTIRE = () =>\r\n  createLightArmor('Aristocrat Attire', 'uncommon', 40, {\r\n    armor: 4,\r\n    resistance: 4,\r\n    charisma: 3,\r\n    luck: 3,\r\n  })\r\n\r\nexport const ARISTOCRAT_SHOES = () =>\r\n  createFootwear('Aristocrat Shoes', 'common', 10, {\r\n    armor: 1,\r\n    resistance: 2,\r\n    dexterity: -2,\r\n    charisma: 2,\r\n    luck: 2,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const GRAVEGUARD_HELMET = () =>\r\n  createHelmet('Graveguard Helmet', 'common', 10, {\r\n    armor: 2,\r\n    resistance: 1,\r\n    healthRegeneration: 1,\r\n  })\r\n\r\nexport const GRAVEGUARD_ARMOR = () =>\r\n  createHeavyArmor('Graveguard Armor', 'uncommon', 30, {\r\n    armor: 6,\r\n    resistance: 1,\r\n    strength: 2,\r\n    vigor: 2,\r\n  })\r\n\r\nexport const GRAVEGUARD_BOOTS = () =>\r\n  createFootwear('Graveguard Boots', 'common', 10, {\r\n    armor: 2,\r\n    resistance: 1,\r\n    vigor: 2,\r\n  })\r\n","import { createFootwear, createMagicArmor, createMagicHat } from '..'\r\n\r\nexport const APPRENTICE_CAP = () =>\r\n  createMagicHat('Apprentice Cap', 'common', 10, {\r\n    resistance: 4,\r\n    maxInspirationOffset: 1,\r\n    intelligence: 2,\r\n  }) // confuse immunity\r\n\r\nexport const APPRENTICE_ROBE = () =>\r\n  createMagicArmor(\r\n    'Apprentice Robe',\r\n    'uncommon',\r\n    40,\r\n    {\r\n      armor: 2,\r\n      resistance: 6,\r\n      maxInspirationOffset: 1,\r\n      strength: -3,\r\n      intelligence: 3,\r\n    },\r\n    [],\r\n    [\r\n      'cursed-agility',\r\n      'cursed-charisma',\r\n      'cursed-dexterity',\r\n      'cursed-intelligence',\r\n      'cursed-luck',\r\n      'cursed-strength',\r\n      'cursed-vigor',\r\n    ],\r\n  )\r\n\r\nexport const APPRENTICE_SHOES = () =>\r\n  createFootwear('Apprentice Shoes', 'common', 10, {\r\n    armor: 1,\r\n    resistance: 3,\r\n    strength: -2,\r\n    intelligence: 2,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const HUNTER_HOOD = () =>\r\n  createHat('Hunter Hood', 'common', 15, {\r\n    resistance: 3,\r\n    evasion: 4,\r\n    dexterity: 3,\r\n  })\r\n\r\nexport const HUNTER_CLOAK = () =>\r\n  createLightArmor('Hunter Cloak', 'uncommon', 50, {\r\n    armor: 5,\r\n    resistance: 5,\r\n    evasion: 7,\r\n    dexterity: 4,\r\n    charisma: -4,\r\n    agility: 2,\r\n  })\r\n\r\nexport const HUNTER_BOOTS = () =>\r\n  createFootwear('Hunter Boots', 'common', 15, {\r\n    armor: 3,\r\n    evasion: 4,\r\n    dexterity: 3,\r\n    agility: 3,\r\n  })\r\n","import { createFootwear, createHat, createLightArmor } from '..'\r\n\r\nexport const ANTIQUATED_HAT = () =>\r\n  createHat('Antiquated Hat', 'common', 15, {\r\n    armor: 2,\r\n    resistance: 3,\r\n    maxInspirationOffset: 1,\r\n    charisma: 3,\r\n    luck: 3,\r\n  })\r\n\r\nexport const ANTIQUATED_ATTIRE = () =>\r\n  createLightArmor('Antiquated Attire', 'uncommon', 50, {\r\n    armor: 6,\r\n    resistance: 6,\r\n    dexterity: -4,\r\n    charisma: 4,\r\n    luck: 4,\r\n  })\r\n\r\nexport const ANTIQUATED_SHOES = () =>\r\n  createFootwear('Antiquated Shoes', 'common', 15, {\r\n    armor: 2,\r\n    resistance: 3,\r\n    dexterity: -4,\r\n    charisma: 3,\r\n    luck: 3,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const IRON_HELMET = () =>\r\n  createHelmet(\r\n    'Iron Helmet',\r\n    'common',\r\n    15,\r\n    {\r\n      armor: 4,\r\n      strength: 2,\r\n      dexterity: -4,\r\n    },\r\n    [],\r\n    ['stunned'],\r\n  )\r\n\r\nexport const IRON_ARMOR = () =>\r\n  createHeavyArmor('Iron Armor', 'uncommon', 50, {\r\n    armor: 7,\r\n    resistance: 1,\r\n    strength: 3,\r\n    intelligence: -3,\r\n  })\r\n\r\nexport const IRON_BOOTS = () =>\r\n  createFootwear('Iron Boots', 'common', 15, {\r\n    armor: 2,\r\n    resistance: 2,\r\n    healthRegeneration: 1,\r\n    vigor: 4,\r\n  })\r\n","import { createFootwear, createHeavyArmor, createHelmet } from '..'\r\n\r\nexport const BONE_HELMET = () =>\r\n  createHelmet('Bone Helmet', 'common', 15, {\r\n    armor: 2,\r\n    resistance: 2,\r\n    healthRegeneration: 1,\r\n    vigor: 3,\r\n  }) // bonus damage\r\n\r\nexport const BONE_ARMOR = () =>\r\n  createHeavyArmor(\r\n    'Bone Armor',\r\n    'uncommon',\r\n    50,\r\n    {\r\n      armor: 5,\r\n      resistance: 5,\r\n      maxHealthOffset: 5,\r\n      healthRegeneration: 2,\r\n      vigor: 5,\r\n    },\r\n    [],\r\n    ['frozen'],\r\n  )\r\n\r\nexport const BONE_BOOTS = () =>\r\n  createFootwear('Bone Boots', 'common', 15, {\r\n    armor: 2,\r\n    resistance: 2,\r\n    healthRegeneration: 1,\r\n    vigor: 4,\r\n  })\r\n","import { createFootwear, createMagicArmor, createMagicHat } from '..'\r\n\r\nexport const NOVICE_HAT = () =>\r\n  createMagicHat('Novice Hat', 'common', 15, {\r\n    resistance: 6,\r\n    intelligence: 3,\r\n  }) // confuse immunity\r\n\r\nexport const NOVICE_ROBES = () =>\r\n  createMagicArmor('Novice Robes', 'uncommon', 50, {\r\n    armor: 3,\r\n    resistance: 9,\r\n    maxInspirationOffset: 1,\r\n    strength: -4,\r\n    intelligence: 4,\r\n  })\r\n\r\nexport const NOVICE_SHOES = () =>\r\n  createFootwear('Novice Shoes', 'common', 15, {\r\n    armor: 2,\r\n    resistance: 4,\r\n    strength: -3,\r\n    intelligence: 3,\r\n  })\r\n","import { createSkill } from '.'\r\n\r\nexport const SMASH = createSkill('Smash', 3, 0)\r\nexport const WITHERING_SMASH = createSkill('Smash', 2, 0)\r\nexport const GLASS_SMASH = createSkill('Smash', 1, 0)\r\nexport const RIPPLE = createSkill('Ripple', 4, -10, {\r\n  perfectSplash: true,\r\n})\r\nexport const EARTHQUAKE = createSkill('Earthquake', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const CRUSH = createSkill('Crush', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const STAB = createSkill('Stab', 4, 0, {\r\n  perfectPierce: true,\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  CRUSH,\r\n  EARTHQUAKE,\r\n  GLASS_SMASH,\r\n  RIPPLE,\r\n  SMASH,\r\n  WITHERING_SMASH,\r\n  STUN,\r\n} from '../../../Skill/skills/blunt'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'hammer'\r\nexport const RUSTED_HAMMER = () =>\r\n  createWeapon(type, 'rusted', [SMASH, RIPPLE], {})\r\nexport const TOMB_HAMMER = () =>\r\n  createWeapon(type, 'tomb', [SMASH, EARTHQUAKE], {})\r\nexport const BURRIED_HAMMER = () =>\r\n  createWeapon(type, 'buried', [SMASH, CRUSH], {})\r\nexport const WITHERING_HAMMER = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_SMASH], {})\r\nexport const GLASS_HAMMER = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_SMASH], {})\r\n\r\nexport const IRON_HAMMER = () => createWeapon(type, 'iron', [SMASH, STUN], {})\r\nexport const STEEL_HAMMER = () =>\r\n  createWeapon(type, 'steel', [SMASH, EARTHQUAKE, RIPPLE], {})\r\nexport const STAINLESS_HAMMER = () =>\r\n  createWeapon(type, 'stainless', [SMASH, CRUSH, RIPPLE], {})\r\n\r\nexport const ANCIENT_HAMMER = () =>\r\n  createWeapon(type, 'ancient', [SMASH, STUN], {})\r\nexport const CRYSTAL_HAMMER = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_SMASH], {})\r\nexport const ELEMENTAL_HAMMER = () =>\r\n  createWeapon(type, 'elemental', [SMASH], {})\r\nexport const CURSED_HAMMER = () => createWeapon(type, 'cursed', [SMASH], {})\r\n\r\nexport const SHARP_HAMMER = () =>\r\n  createWeapon(type, 'sharp', [SMASH, STUN, CRUSH], {})\r\nexport const HARDENED_HAMMER = () =>\r\n  createWeapon(type, 'hardened', [SMASH, CRUSH, EARTHQUAKE, RIPPLE], {})\r\nexport const ENGRAVED_HAMMER = () => createWeapon(type, 'engraved', [], {})\r\nexport const ETHEREAL_HAMMER = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_SMASH], {})\r\n\r\nexport const EXQUISITE_HAMMER = () =>\r\n  createWeapon(type, 'exquisite', [SMASH], {})\r\nexport const DIVINE_HAMMER = () => createWeapon(type, 'divine', [SMASH], {})\r\nexport const ARCANE_HAMMER = () => createWeapon(type, 'arcane', [SMASH], {})\r\nexport const CELESTIAL_HAMMER = () =>\r\n  createBreakableWeapon(type, 'celestial', [SMASH], {})\r\n\r\nexport const HAMMERS: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [\r\n    RUSTED_HAMMER,\r\n    TOMB_HAMMER,\r\n    BURRIED_HAMMER,\r\n    WITHERING_HAMMER,\r\n    GLASS_HAMMER,\r\n  ],\r\n  2: [IRON_HAMMER, STEEL_HAMMER, STAINLESS_HAMMER],\r\n  3: [ANCIENT_HAMMER, CRYSTAL_HAMMER, ELEMENTAL_HAMMER, CURSED_HAMMER],\r\n  4: [SHARP_HAMMER, HARDENED_HAMMER, ENGRAVED_HAMMER, ETHEREAL_HAMMER],\r\n  5: [EXQUISITE_HAMMER, DIVINE_HAMMER, ARCANE_HAMMER, CELESTIAL_HAMMER],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const STRIKE = createSkill('Strike', 4, 0)\r\nexport const WITHERING_STRIKE = createSkill('Strike', 2, 0)\r\nexport const GLASS_STRIKE = createSkill('Strike', 1, 0)\r\nexport const SWING = createSkill('Swing', 5, 0)\r\nexport const FLURRY = createSkill('Flurry', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const LUNGE = createSkill('Lunge', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const STAB = createSkill('Stab', 2, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  GLASS_STRIKE,\r\n  LUNGE,\r\n  SLASH,\r\n  STAB,\r\n  STRIKE,\r\n  SWING,\r\n  WITHERING_STRIKE,\r\n} from '../../../Skill/skills/dagger'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'dagger'\r\nexport const RUSTED_DAGGER = () =>\r\n  createWeapon(type, 'rusted', [STRIKE, SWING], {})\r\nexport const TOMB_DAGGER = () => createWeapon(type, 'tomb', [SWING, LUNGE], {})\r\nexport const BURRIED_DAGGER = () =>\r\n  createWeapon(type, 'buried', [STRIKE, STAB], {})\r\nexport const WITHERING_DAGGER = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_STRIKE], {})\r\nexport const GLASS_DAGGER = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_STRIKE], {})\r\n\r\nexport const IRON_DAGGER = () =>\r\n  createWeapon(type, 'iron', [STRIKE, LUNGE, STAB], {})\r\nexport const STEEL_DAGGER = () =>\r\n  createWeapon(type, 'steel', [STRIKE, LUNGE, SLASH], {})\r\nexport const STAINLESS_DAGGER = () =>\r\n  createWeapon(type, 'stainless', [STRIKE, LUNGE, SLASH], {})\r\n\r\nexport const ANCIENT_DAGGER = () =>\r\n  createWeapon(type, 'ancient', [STRIKE, LUNGE, STAB], {})\r\nexport const CRYSTAL_DAGGER = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_STRIKE], {})\r\nexport const ELEMENTAL_DAGGER = () =>\r\n  createWeapon(type, 'elemental', [STRIKE, LUNGE, STAB], {})\r\nexport const CURSED_DAGGER = () =>\r\n  createWeapon(type, 'cursed', [STRIKE, LUNGE, SLASH], {})\r\n\r\nexport const SHARP_DAGGER = () =>\r\n  createWeapon(type, 'sharp', [STRIKE, LUNGE, STAB], {})\r\nexport const HARDENED_DAGGER = () =>\r\n  createWeapon(type, 'hardened', [STRIKE, LUNGE, SLASH], {})\r\nexport const ENGRAVED_DAGGER = () =>\r\n  createWeapon(type, 'engraved', [STRIKE, LUNGE, STAB], {})\r\nexport const ETHEREAL_DAGGER = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_STRIKE], {})\r\n\r\nexport const EXQUISITE_DAGGER = () =>\r\n  createWeapon(type, 'exquisite', [STRIKE, LUNGE, SLASH], {})\r\nexport const DIVINE_DAGGER = () =>\r\n  createWeapon(type, 'divine', [STRIKE, LUNGE, STAB], {})\r\nexport const ARCANE_DAGGER = () =>\r\n  createWeapon(type, 'arcane', [STRIKE, LUNGE, SLASH], {})\r\nexport const CELESTIAL_DAGGER = () =>\r\n  createBreakableWeapon(type, 'celestial', [STRIKE, LUNGE, STAB], {})\r\n\r\nexport const DAGGERS: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [\r\n    RUSTED_DAGGER,\r\n    TOMB_DAGGER,\r\n    BURRIED_DAGGER,\r\n    WITHERING_DAGGER,\r\n    GLASS_DAGGER,\r\n  ],\r\n  2: [IRON_DAGGER, STEEL_DAGGER, STAINLESS_DAGGER],\r\n  3: [ANCIENT_DAGGER, CRYSTAL_DAGGER, ELEMENTAL_DAGGER, CURSED_DAGGER],\r\n  4: [SHARP_DAGGER, HARDENED_DAGGER, ENGRAVED_DAGGER, ETHEREAL_DAGGER],\r\n  5: [EXQUISITE_DAGGER, DIVINE_DAGGER, ARCANE_DAGGER, CELESTIAL_DAGGER],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const STRIKE = createSkill('Strike', 3, 0)\r\nexport const WITHERING_STRIKE = createSkill('Strike', 2, 0)\r\nexport const GLASS_STRIKE = createSkill('Strike', 1, 0)\r\nexport const SWING = createSkill('Swing', 4, 0)\r\nexport const WIDE_SWING = createSkill('Wide Swing', 4, -5, {\r\n  damageModifier: 0.8,\r\n  splashDamageModifier: 0.8,\r\n  perfectSplash: true,\r\n})\r\nexport const FLURRY = createSkill('Swipe', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const LUNGE = createSkill('Lunge', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const SLICE = createSkill('Stab', 2, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  FLURRY,\r\n  STRIKE,\r\n  LUNGE,\r\n  WIDE_SWING,\r\n  GLASS_STRIKE,\r\n  WITHERING_STRIKE,\r\n  SLASH,\r\n  SLICE,\r\n  STUN,\r\n  SWING,\r\n} from '../../../Skill/skills/greatsword'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'greatsword'\r\nexport const RUSTED_GREATSWORD = () =>\r\n  createWeapon(type, 'rusted', [STRIKE], {})\r\nexport const TOMB_GREATSWORD = () =>\r\n  createWeapon(type, 'tomb', [SWING, FLURRY], {})\r\nexport const BURRIED_GREATSWORD = () =>\r\n  createWeapon(type, 'buried', [STRIKE, FLURRY, SLICE], {})\r\nexport const WITHERING_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_STRIKE], {})\r\nexport const GLASS_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_STRIKE], {})\r\n\r\nexport const IRON_GREATSWORD = () =>\r\n  createWeapon(type, 'iron', [STRIKE, STUN], {})\r\nexport const STEEL_GREATSWORD = () =>\r\n  createWeapon(type, 'steel', [STRIKE, SLICE, LUNGE], {})\r\nexport const STAINLESS_GREATSWORD = () =>\r\n  createWeapon(type, 'stainless', [SLICE, LUNGE, SLASH], {})\r\n\r\nexport const ANCIENT_GREATSWORD = () =>\r\n  createWeapon(type, 'ancient', [SWING, LUNGE, WIDE_SWING], {})\r\nexport const CRYSTAL_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_STRIKE], {})\r\nexport const ELEMENTAL_GREATSWORD = () =>\r\n  createWeapon(type, 'elemental', [STRIKE], {})\r\nexport const CURSED_GREATSWORD = () =>\r\n  createWeapon(type, 'cursed', [STRIKE], {})\r\n\r\nexport const SHARP_GREATSWORD = () =>\r\n  createWeapon(type, 'sharp', [SLICE, SLASH, WIDE_SWING], {})\r\nexport const HARDENED_GREATSWORD = () =>\r\n  createWeapon(type, 'hardened', [SLICE, SLICE, STUN], {})\r\nexport const ENGRAVED_GREATSWORD = () =>\r\n  createWeapon(type, 'engraved', [SLICE, SLASH, FLURRY], {})\r\nexport const ETHEREAL_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_STRIKE], {})\r\n\r\nexport const EXQUISITE_GREATSWORD = () =>\r\n  createWeapon(type, 'exquisite', [SLICE, SLASH, LUNGE], {})\r\nexport const DIVINE_GREATSWORD = () => createWeapon(type, 'divine', [], {})\r\nexport const ARCANE_GREATSWORD = () =>\r\n  createWeapon(type, 'arcane', [STRIKE], {})\r\nexport const CELESTIAL_GREATSWORD = () =>\r\n  createBreakableWeapon(type, 'celestial', [GLASS_STRIKE], {})\r\n\r\nexport const GREATSWORDS: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [\r\n    RUSTED_GREATSWORD,\r\n    TOMB_GREATSWORD,\r\n    BURRIED_GREATSWORD,\r\n    WITHERING_GREATSWORD,\r\n    GLASS_GREATSWORD,\r\n  ],\r\n  2: [IRON_GREATSWORD, STEEL_GREATSWORD, STAINLESS_GREATSWORD],\r\n  3: [\r\n    ANCIENT_GREATSWORD,\r\n    CRYSTAL_GREATSWORD,\r\n    ELEMENTAL_GREATSWORD,\r\n    CURSED_GREATSWORD,\r\n  ],\r\n  4: [\r\n    SHARP_GREATSWORD,\r\n    HARDENED_GREATSWORD,\r\n    ENGRAVED_GREATSWORD,\r\n    ETHEREAL_GREATSWORD,\r\n  ],\r\n  5: [\r\n    EXQUISITE_GREATSWORD,\r\n    DIVINE_GREATSWORD,\r\n    ARCANE_GREATSWORD,\r\n    CELESTIAL_GREATSWORD,\r\n  ],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const FIRE = createSkill('Fire', 1, 0, {\r\n  perfectSplash: true,\r\n})\r\nexport const SNIPE = createSkill('Snipe', 2, 0, {\r\n  perfectPierce: true,\r\n})\r\nexport const FAN_FIRE = createSkill('Fan Fire', 1, 0, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport { FAN_FIRE, FIRE, SNIPE } from '../../../Skill/skills/pistol'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'pistol'\r\nexport const PATRICIANS_PISTOL = () => ({\r\n  ...createWeapon(type, 'starting', [], {}),\r\n  name: `Patrician Pistol`,\r\n})\r\nexport const RUSTED_PISTOL = () =>\r\n  createWeapon(type, 'rusted', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const TOMB_PISTOL = () =>\r\n  createWeapon(type, 'tomb', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const BURRIED_PISTOL = () =>\r\n  createWeapon(type, 'buried', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const WITHERING_PISTOL = () =>\r\n  createBreakableWeapon(type, 'withering', [FIRE], {})\r\nexport const GLASS_PISTOL = () =>\r\n  createBreakableWeapon(type, 'glass', [FIRE], {})\r\n\r\nexport const IRON_PISTOL = () =>\r\n  createWeapon(type, 'iron', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const STEEL_PISTOL = () =>\r\n  createWeapon(type, 'steel', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const STAINLESS_PISTOL = () =>\r\n  createWeapon(type, 'stainless', [FIRE, SNIPE, FAN_FIRE], {})\r\n\r\nexport const ANCIENT_PISTOL = () =>\r\n  createWeapon(type, 'ancient', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const CRYSTAL_PISTOL = () =>\r\n  createBreakableWeapon(type, 'crystal', [FIRE], {})\r\nexport const ELEMENTAL_PISTOL = () =>\r\n  createWeapon(type, 'elemental', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const CURSED_PISTOL = () =>\r\n  createWeapon(type, 'cursed', [FIRE, SNIPE, FAN_FIRE], {})\r\n\r\nexport const SHARP_PISTOL = () =>\r\n  createWeapon(type, 'sharp', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const HARDENED_PISTOL = () =>\r\n  createWeapon(type, 'hardened', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const ENGRAVED_PISTOL = () =>\r\n  createWeapon(type, 'engraved', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const ETHEREAL_PISTOL = () =>\r\n  createBreakableWeapon(type, 'ethereal', [FIRE], {})\r\n\r\nexport const EXQUISITE_PISTOL = () =>\r\n  createWeapon(type, 'exquisite', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const DIVINE_PISTOL = () =>\r\n  createWeapon(type, 'divine', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const ARCANE_PISTOL = () =>\r\n  createWeapon(type, 'arcane', [FIRE, SNIPE, FAN_FIRE], {})\r\nexport const CELESTIAL_PISTOL = () =>\r\n  createBreakableWeapon(type, 'celestial', [FIRE], {})\r\n\r\nexport const PISTOLS: tWeaponsByLevel = {\r\n  0: [PATRICIANS_PISTOL],\r\n  1: [\r\n    RUSTED_PISTOL,\r\n    TOMB_PISTOL,\r\n    BURRIED_PISTOL,\r\n    WITHERING_PISTOL,\r\n    GLASS_PISTOL,\r\n  ],\r\n  2: [IRON_PISTOL, STEEL_PISTOL, STAINLESS_PISTOL],\r\n  3: [ANCIENT_PISTOL, CRYSTAL_PISTOL, ELEMENTAL_PISTOL, CURSED_PISTOL],\r\n  4: [SHARP_PISTOL, HARDENED_PISTOL, ENGRAVED_PISTOL, ETHEREAL_PISTOL],\r\n  5: [EXQUISITE_PISTOL, DIVINE_PISTOL, ARCANE_PISTOL, CELESTIAL_PISTOL],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const THRUST = createSkill('Thrust', 3, 0)\r\nexport const SWING = createSkill('Swing', 4, 0)\r\nexport const WITHERING_SWING = createSkill('Swing', 2, 0)\r\nexport const GLASS_SWING = createSkill('Swing', 1, 0)\r\nexport const FLURRY = createSkill('Flurry', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const CLEAVE = createSkill('Cleave', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const SLICE = createSkill('Slice', 4, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\nexport const ARMOR_UP = createSkill('Armor Up', 2, 0, {\r\n  targetType: 'self',\r\n  perfectStatus: ['armor-up'],\r\n})\r\nexport const EVADE_UP = createSkill('Evade Up', 2, 0, {\r\n  targetType: 'self',\r\n  perfectStatus: ['evade-up'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  ARMOR_UP,\r\n  CLEAVE,\r\n  EVADE_UP,\r\n  FLURRY,\r\n  GLASS_SWING,\r\n  SLASH,\r\n  SLICE,\r\n  SWING,\r\n  THRUST,\r\n  WITHERING_SWING,\r\n} from '../../../Skill/skills/scythe'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'scythe'\r\nexport const RUSTED_SCYTHE = () => createWeapon(type, 'rusted', [THRUST], {})\r\nexport const TOMB_SCYTHE = () => createWeapon(type, 'tomb', [SWING, FLURRY], {})\r\nexport const BURRIED_SCYTHE = () =>\r\n  createWeapon(type, 'buried', [SWING, SLICE], {})\r\nexport const WITHERING_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_SWING], {})\r\nexport const GLASS_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_SWING], {})\r\n\r\nexport const IRON_SCYTHE = () =>\r\n  createWeapon(type, 'iron', [THRUST, ARMOR_UP, EVADE_UP], {})\r\nexport const STEEL_SCYTHE = () =>\r\n  createWeapon(type, 'steel', [THRUST, SLASH], {})\r\nexport const STAINLESS_SCYTHE = () =>\r\n  createWeapon(type, 'stainless', [THRUST, SLICE], {})\r\n\r\nexport const ANCIENT_SCYTHE = () =>\r\n  createWeapon(type, 'ancient', [SWING, CLEAVE, ARMOR_UP], {})\r\nexport const CRYSTAL_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_SWING], {})\r\nexport const ELEMENTAL_SCYTHE = () =>\r\n  createWeapon(type, 'elemental', [THRUST], {})\r\nexport const CURSED_SCYTHE = () => createWeapon(type, 'cursed', [THRUST], {})\r\n\r\nexport const SHARP_SCYTHE = () =>\r\n  createWeapon(type, 'sharp', [THRUST, SLICE, SLASH], {})\r\nexport const HARDENED_SCYTHE = () =>\r\n  createWeapon(type, 'hardened', [THRUST, FLURRY, ARMOR_UP, EVADE_UP], {})\r\nexport const ENGRAVED_SCYTHE = () =>\r\n  createWeapon(type, 'engraved', [THRUST, FLURRY, SLASH, CLEAVE], {})\r\nexport const ETHEREAL_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_SWING], {})\r\n\r\nexport const EXQUISITE_SCYTHE = () =>\r\n  createWeapon(type, 'exquisite', [THRUST, SLICE, SLASH], {})\r\nexport const DIVINE_SCYTHE = () =>\r\n  createWeapon(type, 'divine', [THRUST, SLICE, ARMOR_UP, EVADE_UP], {})\r\nexport const ARCANE_SCYTHE = () => createWeapon(type, 'arcane', [THRUST], {})\r\nexport const CELESTIAL_SCYTHE = () =>\r\n  createBreakableWeapon(type, 'celestial', [GLASS_SWING], {})\r\n\r\nexport const SCYTHES: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [\r\n    RUSTED_SCYTHE,\r\n    TOMB_SCYTHE,\r\n    BURRIED_SCYTHE,\r\n    WITHERING_SCYTHE,\r\n    GLASS_SCYTHE,\r\n  ],\r\n  2: [IRON_SCYTHE, STEEL_SCYTHE, STAINLESS_SCYTHE],\r\n  3: [ANCIENT_SCYTHE, CRYSTAL_SCYTHE, ELEMENTAL_SCYTHE, CURSED_SCYTHE],\r\n  4: [SHARP_SCYTHE, HARDENED_SCYTHE, ENGRAVED_SCYTHE, ETHEREAL_SCYTHE],\r\n  5: [EXQUISITE_SCYTHE, DIVINE_SCYTHE, ARCANE_SCYTHE, CELESTIAL_SCYTHE],\r\n}\r\n","import { createSkill } from '.'\r\n\r\nexport const STRIKE = createSkill('Strike', 2, 0)\r\nexport const WITHERING_STRIKE = createSkill('Strike', 2, 0)\r\nexport const GLASS_STRIKE = createSkill('Strike', 1, 0)\r\nexport const SWING = createSkill('Swing', 4, 0)\r\nexport const FLURRY = createSkill('Swipe', 4, -10, {\r\n  damageModifier: 0.5,\r\n  targetType: 'group',\r\n})\r\nexport const STUN = createSkill('Stun', 3, -10, {\r\n  damageModifier: 0.5,\r\n  perfectStatus: ['stunned'],\r\n})\r\nexport const LUNGE = createSkill('Lunge', 5, -25, {\r\n  damageModifier: 1.5,\r\n})\r\nexport const STAB = createSkill('Stab', 2, -5, {\r\n  perfectPierce: true,\r\n})\r\nexport const SLASH = createSkill('Slash', 4, -10, {\r\n  perfectStatus: ['bleeding'],\r\n})\r\n","import { createBreakableWeapon, createWeapon } from '..'\r\nimport {\r\n  LUNGE,\r\n  FLURRY,\r\n  GLASS_STRIKE,\r\n  SLASH,\r\n  STAB,\r\n  SWING,\r\n  STRIKE,\r\n  WITHERING_STRIKE,\r\n} from '../../../Skill/skills/sword'\r\nimport { tWeaponsByLevel } from '../type'\r\n\r\nconst type = 'sword'\r\nexport const RUSTED_SWORD = () => createWeapon(type, 'rusted', [STRIKE], {})\r\nexport const TOMB_SWORD = () => createWeapon(type, 'tomb', [SWING, FLURRY], {})\r\nexport const BURRIED_SWORD = () =>\r\n  createWeapon(type, 'buried', [SWING, STAB], {})\r\nexport const WITHERING_SWORD = () =>\r\n  createBreakableWeapon(type, 'withering', [WITHERING_STRIKE], {})\r\nexport const GLASS_SWORD = () =>\r\n  createBreakableWeapon(type, 'glass', [GLASS_STRIKE], {})\r\n\r\nexport const IRON_SWORD = () => createWeapon(type, 'iron', [STRIKE, LUNGE], {})\r\nexport const STEEL_SWORD = () =>\r\n  createWeapon(type, 'steel', [STRIKE, SLASH], {})\r\nexport const STAINLESS_SWORD = () =>\r\n  createWeapon(type, 'stainless', [STRIKE, STAB], {})\r\n\r\nexport const ANCIENT_SWORD = () =>\r\n  createWeapon(type, 'ancient', [STRIKE, LUNGE], {})\r\nexport const CRYSTAL_SWORD = () =>\r\n  createBreakableWeapon(type, 'crystal', [GLASS_STRIKE], {})\r\nexport const ELEMENTAL_SWORD = () =>\r\n  createWeapon(type, 'elemental', [STRIKE], {})\r\nexport const CURSED_SWORD = () => createWeapon(type, 'cursed', [STRIKE], {})\r\n\r\nexport const SHARP_SWORD = () =>\r\n  createWeapon(type, 'sharp', [STRIKE, STAB, SLASH], {})\r\nexport const HARDENED_SWORD = () =>\r\n  createWeapon(type, 'hardened', [STRIKE, FLURRY, LUNGE], {})\r\nexport const ENGRAVED_SWORD = () =>\r\n  createWeapon(type, 'engraved', [STRIKE, FLURRY, SLASH, LUNGE], {})\r\nexport const ETHEREAL_SWORD = () =>\r\n  createBreakableWeapon(type, 'ethereal', [GLASS_STRIKE], {})\r\n\r\nexport const EXQUISITE_SWORD = () =>\r\n  createWeapon(type, 'exquisite', [STRIKE, STAB, SLASH], {})\r\nexport const DIVINE_SWORD = () =>\r\n  createWeapon(type, 'divine', [STRIKE, STAB, SLASH], {})\r\nexport const ARCANE_SWORD = () => createWeapon(type, 'arcane', [STRIKE], {})\r\nexport const CELESTIAL_SWORD = () =>\r\n  createBreakableWeapon(type, 'celestial', [GLASS_STRIKE], {})\r\n\r\nexport const SWORDS: tWeaponsByLevel = {\r\n  0: [],\r\n  1: [RUSTED_SWORD, TOMB_SWORD, BURRIED_SWORD, WITHERING_SWORD, GLASS_SWORD],\r\n  2: [IRON_SWORD, STEEL_SWORD, STAINLESS_SWORD],\r\n  3: [ANCIENT_SWORD, CRYSTAL_SWORD, ELEMENTAL_SWORD, CURSED_SWORD],\r\n  4: [SHARP_SWORD, HARDENED_SWORD, ENGRAVED_SWORD, ETHEREAL_SWORD],\r\n  5: [EXQUISITE_SWORD, DIVINE_SWORD, ARCANE_SWORD, CELESTIAL_SWORD],\r\n}\r\n","import { tWeapon } from '../../type'\r\nimport { tWeaponsByLevel } from '../type'\r\nimport { AXES } from './axe'\r\nimport { HAMMERS } from './hammer'\r\nimport { BOWS } from './bow'\r\nimport { CATALYSTS } from './catalyst'\r\nimport { CHIMES } from './chime'\r\nimport { DAGGERS } from './dagger'\r\nimport { GREATSWORDS } from './greatsword'\r\nimport { PISTOLS } from './pistol'\r\nimport { SCYTHES } from './scythe'\r\nimport { SWORDS } from './sword'\r\n\r\nexport const WEAPONS: tWeaponsByLevel = {\r\n  0: [\r\n    ...AXES[0],\r\n    ...HAMMERS[0],\r\n    ...BOWS[0],\r\n    ...CATALYSTS[0],\r\n    ...CHIMES[0],\r\n    ...DAGGERS[0],\r\n    ...GREATSWORDS[0],\r\n    ...PISTOLS[0],\r\n    ...SCYTHES[0],\r\n    ...SWORDS[0],\r\n  ],\r\n  1: [\r\n    ...AXES[1],\r\n    ...HAMMERS[1],\r\n    ...BOWS[1],\r\n    ...CATALYSTS[1],\r\n    ...CHIMES[1],\r\n    ...DAGGERS[1],\r\n    ...GREATSWORDS[1],\r\n    ...PISTOLS[1],\r\n    ...SCYTHES[1],\r\n    ...SWORDS[1],\r\n  ],\r\n  2: [\r\n    ...AXES[2],\r\n    ...HAMMERS[2],\r\n    ...BOWS[2],\r\n    ...CATALYSTS[2],\r\n    ...CHIMES[2],\r\n    ...DAGGERS[2],\r\n    ...GREATSWORDS[2],\r\n    ...PISTOLS[2],\r\n    ...SCYTHES[2],\r\n    ...SWORDS[2],\r\n  ],\r\n  3: [\r\n    ...AXES[3],\r\n    ...HAMMERS[3],\r\n    ...BOWS[3],\r\n    ...CATALYSTS[3],\r\n    ...CHIMES[3],\r\n    ...DAGGERS[3],\r\n    ...GREATSWORDS[3],\r\n    ...PISTOLS[3],\r\n    ...SCYTHES[3],\r\n    ...SWORDS[3],\r\n  ],\r\n  4: [\r\n    ...AXES[4],\r\n    ...HAMMERS[4],\r\n    ...BOWS[4],\r\n    ...CATALYSTS[4],\r\n    ...CHIMES[4],\r\n    ...DAGGERS[4],\r\n    ...GREATSWORDS[4],\r\n    ...PISTOLS[4],\r\n    ...SCYTHES[4],\r\n    ...SWORDS[4],\r\n  ],\r\n  5: [\r\n    ...AXES[5],\r\n    ...HAMMERS[5],\r\n    ...BOWS[5],\r\n    ...CATALYSTS[5],\r\n    ...CHIMES[5],\r\n    ...DAGGERS[5],\r\n    ...GREATSWORDS[5],\r\n    ...PISTOLS[5],\r\n    ...SCYTHES[5],\r\n    ...SWORDS[5],\r\n  ],\r\n}\r\n\r\nexport const ALL_WEAPONS = Object.keys(WEAPONS).reduce((allWeapons, level) => {\r\n  return [...allWeapons, ...WEAPONS[parseInt(level, 10)]]\r\n}, [] as (() => tWeapon)[])\r\n","import { getRandom } from '../../util'\r\nimport { ARMOR_BY_LEVEL } from '../Armor/builders/sets'\r\nimport { tArmor } from '../Armor/type'\r\nimport { WEAPONS } from '../Weapon/builders/objects'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { tItemType } from './type'\r\n\r\nexport const getRandomItem = (level: number): tWeapon | tArmor => {\r\n  const itemType: tItemType = getRandom(['weapon', 'armor'])\r\n  if (itemType === 'weapon') {\r\n    level = level === 0 ? 1 : level\r\n    let items = Array(level + 1)\r\n      .fill(null)\r\n      .reduce((result, _, index) => {\r\n        if (index === 0) return result\r\n        return [...result, ...WEAPONS[index]]\r\n      }, [] as (() => tWeapon)[]) as (() => tWeapon)[]\r\n\r\n    return getRandom(items)()\r\n  } else {\r\n    let items = Array(level + 1)\r\n      .fill(null)\r\n      .reduce((result, _, index) => {\r\n        return [...result, ...(ARMOR_BY_LEVEL[index] || [])]\r\n      }, [] as (() => tArmor)[]) as (() => tArmor)[]\r\n    return getRandom(items)()\r\n  }\r\n}\r\n","import { tEncounterReward, tEncounterChoice, tCombatEncounter } from './type'\r\nimport { getRandom } from '../../util'\r\nimport { stringArr } from '../../util/stringArr'\r\nimport { FLOOR_CONFIGS_BY_INDEX } from './floors'\r\nimport Forest1 from '../../assets/img/forests/7.png'\r\nimport Forest2 from '../../assets/img/forests/8.png'\r\nimport Forest3 from '../../assets/img/forests/1.png'\r\nimport Dungeon1 from '../../assets/img/dungeon/3.png'\r\nimport Dungeon2 from '../../assets/img/dungeon/1.png'\r\n\r\nexport const ZERO_REWARD: tEncounterReward = {\r\n  gold: 0,\r\n  xp: 0,\r\n  items: [],\r\n  status: [],\r\n  immunities: [],\r\n}\r\n\r\nconst poisoned: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['poisoned'],\r\n}\r\nconst burning: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['burning'],\r\n}\r\nconst bleeding: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['bleeding'],\r\n}\r\nconst armorDown: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['armor-down'],\r\n}\r\nconst resDown: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['resistance-down'],\r\n}\r\nconst attackDown: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['armor-down'],\r\n}\r\n\r\nconst armorUp: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['armor-up'],\r\n}\r\nconst attackUp: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['attack-up'],\r\n}\r\nconst resUp: tEncounterReward = {\r\n  ...ZERO_REWARD,\r\n  status: ['resistance-up'],\r\n}\r\n\r\nconst justGold = (gold: number) => ({\r\n  ...ZERO_REWARD,\r\n  gold,\r\n})\r\nconst justXp = (xp: number) => ({\r\n  ...ZERO_REWARD,\r\n  xp,\r\n})\r\nconst justRandomItem = (floor: number = 0): tEncounterReward => ({\r\n  ...ZERO_REWARD,\r\n  items: [getRandom(FLOOR_CONFIGS_BY_INDEX()[floor].items)],\r\n})\r\n\r\nexport const POSSIBLE_SHINE_REWARDS = (): tEncounterReward[][] => [\r\n  [poisoned, ZERO_REWARD, armorUp],\r\n  [ZERO_REWARD, ZERO_REWARD, ZERO_REWARD, justGold(50)],\r\n  [burning, burning, ZERO_REWARD, justXp(25)],\r\n  [poisoned, burning, ZERO_REWARD, justRandomItem()],\r\n  [attackDown, ZERO_REWARD, ZERO_REWARD, justXp(25)],\r\n  [armorDown, resDown, ZERO_REWARD, justXp(10), justRandomItem()],\r\n  [attackDown, armorDown, resDown, justRandomItem()],\r\n  [poisoned, attackDown, ZERO_REWARD, justGold(100)],\r\n  [burning, burning, burning, justGold(10), justRandomItem()],\r\n  [poisoned, burning, bleeding, justRandomItem(), justRandomItem()],\r\n  [ZERO_REWARD, ZERO_REWARD, ZERO_REWARD, ZERO_REWARD, justRandomItem()],\r\n  [ZERO_REWARD, ZERO_REWARD, ZERO_REWARD, justXp(10), justGold(50)],\r\n  [resDown, armorDown, ZERO_REWARD, resUp, attackUp],\r\n  [ZERO_REWARD, ZERO_REWARD, attackUp],\r\n  [ZERO_REWARD, ZERO_REWARD, armorUp],\r\n  [ZERO_REWARD, ZERO_REWARD, resUp],\r\n  [armorDown, ZERO_REWARD, armorUp],\r\n  [resDown, ZERO_REWARD, resUp],\r\n  [attackDown, ZERO_REWARD, attackUp],\r\n  [poisoned, bleeding, resUp, attackUp],\r\n]\r\n\r\nexport const getChoiceText = (\r\n  currentChoice: tEncounterChoice | undefined,\r\n  previousChoice: tEncounterChoice | undefined,\r\n): string => {\r\n  let text = ''\r\n  const previousEncounter = previousChoice\r\n    ? previousChoice.choices[previousChoice.chosen || 0]\r\n    : undefined\r\n  if (previousChoice === undefined) {\r\n    text =\r\n      'As your party begins their journey, you travel down an empty road. You arrive at a split path, you must make a choice on which way to proceed.'\r\n  }\r\n  if (previousEncounter?.type === 'combat') {\r\n    text = getRandom([\r\n      `After the fierce battle against the ${stringArr(\r\n        (previousEncounter as tCombatEncounter).party.characters.map(\r\n          (c) => c.name,\r\n        ),\r\n      )}, your party again arrives at a choice:`,\r\n    ])\r\n  } else if (previousChoice) {\r\n    text =\r\n      'After a brief rest, your party continues their journey to dispel the evil. You feel it around you as your travel deeper. However, there now seem to be two options before you:'\r\n  }\r\n  if (currentChoice?.depth === 11) {\r\n    text =\r\n      'Your party has traveled far, but it is now time for the final fight.'\r\n  }\r\n  return text\r\n}\r\n\r\nexport const getEncounterBg = (\r\n  level: number,\r\n  floor: number,\r\n): { bg: string; overlay: string } => {\r\n  return [\r\n    [\r\n      {\r\n        // 0\r\n        bg: Forest1,\r\n        overlay: 'transparent',\r\n      },\r\n      {\r\n        // 1\r\n        bg: Forest1,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 2\r\n        bg: Forest1,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 3\r\n        bg: Forest1,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 4\r\n        bg: Forest1,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 5\r\n        bg: Forest2,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 6\r\n        bg: Forest2,\r\n        overlay: 'rgba(20,0,50,0.4)',\r\n      },\r\n      {\r\n        // 7\r\n        bg: Forest2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 8\r\n        bg: Forest2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 9\r\n        bg: Forest3,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 10\r\n        bg: Dungeon1,\r\n        overlay: 'transparent',\r\n      },\r\n    ],\r\n    [\r\n      {\r\n        // 0\r\n        bg: Dungeon2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 1\r\n        bg: Dungeon2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n      {\r\n        // 2\r\n        bg: Dungeon2,\r\n        overlay: 'rgba(20,0,50,0.5)',\r\n      },\r\n    ],\r\n  ][floor][level]\r\n}\r\n","import { tArmor } from '../../Armor/type'\r\nimport { tConsumable } from '../../Consumable/type'\r\nimport { tDamageRange, tDamageType } from '../../Damage/type'\r\nimport { ZERO_REWARD } from '../../Encounter/constants'\r\nimport { tEncounterReward } from '../../Encounter/type'\r\nimport { tSkill } from '../../Skill/type'\r\nimport { BASE_C_STATS } from '../../Stats/constants'\r\nimport { tBaseStats, tStats } from '../../Stats/type'\r\nimport { tStatus, tStatusType } from '../../Status/type'\r\nimport { BASE_WEAPON } from '../../Weapon/constants'\r\nimport { tWeapon } from '../../Weapon/type'\r\nimport { BASE_CHARACTER } from '../constants'\r\nimport { tCharacter, tCharacterTag } from '../type'\r\n\r\nexport const makeEnemy = (\r\n  name: string,\r\n  icon: string,\r\n  level: number,\r\n  health: number,\r\n  weapon: tWeapon,\r\n  stats: Partial<tStats>,\r\n  tags: tCharacterTag[],\r\n  possibleRewards: tEncounterReward[],\r\n  immunities: tStatusType[] = [],\r\n  status: tStatus[] = [],\r\n): tCharacter => {\r\n  const maxHealthOffset = health - 25 - level\r\n  return {\r\n    ...BASE_CHARACTER(),\r\n    name,\r\n    icon,\r\n    level,\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      ...stats,\r\n      maxHealthOffset,\r\n      vigor: 0,\r\n    },\r\n    tags,\r\n    weapon,\r\n    immunities,\r\n    status,\r\n    possibleRewards,\r\n  }\r\n}\r\n\r\nexport const makeEnemyWeapon = (\r\n  stat: keyof tBaseStats,\r\n  damage: number,\r\n  range: tDamageRange,\r\n  type: tDamageType,\r\n  skills: tSkill[],\r\n): tWeapon => {\r\n  return {\r\n    ...BASE_WEAPON(),\r\n    name: '',\r\n    stat,\r\n    damage: {\r\n      value: damage,\r\n      range,\r\n      type,\r\n    },\r\n    skills,\r\n  }\r\n}\r\n\r\nexport const makeEnemyReward = (\r\n  gold: number,\r\n  xp: number,\r\n  items: (tConsumable | tWeapon | tArmor)[] = [],\r\n): tEncounterReward => {\r\n  return {\r\n    ...ZERO_REWARD,\r\n    gold,\r\n    xp,\r\n    items,\r\n  }\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Troll from '../../../icons/svg/skoll/troll.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_TROLL = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Troll',\r\n    Troll,\r\n    2,\r\n    24,\r\n    makeEnemyWeapon('strength', 12, 'melee', 'physical', [\r\n      createSkill('Smash', 4, 0),\r\n      createSkill('Quake', 5, -15, {\r\n        damageModifier: 0.5,\r\n        targetType: 'group',\r\n        perfectStatus: ['stunned'],\r\n      }),\r\n    ]),\r\n    {\r\n      strength: 76,\r\n      agility: getRandom([59, 60, 61, 62, 63, 64]),\r\n      armor: 3,\r\n      resistance: 0,\r\n      evasion: 10,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(5, 15),\r\n      makeEnemyReward(5, 15),\r\n      makeEnemyReward(8, 15),\r\n      makeEnemyReward(20, 15),\r\n      makeEnemyReward(20, 15, [getRandomItem(1)]),\r\n    ],\r\n  )\r\n}\r\n","import BeastMan from '../../../icons/svg/lorc/werewolf.svg'\r\nimport { tCharacter } from '../type'\r\nimport { BASE_C_STATS } from '../../Stats/constants'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_BEAST = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Beast',\r\n    BeastMan,\r\n    1,\r\n    12,\r\n    makeEnemyWeapon('strength', 10, 'melee', 'physical', [\r\n      createSkill('Strike', 2, 0),\r\n      createSkill('Impale', 4, -5, { perfectStatus: ['bleeding'] }),\r\n    ]),\r\n    {\r\n      ...BASE_C_STATS,\r\n      strength: 52,\r\n      agility: getRandom([55, 56, 57, 58, 59, 60, 61]),\r\n      armor: 3,\r\n      evasion: 10,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(6, 5),\r\n      makeEnemyReward(6, 6),\r\n      makeEnemyReward(7, 7),\r\n      makeEnemyReward(10, 10),\r\n      makeEnemyReward(10, 10),\r\n      makeEnemyReward(10, 10, [getRandomItem(0)]),\r\n      makeEnemyReward(10, 10, [getRandomItem(1)]),\r\n    ],\r\n  )\r\n}\r\n","import Bee from '../../../icons/svg/lorc/bee.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandom } from '../../../util'\r\nimport { GODSBEARD } from '../../Consumable/objects/godsbeard'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const BEE = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Bee',\r\n    Bee,\r\n    1,\r\n    6,\r\n    makeEnemyWeapon('dexterity', 12, 'melee', 'physical', [\r\n      createSkill('Sting', 3, 0),\r\n      createSkill('Infectious Sting', 3, -10, { perfectStatus: ['poisoned'] }),\r\n    ]),\r\n    {\r\n      dexterity: 52,\r\n      agility: getRandom([78, 79, 80, 81, 82, 83]),\r\n      evasion: 17,\r\n    },\r\n    ['flying'],\r\n    [\r\n      makeEnemyReward(1, 4),\r\n      makeEnemyReward(4, 8),\r\n      makeEnemyReward(4, 8),\r\n      makeEnemyReward(4, 8),\r\n      makeEnemyReward(8, 8, [getRandomItem(0)]),\r\n      makeEnemyReward(8, 10, [GODSBEARD()]),\r\n    ],\r\n  )\r\n}\r\n","import Icon from '../../../icons/svg/delapouite/kenku-head.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const CULTIST_BRUTE = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Cultist Brute',\r\n    Icon,\r\n    4,\r\n    26,\r\n    makeEnemyWeapon('strength', 12, 'melee', 'physical', [\r\n      createSkill('Slice', 3, 0),\r\n      createSkill('Slash', 4, -5, { perfectStatus: ['bleeding'] }),\r\n    ]),\r\n    {\r\n      strength: 72,\r\n      agility: getRandom([75, 76, 77, 78, 79, 80, 81, 82]),\r\n      armor: 6,\r\n      resistance: 2,\r\n      evasion: 13,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(10, 12),\r\n      makeEnemyReward(15, 13),\r\n      makeEnemyReward(15, 13),\r\n      makeEnemyReward(15, 13),\r\n      makeEnemyReward(20, 20),\r\n      makeEnemyReward(25, 20, [getRandomItem(2)]),\r\n    ],\r\n  )\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Cultist from '../../../icons/svg/lorc/cultist.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const CULTIST = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Cultist',\r\n    Cultist,\r\n    2,\r\n    17,\r\n    makeEnemyWeapon('intelligence', 14, 'melee', 'magic', [\r\n      createSkill('Enflame', 4, -10, { perfectStatus: ['burning'] }),\r\n      createSkill('Blast', 3, 0),\r\n    ]),\r\n    {\r\n      intelligence: 75,\r\n      agility: getRandom([68, 69, 70, 71]),\r\n      armor: 1,\r\n      resistance: 4,\r\n      evasion: 15,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(10, 12),\r\n      makeEnemyReward(15, 13),\r\n      makeEnemyReward(15, 13),\r\n      makeEnemyReward(15, 13),\r\n      makeEnemyReward(30, 20),\r\n      makeEnemyReward(30, 20, [getRandomItem(2)]),\r\n    ],\r\n  )\r\n}\r\n","import Wolf from '../../../icons/svg/lorc/wolf-head.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_WOLF = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Wolf',\r\n    Wolf,\r\n    1,\r\n    9,\r\n    makeEnemyWeapon('dexterity', 7, 'melee', 'physical', [\r\n      createSkill('Bite', 3, 0),\r\n      createSkill('Chomp', 4, 0, { perfectPierce: true }),\r\n    ]),\r\n    {\r\n      dexterity: 52,\r\n      agility: getRandom([55, 56, 57, 58, 59, 60, 61, 62, 63, 64]),\r\n      evasion: 10,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(4, 3),\r\n      makeEnemyReward(4, 3),\r\n      makeEnemyReward(4, 3),\r\n      makeEnemyReward(4, 3),\r\n      makeEnemyReward(4, 3),\r\n      makeEnemyReward(4, 3, [getRandomItem(0)]),\r\n      makeEnemyReward(16, 6, [getRandomItem(0)]),\r\n    ],\r\n  )\r\n}\r\n","import Raven from '../../../icons/svg/lorc/raven.svg'\r\nimport { tCharacter } from '../type'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const FOREST_RAVEN = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Raven',\r\n    Raven,\r\n    1,\r\n    10,\r\n    makeEnemyWeapon('dexterity', 6, 'melee', 'physical', [\r\n      createSkill('Peck', 2, 0),\r\n      createSkill('Caw', 2, -5, { perfectStatus: ['resistance-down'] }),\r\n    ]),\r\n    {\r\n      dexterity: 56,\r\n      agility: getRandom([74, 75, 76, 77, 78]),\r\n      evasion: 10,\r\n    },\r\n    ['flying'],\r\n    [\r\n      makeEnemyReward(0, 5),\r\n      makeEnemyReward(3, 7),\r\n      makeEnemyReward(3, 7),\r\n      makeEnemyReward(3, 7),\r\n      makeEnemyReward(0, 7, [getRandomItem(0)]),\r\n      makeEnemyReward(0, 7, [getRandomItem(1)]),\r\n    ],\r\n    [],\r\n    [\r\n      {\r\n        duration: -1,\r\n        type: 'evasive',\r\n        stats: ZERO_STATS,\r\n        stack: 0,\r\n        immunities: [],\r\n      },\r\n    ],\r\n  )\r\n}\r\n","import Witch from '../../../icons/svg/lorc/witch-flight.svg'\r\nimport { getRandom } from '../../../util'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { tStatusType } from '../../Status/type'\r\nimport { tCharacter } from '../type'\r\nimport { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\n\r\nexport const FOREST_WITCH = (): tCharacter => {\r\n  return makeEnemy(\r\n    'Forest Witch',\r\n    Witch,\r\n    1,\r\n    9,\r\n    makeEnemyWeapon('intelligence', 9, 'ranged', 'magic', [\r\n      createSkill('Curse', 2, -10, {\r\n        perfectStatus: [\r\n          getRandom<tStatusType>([\r\n            'cursed-agility',\r\n            'cursed-charisma',\r\n            'cursed-dexterity',\r\n            'cursed-intelligence',\r\n            'cursed-luck',\r\n            'cursed-strength',\r\n          ]),\r\n        ],\r\n      }),\r\n      createSkill('Blast', 3, 0),\r\n    ]),\r\n    {\r\n      intelligence: 84,\r\n      agility: getRandom([60, 62, 64, 66, 68]),\r\n      resistance: 2,\r\n      evasion: 10,\r\n    },\r\n    [],\r\n    [\r\n      makeEnemyReward(5, 15),\r\n      makeEnemyReward(5, 15),\r\n      makeEnemyReward(20, 15),\r\n      makeEnemyReward(20, 15),\r\n      makeEnemyReward(20, 15, [getRandomItem(1)]),\r\n    ],\r\n  )\r\n}\r\n","import Lich from '../../../icons/svg/delapouite/overlord-helm.svg'\r\nimport { tCharacter } from '../type'\r\nimport {\r\n  makeEnemy,\r\n  makeEnemyReward,\r\n  makeEnemyWeapon,\r\n} from '../enemies/_builder'\r\nimport { getRandomItem } from '../../Item/util'\r\nimport { createSkill } from '../../Skill/skills'\r\n\r\nexport const LICH = (): tCharacter => {\r\n  return {\r\n    ...makeEnemy(\r\n      'Lich',\r\n      Lich,\r\n      5,\r\n      67,\r\n      makeEnemyWeapon('strength', 34, 'melee', 'magic', [\r\n        createSkill('Drain', 4, 0, {\r\n          damageModifier: 0.5,\r\n          targetType: 'group',\r\n          perfectStatus: ['speed-down'],\r\n        }),\r\n        createSkill('Screech', 4, -5, {\r\n          damageModifier: 0,\r\n          damage: false,\r\n          targetType: 'group',\r\n          perfectStatus: ['stunned'],\r\n        }),\r\n        createSkill('Smite', 4, 0, {\r\n          perfectStatus: ['armor-down'],\r\n        }),\r\n      ]),\r\n      {\r\n        strength: 85,\r\n        intelligence: 75,\r\n        agility: 80,\r\n        luck: 50,\r\n        armor: 7,\r\n        resistance: 8,\r\n        evasion: 16,\r\n      },\r\n      ['undead'],\r\n      [\r\n        makeEnemyReward(200, 120, [\r\n          getRandomItem(3),\r\n          getRandomItem(3),\r\n          getRandomItem(3),\r\n        ]),\r\n        makeEnemyReward(200, 120, [\r\n          getRandomItem(3),\r\n          getRandomItem(3),\r\n          getRandomItem(3),\r\n        ]),\r\n        makeEnemyReward(200, 120, [\r\n          getRandomItem(3),\r\n          getRandomItem(3),\r\n          getRandomItem(3),\r\n        ]),\r\n      ],\r\n      ['stunned', 'bleeding', 'poisoned'],\r\n    ),\r\n  }\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport { tCharacter } from '../../Character/type'\r\n\r\nexport const makeRandomFloorEncounter = (\r\n  characterList: (() => tCharacter)[],\r\n  enemyCount: number,\r\n): tCharacter[] => {\r\n  return Array(enemyCount)\r\n    .fill(null)\r\n    .map((_) => {\r\n      return getRandom(characterList)()\r\n    })\r\n}\r\n","import { makeEnemy, makeEnemyReward, makeEnemyWeapon } from './_builder'\r\nimport Spirit from '../../../icons/svg/lorc/spectre.svg'\r\nimport { createSkill } from '../../Skill/skills'\r\nimport { getRandom } from '../../../util'\r\nimport { tStatusType } from '../../Status/type'\r\nimport { getRandomItem } from '../../Item/util'\r\n\r\nexport const TOMB_SPIRIT = () =>\r\n  makeEnemy(\r\n    'Tomb Spirit',\r\n    Spirit,\r\n    4,\r\n    26,\r\n    makeEnemyWeapon('intelligence', 16, 'ranged', 'magic', [\r\n      createSkill('Curse', 2, -10, {\r\n        perfectStatus: [\r\n          getRandom<tStatusType>([\r\n            'cursed-agility',\r\n            'cursed-charisma',\r\n            'cursed-dexterity',\r\n            'cursed-intelligence',\r\n            'cursed-luck',\r\n            'cursed-strength',\r\n          ]),\r\n        ],\r\n      }),\r\n      createSkill('Smite', 4, 0),\r\n    ]),\r\n    {\r\n      intelligence: 84,\r\n      agility: getRandom([75, 76, 77, 78, 79, 80]),\r\n      evasion: 23,\r\n      resistance: 6,\r\n    },\r\n    ['undead'],\r\n    [\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(50, 40),\r\n      makeEnemyReward(80, 40),\r\n      makeEnemyReward(80, 40, [getRandomItem(2)]),\r\n      makeEnemyReward(100, 50, [getRandomItem(3)]),\r\n    ],\r\n    ['stunned', 'bleeding', 'poisoned'],\r\n  )\r\n","import { LICH } from '../../Character/bosses'\r\nimport { TOMB_SPIRIT } from '../../Character/enemies/tomb_spirit'\r\nimport { WEAPONS } from '../../Weapon/builders/objects'\r\nimport { tFloorConfig } from '../type'\r\n\r\nconst FLOOR_2_WEAPONS = () => [...WEAPONS[3], ...WEAPONS[4], ...WEAPONS[5]]\r\n\r\nexport const FloorConfig2: tFloorConfig = {\r\n  bosses: [LICH()],\r\n  items: [...FLOOR_2_WEAPONS().map((w) => w())],\r\n  enemies: {\r\n    0: [\r\n      [TOMB_SPIRIT(), TOMB_SPIRIT()],\r\n      [TOMB_SPIRIT(), TOMB_SPIRIT(), TOMB_SPIRIT()],\r\n    ],\r\n  },\r\n}\r\n","import { tFloorConfig } from '../type'\r\nimport { FloorConfig1 } from './floor-1'\r\nimport { FloorConfig2 } from './floor-2'\r\n\r\nexport const FLOOR_CONFIGS_BY_INDEX = (): Record<number, tFloorConfig> => ({\r\n  0: FloorConfig1(),\r\n  1: FloorConfig2,\r\n})\r\n","import { tFloorConfig } from '../type'\r\nimport {\r\n  FOREST_WOLF,\r\n  FOREST_BEAST,\r\n  FOREST_RAVEN,\r\n  BEE,\r\n  CULTIST,\r\n  FOREST_TROLL,\r\n  CULTIST_BRUTE,\r\n  FOREST_WITCH,\r\n} from '../../Character/enemies'\r\nimport { LICH } from '../../Character/bosses'\r\nimport { WEAPONS } from '../../Weapon/builders/objects'\r\nimport { ARMOR_BY_LEVEL } from '../../Armor/builders/sets'\r\nimport { makeRandomFloorEncounter } from './util'\r\nimport { TOMB_SPIRIT } from '../../Character/enemies/tomb_spirit'\r\n\r\nconst FLOOR_1_WEAPONS = () => [\r\n  ...WEAPONS[1],\r\n  ...WEAPONS[2],\r\n  ...WEAPONS[3],\r\n  ...WEAPONS[4],\r\n  ...WEAPONS[5],\r\n]\r\n\r\nconst FLOOR_1_ARMOR = () => [\r\n  ...ARMOR_BY_LEVEL[0],\r\n  ...ARMOR_BY_LEVEL[1],\r\n  ...ARMOR_BY_LEVEL[2],\r\n]\r\n\r\nexport const FloorConfig1 = (): tFloorConfig => ({\r\n  bosses: [LICH()],\r\n  items: [\r\n    ...FLOOR_1_WEAPONS().map((w) => w()),\r\n    ...FLOOR_1_ARMOR().map((a) => a()),\r\n  ],\r\n  enemies: {\r\n    0: [\r\n      makeRandomFloorEncounter([FOREST_WOLF, FOREST_BEAST, BEE], 1),\r\n      makeRandomFloorEncounter([FOREST_WOLF, FOREST_BEAST, FOREST_WITCH], 1),\r\n      makeRandomFloorEncounter([FOREST_WOLF, FOREST_BEAST, FOREST_WITCH], 2),\r\n      makeRandomFloorEncounter([FOREST_WOLF, FOREST_BEAST, FOREST_WITCH], 1),\r\n      makeRandomFloorEncounter([FOREST_WOLF, FOREST_BEAST, FOREST_WITCH], 2),\r\n      makeRandomFloorEncounter([FOREST_WOLF, FOREST_BEAST, BEE], 2),\r\n      makeRandomFloorEncounter(\r\n        [FOREST_WOLF, FOREST_WOLF, FOREST_BEAST, FOREST_WITCH, BEE],\r\n        3,\r\n      ),\r\n    ],\r\n    1: [\r\n      makeRandomFloorEncounter(\r\n        [\r\n          FOREST_WOLF,\r\n          FOREST_BEAST,\r\n          FOREST_WITCH,\r\n          BEE,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n        ],\r\n        3,\r\n      ),\r\n    ],\r\n    2: [\r\n      makeRandomFloorEncounter(\r\n        [\r\n          FOREST_BEAST,\r\n          FOREST_WITCH,\r\n          BEE,\r\n          BEE,\r\n          BEE,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n        ],\r\n        3,\r\n      ),\r\n      [CULTIST()],\r\n      [CULTIST_BRUTE()],\r\n      [FOREST_TROLL()],\r\n    ],\r\n    3: [\r\n      makeRandomFloorEncounter(\r\n        [\r\n          FOREST_WITCH,\r\n          BEE,\r\n          BEE,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_TROLL,\r\n        ],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [\r\n          FOREST_WITCH,\r\n          BEE,\r\n          BEE,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_TROLL,\r\n        ],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [\r\n          FOREST_WITCH,\r\n          BEE,\r\n          BEE,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_TROLL,\r\n        ],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [FOREST_RAVEN, FOREST_TROLL, CULTIST, CULTIST_BRUTE],\r\n        2,\r\n      ),\r\n    ],\r\n    4: [\r\n      makeRandomFloorEncounter(\r\n        [FOREST_RAVEN, FOREST_RAVEN, FOREST_WITCH, FOREST_WITCH, FOREST_TROLL],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [FOREST_RAVEN, FOREST_RAVEN, FOREST_WITCH, FOREST_WITCH, FOREST_TROLL],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [FOREST_RAVEN, FOREST_RAVEN, FOREST_WITCH, FOREST_WITCH, FOREST_TROLL],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [\r\n          FOREST_RAVEN,\r\n          FOREST_RAVEN,\r\n          FOREST_WITCH,\r\n          FOREST_WITCH,\r\n          FOREST_TROLL,\r\n          CULTIST,\r\n          CULTIST_BRUTE,\r\n        ],\r\n        3,\r\n      ),\r\n    ],\r\n    5: [\r\n      makeRandomFloorEncounter(\r\n        [FOREST_RAVEN, FOREST_WITCH, FOREST_TROLL, CULTIST, CULTIST_BRUTE],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [FOREST_RAVEN, FOREST_WITCH, FOREST_TROLL, CULTIST, CULTIST_BRUTE],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [FOREST_RAVEN, FOREST_WITCH, FOREST_TROLL, CULTIST, CULTIST_BRUTE],\r\n        3,\r\n      ),\r\n      makeRandomFloorEncounter(\r\n        [FOREST_RAVEN, FOREST_WITCH, FOREST_TROLL, CULTIST, CULTIST_BRUTE],\r\n        3,\r\n      ),\r\n      [TOMB_SPIRIT()],\r\n    ],\r\n    6: [\r\n      makeRandomFloorEncounter(\r\n        [FOREST_WITCH, FOREST_TROLL, CULTIST, CULTIST_BRUTE],\r\n        3,\r\n      ),\r\n    ],\r\n    7: [[TOMB_SPIRIT(), TOMB_SPIRIT()]],\r\n  },\r\n})\r\n","import { tParty, tProcessedParty } from './type'\r\nimport {\r\n  checkForProcessedCharacter,\r\n  processCharacter,\r\n  getRewardsFromCharacter,\r\n  addExperience,\r\n  addMultipleStatus,\r\n} from '../Character/util'\r\nimport { tCharacter, tProcessedCharacter } from '../Character/type'\r\nimport { v4 } from 'uuid'\r\nimport { getRandom } from '../../util'\r\nimport { tEncounterReward } from '../Encounter/type'\r\nimport { tArmor } from '../Armor/type'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { tConsumable } from '../Consumable/type'\r\nimport { FLOOR_CONFIGS_BY_INDEX } from '../Encounter/floors'\r\n\r\nexport const isParty = (obj: any): boolean =>\r\n  obj !== undefined && obj.isParty !== undefined\r\n\r\nexport const checkForProcessedParty = (party: tParty) => {\r\n  if ((party as tProcessedParty).processed) {\r\n    throw new Error('No Processed Parties Allowed')\r\n  }\r\n  party.characters.forEach((character) => {\r\n    checkForProcessedCharacter(character)\r\n  })\r\n}\r\n\r\nexport const findCharacterInParty = <\r\n  T extends tParty = tParty,\r\n  R extends tCharacter = tCharacter\r\n>(\r\n  party: T,\r\n  id: string,\r\n): R | undefined => {\r\n  return (party.characters as R[]).find((c) => c.id === id)\r\n}\r\n\r\nexport const getOtherCharacters = (\r\n  party: tParty,\r\n  characterId: string,\r\n): tCharacter[] => party.characters.filter((c) => c.id !== characterId)\r\n\r\nexport const processParty = (party: tParty): tProcessedParty => {\r\n  checkForProcessedParty(party)\r\n  return {\r\n    ...party,\r\n    processed: true,\r\n    characters: party.characters.map((c) => ({\r\n      ...processCharacter(c),\r\n      partyId: party.id,\r\n    })),\r\n  }\r\n}\r\n\r\nexport const updateCharacter = (\r\n  party: tParty,\r\n  characterId: string,\r\n  updater: (character: tCharacter) => tCharacter,\r\n): tParty => {\r\n  checkForProcessedParty(party)\r\n  return {\r\n    ...party,\r\n    characters: party.characters.map((c) =>\r\n      c.id === characterId ? updater(c) : c,\r\n    ),\r\n  }\r\n}\r\n\r\nexport const makeParty = (level: number, floor: number): tParty => {\r\n  const floorConfig = FLOOR_CONFIGS_BY_INDEX()[floor]\r\n  const length = Object.keys(floorConfig.enemies).length\r\n  level = level > length ? length : level\r\n\r\n  return {\r\n    isParty: true,\r\n    id: v4(),\r\n    gold: 0,\r\n    items: [],\r\n    characters: getRandom(floorConfig.enemies[level] || []),\r\n  }\r\n}\r\n\r\nexport const makeBossParty = (floor: number): tParty => {\r\n  const config = FLOOR_CONFIGS_BY_INDEX()[floor]\r\n  return {\r\n    isParty: true,\r\n    id: v4(),\r\n    gold: 0,\r\n    items: [],\r\n    characters: [getRandom(config.bosses)],\r\n  }\r\n}\r\n\r\nexport const getRolledRewards = (\r\n  party: tProcessedParty,\r\n  checkedCharacter: tProcessedCharacter,\r\n): tEncounterReward[] => {\r\n  return party.characters.reduce((r, character) => {\r\n    return [...r, ...getRewardsFromCharacter(character, checkedCharacter)]\r\n  }, [] as tEncounterReward[])\r\n}\r\n\r\nexport const commitRewards = (\r\n  party: tParty,\r\n  rewards: tEncounterReward,\r\n): tParty => {\r\n  checkForProcessedParty(party)\r\n  const goldMultiplier =\r\n    1 +\r\n    processParty(party).characters.reduce(\r\n      (r, c) => (r > c.stats.goldModifier ? r : c.stats.goldModifier),\r\n      0,\r\n    ) /\r\n      100\r\n  return {\r\n    ...party,\r\n    gold: party.gold + Math.floor(rewards.gold * goldMultiplier),\r\n    items: [\r\n      ...party.items,\r\n      ...(rewards.items.filter((i) => i.itemType !== 'consumable') as (\r\n        | tArmor\r\n        | tWeapon\r\n      )[]),\r\n    ],\r\n    characters: party.characters.map((c) =>\r\n      addMultipleStatus(\r\n        addExperience(\r\n          {\r\n            ...c,\r\n            consumables: [\r\n              ...c.consumables,\r\n              ...(rewards.items.filter(\r\n                (i) => i.itemType === 'consumable',\r\n              ) as tConsumable[]),\r\n            ],\r\n          },\r\n          rewards.xp,\r\n        ),\r\n        rewards.status,\r\n      ),\r\n    ),\r\n  }\r\n}\r\n","import { v4 } from 'uuid'\r\n\r\nexport const PLAYER_PARTY_ID = v4()\r\n","import { useSelector } from 'react-redux'\r\nimport { StateCoreT, StateActionT, StateT } from '../types'\r\nimport { Dispatch } from 'redux'\r\nimport { makeReducer } from '../util'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { checkForProcessedParty, updateCharacter } from '../../game/Party/util'\r\nimport { tCharacter } from '../../game/Character/type'\r\nimport { makeCharacter, addMultipleStatus } from '../../game/Character/util'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { ALL_WEAPONS } from '../../game/Weapon/builders/objects'\r\nimport { getRandomItem } from '../../game/Item/util'\r\nimport { ARMOR_BY_LEVEL } from '../../game/Armor/builders/sets'\r\n\r\nexport const UPDATE_PARTY = '@actions/parties/set-party'\r\nexport const UPSERT_CHARACTER = '@actions/parties/upsert-character'\r\nexport const DELETE_CHARACTER = '@actions/parties/delete-character'\r\nexport const UPSERT_ITEM = '@actions/parties/upsert-item'\r\nexport const SET_GOLD = '@actions/parties/set-gold'\r\n\r\nexport const actionCreators = {\r\n  updateParty: (party: tParty): StateActionT => {\r\n    return {\r\n      type: UPDATE_PARTY,\r\n      payload: {\r\n        party,\r\n      },\r\n    }\r\n  },\r\n  upsertCharacter: (character: tCharacter): StateActionT => {\r\n    return {\r\n      type: UPSERT_CHARACTER,\r\n      payload: {\r\n        character,\r\n      },\r\n    }\r\n  },\r\n  deleteCharacter: (characterId: string): StateActionT => {\r\n    return {\r\n      type: DELETE_CHARACTER,\r\n      payload: {\r\n        characterId,\r\n      },\r\n    }\r\n  },\r\n  upsertItem: (item: tArmor | tWeapon): StateActionT => {\r\n    return {\r\n      type: UPSERT_ITEM,\r\n      payload: {\r\n        item,\r\n      },\r\n    }\r\n  },\r\n  setGold: (gold: number): StateActionT => {\r\n    return {\r\n      type: SET_GOLD,\r\n      payload: {\r\n        gold,\r\n      },\r\n    }\r\n  },\r\n}\r\n\r\nexport const actions = {\r\n  updateParty: (party: tParty) => (dispatch: Dispatch) => {\r\n    checkForProcessedParty(party)\r\n    dispatch(actionCreators.updateParty(party))\r\n  },\r\n  upsertCharacter: (character: tCharacter) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.upsertCharacter(character))\r\n  },\r\n  deleteCharacter: (characterId: string) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.deleteCharacter(characterId))\r\n  },\r\n  upsertItem: (item: tArmor | tWeapon) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.upsertItem(item))\r\n  },\r\n  setGold: (gold: number) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.setGold(gold))\r\n  },\r\n}\r\n\r\nexport const core: StateCoreT<tParty> = {\r\n  [UPDATE_PARTY]: (state, action) => {\r\n    return {\r\n      ...action.payload.party,\r\n    }\r\n  },\r\n  [UPSERT_CHARACTER]: (state, action) => {\r\n    return updateCharacter(\r\n      state,\r\n      action.payload.character.id,\r\n      (c) => action.payload.character,\r\n    )\r\n  },\r\n  [DELETE_CHARACTER]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      characters: state.characters.filter(\r\n        (c) => c.id !== action.payload.characterId,\r\n      ),\r\n    }\r\n  },\r\n  [UPSERT_ITEM]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      items: [\r\n        ...state.items.filter((item) => item.id !== action.payload.item.id),\r\n        action.payload.item,\r\n      ],\r\n    }\r\n  },\r\n  [SET_GOLD]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      gold: action.payload.gold,\r\n    }\r\n  },\r\n}\r\nconst jack = { ...makeCharacter('executioner'), name: 'Jack' }\r\nconst jim = { ...makeCharacter('patrician'), name: 'Jim' }\r\nconst john = { ...makeCharacter('student'), name: 'Johnny' }\r\nexport const INITIAL_STATE: tParty = {\r\n  isParty: true,\r\n  id: PLAYER_PARTY_ID,\r\n  items: [],\r\n  gold: 100,\r\n  characters: [\r\n    addMultipleStatus(\r\n      {\r\n        ...jack,\r\n        // healthOffset: 30,\r\n      },\r\n      [\r\n        /*\r\n        'frozen',\r\n        'bleeding',\r\n        'burning',\r\n        'poisoned',\r\n        'stunned',\r\n        'speed-down',\r\n        'targeted',\r\n        'evasive',\r\n        'armor-down',\r\n        */\r\n      ],\r\n    ),\r\n    {\r\n      ...jim,\r\n      //healthOffset: 30\r\n    },\r\n    {\r\n      ...john,\r\n      //healthOffset: 30\r\n    },\r\n  ],\r\n}\r\nexport default makeReducer(core, INITIAL_STATE)\r\nexport const useParty = () => useSelector((state: StateT) => state.party)\r\nexport const usePartyActions = () =>\r\n  useActions(actions) as {\r\n    updateParty: (party: tParty) => void\r\n    upsertCharacter: (character: tCharacter) => void\r\n    deleteCharacter: (characterId: string) => void\r\n    upsertItem: (item: tArmor | tWeapon) => void\r\n    setGold: (gold: number) => void\r\n  }\r\n","import { v4 } from 'uuid'\r\nimport {\r\n  tEncounter,\r\n  tEncounterType,\r\n  tCombatEncounter,\r\n  tEncounterChoice,\r\n  tShopEncounter,\r\n  tShrineEncounter,\r\n  tBossEncounter,\r\n  tFloor,\r\n} from './type'\r\nimport { getRandom, noneg } from '../../util'\r\nimport { makeParty, makeBossParty } from '../Party/util'\r\nimport { tArmor } from '../Armor/type'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { GODSBEARD } from '../Consumable/objects/godsbeard'\r\nimport { tConsumable } from '../Consumable/type'\r\nimport { tBaseStats } from '../Stats/type'\r\nimport { POSSIBLE_SHINE_REWARDS, ZERO_REWARD } from './constants'\r\nimport { FLOOR_CONFIGS_BY_INDEX } from './floors'\r\n\r\nexport const makeEncounterType = (\r\n  depth: number,\r\n  max: number,\r\n): tEncounterType => {\r\n  // return 'shop'\r\n  if (depth === max - 2) {\r\n    return 'boss'\r\n  }\r\n  if (depth === max - 1) {\r\n    return 'reward'\r\n  }\r\n  if (depth === 0) {\r\n    return 'combat'\r\n  }\r\n  return getRandom([\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'shop',\r\n    'shrine',\r\n  ])\r\n}\r\n\r\nexport const makeRandomEncounter = (\r\n  depth: number,\r\n  max: number,\r\n  floor: number,\r\n) => {\r\n  let encounterType = makeEncounterType(depth, max)\r\n  const floorConfig = FLOOR_CONFIGS_BY_INDEX()[floor]\r\n  let encounter: tEncounter = {\r\n    id: v4(),\r\n    choiceId: '',\r\n    name: `Encounter ${depth}`,\r\n    type: encounterType,\r\n    reward: ZERO_REWARD,\r\n  }\r\n\r\n  if (encounter.type === 'combat') {\r\n    encounter = {\r\n      ...encounter,\r\n      party: makeParty(noneg(depth - 1), floor),\r\n    } as tCombatEncounter\r\n  }\r\n  if (encounter.type === 'boss') {\r\n    encounter = {\r\n      ...encounter,\r\n      boss: true,\r\n      party: makeBossParty(floor),\r\n    } as tBossEncounter\r\n  }\r\n  if (encounter.type === 'reward') {\r\n    encounter = {\r\n      ...encounter,\r\n    }\r\n  }\r\n  if (encounter.type === 'shop') {\r\n    const items = [GODSBEARD(), GODSBEARD(), GODSBEARD(), ...floorConfig.items]\r\n    encounter = {\r\n      ...encounter,\r\n      items,\r\n      consumables: [],\r\n      costs: items.reduce((r, i) => {\r\n        return {\r\n          ...r,\r\n          [i.id]: getItemCost(i),\r\n        }\r\n      }, {}),\r\n    } as tShopEncounter\r\n  }\r\n  if (encounter.type === 'shrine') {\r\n    const stat: keyof tBaseStats = getRandom<keyof tBaseStats>([\r\n      'vigor',\r\n      'strength',\r\n      'dexterity',\r\n      'intelligence',\r\n      'charisma',\r\n      'luck',\r\n    ])\r\n    const rewards = getRandom(POSSIBLE_SHINE_REWARDS())\r\n    encounter = {\r\n      ...encounter,\r\n      stat,\r\n      offset: 0,\r\n      rolls: rewards.length,\r\n      results: rewards,\r\n    } as tShrineEncounter\r\n  }\r\n\r\n  return encounter\r\n}\r\n\r\nexport const makeEncounterList = (\r\n  depth: number,\r\n  floor: number,\r\n): tEncounterChoice[] => {\r\n  return Array(depth)\r\n    .fill(undefined)\r\n    .map((_, index) => {\r\n      const id = v4()\r\n      return {\r\n        id,\r\n        depth: index,\r\n        chosen: undefined,\r\n        choices: Array(getRandom([1, 2, 3]))\r\n          .fill(null)\r\n          .map((_) => ({\r\n            ...makeRandomEncounter(index, depth, floor),\r\n            choiceId: id,\r\n          })),\r\n      }\r\n    })\r\n}\r\n\r\nexport const getItemCost = (item: tArmor | tWeapon | tConsumable): number => {\r\n  return item.goldValue * 3\r\n}\r\n\r\nexport const makeFloor = (depth: number, encounterCount: number): tFloor => {\r\n  let name = ''\r\n  if (depth === 0) {\r\n    name = 'The Forgotten Woods'\r\n  }\r\n  if (depth === 1) {\r\n    name = 'Tomb of the Formless One (in-progress)'\r\n  }\r\n  return {\r\n    id: v4(),\r\n    name,\r\n    encounters: makeEncounterList(encounterCount, depth),\r\n    depth,\r\n  }\r\n}\r\n","import { StateCoreT, StateT, StateActionT } from '../types'\r\nimport { makeReducer } from '../util'\r\nimport { useSelector } from 'react-redux'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport { Dispatch } from 'redux'\r\nimport { tShopEncounter, tFloor } from '../../game/Encounter/type'\r\nimport { makeFloor } from '../../game/Encounter/util'\r\n\r\nexport interface GameStateT {\r\n  level: number\r\n  floor: number\r\n  floors: tFloor[]\r\n}\r\n\r\nexport const RESET = '@action/game/reset'\r\nexport const CHOOSE_CURRENT = '@action/game/choose-current'\r\nexport const NEXT_LEVEL = '@action/game/next-level'\r\nexport const NEXT_FLOOR = '@action/game/next-floor'\r\nexport const REMOVE_ITEM = '@action/game/remove-item'\r\n\r\nexport const actionCreators = {\r\n  reset: (): StateActionT => ({\r\n    type: RESET,\r\n    payload: {},\r\n  }),\r\n  chooseCurrent: (value: number): StateActionT => ({\r\n    type: CHOOSE_CURRENT,\r\n    payload: {\r\n      value,\r\n    },\r\n  }),\r\n  nextLevel: (): StateActionT => ({\r\n    type: NEXT_LEVEL,\r\n    payload: {},\r\n  }),\r\n  nextFloor: (): StateActionT => ({\r\n    type: NEXT_FLOOR,\r\n    payload: {},\r\n  }),\r\n  removeItem: (\r\n    choiceId: string,\r\n    encounterId: string,\r\n    itemId: string,\r\n  ): StateActionT => ({\r\n    type: REMOVE_ITEM,\r\n    payload: {\r\n      choiceId,\r\n      encounterId,\r\n      itemId,\r\n    },\r\n  }),\r\n}\r\n\r\nexport const actions = {\r\n  reset: () => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.reset())\r\n  },\r\n  chooseCurrent: (value: number) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.chooseCurrent(value))\r\n  },\r\n  nextLevel: () => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.nextLevel())\r\n  },\r\n  nextFloor: () => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.nextFloor())\r\n  },\r\n  removeItem: (choiceId: string, encounterId: string, itemId: string) => (\r\n    dispatch: Dispatch,\r\n  ) => {\r\n    dispatch(actionCreators.removeItem(choiceId, encounterId, itemId))\r\n  },\r\n}\r\n\r\nconst updateCurrentFloor = (\r\n  state: GameStateT,\r\n  updater: (floor: tFloor) => tFloor,\r\n): GameStateT => {\r\n  return {\r\n    ...state,\r\n    floors: state.floors.map((floor) =>\r\n      floor.depth === state.floor ? updater(floor) : floor,\r\n    ),\r\n  }\r\n}\r\n\r\nexport const core: StateCoreT<GameStateT> = {\r\n  [RESET]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      level: 0,\r\n      floor: 0,\r\n      floors: [makeFloor(0, 11), makeFloor(1, 11)],\r\n    }\r\n  },\r\n  [CHOOSE_CURRENT]: (state, action) => {\r\n    return updateCurrentFloor(state, (floor) => {\r\n      return {\r\n        ...floor,\r\n        encounters: floor.encounters.map((e, i) => {\r\n          if (i === state.level) {\r\n            return {\r\n              ...e,\r\n              chosen: action.payload.value,\r\n            }\r\n          }\r\n          return e\r\n        }),\r\n      }\r\n    })\r\n  },\r\n  [NEXT_LEVEL]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      level: state.level + 1,\r\n    }\r\n  },\r\n  [NEXT_FLOOR]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      level: 0,\r\n      floor: state.floor + 1,\r\n    }\r\n  },\r\n  [REMOVE_ITEM]: (state, action) => {\r\n    return updateCurrentFloor(state, (floor) => {\r\n      return {\r\n        ...floor,\r\n        encounters: floor.encounters.map((choice) => {\r\n          if (choice.id === action.payload.choiceId) {\r\n            const chosen = choice.chosen\r\n              ? choice.choices[choice.chosen]\r\n              : undefined\r\n            if (\r\n              chosen &&\r\n              chosen.id === action.payload.encounterId &&\r\n              chosen.type === 'shop'\r\n            ) {\r\n              return {\r\n                ...choice,\r\n                choices: choice.choices.map(\r\n                  (c) =>\r\n                    ({\r\n                      ...c,\r\n                      items: (c as tShopEncounter).items.filter(\r\n                        (i) => i.id !== action.payload.itemId,\r\n                      ),\r\n                    } as tShopEncounter),\r\n                ),\r\n              }\r\n            }\r\n          }\r\n          return choice\r\n        }),\r\n      }\r\n    })\r\n  },\r\n}\r\n\r\nexport const INITIAL_STATE: GameStateT = {\r\n  level: 0,\r\n  floor: 0,\r\n  floors: [makeFloor(0, 11), makeFloor(1, 11)],\r\n}\r\n\r\nexport default makeReducer(core, INITIAL_STATE)\r\nexport const useGameState = () => useSelector((state: StateT) => state.game)\r\nexport const useGameStateActions = () =>\r\n  useActions(actions) as {\r\n    reset: () => void\r\n    chooseCurrent: (value: number) => void\r\n    nextLevel: () => void\r\n    nextFloor: () => void\r\n    removeItem: (choiceId: string, encounterId: string, itemId: string) => void\r\n  }\r\n","import React, { useContext, useMemo } from 'react'\r\nimport { useGameState, useGameStateActions } from '../../state/game'\r\nimport { tEncounterChoice, tEncounter, tFloor } from '../../game/Encounter/type'\r\n\r\nexport interface GameStateContextT {\r\n  encounters: tEncounterChoice[]\r\n  floors: tFloor[]\r\n  level: number\r\n  floor: number\r\n  currentChoice: tEncounterChoice | undefined\r\n  previousChoice: tEncounterChoice | undefined\r\n  currentEncounter: tEncounter | undefined\r\n  chooseCurrent: (value: number) => void\r\n  nextLevel: () => void\r\n  nextFloor: () => void\r\n  reset: () => void\r\n  removeItem: (choiceId: string, encounterId: string, itemId: string) => void\r\n}\r\n\r\nexport const defaultValue: GameStateContextT = {\r\n  encounters: [],\r\n  floors: [],\r\n  level: 0,\r\n  floor: 0,\r\n  currentChoice: undefined,\r\n  currentEncounter: undefined,\r\n  previousChoice: undefined,\r\n  chooseCurrent: (value) => {},\r\n  nextLevel: () => {},\r\n  nextFloor: () => {},\r\n  reset: () => {},\r\n  removeItem: (choiceId, encounterId, itemId) => {},\r\n}\r\nexport const GameStateContext = React.createContext<GameStateContextT>(\r\n  defaultValue,\r\n)\r\nexport const useGameStateContext = () => useContext(GameStateContext)\r\n\r\nexport interface GameStateProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const GameStateContextProvider = (props: GameStateProviderPropsT) => {\r\n  const { children } = props\r\n  const { floors, floor, level } = useGameState()\r\n  const currentFloor = floors[floor]\r\n  const encounters = currentFloor.encounters\r\n  const {\r\n    nextLevel,\r\n    nextFloor,\r\n    chooseCurrent,\r\n    reset,\r\n    removeItem,\r\n  } = useGameStateActions()\r\n  const currentChoice = useMemo(() => {\r\n    return encounters[level]\r\n  }, [encounters, level])\r\n  const previousChoice = useMemo(() => {\r\n    return encounters[level - 1]\r\n  }, [encounters, level])\r\n  const currentEncounter = useMemo(() => {\r\n    const choice = encounters[level]\r\n    if (choice && choice.chosen !== undefined) {\r\n      return choice.choices[choice.chosen]\r\n    }\r\n  }, [encounters, level])\r\n\r\n  return (\r\n    <GameStateContext.Provider\r\n      value={{\r\n        encounters,\r\n        floors,\r\n        level,\r\n        floor,\r\n        currentChoice,\r\n        previousChoice,\r\n        currentEncounter,\r\n        reset,\r\n        nextLevel,\r\n        nextFloor,\r\n        chooseCurrent,\r\n        removeItem,\r\n      }}\r\n    >\r\n      {children}\r\n    </GameStateContext.Provider>\r\n  )\r\n}\r\n","import React, { useMemo, useContext, useState } from 'react'\r\nimport { usePartyActions, useParty } from '../../state/party'\r\nimport { tProcessedParty, tParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter, tCharacter } from '../../game/Character/type'\r\nimport {\r\n  processParty,\r\n  makeParty,\r\n  findCharacterInParty,\r\n} from '../../game/Party/util'\r\nimport {\r\n  checkForProcessedCharacter,\r\n  processCharacter,\r\n  makeCharacter,\r\n  equipArmor,\r\n  equipWeapon,\r\n  unequipArmor,\r\n} from '../../game/Character/util'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { useGameStateContext } from '../GameStateContext'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { FISTS } from '../../game/Weapon/fists'\r\n\r\nexport interface PartyContextT {\r\n  party: tProcessedParty\r\n  rawParty: tParty\r\n  activeCharacter: tProcessedCharacter\r\n  updateParty: (party: tParty) => void\r\n  upsertCharacter: (character: tCharacter) => void\r\n  deleteCharacter: (characterId: string) => void\r\n  findCharacter: (characterId: string) => tProcessedCharacter | undefined\r\n  findRawCharacter: (characterId: string) => tCharacter | undefined\r\n  setActiveCharacter: (character: tProcessedCharacter) => void\r\n  equipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n  unequipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n  purchaseItem: (item: tArmor | tWeapon | tConsumable, cost: number) => void\r\n  sellItem: (itemId: string) => void\r\n  refreshParty: () => void\r\n}\r\nconst defaultContextValue: PartyContextT = {\r\n  rawParty: makeParty(0, 0),\r\n  party: processParty(makeParty(0, 0)),\r\n  activeCharacter: processCharacter(makeCharacter('executioner')),\r\n  updateParty: (party) => {},\r\n  upsertCharacter: (character) => {},\r\n  deleteCharacter: (characterId) => {},\r\n  findCharacter: (characterId) => undefined,\r\n  findRawCharacter: (characterId) => undefined,\r\n  setActiveCharacter: (character) => {},\r\n  equipItem: (characterId, item) => {},\r\n  unequipItem: (characterId, item) => {},\r\n  purchaseItem: (item, cost) => {},\r\n  sellItem: (itemId) => {},\r\n  refreshParty: () => {},\r\n}\r\nexport const PartyContext = React.createContext<PartyContextT>(\r\n  defaultContextValue,\r\n)\r\n\r\nexport interface PartyContextProviderPropsT {\r\n  children: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const PartyContextProvider = (props: PartyContextProviderPropsT) => {\r\n  const { children } = props\r\n  const actions = usePartyActions()\r\n  const rawParty = useParty()\r\n  const { currentChoice, currentEncounter, removeItem } = useGameStateContext()\r\n  const party = useMemo(() => processParty(rawParty), [rawParty])\r\n  const [activeCharacterId, setActiveCharacterId] = useState<string>(\r\n    party.characters[0].id,\r\n  )\r\n  const activeCharacter = useMemo(() => {\r\n    return party.characters.find(\r\n      (c) => c.id === activeCharacterId,\r\n    ) as tProcessedCharacter\r\n  }, [activeCharacterId, party.characters])\r\n  const setActiveCharacter = (character: tProcessedCharacter) =>\r\n    setActiveCharacterId(character.id)\r\n  const updateParty = (party: tParty) => {\r\n    actions.updateParty(party)\r\n  }\r\n  const upsertCharacter = (character: tCharacter) => {\r\n    if (!character) return\r\n    checkForProcessedCharacter(character)\r\n    actions.upsertCharacter(character)\r\n  }\r\n  const deleteCharacter = (characterId: string) => {\r\n    actions.deleteCharacter(characterId)\r\n  }\r\n  const findCharacter = (characterId: string) => {\r\n    return findCharacterInParty<tProcessedParty, tProcessedCharacter>(\r\n      party,\r\n      characterId,\r\n    )\r\n  }\r\n  const findRawCharacter = (characterId: string) => {\r\n    return findCharacterInParty(rawParty, characterId)\r\n  }\r\n\r\n  const equipItem = (characterId: string, item: tWeapon | tArmor) => {\r\n    const character = findRawCharacter(characterId)\r\n    if (!character) return\r\n    if (item.itemType === 'armor') {\r\n      const armor = item as tArmor\r\n      if (armor.resource === 'offhand' && (character.weapon || FISTS()).twoHand)\r\n        return\r\n      const result = equipArmor(character, armor)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.armor ? [result.armor] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n    if (item.itemType === 'weapon') {\r\n      const weapon = item as tWeapon\r\n      if ((character.weapon || FISTS()).twoHand) {\r\n        if (character.armor.find((a) => a.resource === 'offhand')) {\r\n          return\r\n        }\r\n      }\r\n      const result = equipWeapon(character, weapon)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.weapon ? [result.weapon] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n  }\r\n  const unequipItem = (characterId: string, item: tWeapon | tArmor) => {\r\n    const character = findRawCharacter(characterId)\r\n    if (!character) return\r\n    if (item.itemType === 'armor') {\r\n      const armor = item as tArmor\r\n      const result = unequipArmor(character, armor.resource)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.armor ? [result.armor] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n    if (item.itemType === 'weapon') {\r\n    }\r\n  }\r\n  const purchaseItem = (item: tArmor | tWeapon | tConsumable, cost: number) => {\r\n    if (party.gold > cost && currentChoice && currentEncounter) {\r\n      if (item.itemType === 'armor' || item.itemType === 'weapon') {\r\n        actions.upsertItem(item as tArmor | tWeapon)\r\n      }\r\n      if (item.itemType === 'consumable') {\r\n        updateParty({\r\n          ...rawParty,\r\n          characters: rawParty.characters.map((c) => ({\r\n            ...c,\r\n            consumables: [...c.consumables, item as tConsumable],\r\n          })),\r\n        })\r\n      }\r\n      actions.setGold(party.gold - cost)\r\n      removeItem(currentChoice.id, currentEncounter.id, item.id)\r\n    }\r\n  }\r\n  const sellItem = (itemId: string) => {\r\n    const item = rawParty.items.find((i) => i.id === itemId)\r\n    if (item) {\r\n      updateParty({\r\n        ...rawParty,\r\n        items: rawParty.items.filter((i) => i.id !== itemId),\r\n        gold: rawParty.gold + item.goldValue,\r\n      })\r\n    }\r\n  }\r\n  const refreshParty = () => {\r\n    updateParty({\r\n      ...rawParty,\r\n      characters: rawParty.characters.map((c) => ({\r\n        ...c,\r\n        healthOffset: 0,\r\n        status: [],\r\n      })),\r\n    })\r\n  }\r\n\r\n  return (\r\n    <PartyContext.Provider\r\n      value={{\r\n        party,\r\n        rawParty,\r\n        activeCharacter,\r\n        updateParty,\r\n        upsertCharacter,\r\n        deleteCharacter,\r\n        findCharacter,\r\n        findRawCharacter,\r\n        setActiveCharacter,\r\n        equipItem,\r\n        unequipItem,\r\n        purchaseItem,\r\n        sellItem,\r\n        refreshParty,\r\n      }}\r\n    >\r\n      {children}\r\n    </PartyContext.Provider>\r\n  )\r\n}\r\n\r\nexport const usePartyContext = () => useContext(PartyContext)\r\n","import { ModalStylesT } from '.'\r\n\r\nexport interface ModalContextStateT {\r\n  isOpen: boolean\r\n  contents: JSX.Element | null\r\n  callback: ((payload?: any) => void) | null\r\n  payload: any | null\r\n  blocking: boolean\r\n  styles: ModalStylesT\r\n}\r\nexport const initialState: ModalContextStateT = {\r\n  isOpen: false,\r\n  contents: null,\r\n  callback: null,\r\n  payload: null,\r\n  blocking: false,\r\n  styles: {},\r\n}\r\n\r\nexport const OPEN = 'modalContext/OPEN'\r\nexport const CLOSE = 'modalContext/CLOSE'\r\nexport const SET_CONTENTS = 'modalContext/SET_CONTENTS'\r\nexport const SET_CALLBACK = 'modalContext/SET_CALLBACK'\r\nexport const SET_PAYLOAD = 'modalContext/SET_PAYLOAD'\r\nexport const SET_BLOCKING = 'modalContext/SET_BLOCKING'\r\nexport const SET_STYLE = 'modalContext/SET_STYLE'\r\n\r\nexport const actions = {\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => ({\r\n    type: OPEN,\r\n    contents,\r\n    styles,\r\n    blocking,\r\n    callback,\r\n  }),\r\n  close: () => ({ type: CLOSE }),\r\n  setPayload: (payload: any) => ({ type: SET_PAYLOAD, payload }),\r\n  setContents: (contents: JSX.Element | null) => ({\r\n    type: SET_CONTENTS,\r\n    contents,\r\n  }),\r\n  setCallback: (callback: (() => void) | null) => ({\r\n    type: SET_CALLBACK,\r\n    callback,\r\n  }),\r\n  setBlocking: (blocking: boolean) => ({ type: SET_BLOCKING, blocking }),\r\n  setStyles: (styles: ModalStylesT) => ({ type: SET_STYLE, styles }),\r\n}\r\n\r\nconst core: Record<\r\n  string,\r\n  (state: ModalContextStateT, action: any) => ModalContextStateT\r\n> = {\r\n  [OPEN]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    isOpen: true,\r\n    contents: action.contents ? action.contents : state.contents,\r\n    styles: action.styles ? action.styles : state.styles || {},\r\n    blocking: action.blocking || false,\r\n    callback: action.callback ? action.callback : state.callback,\r\n  }),\r\n  [CLOSE]: (state: ModalContextStateT) => ({\r\n    ...state,\r\n    isOpen: false,\r\n  }),\r\n  [SET_PAYLOAD]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    payload: action.payload,\r\n  }),\r\n  [SET_CONTENTS]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: null,\r\n    payload: null,\r\n    contents: action.contents,\r\n    blocking: false,\r\n    style: {},\r\n  }),\r\n  [SET_CALLBACK]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: action.callback,\r\n  }),\r\n  [SET_BLOCKING]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    blocking: action.blocking,\r\n  }),\r\n  [SET_STYLE]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    styles: action.styles,\r\n  }),\r\n}\r\n\r\nexport const reducer = (\r\n  state: ModalContextStateT = initialState,\r\n  action: any,\r\n) => {\r\n  const coreFunction = core[action.type]\r\n  return coreFunction ? coreFunction(state, action) : state\r\n}\r\n","import React, { useContext, useReducer, useMemo, CSSProperties } from 'react'\r\nimport Modal from 'react-modal'\r\nimport { actions, reducer, initialState, ModalContextStateT } from './reducer'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ModalContextT {\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => void\r\n  close: (payload?: any) => void\r\n  setPayload: (payload: any) => void\r\n  setBlocking: (blocking: boolean) => void\r\n  setContents: (contents: JSX.Element) => void\r\n  setCallback: (callback: (payload?: any) => void) => void\r\n  setStyles: (styles: ModalStylesT) => void\r\n}\r\nconst defaultContext: ModalContextT = {\r\n  open: () => null,\r\n  close: () => null,\r\n  setBlocking: () => null,\r\n  setPayload: () => null,\r\n  setContents: () => null,\r\n  setCallback: () => null,\r\n  setStyles: () => null,\r\n}\r\nexport const ModalContext = React.createContext<ModalContextT>(defaultContext)\r\nexport const useModalContext = () => useContext(ModalContext)\r\n\r\nexport interface ModalStylesT {\r\n  modal?: CSSProperties\r\n  overlay?: CSSProperties\r\n}\r\n\r\nconst getContextValue = (\r\n  state: ModalContextStateT,\r\n  dispatch: React.Dispatch<any>,\r\n) => ({\r\n  isOpen: state.isOpen,\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => {\r\n    dispatch(actions.open(contents, styles, blocking, callback))\r\n  },\r\n  close: (payload?: any) => {\r\n    if (state.callback) state.callback(payload || state.payload)\r\n    dispatch(actions.close())\r\n  },\r\n  setPayload: (payload: any) => dispatch(actions.setPayload(payload)),\r\n  setContents: (contents: JSX.Element) =>\r\n    dispatch(actions.setContents(contents)),\r\n  setCallback: (callback: (payload?: any) => void) =>\r\n    dispatch(actions.setCallback(callback)),\r\n  setBlocking: (blocking: boolean) => dispatch(actions.setBlocking(blocking)),\r\n  setStyles: (styles: ModalStylesT) => dispatch(actions.setStyles(styles)),\r\n})\r\nModal.setAppElement('#root')\r\nexport interface ModalContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const ModalContextProvider = (props: ModalContextProviderPropsT) => {\r\n  const { children } = props\r\n  const reducerValue = useReducer(reducer, initialState)\r\n  const [state] = reducerValue\r\n  const context = useMemo(() => getContextValue(...reducerValue), [\r\n    reducerValue,\r\n  ])\r\n\r\n  return (\r\n    <ModalContext.Provider value={context}>\r\n      {children}\r\n      <Modal\r\n        isOpen={state.isOpen}\r\n        onRequestClose={() => {\r\n          if (!state.blocking) context.close()\r\n        }}\r\n        style={{\r\n          content: {\r\n            backgroundColor: Theme.darkBgColor,\r\n            color: 'white',\r\n            width: 400,\r\n            margin: '0 auto',\r\n            bottom: 'unset',\r\n            borderColor: Theme.lightBgColor,\r\n            ...state.styles.modal,\r\n          },\r\n          overlay: {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n            zIndex: 900,\r\n            ...state.styles.overlay,\r\n          },\r\n        }}\r\n      >\r\n        {state.contents || <div />}\r\n      </Modal>\r\n    </ModalContext.Provider>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport interface FlexContainerPropsT {\r\n  $direction?: 'row' | 'column' | 'column-reverse'\r\n  $full?: boolean\r\n}\r\nexport const FlexContainer = styled('div', (props: FlexContainerPropsT) => ({\r\n  display: 'flex',\r\n  flexDirection: props.$direction || 'row',\r\n  flex: props.$full ? 1 : 'default',\r\n}))\r\nexport const FullContainer = styled('div', () => ({\r\n  flex: 1,\r\n}))\r\n","import React from 'react'\r\nimport { styled, withStyle } from 'styletron-react'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { Theme } from '../theme'\r\n\r\nexport interface ButtonPropsT {\r\n  $direction?: 'up' | 'down'\r\n}\r\nexport const Button = styled('button', (props: ButtonPropsT) => {\r\n  return {\r\n    cursor: 'pointer',\r\n    background: Theme.mediumBgColor,\r\n    boxShadow: 'inset 0px 0px 3px black',\r\n    textShadow: '0px 1px 3px black',\r\n    border: '1px solid rgba(255,255,255,0.2)',\r\n    color: 'rgba(255,255,255,1)',\r\n    ':hover': {\r\n      border: '1px solid rgba(255,255,255,0.4)',\r\n    },\r\n    ':active': {\r\n      outline: 'none',\r\n      border: '1px solid rgba(255,255,255,0.7)',\r\n    },\r\n    ':focus': {\r\n      outline: 'none',\r\n    },\r\n    padding: '10px 30px',\r\n    userSelect: 'none',\r\n  }\r\n})\r\n\r\nexport const RedButton = withStyle(Button, (props: ButtonPropsT) => {\r\n  return {\r\n    // fontFamily: Theme.titleFont,\r\n    fontWeight: 'bold',\r\n    background:\r\n      'linear-gradient(0deg, rgba(157,30,30,1) 0%, rgba(110,23,23,1) 100%)',\r\n  }\r\n})\r\n\r\nexport const ConfirmButton = withStyle(Button, (props: ButtonPropsT) => {\r\n  const { $direction } = props\r\n  return {\r\n    // background: 'linear-gradient(0deg, rgba(157,0,0,1) 0%, rgba(110,0,0,1) 100%)',\r\n    // fontWeight: 'bold',\r\n    borderTop: $direction === 'down' ? 'none' : undefined,\r\n    borderBottom: $direction === 'up' ? 'none' : undefined,\r\n    padding: '10px 30px',\r\n    boxShadow: 'inset 0px 2px 8px black',\r\n    ':hover': {\r\n      borderTop: $direction === 'down' ? 'none' : undefined,\r\n      borderBottom: $direction === 'up' ? 'none' : undefined,\r\n    },\r\n    animationDirection: '1s',\r\n    animationIterationCount: 'infinite',\r\n    animationName: `\r\n      from: {\r\n        background: 'rgba(255,255,255,0.4)',\r\n      },\r\n\r\n      to: {\r\n        background: 'rgba(255,255,255,1)',\r\n      },\r\n    `,\r\n  }\r\n})\r\n\r\nexport const ConfirmButton2 = (props: any) => {\r\n  const styles = useSpring({\r\n    from: {\r\n      border: '1px solid rgba(255,255,255,0)',\r\n    },\r\n    to: async (next: any) => {\r\n      while (1) {\r\n        await next({\r\n          border: '1px solid rgba(255,255,255,0)',\r\n        })\r\n        await next({ border: '1px solid rgba(255,255,255,1)' })\r\n      }\r\n    },\r\n  })\r\n  return (\r\n    <animated.div style={styles}>\r\n      <ConfirmButton style={{ border: 'none' }}>{props.children}</ConfirmButton>\r\n    </animated.div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nexport interface IconPropsT {\r\n  src: string\r\n  size: number\r\n  fill?: string\r\n  style?: React.CSSProperties\r\n  shadow?: boolean\r\n  onClick?: () => void\r\n}\r\nexport const Icon = ({\r\n  src,\r\n  size,\r\n  style = {},\r\n  fill = 'white',\r\n  shadow,\r\n  onClick,\r\n}: IconPropsT) => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [svg, setSvg] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (src) {\r\n      fetch(src)\r\n        .then((res) => res.text())\r\n        .then((text) => setSvg(text))\r\n        .then(() => setLoading(false))\r\n    }\r\n  }, [src])\r\n\r\n  return !loading ? (\r\n    <div\r\n      className={`icon ${shadow ? 'shadow' : ''}`}\r\n      onClick={() => {\r\n        if (onClick) onClick()\r\n      }}\r\n      style={{ ...style, height: size, width: size, fill }}\r\n      dangerouslySetInnerHTML={{ __html: svg }}\r\n    />\r\n  ) : (\r\n    <div />\r\n  )\r\n}\r\n","import React, { useState, useLayoutEffect } from 'react'\r\nimport { v4 } from 'uuid'\r\n\r\nexport interface HoverChildrenT {\r\n  isHovering: boolean\r\n}\r\nexport interface HoverPropsT {\r\n  delay?: number\r\n  flex?: boolean\r\n  children: (props: HoverChildrenT) => JSX.Element\r\n}\r\nexport const Hover = (props: HoverPropsT) => {\r\n  const { delay = 500, flex, children } = props\r\n  const [internalHovering, setInternalHovering] = useState<boolean>(false)\r\n  const [isHovering, setIsHovering] = useState<boolean>(false)\r\n  const [guid, setGuid] = useState<string>(v4())\r\n  useLayoutEffect(() => {\r\n    const action = async () => {\r\n      if (internalHovering) {\r\n        setTimeout(() => {\r\n          setGuid(v4())\r\n        }, delay)\r\n      }\r\n    }\r\n    action()\r\n  }, [internalHovering])\r\n  useLayoutEffect(() => {\r\n    if (internalHovering) {\r\n      setIsHovering(true)\r\n    }\r\n  }, [guid])\r\n  const onMouseEnter = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(true)\r\n  }\r\n  const onMouseLeave = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(false)\r\n    setIsHovering(false)\r\n  }\r\n  return (\r\n    <div\r\n      style={{ display: flex ? 'flex' : 'block', flex: flex ? 1 : undefined }}\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n    >\r\n      {children({ isHovering })}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Hover } from '../components/Hover'\r\nimport { Theme } from '../theme'\r\n\r\nexport interface BoxContainerPropsT extends React.HTMLProps<HTMLDivElement> {\r\n  substyle?: React.CSSProperties\r\n  tag?: any\r\n  to?: string\r\n}\r\nexport const BoxContainer = (props: BoxContainerPropsT) => {\r\n  const {\r\n    style = {},\r\n    substyle = {},\r\n    children,\r\n    tag: Element = 'div',\r\n    ...rest\r\n  } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        border: '1px solid #000',\r\n        display: 'flex',\r\n        boxSizing: 'border-box',\r\n        ...style,\r\n      }}\r\n    >\r\n      <Element\r\n        style={{\r\n          border: substyle.border || `1px solid ${Theme.lightBgColor}`,\r\n          background: `linear-gradient(0deg, ${Theme.mediumBgColor} 0%, rgba(42,42,44) 100%)`,\r\n          padding: 10,\r\n          color: '#ccc',\r\n          flex: 1,\r\n          boxShadow: 'inset 0px 0px 2px black',\r\n          ...substyle,\r\n        }}\r\n        {...rest}\r\n      >\r\n        {children}\r\n      </Element>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const SmallBox = (props: BoxContainerPropsT) => (\r\n  <BoxContainer\r\n    {...props}\r\n    style={{\r\n      height: 40,\r\n      width: 40,\r\n      ...props.style,\r\n    }}\r\n    substyle={{\r\n      display: 'flex',\r\n      padding: 0,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      background: Theme.darkBgColor,\r\n      ...props.substyle,\r\n    }}\r\n  >\r\n    {props.children}\r\n  </BoxContainer>\r\n)\r\n\r\nexport const BoxButton = (props: BoxContainerPropsT) => {\r\n  return (\r\n    <Hover delay={0}>\r\n      {({ isHovering }) => (\r\n        <BoxContainer\r\n          {...props}\r\n          tag='button'\r\n          style={{\r\n            margin: 0,\r\n            ...(props.style || {}),\r\n          }}\r\n          substyle={{\r\n            borderColor:\r\n              isHovering && !props.disabled ? '#999' : Theme.lightBgColor,\r\n            padding: '4px',\r\n            cursor: props.disabled ? 'default' : 'pointer',\r\n            background: props.disabled ? '#444' : Theme.darkBgColor,\r\n            boxShadow: props.disabled ? 'none' : undefined,\r\n            ...(props.substyle || {}),\r\n          }}\r\n        />\r\n      )}\r\n    </Hover>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tStats } from '../../game/Stats/type'\r\nimport {\r\n  DEFENSE_BONUS_KEYS,\r\n  STAT_KEY_LABELS,\r\n  DAMAGE_BONUS_KEYS,\r\n  STAT_BONUS_KEYS,\r\n  HEALTH_FOCUS_BONUS_KEYS,\r\n} from '../../game/Stats/constants'\r\nimport { tCharacterTag } from '../../game/Character/type'\r\n\r\nexport interface StatsPreviewPropsT {\r\n  stats: tStats\r\n}\r\n\r\nconst defense_key_colors: any = {\r\n  armor: 'lightblue',\r\n  resistance: 'plum',\r\n}\r\n\r\nexport const StatsPreview = (props: StatsPreviewPropsT) => {\r\n  const { stats } = props\r\n  return (\r\n    <FlexContainer $direction='column' style={{ fontSize: 14 }}>\r\n      {DEFENSE_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span\r\n              key={key}\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: defense_key_colors[key],\r\n              }}\r\n            >\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {DAMAGE_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span key={key} style={{ textTransform: 'capitalize' }}>\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {HEALTH_FOCUS_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span key={key} style={{ textTransform: 'capitalize' }}>\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {STAT_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] > 0 && (\r\n            <span\r\n              key={key}\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: 'lightgreen',\r\n              }}\r\n            >\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {STAT_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] < 0 && (\r\n            <span\r\n              key={key}\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: 'lightcoral',\r\n              }}\r\n            >\r\n              {stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {(Object.keys(stats.damageModifiers) as tCharacterTag[])\r\n        .filter((tag) => stats.damageModifiers[tag] > 0)\r\n        .map((tag) => (\r\n          <span key={tag}>\r\n            +{Math.floor(stats.damageModifiers[tag] * 100)}% damage against{' '}\r\n            {tag}\r\n          </span>\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import Shot from './svg/lorc/high-shot.svg'\r\nimport Headshot from './svg/delapouite/shield-impact.svg'\r\nimport PinDown from './svg/lorc/energy-arrow.svg'\r\n\r\nimport Arcane from './svg/lorc/fire-zone.svg'\r\nimport Blast from './svg/lorc/magic-swirl.svg'\r\nimport Nova from './svg/lorc/heavy-timer.svg'\r\nimport TimeJump from './svg/delapouite/extra-time.svg'\r\n\r\nimport Smash from './svg/lorc/flat-hammer.svg'\r\nimport Shockwave from './svg/lorc/hammer-drop.svg'\r\nimport Thrust from './svg/lorc/scythe.svg'\r\n\r\nimport Taunt from './svg/lorc/bordered-shield.svg'\r\n\r\nimport Ring from './svg/lorc/ringing-bell.svg'\r\nimport Reverberate from './svg/lorc/resonance.svg'\r\nimport Protect from './svg/lorc/shieldcomb.svg'\r\nimport Rush from './svg/lorc/sprint.svg'\r\n\r\nimport Fire from './svg/lorc/gunshot.svg'\r\nimport Snipe from './svg/delapouite/crosshair.svg'\r\nimport FanFire from './svg/delapouite/bullet-impacts.svg'\r\n\r\nimport Reset from './svg/delapouite/backward-time.svg'\r\nimport Slow from './svg/lorc/snail.svg'\r\nimport SpreadShot from './svg/lorc/double-shot.svg'\r\n\r\nimport Heal from './svg/sbed/health-normal.svg'\r\nimport Bless from './svg/lorc/embrassed-energy.svg'\r\nimport PoisonKnife from './svg/lorc/bone-knife.svg'\r\nimport Lunge from './svg/lorc/wave-strike.svg'\r\nimport Restore from './svg/lorc/life-support.svg'\r\nimport EvadeUp from './svg/lorc/dodging.svg'\r\nimport Chop from './svg/lorc/battered-axe.svg'\r\nimport Strike from './svg/lorc/plain-dagger.svg'\r\nimport Stab from './svg/lorc/knife-thrust.svg'\r\nimport Cleave from './svg/lorc/pointy-sword.svg'\r\nimport AxeSpin from './svg/lorc/axe-swing.svg'\r\nimport Slice from './svg/lorc/saber-slash.svg'\r\nimport ArmorUp from './svg/delapouite/vibrating-shield.svg'\r\nimport Punch from './svg/lorc/punch.svg'\r\n\r\nimport Stun from './svg/lorc/ubisoft-sun.svg'\r\n\r\nimport AttackUp from './svg/lorc/all-for-one.svg'\r\nimport CurePotion from './svg/lorc/drink-me.svg'\r\n\r\nexport const SKILL_ICONS: Record<string, string> = {\r\n  Punch: Punch,\r\n\r\n  Shot: Shot,\r\n  Headshot: Headshot,\r\n  'Pin Down': PinDown,\r\n  Flurry: SpreadShot,\r\n\r\n  Arcane: Arcane,\r\n  Nova: Nova,\r\n  Blast: Blast,\r\n  'Time Jump': TimeJump,\r\n\r\n  Ring: Ring,\r\n  Reverberate: Reverberate,\r\n\r\n  Smash: Smash,\r\n  Strike: Strike,\r\n  Swing: Chop,\r\n  Chop: Chop,\r\n  Thrust: Thrust,\r\n  Earthquake: Shockwave,\r\n  Ripple: Shockwave,\r\n  'Axe Spin': AxeSpin,\r\n  Cleave: Cleave,\r\n  Lunge: Lunge,\r\n  Stab: Stab,\r\n  Slice: Slice,\r\n  Swipe: Slice,\r\n\r\n  Fire: Fire,\r\n  Snipe: Snipe,\r\n  'Fan Fire': FanFire,\r\n\r\n  Stun: Stun,\r\n  Reset: Reset,\r\n  Taunt: Taunt,\r\n  Slow: Slow,\r\n  Protect: Protect,\r\n\r\n  Heal: Heal,\r\n  'Remove Curses': Bless,\r\n  'Poison Knife': PoisonKnife,\r\n  'Cure Potion': CurePotion,\r\n  Restore: Restore,\r\n  Rush: Rush,\r\n  Vanish: EvadeUp,\r\n  'Evade Up': EvadeUp,\r\n  'Armor Up': ArmorUp,\r\n  'Attack Up': AttackUp,\r\n  'Beast Drug': AttackUp,\r\n}\r\n","import Stunned from './svg/lorc/star-swirl.svg'\r\nimport Targeted from './svg/sbed/targeted.svg'\r\nimport Evasive from './svg/lorc/dodging.svg'\r\nimport SpeedDown from './svg/delapouite/sticky-boot.svg'\r\nimport Poisoned from './svg/lorc/biohazard.svg'\r\nimport Burning from './svg/carl-olsen/flame.svg'\r\nimport Bleeding from './svg/lorc/bleeding-wound.svg'\r\nimport Frozen from './svg/lorc/snowflake-2.svg'\r\nimport ArmorDown from './svg/lorc/broken-shield.svg'\r\nimport ResistanceDown from './svg/lorc/broken-shield.svg'\r\nimport Cursed from './svg/lorc/pentagram-rose.svg'\r\nimport Protected from './svg/lorc/shieldcomb.svg'\r\nimport AttackUp from './svg/lorc/all-for-one.svg'\r\nimport { tStatusType } from '../game/Status/type'\r\n\r\nexport const STATUS_ICONS: Partial<Record<tStatusType, string>> = {\r\n  evasive: Evasive,\r\n  stunned: Stunned,\r\n  targeted: Targeted,\r\n  protected: Protected,\r\n  poisoned: Poisoned,\r\n  burning: Burning,\r\n  bleeding: Bleeding,\r\n  frozen: Frozen,\r\n  'speed-down': SpeedDown,\r\n  'armor-down': ArmorDown,\r\n  'attack-up': AttackUp,\r\n  'resistance-down': ResistanceDown,\r\n  'cursed-agility': Cursed,\r\n  'cursed-charisma': Cursed,\r\n  'cursed-dexterity': Cursed,\r\n  'cursed-intelligence': Cursed,\r\n  'cursed-luck': Cursed,\r\n  'cursed-strength': Cursed,\r\n  'cursed-vigor': Cursed,\r\n}\r\n","import Vigor from './svg/delapouite/heart-beats.svg'\r\nimport Strength from './svg/delapouite/biceps.svg'\r\nimport Brain from './svg/lorc/brain.svg'\r\nimport Awareness from './svg/delapouite/eye-target.svg'\r\nimport Juggler from './svg/lorc/juggler.svg'\r\nimport Agility from './svg/lorc/sprint.svg'\r\nimport Clover from './svg/lorc/clover.svg'\r\n\r\nimport MagicArmor from './svg/lorc/robe.svg'\r\nimport ClothArmor from './svg/lorc/scale-mail.svg'\r\nimport Armor from './svg/delapouite/chest-armor.svg'\r\nimport Shield from './svg/delapouite/viking-shield.svg'\r\nimport MagicShield from './svg/lorc/lightning-shield.svg'\r\nimport Footwear from './svg/lorc/leather-boot.svg'\r\nimport Hat from './svg/delapouite/robin-hood-hat.svg'\r\nimport MagicHat from './svg/lorc/pointy-hat.svg'\r\nimport Helmet from './svg/lorc/visored-helm.svg'\r\nimport Weapon from './svg/lorc/broadsword.svg'\r\n\r\nimport Axe from './svg/lorc/battle-axe.svg'\r\nimport Blunt from './svg/lorc/gavel.svg'\r\nimport Bow from './svg/lorc/heavy-arrow.svg'\r\nimport Dagger from './svg/lorc/bowie-knife.svg'\r\nimport Handgun from './svg/skoll/revolver.svg'\r\nimport MagicStaff from './svg/lorc/wizard-staff.svg'\r\nimport Sword from './svg/lorc/broadsword.svg'\r\nimport Scythe from './svg/lorc/scythe.svg'\r\nimport Chime from './svg/lorc/ringing-bell.svg'\r\nimport Greatsword from './svg/lorc/croc-sword.svg'\r\nimport Fist from './svg/skoll/fist.svg'\r\n\r\nimport Godsbeard from './svg/delapouite/herbs-bundle.svg'\r\nimport Lotus from './svg/lorc/lotus-flower.svg'\r\nimport PoisonKnife from './svg/lorc/bone-knife.svg'\r\nimport BeastDrug from './svg/delapouite/medicine-pills.svg'\r\nimport CurePotion from './svg/lorc/drink-me.svg'\r\nimport { tBaseStats } from '../game/Stats/type'\r\nimport { GODSBEARD } from '../game/Consumable/objects/godsbeard'\r\nimport { tArmorResourceType, tArmorType } from '../game/Armor/type'\r\nimport { tWeaponType } from '../game/Weapon/type'\r\nimport { tCharacterClass } from '../game/Character/type'\r\n\r\nimport Executioner from './svg/delapouite/executioner-hood.svg'\r\nimport Hunter from './svg/lorc/cowled.svg'\r\nimport Bard from './svg/delapouite/female-vampire.svg'\r\nimport Scholar from './svg/delapouite/wizard-face.svg'\r\nimport Hobo from './svg/delapouite/perspective-dice-six.svg'\r\nimport { CELESTIAL_LOTUS } from '../game/Consumable/objects/celestial_lotus'\r\nimport { POISON_KNIFE } from '../game/Consumable/objects/poison_knife'\r\nimport { BEAST_DRUG } from '../game/Consumable/objects/beast_drug'\r\nimport { CURE_POTION } from '../game/Consumable/objects/curing_potion'\r\n\r\nexport { SKILL_ICONS } from './skills'\r\nexport { STATUS_ICONS } from './status'\r\n\r\nexport const STAT_ICONS: Record<keyof tBaseStats, string> = {\r\n  vigor: Vigor,\r\n  strength: Strength,\r\n  intelligence: Brain,\r\n  dexterity: Awareness,\r\n  charisma: Juggler,\r\n  agility: Agility,\r\n  luck: Clover,\r\n  evasion: '',\r\n  criticalChance: '',\r\n}\r\n\r\nexport const ARMOR_TYPE_ICONS: Record<tArmorType, string> = {\r\n  'magic-armor': MagicArmor,\r\n  'light-armor': ClothArmor,\r\n  'heavy-armor': Armor,\r\n  shield: Shield,\r\n  ward: MagicShield,\r\n  footwear: Footwear,\r\n  hat: Hat,\r\n  'magic-hat': MagicHat,\r\n  helmet: Helmet,\r\n  charm: '',\r\n  ring: '',\r\n}\r\n\r\nexport const WEAPON_TYPE_ICONS: Record<tWeaponType, string> = {\r\n  enemy: '',\r\n  axe: Axe,\r\n  hammer: Blunt,\r\n  bow: Bow,\r\n  dagger: Dagger,\r\n  chime: Chime,\r\n  pistol: Handgun,\r\n  catalyst: MagicStaff,\r\n  scythe: Scythe,\r\n  sword: Sword,\r\n  greatsword: Greatsword,\r\n  fist: Fist,\r\n}\r\n\r\nexport const RESOURCE_ICONS: Record<tArmorResourceType | 'weapon', string> = {\r\n  weapon: Weapon,\r\n  offhand: Shield,\r\n  body: Armor,\r\n  head: Helmet,\r\n  feet: Footwear,\r\n}\r\n\r\nexport const CONSUMABLE_ITEM_ICONS: Record<string, string> = {\r\n  [GODSBEARD().cid]: Godsbeard,\r\n  [CELESTIAL_LOTUS().cid]: Lotus,\r\n  [POISON_KNIFE().cid]: PoisonKnife,\r\n  [BEAST_DRUG().cid]: BeastDrug,\r\n  [CURE_POTION().cid]: CurePotion,\r\n}\r\nexport const CONSUMABLE_ITEM_COLORS: Record<string, string> = {\r\n  [GODSBEARD().cid]: '#84a397',\r\n  [CELESTIAL_LOTUS().cid]: '#7a80a1',\r\n  [POISON_KNIFE().cid]: '#9c6c9e',\r\n  [BEAST_DRUG().cid]: '#b07171',\r\n  [CURE_POTION().cid]: '#8a8248',\r\n}\r\n\r\nexport const CHARACTER_CLASS_ICONS: Record<tCharacterClass, string> = {\r\n  enemy: '',\r\n  executioner: Executioner,\r\n  patrician: Bard,\r\n  ranger: Hunter,\r\n  student: Scholar,\r\n  drifter: Hobo,\r\n}\r\n","import React, { useState, useRef } from 'react'\r\nimport BaseTooltip, { TooltipProps } from 'react-tooltip-lite'\r\nimport { Hover } from '../Hover'\r\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\r\n\r\nexport interface ClickToolTipChildrenT {\r\n  onClick: (value?: boolean) => void\r\n  ref: React.MutableRefObject<HTMLElement | undefined>\r\n}\r\ninterface PropsT extends TooltipProps {\r\n  children: JSX.Element | ((props: ClickToolTipChildrenT) => JSX.Element)\r\n  content: JSX.Element | ((props: ClickToolTipChildrenT) => JSX.Element)\r\n  flex?: boolean\r\n}\r\nexport const Tooltip = (props: PropsT) => {\r\n  const { ...rest } = props\r\n  return (\r\n    <BaseTooltip\r\n      direction='up'\r\n      tagName='div'\r\n      padding='0'\r\n      arrow={false}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nexport const HoverToolTip = (props: PropsT) => {\r\n  return (\r\n    <Hover flex={props.flex}>\r\n      {({ isHovering }) => <Tooltip {...props} isOpen={isHovering} />}\r\n    </Hover>\r\n  )\r\n}\r\n\r\nexport const ClickToolTip = (props: PropsT) => {\r\n  const { children, content, ...rest } = props\r\n  const [isOpen, setIsOpen] = useState<boolean>(false)\r\n  const ref = useRef<HTMLElement>()\r\n  useOnClickOutside(ref, () => {\r\n    setIsOpen(false)\r\n  })\r\n  if (typeof children !== 'function') return null\r\n  if (typeof content !== 'function') return null\r\n  const p = {\r\n    onClick: (value?: boolean) => {\r\n      setIsOpen((v) => (value !== undefined ? value : !v))\r\n    },\r\n    ref,\r\n  }\r\n  return (\r\n    <Tooltip content={content(p)} {...rest} isOpen={isOpen}>\r\n      {children(p)}\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport const useOnClickOutside = (\r\n  ref: React.MutableRefObject<HTMLElement | undefined>,\r\n  handler: Function,\r\n) => {\r\n  useEffect(() => {\r\n    const listener = (event: any) => {\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return\r\n      }\r\n\r\n      setTimeout(() => handler(event), 150)\r\n    }\r\n\r\n    document.addEventListener('mousedown', listener)\r\n    document.addEventListener('touchstart', listener)\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', listener)\r\n      document.removeEventListener('touchstart', listener)\r\n    }\r\n  }, [ref, handler])\r\n}\r\n","import React from 'react'\r\nimport { styled, withWrapper } from 'styletron-react'\r\nimport { HoverToolTip } from '../components/Tooltip'\r\nimport { Theme } from '../theme'\r\n\r\nconst Div = styled('div', {\r\n  transform: 'rotateY(0deg) rotate(-45deg)',\r\n})\r\nexport const Badge = withWrapper(Div, (Element) => (props: any) => {\r\n  const { onClick, $style, ...rest } = props\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      style={{\r\n        position: props.$absolute === false ? 'relative' : 'absolute',\r\n        background: Theme.darkBgColorSolid,\r\n        padding: '4px',\r\n        fontFamily: 'New Rocker',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        boxShadow: '1px 1px 3px black',\r\n        height: props.$size || '20px',\r\n        width: props.$size || '20px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        lineHeight: '20px',\r\n        borderRadius: '30%',\r\n        transform: 'rotateY(0deg) rotate(45deg)',\r\n        textShadow: '1px 1px 3px black',\r\n        color: props.$color || 'white',\r\n        cursor: 'pointer',\r\n        top: props.$top,\r\n        userSelect: 'none',\r\n        bottom: props.$bottom,\r\n        right: props.$right,\r\n        left: props.$left,\r\n        transition: 'all 0.2s',\r\n        zIndex: 4,\r\n        ...($style || {}),\r\n      }}\r\n    >\r\n      <Element {...rest} />\r\n    </div>\r\n  )\r\n})\r\n\r\nexport interface HoverBadgePropsT {\r\n  children: JSX.Element\r\n  content: JSX.Element\r\n  badgeProps: any\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n}\r\nexport const HoverBadge = (props: HoverBadgePropsT) => {\r\n  const { children, content, badgeProps, direction } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        top: badgeProps.$top,\r\n        bottom: badgeProps.$bottom,\r\n        left: badgeProps.$left,\r\n        right: badgeProps.$right,\r\n      }}\r\n    >\r\n      <HoverToolTip\r\n        distance={2}\r\n        direction={direction || 'right'}\r\n        // styles={{ position: 'absolute' }}\r\n        content={content || <div />}\r\n      >\r\n        <Badge\r\n          $absolute={false}\r\n          $size={badgeProps.$size}\r\n          $color={badgeProps.$color}\r\n          $style={badgeProps.style}\r\n        >\r\n          {children}\r\n        </Badge>\r\n      </HoverToolTip>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Badge } from '../../elements/badge'\r\nimport { CheckKVT } from '../RoundResultRenderer'\r\nimport X from '../../icons/svg/lorc/split-cross.svg'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tBaseStats } from '../../game/Stats/type'\r\nimport { tStatusType } from '../../game/Status/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface SkillChecksPropsT {\r\n  stat: keyof tBaseStats\r\n  skill?: tSkill\r\n  rolls?: number\r\n  results?: boolean[]\r\n}\r\nexport const SkillChecks = (props: SkillChecksPropsT) => {\r\n  const { stat, skill, rolls, results = [] } = props\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        justifyContent: 'center',\r\n        minHeight: 46,\r\n        padding: '0px 0 24px 0',\r\n      }}\r\n    >\r\n      {Array(skill?.rolls || rolls || 0)\r\n        .fill(null)\r\n        .map((_, i) => (\r\n          <SkillCheck\r\n            key={i}\r\n            skill={skill}\r\n            perfect={\r\n              results.every((r) => r === true) && results.length === rolls\r\n            }\r\n            check={{ label: stat, result: results[i] }}\r\n          />\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface SkillCheckT {\r\n  check: CheckKVT\r\n  size?: number\r\n  padding?: number\r\n  perfect?: boolean\r\n  crit?: boolean\r\n  skill?: tSkill\r\n}\r\nexport const SkillCheck = (props: SkillCheckT) => {\r\n  const { check, size = 36, padding = 12, perfect = false, skill, crit } = props\r\n  const colors = getPerfectStatusColors(skill?.perfectStatus || [], crit)\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: `0px ${padding}px`,\r\n        opacity: check.result === undefined ? 0.75 : 1,\r\n      }}\r\n    >\r\n      <Badge\r\n        $absolute={false}\r\n        $size={size}\r\n        $style={{\r\n          borderColor: perfect ? colors.border : undefined,\r\n          background: perfect ? colors.background : Theme.darkBgColorSolid,\r\n        }}\r\n      >\r\n        <Icon\r\n          src={STAT_ICONS[check.label as keyof tBaseStats]}\r\n          fill={perfect ? colors.fill : getColor(check.result)}\r\n          size={size - 4}\r\n        />\r\n        {check.result === false && (\r\n          <Icon\r\n            src={X}\r\n            shadow\r\n            fill={'lightcoral'}\r\n            size={size - 4}\r\n            style={{ position: 'absolute', top: 0 }}\r\n          />\r\n        )}\r\n      </Badge>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst getColor = (result: boolean | undefined) => {\r\n  if (result === true) return 'white'\r\n  if (result === false) return 'rgba(255,255,255,0.3)'\r\n  return 'rgba(255,255,255,0.3)'\r\n}\r\ninterface SCColorsT {\r\n  border: string\r\n  background: string\r\n  fill: string\r\n}\r\nexport const getPerfectStatusColors = (\r\n  status: tStatusType[],\r\n  crit: boolean = false,\r\n): SCColorsT => {\r\n  if (crit) {\r\n    return {\r\n      border: '#white',\r\n      background: '#00134a',\r\n      fill: '#d9e3ff',\r\n    }\r\n  }\r\n  if (status.includes('burning')) {\r\n    return {\r\n      border: '#ff9100',\r\n      background: '#5c2c00',\r\n      fill: '#d48a46',\r\n    }\r\n  }\r\n  if (status.includes('poisoned')) {\r\n    return {\r\n      border: '#00870f',\r\n      background: '#001202',\r\n      fill: '#888f88',\r\n    }\r\n  }\r\n  if (status.includes('bleeding')) {\r\n    return {\r\n      border: '#ff0000',\r\n      background: '#120000',\r\n      fill: '#d19999',\r\n    }\r\n  }\r\n  if (status.includes('cursed-vigor')) {\r\n    return {\r\n      border: '#6400a3',\r\n      background: '#10001a',\r\n      fill: '#b093c2',\r\n    }\r\n  }\r\n  if (status.includes('frozen')) {\r\n    return {\r\n      border: '#009ac4',\r\n      background: '#00161c',\r\n      fill: '#a5c8d1',\r\n    }\r\n  }\r\n\r\n  return {\r\n    border: '#ffd400',\r\n    background: '#261d00',\r\n    fill: '#ede5be',\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Color from 'color'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { StatsPreview } from '../StatsPreview'\r\nimport { Icon } from '../Icon'\r\nimport { ARMOR_TYPE_ICONS } from '../../icons/maps'\r\nimport { Button } from '../../elements/button'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { STAT_KEY_LABELS } from '../../game/Stats/constants'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ArmorPreviewPropsT {\r\n  armor: tArmor\r\n  showEquipButton?: boolean\r\n  showBuyButton?: boolean\r\n  cost?: number\r\n  onEquipClick?: () => void\r\n  onBuyClick?: () => void\r\n}\r\nexport const ArmorPreview = (props: ArmorPreviewPropsT) => {\r\n  const {\r\n    armor,\r\n    showEquipButton,\r\n    showBuyButton,\r\n    cost,\r\n    onEquipClick,\r\n    onBuyClick,\r\n  } = props\r\n  const rarityColor = ITEM_RARITY_COLORS[armor.rarity]\r\n  const from = Color(rarityColor).darken(0.5).rgb().toString()\r\n  const to = Color(rarityColor).darken(0.7).rgb().toString()\r\n  const gradient = `linear-gradient(180deg, ${from} 0%, ${to} 100%)`\r\n  const skill = armor.skills[0]\r\n  return (\r\n    <BoxContainer\r\n      style={{ minWidth: 240 }}\r\n      substyle={{\r\n        background: gradient,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      }}\r\n    >\r\n      <FlexContainer $direction='column' $full>\r\n        <FullContainer />\r\n        {skill && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginBottom: 10 }}>\r\n            {Array(skill.rolls)\r\n              .fill(null)\r\n              .map((_, i) => (\r\n                <SkillCheck\r\n                  check={{\r\n                    label: skill.weaponStatOverride || 'strength',\r\n                    result: true,\r\n                  }}\r\n                  size={18}\r\n                  padding={4}\r\n                  skill={skill}\r\n                />\r\n              ))}\r\n          </FlexContainer>\r\n        )}\r\n        <FlexContainer $full style={{ marginBottom: 8 }}>\r\n          <Icon\r\n            src={ARMOR_TYPE_ICONS[armor.type]}\r\n            size={32}\r\n            style={{ marginRight: 10 }}\r\n            shadow\r\n          />\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              textShadow: '1px 1px 2px rgba(0,0,0,0.8)',\r\n            }}\r\n          >\r\n            <span style={{ fontWeight: 600 }}>{armor.name}</span>\r\n            <span style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n              {armor.rarity}\r\n            </span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n          {showEquipButton && (\r\n            <div style={{ marginLeft: 10 }}>\r\n              <Button onClick={onEquipClick} style={{ padding: 4 }}>\r\n                Equip\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </FlexContainer>\r\n        <BoxContainer\r\n          substyle={{\r\n            background: 'rgba(0,0,0,0.7)',\r\n            minHeight: 120,\r\n            textAlign: 'left',\r\n          }}\r\n        >\r\n          <FlexContainer $direction='column'>\r\n            <FlexContainer\r\n              style={{ justifyContent: 'space-between', marginBottom: 8 }}\r\n            >\r\n              <FlexContainer\r\n                $full\r\n                style={{\r\n                  textTransform: 'capitalize',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    color: Theme.physicalColor,\r\n                    fontSize: 24,\r\n                    fontWeight: 'bolder',\r\n                    marginRight: 8,\r\n                  }}\r\n                >\r\n                  {armor.stats.armor}\r\n                </div>\r\n                <div>{STAT_KEY_LABELS.armor}</div>\r\n              </FlexContainer>\r\n              <FlexContainer\r\n                $full\r\n                style={{\r\n                  textTransform: 'capitalize',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    color: 'plum',\r\n                    fontSize: 24,\r\n                    fontWeight: 'bolder',\r\n                    marginRight: 8,\r\n                  }}\r\n                >\r\n                  <span>{armor.stats.resistance}</span>\r\n                </span>\r\n                {STAT_KEY_LABELS.resistance}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n            {armor.skills.length > 0 && (\r\n              <span style={{ color: 'plum', marginBottom: 8 }}>\r\n                {armor.skills.map(\r\n                  (skill, i) => `${i > 0 ? ', ' : ''}${skill.name}`,\r\n                )}\r\n              </span>\r\n            )}\r\n            <StatsPreview stats={{ ...armor.stats, armor: 0, resistance: 0 }} />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        {showBuyButton && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginTop: 10 }}>\r\n            <Button onClick={onBuyClick} style={{ padding: '4px 16px' }}>\r\n              Buy ({cost || 0})\r\n            </Button>\r\n          </FlexContainer>\r\n        )}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\nimport { Theme } from '../theme'\r\n\r\nexport const FakeLink = styled('span', (props: any) => {\r\n  return {\r\n    whiteSpace: 'nowrap',\r\n    ':hover': {\r\n      textDecoration: 'underline',\r\n      cursor: 'pointer',\r\n    },\r\n  }\r\n})\r\n\r\nexport const HeadingSm = styled('span', (props: any) => {\r\n  return {\r\n    fontFamily: Theme.titleFont,\r\n    color: 'white',\r\n    fontSize: '20px',\r\n    display: 'inline-block',\r\n    marginBottom: '16px',\r\n  }\r\n})\r\n\r\nexport const Text = styled('span', (props: any) => {\r\n  return {\r\n    color: 'rgba(255,255,255,0.75)',\r\n    lineHeight: '1.4',\r\n    marginBottom: 16,\r\n  }\r\n})\r\n","import { tStatusType } from '../Status/type'\r\n\r\nexport type tPerfectKey = tStatusType | 'splash' | 'pierce' | 'heal'\r\nexport const PERFECT_DISPLAY_INFO: Partial<Record<tPerfectKey, string>> = {\r\n  splash: 'Splash Damage',\r\n  pierce: 'Ignore Resistances',\r\n  bleeding: 'Bleed',\r\n  burning: 'Burn',\r\n  frozen: 'Freeze',\r\n  poisoned: 'Poison',\r\n  targeted: 'Taunt Enemies',\r\n  stunned: 'Stun',\r\n  evasive: 'Become Evasive',\r\n  heal: 'Heal',\r\n  protected: 'Protect',\r\n  'attack-up': 'Attack Up',\r\n  'speed-down': 'Speed Down',\r\n  rushed: 'Rush Character',\r\n  reset: 'Reset Character',\r\n  cure: 'Cure Character',\r\n}\r\n","import { tProcessedCharacter } from '../Character/type'\r\nimport {\r\n  tSkill,\r\n  tSourceSkillResult,\r\n  tTargetSkillResult,\r\n  tSkillResult,\r\n  tSkillTarget,\r\n  tSkillTargetType,\r\n} from './type'\r\nimport { resolveCheck } from '../Roll/util'\r\nimport {\r\n  getRawDamage,\r\n  getReflectedDamage,\r\n  isCharacter,\r\n  hasStatus,\r\n  getDamageResistance,\r\n} from '../Character/util'\r\nimport { tProcessedParty } from '../Party/type'\r\nimport { isParty } from '../Party/util'\r\nimport { tDamage } from '../Damage/type'\r\nimport { tPerfectKey, PERFECT_DISPLAY_INFO } from './constants'\r\nimport { noneg } from '../../util'\r\n\r\nexport const getSourceSkillResult = (\r\n  source: tProcessedCharacter,\r\n  skill: tSkill,\r\n): tSourceSkillResult => {\r\n  const rollResults = Array(skill.rolls)\r\n    .fill(null)\r\n    .map((_, i) =>\r\n      resolveCheck(\r\n        source,\r\n        skill.weaponStatOverride || source.weapon.stat,\r\n        skill.offset,\r\n      ),\r\n    )\r\n  const passedCount = rollResults.filter((r) => r).length\r\n  const perfect = passedCount === skill.rolls\r\n  const criticalHitSuccess = resolveCheck(source, 'criticalChance')\r\n  const rollDamageModifier = passedCount / skill.rolls\r\n  const rawDamage = {\r\n    ...source.weapon.damage,\r\n    value: Math.round(\r\n      (source.weapon.damage.value + source.stats.attackDamageOffset) *\r\n        source.stats.attackDamageModifier *\r\n        skill.damageModifier *\r\n        rollDamageModifier *\r\n        (perfect && criticalHitSuccess ? 1.2 : 1),\r\n    ),\r\n    range: skill.weaponRangeOverride || source.weapon.damage.range,\r\n  }\r\n  return {\r\n    source,\r\n    skill,\r\n    rollResults,\r\n    passedCount,\r\n    perfect,\r\n    accuracySuccess: skill.damage ? passedCount > 0 : perfect,\r\n    criticalHitSuccess: perfect && criticalHitSuccess,\r\n    weaponDidBreak:\r\n      rollResults.every((r) => r === false) && source.weapon.breakable,\r\n    rawDamage,\r\n    splashDamage: {\r\n      ...source.weapon.damage,\r\n      value:\r\n        perfect && skill.perfectSplash\r\n          ? Math.round(rawDamage.value * skill.splashDamageModifier)\r\n          : 0,\r\n      range: skill.weaponRangeOverride || source.weapon.damage.range,\r\n    },\r\n    ignoreResistance: perfect && skill.perfectPierce,\r\n    addedStatus: perfect ? skill.perfectStatus : [],\r\n  }\r\n}\r\n\r\nexport const getTargetSkillResult = (\r\n  target: tProcessedCharacter,\r\n  sourceResult: tSourceSkillResult,\r\n): tTargetSkillResult => {\r\n  const dodgeResult = resolveCheck(target, 'evasion')\r\n  const dodgeSuccess = hasStatus(target, 'evasive')\r\n    ? !sourceResult.perfect\r\n    : !sourceResult.perfect && dodgeResult\r\n  const damage = getRawDamage(\r\n    sourceResult.source,\r\n    target,\r\n    sourceResult.rawDamage,\r\n  )\r\n  return {\r\n    ...sourceResult,\r\n    target,\r\n    dodgeSuccess,\r\n    totalDamage: {\r\n      ...damage,\r\n      value: dodgeSuccess ? 0 : damage.value,\r\n    },\r\n    reflectedDamage: getReflectedDamage(target, damage),\r\n    loggedDamgge: {\r\n      ...damage,\r\n      value: dodgeSuccess\r\n        ? 0\r\n        : noneg(damage.value - getDamageResistance(target, damage)),\r\n    },\r\n  }\r\n}\r\n\r\nexport const getSkillResult = (\r\n  source: tProcessedCharacter,\r\n  targets: tProcessedCharacter[],\r\n  skill: tSkill,\r\n): tSkillResult => {\r\n  const sourceResult = getSourceSkillResult(source, skill)\r\n  return {\r\n    sourceResult,\r\n    targetResults: targets.map((target) =>\r\n      getTargetSkillResult(target, sourceResult),\r\n    ),\r\n  }\r\n}\r\n\r\nexport const resolveSkillTarget = (\r\n  target: tSkillTarget,\r\n): tProcessedCharacter[] => {\r\n  switch (target.type) {\r\n    case 'single':\r\n      return target.character ? [target.character] : []\r\n    case 'ally':\r\n      return target.character ? [target.character] : []\r\n    case 'self':\r\n      return target.character ? [target.character] : []\r\n    case 'party':\r\n      return target.party?.characters || []\r\n    case 'group':\r\n      return target.party?.characters || []\r\n    default:\r\n      return []\r\n  }\r\n}\r\n\r\nexport const makeSkillTarget = (\r\n  type: tSkillTargetType,\r\n  target: tProcessedCharacter | tProcessedParty,\r\n): tSkillTarget => {\r\n  return {\r\n    type,\r\n    character: isCharacter(target)\r\n      ? (target as tProcessedCharacter)\r\n      : undefined,\r\n    party: isParty(target) ? (target as tProcessedParty) : undefined,\r\n  }\r\n}\r\n\r\nexport const getSkillTargetOptions = (\r\n  source: tProcessedCharacter,\r\n  sourceParty: tProcessedParty,\r\n  targetParty: tProcessedParty,\r\n  skill: tSkill,\r\n): tProcessedCharacter[] | tProcessedParty[] => {\r\n  switch (skill.targetType) {\r\n    case 'single':\r\n      return targetParty.characters.filter((c) => c.health > 0)\r\n    case 'ally':\r\n      return sourceParty.characters.filter((c) => c.health > 0)\r\n    case 'group':\r\n      return [targetParty]\r\n    case 'party':\r\n      return [sourceParty]\r\n    case 'self':\r\n      return [source]\r\n    default:\r\n      return []\r\n  }\r\n}\r\n\r\nexport const getSkillDamage = (\r\n  skill: tSkill,\r\n  source: tProcessedCharacter,\r\n): tDamage => {\r\n  return {\r\n    ...source.weapon.damage,\r\n    value:\r\n      (source.weapon.damage.value + source.stats.attackDamageOffset) *\r\n      (skill.damageModifier + source.stats.attackDamageModifier / 100),\r\n  }\r\n}\r\n\r\nexport const getPerfectKeys = (skill: tSkill): tPerfectKey[] => {\r\n  let base: tPerfectKey[] = [...skill.perfectStatus]\r\n  if (skill.perfectSplash) base = [...base, 'splash']\r\n  if (skill.perfectPierce) base = [...base, 'pierce']\r\n  if (skill.healing) base = [...base, 'heal']\r\n  return base\r\n}\r\n\r\nexport const getPerfectText = (\r\n  skill: tSkill,\r\n  character: tProcessedCharacter,\r\n): string => {\r\n  const perfectKeys = getPerfectKeys(skill)\r\n  const rawDamage = getSkillDamage(skill, character)\r\n\r\n  return perfectKeys.reduce((res, key, i) => {\r\n    let pre = `${res}${i > 0 ? ',' : ''}`\r\n    const text = PERFECT_DISPLAY_INFO[key]\r\n    switch (key) {\r\n      case 'splash':\r\n        return `${pre} ${Math.floor(skill.splashDamageModifier * 100)}% ${text}`\r\n      case 'heal':\r\n        return `${pre} ${text} ${character.stats.consumableHealthGainOffset} HP`\r\n      default:\r\n        return `${pre} ${text}`\r\n    }\r\n  }, '')\r\n}\r\n","import React from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { getSkillDamage, getPerfectText } from '../../game/Skill/util'\r\nimport { getChecksProbability } from '../../game/Roll/util'\r\nimport { Theme } from '../../theme'\r\nimport { Icon } from '../Icon'\r\nimport { SKILL_ICONS } from '../../icons/maps'\r\n\r\nexport interface SkillPreviewPropsT {\r\n  skill: tSkill\r\n  source: tProcessedCharacter\r\n  targets?: tProcessedCharacter[]\r\n}\r\nexport const SkillPreview = (props: SkillPreviewPropsT) => {\r\n  const { skill, source, targets } = props\r\n  const perfectChance = getChecksProbability(\r\n    source,\r\n    Array(skill.rolls)\r\n      .fill(null)\r\n      .map((_, i) => ({ key: source.weapon.stat, offset: skill.offset })),\r\n  )\r\n  const stat = skill.weaponStatOverride || source.weapon.stat\r\n  const damage = getSkillDamage(skill, source)\r\n  const perfectKeys = getPerfectText(skill, source)\r\n  return (\r\n    <BoxContainer\r\n      style={{ marginTop: 30, position: 'relative', minWidth: 300 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <FlexContainer $direction='column' style={{ alignItems: 'center' }}>\r\n        <FlexContainer style={{ marginTop: -27 }}>\r\n          <FullContainer />\r\n          <BoxContainer\r\n            substyle={{\r\n              padding: '4px 12px',\r\n              fontSize: 18,\r\n              background: Theme.otherGrey,\r\n              fontFamily: Theme.titleFont,\r\n              textShadow: '1px 1px 3px black',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Icon\r\n              src={SKILL_ICONS[skill.name]}\r\n              size={16}\r\n              style={{ marginRight: 8 }}\r\n            />\r\n            {skill.name}\r\n          </BoxContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n        <span\r\n          style={{\r\n            color: 'rgba(255,255,255,0.4)',\r\n            marginTop: 8,\r\n            marginBottom: 20,\r\n          }}\r\n        >\r\n          Perfect ({Math.floor(perfectChance * 100)}%){' '}\r\n          {perfectKeys.length > 0 && '='} {perfectKeys}\r\n        </span>\r\n        <FlexContainer $full style={{ width: '100%', marginBottom: 8 }}>\r\n          {damage.value > 0 && skill.damage && (\r\n            <FlexContainer\r\n              $full\r\n              $direction='column'\r\n              style={{ alignItems: 'center', marginRight: 10 }}\r\n            >\r\n              <span\r\n                style={{\r\n                  color: damage.type === 'physical' ? 'lightblue' : 'plum',\r\n                  fontFamily: 'New Rocker',\r\n                  fontSize: 32,\r\n                }}\r\n              >\r\n                {`${Math.floor(damage.value)}`}\r\n              </span>\r\n              <span style={{ color: 'rgba(255,255,255,0.2)' }}>Max DMG</span>\r\n            </FlexContainer>\r\n          )}\r\n          {skill.rolls > 0 && (\r\n            <FlexContainer\r\n              $full\r\n              $direction='column'\r\n              style={{ alignItems: 'center' }}\r\n            >\r\n              <span\r\n                style={{\r\n                  fontFamily: 'New Rocker',\r\n                  fontSize: 32,\r\n                }}\r\n              >\r\n                {source.stats[stat] + skill.offset}%\r\n              </span>\r\n              <span style={{ color: 'rgba(255,255,255,0.2)' }}>\r\n                Per Check ACC\r\n              </span>\r\n            </FlexContainer>\r\n          )}\r\n        </FlexContainer>\r\n        {skill.consumableId && (\r\n          <div\r\n            style={{\r\n              color: Theme.healthRedColor,\r\n              fontSize: 12,\r\n              fontWeight: 'bolder',\r\n              marginBottom: 8,\r\n            }}\r\n          >\r\n            consumable\r\n          </div>\r\n        )}\r\n        <FlexContainer style={{ marginBottom: -18 }}>\r\n          <FullContainer />\r\n          <BoxContainer\r\n            substyle={{\r\n              padding: '2px 8px',\r\n              background: Theme.otherGrey,\r\n              textShadow: '1px 1px 3px black',\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            {skill.targetType} target\r\n          </BoxContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Color from 'color'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { StatsPreview } from '../StatsPreview'\r\nimport { Button } from '../../elements/button'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { Icon } from '../Icon'\r\nimport { WEAPON_TYPE_ICONS } from '../../icons/maps'\r\nimport Hands from '../../icons/svg/lorc/hand.svg'\r\nimport Ranged from '../../icons/svg/delapouite/arrow-wings.svg'\r\nimport Melee from '../../icons/svg/lorc/battered-axe.svg'\r\nimport { FakeLink } from '../../elements/typography'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { SkillPreview } from '../SkillPreview'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\n\r\nexport const getDamageColor = (weapon: tWeapon) => {\r\n  if (weapon.damage.type === 'physical') return 'lightblue'\r\n  if (weapon.damage.type === 'magic') return 'plum'\r\n  return 'white'\r\n}\r\n\r\nexport interface WeaponPreviewPropsT {\r\n  character?: tProcessedCharacter\r\n  weapon: tWeapon\r\n  showEquipButton?: boolean\r\n  showBuyButton?: boolean\r\n  cost?: number\r\n  onEquipClick?: () => void\r\n  onBuyClick?: () => void\r\n}\r\nexport const WeaponPreview = (props: WeaponPreviewPropsT) => {\r\n  const {\r\n    character,\r\n    weapon,\r\n    showEquipButton,\r\n    showBuyButton,\r\n    cost = 0,\r\n    onEquipClick,\r\n    onBuyClick,\r\n  } = props\r\n  const basicAttack = weapon.skills[0]\r\n  const rarityColor = ITEM_RARITY_COLORS[weapon.rarity]\r\n  const from = Color(rarityColor).darken(0.5).rgb().toString()\r\n  const to = Color(rarityColor).darken(0.7).rgb().toString()\r\n  const gradient = `linear-gradient(180deg, ${from} 0%, ${to} 100%)`\r\n  return (\r\n    <BoxContainer style={{ width: 240 }} substyle={{ background: gradient }}>\r\n      <FlexContainer $direction='column'>\r\n        {basicAttack && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginBottom: 10 }}>\r\n            <FlexContainer $full style={{ alignItems: 'center' }}>\r\n              <Icon\r\n                src={weapon.damage.range === 'melee' ? Melee : Ranged}\r\n                size={16}\r\n              />\r\n            </FlexContainer>\r\n            {Array(basicAttack.rolls)\r\n              .fill(null)\r\n              .map((_, i) => (\r\n                <SkillCheck\r\n                  key={i}\r\n                  check={{ label: weapon.stat, result: true }}\r\n                  size={18}\r\n                  padding={4}\r\n                  skill={weapon.skills[0]}\r\n                />\r\n              ))}\r\n            <FlexContainer\r\n              $full\r\n              style={{\r\n                fontSize: 18,\r\n                justifyContent: 'flex-end',\r\n                fontWeight: 'bolder',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Icon\r\n                size={16}\r\n                src={Hands}\r\n                fill='rgba(255,255,255,0.8)'\r\n                style={{ marginRight: 4 }}\r\n              />\r\n              {weapon.twoHand && '2'}\r\n              {!weapon.twoHand && '1'}\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        )}\r\n        <FlexContainer style={{ alignItems: 'center' }}>\r\n          <Icon\r\n            src={WEAPON_TYPE_ICONS[weapon.type]}\r\n            size={32}\r\n            style={{ marginRight: 10 }}\r\n            shadow\r\n          />\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              margin: '8px 0',\r\n              textShadow: '1px 1px 2px rgba(0,0,0,0.8)',\r\n              textAlign: 'left',\r\n            }}\r\n          >\r\n            <span style={{ fontWeight: 600 }}>{weapon.name}</span>\r\n            <span style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n              {weapon.rarity} {weapon.type}\r\n            </span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n\r\n          {showEquipButton && (\r\n            <div style={{ marginLeft: 10 }}>\r\n              <Button onClick={onEquipClick} style={{ padding: 4 }}>\r\n                Equip\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </FlexContainer>\r\n        <BoxContainer\r\n          substyle={{\r\n            background: 'rgba(0,0,0,0.7)',\r\n            minHeight: 120,\r\n            textAlign: 'left',\r\n          }}\r\n        >\r\n          <FlexContainer $direction='column'>\r\n            <FlexContainer style={{ lineHeight: '24px', marginBottom: 4 }}>\r\n              <span\r\n                style={{\r\n                  color: getDamageColor(weapon),\r\n                  fontWeight: 'bolder',\r\n                  marginRight: 8,\r\n                  fontSize: 24,\r\n                }}\r\n              >\r\n                {weapon.damage.value}\r\n              </span>\r\n              <span style={{ textTransform: 'capitalize' }}>\r\n                {weapon.damage.type} Damage\r\n              </span>\r\n            </FlexContainer>\r\n            <span\r\n              style={{\r\n                color: 'plum',\r\n                marginBottom: 8,\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n              }}\r\n            >\r\n              {weapon.skills.map((skill, i) => (\r\n                <React.Fragment key={skill.id}>\r\n                  {i > 0 ? ', ' : ''}\r\n                  <HoverToolTip\r\n                    direction='down'\r\n                    content={\r\n                      character ? (\r\n                        <SkillPreview skill={skill} source={character} />\r\n                      ) : (\r\n                        <div />\r\n                      )\r\n                    }\r\n                  >\r\n                    <FakeLink style={{ paddingLeft: i === 0 ? 0 : 4 }}>\r\n                      {skill.name}\r\n                    </FakeLink>\r\n                  </HoverToolTip>\r\n                </React.Fragment>\r\n              ))}\r\n            </span>\r\n            {weapon.breakable && (\r\n              <div style={{ color: 'gold', fontSize: 12 }}>Breakable</div>\r\n            )}\r\n            <StatsPreview stats={weapon.stats} />\r\n            {weapon.immunities.map((status) => (\r\n              <span style={{ textTransform: 'capitalize', fontSize: 14 }}>\r\n                {status} immunity\r\n              </span>\r\n            ))}\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        {showBuyButton && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginTop: 10 }}>\r\n            <Button onClick={onBuyClick} style={{ padding: '4px 16px' }}>\r\n              Buy ({cost || 0})\r\n            </Button>\r\n          </FlexContainer>\r\n        )}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Color from 'color'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { CONSUMABLE_ITEM_ICONS } from '../../icons/maps'\r\nimport { Button } from '../../elements/button'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\n\r\nexport interface ConsumablePreviewPropsT {\r\n  item: tConsumable\r\n  showEquipButton?: boolean\r\n  showBuyButton?: boolean\r\n  cost?: number\r\n  onEquipClick?: () => void\r\n  onBuyClick?: () => void\r\n}\r\nexport const ConsumablePreview = (props: ConsumablePreviewPropsT) => {\r\n  const { item, showBuyButton, cost, onBuyClick } = props\r\n  const rarityColor = ITEM_RARITY_COLORS[item.rarity]\r\n  const from = Color(rarityColor).darken(0.5).rgb().toString()\r\n  const to = Color(rarityColor).darken(0.7).rgb().toString()\r\n  const gradient = `linear-gradient(180deg, ${from} 0%, ${to} 100%)`\r\n  const skill = item.skill\r\n  return (\r\n    <BoxContainer style={{ minWidth: 240 }} substyle={{ background: gradient }}>\r\n      <FlexContainer $direction='column'>\r\n        {skill && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginBottom: 10 }}>\r\n            {Array(skill.rolls)\r\n              .fill(null)\r\n              .map((_, i) => (\r\n                <SkillCheck\r\n                  check={{\r\n                    label: skill.weaponStatOverride || 'strength',\r\n                    result: true,\r\n                  }}\r\n                  size={18}\r\n                  padding={4}\r\n                  skill={skill}\r\n                />\r\n              ))}\r\n          </FlexContainer>\r\n        )}\r\n        <FlexContainer style={{ marginBottom: 8 }}>\r\n          <Icon\r\n            src={CONSUMABLE_ITEM_ICONS[item.id]}\r\n            size={32}\r\n            style={{ marginRight: 10 }}\r\n            shadow\r\n          />\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              textShadow: '1px 1px 2px rgba(0,0,0,0.8)',\r\n            }}\r\n          >\r\n            <span style={{ fontWeight: 600 }}>{item.name}</span>\r\n            <span style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n              {item.rarity}\r\n            </span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n        <BoxContainer\r\n          substyle={{\r\n            background: 'rgba(0,0,0,0.7)',\r\n            minHeight: 120,\r\n            textAlign: 'left',\r\n          }}\r\n        >\r\n          <FlexContainer $direction='column'>\r\n            <span style={{ color: 'plum', marginBottom: 8 }}>{skill.name}</span>\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        {showBuyButton && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginTop: 10 }}>\r\n            <Button onClick={onBuyClick} style={{ padding: '4px 16px' }}>\r\n              Buy ({cost || 0})\r\n            </Button>\r\n          </FlexContainer>\r\n        )}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ArmorPreview } from '../ArmorPreview'\r\nimport { WeaponPreview } from '../WeaponPreview'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { ConsumablePreview } from '../ConsumablePreview'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\n\r\nexport interface ItemPreviewPropsT {\r\n  item: tWeapon | tArmor | tConsumable\r\n}\r\n\r\nexport const ItemPreivew = (props: ItemPreviewPropsT) => {\r\n  const { item } = props\r\n\r\n  if (item.itemType === 'armor') return <ArmorPreview armor={item as tArmor} />\r\n  if (item.itemType === 'weapon')\r\n    return <WeaponPreview weapon={item as tWeapon} />\r\n  if (item.itemType === 'consumable') {\r\n    return <ConsumablePreview item={item as tConsumable} />\r\n  }\r\n  return <div />\r\n}\r\n","import React, { useMemo, useEffect, useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport Gold from '../../icons/svg/delapouite/coins.svg'\r\nimport XP from '../../icons/svg/lorc/laurel-crown.svg'\r\nimport { Icon } from '../Icon'\r\nimport { ItemPreivew } from '../ItemPreview'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { consolidateRewards } from '../../game/Other/util'\r\nimport { commitRewards } from '../../game/Party/util'\r\nimport { tEncounterReward } from '../../game/Encounter/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { HoverToolTip } from '../Tooltip'\r\n\r\nconst getItem = (\r\n  character: tProcessedCharacter,\r\n  item: tWeapon | tArmor,\r\n): tWeapon | tArmor | undefined => {\r\n  if (item.itemType === 'weapon') {\r\n    return character.weapon\r\n  } else {\r\n    const armor = item as tArmor\r\n    return character.armor.find((a) => a.resource === armor.resource)\r\n  }\r\n}\r\n\r\nexport interface CombatVictoryModalPropsT {\r\n  rewards: tEncounterReward[]\r\n}\r\n\r\nexport const CombatVictoryModal = (props: CombatVictoryModalPropsT) => {\r\n  const { rewards } = props\r\n  const { rawParty, party, updateParty, equipItem } = usePartyContext()\r\n  const { nextLevel } = useGameStateContext()\r\n  const { close } = useModalContext()\r\n  const consolidatedRewards = useMemo(() => consolidateRewards(rewards), [\r\n    rewards,\r\n  ])\r\n\r\n  const [items, setItems] = useState(consolidatedRewards.items)\r\n  const first = items[0]\r\n  const next = () => {\r\n    if (\r\n      (items.length === 1 && consolidatedRewards.items.length > 0) ||\r\n      consolidatedRewards.items.length === 0\r\n    ) {\r\n      close()\r\n      nextLevel()\r\n    } else {\r\n      setItems((i) => {\r\n        const [first, ...rest] = i\r\n        return rest\r\n      })\r\n    }\r\n  }\r\n  const equip = (characterId: string) => {\r\n    if (first) {\r\n      equipItem(characterId, first as tArmor | tWeapon)\r\n      next()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateParty(commitRewards(rawParty, consolidatedRewards))\r\n  }, [])\r\n\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ textAlign: 'center', minHeight: 420 }}\r\n    >\r\n      <h1>You Win!</h1>\r\n      <FlexContainer $direction='column' style={{ color: 'white' }}>\r\n        <FlexContainer style={{ marginBottom: 16 }}>\r\n          <FlexContainer>\r\n            <Icon src={Gold} size={18} style={{ marginRight: 8 }} />\r\n            <span>{consolidatedRewards.gold} Gold</span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n          <FlexContainer>\r\n            <Icon src={XP} size={18} style={{ marginRight: 8 }} />\r\n            <span>{consolidatedRewards.xp} XP</span>\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n        {first && (\r\n          <FlexContainer $direction='column'>\r\n            <FlexContainer style={{ marginBottom: 16 }}>\r\n              <FullContainer />\r\n              <FlexContainer $direction='column'>\r\n                <ItemPreivew item={first} />\r\n                <span\r\n                  style={{\r\n                    marginTop: 8,\r\n                    color: 'rgba(255,255,255,0.3)',\r\n                    fontWeight: 'bold',\r\n                    fontSize: 12,\r\n                  }}\r\n                >\r\n                  1 of {items.length}\r\n                </span>\r\n              </FlexContainer>\r\n              <FullContainer />\r\n            </FlexContainer>\r\n            {(first.itemType === 'armor' || first.itemType === 'weapon') && (\r\n              <FlexContainer\r\n                style={{ marginBottom: 8, justifyContent: 'center' }}\r\n              >\r\n                {party.characters.map((character) => (\r\n                  <HoverToolTip\r\n                    direction='down'\r\n                    content={\r\n                      <>\r\n                        {getItem(character, first as tWeapon | tArmor) && (\r\n                          <ItemPreivew\r\n                            item={\r\n                              getItem(character, first as tWeapon | tArmor) as\r\n                                | tWeapon\r\n                                | tArmor\r\n                            }\r\n                          />\r\n                        )}\r\n                      </>\r\n                    }\r\n                  >\r\n                    <Button\r\n                      style={{ padding: 8 }}\r\n                      onClick={() => equip(character.id)}\r\n                    >\r\n                      Equip to {character.name}\r\n                    </Button>\r\n                  </HoverToolTip>\r\n                ))}\r\n              </FlexContainer>\r\n            )}\r\n          </FlexContainer>\r\n        )}\r\n      </FlexContainer>\r\n      <FullContainer />\r\n      <Button\r\n        onClick={() => {\r\n          next()\r\n        }}\r\n      >\r\n        {items.length === 0 ? 'Close' : 'Next'}\r\n      </Button>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { tEncounterReward } from '../Encounter/type'\r\nimport { ZERO_REWARD } from '../Encounter/constants'\r\n\r\nexport const consolidateRewards = (\r\n  rewards: tEncounterReward[],\r\n): tEncounterReward => {\r\n  return rewards.reduce((res, reward) => {\r\n    return {\r\n      gold: res.gold + reward.gold,\r\n      xp: res.xp + reward.xp,\r\n      items: [...res.items, ...reward.items],\r\n      status: [...res.status, ...reward.status],\r\n      immunities: [...res.immunities, ...reward.immunities],\r\n    }\r\n  }, ZERO_REWARD)\r\n}\r\n","import { tQueue } from './type'\r\nimport { tProcessedCharacter, tCharacter } from '../Character/type'\r\nimport { processCharacter } from '../Character/util'\r\n\r\nconst AGILITY_OFFSET = 120\r\n\r\nexport const makeCombatQueue = (characters: tProcessedCharacter[]): tQueue => {\r\n  const sortedCharacters = characters.sort(\r\n    (a, b) => b.stats.agility - a.stats.agility,\r\n  )\r\n  return validateQueue(\r\n    sortedCharacters.reduce(\r\n      (r, c, i) => ({\r\n        ...r,\r\n        [c.id]: AGILITY_OFFSET / 2 - c.stats.agility,\r\n      }),\r\n      {},\r\n    ),\r\n    characters,\r\n  )\r\n}\r\n\r\nexport const getMax = (queue: tQueue): number => {\r\n  return Object.keys(queue).reduce((r: number, id: string) => {\r\n    if (r < queue[id]) return queue[id]\r\n    return r\r\n  }, Number.NEGATIVE_INFINITY)\r\n}\r\n\r\nexport const getMin = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): number => {\r\n  if (characters.length === 0) throw new Error('track this call down')\r\n  return Object.keys(queue).reduce((min: number, id: string) => {\r\n    if (queue[id] < min) {\r\n      const c = characters.find((c) => c.id === id) as tProcessedCharacter\r\n      if (c.stats.queueConsolidationModifier > 0) {\r\n        return queue[id]\r\n      } else {\r\n        return min\r\n      }\r\n    }\r\n    return min\r\n  }, Number.POSITIVE_INFINITY)\r\n}\r\n\r\nexport const consolidateQueue = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  let min = getMin(queue, characters)\r\n  return Object.keys(queue).reduce((r, id) => {\r\n    const character = characters.find((c) => c.id === id) as tCharacter\r\n    const offset = character.stats.queueConsolidationModifier * min\r\n    return {\r\n      ...r,\r\n      [id]: queue[id] - offset,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const shiftQueue = (\r\n  queue: tQueue,\r\n  character: tProcessedCharacter,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  const ret = consolidateQueue(\r\n    {\r\n      ...queue,\r\n      [character.id]: AGILITY_OFFSET - character.stats.agility,\r\n    },\r\n    characters,\r\n  )\r\n  return ret\r\n}\r\n\r\nexport const getFirst = (queue: tQueue): string => {\r\n  let min = Number.POSITIVE_INFINITY\r\n  let key = Object.keys(queue)[0]\r\n  Object.keys(queue).forEach((id) => {\r\n    if (min > queue[id]) {\r\n      min = queue[id]\r\n      key = id\r\n    }\r\n  })\r\n  return key\r\n}\r\n\r\nexport const validateQueue = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  return consolidateQueue(\r\n    characters.reduce((r, c) => {\r\n      return c.health <= 0 ? r : { ...r, [c.id]: queue[c.id] }\r\n    }, {}),\r\n    characters,\r\n  )\r\n}\r\n\r\nexport const getSortedIds = (queue: tQueue): string[] => {\r\n  return Object.keys(queue).sort((a, b) => queue[a] - queue[b])\r\n}\r\n\r\nexport const commitQueueUpdates = (\r\n  queue: tQueue,\r\n  source: tProcessedCharacter,\r\n  characters: tCharacter[],\r\n): tQueue => {\r\n  const pcs = characters.map((c) => processCharacter(c))\r\n  const shiftedQueue = shiftQueue(queue, source, pcs)\r\n  const ret = validateQueue(\r\n    Object.keys(shiftedQueue).reduce((q, id) => {\r\n      const character = pcs.find((c) => c.id === id)\r\n      return {\r\n        ...q,\r\n        [id]:\r\n          character?.stats?.queueValueSet !== undefined\r\n            ? character?.stats?.queueValueSet\r\n            : shiftedQueue[id],\r\n      }\r\n    }, {}),\r\n    pcs,\r\n  )\r\n  return ret\r\n}\r\n","import { tParty } from '../Party/type'\r\nimport { tCharacter } from '../Character/type'\r\nimport { updateCharacter, getOtherCharacters } from '../Party/util'\r\nimport { tQueue } from '../Queue/type'\r\nimport { tSkillResult, tSkillCommiterResult } from './type'\r\nimport {\r\n  commitDamage,\r\n  addMultipleStatus,\r\n  decrementStatusDurations,\r\n  processCharacter,\r\n  checkStatus,\r\n} from '../Character/util'\r\nimport { noneg } from '../../util/noneg'\r\nimport { commitQueueUpdates } from '../Queue/util'\r\nimport { PLAYER_PARTY_ID } from '../Party/constants'\r\n\r\nconst partyUpdater = (\r\n  party: tParty,\r\n  characterId: string,\r\n  updater: (c: tCharacter) => tCharacter,\r\n): tParty => {\r\n  return updateCharacter(party, characterId, updater)\r\n}\r\n\r\nexport const commitSkillResults = (\r\n  playerParty: tParty,\r\n  enemyParty: tParty,\r\n  queue: tQueue,\r\n) => (result: tSkillResult): tSkillCommiterResult => {\r\n  const { source } = result.sourceResult\r\n  result.targetResults.forEach((targetResult, index) => {\r\n    const { target } = targetResult\r\n    let sourceParty = [playerParty, enemyParty].find(\r\n      (p) => p.id === source.partyId,\r\n    ) as tParty\r\n    let targetParty = [playerParty, enemyParty].find(\r\n      (p) => p.id === target.partyId,\r\n    ) as tParty\r\n    const localUpdate = (\r\n      p: tParty,\r\n      id: string,\r\n      updater: (c: tCharacter) => tCharacter,\r\n    ) => {\r\n      if (p.id === sourceParty.id) {\r\n        sourceParty = partyUpdater(p, id, updater)\r\n        return\r\n      }\r\n      if (p.id === targetParty.id) {\r\n        targetParty = partyUpdater(p, id, updater)\r\n        return\r\n      }\r\n      throw new Error('bad party id')\r\n    }\r\n\r\n    if (index === 0) {\r\n      if (targetResult.weaponDidBreak) {\r\n        localUpdate(sourceParty, source.id, (c) => {\r\n          return {\r\n            ...c,\r\n            weapon: undefined,\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    // commit main damage\r\n    localUpdate(targetParty, target.id, (c) => {\r\n      return commitDamage(\r\n        c,\r\n        targetResult.totalDamage,\r\n        targetResult.ignoreResistance,\r\n      )\r\n    })\r\n\r\n    // commit main status\r\n    localUpdate(targetParty, target.id, (c) => {\r\n      return addMultipleStatus(c, targetResult.addedStatus)\r\n    })\r\n\r\n    // comit main heal\r\n    if (targetResult.skill.healing) {\r\n      localUpdate(targetParty, target.id, (c) => {\r\n        return {\r\n          ...c,\r\n          healthOffset: c.healthOffset - c.stats.consumableHealthGainOffset,\r\n        }\r\n      })\r\n    }\r\n\r\n    // commit splash damage\r\n    if (targetResult.splashDamage.value > 0) {\r\n      getOtherCharacters(targetParty, target.id).forEach((character) => {\r\n        localUpdate(targetParty, character.id, (c) => {\r\n          return commitDamage(c, targetResult.splashDamage, false)\r\n        })\r\n      })\r\n    }\r\n\r\n    // commit reflected damage\r\n    if (targetResult.reflectedDamage.value > 0) {\r\n      localUpdate(sourceParty, source.id, (c) => {\r\n        return commitDamage(c, targetResult.reflectedDamage, false)\r\n      })\r\n    }\r\n\r\n    // commet end-of-round actions\r\n    if (index === result.targetResults.length - 1) {\r\n      // source health regen\r\n      localUpdate(sourceParty, source.id, (c) => {\r\n        const pc = processCharacter(checkStatus(c))\r\n        return {\r\n          ...c,\r\n          healthOffset: noneg(c.healthOffset - pc.stats.healthRegeneration),\r\n          consumables: c.consumables.filter(\r\n            (i) => i.id !== targetResult.skill.consumableId,\r\n          ),\r\n        }\r\n      })\r\n    }\r\n\r\n    if (sourceParty.id === PLAYER_PARTY_ID) {\r\n      playerParty = sourceParty\r\n    } else {\r\n      enemyParty = sourceParty\r\n    }\r\n    if (targetParty.id === PLAYER_PARTY_ID) {\r\n      if (sourceParty.id !== targetParty.id) {\r\n        playerParty = targetParty\r\n      }\r\n    } else {\r\n      enemyParty = targetParty\r\n    }\r\n  })\r\n\r\n  return {\r\n    playerParty: {\r\n      ...playerParty,\r\n      characters: playerParty.characters.map((c) =>\r\n        decrementStatusDurations(checkStatus(c)),\r\n      ),\r\n    },\r\n    enemyParty: {\r\n      ...enemyParty,\r\n      characters: enemyParty.characters.map((c) =>\r\n        decrementStatusDurations(checkStatus(c)),\r\n      ),\r\n    },\r\n    queue: commitQueueUpdates(queue, source, [\r\n      ...playerParty.characters,\r\n      ...enemyParty.characters,\r\n    ]),\r\n  }\r\n}\r\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n} from 'react'\r\nimport { usePartyContext } from '../PartyContext'\r\nimport { v4 } from 'uuid'\r\nimport { useHistory } from 'react-router'\r\nimport { useModalContext } from '../ModalContext'\r\nimport { CombatVictoryModal } from '../../components/CombatVictoryModal'\r\nimport { tProcessedParty, tParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tSkill, tSkillResult, tSkillTarget } from '../../game/Skill/type'\r\nimport { tQueue } from '../../game/Queue/type'\r\nimport {\r\n  processParty,\r\n  makeParty,\r\n  getRolledRewards,\r\n} from '../../game/Party/util'\r\nimport {\r\n  processCharacter,\r\n  makeCharacter,\r\n  removeTemporaryStatus,\r\n} from '../../game/Character/util'\r\nimport { makeCombatQueue, getFirst, shiftQueue } from '../../game/Queue/util'\r\nimport {\r\n  makeSkillTarget,\r\n  resolveSkillTarget,\r\n  getSkillResult,\r\n} from '../../game/Skill/util'\r\nimport { commitSkillResults } from '../../game/Skill/committer'\r\nimport { getAIAction } from '../../game/AI/util'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\n\r\nexport interface CombatContextT {\r\n  party: tProcessedParty\r\n  enemyParty: tProcessedParty\r\n  activeCharacter: tProcessedCharacter\r\n  characters: tProcessedCharacter[]\r\n  queue: tQueue\r\n  selectedSkill: tSkill | undefined\r\n  selectedTargets: tProcessedCharacter[]\r\n  selectedConsumableIndex: number | undefined\r\n  roundResults: tSkillResult[]\r\n  activeRound: tSkillResult | undefined\r\n  isRunning: boolean\r\n  isRenderingResult: boolean\r\n  onSkillSelect: (skill: tSkill, consumableIndex?: number) => void\r\n  onTargetsSelect: (target: tProcessedCharacter | tProcessedParty) => void\r\n  onConsumableSelect: (consumableIndex: number | undefined) => void\r\n  reset: () => void\r\n  start: () => void\r\n  next: (nextTarget?: tProcessedCharacter | tProcessedParty) => void\r\n  commit: () => void\r\n  equipItemCombat: (characterId: string, item?: tArmor | tWeapon) => void\r\n}\r\nconst defaultValue: CombatContextT = {\r\n  party: processParty(makeParty(0, 0)),\r\n  enemyParty: processParty(makeParty(0, 0)),\r\n  activeCharacter: processCharacter(makeCharacter('executioner')),\r\n  characters: [],\r\n  queue: {},\r\n  selectedSkill: undefined,\r\n  selectedTargets: [],\r\n  selectedConsumableIndex: undefined,\r\n  roundResults: [],\r\n  activeRound: undefined,\r\n  isRunning: false,\r\n  isRenderingResult: false,\r\n  onSkillSelect: (skill: tSkill) => {},\r\n  onTargetsSelect: (target: tProcessedCharacter | tProcessedParty) => {},\r\n  onConsumableSelect: (consumableIndex) => {},\r\n  reset: () => {},\r\n  start: () => {},\r\n  next: () => {},\r\n  commit: () => {},\r\n  equipItemCombat: (characterId, item) => {},\r\n}\r\nexport const CombatContext = createContext<CombatContextT>(defaultValue)\r\nexport const useCombatContext = () => useContext(CombatContext)\r\n\r\nexport interface CombatContextProviderPropsT {\r\n  children: JSX.Element\r\n  enemyParty: tParty\r\n  setEnemyParty: (party: tParty) => void\r\n  onRequestNewParty: () => void\r\n}\r\nexport const CombatContextProvider = (props: CombatContextProviderPropsT) => {\r\n  const { children, setEnemyParty, onRequestNewParty } = props\r\n  const { party, rawParty, updateParty, equipItem } = usePartyContext()\r\n  const { open } = useModalContext()\r\n  const history = useHistory()\r\n  const enemyParty = useMemo(() => {\r\n    return processParty(props.enemyParty)\r\n  }, [props.enemyParty])\r\n  const [isRunning, setIsRunning] = useState<boolean>(false)\r\n  const [isRenderingResult, setIsRenderingResult] = useState<boolean>(false)\r\n  const characters = useMemo(\r\n    () => [...party.characters, ...enemyParty.characters],\r\n    [party, enemyParty],\r\n  )\r\n  const [queue, setQueue] = useState<tQueue>(\r\n    makeCombatQueue([...party.characters, ...enemyParty.characters]),\r\n  )\r\n  const resultCommitter = useMemo(\r\n    () => commitSkillResults(rawParty, props.enemyParty, queue),\r\n    [rawParty, props.enemyParty, queue],\r\n  )\r\n  const [roundId, setRoundId] = useState<string>(v4())\r\n  const [roundResults, setRoundResults] = useState<tSkillResult[]>([])\r\n  const [activeRound, setActiveRound] = useState<tSkillResult | undefined>()\r\n  const [selectedTarget, setSelectedTarget] = useState<\r\n    tSkillTarget | undefined\r\n  >()\r\n  const [selectedSkill, setSelectedSkill] = useState<tSkill | undefined>()\r\n  const [selectedConsumableIndex, setSelectedConsumableIndex] = useState<\r\n    number | undefined\r\n  >()\r\n  const activeCharacter = useMemo(\r\n    () =>\r\n      characters.find(\r\n        (c) => c.health > 0 && c.id === getFirst(queue),\r\n      ) as tProcessedCharacter,\r\n    [queue, characters],\r\n  )\r\n\r\n  const start = () => {\r\n    setIsRunning(true)\r\n    setQueue(makeCombatQueue([...party.characters, ...enemyParty.characters]))\r\n    setRoundId(v4())\r\n    setActiveRound(undefined)\r\n    setIsRenderingResult(false)\r\n  }\r\n\r\n  const reset = () => {\r\n    onRequestNewParty()\r\n    setIsRunning(false)\r\n    setActiveRound(undefined)\r\n    setSelectedSkill(undefined)\r\n    setSelectedTarget(undefined)\r\n    setSelectedConsumableIndex(undefined)\r\n    setIsRenderingResult(false)\r\n    setRoundResults([])\r\n    setQueue({})\r\n  }\r\n\r\n  const equipItemCombat = (characterId: string, item?: tArmor | tWeapon) => {\r\n    if (item) {\r\n      equipItem(activeCharacter.id, item)\r\n    }\r\n    setQueue((q) =>\r\n      shiftQueue(q, activeCharacter, [\r\n        ...party.characters,\r\n        ...enemyParty.characters,\r\n      ]),\r\n    )\r\n    completeRound()\r\n  }\r\n\r\n  const next = (nextTarget?: tProcessedCharacter | tProcessedParty) => {\r\n    if (selectedSkill) {\r\n      const roundTarget = nextTarget\r\n        ? makeSkillTarget(selectedSkill.targetType, nextTarget)\r\n        : selectedTarget\r\n      if (!selectedSkill || !roundTarget) return\r\n      const results = getSkillResult(\r\n        activeCharacter,\r\n        resolveSkillTarget(roundTarget).filter((c) => c.health > 0),\r\n        selectedSkill,\r\n      )\r\n      setActiveRound(results)\r\n      setSelectedSkill(undefined)\r\n      setSelectedTarget(undefined)\r\n      setSelectedConsumableIndex(undefined)\r\n      setIsRenderingResult(true)\r\n    }\r\n  }\r\n\r\n  const onSkillSelect = (skill: tSkill, consumableIndex?: number) => {\r\n    setSelectedSkill(skill)\r\n    if (consumableIndex !== undefined) {\r\n      setSelectedConsumableIndex(consumableIndex)\r\n    }\r\n    if (skill.targetType !== selectedSkill?.targetType) {\r\n      setSelectedTarget(undefined)\r\n    }\r\n  }\r\n\r\n  const onTargetsSelect = (target: tProcessedCharacter | tProcessedParty) => {\r\n    if (!selectedSkill) return\r\n    setSelectedTarget(makeSkillTarget(selectedSkill.targetType, target))\r\n  }\r\n\r\n  const completeRound = () => {\r\n    setRoundId(v4())\r\n    setActiveRound(undefined)\r\n    setIsRenderingResult(false)\r\n  }\r\n\r\n  const commit = useCallback(() => {\r\n    if (!activeRound) return\r\n    const result = resultCommitter(activeRound)\r\n    setRoundResults((r) => [...r, activeRound])\r\n    setEnemyParty(result.enemyParty)\r\n    updateParty(result.playerParty)\r\n    setQueue(result.queue)\r\n\r\n    completeRound()\r\n  }, [activeRound, queue])\r\n\r\n  const execEnemyTurn = (skill: tSkill, target: tSkillTarget) => {\r\n    const result = getSkillResult(\r\n      activeCharacter,\r\n      resolveSkillTarget(target),\r\n      skill,\r\n    )\r\n    setActiveRound(result)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activeCharacter && isRunning) {\r\n      if (activeCharacter.partyId === enemyParty.id) {\r\n        const { skill, target } = getAIAction(\r\n          activeCharacter,\r\n          party,\r\n          enemyParty,\r\n        )\r\n        execEnemyTurn(skill, makeSkillTarget(skill.targetType, target))\r\n      } else {\r\n        setSelectedSkill(activeCharacter.skills[0])\r\n      }\r\n    }\r\n  }, [roundId])\r\n\r\n  useEffect(() => {\r\n    if (!isRunning) return\r\n    if (enemyParty.characters.every((c) => c.health <= 0)) {\r\n      setIsRunning(false)\r\n      const rewards = getRolledRewards(\r\n        enemyParty,\r\n        party.characters.reduce((p, c) =>\r\n          p.stats.luck > c.stats.luck ? p : c,\r\n        ),\r\n      )\r\n      updateParty({\r\n        ...rawParty,\r\n        characters: rawParty.characters.map((c) => removeTemporaryStatus(c)),\r\n      })\r\n      open(<CombatVictoryModal rewards={rewards} />, {}, true)\r\n      return\r\n    }\r\n    if (party.characters.every((c) => c.health <= 0)) {\r\n      setIsRunning(false)\r\n      alert('you lose')\r\n      history.push('/JSFTK_combat/')\r\n      return\r\n    }\r\n  }, [party, enemyParty])\r\n\r\n  return (\r\n    <CombatContext.Provider\r\n      value={{\r\n        party,\r\n        enemyParty,\r\n        characters,\r\n        queue,\r\n        activeCharacter,\r\n        activeRound,\r\n        selectedSkill,\r\n        selectedTargets: selectedTarget\r\n          ? resolveSkillTarget(selectedTarget)\r\n          : [],\r\n        selectedConsumableIndex,\r\n        roundResults,\r\n        isRunning,\r\n        isRenderingResult,\r\n        onSkillSelect,\r\n        onTargetsSelect,\r\n        onConsumableSelect: setSelectedConsumableIndex,\r\n        start,\r\n        next,\r\n        commit,\r\n        reset,\r\n        equipItemCombat,\r\n      }}\r\n    >\r\n      {children}\r\n    </CombatContext.Provider>\r\n  )\r\n}\r\n","import { tSkill } from '../Skill/type'\r\nimport { tProcessedCharacter } from '../Character/type'\r\nimport { tProcessedParty } from '../Party/type'\r\nimport { getRandom } from '../../util'\r\nimport { getSkillTargetOptions } from '../Skill/util'\r\n\r\nexport interface tAIAction {\r\n  skill: tSkill\r\n  target: tProcessedCharacter | tProcessedParty\r\n}\r\nexport const getAIAction = (\r\n  source: tProcessedCharacter,\r\n  playerParty: tProcessedParty,\r\n  enemyParty: tProcessedParty,\r\n): tAIAction => {\r\n  const skill = getRandom(source.skills)\r\n  const targetedCharacters = playerParty.characters.filter(\r\n    (c) => c.status.map((t) => t.type).includes('targeted') && c.health > 0,\r\n  )\r\n  const target =\r\n    skill.targetType === 'single'\r\n      ? targetedCharacters.length > 0\r\n        ? getRandom(targetedCharacters)\r\n        : getRandom(playerParty.characters.filter((c) => c.health > 0))\r\n      : getRandom<tProcessedParty | tProcessedCharacter>(\r\n          getSkillTargetOptions(source, enemyParty, playerParty, skill),\r\n        )\r\n\r\n  return { skill, target }\r\n}\r\n","import React from 'react'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface PerfectPropsT {\r\n  show: boolean | undefined\r\n  partyId: string\r\n}\r\nexport const Perfect = (props: PerfectPropsT) => {\r\n  const { show, partyId } = props\r\n  const style = useSpring({ opacity: show ? 1 : 0 })\r\n  return show ? (\r\n    <animated.div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: 16,\r\n        fontSize: 42,\r\n        color: partyId === PLAYER_PARTY_ID ? 'rgba(255,255,255,1)' : '#c95738',\r\n        textShadow: '4px 4px 4px black',\r\n        fontFamily: Theme.titleFont,\r\n        ...style,\r\n      }}\r\n    >\r\n      Perfect!\r\n    </animated.div>\r\n  ) : null\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport Kefir from 'kefir'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport Color from 'color'\r\nimport { Perfect } from './Perfect'\r\nimport { Theme } from '../../theme'\r\nimport { CHARACTER_CLASS_COLORS } from '../../game/Character/constants'\r\n\r\nexport interface RoundResultRendererPropsT {\r\n  isModal?: boolean\r\n}\r\nexport const RoundResultRenderer = (props: RoundResultRendererPropsT) => {\r\n  const { isModal = true } = props\r\n  const { activeRound, isRunning, commit } = useCombatContext()\r\n  const { open, close } = useModalContext()\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (activeRound && !isOpen && isRunning) {\r\n      setIsOpen(true)\r\n      if (isModal) {\r\n        open(\r\n          <RoundResult\r\n            close={() => {\r\n              close(true)\r\n              setIsOpen(false)\r\n              commit()\r\n            }}\r\n          />,\r\n          {\r\n            overlay: {\r\n              background: 'transparent',\r\n            },\r\n          },\r\n          true,\r\n        )\r\n      }\r\n    }\r\n  }, [isRunning, isModal, isOpen, activeRound, open, close, commit])\r\n\r\n  if (!isModal && activeRound && isRunning) {\r\n    return (\r\n      <FlexContainer style={{ height: 269 }}>\r\n        <RoundResult\r\n          close={() => {\r\n            setIsOpen(false)\r\n            commit()\r\n          }}\r\n        />\r\n      </FlexContainer>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport interface RoundResultPropsT {\r\n  close: () => void\r\n}\r\nexport interface CheckKVT {\r\n  label: string\r\n  result: boolean | undefined\r\n}\r\nexport const RoundResult = (props: RoundResultPropsT) => {\r\n  const { close } = props\r\n  const { activeRound } = useCombatContext()\r\n  const [isDone, setIsDone] = useState(false)\r\n  const round = activeRound?.sourceResult\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n  const [roundResults, setRoundResults] = useState<CheckKVT[]>(\r\n    !round\r\n      ? []\r\n      : round.rollResults.map((result, i) => ({\r\n          label: round.skill.weaponStatOverride || round.source.weapon.stat,\r\n          result: undefined,\r\n        })),\r\n  )\r\n\r\n  const updateRoundResult = (value: CheckKVT, index: number) => {\r\n    setActiveIndex(index)\r\n    setRoundResults((r) => r.map((r, i) => (i === index ? value : r)))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!round) return\r\n    const stream = Kefir.sequentially(\r\n      200,\r\n      roundResults.map((r, i) => ({ ...r, index: i })),\r\n    )\r\n    stream.onValue((result) => {\r\n      updateRoundResult(\r\n        {\r\n          label: result.label,\r\n          result: round.rollResults[result.index],\r\n        },\r\n        result.index,\r\n      )\r\n    })\r\n    stream.onEnd(() => {\r\n      Kefir.later(round.perfect ? 1200 : 900, undefined).onValue(() => {\r\n        setIsDone(true)\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (isDone) {\r\n      close()\r\n    }\r\n  }, [isDone, close])\r\n\r\n  const showPerfect = activeIndex === roundResults.length - 1 && round?.perfect\r\n  const isPlayer = (partyId: string) => partyId === PLAYER_PARTY_ID\r\n  const targetResult = activeRound?.targetResults[0]\r\n  const showTarget =\r\n    round && targetResult && targetResult.target.id !== round.source.id\r\n  if (!round) return null\r\n  const color = Color(\r\n    CHARACTER_CLASS_COLORS[targetResult?.target?.class || 'enemy'],\r\n  )\r\n    .lighten(0.5)\r\n    //.saturate(2)\r\n    .hex()\r\n    .toString()\r\n  return (\r\n    <FlexContainer $direction='column' style={{ textAlign: 'center' }}>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        {roundResults.map((result, i) => (\r\n          <SkillCheck\r\n            key={i}\r\n            check={result}\r\n            perfect={showPerfect}\r\n            skill={round.skill}\r\n            crit={round.criticalHitSuccess}\r\n          />\r\n        ))}\r\n      </FlexContainer>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        <div\r\n          style={{\r\n            marginTop: 24,\r\n            //background: Theme.darkBgColor,\r\n            fontSize: 32,\r\n            padding: '16px 32px',\r\n            color: 'rgba(255,255,255,0.8)',\r\n            //fontWeight: 'bolder',\r\n            textShadow: '1px 1px 1px black',\r\n          }}\r\n        >\r\n          <strong\r\n            style={{\r\n              fontWeight: 'bold',\r\n              color: isPlayer(round.source.partyId)\r\n                ? Color(CHARACTER_CLASS_COLORS[round.source.class])\r\n                    .lighten(1)\r\n                    //.saturate(1)\r\n                    .hex()\r\n                    .toString()\r\n                : Theme.enemyPartyColor,\r\n            }}\r\n          >\r\n            {round.source.name}\r\n          </strong>{' '}\r\n          uses{' '}\r\n          <span style={{ color: 'rgba(255,255,255,0.9)', fontWeight: 'bold' }}>\r\n            {round.skill.name}\r\n          </span>\r\n          {showTarget && (\r\n            <span>\r\n              {' on '}\r\n              <strong\r\n                style={{\r\n                  fontWeight: 'bold',\r\n                  color: isPlayer(targetResult?.target.partyId || '')\r\n                    ? color\r\n                    : Theme.enemyPartyColor,\r\n                }}\r\n              >\r\n                {targetResult?.target.name}\r\n              </strong>\r\n            </span>\r\n          )}\r\n        </div>\r\n      </FlexContainer>\r\n      <Perfect show={showPerfect} partyId={round.source.partyId} />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { tStats } from '../../game/Stats/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { STAT_BONUS_KEYS } from '../../game/Stats/constants'\r\n\r\nconst getStatColor = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tStats,\r\n): string => {\r\n  const a = character.stats[key]\r\n  const b = character.rawStats[key]\r\n  if (a === undefined || b === undefined) return 'rgba(255,255,255,0.6)'\r\n  if (a > b) return 'lightgreen'\r\n  if (b > a) return 'lightcoral'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n\r\nexport interface StatBarPropsT {\r\n  character: tProcessedCharacter\r\n}\r\nexport const StatBar = (props: StatBarPropsT) => {\r\n  const { character } = props\r\n\r\n  return (\r\n    <BoxContainer>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-between',\r\n          width: 360,\r\n          paddingTop: 10,\r\n          paddingBottom: 6,\r\n        }}\r\n      >\r\n        {STAT_BONUS_KEYS.map((key) => (\r\n          <FlexContainer\r\n            key={key}\r\n            style={{\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Icon\r\n              src={STAT_ICONS[key] || ''}\r\n              size={20}\r\n              fill={getStatColor(character, key)}\r\n              style={{ marginRight: 4 }}\r\n            />\r\n            <span style={{ color: getStatColor(character, key) }}>\r\n              {character.stats[key]}\r\n            </span>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\n\r\nexport interface UIContextT {\r\n  playerCanEquipItem: boolean\r\n  openCharacterInventoryId: string | undefined\r\n  showSkillTooltips: boolean\r\n  onCharacterConsumableClick: (\r\n    c: tProcessedCharacter,\r\n    index: number,\r\n    item: tConsumable,\r\n  ) => void\r\n  setPlayerCanEquipItem: (v: boolean) => void\r\n  setOpenCharacterInventoryId: (id: string | undefined) => void\r\n  setOnCharacterConsumableClick: (\r\n    fn: (c: tProcessedCharacter, index: number, item: tConsumable) => void,\r\n  ) => void\r\n  setShowSkillTooltips: (v: boolean) => void\r\n}\r\n\r\nconst defaultValue: UIContextT = {\r\n  playerCanEquipItem: false,\r\n  openCharacterInventoryId: undefined,\r\n  showSkillTooltips: false,\r\n  onCharacterConsumableClick: (c, i, item) => {},\r\n  setPlayerCanEquipItem: (v) => {},\r\n  setOpenCharacterInventoryId: (id) => {},\r\n  setOnCharacterConsumableClick: (fn) => {},\r\n  setShowSkillTooltips: (v) => {},\r\n}\r\n\r\nexport const UIContext = React.createContext<UIContextT>(defaultValue)\r\nexport const useUIContext = () => useContext(UIContext)\r\n\r\nexport interface UIContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const UIContextProvider = (props: UIContextProviderPropsT) => {\r\n  const { children } = props\r\n  const [playerCanEquipItem, setPlayerCanEquipItem] = useState(false)\r\n  const [showSkillTooltips, setShowSkillTooltips] = useState(true)\r\n  const [openCharacterInventoryId, setOpenCharacterInventoryId] = useState<\r\n    string | undefined\r\n  >()\r\n  const [onCharacterConsumableClick, _setOnCharacterConsumableClick] = useState<\r\n    (c: tProcessedCharacter, i: number, item: tConsumable) => void\r\n  >((c, i, item) => {})\r\n\r\n  const setOnCharacterConsumableClick = (\r\n    fn: (c: tProcessedCharacter, index: number, item: tConsumable) => void,\r\n  ) => {\r\n    _setOnCharacterConsumableClick(() => fn)\r\n  }\r\n  return (\r\n    <UIContext.Provider\r\n      value={{\r\n        playerCanEquipItem,\r\n        openCharacterInventoryId,\r\n        showSkillTooltips,\r\n        onCharacterConsumableClick,\r\n        setPlayerCanEquipItem,\r\n        setOpenCharacterInventoryId,\r\n        setOnCharacterConsumableClick,\r\n        setShowSkillTooltips,\r\n      }}\r\n    >\r\n      {children}\r\n    </UIContext.Provider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { RESOURCE_ICONS, WEAPON_TYPE_ICONS } from '../../icons/maps'\r\nimport { styled } from 'styletron-react'\r\nimport { ClickToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Button } from '../../elements/button'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tArmor, tArmorResourceType } from '../../game/Armor/type'\r\nimport {\r\n  CHARACTER_RESOURCES,\r\n  ITEM_RARITY_COLORS,\r\n} from '../../game/Item/constants'\r\nimport { Theme } from '../../theme'\r\n\r\nconst ItemRow = styled(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    marginBottom: '4px',\r\n    textShadow: '1px 1px 1px black',\r\n    background: props.$disabled\r\n      ? 'rgba(255,255,255,0.05)'\r\n      : 'linear-gradient(90deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 100%)',\r\n    paddingLeft: '8px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    textTransform: 'capitalize',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n  }\r\n})\r\n\r\nexport interface ItemPropsT {\r\n  character: tProcessedCharacter\r\n  setActiveItem: (item: tWeapon | tArmor | undefined) => void\r\n}\r\nexport const Items = (props: ItemPropsT) => {\r\n  const { character, setActiveItem } = props\r\n  const { playerCanEquipItem } = useUIContext()\r\n  return (\r\n    <FlexContainer $full $direction='column'>\r\n      <Item\r\n        disabled={false}\r\n        character={character}\r\n        resource={'weapon'}\r\n        onHover={setActiveItem}\r\n        canUnequip={playerCanEquipItem}\r\n      />\r\n      {CHARACTER_RESOURCES.map((res) => {\r\n        const disabled = res === 'offhand' && character.weapon.twoHand\r\n        return (\r\n          <Item\r\n            key={res}\r\n            disabled={disabled}\r\n            character={character}\r\n            resource={res}\r\n            onHover={setActiveItem}\r\n            canUnequip={playerCanEquipItem}\r\n          />\r\n        )\r\n      })}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface ItemProps {\r\n  character: tProcessedCharacter\r\n  resource: tArmorResourceType | 'weapon'\r\n  canUnequip?: boolean\r\n  disabled?: boolean\r\n  onHover: (item: tArmor | tWeapon | undefined) => void\r\n}\r\nexport const Item = (props: ItemProps) => {\r\n  const {\r\n    character,\r\n    resource,\r\n    canUnequip = true,\r\n    disabled = false,\r\n    onHover,\r\n  } = props\r\n  const { unequipItem } = usePartyContext()\r\n  const item =\r\n    resource === 'weapon'\r\n      ? character.weapon\r\n      : character.armor.find((a) => a.resource === resource)\r\n  return (\r\n    <ClickToolTip\r\n      direction='down'\r\n      distance={-2}\r\n      content={() => (\r\n        <>\r\n          {canUnequip && (\r\n            <BoxContainer\r\n              substyle={{\r\n                padding: 4,\r\n                width: 190,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                background: Theme.otherGrey,\r\n              }}\r\n            >\r\n              <Button\r\n                style={{ padding: '4px 8px' }}\r\n                onClick={() => {\r\n                  if (item) {\r\n                    if (resource === 'weapon') {\r\n                    } else {\r\n                      unequipItem(character.id, item)\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                Unequip\r\n              </Button>\r\n              <Button style={{ padding: '4px 8px' }}>Cancel</Button>\r\n            </BoxContainer>\r\n          )}\r\n        </>\r\n      )}\r\n    >\r\n      {({ onClick, ref }) => (\r\n        <ItemRow\r\n          ref={ref}\r\n          $disabled={disabled}\r\n          onMouseEnter={() => onHover(item)}\r\n          onClick={() => {\r\n            if (item) onClick()\r\n          }}\r\n          style={{\r\n            color: ITEM_RARITY_COLORS[item?.rarity || 'common'],\r\n          }}\r\n        >\r\n          <Icon\r\n            src={\r\n              resource === 'weapon'\r\n                ? WEAPON_TYPE_ICONS[(item as tWeapon)?.type || 'fist']\r\n                : RESOURCE_ICONS[resource] || ''\r\n            }\r\n            size={16}\r\n            fill={disabled ? 'rgba(255,255,255,0.3)' : 'white'}\r\n            style={{ marginRight: 6 }}\r\n          />\r\n          {item?.name}\r\n        </ItemRow>\r\n      )}\r\n    </ClickToolTip>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface NamePropsT {\r\n  name: string\r\n}\r\n\r\nexport const Name = (props: NamePropsT) => {\r\n  const { name } = props\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        width: '100%',\r\n        height: 40,\r\n        marginBottom: -20,\r\n        marginTop: -20,\r\n      }}\r\n    >\r\n      <FullContainer />\r\n      <BoxContainer\r\n        style={{ zIndex: 2 }}\r\n        substyle={{ background: Theme.darkBgColor }}\r\n      >\r\n        {name}\r\n      </BoxContainer>\r\n      <FullContainer />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { CHARACTER_CLASS_COLORS } from '../../game/Character/constants'\r\nimport { tCharacter } from '../../game/Character/type'\r\nimport { Icon } from '../Icon'\r\nimport { CHARACTER_CLASS_ICONS } from '../../icons/maps'\r\n\r\nexport interface CharacterIconPropsT {\r\n  character: tCharacter\r\n  size: number\r\n  height?: number\r\n  width?: number\r\n  index?: number\r\n  style?: CSSProperties\r\n  iconStyle?: CSSProperties\r\n}\r\nexport const CharacterIcon = (props: CharacterIconPropsT) => {\r\n  const { character, size, height, width, index, style, iconStyle } = props\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        background: CHARACTER_CLASS_COLORS[character.class],\r\n        border: '2px solid rgba(255,255,255,0.8)',\r\n        height: height || size - 10,\r\n        width: width || size - 7,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        overflow: 'hidden',\r\n        ...(style || {}),\r\n      }}\r\n    >\r\n      <Icon\r\n        src={character.icon || CHARACTER_CLASS_ICONS[character.class]}\r\n        shadow\r\n        fill={'white'}\r\n        size={size - 7}\r\n        style={{\r\n          zIndex: index || 1,\r\n          position: 'relative',\r\n          ...(iconStyle || {}),\r\n        }}\r\n      />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { CharacterIcon } from '../CharacterIcon'\r\n\r\nexport interface ImagePropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Image = (props: ImagePropsT) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n      <div>\r\n        <FlexContainer style={{ marginRight: 20, marginBottom: 10 }}>\r\n          <CharacterIcon character={character} size={100} />\r\n        </FlexContainer>\r\n      </div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { FlexContainer } from '../../elements/flex'\r\nimport { withStyle } from 'styletron-react'\r\nimport { Theme } from '../../theme'\r\n\r\nexport const Row = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    textShadow: '1px 1px 1px black',\r\n    background: props.$active ? 'rgba(255,255,255,0.2)' : undefined,\r\n    paddingLeft: '8px',\r\n    paddingTop: '2px',\r\n    paddingBottom: '2px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    cursor: 'pointer',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n    textTransform: 'capitalize',\r\n  }\r\n})\r\nexport const ActionsRow = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    padding: '4px',\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    borderTop: '1px solid black',\r\n    borderBottom: '1px solid black',\r\n    background: Theme.otherGrey,\r\n  }\r\n})\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { condenseListToStack } from '.'\r\nimport { WEAPON_TYPE_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Row, ActionsRow } from './elements'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\n\r\nexport interface WeaponListPropsT {\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n  setActiveItem: (item: tWeapon | tArmor) => void\r\n  onEquipItem?: (characterId: string, item: tWeapon | tArmor) => void\r\n}\r\n\r\nexport const WeaponList = (props: WeaponListPropsT) => {\r\n  const { character, canEquip, setActiveItem, onEquipItem } = props\r\n  const { party, sellItem, equipItem } = usePartyContext()\r\n  const [activeItemId, setActiveItemId] = useState<string | undefined>()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {condenseListToStack(\r\n        party.items\r\n          .filter((i) => i.itemType === 'weapon')\r\n          .map((i) => i as tArmor)\r\n          .sort((a, b) => a.name.localeCompare(b.name)),\r\n      ).map(({ item, count }) => {\r\n        const weapon = item as tWeapon\r\n        return (\r\n          <FlexContainer $direction='column' key={weapon.id}>\r\n            <Row\r\n              $active={weapon.id === activeItemId}\r\n              onMouseEnter={() => setActiveItem(weapon)}\r\n              onClick={(e: MouseEvent) => {\r\n                e.stopPropagation()\r\n                e.preventDefault()\r\n                setActiveItemId(weapon.id)\r\n              }}\r\n            >\r\n              <div style={{ width: 24 }}>\r\n                <Icon\r\n                  src={WEAPON_TYPE_ICONS[weapon.type || 'fist']}\r\n                  size={16}\r\n                  fill={ITEM_RARITY_COLORS[weapon.rarity]}\r\n                  style={{ marginRight: 6 }}\r\n                />\r\n              </div>\r\n              <span style={{ color: ITEM_RARITY_COLORS[weapon.rarity] }}>\r\n                {count} {weapon.name}\r\n              </span>\r\n            </Row>\r\n            {canEquip && activeItemId === weapon.id && (\r\n              <ActionsRow>\r\n                <Button\r\n                  style={{ padding: '4px 8px', marginRight: 10 }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    if (onEquipItem) {\r\n                      onEquipItem(character.id, weapon)\r\n                    } else {\r\n                      equipItem(character.id, weapon)\r\n                    }\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Equip\r\n                </Button>\r\n                <FullContainer />\r\n                <Button\r\n                  style={{ padding: '4px 8px', marginRight: 10 }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    sellItem(item.id)\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Sell Item ({item.goldValue})\r\n                </Button>\r\n                <Button\r\n                  style={{ padding: '4px 8px' }}\r\n                  onClick={() => {\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </ActionsRow>\r\n            )}\r\n          </FlexContainer>\r\n        )\r\n      })}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport Weapons from '../../icons/svg/lorc/broadsword.svg'\r\nimport Armor from '../../icons/svg/delapouite/leather-armor.svg'\r\nimport { ArmorList } from './ArmorList'\r\nimport { WeaponList } from './WeaponList'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface MenuOptionT {\r\n  key: string\r\n  icon: string\r\n  count: (character: tProcessedCharacter, party: tProcessedParty) => number\r\n  render: (\r\n    character: tProcessedCharacter,\r\n    canEquip: boolean,\r\n    setActiveItem: (item: tWeapon | tArmor) => void,\r\n  ) => JSX.Element\r\n}\r\nexport const ACTIVE_CHARACTER_MENU_KEYS: MenuOptionT[] = [\r\n  /*{\r\n    key: 'items',\r\n    icon: Items,\r\n    count: (c) => c.consumables.length,\r\n    render: (character) => <div>items</div>,\r\n  }, */\r\n  {\r\n    key: 'weapons',\r\n    icon: Weapons,\r\n    count: (c, p) => p.items.filter((i) => i.itemType === 'weapon').length,\r\n    render: (character, canEquip, setActiveItem) => (\r\n      <WeaponList\r\n        character={character}\r\n        canEquip={canEquip}\r\n        setActiveItem={setActiveItem}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    key: 'armor',\r\n    icon: Armor,\r\n    count: (c, p) => p.items.filter((i) => i.itemType === 'armor').length,\r\n    render: (character, canEquip, setActiveItem) => (\r\n      <ArmorList\r\n        character={character}\r\n        canEquip={canEquip}\r\n        setActiveItem={setActiveItem}\r\n      />\r\n    ),\r\n  },\r\n]\r\n\r\nexport interface MenuSelectPropsT {\r\n  character: tProcessedCharacter\r\n  party: tProcessedParty\r\n  activeKey: string\r\n  onActiveKeyChange: (key: string) => void\r\n}\r\n\r\nexport const MenuSelect = (props: MenuSelectPropsT) => {\r\n  const { character, party, activeKey, onActiveKeyChange } = props\r\n\r\n  return (\r\n    <FlexContainer style={{ justifyContent: 'center', marginTop: 8 }}>\r\n      {ACTIVE_CHARACTER_MENU_KEYS.map((option) => (\r\n        <Button\r\n          key={option.key}\r\n          style={{\r\n            padding: '4px 8px',\r\n            //width: 56,\r\n            fontSize: 12,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            background:\r\n              option.key === activeKey ? Theme.lightBgColor : undefined,\r\n          }}\r\n          onClick={() => {\r\n            onActiveKeyChange(option.key)\r\n          }}\r\n        >\r\n          <FullContainer\r\n            style={{ marginRight: 8, textTransform: 'capitalize' }}\r\n          >\r\n            {option.key}\r\n          </FullContainer>\r\n          <FullContainer style={{ paddingRight: 2 }}>\r\n            {option.count(character, party)}\r\n          </FullContainer>\r\n        </Button>\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { ArmorPreview } from '../ArmorPreview'\r\nimport { WeaponPreview } from '../WeaponPreview'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\n\r\nexport interface HoverAreaPropsT {\r\n  character: tProcessedCharacter\r\n  activeItem: tWeapon | tArmor\r\n}\r\n\r\nexport const HoverArea = (props: HoverAreaPropsT) => {\r\n  const { character, activeItem } = props\r\n  const foundArmor = character.armor.find(\r\n    (a) => a.resource === (activeItem as tArmor).resource,\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {activeItem.itemType === 'armor' && (\r\n        <FlexContainer>\r\n          {foundArmor && (\r\n            <ArmorPreview armor={foundArmor} showEquipButton={false} />\r\n          )}\r\n          {foundArmor?.id !== activeItem.id && (\r\n            <ArmorPreview\r\n              armor={activeItem as tArmor}\r\n              showEquipButton={false}\r\n            />\r\n          )}\r\n        </FlexContainer>\r\n      )}\r\n      {activeItem.itemType === 'weapon' && (\r\n        <FlexContainer>\r\n          <WeaponPreview\r\n            weapon={character.weapon}\r\n            showEquipButton={false}\r\n            character={character}\r\n          />\r\n          {character.weapon.id !== activeItem.id && (\r\n            <WeaponPreview\r\n              character={character}\r\n              weapon={activeItem as tWeapon}\r\n              showEquipButton={false}\r\n            />\r\n          )}\r\n        </FlexContainer>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { FlexContainer } from './flex'\r\nimport { Theme } from '../theme'\r\nimport { HoverToolTip } from '../components/Tooltip'\r\n\r\nexport interface HexagonPropsT {\r\n  color: string\r\n  size: number\r\n  style?: CSSProperties\r\n  children?: JSX.Element | string | number\r\n  childStyle?: CSSProperties\r\n}\r\nexport const Hexagon = (props: HexagonPropsT) => {\r\n  const { color, size, children, childStyle } = props\r\n  const mod = size / 100\r\n  const boxW = mod * 100\r\n  const boxH = mod * 57.74\r\n  const triH = mod * 28.8774\r\n  const triW = mod * 50\r\n  const tHeight = boxH + 2 * triH\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <div\r\n        style={{\r\n          width: 0,\r\n          borderBottom: `${triH}px solid ${color}`,\r\n          borderRight: `${triW}px solid transparent`,\r\n          borderLeft: `${triW}px solid transparent`,\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          width: `${boxW}px`,\r\n          height: `${boxH + 0}px`,\r\n          //marginTop: '-1px',\r\n          //marginBottom: '-1px',\r\n          background: color,\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          width: 0,\r\n          borderTop: `${triH}px solid ${color}`,\r\n          borderRight: `${triW}px solid transparent`,\r\n          borderLeft: `${triW}px solid transparent`,\r\n        }}\r\n      />\r\n      <FlexContainer\r\n        $direction='column'\r\n        style={{\r\n          width: `${boxW}px`,\r\n          height: `${tHeight}px`,\r\n          position: 'absolute',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          ...(childStyle || {}),\r\n        }}\r\n      >\r\n        {children}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface HexBadgePropsT extends HexagonPropsT {\r\n  rotate?: boolean\r\n  stroke?: number\r\n  onClick?: () => void\r\n}\r\nexport const HexBadge = (props: HexBadgePropsT) => {\r\n  const {\r\n    color,\r\n    size,\r\n    style,\r\n    children,\r\n    childStyle,\r\n    onClick,\r\n    stroke = 1.2,\r\n    rotate = false,\r\n  } = props\r\n  const angle = rotate ? 30 : 0\r\n  return (\r\n    <div\r\n      style={{\r\n        transform: `rotateY(0deg) rotate(-${angle}deg)`,\r\n        ...(style || {}),\r\n      }}\r\n      onClick={onClick}\r\n    >\r\n      <Hexagon size={size} color={Theme.darkBgColorSolid}>\r\n        <Hexagon size={size - stroke * 2} color={Theme.lightBgColor}>\r\n          <Hexagon size={size - stroke * 2 - 2} color={Theme.darkBgColorSolid}>\r\n            <Hexagon\r\n              size={size - stroke * 4 - 2}\r\n              color={color}\r\n              childStyle={{\r\n                fontFamily: Theme.titleFont,\r\n                color: 'white',\r\n                fontSize: `${size - 16}px`,\r\n                paddingTop: 2,\r\n                transform: `rotateY(0deg) rotate(${angle}deg)`,\r\n                ...(childStyle || {}),\r\n              }}\r\n            >\r\n              {children}\r\n            </Hexagon>\r\n          </Hexagon>\r\n        </Hexagon>\r\n      </Hexagon>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport interface HoverBadgePropsT {\r\n  children: JSX.Element | string | number\r\n  content: JSX.Element\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n  style?: CSSProperties\r\n  childStyle?: CSSProperties\r\n  size?: number\r\n  rotate?: boolean\r\n  stroke?: number\r\n  position?: {\r\n    top?: number\r\n    bottom?: number\r\n    left?: number\r\n    right?: number\r\n  }\r\n}\r\nexport const HoverHexBadge = (props: HoverBadgePropsT) => {\r\n  const {\r\n    children,\r\n    content,\r\n    direction,\r\n    style,\r\n    childStyle,\r\n    size,\r\n    rotate,\r\n    stroke,\r\n    position,\r\n  } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        position: position ? 'absolute' : 'relative',\r\n        top: position?.top,\r\n        bottom: position?.bottom,\r\n        left: position?.left,\r\n        right: position?.right,\r\n        zIndex: 4,\r\n      }}\r\n    >\r\n      <HoverToolTip\r\n        distance={2}\r\n        direction={direction || 'right'}\r\n        content={content || <div />}\r\n      >\r\n        <HexBadge\r\n          style={style}\r\n          rotate={rotate}\r\n          stroke={stroke}\r\n          childStyle={{ ...childStyle, textShadow: '1px 1px 3px black' }}\r\n          size={size || 20}\r\n          color={Theme.badgeBgColor}\r\n        >\r\n          {children}\r\n        </HexBadge>\r\n      </HoverToolTip>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { StatBar } from './StatBar'\r\nimport { Items } from './Items'\r\nimport { Name } from './Name'\r\nimport { Image } from './Image'\r\nimport { MenuSelect, ACTIVE_CHARACTER_MENU_KEYS } from './MenuSelect'\r\nimport { HoverArea } from './HoverArea'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { Theme } from '../../theme'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { HexBadge } from '../../elements/shapes'\r\n\r\nexport interface PartyActiveCharacterPropsT {\r\n  character: tProcessedCharacter\r\n  party: tProcessedParty\r\n  canEquip: boolean\r\n  onRequestClose: () => void\r\n}\r\n\r\nexport interface ItemStackT<T> {\r\n  count: number\r\n  item: T\r\n}\r\n\r\ntype ItemT = tConsumable | tArmor | tWeapon\r\nexport const condenseListToStack = (items: ItemT[]): ItemStackT<ItemT>[] => {\r\n  let stack: ItemStackT<ItemT>[] = []\r\n  items.forEach((i) => {\r\n    if (stack.map((s) => s.item.name).includes(i.name)) {\r\n      stack = stack.map((s) =>\r\n        s.item.name === i.name ? { ...s, count: s.count + 1 } : s,\r\n      )\r\n    } else {\r\n      stack = [...stack, { item: i, count: 1 }]\r\n    }\r\n  })\r\n  return stack\r\n}\r\n\r\nexport const PartyActiveCharacter = (props: PartyActiveCharacterPropsT) => {\r\n  const { character, party, canEquip, onRequestClose } = props\r\n  const [activeMenuKey, setActiveMenuKey] = useState('armor')\r\n  const [activeItem, setActiveItem] = useState<tArmor | tWeapon | undefined>()\r\n  const activeOption = ACTIVE_CHARACTER_MENU_KEYS.find(\r\n    (o) => o.key === activeMenuKey,\r\n  )\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        justifyContent: 'flex-end',\r\n      }}\r\n    >\r\n      <HexBadge\r\n        color={Theme.healthRedColor}\r\n        size={32}\r\n        onClick={onRequestClose}\r\n        style={{\r\n          position: 'absolute',\r\n          top: -16,\r\n          right: -9,\r\n          cursor: 'pointer',\r\n          userSelect: 'none',\r\n          textShadow: '1px 1px 3px black',\r\n        }}\r\n      >\r\n        X\r\n      </HexBadge>\r\n      <FlexContainer\r\n        style={{\r\n          maxHeight: 440,\r\n          padding: 10,\r\n          position: 'absolute',\r\n          left: '-6px',\r\n          width: 486,\r\n          justifyContent: 'flex-end',\r\n          zIndex: 1,\r\n        }}\r\n      >\r\n        {activeItem && (\r\n          <HoverArea character={character} activeItem={activeItem} />\r\n        )}\r\n      </FlexContainer>\r\n      <BoxContainer substyle={{ background: Theme.darkBgColor, padding: 0 }}>\r\n        <FlexContainer $direction='column'>\r\n          <Name name={character.name} />\r\n          <StatBar character={character} />\r\n          <BoxContainer\r\n            substyle={{\r\n              background: Theme.darkBgColor,\r\n              padding: '16px 0 2px 0',\r\n            }}\r\n          >\r\n            <FlexContainer>\r\n              <Items character={character} setActiveItem={setActiveItem} />\r\n              <Image character={character} />\r\n            </FlexContainer>\r\n            <MenuSelect\r\n              character={character}\r\n              party={party}\r\n              activeKey={activeMenuKey}\r\n              onActiveKeyChange={setActiveMenuKey}\r\n            />\r\n          </BoxContainer>\r\n          <BoxContainer\r\n            substyle={{\r\n              background: Theme.darkBgColor,\r\n              padding: '4px 0',\r\n              height: 200,\r\n              overflow: 'auto',\r\n            }}\r\n          >\r\n            {activeOption &&\r\n              activeOption.render(character, canEquip, setActiveItem)}\r\n          </BoxContainer>\r\n        </FlexContainer>\r\n      </BoxContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { ARMOR_TYPE_ICONS } from '../../icons/maps'\r\nimport { Button } from '../../elements/button'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\nimport { condenseListToStack } from '.'\r\nimport { Row, ActionsRow } from './elements'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\n\r\nexport interface ArmorListPropsT {\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n  setActiveItem: (item: tWeapon | tArmor) => void\r\n  onEquipItem?: (characterId: string, item: tWeapon | tArmor) => void\r\n}\r\n\r\nexport const ArmorList = (props: ArmorListPropsT) => {\r\n  const { character, canEquip, setActiveItem, onEquipItem } = props\r\n  const { party, sellItem, equipItem } = usePartyContext()\r\n  const [activeItemId, setActiveItemId] = useState<string | undefined>()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {condenseListToStack(\r\n        party.items\r\n          .filter((i) => i.itemType === 'armor')\r\n          .map((i) => i as tArmor)\r\n          .sort((a, b) => a.name.localeCompare(b.name)),\r\n      ).map(({ item, count }) => {\r\n        const armor = item as tArmor\r\n        return (\r\n          <FlexContainer key={armor.id} $direction='column'>\r\n            <Row\r\n              $active={item.id === activeItemId}\r\n              onMouseEnter={() => setActiveItem(armor)}\r\n              onClick={(e: MouseEvent) => {\r\n                e.stopPropagation()\r\n                e.preventDefault()\r\n                setActiveItemId(armor.id)\r\n              }}\r\n            >\r\n              <div style={{ width: 24 }}>\r\n                <Icon\r\n                  src={ARMOR_TYPE_ICONS[armor.type]}\r\n                  size={16}\r\n                  style={{ marginRight: 10 }}\r\n                  fill={ITEM_RARITY_COLORS[armor.rarity]}\r\n                  shadow\r\n                />\r\n              </div>\r\n              <span style={{ color: ITEM_RARITY_COLORS[armor.rarity] }}>\r\n                {count} {armor.name}\r\n              </span>\r\n            </Row>\r\n            {canEquip && activeItemId === armor.id && (\r\n              <ActionsRow>\r\n                <Button\r\n                  style={{ padding: '4px 8px', marginRight: 10 }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    if (onEquipItem) {\r\n                      onEquipItem(character.id, armor)\r\n                    } else {\r\n                      equipItem(character.id, armor)\r\n                    }\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Equip\r\n                </Button>\r\n                <FullContainer />\r\n                <Button\r\n                  style={{ padding: '4px 8px', marginRight: 10 }}\r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    sellItem(item.id)\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Sell Item ({item.goldValue})\r\n                </Button>\r\n                <Button\r\n                  style={{ padding: '4px 8px' }}\r\n                  onClick={() => {\r\n                    setActiveItemId(undefined)\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </ActionsRow>\r\n            )}\r\n          </FlexContainer>\r\n        )\r\n      })}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Theme } from '../../theme'\r\nimport { ArmorList } from '../PartyActiveCharacter/ArmorList'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { WeaponList } from '../PartyActiveCharacter/WeaponList'\r\n\r\nexport interface EquipItemModalPropsT {\r\n  equipItemCombat: (characterId: string, item: tWeapon | tArmor) => void\r\n}\r\n\r\nexport const EquipItemModal = (props: EquipItemModalPropsT) => {\r\n  const { equipItemCombat } = props\r\n  const { activeCharacter } = useCombatContext()\r\n  const { close } = useModalContext()\r\n  const onEquipItem = (characterId: string, item: tWeapon | tArmor) => {\r\n    equipItemCombat(characterId, item)\r\n    close()\r\n  }\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ maxHeight: 300, overflow: 'auto' }}\r\n    >\r\n      <h3 style={{ margin: 0, marginBottom: 32, fontFamily: Theme.titleFont }}>\r\n        Choose an Item\r\n      </h3>\r\n      <WeaponList\r\n        character={activeCharacter}\r\n        setActiveItem={() => {}}\r\n        canEquip={true}\r\n        onEquipItem={onEquipItem}\r\n      />\r\n      <ArmorList\r\n        character={activeCharacter}\r\n        setActiveItem={() => {}}\r\n        canEquip={true}\r\n        onEquipItem={onEquipItem}\r\n      />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { Button } from '../../elements/button'\r\nimport { SkillPreview } from '../SkillPreview'\r\nimport { SkillChecks } from '../SkillChecks'\r\nimport { SKILL_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Hover } from '../Hover'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { Theme } from '../../theme'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { EquipItemModal } from '../EquipItemModal'\r\nimport Inventory from '../../icons/svg/lorc/knapsack.svg'\r\nimport { HEAL, REMOVE_CURSES } from '../../game/Skill/skills/consumables'\r\nimport { hasAnyStatus, hasStatus } from '../../game/Character/util'\r\n\r\nexport const CombatActions = () => {\r\n  const {\r\n    party,\r\n    activeCharacter,\r\n    selectedSkill,\r\n    selectedTargets,\r\n    onSkillSelect,\r\n    equipItemCombat,\r\n  } = useCombatContext()\r\n  const { open } = useModalContext()\r\n\r\n  if (!activeCharacter || activeCharacter.partyId !== PLAYER_PARTY_ID)\r\n    return null\r\n\r\n  const stat = selectedSkill?.weaponStatOverride || activeCharacter.weapon.stat\r\n  const skills = activeCharacter.skills.filter((skill) => {\r\n    if (activeCharacter.healthOffset === 0 && skill.id === HEAL.id) {\r\n      return false\r\n    } else {\r\n      if (\r\n        !hasAnyStatus(activeCharacter, [\r\n          'cursed-agility',\r\n          'cursed-charisma',\r\n          'cursed-dexterity',\r\n          'cursed-intelligence',\r\n          'cursed-luck',\r\n          'cursed-strength',\r\n          'cursed-vigor',\r\n        ]) &&\r\n        skill.id === REMOVE_CURSES.id\r\n      ) {\r\n        return false\r\n      } else {\r\n        return true\r\n      }\r\n    }\r\n  })\r\n  return (\r\n    <FlexContainer $direction='column' style={{ minWidth: 340 }}>\r\n      {selectedSkill && <SkillChecks stat={stat} skill={selectedSkill} />}\r\n      <FlexContainer style={{ justifyContent: 'center', minHeight: 42 }}>\r\n        {skills.map((skill) => (\r\n          <React.Fragment key={skill.id}>\r\n            {SKILL_ICONS[skill.name] ? (\r\n              <Hover delay={0}>\r\n                {({ isHovering }) => (\r\n                  <Icon\r\n                    src={SKILL_ICONS[skill.name]}\r\n                    size={42}\r\n                    shadow={true}\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      padding: '0 12px',\r\n                    }}\r\n                    onClick={() => {\r\n                      onSkillSelect(skill)\r\n                    }}\r\n                    fill={\r\n                      skill.id === selectedSkill?.id\r\n                        ? 'lightsalmon'\r\n                        : isHovering\r\n                        ? 'white'\r\n                        : 'rgba(255,255,255,0.8)'\r\n                    }\r\n                  />\r\n                )}\r\n              </Hover>\r\n            ) : (\r\n              <Button\r\n                key={skill.id}\r\n                onClick={() => onSkillSelect(skill)}\r\n                style={{\r\n                  background: Theme.darkBgColor,\r\n                  borderColor:\r\n                    selectedSkill && skill.id === selectedSkill.id\r\n                      ? 'white'\r\n                      : undefined,\r\n                }}\r\n              >\r\n                {skill.name}\r\n              </Button>\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n        {party.items.length > 0 && (\r\n          <Hover delay={0}>\r\n            {({ isHovering }) => (\r\n              <Icon\r\n                src={Inventory}\r\n                size={42}\r\n                shadow={true}\r\n                style={{\r\n                  cursor: 'pointer',\r\n                  padding: '0 12px',\r\n                }}\r\n                onClick={() =>\r\n                  open(<EquipItemModal equipItemCombat={equipItemCombat} />)\r\n                }\r\n                fill={isHovering ? 'white' : 'rgba(255,255,255,0.8)'}\r\n              />\r\n            )}\r\n          </Hover>\r\n        )}\r\n      </FlexContainer>\r\n      {selectedSkill && (\r\n        <SkillPreview\r\n          skill={selectedSkill}\r\n          source={activeCharacter}\r\n          targets={selectedTargets}\r\n        />\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport const Monospace = styled('span', () => ({\r\n  fontFamily: 'Inconsolata, monospace',\r\n  fontWeight: 600,\r\n}))\r\nexport const Monodiv = styled('div', () => ({\r\n  fontFamily: 'Inconsolata, monospace',\r\n  fontWeight: 600,\r\n}))\r\n","import { GaugePropsT } from '.'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { FullContainer } from '../../elements/flex'\r\n\r\nexport const Gauge2 = (props: GaugePropsT) => {\r\n  const { name = '', value, color, height = 30, children, style } = props\r\n  const max = props.max < 1 ? 1 : props.max\r\n  const p = (value / max) * 100\r\n  const percentage = p > 100 ? 100 : p\r\n  const [oldPercentage, setOldPercentage] = useState(percentage)\r\n  useEffect(() => {\r\n    setOldPercentage(percentage)\r\n  }, [percentage])\r\n  return (\r\n    <BoxContainer\r\n      style={{ borderLeft: 'none', ...(style || {}) }}\r\n      substyle={{\r\n        padding: 0,\r\n        background: 'rgba(80,80,85,1)',\r\n        height: height - 2,\r\n        position: 'relative',\r\n        border: 'none',\r\n      }}\r\n    >\r\n      <Spring\r\n        from={{ value: oldPercentage || 0 }}\r\n        to={{ value: percentage }}\r\n        config={{ friction: 200, mass: 4, tension: 600 }}\r\n      >\r\n        {(p) => (\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              left: 0,\r\n              boxSizing: 'border-box',\r\n              height: height - 2,\r\n              maxWidth: `${p.value}%`,\r\n              minWidth: `${p.value}%`,\r\n              boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n              backgroundColor: 'rgba(255,255,255,0.5)',\r\n            }}\r\n          ></div>\r\n        )}\r\n      </Spring>\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          left: 0,\r\n          boxSizing: 'border-box',\r\n          height: height - 2,\r\n          maxWidth: `${percentage}%`,\r\n          minWidth: `${percentage}%`,\r\n          boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n          textShadow: '1px 1px 3px black',\r\n          backgroundColor: color,\r\n        }}\r\n      ></div>\r\n      <FullContainer\r\n        style={{\r\n          position: 'absolute',\r\n          height,\r\n          lineHeight: `${height - 2}px`,\r\n          right: 4,\r\n          top: 0,\r\n          fontSize: 12,\r\n          overflow: 'hidden',\r\n          textShadow: '0px 0px 3px black',\r\n          color: 'rgba(255,255,255,0.8)',\r\n        }}\r\n      >\r\n        <div>{children}</div>\r\n      </FullContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FullContainer } from '../../elements/flex'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { Monodiv } from '../../elements/monospace'\r\nimport { noneg } from '../../util'\r\nimport { usePrevious } from '../../hooks/usePrevious'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { CHARACTER_XP_MAX } from '../../game/Character/constants'\r\nimport { Gauge2 } from './v2'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface GaugePropsT {\r\n  name?: string\r\n  color: string\r\n  height?: number\r\n  max: number\r\n  value: number\r\n  style?: CSSProperties\r\n  children?: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const Gauge = (props: GaugePropsT) => {\r\n  const { name = '', value, color, height = 30, children, style } = props\r\n  const max = props.max < 1 ? 1 : props.max\r\n  const p = (value / max) * 100\r\n  const percentage = p > 100 ? 100 : p\r\n  const oldPercentage = usePrevious(percentage)\r\n  return (\r\n    <HoverToolTip\r\n      direction='right'\r\n      content={<BoxContainer>{`${name} (${value} / ${max})`}</BoxContainer>}\r\n    >\r\n      <BoxContainer\r\n        style={{\r\n          borderLeft: 'none',\r\n          background: Theme.darkBgColorSolid,\r\n          ...(style || {}),\r\n        }}\r\n        substyle={{\r\n          padding: 0,\r\n          background: 'rgba(255,255,255,0.2)',\r\n          height: height - 2,\r\n          position: 'relative',\r\n          border: 'none',\r\n        }}\r\n      >\r\n        <Spring\r\n          from={{ value: oldPercentage || 0 }}\r\n          to={{ value: percentage }}\r\n          config={{ friction: 70, mass: 5, tension: 300 }}\r\n        >\r\n          {(p) => (\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                left: 0,\r\n                boxSizing: 'border-box',\r\n                height: height - 2,\r\n                maxWidth: `${p.value}%`,\r\n                minWidth: `${p.value}%`,\r\n                boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n                textShadow: '1px 1px 1px black',\r\n                backgroundColor: color,\r\n                color: 'white',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n            ></div>\r\n          )}\r\n        </Spring>\r\n        <FullContainer\r\n          style={{\r\n            position: 'absolute',\r\n            height,\r\n            lineHeight: `${height - 2}px`,\r\n            right: 4,\r\n            top: 0,\r\n            fontSize: 10,\r\n            fontWeight: 'bold',\r\n            overflow: 'hidden',\r\n            textShadow: '0px 0px 3px black',\r\n          }}\r\n        >\r\n          <Monodiv>{children}</Monodiv>\r\n        </FullContainer>\r\n      </BoxContainer>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface HealthGaugePropsT {\r\n  character: tProcessedCharacter\r\n  height?: number\r\n  style?: CSSProperties\r\n  showNumbers?: boolean\r\n}\r\nexport const HealthGauge = (props: HealthGaugePropsT) => {\r\n  const { character, height = 16, style, showNumbers = true } = props\r\n  const health = noneg(character.health)\r\n  return (\r\n    <Gauge2\r\n      name='Health'\r\n      color={Theme.healthRedColor}\r\n      max={character.maxHealth}\r\n      value={health}\r\n      height={height}\r\n      style={style}\r\n    >\r\n      {showNumbers && (\r\n        <span>\r\n          {health}/{character.maxHealth}\r\n        </span>\r\n      )}\r\n    </Gauge2>\r\n  )\r\n}\r\nexport interface XPGaugePropsT {\r\n  character: tProcessedCharacter\r\n  style?: CSSProperties\r\n  showNumber?: boolean\r\n}\r\nexport const XPGauge = (props: HealthGaugePropsT) => {\r\n  const { character, style } = props\r\n  const value = character.experience\r\n  const max = CHARACTER_XP_MAX[character.level]\r\n  return (\r\n    <Gauge2\r\n      name='XP'\r\n      color='#5e8575'\r\n      max={max}\r\n      value={value}\r\n      height={16}\r\n      style={style}\r\n    >\r\n      {value}/{max}\r\n    </Gauge2>\r\n  )\r\n}\r\n","import { useState, useEffect, useRef } from 'react'\r\n\r\nexport const usePrevious = <T = any>(value: T) => {\r\n  const ref = useRef<T>()\r\n\r\n  useEffect(() => {\r\n    ref.current = value\r\n  }, [value])\r\n\r\n  return ref.current\r\n}\r\n","import React from 'react'\r\nimport { Tooltip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STATUS_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { tStatus } from '../../game/Status/type'\r\nimport { STATUS_CONFIG } from '../../game/Status/constants'\r\n\r\nexport interface TagPreviewPropsT {\r\n  status: tStatus\r\n  immunity?: boolean\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n}\r\nexport const TagPreview = (props: TagPreviewPropsT) => {\r\n  const { status, direction, immunity } = props\r\n  const statusConfig = STATUS_CONFIG[status.type]\r\n  return (\r\n    <Tooltip\r\n      direction={direction || 'bottom'}\r\n      content={\r\n        <BoxContainer style={{ maxWidth: 200 }}>\r\n          <FlexContainer $direction='column'>\r\n            <strong style={{ marginBottom: statusConfig.description ? 8 : 0 }}>\r\n              {status.type} {immunity && 'immunity'}{' '}\r\n              {status.duration > 0 ? `(${status.duration})` : ''}\r\n            </strong>\r\n            {statusConfig.description && (\r\n              <>{!immunity && <span>{statusConfig.description}</span>}</>\r\n            )}\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n      }\r\n    >\r\n      <Icon\r\n        shadow\r\n        src={STATUS_ICONS[status.type] || ''}\r\n        size={20}\r\n        fill={immunity ? 'white' : 'Violet'}\r\n        style={{ marginLeft: 4 }}\r\n      />\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { tProcessedCharacter } from '../game/Character/type'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { Theme } from '../theme'\r\nimport { hasImmunity } from '../game/Character/util'\r\n\r\nexport const usePlayerCharacterNotifications = (\r\n  character: tProcessedCharacter,\r\n  push: (c: JSX.Element, type?: string) => void,\r\n  shake: () => void,\r\n) => {\r\n  const health = character.health\r\n  const level = character.level\r\n  const { roundResults } = useCombatContext()\r\n  const [previousHealth, setPreviousHealth] = useState(health)\r\n  const [previousLevel, setPreviousLevel] = useState(level)\r\n  useEffect(() => {\r\n    const healthDiff = previousHealth - health\r\n    if (healthDiff > 0) {\r\n      push(<span style={{ fontFamily: Theme.titleFont }}>- {healthDiff}</span>)\r\n      shake()\r\n    }\r\n    if (healthDiff < 0) {\r\n      push(\r\n        <span style={{ fontFamily: Theme.titleFont }}>\r\n          + {Math.abs(healthDiff)}\r\n        </span>,\r\n        'good',\r\n      )\r\n    }\r\n    if (level > previousLevel) {\r\n      push(\r\n        <span style={{ fontFamily: Theme.titleFont, fontSize: 36 }}>\r\n          Level Up!\r\n        </span>,\r\n        'good',\r\n      )\r\n    }\r\n    setPreviousLevel(level)\r\n    setPreviousHealth(health)\r\n  }, [health, level])\r\n\r\n  useEffect(() => {\r\n    const lastRound = roundResults[roundResults.length - 1]\r\n    if (lastRound) {\r\n      if (\r\n        lastRound.sourceResult.weaponDidBreak &&\r\n        lastRound.sourceResult.source.id === character.id\r\n      ) {\r\n        push(\r\n          <span style={{ fontFamily: Theme.titleFont, fontSize: 36 }}>\r\n            Weapon Break!\r\n          </span>,\r\n        )\r\n      }\r\n      const chResult = lastRound.targetResults.find(\r\n        (r) => r.target.id === character.id,\r\n      )\r\n      if (chResult) {\r\n        if (chResult.dodgeSuccess) {\r\n          push(\r\n            <span style={{ fontFamily: Theme.titleFont }}>Dodged!</span>,\r\n            'base',\r\n          )\r\n        }\r\n        if (\r\n          !chResult.dodgeSuccess &&\r\n          chResult.accuracySuccess &&\r\n          chResult.skill.damage &&\r\n          chResult.loggedDamgge.value <= 0\r\n        ) {\r\n          push(\r\n            <span style={{ fontFamily: Theme.titleFont }}>Blocked!</span>,\r\n            'base',\r\n          )\r\n        }\r\n        if (chResult.addedStatus.length > 0) {\r\n          chResult.addedStatus.forEach((status) => {\r\n            if (hasImmunity(character, status)) {\r\n              push(\r\n                <span style={{ fontFamily: Theme.titleFont }}>Immune</span>,\r\n                'base',\r\n              )\r\n            } else {\r\n              push(\r\n                <span\r\n                  style={{\r\n                    textTransform: 'capitalize',\r\n                    fontFamily: Theme.titleFont,\r\n                  }}\r\n                >\r\n                  {status}\r\n                </span>,\r\n                'base',\r\n              )\r\n            }\r\n          })\r\n        }\r\n        if (chResult.perfect && chResult.skill.perfectPierce) {\r\n          push(\r\n            <span style={{ fontFamily: Theme.titleFont }}>Pierced!</span>,\r\n            'base',\r\n          )\r\n        }\r\n        if (chResult.criticalHitSuccess && chResult.skill.damage) {\r\n          push(\r\n            <span style={{ fontFamily: Theme.titleFont }}>Critical!</span>,\r\n            'base',\r\n          )\r\n        }\r\n      }\r\n      if (\r\n        lastRound.sourceResult.source.id === character.id &&\r\n        !lastRound.sourceResult.accuracySuccess\r\n      ) {\r\n        push(\r\n          <span style={{ fontFamily: Theme.titleFont }}>Missed!</span>,\r\n          'base',\r\n        )\r\n      }\r\n    }\r\n  }, [roundResults])\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { noneg } from '../../util'\r\nimport { usePlayerCharacterNotifications } from '../../hooks/usePlayerCharacterNotifications'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface HealthPropsT {\r\n  character: tProcessedCharacter\r\n  push: (content: JSX.Element, type?: string) => void\r\n}\r\nexport const Health = (props: HealthPropsT) => {\r\n  const { character, push } = props\r\n  const health = noneg(character.health)\r\n  const [previousHealth, setPreviousHealth] = useState(character.health)\r\n  usePlayerCharacterNotifications(character, push, () => {})\r\n\r\n  useEffect(() => {\r\n    setPreviousHealth(health)\r\n  }, [health])\r\n\r\n  return (\r\n    <span\r\n      style={{\r\n        fontSize: 64,\r\n        height: 64,\r\n        width: 60,\r\n        textShadow: '1px 1px 10px black',\r\n        color: Theme.healthRedColor,\r\n        fontFamily: 'New Rocker',\r\n        userSelect: 'none',\r\n      }}\r\n    >\r\n      <Spring\r\n        from={{ hp: previousHealth || 0 }}\r\n        to={{ hp: health }}\r\n        config={{ friction: 70, mass: 5, tension: 300, clamp: true }}\r\n      >\r\n        {(hpp) => <span>{Math.floor(hpp.hp)}</span>}\r\n      </Spring>\r\n    </span>\r\n  )\r\n}\r\n","import React, { useContext, useState, useEffect, CSSProperties } from 'react'\r\nimport { animated, useTransition } from 'react-spring'\r\nimport { FullContainer } from '../../elements/flex'\r\nimport { v4 } from 'uuid'\r\n\r\nexport interface LocalToastContextT {\r\n  push: (content: JSX.Element) => void\r\n}\r\nexport const defaultValue: LocalToastContextT = {\r\n  push: (content) => {},\r\n}\r\nexport const LocalToastContext = React.createContext<LocalToastContextT>(\r\n  defaultValue,\r\n)\r\nexport const useLocalToast = () => useContext(LocalToastContext)\r\n\r\nexport interface LocalToastProviderProps {\r\n  children: JSX.Element\r\n}\r\nexport const LocalToastProvider = (props: LocalToastProviderProps) => {\r\n  const { children } = props\r\n  const [queue, setQueue] = useState<\r\n    {\r\n      id: string\r\n      content: JSX.Element\r\n    }[]\r\n  >([])\r\n\r\n  useEffect(() => {\r\n    const i = setInterval(() => {\r\n      setQueue((q) => {\r\n        const [f, ...rest] = q\r\n        return rest || []\r\n      })\r\n    }, 3000)\r\n    return () => {\r\n      clearInterval(i)\r\n    }\r\n  }, [])\r\n\r\n  const push = (c: JSX.Element, type?: string) => {\r\n    setQueue((q) => [\r\n      ...q,\r\n      {\r\n        id: v4(),\r\n        content: c,\r\n        type,\r\n      },\r\n    ])\r\n  }\r\n\r\n  return (\r\n    <LocalToastContext.Provider value={{ push }}>\r\n      <>\r\n        <div style={{ position: 'relative' }}>\r\n          <Toast queue={queue} />\r\n        </div>\r\n        {children}\r\n      </>\r\n    </LocalToastContext.Provider>\r\n  )\r\n}\r\n\r\ninterface ToastQT {\r\n  id: string\r\n  type?: string\r\n  content: JSX.Element\r\n}\r\nexport interface ToastPropsT {\r\n  queue: ToastQT[]\r\n  style?: CSSProperties\r\n}\r\nexport const Toast = (props: ToastPropsT) => {\r\n  const { queue, style } = props\r\n  const hasChildren = queue.length > 0\r\n  const animation = useTransition(queue, (q) => q.id, {\r\n    from: {\r\n      transform: 'translate3d(0,40px,0)',\r\n      maxWidth: 0,\r\n      maxHeight: 0,\r\n      opacity: 0,\r\n    },\r\n    enter: {\r\n      transform: 'translate3d(0,0px,0)',\r\n      maxWidth: 180,\r\n      maxHeight: 40,\r\n      opacity: 1,\r\n    },\r\n    leave: {\r\n      transform: 'translate3d(0,-80px,0)',\r\n      maxWidth: 0,\r\n      maxHeight: 0,\r\n      opacity: 0,\r\n    },\r\n  })\r\n\r\n  return (\r\n    <animated.div\r\n      style={{\r\n        position: 'absolute',\r\n        width: '100%',\r\n        display: 'flex',\r\n        height: 0,\r\n        top: -24,\r\n        zIndex: 3,\r\n        ...(style || {}),\r\n      }}\r\n    >\r\n      {animation.map((item) => (\r\n        <animated.div\r\n          key={item.key}\r\n          style={{\r\n            display: 'flex',\r\n            ...item.props,\r\n          }}\r\n        >\r\n          <FullContainer />\r\n          <div\r\n            style={{\r\n              marginBottom: 4,\r\n              marginRight: 4,\r\n              fontSize: 20,\r\n              padding: 2,\r\n              lineHeight: '20px',\r\n              whiteSpace: 'nowrap',\r\n              background:\r\n                'radial-gradient(circle, rgba(0,0,0,0.3) 0%, rgba(0,0,0,0) 100%)',\r\n              ...color(item.item.type),\r\n            }}\r\n          >\r\n            {item.item.content}\r\n          </div>\r\n          <FullContainer />\r\n        </animated.div>\r\n      ))}\r\n    </animated.div>\r\n  )\r\n}\r\n\r\nexport interface LocalToastRpPropsT {\r\n  children: (props: LocalToastContextT) => JSX.Element\r\n  style?: CSSProperties\r\n}\r\nexport const LocalToastRp = (props: LocalToastRpPropsT) => {\r\n  const { children, style } = props\r\n  const [queue, setQueue] = useState<ToastQT[]>([])\r\n\r\n  const push = (c: JSX.Element, type?: string) => {\r\n    setQueue((q) => [\r\n      ...q,\r\n      {\r\n        id: v4(),\r\n        content: c,\r\n        type,\r\n      },\r\n    ])\r\n    setTimeout(() => {\r\n      setQueue((q) => {\r\n        const [f, ...rest] = q\r\n        return rest || []\r\n      })\r\n    }, 4000)\r\n  }\r\n  return (\r\n    <>\r\n      <div style={{ position: 'relative' }}>\r\n        <Toast queue={queue} style={style} />\r\n      </div>\r\n      {children({ push })}\r\n    </>\r\n  )\r\n}\r\n\r\nconst color = (type: string | undefined) => {\r\n  switch (type) {\r\n    case 'good':\r\n      return {\r\n        color: '#aae6bf',\r\n        textShadow: '0px 3px 1px rgba(0,0,0,0.5)',\r\n      }\r\n    case 'base':\r\n      return {\r\n        color: 'rgba(255,255,255,0.8)',\r\n        textShadow: '0px 3px 1px rgba(0,0,0,0.5)',\r\n      }\r\n    default:\r\n      return {\r\n        // color: 'rgba(219, 114, 114, 0.8)',\r\n        // color: 'red',\r\n        color: 'rgba(255,158,158,0.8)',\r\n        textShadow: '0px 3px 1px rgba(0,0,0,1)',\r\n      }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { HealthGauge } from '../Gauge'\r\nimport { styled } from 'styletron-react'\r\nimport { HoverBadge } from '../../elements/badge'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { TagPreview } from '../TagPreview'\r\nimport { noneg } from '../../util'\r\nimport { Icon } from '../Icon'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Health } from './Health'\r\nimport { LocalToastRp } from '../../contexts/LocalToastContext'\r\nimport { ZERO_STATS } from '../../game/Stats/constants'\r\nimport { Theme } from '../../theme'\r\nimport { HoverHexBadge } from '../../elements/shapes'\r\n\r\nexport interface EnemyCharacterPropsT {\r\n  character: tProcessedCharacter\r\n  activeCharacter: tProcessedCharacter\r\n  hoverable?: boolean\r\n  selected?: boolean\r\n  isHovering?: boolean\r\n  isBoss?: boolean\r\n  onClick?: () => void\r\n}\r\nconst Wrapper = styled('div', (props: any) => {\r\n  const { $selected, $active } = props\r\n  return {\r\n    margin: 10,\r\n    boxShadow: $active ? '0px 0px 20px white' : 'none',\r\n    transition: 'all 0.1s',\r\n  }\r\n})\r\nexport const EnemyCharacter = (props: EnemyCharacterPropsT) => {\r\n  const { character, activeCharacter, isBoss = false, onClick } = props\r\n  const health = noneg(character.health)\r\n  const active = activeCharacter?.id === character?.id\r\n  return (\r\n    <div\r\n      onClick={() => (onClick && character.health > 0 ? onClick() : null)}\r\n      style={{\r\n        borderWidth: 2,\r\n        width: isBoss ? 600 : 320,\r\n        position: 'relative',\r\n        cursor: onClick ? 'pointer' : 'default',\r\n        color: 'rgba(255,255,255,0.8)',\r\n        opacity: character.health <= 0 ? 0.5 : 1,\r\n        transition: 'all 0.4s',\r\n        transform: active ? 'scale(1.05)' : 'scale(0.95)',\r\n      }}\r\n    >\r\n      <FlexContainer style={{ alignItems: 'center' }}>\r\n        <FlexContainer>\r\n          <Icon\r\n            src={character.icon || ''}\r\n            shadow\r\n            fill={\r\n              activeCharacter && character.id === activeCharacter.id\r\n                ? 'lightsalmon'\r\n                : 'white'\r\n            }\r\n            size={64}\r\n            style={{ zIndex: 1, position: 'relative', marginRight: -24 }}\r\n          />\r\n        </FlexContainer>\r\n        <FlexContainer $full $direction='column'>\r\n          <FlexContainer\r\n            style={{\r\n              justifyContent: 'flex-end',\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                padding: '2px 4px',\r\n                textAlign: 'right',\r\n                fontSize: 18,\r\n                lineHeight: '18px',\r\n                background: 'rgba(0,0,0,0.4)',\r\n                textShadow: '1px 1px 2px black',\r\n                fontFamily: Theme.titleFont,\r\n                color: isBoss ? 'red' : 'rgba(255,255,255,0.8)',\r\n              }}\r\n            >\r\n              {character.name}\r\n            </span>\r\n          </FlexContainer>\r\n          <div style={{ boxShadow: '0px 4px 15px rgba(0,0,0,1)' }}>\r\n            <HealthGauge\r\n              character={character}\r\n              height={20}\r\n              showNumbers={false}\r\n            />\r\n          </div>\r\n          <HoverHexBadge\r\n            direction='down'\r\n            content={<BoxContainer>Enemy Level</BoxContainer>}\r\n            position={{\r\n              left: -6,\r\n              bottom: -12,\r\n            }}\r\n            size={32}\r\n            childStyle={{\r\n              color: 'lightcoral',\r\n              paddingTop: 1,\r\n            }}\r\n          >\r\n            {character.level}\r\n          </HoverHexBadge>\r\n          <FlexContainer\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: '-12px',\r\n              left: '40px',\r\n            }}\r\n          >\r\n            {character.status.map((status, i) => (\r\n              <TagPreview key={i} status={status} />\r\n            ))}\r\n            {character.immunities.map((status, i) => (\r\n              <TagPreview\r\n                key={i}\r\n                immunity={true}\r\n                status={{\r\n                  type: status,\r\n                  immunities: [],\r\n                  stack: 0,\r\n                  stats: ZERO_STATS,\r\n                  duration: -1,\r\n                }}\r\n              />\r\n            ))}\r\n          </FlexContainer>\r\n          <FlexContainer\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: '-22px',\r\n              left: 'calc(100% - 58px)',\r\n              alignItems: 'center',\r\n              justifyContent: 'flex-start',\r\n            }}\r\n          >\r\n            {character.stats.armor > 0 && (\r\n              <HoverHexBadge\r\n                direction='down'\r\n                content={<BoxContainer>Armor</BoxContainer>}\r\n                size={28}\r\n                childStyle={{\r\n                  color: Theme.physicalColor,\r\n                  paddingTop: 1,\r\n                }}\r\n              >\r\n                <span>{character.stats.armor}</span>\r\n              </HoverHexBadge>\r\n            )}\r\n            {character.stats.resistance > 0 && (\r\n              <HoverHexBadge\r\n                direction='down'\r\n                content={<BoxContainer>Magic Resistance</BoxContainer>}\r\n                size={28}\r\n                childStyle={{\r\n                  color: Theme.magicColor,\r\n                  paddingTop: 1,\r\n                }}\r\n              >\r\n                <span>{character.stats.resistance}</span>\r\n              </HoverHexBadge>\r\n            )}\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n        <LocalToastRp style={{ top: -24, right: -30, flexDirection: 'column' }}>\r\n          {({ push }) => <Health character={character} push={push} />}\r\n        </LocalToastRp>\r\n      </FlexContainer>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { RedButton } from '../../elements/button'\r\nimport { EnemyCharacter } from '../EnemyCharacter'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\n\r\nexport interface CombatPartyPropsT {\r\n  party: tProcessedParty\r\n}\r\nexport const CombatParty = (props: CombatPartyPropsT) => {\r\n  const { party } = props\r\n  const { activeCharacter, selectedSkill, next } = useCombatContext()\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { setShowSkillTooltips } = useUIContext()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          padding: '0 120px',\r\n          cursor: selectedSkill?.targetType === 'group' ? 'pointer' : 'default',\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <div key={c.id}>\r\n            <EnemyCharacter\r\n              activeCharacter={activeCharacter}\r\n              character={c}\r\n              isBoss={currentEncounter?.type === 'boss'}\r\n            />\r\n            {selectedSkill &&\r\n              selectedSkill.targetType === 'single' &&\r\n              c.health > 0 &&\r\n              activeCharacter.partyId === PLAYER_PARTY_ID && (\r\n                <FlexContainer\r\n                  style={{ justifyContent: 'center', marginTop: -11 }}\r\n                >\r\n                  <div\r\n                    style={{ boxShadow: '0px 2px 5px black', marginTop: -2 }}\r\n                  >\r\n                    <RedButton\r\n                      onClick={() => {\r\n                        next(c)\r\n                        setShowSkillTooltips(false)\r\n                      }}\r\n                      $direction='down'\r\n                    >\r\n                      Attack\r\n                    </RedButton>\r\n                  </div>\r\n                </FlexContainer>\r\n              )}\r\n          </div>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && selectedSkill.targetType === 'group' && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n            <RedButton\r\n              onClick={() => {\r\n                next(party)\r\n                setShowSkillTooltips(false)\r\n              }}\r\n            >\r\n              Attack Group\r\n            </RedButton>\r\n          </div>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface AppHeaderPropsT {\r\n  children?: JSX.Element\r\n  left?: JSX.Element\r\n  right?: JSX.Element\r\n}\r\n\r\nexport const AppHeader = (props: AppHeaderPropsT) => {\r\n  const { children, left, right } = props\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'center',\r\n          background: Theme.darkBgColorSolid,\r\n          height: 52,\r\n          borderBottom: '2px solid rgba(255,255,255,0.3)',\r\n          boxShadow: '1px 1px 1px black',\r\n        }}\r\n      >\r\n        <FlexContainer $full>{left}</FlexContainer>\r\n        <FlexContainer $full>{children}</FlexContainer>\r\n        <FlexContainer $full>{right}</FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport Gold from '../../icons/svg/delapouite/coins.svg'\r\nimport { Icon } from '../Icon'\r\n\r\nexport const PartyResources = () => {\r\n  const { party } = usePartyContext()\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{ alignItems: 'center', paddingRight: 20, color: '#ded9a6' }}\r\n    >\r\n      <Icon src={Gold} size={18} style={{ marginRight: 8 }} fill='#ded9a6' />\r\n      {party.gold}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { AppHeader } from '../AppHeader'\r\nimport { PartyResources } from '../PartyResources'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { tQueue } from '../../game/Queue/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { getMax, getFirst, getSortedIds } from '../../game/Queue/util'\r\nimport { Theme } from '../../theme'\r\nimport { CharacterIcon } from '../CharacterIcon'\r\n\r\nconst size = 40\r\nexport interface CombatQueuePropsT {\r\n  queue: tQueue\r\n  characters: tProcessedCharacter[]\r\n}\r\nexport const CombatQueue = (props: CombatQueuePropsT) => {\r\n  const { queue, characters } = props\r\n  const { isRunning } = useCombatContext()\r\n  const history = useHistory()\r\n  const { level, nextLevel } = useGameStateContext()\r\n  const first = characters.find(\r\n    (c) => c.id === getFirst(queue),\r\n  ) as tProcessedCharacter\r\n  const sortedIds = getSortedIds(queue)\r\n  const bigList = [\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n  ]\r\n  const count = Math.floor((800 - 52) / size)\r\n  const [f, ...list] = Array(count)\r\n    .fill(null)\r\n    .map((_, i) => bigList[i])\r\n    .map((id) => characters.find((c) => c.id === id))\r\n    .filter((c) => c !== undefined)\r\n  const max = getMax(queue)\r\n  const min = 25\r\n  const widthCoef = max > min ? 100 / max : 100 / min\r\n  return (\r\n    <AppHeader\r\n      left={\r\n        <Button\r\n          onClick={() => history.push('/JSFTK_combat')}\r\n          style={{ borderBottom: 0 }}\r\n        >\r\n          Restart ({level})\r\n        </Button>\r\n      }\r\n      right={\r\n        <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n          <PartyResources />\r\n        </FlexContainer>\r\n      }\r\n    >\r\n      <>\r\n        {first && isRunning && (\r\n          <FlexContainer\r\n            style={{\r\n              width: 800,\r\n              flexDirection: 'row-reverse',\r\n              boxShadow: '0px 0px 3px black',\r\n              borderLeft: '1px solid rgba(255,255,255,0.3)',\r\n              background: Theme.mediumBgColor,\r\n            }}\r\n          >\r\n            <FlexContainer\r\n              style={{ position: 'relative', marginLeft: size, zIndex: 7 }}\r\n            >\r\n              <CharacterIcon\r\n                character={first}\r\n                size={64}\r\n                width={64}\r\n                height={64}\r\n                style={{ borderTop: 'none' }}\r\n              />\r\n              <FlexContainer\r\n                $direction='column'\r\n                style={{\r\n                  position: 'absolute',\r\n                  background: 'rgba(255,255,255,0.8)',\r\n                  color: Theme.darkBgColor,\r\n                  zIndex: 2,\r\n                  width: 120,\r\n                  top: 16,\r\n                  paddingLeft: 4,\r\n                  right: '-124px',\r\n                }}\r\n              >\r\n                {first && <span>{first.name}'s Turn</span>}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n            <FlexContainer $full $direction='column'>\r\n              <FullContainer />\r\n              <FlexContainer $full style={{ position: 'relative' }}>\r\n                {characters\r\n                  .filter((c) => c.id !== first?.id && c.health > 0)\r\n                  .map((c, i) => (\r\n                    <div\r\n                      key={`${c?.id}-${i}`}\r\n                      style={{\r\n                        height: size - 10,\r\n                        width: size - 7,\r\n                        position: 'absolute',\r\n                        bottom: '2px',\r\n                        right: `calc(${queue[c.id] * widthCoef}% - ${\r\n                          size - 6\r\n                        }px)`,\r\n                        transition: 'all 0.3s',\r\n                        zIndex: i,\r\n                      }}\r\n                    >\r\n                      <CharacterIcon\r\n                        character={c}\r\n                        size={size}\r\n                        width={size}\r\n                        index={i}\r\n                        style={{ borderBottom: 'none' }}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        )}\r\n      </>\r\n    </AppHeader>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { tCharacter } from '../../game/Character/type'\r\n\r\nexport const Span = (color: string, text: JSX.Element | string) => (\r\n  <span style={{ color, fontWeight: 'bold' }}>{text}</span>\r\n)\r\nexport const SkillSpan = (skill: tSkill) => Span('plum', skill.name)\r\n\r\nexport const NameSpanBuilder = (party: tParty, enemyParty: tParty) => (\r\n  character: tCharacter,\r\n) => {\r\n  const isUserParty = character.partyId === party.id\r\n  const isEnemyParty = character.partyId === enemyParty.id\r\n  const color = isUserParty\r\n    ? 'lightgreen'\r\n    : isEnemyParty\r\n    ? 'lightsalmon'\r\n    : 'white'\r\n\r\n  return Span(color, character.name)\r\n}\r\n","import React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport { useCombatContext } from '../CombatContext'\r\nimport { Monospace } from '../../elements/monospace'\r\nimport { NameSpanBuilder, SkillSpan, Span } from './util'\r\nimport { getDamageResistance } from '../../game/Character/util'\r\nimport { STATUS_CONFIG } from '../../game/Status/constants'\r\n\r\nexport interface CombatLogContextT {\r\n  combatLog: JSX.Element[]\r\n  clear: () => void\r\n}\r\nconst defualtValue: CombatLogContextT = {\r\n  combatLog: [],\r\n  clear: () => {},\r\n}\r\nexport const CombatLogContext = createContext<CombatLogContextT>(defualtValue)\r\nexport const useCombatLogContext = () => useContext(CombatLogContext)\r\n\r\ntype DeadLogT = Record<string, boolean | undefined>\r\n\r\nexport interface CombatLogContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const CombatLogContextProvider = (\r\n  props: CombatLogContextProviderPropsT,\r\n) => {\r\n  const { children } = props\r\n  const { activeRound, roundResults, enemyParty, party } = useCombatContext()\r\n  const [combatLog, setCombatLog] = useState<JSX.Element[]>([])\r\n  const clear = () => setCombatLog([])\r\n  const [deadLog, setDeadLog] = useState<DeadLogT>({})\r\n  const NameSpan = NameSpanBuilder(party, enemyParty)\r\n  const log = (line: JSX.Element) =>\r\n    setCombatLog((log) => [\r\n      ...log,\r\n      <Monospace style={{ display: 'inline-block', fontWeight: 'normal' }}>\r\n        {line}\r\n      </Monospace>,\r\n    ])\r\n\r\n  useEffect(() => {\r\n    const characters = [...enemyParty.characters, ...party.characters]\r\n    setTimeout(() => {\r\n      characters.forEach((character) => {\r\n        if (character.health <= 0 && !deadLog[character.id]) {\r\n          setDeadLog((dLog) => ({ ...dLog, [character.id]: true }))\r\n          log(<span>{Span('lightcoral', `${character.name} died.`)}</span>)\r\n        }\r\n      })\r\n    }, 5)\r\n  }, [enemyParty, party])\r\n\r\n  useEffect(() => {\r\n    if (activeRound && activeRound) {\r\n      log(\r\n        <span>\r\n          {NameSpan(activeRound.sourceResult.source)} uses{' '}\r\n          {SkillSpan(activeRound.sourceResult.skill)}.\r\n        </span>,\r\n      )\r\n    }\r\n  }, [activeRound])\r\n\r\n  useEffect(() => {\r\n    if (roundResults.length === 0) return\r\n    const latestRounds = roundResults[roundResults.length - 1]\r\n    const baseRound = latestRounds.sourceResult\r\n    if (!baseRound) return\r\n\r\n    if (baseRound.skill.damage && baseRound.passedCount === 0) {\r\n      log(<span>{baseRound.source.name}'s attack missed.</span>)\r\n    }\r\n    if (!baseRound.skill.damage && !baseRound.perfect) {\r\n      log(<span>{SkillSpan(baseRound.skill)} failed.</span>)\r\n    }\r\n    if (baseRound.criticalHitSuccess) {\r\n      log(<span>{Span('gold', 'Critical Hit!')}</span>)\r\n    }\r\n    if (baseRound.perfect && baseRound.rollResults.length > 0) {\r\n      log(<span>{Span('gold', 'Perfect!')}</span>)\r\n    }\r\n    latestRounds.targetResults.forEach((round) => {\r\n      const targetParty = party.id === round.source.partyId ? enemyParty : party\r\n      if (round.passedCount > 0) {\r\n        if (round.dodgeSuccess) {\r\n          log(<span>{NameSpan(round.target)} dodged the attack.</span>)\r\n        } else if (round.totalDamage.value > 0) {\r\n          log(\r\n            <span>\r\n              {SkillSpan(round.skill)} deals{' '}\r\n              {Span('white', `${round.loggedDamgge.value} damage`)} to{' '}\r\n              {NameSpan(round.target)}.\r\n            </span>,\r\n          )\r\n        } else if (round.skill.damage) {\r\n          log(\r\n            <span>\r\n              {SkillSpan(round.skill)} did no damage to {NameSpan(round.target)}\r\n              .\r\n            </span>,\r\n          )\r\n        }\r\n        if (round.splashDamage.value > 0) {\r\n          targetParty.characters\r\n            .filter((c) => c.id !== round.target.id && c.health > 0)\r\n            .forEach((subTarget) => {\r\n              const splashDamageResistance = getDamageResistance(\r\n                subTarget,\r\n                round.splashDamage,\r\n              )\r\n              log(\r\n                <span>\r\n                  {SkillSpan(round.skill)} deals{' '}\r\n                  {Span(\r\n                    'white',\r\n                    `${\r\n                      round.splashDamage.value - splashDamageResistance\r\n                    } splash damage`,\r\n                  )}{' '}\r\n                  to {NameSpan(subTarget)}.\r\n                </span>,\r\n              )\r\n            })\r\n        }\r\n\r\n        if (round.reflectedDamage.value > 0) {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} reflected{' '}\r\n              {Span('white', `${round.reflectedDamage.value} damage`)}\r\n            </span>,\r\n          )\r\n        }\r\n\r\n        /* TODO\r\n        if (round.healing > 0) {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} gained{' '}\r\n              {Span('white', `${round.healing} HP`)} from{' '}\r\n              {SkillSpan(round.skill)}\r\n            </span>,\r\n          )\r\n        }\r\n        */\r\n\r\n        round.addedStatus.forEach((status) => {\r\n          const statusConfig = STATUS_CONFIG[status]\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} became {status}\r\n              {statusConfig.duration > 0\r\n                ? ` (${statusConfig.duration} turns)`\r\n                : ''}\r\n              .\r\n            </span>,\r\n          )\r\n        })\r\n      }\r\n    })\r\n  }, [roundResults.length])\r\n\r\n  return (\r\n    <CombatLogContext.Provider value={{ combatLog, clear }}>\r\n      {children}\r\n    </CombatLogContext.Provider>\r\n  )\r\n}\r\n","import React, { useRef, useEffect, useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { useCombatLogContext } from '../../contexts/CombatLogContext'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport { Button } from '../../elements/button'\r\nimport { Theme } from '../../theme'\r\n\r\nexport const CombatLog = () => {\r\n  const { combatLog } = useCombatLogContext()\r\n  const scrollRef = useRef<HTMLDivElement>(null)\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n  useEffect(() => {\r\n    if (scrollRef.current && isExpanded) {\r\n      scrollRef.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n  }, [combatLog])\r\n  const style = useSpring({\r\n    minHeight: isExpanded ? 263 : 0,\r\n    maxHeight: isExpanded ? 263 : 0,\r\n  })\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{\r\n        minWidth: 300,\r\n        overflow: 'auto',\r\n        background: 'rgba(0,0,0,0.7)',\r\n        fontSize: 12,\r\n        color: 'rgba(255,255,255,0.8)',\r\n      }}\r\n    >\r\n      <FlexContainer\r\n        style={{\r\n          background: Theme.darkBgColor,\r\n          padding: 8,\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <FullContainer>Combat Log</FullContainer>\r\n        <Button\r\n          onClick={() => setIsExpanded((v) => !v)}\r\n          style={{ padding: '2px 8px' }}\r\n        >\r\n          {isExpanded ? '_' : '+'}\r\n        </Button>\r\n      </FlexContainer>\r\n      <animated.div\r\n        style={{\r\n          overflow: 'auto',\r\n          ...style,\r\n        }}\r\n      >\r\n        <FlexContainer $direction='column' style={{ padding: 8 }}>\r\n          {combatLog.map((line, i) => (\r\n            <span key={i}>{line}</span>\r\n          ))}\r\n        </FlexContainer>\r\n        <div ref={scrollRef} />\r\n      </animated.div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { FlexContainer, FullContainer } from '../elements/flex'\r\nimport { RoundResultRenderer } from '../components/RoundResultRenderer'\r\nimport { CombatActions } from '../components/CombatActions'\r\nimport { CombatParty } from '../components/CombatParty'\r\nimport { CombatQueue } from '../components/CombatQueue'\r\nimport { CombatLog } from '../components/CombatLog'\r\nimport { useUIContext } from '../contexts/UIContext'\r\nimport { useCombatStart } from '../hooks/useCombatStart'\r\nimport { useCombatLogContext } from '../contexts/CombatLogContext'\r\n\r\nexport const Combat = () => {\r\n  const {\r\n    enemyParty,\r\n    activeCharacter,\r\n    characters,\r\n    queue,\r\n    isRunning,\r\n    isRenderingResult,\r\n    onSkillSelect,\r\n  } = useCombatContext()\r\n\r\n  const { setOnCharacterConsumableClick } = useUIContext()\r\n  const { clear } = useCombatLogContext()\r\n  useCombatStart()\r\n  useEffect(() => {\r\n    setOnCharacterConsumableClick((c, index, item) => {\r\n      if (!c) return\r\n      if (c.id === activeCharacter.id) {\r\n        onSkillSelect(item.skill, index)\r\n      }\r\n    })\r\n  }, [onSkillSelect, activeCharacter])\r\n  useEffect(() => {\r\n    clear()\r\n  }, [])\r\n\r\n  return (\r\n    <FlexContainer $full style={{ height: '100%' }}>\r\n      <FlexContainer $full $direction='column'>\r\n        <CombatQueue queue={queue} characters={characters} />\r\n        <FlexContainer\r\n          $direction='column'\r\n          $full\r\n          style={{ padding: '30px 10px 0 10px' }}\r\n        >\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{ marginBottom: 40, minHeight: 90 }}\r\n          >\r\n            <CombatParty party={enemyParty} />\r\n          </FlexContainer>\r\n          <FlexContainer $full>\r\n            {isRunning && activeCharacter && (\r\n              <>\r\n                <FullContainer />\r\n                <FlexContainer $direction='column'>\r\n                  <div style={{ marginTop: 40 }}>\r\n                    {!isRenderingResult && <CombatActions />}\r\n                    <RoundResultRenderer isModal={false} />\r\n                  </div>\r\n                  <FullContainer />\r\n                </FlexContainer>\r\n                <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n                  <FlexContainer\r\n                    $direction='column'\r\n                    // style={{ justifyContent: 'center' }}\r\n                  >\r\n                    <CombatLog />\r\n                  </FlexContainer>\r\n                </FlexContainer>\r\n              </>\r\n            )}\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useModalContext } from '../contexts/ModalContext'\r\nimport { useCombatLogContext } from '../contexts/CombatLogContext'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { FlexContainer } from '../elements/flex'\r\nimport { Icon } from '../components/Icon'\r\nimport { Theme } from '../theme'\r\n\r\nexport const useCombatStart = (delay: number = 1000) => {\r\n  const { open, close } = useModalContext()\r\n  const { clear } = useCombatLogContext()\r\n  const { enemyParty, start, reset } = useCombatContext()\r\n  useEffect(() => {\r\n    clear()\r\n    open(\r\n      <div style={{ textAlign: 'center' }}>\r\n        <h1 style={{ fontFamily: Theme.titleFont }}>Combat Start!</h1>\r\n        <FlexContainer\r\n          style={{\r\n            justifyContent: 'space-around',\r\n            marginTop: 32,\r\n            marginBottom: 40,\r\n          }}\r\n        >\r\n          {enemyParty.characters.map((c) => (\r\n            <FlexContainer\r\n              key={c.id}\r\n              style={{\r\n                background: '#c27a5d',\r\n                border: '2px solid rgba(255,255,255,0.8)',\r\n                height: 60,\r\n                width: 60,\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              <Icon\r\n                src={c.icon || ''}\r\n                shadow\r\n                fill={'white'}\r\n                size={60}\r\n                style={{ zIndex: 1, position: 'relative' }}\r\n              />\r\n            </FlexContainer>\r\n          ))}\r\n        </FlexContainer>\r\n      </div>,\r\n    )\r\n    setTimeout(() => {\r\n      close()\r\n      start()\r\n    }, 1500)\r\n    return () => {\r\n      reset()\r\n      clear()\r\n    }\r\n  }, [])\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Route, useHistory } from 'react-router-dom'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport { useModalContext } from '../contexts/ModalContext'\r\nimport { Theme } from '../theme'\r\n\r\nexport const makeRoute = (path: string, Component: React.FC) => (\r\n  <Route path={`/JSFTK_combat${path}`}>\r\n    <Component />\r\n  </Route>\r\n)\r\n\r\nexport const RouteController = () => {\r\n  const { encounters, currentEncounter, level } = useGameStateContext()\r\n  const history = useHistory()\r\n  const { open } = useModalContext()\r\n  useEffect(() => {\r\n    if (level > encounters.length - 1) {\r\n      open(\r\n        <div style={{ textAlign: 'center', fontFamily: Theme.titleFont }}>\r\n          <h1>You've Defeated the Lich! You did it!</h1>\r\n        </div>,\r\n      )\r\n      history.push('/JSFTK_combat')\r\n    } else if (\r\n      currentEncounter &&\r\n      (currentEncounter.type === 'combat' || currentEncounter.type === 'boss')\r\n    ) {\r\n      history.push('/JSFTK_combat/combat')\r\n    } else if (!currentEncounter && level > 0) {\r\n      history.push('/JSFTK_combat/party')\r\n    }\r\n  }, [currentEncounter, level])\r\n  return null\r\n}\r\n","import React, { useState, CSSProperties } from 'react'\r\nimport { withStyle } from 'styletron-react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Button } from '../../elements/button'\r\nimport { tShopEncounter } from '../../game/Encounter/type'\r\nimport { WeaponPreview } from '../WeaponPreview'\r\nimport { ArmorPreview } from '../ArmorPreview'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { ConsumablePreview } from '../ConsumablePreview'\r\nimport { Theme } from '../../theme'\r\n\r\nconst CardList = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  }\r\n})\r\n\r\ninterface ShopTabT {\r\n  key: string\r\n  label: string\r\n  render: (\r\n    encounter: tShopEncounter,\r\n    purchaseItem: (item: tArmor | tWeapon | tConsumable, cost: number) => void,\r\n  ) => JSX.Element\r\n}\r\nconst tabs: ShopTabT[] = [\r\n  {\r\n    key: 'all',\r\n    label: 'All',\r\n    render: (encounter: tShopEncounter, purchaseItem) => (\r\n      <FlexContainer $direction='column'>\r\n        <h3>Consumables</h3>\r\n        <CardList>\r\n          {encounter.items\r\n            .filter((i) => i.itemType === 'consumable')\r\n            .map((a) => (\r\n              <ConsumablePreview\r\n                item={a as tConsumable}\r\n                showBuyButton={true}\r\n                cost={encounter.costs[a.id]}\r\n                onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n              />\r\n            ))}\r\n        </CardList>\r\n        <h3>Weaopns</h3>\r\n        <CardList>\r\n          {encounter.items\r\n            .filter((i) => i.itemType === 'weapon')\r\n            .map((w) => (\r\n              <WeaponPreview\r\n                weapon={w as tWeapon}\r\n                showBuyButton={true}\r\n                cost={encounter.costs[w.id]}\r\n                onBuyClick={() => purchaseItem(w, encounter.costs[w.id])}\r\n              />\r\n            ))}\r\n        </CardList>\r\n        <h3>Armor</h3>\r\n        <CardList>\r\n          {encounter.items\r\n            .filter((i) => i.itemType === 'armor')\r\n            .map((a) => (\r\n              <ArmorPreview\r\n                armor={a as tArmor}\r\n                showBuyButton={true}\r\n                cost={encounter.costs[a.id]}\r\n                onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n              />\r\n            ))}\r\n        </CardList>\r\n      </FlexContainer>\r\n    ),\r\n  },\r\n  {\r\n    key: 'weapons',\r\n    label: 'Weaons',\r\n    render: (encounter: tShopEncounter, purchaseItem) => (\r\n      <CardList>\r\n        {encounter.items\r\n          .filter((i) => i.itemType === 'weapon')\r\n          .map((w) => (\r\n            <WeaponPreview\r\n              weapon={w as tWeapon}\r\n              showBuyButton={true}\r\n              cost={encounter.costs[w.id]}\r\n              onBuyClick={() => purchaseItem(w, encounter.costs[w.id])}\r\n            />\r\n          ))}\r\n      </CardList>\r\n    ),\r\n  },\r\n  {\r\n    key: 'armor',\r\n    label: 'Armor',\r\n    render: (encounter: tShopEncounter, purchaseItem) => (\r\n      <CardList>\r\n        {encounter.items\r\n          .filter((i) => i.itemType === 'armor')\r\n          .map((a) => (\r\n            <ArmorPreview\r\n              armor={a as tArmor}\r\n              showBuyButton={true}\r\n              cost={encounter.costs[a.id]}\r\n              onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n            />\r\n          ))}\r\n      </CardList>\r\n    ),\r\n  },\r\n  {\r\n    key: 'consumables',\r\n    label: 'Consumables',\r\n    render: (encounter: tShopEncounter, purchaseItem) => (\r\n      <CardList>\r\n        {encounter.items\r\n          .filter((i) => i.itemType === 'consumable')\r\n          .map((a) => (\r\n            <ConsumablePreview\r\n              item={a as tConsumable}\r\n              showBuyButton={true}\r\n              cost={encounter.costs[a.id]}\r\n              onBuyClick={() => purchaseItem(a, encounter.costs[a.id])}\r\n            />\r\n          ))}\r\n      </CardList>\r\n    ),\r\n  },\r\n]\r\n\r\nexport interface ShopPropsT {}\r\nexport const Shop = (props: ShopPropsT) => {\r\n  const {} = props\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { purchaseItem } = usePartyContext()\r\n  const [activeTab, setActiveTab] = useState(\r\n    tabs.find((t) => t.key === 'all') as ShopTabT,\r\n  )\r\n  const active = (tab: ShopTabT): CSSProperties =>\r\n    tab.key === activeTab.key\r\n      ? {\r\n          borderColor: 'white',\r\n        }\r\n      : {}\r\n  return (\r\n    <BoxContainer\r\n      style={{ margin: '20px 20px 20px 0', flex: 1, minWidth: 762 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <FlexContainer style={{ alignItems: 'center' }}>\r\n        <FullContainer>\r\n          <h1 style={{ margin: 0, fontFamily: Theme.titleFont }}>\r\n            Black Market\r\n          </h1>\r\n        </FullContainer>\r\n        <FlexContainer>\r\n          {tabs.map((tab) => (\r\n            <Button style={active(tab)} onClick={() => setActiveTab(tab)}>\r\n              {tab.label}\r\n            </Button>\r\n          ))}\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n      <FlexContainer\r\n        $direction='column'\r\n        $full\r\n        style={{\r\n          overflow: 'auto',\r\n          marginTop: 10,\r\n          height: 'calc(100vh - 374px)',\r\n          overflowY: 'auto',\r\n        }}\r\n      >\r\n        {activeTab.render(currentEncounter as tShopEncounter, purchaseItem)}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Kefir from 'kefir'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { tShrineEncounter } from '../../game/Encounter/type'\r\nimport { SkillChecks } from '../SkillChecks'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { resolveCheck } from '../../game/Roll/util'\r\nimport { ZERO_REWARD } from '../../game/Encounter/constants'\r\nimport { commitRewards } from '../../game/Party/util'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ShrinePropsT {}\r\nexport const Shrine = (props: ShrinePropsT) => {\r\n  const { currentEncounter } = useGameStateContext()\r\n  const { party, rawParty, updateParty } = usePartyContext()\r\n  const encounter = currentEncounter as tShrineEncounter\r\n  const [results, setResults] = useState<boolean[]>([])\r\n  const onClick = (c: tProcessedCharacter) => {\r\n    const stream = Kefir.sequentially(\r\n      200,\r\n      Array(encounter.rolls)\r\n        .fill(0)\r\n        .map((_, i) => ({\r\n          index: i,\r\n          result: resolveCheck(c, encounter.stat),\r\n        })),\r\n    )\r\n    stream.onValue((value) => {\r\n      setResults((r) => [...r, value.result])\r\n    })\r\n    stream.onEnd(() => {})\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (results.length === encounter.rolls) {\r\n      const rewards =\r\n        encounter.results[results.filter((r) => r === true).length - 1]\r\n      if (!rewards) {\r\n        return\r\n      }\r\n      updateParty(commitRewards(rawParty, rewards))\r\n    }\r\n  }, [results])\r\n\r\n  return (\r\n    <BoxContainer\r\n      style={{ margin: '20px 20px 20px 0', flex: 1 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <FlexContainer>\r\n        <FlexContainer $direction='column'>\r\n          <h1 style={{ margin: '0 0 24px 0', textTransform: 'capitalize' }}>\r\n            {encounter.stat} Shrine\r\n          </h1>\r\n          <div style={{ maxWidth: 300, marginBottom: 48 }}>\r\n            Shines are optional encounters that test one character in your\r\n            party's stats. Be careful, as if you fail, you may get a negative\r\n            outcome!\r\n          </div>\r\n          <FlexContainer>\r\n            <FlexContainer $direction='column'>\r\n              <SkillChecks\r\n                stat={encounter.stat}\r\n                rolls={encounter.rolls}\r\n                results={results}\r\n              />\r\n              <FlexContainer style={{ justifyContent: 'center' }}>\r\n                {party.characters.map((c) => (\r\n                  <Button\r\n                    onClick={() => onClick(c)}\r\n                    disabled={results.length > 0}\r\n                  >\r\n                    {c.name} ({c.stats[encounter.stat]})\r\n                  </Button>\r\n                ))}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n        <FlexContainer\r\n          $direction='column'\r\n          $full\r\n          style={{ padding: '86px 16px 0 16px' }}\r\n        >\r\n          {encounter.results.map((reward, index) => (\r\n            <FlexContainer\r\n              style={{\r\n                padding: 8,\r\n                alignItems: 'center',\r\n                marginBottom: 4,\r\n                background:\r\n                  results.length === encounter.rolls &&\r\n                  index + 1 === results.filter((r) => r === true).length\r\n                    ? 'rgba(144, 238, 144, 0.3)'\r\n                    : 'linear-gradient(90deg, rgba(255,255,255,0.3) 0%, rgba(255,255,255,0) 100%)',\r\n              }}\r\n            >\r\n              <span style={{ fontSize: 24 }}>{index + 1}</span>\r\n              <span\r\n                style={{\r\n                  display: 'inline-block',\r\n                  marginLeft: 8,\r\n                  textTransform: 'capitalize',\r\n                }}\r\n              >\r\n                {reward.gold > 0 && ` ${reward.gold} Gold`}\r\n                {reward.xp > 0 && ` +${reward.xp} Experience`}\r\n                {reward.status.length > 0 && ` ${reward.status}`}\r\n                {reward.items.length > 0 && ` Random Item`}\r\n                {JSON.stringify(reward) === JSON.stringify(ZERO_REWARD) &&\r\n                  ' No Effect'}\r\n              </span>\r\n            </FlexContainer>\r\n          ))}\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tEncounterType, tFloor } from '../../game/Encounter/type'\r\n\r\nimport Unknown from '../../icons/svg/delapouite/perspective-dice-six.svg'\r\nimport Shop from '../../icons/svg/delapouite/coins.svg'\r\nimport Combat from '../../icons/svg/lorc/crossed-swords.svg'\r\nimport Shrine from '../../icons/svg/lorc/divided-spiral.svg'\r\nimport Boss from '../../icons/svg/lorc/crowned-skull.svg'\r\nimport Reward from '../../icons/svg/lorc/laurel-crown.svg'\r\nimport { Icon } from '../Icon'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Theme } from '../../theme'\r\nimport { HeadingSm } from '../../elements/typography'\r\n\r\nexport interface EncounterHistoryPropsT {}\r\n\r\nexport const EncounterHistory = (props: EncounterHistoryPropsT) => {\r\n  const { floors, floor, level } = useGameStateContext()\r\n  const chosenEncounters = (floor: tFloor) =>\r\n    floor.encounters.map((e) => (e.chosen ? e.choices[e.chosen] : undefined))\r\n\r\n  const getIcon = (type: tEncounterType | undefined): string => {\r\n    switch (type) {\r\n      case 'combat':\r\n        return Combat\r\n      case 'shop':\r\n        return Shop\r\n      case 'shrine':\r\n        return Shrine\r\n      case 'boss':\r\n        return Boss\r\n      case 'reward':\r\n        return Reward\r\n      default:\r\n        return Unknown\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {floors.map((f, fi) => (\r\n        <FlexContainer\r\n          $direction='column'\r\n          style={{\r\n            background: Theme.darkBgColor,\r\n            padding: 16,\r\n            margin: '16px 32px 16px 0',\r\n          }}\r\n        >\r\n          <FlexContainer>\r\n            <HeadingSm style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n              {f.name}\r\n            </HeadingSm>\r\n          </FlexContainer>\r\n          <FlexContainer\r\n            key={f.id}\r\n            style={{\r\n              justifyContent: 'space-between',\r\n            }}\r\n          >\r\n            {chosenEncounters(f).map((e, i) => (\r\n              <FlexContainer\r\n                key={i}\r\n                $full={i !== chosenEncounters(f).length - 1}\r\n              >\r\n                <BoxContainer\r\n                  substyle={{\r\n                    padding: 4,\r\n                    borderColor:\r\n                      level === i && fi === floor\r\n                        ? 'white'\r\n                        : e === undefined\r\n                        ? Theme.lightBgColor\r\n                        : '#8b9e96',\r\n                  }}\r\n                >\r\n                  <Icon\r\n                    src={getIcon(\r\n                      i === f.encounters.length - 2\r\n                        ? 'boss'\r\n                        : i === f.encounters.length - 1\r\n                        ? 'reward'\r\n                        : e?.type,\r\n                    )}\r\n                    size={32}\r\n                    fill={e === undefined ? 'rgba(255,255,255,0.5)' : '#8b9e96'}\r\n                  />\r\n                </BoxContainer>\r\n                {i !== chosenEncounters(f).length - 1 && (\r\n                  <FlexContainer\r\n                    $direction='column'\r\n                    $full\r\n                    style={{ justifyContent: 'center' }}\r\n                  >\r\n                    <FlexContainer\r\n                      $full\r\n                      style={{\r\n                        maxHeight: 1,\r\n                        background:\r\n                          e === undefined ? Theme.lightBgColor : 'white',\r\n                        borderTop: '1px solid black',\r\n                        borderBottom: '1px solid black',\r\n                      }}\r\n                    />\r\n                  </FlexContainer>\r\n                )}\r\n              </FlexContainer>\r\n            ))}\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\n\r\nexport const BossRewards = () => {\r\n  return <FlexContainer></FlexContainer>\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Shop } from '../Shop'\r\nimport { Shrine } from '../Shrine'\r\nimport { EncounterHistory } from '../EncounterHistory'\r\nimport { BossRewards } from '../BossRewards'\r\n\r\nexport const NonCombatEncounter = () => {\r\n  const { currentEncounter, currentChoice } = useGameStateContext()\r\n  return (\r\n    <FlexContainer $direction='column' $full style={{ marginLeft: '60px' }}>\r\n      {currentEncounter && currentEncounter.type === 'shop' && <Shop />}\r\n      {currentEncounter && currentEncounter.type === 'shrine' && <Shrine />}\r\n      {currentEncounter && currentEncounter.type === 'reward' && (\r\n        <BossRewards />\r\n      )}\r\n      {!currentEncounter && currentChoice && <EncounterHistory />}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tEncounterChoice } from '../../game/Encounter/type'\r\nimport { getChoiceText } from '../../game/Encounter/constants'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Button } from '../../elements/button'\r\nimport { HeadingSm, Text } from '../../elements/typography'\r\n\r\nexport interface ChoicePropsT {\r\n  currentChoice: tEncounterChoice\r\n}\r\n\r\nexport const Choice = (props: ChoicePropsT) => {\r\n  const { currentChoice } = props\r\n  const {\r\n    level,\r\n    previousChoice,\r\n    encounters,\r\n    chooseCurrent,\r\n  } = useGameStateContext()\r\n  return (\r\n    <FlexContainer $direction='column' style={{ paddingTop: 24 }}>\r\n      <HeadingSm\r\n        style={{\r\n          textAlign: 'center',\r\n        }}\r\n      >\r\n        Your Journey {level === 0 ? 'Begins' : 'Continues'}.\r\n      </HeadingSm>\r\n      <Text\r\n        style={{\r\n          marginBottom: 24,\r\n          padding: 8,\r\n        }}\r\n      >\r\n        {getChoiceText(currentChoice, previousChoice)}\r\n      </Text>\r\n      {encounters.length - 1 !== level && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          {encounters[level].choices.map((e, i) => (\r\n            <Button\r\n              onClick={() => chooseCurrent(i)}\r\n              style={{ whiteSpace: 'nowrap', padding: '8px 12px' }}\r\n            >\r\n              {getNextText(encounters[level].choices.length, i)}\r\n            </Button>\r\n          ))}\r\n        </FlexContainer>\r\n      )}\r\n      {encounters.length - 1 === level && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          <Button onClick={() => chooseCurrent(0)}>Proceed</Button>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nconst getNextText = (size: number, index: number): string => {\r\n  switch (size) {\r\n    case 1:\r\n      return 'Proceed'\r\n    case 2: {\r\n      return index === 0 ? 'Go Left' : 'Go Right'\r\n    }\r\n    case 3: {\r\n      return index === 0 ? 'Go Left' : index === 1 ? 'Go Straight' : 'Go Right'\r\n    }\r\n    default:\r\n      return 'Proceed'\r\n  }\r\n}\r\n","export const stringArr = (arr: string[]): string => {\r\n  return arr.reduce((text, item, index) => {\r\n    const f = index === 0\r\n    const l = index === arr.length - 1 && !f\r\n    return `${text}${!f && arr.length > 2 ? ', ' : ' '}${\r\n      l ? ' and ' : ''\r\n    }${item}`\r\n  })\r\n}\r\n","import React from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Button } from '../../elements/button'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tShopEncounter } from '../../game/Encounter/type'\r\n\r\nexport interface ShopPropsT {\r\n  currentEncounter: tShopEncounter\r\n}\r\nexport const Shop = (props: ShopPropsT) => {\r\n  const { currentEncounter } = props\r\n  const { nextLevel } = useGameStateContext()\r\n  return (\r\n    <FlexContainer $direction='column' style={{ justifyContent: 'center' }}>\r\n      {currentEncounter.type === 'shop' && (\r\n        <>\r\n          <h3\r\n            style={{\r\n              margin: '0 0 16px 0',\r\n              color: 'white',\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            You found a shop!\r\n          </h3>\r\n          <span\r\n            style={{\r\n              color: 'rgba(255,255,255,0.7)',\r\n              marginBottom: 24,\r\n            }}\r\n          >\r\n            Amidst your journey, you discover a merchant, a traveling salemen\r\n            with all manor of wares to assist in your adventure.\r\n          </span>\r\n        </>\r\n      )}\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        <Button onClick={() => nextLevel()}>Travel Deeper</Button>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { Button } from '../../elements/button'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tRewardEncounter } from '../../game/Encounter/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface RewardPropsT {\r\n  currentEncounter: tRewardEncounter\r\n}\r\n\r\nexport const Reward = (props: RewardPropsT) => {\r\n  const { currentEncounter } = props\r\n  const { floor, floors, nextFloor } = useGameStateContext()\r\n  const { refreshParty } = usePartyContext()\r\n  const history = useHistory()\r\n  const { open } = useModalContext()\r\n  const onClick = () => {\r\n    if (floor === floors.length - 1) {\r\n      history.push('/JSFTK_combat')\r\n      open(\r\n        <div style={{ textAlign: 'center', fontFamily: Theme.titleFont }}>\r\n          <h1>You've Defeated the Lich! You did it!</h1>\r\n        </div>,\r\n      )\r\n    } else {\r\n      nextFloor()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    refreshParty()\r\n  }, [])\r\n\r\n  return (\r\n    <FlexContainer $direction='column' style={{ justifyContent: 'center' }}>\r\n      <h3 style={{ fontFamily: Theme.titleFont, fontWeight: 'normal' }}>\r\n        You've cleansed an evil.\r\n      </h3>\r\n      <span style={{ marginBottom: 40, padding: 8 }}>\r\n        You've defeated the Lich Lord of the Forest, but you discoved what he\r\n        was guarding. A tomb, sealed for centuries, a relic of civilizations\r\n        past.\r\n      </span>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        <Button onClick={onClick}>Enter the Tomb</Button>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Button } from '../../elements/button'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tShrineEncounter } from '../../game/Encounter/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ShrinePropsT {\r\n  currentEncounter: tShrineEncounter\r\n}\r\n\r\nexport const Shrine = (props: ShrinePropsT) => {\r\n  const { currentEncounter } = props\r\n  const { nextLevel } = useGameStateContext()\r\n  return (\r\n    <FlexContainer $direction='column' style={{ justifyContent: 'center' }}>\r\n      <h3 style={{ fontFamily: Theme.titleFont, fontWeight: 'normal' }}>\r\n        You've discoved a secret shrine.\r\n      </h3>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        <Button onClick={() => nextLevel()}>Travel Deeper</Button>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { Choice } from './Choice'\r\nimport { Shop } from './Shop'\r\nimport {\r\n  tRewardEncounter,\r\n  tShopEncounter,\r\n  tShrineEncounter,\r\n} from '../../game/Encounter/type'\r\nimport { Reward } from './Reward'\r\nimport { Shrine } from './Shrine'\r\n\r\nexport const EncounterActions = () => {\r\n  const {\r\n    currentChoice,\r\n    currentEncounter,\r\n    chooseCurrent,\r\n  } = useGameStateContext()\r\n  useEffect(() => {\r\n    if (currentChoice?.choices[0].type === 'reward') {\r\n      chooseCurrent(0)\r\n    }\r\n  }, [])\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{\r\n        background:\r\n          'linear-gradient(0deg, rgba(0,7,12,0) 0%, rgba(0,7,12,0.68) 10%, rgba(0,7,18,1) 35%)',\r\n        marginRight: '60px',\r\n        padding: '16px 8px',\r\n        width: 300,\r\n        color: 'rgba(255,255,255,0.8)',\r\n      }}\r\n    >\r\n      {currentChoice && !currentEncounter && (\r\n        <Choice currentChoice={currentChoice} />\r\n      )}\r\n      {currentEncounter && (\r\n        <>\r\n          {currentEncounter.type === 'shop' && (\r\n            <Shop currentEncounter={currentEncounter as tShopEncounter} />\r\n          )}\r\n          {currentEncounter.type === 'reward' && (\r\n            <Reward currentEncounter={currentEncounter as tRewardEncounter} />\r\n          )}\r\n          {currentEncounter.type === 'shrine' && (\r\n            <Shrine currentEncounter={currentEncounter as tShrineEncounter} />\r\n          )}\r\n        </>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { usePartyContext } from '../contexts/PartyContext'\r\nimport { FlexContainer, FullContainer } from '../elements/flex'\r\nimport { Button } from '../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { AppHeader } from '../components/AppHeader'\r\nimport { PartyResources } from '../components/PartyResources'\r\nimport { useUIContext } from '../contexts/UIContext'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport { getSkillResult } from '../game/Skill/util'\r\nimport { commitSkillResults } from '../game/Skill/committer'\r\nimport { NonCombatEncounter } from '../components/NonCombatEncounter'\r\nimport { EncounterActions } from '../components/EncounterActions'\r\nimport { Theme } from '../theme'\r\nimport { HeadingSm } from '../elements/typography'\r\n\r\nexport const Party = () => {\r\n  const { party, rawParty, updateParty } = usePartyContext()\r\n  const { level, floors, floor } = useGameStateContext()\r\n  const currentFloor = floors[floor]\r\n  const history = useHistory()\r\n  const {\r\n    setPlayerCanEquipItem,\r\n    setOnCharacterConsumableClick,\r\n  } = useUIContext()\r\n\r\n  useEffect(() => {\r\n    setPlayerCanEquipItem(true)\r\n    setOnCharacterConsumableClick((character, consumableIndex) => {\r\n      if (!character) return\r\n      const consumable = character.consumables[consumableIndex]\r\n      const targets =\r\n        consumable.skill.targetType === 'self'\r\n          ? [character]\r\n          : consumable.skill.targetType === 'party'\r\n          ? party.characters\r\n          : []\r\n      const result = getSkillResult(character, targets, consumable.skill)\r\n      const parties = commitSkillResults(rawParty, rawParty, {})(result)\r\n      updateParty(parties.playerParty)\r\n    })\r\n    return () => {\r\n      setPlayerCanEquipItem(false)\r\n      setOnCharacterConsumableClick((c, i, item) => {})\r\n    }\r\n  }, [party, rawParty, updateParty])\r\n\r\n  return (\r\n    <FlexContainer $full $direction='column' style={{ height: '100%' }}>\r\n      <AppHeader\r\n        left={\r\n          <>\r\n            <Button\r\n              onClick={() => history.push('/JSFTK_combat')}\r\n              style={{ borderBottom: 0 }}\r\n            >\r\n              Restart\r\n            </Button>\r\n            <FullContainer />\r\n          </>\r\n        }\r\n        right={\r\n          <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n            <PartyResources />\r\n          </FlexContainer>\r\n        }\r\n      >\r\n        <FlexContainer\r\n          $full\r\n          style={{\r\n            color: 'white',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <HeadingSm style={{ margin: 0 }}>\r\n            {currentFloor.name} - Level {level}\r\n          </HeadingSm>\r\n        </FlexContainer>\r\n      </AppHeader>\r\n      <FlexContainer $full $direction='column'>\r\n        <FlexContainer $full>\r\n          <NonCombatEncounter />\r\n          <EncounterActions />\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { FullContainer, FlexContainer } from '../elements/flex'\r\nimport { BoxContainer } from '../elements/box'\r\nimport { usePartyContext } from '../contexts/PartyContext'\r\nimport { Gauge } from '../components/Gauge'\r\nimport { RedButton } from '../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { INITIAL_STATE } from '../state/party'\r\nimport { Monospace } from '../elements/monospace'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport {\r\n  tProcessedCharacter,\r\n  tCharacter,\r\n  tCharacterClass,\r\n} from '../game/Character/type'\r\nimport { makeCharacter } from '../game/Character/util'\r\nimport { STAT_BONUS_KEYS } from '../game/Stats/constants'\r\nimport { Theme } from '../theme'\r\nimport { AppHeader } from '../components/AppHeader'\r\nimport { HeadingSm } from '../elements/typography'\r\n\r\nexport const Start = () => {\r\n  const {\r\n    party,\r\n    updateParty,\r\n    upsertCharacter,\r\n    findRawCharacter,\r\n  } = usePartyContext()\r\n  const history = useHistory()\r\n  const { reset } = useGameStateContext()\r\n  useEffect(() => {\r\n    updateParty(INITIAL_STATE)\r\n    reset()\r\n  }, [])\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{ height: '100%', overflow: 'hidden' }}\r\n    >\r\n      <AppHeader\r\n        left={\r\n          <Monospace\r\n            style={{\r\n              fontWeight: 'normal',\r\n              color: 'rgba(255,255,255,0.5)',\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            alpha-0.0.4.14\r\n          </Monospace>\r\n        }\r\n      >\r\n        <span\r\n          style={{ color: 'white', lineHeight: '52px', whiteSpace: 'nowrap' }}\r\n        >\r\n          I am looking for help with: item, and enemy, and general design! If\r\n          you would like to help, shoot me a message or head over to{' '}\r\n          <a href='https://github.com/mpm1900/JSFTK_combat' target='_blank'>\r\n            my github\r\n          </a>\r\n        </span>\r\n      </AppHeader>\r\n      <FullContainer />\r\n      <FlexContainer $full>\r\n        <FullContainer />\r\n        <BoxContainer\r\n          style={{ maxWidth: 340, marginRight: 8 }}\r\n          substyle={{\r\n            padding: 16,\r\n            background: Theme.darkBgColor,\r\n            lineHeight: 1.4,\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          <HeadingSm\r\n            style={{\r\n              marginTop: 8,\r\n            }}\r\n          >\r\n            About this game\r\n          </HeadingSm>\r\n          <p>\r\n            Each character class has different stats and starting items. Your\r\n            stats determine your character's chances of succeeding in various\r\n            checks during combat.\r\n          </p>\r\n          <p>\r\n            For example, if your character has 76 Strength, then each Strength\r\n            check has a 76% chance of succeeding.\r\n          </p>\r\n          <p>\r\n            So if an attack has 4 Strength checks at 76% each, then that attack\r\n            has a 33% chance of being \"perfect.\" Some attacks will have special\r\n            bonus actions when they are \"perfect.\" Such as splash damage, or\r\n            status effects.\r\n          </p>\r\n          <p>\r\n            More power attacks may require more checks or use negative-offset\r\n            stat values\r\n          </p>\r\n        </BoxContainer>\r\n        <BoxContainer>\r\n          <h1\r\n            style={{\r\n              marginTop: 8,\r\n              textAlign: 'center',\r\n              fontFamily: Theme.titleFont,\r\n              textShadow: '1px 3px 3px black',\r\n            }}\r\n          >\r\n            Choose your Party!\r\n          </h1>\r\n          <FlexContainer>\r\n            {party.characters.map((character) => (\r\n              <FlexContainer\r\n                key={character.id}\r\n                $direction='column'\r\n                style={{ padding: 4 }}\r\n              >\r\n                <StartCharacterCard\r\n                  character={character}\r\n                  onChange={(characterId, updater) => {\r\n                    const rc = findRawCharacter(characterId)\r\n                    if (rc) {\r\n                      upsertCharacter(updater(rc))\r\n                    }\r\n                  }}\r\n                />\r\n              </FlexContainer>\r\n            ))}\r\n          </FlexContainer>\r\n          <FlexContainer>\r\n            <FullContainer />\r\n            <RedButton\r\n              style={{ margin: '16px 0 12px 0' }}\r\n              onClick={() => {\r\n                history.push('/JSFTK_combat/party')\r\n              }}\r\n            >\r\n              Begin Adventure\r\n            </RedButton>\r\n            <FullContainer />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        <FullContainer />\r\n      </FlexContainer>\r\n      <FullContainer />\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface StartCharacterCardPropsT {\r\n  character: tProcessedCharacter\r\n  onChange: (\r\n    characterId: string,\r\n    updater: (c: tCharacter) => tCharacter,\r\n  ) => void\r\n}\r\nexport const StartCharacterCard = (props: StartCharacterCardPropsT) => {\r\n  const { character, onChange } = props\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <input\r\n        style={{\r\n          background: Theme.mediumBgColor,\r\n          border: '1px solid rgba(255,255,255,0.4)',\r\n          padding: 8,\r\n          color: 'white',\r\n          marginBottom: 8,\r\n        }}\r\n        value={character.name}\r\n        onChange={(e) => {\r\n          onChange(character.id, (c) => ({\r\n            ...c,\r\n            name: e.target.value,\r\n          }))\r\n        }}\r\n      />\r\n      <select\r\n        style={{\r\n          background: Theme.mediumBgColor,\r\n          border: '1px solid rgba(255,255,255,0.4)',\r\n          padding: 8,\r\n          color: 'white',\r\n          marginBottom: 8,\r\n        }}\r\n        value={character.class}\r\n        onChange={(e) => {\r\n          onChange(character.id, (c) => ({\r\n            ...makeCharacter(e.target.value as tCharacterClass),\r\n            id: character.id,\r\n            name: character.name,\r\n          }))\r\n        }}\r\n      >\r\n        <option value='executioner'>Executioner</option>\r\n        <option value='ranger'>Ranger</option>\r\n        <option value='student'>Student</option>\r\n        <option value='patrician'>Patrician</option>\r\n        <option value='drifter'>Drifter</option>\r\n      </select>\r\n      <FlexContainer $direction='column' style={{ padding: 8 }}>\r\n        {STAT_BONUS_KEYS.map((key) => (\r\n          <FlexContainer key={key} style={{ height: 20 }}>\r\n            <div\r\n              style={{\r\n                width: 60,\r\n                fontSize: 12,\r\n                textTransform: 'capitalize',\r\n                marginRight: 4,\r\n              }}\r\n            >\r\n              {key}\r\n            </div>\r\n            <FullContainer>\r\n              <Gauge\r\n                max={100}\r\n                value={character.stats[key]}\r\n                color='white'\r\n                height={15}\r\n              />\r\n            </FullContainer>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { tProcessedCharacter } from '../Character/type'\r\nimport { CELESTIAL_LOTUS } from './objects/celestial_lotus'\r\nimport { GODSBEARD } from './objects/godsbeard'\r\nimport { POISON_KNIFE } from './objects/poison_knife'\r\nimport { BEAST_DRUG } from './objects/beast_drug'\r\nimport { CURE_POTION } from './objects/curing_potion'\r\n\r\nexport const CONSUMABLE_DESCRIPTIONS: Record<\r\n  string,\r\n  (character: tProcessedCharacter) => string\r\n> = {\r\n  [GODSBEARD().cid]: (c) => `Heal for ${c.stats.consumableHealthGainOffset} HP`,\r\n  [CELESTIAL_LOTUS().cid]: () => 'Remove all Curses',\r\n  [POISON_KNIFE().cid]: () => `Inflict Poison`,\r\n  [BEAST_DRUG().cid]: () => `+5 Attack Damage`,\r\n  [CURE_POTION().cid]: () => `Cure Buring, Bleeding, Frozen and Poison`,\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { CONSUMABLE_ITEM_ICONS, CONSUMABLE_ITEM_COLORS } from '../../icons/maps'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { considateConsumableListToStack } from '../../game/Consumable/util'\r\nimport { Theme } from '../../theme'\r\nimport { CELESTIAL_LOTUS } from '../../game/Consumable/objects/celestial_lotus'\r\nimport { REMOVE_CURSES } from '../../game/Skill/skills/consumables'\r\nimport { hasAnyStatus } from '../../game/Character/util'\r\nimport { CONSUMABLE_DESCRIPTIONS } from '../../game/Consumable/constants'\r\n\r\nconst HEIGHT = 64\r\nexport interface PartyCharacterConsumablesPropsT {\r\n  character: tProcessedCharacter\r\n  consumables: tConsumable[]\r\n  onClick?: (consumable: tConsumable, index: number) => void\r\n}\r\nexport const PartyCharacterConsumables = (\r\n  props: PartyCharacterConsumablesPropsT,\r\n) => {\r\n  const { character, consumables, onClick } = props\r\n  const stack = useMemo(() => considateConsumableListToStack(consumables), [\r\n    consumables,\r\n  ])\r\n  const onStackClick = (consumable: tConsumable) => {\r\n    let index = undefined\r\n    consumables.forEach((c, i) => {\r\n      if (c.id === consumable.id) index = i\r\n    })\r\n    if (consumable.skill.healing && !(character.healthOffset === 0))\r\n      return onClick && onClick(consumable, index || 0)\r\n    if (\r\n      consumable.skill.id === REMOVE_CURSES.id &&\r\n      hasAnyStatus(character, [\r\n        'cursed-vigor',\r\n        'cursed-strength',\r\n        'cursed-luck',\r\n        'cursed-intelligence',\r\n        'cursed-dexterity',\r\n        'cursed-charisma',\r\n        'cursed-agility',\r\n      ])\r\n    ) {\r\n      return onClick && onClick(consumable, index || 0)\r\n    }\r\n  }\r\n  const filler = Array(10 - stack.length).fill(null)\r\n\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ flexWrap: 'wrap', height: HEIGHT }}\r\n    >\r\n      {stack.map((s) => (\r\n        <PartyCharacterConsumable\r\n          key={s.consumable.id}\r\n          character={character}\r\n          consumable={s.consumable}\r\n          count={s.count}\r\n          onClick={onStackClick}\r\n        />\r\n      ))}\r\n      {filler.map((f, i) => (\r\n        <ConsumableBox key={i} />\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\ninterface ConsumableBoxPropsT {\r\n  children?: JSX.Element\r\n  onClick?: () => void\r\n}\r\nconst ConsumableBox = (props: ConsumableBoxPropsT) => {\r\n  const { children, onClick } = props\r\n  return (\r\n    <FlexContainer\r\n      onClick={() => onClick && onClick()}\r\n      style={{\r\n        height: HEIGHT / 2,\r\n        width: HEIGHT / 2,\r\n        boxSizing: 'border-box',\r\n        border: '1px solid rgba(0,0,0,0.5)',\r\n        background: Theme.otherGrey,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        cursor: onClick ? 'pointer' : 'default',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      {children}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface PartyCharacterConsumablePropsT {\r\n  consumable: tConsumable\r\n  character: tProcessedCharacter\r\n  count: number\r\n  onClick?: (consumable: tConsumable) => void\r\n}\r\nexport const PartyCharacterConsumable = (\r\n  props: PartyCharacterConsumablePropsT,\r\n) => {\r\n  const { character, consumable, count, onClick } = props\r\n  return (\r\n    <HoverToolTip\r\n      content={\r\n        <PartyCharacterConsumableTooltip\r\n          character={character}\r\n          consumable={consumable}\r\n        />\r\n      }\r\n    >\r\n      <ConsumableBox onClick={() => onClick && onClick(consumable)}>\r\n        <>\r\n          <Icon\r\n            src={CONSUMABLE_ITEM_ICONS[consumable.cid]}\r\n            fill={CONSUMABLE_ITEM_COLORS[consumable.cid]}\r\n            size={24}\r\n          />\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              textShadow: '-1px 1px 1px black',\r\n              bottom: -2,\r\n              zIndex: 2,\r\n              right: 1,\r\n            }}\r\n          >\r\n            {count}\r\n          </div>\r\n        </>\r\n      </ConsumableBox>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface PartyCharacterConsumableTooltipProps {\r\n  character: tProcessedCharacter\r\n  consumable: tConsumable\r\n}\r\nexport const PartyCharacterConsumableTooltip = (\r\n  props: PartyCharacterConsumableTooltipProps,\r\n) => {\r\n  const { character, consumable } = props\r\n  const getText = CONSUMABLE_DESCRIPTIONS[consumable.cid]\r\n  return (\r\n    <BoxContainer\r\n      style={{ maxWidth: 200 }}\r\n      substyle={{ background: Theme.darkBgColor }}\r\n    >\r\n      <strong>{consumable.name}</strong>\r\n      {getText && <div>{getText(character)}</div>}\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { styled } from 'styletron-react'\r\nimport { Icon } from '../Icon'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tBaseStats } from '../../game/Stats/type'\r\nimport { Theme } from '../../theme'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\n\r\ninterface CharacterStatPropsT {\r\n  statKey: keyof tBaseStats\r\n  character: tProcessedCharacter\r\n}\r\nconst CharacterStat = (props: CharacterStatPropsT) => {\r\n  const { statKey, character } = props\r\n  return (\r\n    <HoverToolTip\r\n      flex\r\n      content={\r\n        <BoxContainer\r\n          substyle={{\r\n            textTransform: 'capitalize',\r\n            background: Theme.darkBgColor,\r\n          }}\r\n        >\r\n          {statKey}\r\n        </BoxContainer>\r\n      }\r\n    >\r\n      <ResourceE $color={getStatColor(character, statKey)}>\r\n        <Icon\r\n          src={STAT_ICONS[statKey] || ''}\r\n          fill={getStatColor(character, statKey)}\r\n          size={14}\r\n          style={{ marginRight: 3, marginTop: 0 }}\r\n        />\r\n        {character.stats[statKey]}\r\n      </ResourceE>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface StatsProps {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Stats = (props: StatsProps) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      style={{ paddingTop: 4, background: Theme.darkBgColor, paddingLeft: 42 }}\r\n    >\r\n      <CharacterStat statKey='vigor' character={character} />\r\n      <CharacterStat statKey='strength' character={character} />\r\n      <CharacterStat statKey='intelligence' character={character} />\r\n      <CharacterStat statKey='dexterity' character={character} />\r\n      <CharacterStat statKey='charisma' character={character} />\r\n      <CharacterStat statKey='agility' character={character} />\r\n      <CharacterStat statKey='luck' character={character} />\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nconst ResourceE = styled('div', (props: any) => ({\r\n  height: 15,\r\n  color: props.$color,\r\n  fontSize: '15px',\r\n  padding: '0px 4px',\r\n  lineHeight: '14px',\r\n  flex: 1,\r\n  textAlign: 'center',\r\n  background: Theme.darkBgColor,\r\n  display: 'flex',\r\n}))\r\n\r\nconst getStatColor = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n): string => {\r\n  const a = character.stats[key]\r\n  const b = character.rawStats[key]\r\n  if (a > b) return Theme.evasionColor\r\n  if (b > a) return 'lightcoral'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Theme } from '../../theme'\r\nexport interface NamePropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Name = (props: NamePropsT) => {\r\n  const { character } = props\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        marginTop: -3,\r\n        marginRight: -3,\r\n        marginLeft: -3,\r\n        paddingLeft: 52,\r\n        paddingRight: 8,\r\n        background: Theme.otherGrey2,\r\n        height: 24,\r\n        alignItems: 'center',\r\n        lineHeight: '24px',\r\n        borderBottom: '1px solid rgba(255,255,255,0.1)',\r\n        boxShadow: '0px 4px 5px black',\r\n        zIndex: 2,\r\n      }}\r\n    >\r\n      <FullContainer\r\n        style={{\r\n          fontFamily: Theme.titleFont,\r\n          textShadow: '1px 1px 3px black',\r\n          flex: 1,\r\n          fontSize: 18,\r\n          lineHeight: '20px',\r\n        }}\r\n      >\r\n        {character.name}\r\n      </FullContainer>\r\n      <div\r\n        style={{\r\n          fontSize: 12,\r\n          color: 'rgba(255,255,255,0.3)',\r\n        }}\r\n      >\r\n        {character.class}\r\n      </div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Inventory from '../../icons/svg/lorc/knapsack.svg'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Tooltip } from '../Tooltip'\r\nimport { PartyActiveCharacter } from '../PartyActiveCharacter'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { Hover } from '../Hover'\r\nimport { Icon } from '../Icon'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface ActionsPropsT {\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n}\r\n\r\nexport const Actions = (props: ActionsPropsT) => {\r\n  const { character, canEquip } = props\r\n  const { party } = usePartyContext()\r\n  const {\r\n    openCharacterInventoryId,\r\n    setOpenCharacterInventoryId,\r\n  } = useUIContext()\r\n  const inventoryOpen = character.id === openCharacterInventoryId\r\n  const inventoryStyle = useSpring({\r\n    opacity: inventoryOpen ? 1 : 0,\r\n    config: { tension: 500 },\r\n  })\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{ justifyContent: 'center' }}\r\n    >\r\n      <FlexContainer\r\n        $full\r\n        style={{ alignItems: 'center', justifyContent: 'center' }}\r\n      >\r\n        <Tooltip\r\n          isOpen={inventoryOpen}\r\n          direction='up'\r\n          distance={60}\r\n          background={Theme.darkBgColor}\r\n          arrow\r\n          content={\r\n            <animated.div\r\n              style={{ minWidth: 887, minHeight: 435, ...inventoryStyle }}\r\n            >\r\n              {inventoryOpen && (\r\n                <PartyActiveCharacter\r\n                  character={character}\r\n                  party={party}\r\n                  canEquip={canEquip}\r\n                  onRequestClose={() => {\r\n                    setOpenCharacterInventoryId(undefined)\r\n                  }}\r\n                />\r\n              )}\r\n            </animated.div>\r\n          }\r\n        >\r\n          <Hover delay={0}>\r\n            {({ isHovering }) => (\r\n              <Icon\r\n                src={Inventory}\r\n                fill={\r\n                  isHovering ? 'rgba(255,255,255,1)' : 'rgba(255,255,255,0.7)'\r\n                }\r\n                size={18}\r\n                shadow\r\n                onClick={() => {\r\n                  if (character.id === openCharacterInventoryId) {\r\n                    return setOpenCharacterInventoryId(undefined)\r\n                  }\r\n                  setOpenCharacterInventoryId(character.id)\r\n                }}\r\n                style={{ padding: 6, cursor: 'pointer' }}\r\n              />\r\n            )}\r\n          </Hover>\r\n        </Tooltip>\r\n      </FlexContainer>\r\n      {/*<FlexContainer\r\n        $full\r\n        style={{ alignItems: 'center', justifyContent: 'center' }}\r\n      >\r\n        <Icon\r\n          src={Details}\r\n          fill={'rgba(255,255,255,0.7)'}\r\n          size={18}\r\n          shadow\r\n          style={{ padding: 6, cursor: 'pointer' }}\r\n        />\r\n      </FlexContainer>*/}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { noneg } from '../../util'\r\nimport { usePrevious } from '../../hooks/usePrevious'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Theme } from '../../theme'\r\n\r\nexport interface HealthPropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Health = (props: HealthPropsT) => {\r\n  const { character } = props\r\n  const health = noneg(character.health)\r\n  const [storedHealth, setStoredHealth] = useState(0)\r\n\r\n  useEffect(() => {\r\n    setStoredHealth(health)\r\n  }, [health])\r\n\r\n  return (\r\n    <div style={{ position: 'relative', zIndex: 3 }}>\r\n      <span\r\n        style={{\r\n          padding: '4px 0',\r\n          paddingLeft: 44,\r\n          fontSize: 56,\r\n          height: 56,\r\n          minWidth: 86,\r\n          lineHeight: '64px',\r\n          color: Theme.healthRedColor,\r\n          fontFamily: 'New Rocker',\r\n          display: 'flex',\r\n          textAlign: 'center',\r\n          textShadow: '1px 1px 3px black',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <Spring\r\n          from={{ hp: storedHealth || 0 }}\r\n          to={{ hp: health }}\r\n          config={{ friction: 70, mass: 5, tension: 300, clamp: true }}\r\n        >\r\n          {(hpp) => <span style={{}}>{Math.floor(hpp.hp)}</span>}\r\n        </Spring>\r\n      </span>\r\n      <ToastContainer />\r\n    </div>\r\n  )\r\n}\r\n","import { AnimatedValue, useSpring } from 'react-spring'\r\n\r\nconst springConfig = {\r\n  mass: 3,\r\n  tension: 1500,\r\n  friction: 30,\r\n}\r\nconst from = {\r\n  transform: 'translate3d(0px, 0px, 0px)',\r\n}\r\nconst to = {\r\n  transform: 'translate3d(80px, 0px, 0px)',\r\n}\r\n\r\nexport const useElementShake = () => {\r\n  const [shakeStyles, dispatch] = useSpring(() => ({\r\n    to: async (next: Function) => {\r\n      next(to)\r\n    },\r\n\r\n    config: springConfig,\r\n    from,\r\n    immediate: true,\r\n    reset: true,\r\n    reverse: true,\r\n  }))\r\n\r\n  const exec = () => {\r\n    dispatch({\r\n      ...to,\r\n      config: springConfig,\r\n      from,\r\n      immediate: false,\r\n      reset: true,\r\n      reverse: true,\r\n    } as any)\r\n  }\r\n\r\n  return { styles: shakeStyles, exec }\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { XPGauge, HealthGauge } from '../Gauge'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { styled } from 'styletron-react'\r\nimport { TagPreview } from '../TagPreview'\r\nimport { PartyCharacterConsumables } from '../PartyCharacterConsumables'\r\nimport { Stats } from './Stats'\r\nimport { Name } from './Name'\r\nimport { Actions } from './Actions'\r\nimport { Health } from './Health'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { usePlayerCharacterNotifications } from '../../hooks/usePlayerCharacterNotifications'\r\nimport { Icon } from '../Icon'\r\nimport { CHARACTER_CLASS_ICONS } from '../../icons/maps'\r\nimport { CHARACTER_CLASS_COLORS } from '../../game/Character/constants'\r\nimport { Theme } from '../../theme'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { ZERO_STATS } from '../../game/Stats/constants'\r\nimport { HoverHexBadge, HexBadge } from '../../elements/shapes'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { useElementShake } from '../../hooks/useElementShake'\r\n\r\nexport interface PartyCharacterProps {\r\n  character: tProcessedCharacter\r\n  selected?: boolean\r\n  showActions?: boolean\r\n  onClick?: () => void\r\n  onConsumableClick?: (consumable: tConsumable, index: number) => void\r\n  push: (contents: JSX.Element, type?: string) => void\r\n}\r\nconst Wrapper = styled(animated.div, (props: any) => {\r\n  const { $active, $targeted } = props\r\n  return {\r\n    margin: 10,\r\n    display: 'flex',\r\n    position: 'relative',\r\n    transform: $active ? 'scale(1.05)' : 'scale(0.97)',\r\n    transition: 'all 0.4s',\r\n    userSelect: 'none',\r\n  }\r\n})\r\n\r\nconst Halo = styled('div', (props: any) => {\r\n  const { $active, $targeted, $light } = props\r\n  const left = $light ? -20 : 0\r\n  const leftR = $light ? -10 : 0\r\n  return {\r\n    boxShadow: $active\r\n      ? `${left}px 0px 20px ${$light ? 'rgba(255,255,255,0.4)' : 'white'}`\r\n      : $targeted\r\n      ? `${leftR}px 0px 20px #ff6224  `\r\n      : 'none',\r\n  }\r\n})\r\n\r\nexport const PartyCharacter = (props: PartyCharacterProps) => {\r\n  const {\r\n    character,\r\n    selected,\r\n    showActions = true,\r\n    onConsumableClick,\r\n    push,\r\n  } = props\r\n  const { playerCanEquipItem } = useUIContext()\r\n  const { activeRound, activeCharacter } = useCombatContext()\r\n  const targetIds = activeRound?.targetResults.map((r) => r.target.id)\r\n  const active = activeCharacter?.id === character.id\r\n  const targeted = targetIds?.includes(character.id)\r\n  const { styles, exec } = useElementShake()\r\n  usePlayerCharacterNotifications(character, push, exec)\r\n  return (\r\n    <Wrapper\r\n      $active={active}\r\n      $targeted={targeted}\r\n      style={{\r\n        opacity: character.health <= 0 ? 0.5 : 1,\r\n        ...styles,\r\n      }}\r\n    >\r\n      <HexBadge\r\n        size={110}\r\n        stroke={2}\r\n        color={CHARACTER_CLASS_COLORS[character.class] || Theme.darkBgColor}\r\n        style={{\r\n          padding: 8,\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          transition: 'all 0.3s',\r\n          marginRight: -58,\r\n          marginTop: -11,\r\n          zIndex: 3,\r\n        }}\r\n        childStyle={{\r\n          marginTop: -20,\r\n        }}\r\n      >\r\n        <Icon\r\n          src={CHARACTER_CLASS_ICONS[character.class]}\r\n          size={72}\r\n          shadow\r\n          style={{ marginRight: -4 }}\r\n          fill={selected ? 'white' : 'rgba(255,255,255,0.5)'}\r\n        />\r\n      </HexBadge>\r\n      <Halo\r\n        $active={activeCharacter?.id === character.id}\r\n        $targeted={targetIds?.includes(character.id)}\r\n      >\r\n        <BoxContainer\r\n          style={{\r\n            borderWidth: 2,\r\n            transition: 'all 1s',\r\n          }}\r\n          substyle={{\r\n            padding: 0,\r\n            minWidth: 312,\r\n            background: Theme.darkBgColorSolid,\r\n          }}\r\n        >\r\n          <FlexContainer style={{ border: '2px solid black' }}>\r\n            <FlexContainer $full $direction='column'>\r\n              <Name character={character} />\r\n              <FlexContainer style={{ background: Theme.mediumBgColor }}>\r\n                <Health character={character} />\r\n                <FlexContainer $full style={{ maxWidth: 160, minWidth: 160 }}>\r\n                  <PartyCharacterConsumables\r\n                    character={character}\r\n                    consumables={character.consumables}\r\n                    onClick={onConsumableClick}\r\n                  />\r\n                </FlexContainer>\r\n                <FlexContainer $full $direction='column'>\r\n                  {showActions && (\r\n                    <Actions\r\n                      character={character}\r\n                      canEquip={playerCanEquipItem}\r\n                    />\r\n                  )}\r\n                </FlexContainer>\r\n              </FlexContainer>\r\n              <FullContainer />\r\n              <FlexContainer $direction='column' style={{ paddingLeft: 38 }}>\r\n                <HealthGauge\r\n                  character={character}\r\n                  style={{ borderRight: 'none' }}\r\n                />\r\n                <XPGauge\r\n                  character={character}\r\n                  style={{ borderRight: 'none' }}\r\n                />\r\n              </FlexContainer>\r\n              <HoverHexBadge\r\n                position={{ bottom: 15, left: 88 }}\r\n                size={42}\r\n                rotate\r\n                childStyle={{ paddingTop: 1 }}\r\n                content={<BoxContainer>Character Level</BoxContainer>}\r\n              >\r\n                <span\r\n                  style={{\r\n                    color: 'rgba(98, 128, 116,1)',\r\n                    fontSize: 24,\r\n                    lineHeight: '28px',\r\n                  }}\r\n                >\r\n                  {character.level}\r\n                </span>\r\n              </HoverHexBadge>\r\n              <Stats character={character} />\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n      </Halo>\r\n      <FlexContainer\r\n        style={{\r\n          position: 'absolute',\r\n          top: '-24px',\r\n          right: '4px',\r\n        }}\r\n      >\r\n        <>\r\n          {character.status.map((status) => (\r\n            <TagPreview direction='up' status={status} />\r\n          ))}\r\n          {character.immunities.map((status, i) => (\r\n            <TagPreview\r\n              key={i}\r\n              immunity={true}\r\n              status={{\r\n                type: status,\r\n                immunities: [],\r\n                stack: 0,\r\n                stats: ZERO_STATS,\r\n                duration: -1,\r\n              }}\r\n            />\r\n          ))}\r\n        </>\r\n      </FlexContainer>\r\n      <HoverHexBadge\r\n        position={{\r\n          bottom: 64,\r\n          left: -1,\r\n        }}\r\n        rotate\r\n        size={32}\r\n        childStyle={{\r\n          color: Theme.physicalColor,\r\n          fontSize: 18,\r\n          paddingTop: 1,\r\n        }}\r\n        content={<BoxContainer>Armor</BoxContainer>}\r\n      >\r\n        <span>{character.stats.armor}</span>\r\n      </HoverHexBadge>\r\n      <HoverHexBadge\r\n        position={{\r\n          bottom: 33,\r\n          left: -1,\r\n        }}\r\n        rotate\r\n        size={32}\r\n        childStyle={{\r\n          color: Theme.magicColor,\r\n          fontSize: 18,\r\n          paddingTop: 1,\r\n        }}\r\n        content={<BoxContainer>Magic Resistance</BoxContainer>}\r\n      >\r\n        <span>{character.stats.resistance}</span>\r\n      </HoverHexBadge>\r\n      <HoverHexBadge\r\n        position={{\r\n          bottom: 18,\r\n          left: 25,\r\n        }}\r\n        rotate\r\n        size={32}\r\n        childStyle={{\r\n          color: Theme.evasionColor,\r\n          fontSize: 18,\r\n          paddingTop: 1,\r\n        }}\r\n        content={<BoxContainer>Evasion</BoxContainer>}\r\n      >\r\n        <span>{character.stats.evasion}</span>\r\n      </HoverHexBadge>\r\n      <HoverHexBadge\r\n        direction='up'\r\n        rotate={true}\r\n        content={<BoxContainer>Weapon Damage</BoxContainer>}\r\n        position={{\r\n          bottom: -4,\r\n          left: 52,\r\n        }}\r\n        size={42}\r\n        childStyle={{\r\n          color:\r\n            character.weapon.damage.type === 'physical'\r\n              ? Theme.physicalColor\r\n              : Theme.magicColor,\r\n          fontSize: 24,\r\n          paddingTop: 1,\r\n        }}\r\n      >\r\n        <span>\r\n          {(character.weapon.damage.value +\r\n            character.stats.attackDamageOffset) *\r\n            character.stats.attackDamageModifier}\r\n        </span>\r\n      </HoverHexBadge>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { PartyCharacter } from '../PartyCharacter'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { RedButton } from '../../elements/button'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { LocalToastRp } from '../../contexts/LocalToastContext'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\n\r\nexport interface PlayerPartyPropsT {\r\n  party: tProcessedParty\r\n  onCharacterClick?: (character: tProcessedCharacter) => void\r\n  onConsumableClick?: (\r\n    character: tProcessedCharacter,\r\n    consumableIndex: number,\r\n    consumable: tConsumable,\r\n  ) => void\r\n}\r\nexport const PlayerParty = (props: PlayerPartyPropsT) => {\r\n  const { party, onCharacterClick, onConsumableClick } = props\r\n  const {\r\n    activeCharacter,\r\n    selectedSkill,\r\n    next,\r\n    onSkillSelect,\r\n  } = useCombatContext()\r\n  const { currentEncounter } = useGameStateContext()\r\n\r\n  const showConfirmButton = (c: tProcessedCharacter) =>\r\n    selectedSkill &&\r\n    activeCharacter &&\r\n    c.health > 0 &&\r\n    ((selectedSkill.targetType === 'self' && c.id === activeCharacter.id) ||\r\n      selectedSkill.targetType === 'ally')\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          alignItems: 'flex-end',\r\n          cursor: selectedSkill?.targetType === 'party' ? 'pointer' : 'default',\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <FlexContainer\r\n            $direction='column'\r\n            key={c.id}\r\n            style={{ height: 177, justifyContent: 'flex-end' }}\r\n          >\r\n            {showConfirmButton(c) && (\r\n              <FlexContainer style={{ justifyContent: 'center' }}>\r\n                <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n                  <RedButton onClick={() => next(c)} $direction='up'>\r\n                    {c.id === activeCharacter.id\r\n                      ? 'Target Self'\r\n                      : 'Target Ally'}\r\n                  </RedButton>\r\n                </div>\r\n              </FlexContainer>\r\n            )}\r\n            <LocalToastRp>\r\n              {({ push }) => (\r\n                <PartyCharacter\r\n                  push={push}\r\n                  selected={\r\n                    currentEncounter &&\r\n                    currentEncounter.type !== 'shop' &&\r\n                    activeCharacter &&\r\n                    c &&\r\n                    c.id === activeCharacter.id\r\n                  }\r\n                  character={c}\r\n                  onClick={() => onCharacterClick && onCharacterClick(c)}\r\n                  onConsumableClick={(consumable, index) => {\r\n                    try {\r\n                      if (!c || !consumable || index === undefined) return\r\n                      if (onConsumableClick) {\r\n                        onConsumableClick(c, index, consumable)\r\n                      }\r\n                      if (c && c.id === activeCharacter.id) {\r\n                        onSkillSelect(consumable.skill, index)\r\n                      }\r\n                    } catch (e) {}\r\n                  }}\r\n                />\r\n              )}\r\n            </LocalToastRp>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && selectedSkill.targetType === 'party' && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n            <RedButton onClick={() => next(party)}>Target Party</RedButton>\r\n          </div>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useGameStateContext } from '../GameStateContext'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { makeParty } from '../../game/Party/util'\r\nimport { tCombatEncounter } from '../../game/Encounter/type'\r\nimport { CombatContextProvider } from '.'\r\n\r\nexport interface LinkedCombatContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const LinkedCombatContext = (\r\n  props: LinkedCombatContextProviderPropsT,\r\n) => {\r\n  const { children } = props\r\n  const { currentEncounter, level, floor } = useGameStateContext()\r\n  const [combatParty, setCombatParty] = useState<tParty>(\r\n    makeParty(level, floor),\r\n  )\r\n  useEffect(() => {\r\n    if (currentEncounter && (currentEncounter as tCombatEncounter).party)\r\n      setCombatParty((currentEncounter as tCombatEncounter).party)\r\n  }, [currentEncounter])\r\n\r\n  return (\r\n    <CombatContextProvider\r\n      enemyParty={combatParty}\r\n      setEnemyParty={setCombatParty}\r\n      onRequestNewParty={() => {}}\r\n    >\r\n      {children}\r\n    </CombatContextProvider>\r\n  )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { getEncounterBg } from '../../game/Encounter/constants'\r\n\r\nexport interface AppBgPropsT {\r\n  children: JSX.Element | JSX.Element[]\r\n}\r\nexport const AppBg = (props: AppBgPropsT) => {\r\n  const { children } = props\r\n  const { floor, level } = useGameStateContext()\r\n  const bg = useMemo(() => {\r\n    return getEncounterBg(level, floor)\r\n  }, [floor, level])\r\n\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        background: `url(${bg.bg}) center center fixed no-repeat`,\r\n        backgroundSize: 'cover',\r\n        transition: 'all 2s',\r\n      }}\r\n    >\r\n      <FlexContainer\r\n        $full\r\n        $direction='column'\r\n        style={{ background: bg.overlay, transition: 'all 2s' }}\r\n      >\r\n        {children}\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ForestBg from './assets/img/forests/flat-forestred.jpg'\r\nimport Forest2 from './assets/img/forests/8.png'\r\nimport Dungeon1 from './assets/img/dungeon/4.png'\r\nimport { Switch } from 'react-router-dom'\r\nimport { Combat } from './domain/Combat'\r\nimport { CombatLogContextProvider } from './contexts/CombatLogContext'\r\nimport { ModalContextProvider } from './contexts/ModalContext'\r\nimport { makeRoute, RouteController } from './routes'\r\nimport { Party } from './domain/Party'\r\nimport { Start } from './domain/Start'\r\nimport { UIContextProvider, useUIContext } from './contexts/UIContext'\r\nimport { usePartyContext } from './contexts/PartyContext'\r\nimport { PlayerParty } from './components/PlayerParty'\r\nimport { FlexContainer, FullContainer } from './elements/flex'\r\nimport { LinkedCombatContext } from './contexts/CombatContext/context'\r\nimport { AppBg } from './components/AppBg'\r\n\r\nconst CombatDomain = () => {\r\n  return (\r\n    <CombatLogContextProvider>\r\n      <Combat />\r\n    </CombatLogContextProvider>\r\n  )\r\n}\r\n\r\nconst GlobalCharacters = () => {\r\n  const { party } = usePartyContext()\r\n  const { onCharacterConsumableClick } = useUIContext()\r\n  return (\r\n    <div style={{ marginBottom: 30 }}>\r\n      <PlayerParty\r\n        party={party}\r\n        onConsumableClick={(c, i, item) => {\r\n          if (onCharacterConsumableClick) {\r\n            onCharacterConsumableClick(c, i, item)\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const App = () => {\r\n  return (\r\n    <ModalContextProvider>\r\n      <LinkedCombatContext>\r\n        <UIContextProvider>\r\n          <AppBg>\r\n            <RouteController />\r\n            <FullContainer>\r\n              <Switch>\r\n                {makeRoute('/party', Party)}\r\n                {makeRoute('/combat', CombatDomain)}\r\n                {makeRoute('/', Start)}\r\n              </Switch>\r\n            </FullContainer>\r\n            <GlobalCharacters />\r\n          </AppBg>\r\n        </UIContextProvider>\r\n      </LinkedCombatContext>\r\n    </ModalContextProvider>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './index.css'\n\nimport { Provider as StyletronProvider, DebugEngine } from 'styletron-react'\nimport { Client as Styletron } from 'styletron-engine-atomic'\nimport { Provider as ReduxProvider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { makeStore } from './state'\nimport { PartyContextProvider } from './contexts/PartyContext'\nimport { GameStateContextProvider } from './contexts/GameStateContext'\n\nconst debug = process.env.NODE_ENV === 'production' ? void 0 : new DebugEngine()\nconst engine: Styletron = new Styletron()\nconst store = makeStore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n        <GameStateContextProvider>\n          <PartyContextProvider>\n            <Router>\n              <App />\n            </Router>\n          </PartyContextProvider>\n        </GameStateContextProvider>\n      </StyletronProvider>\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport party from './party'\r\nimport game from './game'\r\n\r\nexport const makeStore = () =>\r\n  createStore(combineReducers({ party, game }), compose(applyMiddleware(thunk)))\r\n"],"sourceRoot":""}