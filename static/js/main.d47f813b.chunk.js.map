{"version":3,"sources":["assets/img/flat-forestred.jpg","icons/svg/lorc/wolf-head.svg","icons/svg/delapouite/orc-head.svg","icons/svg/lorc/imp-laugh.svg","icons/svg/lorc/bee.svg","icons/svg/delapouite/bandit.svg","icons/svg/delapouite/pirate-captain.svg","icons/svg/lorc/cowled.svg","icons/svg/lorc/laurel-crown.svg","icons/svg/delapouite/heart-beats.svg","icons/svg/delapouite/biceps.svg","icons/svg/lorc/brain.svg","icons/svg/delapouite/eye-target.svg","icons/svg/lorc/juggler.svg","icons/svg/lorc/sprint.svg","icons/svg/lorc/clover.svg","icons/svg/lorc/star-swirl.svg","icons/svg/sbed/targeted.svg","icons/svg/lorc/dodging.svg","icons/svg/delapouite/sticky-boot.svg","icons/svg/lorc/biohazard.svg","icons/svg/carl-olsen/flame.svg","icons/svg/lorc/bleeding-wound.svg","icons/svg/lorc/high-shot.svg","icons/svg/lorc/fire-zone.svg","icons/svg/lorc/flat-hammer.svg","icons/svg/lorc/hammer-drop.svg","icons/svg/lorc/bordered-shield.svg","icons/svg/lorc/energy-arrow.svg","icons/svg/delapouite/backward-time.svg","icons/svg/lorc/double-shot.svg","icons/svg/delapouite/extra-time.svg","icons/svg/sbed/health-normal.svg","icons/svg/lorc/robe.svg","icons/svg/lorc/scale-mail.svg","icons/svg/lorc/lightning-shield.svg","icons/svg/delapouite/robin-hood-hat.svg","icons/svg/lorc/pointy-hat.svg","icons/svg/delapouite/herbs-bundle.svg","icons/svg/lorc/split-cross.svg","icons/svg/delapouite/skills.svg","icons/svg/lorc/knapsack.svg","icons/svg/delapouite/light-backpack.svg","icons/svg/delapouite/leather-armor.svg","state/util.ts","hooks/useActions.ts","game/Stats/constants.ts","util/undefAdd.ts","game/Stats/util.ts","game/Status/constants.ts","util/noneg.ts","game/Skill/objects/smash.ts","game/Skill/objects/shockwave.ts","game/Weapon/objects/blunt/blacksmiths_hammer.ts","game/Skill/objects/shot.ts","game/Skill/objects/snipe_shot.ts","game/Skill/objects/surge.ts","game/Skill/objects/area_blast.ts","game/Skill/objects/alto.ts","game/Skill/objects/dazzle.ts","game/Skill/objects/stun_attack.ts","game/Skill/objects/piercing_blow.ts","game/Skill/objects/spread_shot.ts","game/Skill/objects/pin_down.ts","game/Skill/objects/ritardando.ts","game/Skill/objects/symphony.ts","game/Skill/objects/rubato.ts","game/Skill/objects/protect.ts","game/Skill/objects/time_jump.ts","game/Weapon/constants.ts","game/Weapon/objects/bow/hunting_bow.ts","game/Weapon/objects/tome/scholars_book.ts","game/Weapon/objects/lute/simple_lute.ts","game/Weapon/objects/blunt/index.ts","game/Weapon/objects/blunt/mace.ts","game/Weapon/objects/blunt/war_pick.ts","game/Weapon/objects/blunt/crude_club.ts","game/Weapon/objects/bow/index.ts","game/Weapon/objects/bow/composite_bow.ts","game/Weapon/objects/bow/curved_bow.ts","game/Weapon/objects/lute/index.ts","game/Weapon/objects/lute/archlute.ts","game/Weapon/objects/lute/barbat.ts","game/Weapon/objects/tome/index.ts","game/Weapon/objects/tome/mages_tome.ts","game/Weapon/objects/tome/apprentices_tome.ts","game/Weapon/objects/tome/dusty_book.ts","game/Roll/util.ts","game/Skill/objects/taunt.ts","game/Armor/objects/simple_iron_shield.ts","game/Armor/constants.ts","game/Skill/objects/heal.ts","game/Consumable/objects/godsbeard.ts","game/Consumable/constants.ts","game/Consumable/util.ts","game/Character/util.ts","util/getRandom.ts","game/Skill/objects/enemy/bite.ts","game/Armor/objects/adventure_boots.ts","game/Armor/objects/explorers_boots.ts","game/Armor/objects/explorers_hat.ts","game/Armor/objects/fur_boots.ts","game/Armor/objects/index.ts","game/Armor/objects/adventure_cloak.ts","game/Armor/objects/explorers_cloak.ts","game/Armor/objects/fur_armor.ts","game/Armor/objects/performers_boots.ts","game/Armor/objects/performers_vest.ts","game/Character/enemies/timberwolf.ts","game/Skill/objects/enemy/impale.ts","game/Character/enemies/beastman.ts","game/Skill/objects/enemy/slap.ts","game/Character/enemies/vale_imp.ts","game/Skill/objects/enemy/sting.ts","game/Character/enemies/bee.ts","game/Skill/objects/enemy/stab.ts","game/Character/enemies/bandit.ts","game/Character/enemies/buccaneer.ts","game/Skill/objects/enemy/torch.ts","game/Character/enemies/cultist.ts","game/Party/constants.ts","game/Party/util.ts","state/party/index.ts","contexts/PartyContext/index.tsx","contexts/ModalContext/reducer.ts","contexts/ModalContext/index.tsx","elements/flex.ts","elements/button.tsx","components/Icon/index.tsx","components/Hover/index.tsx","elements/box.tsx","components/StatsPreview/index.tsx","icons/maps.tsx","game/Item/constants.ts","components/ArmorPreview/index.tsx","components/Tooltip/index.tsx","hooks/useOnClickOutside.ts","elements/badge.tsx","components/SkillChecks/index.tsx","components/WeaponPreview/index.tsx","components/ItemPreview/index.tsx","game/Encounter/util.ts","state/game/index.ts","contexts/GameStateContext/index.tsx","components/CombatVictoryModal/index.tsx","game/Other/util.ts","game/Queue/util.ts","game/Skill/constants.ts","game/Skill/util.ts","game/Skill/committer.ts","contexts/CombatContext/index.tsx","game/AI/util.ts","components/RoundResultRenderer/index.tsx","components/SkillPreview/index.tsx","components/CombatActions/index.tsx","elements/monospace.tsx","hooks/usePrevious.ts","game/Character/constants.ts","components/Gauge/index.tsx","components/TagPreview/index.tsx","components/EnemyCharacter/Health.tsx","contexts/LocalToastContext/index.tsx","components/EnemyCharacter/index.tsx","components/CombatParty/index.tsx","components/AppHeader/index.tsx","components/PartyResources/index.tsx","components/CombatQueue/index.tsx","contexts/CombatLogContext/util.tsx","contexts/CombatLogContext/index.tsx","components/CombatLog/index.tsx","contexts/UIContext/index.tsx","domain/Combat.tsx","hooks/useCombatStart.tsx","routes/index.tsx","domain/Party.tsx","domain/Start.tsx","components/CharacterImage/index.tsx","components/PartyCharacterConsumables/index.tsx","components/PartyCharacter/Stats.tsx","components/PartyCharacter/Name.tsx","components/PartyActiveCharacter/StatBar.tsx","components/PartyActiveCharacter/Items.tsx","components/PartyActiveCharacter/Name.tsx","components/PartyActiveCharacter/Image.tsx","components/PartyActiveCharacter/ArmorList.tsx","components/PartyActiveCharacter/WeaponList.tsx","components/PartyActiveCharacter/MenuSelect.tsx","components/PartyActiveCharacter/HoverArea.tsx","components/PartyActiveCharacter/index.tsx","components/PartyCharacter/Actions.tsx","components/PartyCharacter/Health.tsx","components/PartyCharacter/index.tsx","components/PlayerParty/index.tsx","contexts/CombatContext/context.tsx","App.tsx","serviceWorker.ts","index.tsx","state/index.ts","icons/svg/delapouite/coins.svg","icons/svg/lorc/broadsword.svg","icons/svg/delapouite/shield-impact.svg","icons/svg/lorc/heavy-timer.svg","icons/svg/lorc/ubisoft-sun.svg","icons/svg/delapouite/g-clef.svg","icons/svg/lorc/shieldcomb.svg","icons/svg/delapouite/chest-armor.svg","icons/svg/delapouite/viking-shield.svg","icons/svg/lorc/leather-boot.svg","icons/svg/lorc/visored-helm.svg"],"names":["module","exports","makeReducer","core","initialState","state","action","coreFn","type","useActions","actions","dispatch","useDispatch","useMemo","bindActionCreators","ZERO_STATS","vigor","strength","intelligence","dexterity","charisma","agility","luck","armor","resistance","evasion","maxHealthOffset","healthRegeneration","damageTakenModifier","damageReflection","melee","ranged","attackDamageOffset","attackDamageModifier","criticalChance","damageModifiers","flying","undead","queueConsolidationModifier","queueValueSet","undefined","goldModifier","maxInspirationOffset","consumableHealthGainOffset","minHealthOffset","BASE_C_STATS","CLASS_STATS","blacksmith","hunter","scholar","bard","enemy","DAMAGE_BONUS_KEYS","DEFENSE_BONUS_KEYS","STAT_BONUS_KEYS","STAT_KEY_LABELS","undefAdd","a","b","combineStats","stats","reduce","result","STATUS_CONFIG","bleeding","name","description","canStack","isTemporary","duration","burning","cursed","frozen","poisoned","shocked","stunned","wet","rushed","interrupted","reset","evasive","resilient","protected","targeted","noneg","value","SMASH","id","v4","damageModifier","splashDamageModifier","targetType","damage","healing","rolls","offset","perfectSplash","perfectPierce","perfectStatus","SHOCKWAVE","BLACKSMITHS_HAMMER","itemType","rarity","stat","twoHand","breakable","range","skills","immunities","SHOT","SNIPE_SHOT","SURGE","AREA_BLAST","ALTO","DAZZLE","STUN_ATTACK","DAZE","PIERCING_BLOW","SPREAD_SHOT","PIN_DOWN","RITARDANDO","SYMPHONY","RUBATO","PROTECT","TIME_JUMP","CLASS_WEAPONS","ALL_WEAPONS","resolveCheck","character","key","statValue","getBaseStatValue","roll","DiceRoll","total","TAUNT","weaponStatOverride","SIMPLE_IRON_SHIELD","resource","CLASS_ARMOR","HEAL","consumableId","cid","GODSBEARD","skill","CLASS_CONSUMABLES","considateConsumableListToStack","consumables","stack","forEach","c","map","s","consumable","includes","count","updateStackItem","checkForProcessedCharacter","processed","Error","makeCharacter","characterClass","isCharacter","partyId","level","experience","class","healthOffset","inspirationOffset","tags","weapon","status","possibleRewards","processCharacter","r","getSkills","baseVigor","startingHealth","Math","floor","maxHealth","health","maxInspiration","inspiration","rawStats","getDamageResistance","hasStatus","statusType","getReflectedDamage","target","rawDamage","commitDamage","ignoreResistance","pc","rawDamageValue","filter","decrementStatusDurations","addMultipleStatus","types","statusConfig","existingStatus","find","findStatus","hasImmunity","addStatus","getRandom","items","random","length","BITE","ADVENTURE_BOOTS","EXPLORERS_BOOTS","EXPLORERS_HAT","FUR_BOOTS","ALL_ARMOR","TIMBERWOLF","icon","Wolf","gold","xp","IMPALE","BEASTMAN","BeastMan","SLAP","VALE_IMP","Imp","STING","INFECTIOUS_STING","BEE","Bee","STAB","BANDIT","Bandit","BUCCANEER","Icon","TORCH","CULTIST","Cultist","PLAYER_PARTY_ID","ENEMY_COMBOS_BY_LEVEL","0","1","2","3","4","5","isParty","obj","checkForProcessedParty","party","characters","findCharacterInParty","processParty","updateCharacter","characterId","updater","makeParty","getRolledRewards","checkedCharacter","index","rewards","i","getRewardsFromCharacter","actionCreators","payload","updateParty","upsertCharacter","deleteCharacter","jack","jim","john","INITIAL_STATE","defaultContextValue","rawParty","activeCharacter","findCharacter","findRawCharacter","setActiveCharacter","equipItem","item","unequipItem","PartyContext","React","createContext","PartyContextProvider","props","children","useSelector","useState","activeCharacterId","setActiveCharacterId","Provider","existingArmor","equipArmor","existingWeapon","equipWeapon","unequipArmor","usePartyContext","useContext","isOpen","contents","callback","blocking","styles","OPEN","CLOSE","style","reducer","coreFunction","ModalContext","open","close","setBlocking","setPayload","setContents","setCallback","setStyles","useModalContext","getContextValue","Modal","setAppElement","ModalContextProvider","reducerValue","useReducer","context","onRequestClose","content","backgroundColor","color","width","margin","bottom","borderColor","modal","overlay","zIndex","FlexContainer","styled","display","flexDirection","$direction","flex","$full","FullContainer","Button","cursor","background","boxShadow","textShadow","border","outline","padding","RedButton","withStyle","ConfirmButton","borderTop","borderBottom","animationDirection","animationIterationCount","animationName","src","size","fill","shadow","onClick","loading","setLoading","svg","setSvg","useEffect","fetch","then","res","text","className","height","dangerouslySetInnerHTML","__html","Hover","delay","internalHovering","setInternalHovering","isHovering","setIsHovering","guid","setGuid","useLayoutEffect","setTimeout","onMouseEnter","e","preventDefault","stopPropagation","onMouseLeave","BoxContainer","substyle","tag","Element","rest","boxSizing","defense_key_colors","StatsPreview","fontSize","textTransform","STAT_ICONS","Vigor","Strength","Brain","Awareness","Juggler","Agility","Clover","STATUS_ICONS","Dazed","Targeted","Evasive","Protect","SpeedDown","Poisoned","Burning","Bleeding","SKILL_ICONS","Shot","SnipeShot","PinDown","Surge","AreaBast","Dazzle","Reset","Smash","Shockwave","Taunt","Alto","SpreadShot","TimeJump","Heal","ARMOR_TYPE_ICONS","MagicArmor","ClothArmor","Armor","Shield","MagicShield","Footwear","Hat","MagicHat","Helmet","RESOURCE_ICONS","Weapon","offhand","body","head","feet","CONSUMABLE_ITEM_ICONS","Godsbeard","CONSUMABLE_ITEM_COLORS","ITEM_RARITY_COLORS","common","uncommon","rare","mythic","CHARACTER_RESOURCES","ArmorPreview","showEquipButton","onEquipClick","rarityColor","from","Color","darken","rgb","toString","to","gradient","minWidth","marginBottom","marginRight","fontWeight","marginLeft","minHeight","textAlign","Tooltip","direction","tagName","arrow","HoverToolTip","ClickToolTip","setIsOpen","ref","useRef","handler","listener","event","current","contains","document","addEventListener","removeEventListener","useOnClickOutside","p","v","Div","transform","Badge","withWrapper","position","$absolute","$size","alignItems","justifyContent","lineHeight","borderRadius","$color","top","$top","$bottom","right","$right","left","$left","HoverBadge","badgeProps","distance","SkillChecks","Array","_","check","label","SkillCheck","opacity","getColor","X","getDamageColor","WeaponPreview","basicAttack","ItemPreivew","ZERO_REWARD","makeRandomEncounter","depth","encounterType","encounter","reward","makeEncounterList","RESET","chooseCurrent","nextLevel","encounters","defaultValue","currentChoice","currentEncounter","GameStateContext","useGameStateContext","GameStateContextProvider","game","gsc","choice","CombatVictoryModal","consolidatedRewards","consolidateRewards","setItems","first","goldMultiplier","commitRewards","Gold","XP","marginTop","makeCombatQueue","sort","AGILITY_OFFSET","consolidateQueue","queue","min","Object","keys","Number","POSITIVE_INFINITY","getMin","getFirst","commitQueueUpdates","source","pcs","shiftedQueue","shiftQueue","validateQueue","q","PERFECT_DISPLAY_INFO","splash","pierce","heal","getTargetSkillResult","sourceResult","dodgeResult","dodgeSuccess","perfect","getRawDamage","totalDamage","reflectedDamage","loggedDamgge","getSkillResult","targets","rollResults","passedCount","criticalHitSuccess","rollDamageModifier","round","weaponRangeOverride","splashDamage","addedStatus","getSourceSkillResult","targetResults","resolveSkillTarget","makeSkillTarget","getSkillDamage","getPerfectText","perfectKeys","base","getPerfectKeys","pre","partyUpdater","commitSkillResults","playerParty","enemyParty","targetResult","sourceParty","targetParty","localUpdate","selectedSkill","selectedTargets","selectedConsumableIndex","roundResults","activeRound","isRunning","isRenderingResult","onSkillSelect","onTargetsSelect","onConsumableSelect","consumableIndex","start","next","commit","CombatContext","useCombatContext","CombatContextProvider","setEnemyParty","onRequestNewParty","history","useHistory","setIsRunning","setIsRenderingResult","setQueue","resultCommitter","roundId","setRoundId","setRoundResults","setActiveRound","selectedTarget","setSelectedTarget","setSelectedSkill","setSelectedConsumableIndex","useCallback","targetedCharacters","t","getSkillTargetOptions","getAIAction","execEnemyTurn","every","alert","push","nextTarget","roundTarget","results","RoundResultRenderer","isModal","RoundResult","isDone","setIsDone","activeIndex","setActiveIndex","stream","Kefir","sequentially","onValue","onEnd","later","showPerfect","useSpring","isPlayer","showTarget","div","fontFamily","SkillPreview","perfectChance","CombatActions","Fragment","Monospace","Monodiv","usePrevious","CHARACTER_XP_MAX","Gauge","max","percentage","oldPercentage","borderLeft","config","friction","mass","tension","maxWidth","overflow","HealthGauge","XPGauge","TagPreview","Health","previousHealth","diff","abs","hp","clamp","hpp","Toast","hasChildren","rootStyle","animation","useTransition","enter","leave","whiteSpace","LocalToastRp","EnemyCharacter","$selected","$active","transition","borderWidth","CombatParty","AppHeader","PartyResources","paddingRight","CombatQueue","sortedIds","getSortedIds","bigList","NEGATIVE_INFINITY","getMax","widthCoef","alt","paddingLeft","Span","SkillSpan","CombatLogContext","combatLog","clear","useCombatLogContext","CombatLogContextProvider","setCombatLog","deadLog","setDeadLog","NameSpan","isUserParty","isEnemyParty","NameSpanBuilder","log","line","dLog","latestRounds","baseRound","subTarget","splashDamageResistance","CombatLog","scrollRef","isExpanded","setIsExpanded","scrollIntoView","behavior","maxHeight","playerCanEquipItem","openCharacterInventoryId","onCharacterConsumableClick","setPlayerCanEquipItem","setOpenCharacterInventoryId","setOnCharacterConsumableClick","fn","UIContext","useUIContext","UIContextProvider","_setOnCharacterConsumableClick","Combat","useCombatStart","makeRoute","path","Component","RouteController","Party","parties","JSON","stringify","Start","onChange","rc","StartCharacterCard","CharacterImage","PartyCharacterConsumables","onStackClick","filler","flexWrap","f","ConsumableBox","HEIGHT","PartyCharacterConsumable","PartyCharacterConsumableTooltip","CharacterStat","statKey","ResourceE","getStatColor","Stats","Name","StatBar","paddingTop","paddingBottom","ItemRow","userSelect","Items","setActiveItem","onHover","canUnequip","ArmorItem","Image","ArmorList","canEquip","activeItemId","setActiveItemId","localeCompare","WeaponItem","WeaponList","ACTIVE_CHARACTER_MENU_KEYS","render","Weapons","MenuSelect","activeKey","onActiveKeyChange","option","HoverArea","activeItem","foundArmor","PartyActiveCharacter","activeMenuKey","setActiveMenuKey","activeOption","o","Actions","inventoryOpen","inventoryStyle","Inventory","Details","setStoredHealth","Wrapper","PartyCharacter","selected","showActions","onConsumableClick","setPreviousHealth","previousStatus","setPreviousStatus","added","borderRight","PlayerParty","onCharacterClick","showConfirmButton","LinkedCombatContext","combatParty","setCombatParty","CombatDomain","GlobalCharacters","App","ForestBg","backgroundSize","Boolean","window","location","hostname","match","engine","Styletron","store","createStore","combineReducers","compose","applyMiddleware","thunk","ReactDOM","StrictMode","debug","debugAfterHydration","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"mFAAAA,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,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","file":"static/js/main.d47f813b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flat-forestred.951e7322.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wolf-head.4e7bf362.svg\";","module.exports = __webpack_public_path__ + \"static/media/orc-head.ff410513.svg\";","module.exports = __webpack_public_path__ + \"static/media/imp-laugh.b3e04d0d.svg\";","module.exports = __webpack_public_path__ + \"static/media/bee.7b0a0467.svg\";","module.exports = __webpack_public_path__ + \"static/media/bandit.f798765b.svg\";","module.exports = __webpack_public_path__ + \"static/media/pirate-captain.daa0fd39.svg\";","module.exports = __webpack_public_path__ + \"static/media/cowled.d0cad9db.svg\";","module.exports = __webpack_public_path__ + \"static/media/laurel-crown.00b6e803.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-beats.6b1fff9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/biceps.e62c221f.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain.ce65603a.svg\";","module.exports = __webpack_public_path__ + \"static/media/eye-target.4c5ae680.svg\";","module.exports = __webpack_public_path__ + \"static/media/juggler.1188c0be.svg\";","module.exports = __webpack_public_path__ + \"static/media/sprint.968b443a.svg\";","module.exports = __webpack_public_path__ + \"static/media/clover.df6a0d57.svg\";","module.exports = __webpack_public_path__ + \"static/media/star-swirl.3045bd1f.svg\";","module.exports = __webpack_public_path__ + \"static/media/targeted.b4ce8dd7.svg\";","module.exports = __webpack_public_path__ + \"static/media/dodging.3c689d6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/sticky-boot.f097559f.svg\";","module.exports = __webpack_public_path__ + \"static/media/biohazard.cdfb567d.svg\";","module.exports = __webpack_public_path__ + \"static/media/flame.332be8c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/bleeding-wound.8d92779f.svg\";","module.exports = __webpack_public_path__ + \"static/media/high-shot.eed9def8.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire-zone.42e13657.svg\";","module.exports = __webpack_public_path__ + \"static/media/flat-hammer.dff14efb.svg\";","module.exports = __webpack_public_path__ + \"static/media/hammer-drop.120a92c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/bordered-shield.56c12b47.svg\";","module.exports = __webpack_public_path__ + \"static/media/energy-arrow.514fc56c.svg\";","module.exports = __webpack_public_path__ + \"static/media/backward-time.d0246d45.svg\";","module.exports = __webpack_public_path__ + \"static/media/double-shot.70211522.svg\";","module.exports = __webpack_public_path__ + \"static/media/extra-time.4d418333.svg\";","module.exports = __webpack_public_path__ + \"static/media/health-normal.0da85e24.svg\";","module.exports = __webpack_public_path__ + \"static/media/robe.5b61ecba.svg\";","module.exports = __webpack_public_path__ + \"static/media/scale-mail.cb5ff7d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/lightning-shield.85367254.svg\";","module.exports = __webpack_public_path__ + \"static/media/robin-hood-hat.6bab1449.svg\";","module.exports = __webpack_public_path__ + \"static/media/pointy-hat.d042ac98.svg\";","module.exports = __webpack_public_path__ + \"static/media/herbs-bundle.e02bcec1.svg\";","module.exports = __webpack_public_path__ + \"static/media/split-cross.fa0be1a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/skills.60519e24.svg\";","module.exports = __webpack_public_path__ + \"static/media/knapsack.62049a62.svg\";","module.exports = __webpack_public_path__ + \"static/media/light-backpack.6ad63d45.svg\";","module.exports = __webpack_public_path__ + \"static/media/leather-armor.f3d5462f.svg\";","import { StateCoreT, StateReducerT } from './types'\r\n\r\nexport const makeReducer = (\r\n  core: StateCoreT,\r\n  initialState: any,\r\n): StateReducerT => {\r\n  return (state = initialState, action) => {\r\n    const coreFn = core[action.type]\r\n    if (coreFn) return coreFn(state, action)\r\n    return state\r\n  }\r\n}\r\n","import { useMemo } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nexport const useActions = (actions: any) => {\r\n  const dispatch = useDispatch()\r\n  return useMemo(() => bindActionCreators(actions, dispatch), [\r\n    dispatch,\r\n    actions,\r\n  ])\r\n}\r\n","import { tStats, tBaseStats } from './type'\r\nimport { tCharacterClass } from '../Character/type'\r\n\r\nexport const ZERO_STATS: tStats = {\r\n  vigor: 0,\r\n  strength: 0,\r\n  intelligence: 0,\r\n  dexterity: 0,\r\n  charisma: 0,\r\n  agility: 0,\r\n  luck: 0,\r\n\r\n  armor: 0,\r\n  resistance: 0,\r\n  evasion: 0,\r\n\r\n  maxHealthOffset: 0,\r\n  healthRegeneration: 0,\r\n  damageTakenModifier: 0,\r\n  damageReflection: {\r\n    melee: 0,\r\n    ranged: 0,\r\n  },\r\n\r\n  attackDamageOffset: 0,\r\n  attackDamageModifier: 0,\r\n  criticalChance: 0,\r\n  damageModifiers: {\r\n    flying: 0,\r\n    undead: 0,\r\n  },\r\n\r\n  queueConsolidationModifier: 0,\r\n  queueValueSet: undefined,\r\n\r\n  goldModifier: 0,\r\n  maxInspirationOffset: 0,\r\n  consumableHealthGainOffset: 0,\r\n  minHealthOffset: 0,\r\n}\r\n\r\nexport const BASE_C_STATS: tStats = {\r\n  ...ZERO_STATS,\r\n  damageTakenModifier: 1,\r\n  attackDamageModifier: 1,\r\n  criticalChance: 5,\r\n  damageModifiers: {\r\n    flying: 1,\r\n    undead: 1,\r\n  },\r\n  queueConsolidationModifier: 1,\r\n  consumableHealthGainOffset: 15,\r\n}\r\n\r\nexport const CLASS_STATS: Record<tCharacterClass, tStats> = {\r\n  blacksmith: {\r\n    ...BASE_C_STATS,\r\n    strength: 76,\r\n    vigor: 80,\r\n    intelligence: 40,\r\n    dexterity: 52,\r\n    charisma: 72,\r\n    agility: 56,\r\n    luck: 50,\r\n    armor: 2,\r\n    resistance: 0,\r\n    evasion: 7,\r\n  },\r\n  hunter: {\r\n    ...BASE_C_STATS,\r\n    strength: 52,\r\n    vigor: 66,\r\n    intelligence: 46,\r\n    dexterity: 78,\r\n    charisma: 64,\r\n    agility: 78,\r\n    luck: 50,\r\n    armor: 1,\r\n    resistance: 0,\r\n    evasion: 20,\r\n  },\r\n  scholar: {\r\n    ...BASE_C_STATS,\r\n    strength: 42,\r\n    vigor: 60,\r\n    intelligence: 78,\r\n    dexterity: 66,\r\n    charisma: 70,\r\n    agility: 70,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 1,\r\n    evasion: 13,\r\n  },\r\n  bard: {\r\n    ...BASE_C_STATS,\r\n    strength: 44,\r\n    vigor: 50,\r\n    intelligence: 70,\r\n    dexterity: 68,\r\n    charisma: 78,\r\n    agility: 68,\r\n    luck: 50,\r\n    armor: 0,\r\n    resistance: 1,\r\n    evasion: 11,\r\n  },\r\n  enemy: BASE_C_STATS,\r\n}\r\n\r\nexport const DAMAGE_BONUS_KEYS: (keyof tStats)[] = [\r\n  'goldModifier',\r\n  'attackDamageOffset',\r\n  'attackDamageModifier',\r\n  'criticalChance',\r\n]\r\nexport const DEFENSE_BONUS_KEYS: (keyof tStats)[] = [\r\n  'armor',\r\n  'resistance',\r\n  'evasion',\r\n  'healthRegeneration',\r\n  'damageReflection',\r\n]\r\nexport const HEALTH_FOCUS_BONUS_KEYS: (keyof tStats)[] = ['maxHealthOffset']\r\nexport const STAT_BONUS_KEYS: (keyof tBaseStats)[] = [\r\n  'vigor',\r\n  'strength',\r\n  'intelligence',\r\n  'dexterity',\r\n  'charisma',\r\n  'agility',\r\n  'luck',\r\n]\r\n\r\nexport const STAT_KEY_LABELS: Record<keyof tStats, string> = {\r\n  strength: ' Strength',\r\n  vigor: ' Vigor',\r\n  intelligence: ' Intelligence',\r\n  dexterity: ' Dexterity',\r\n  charisma: ' Charisma',\r\n  agility: ' Agility',\r\n  luck: ' Luck',\r\n  evasion: ' Evasion',\r\n  criticalChance: '% Crit Chance',\r\n\r\n  armor: ' Armor',\r\n  resistance: ' Resistance',\r\n\r\n  maxHealthOffset: ' Health',\r\n  healthRegeneration: ' Health Regen',\r\n  damageReflection: ' Damage Reflection',\r\n  damageTakenModifier: '% Recieved Damage',\r\n\r\n  // TODO: Make this work\r\n  damageModifiers: ' Damage to certain Enemeies',\r\n\r\n  queueConsolidationModifier: ' Queue Consolidation Modifier',\r\n  queueValueSet: ' Queue Value Set',\r\n\r\n  attackDamageOffset: ' Raw Damage',\r\n  attackDamageModifier: '% Attack Damage',\r\n\r\n  goldModifier: '% Gold Recieved',\r\n  maxInspirationOffset: ' Inspiration',\r\n  minHealthOffset: ' Minumum Health',\r\n  consumableHealthGainOffset: ' HP from Consumables',\r\n}\r\n","export const undefAdd = (\r\n  a: number | undefined,\r\n  b: number | undefined,\r\n): number | undefined => {\r\n  if (a === undefined && b === undefined) return undefined\r\n  if (a === undefined && b !== undefined) return b\r\n  if (a !== undefined && b === undefined) return a\r\n  if (a !== undefined && b !== undefined) return a + b\r\n}\r\n","import { tStats } from './type'\r\nimport { ZERO_STATS } from './constants'\r\nimport { undefAdd } from '../../util/undefAdd'\r\n\r\nexport const combineStats = (...stats: tStats[]) => {\r\n  return stats.reduce(\r\n    (result, stats) => ({\r\n      vigor: result.vigor + stats.vigor,\r\n      strength: result.strength + stats.strength,\r\n      intelligence: result.intelligence + stats.intelligence,\r\n      dexterity: result.dexterity + stats.dexterity,\r\n      charisma: result.charisma + stats.charisma,\r\n      agility: result.agility + stats.agility,\r\n      luck: result.luck + stats.luck,\r\n\r\n      armor: result.armor + stats.armor,\r\n      resistance: result.resistance + stats.resistance,\r\n      evasion: result.evasion + stats.evasion,\r\n\r\n      maxHealthOffset: result.maxHealthOffset + stats.maxHealthOffset,\r\n      healthRegeneration: result.healthRegeneration + stats.healthRegeneration,\r\n      damageTakenModifier:\r\n        result.damageTakenModifier + stats.damageTakenModifier,\r\n      damageReflection: {\r\n        melee: result.damageReflection.melee + stats.damageReflection.melee,\r\n        ranged: result.damageReflection.ranged + stats.damageReflection.ranged,\r\n      },\r\n\r\n      attackDamageOffset: result.attackDamageOffset + stats.attackDamageOffset,\r\n      attackDamageModifier:\r\n        result.attackDamageModifier + stats.attackDamageModifier,\r\n      criticalChance: result.criticalChance + stats.criticalChance,\r\n      damageModifiers: {\r\n        flying: result.damageModifiers.flying + stats.damageModifiers.flying,\r\n        undead: result.damageModifiers.undead + stats.damageModifiers.undead,\r\n      },\r\n\r\n      queueConsolidationModifier:\r\n        result.queueConsolidationModifier + stats.queueConsolidationModifier,\r\n      queueValueSet: undefAdd(result.queueValueSet, stats.queueValueSet),\r\n\r\n      goldModifier: result.goldModifier + stats.goldModifier,\r\n      maxInspirationOffset:\r\n        result.maxInspirationOffset + stats.maxInspirationOffset,\r\n      consumableHealthGainOffset:\r\n        result.consumableHealthGainOffset + stats.consumableHealthGainOffset,\r\n      minHealthOffset: result.minHealthOffset + stats.minHealthOffset,\r\n    }),\r\n    ZERO_STATS,\r\n  )\r\n}\r\n\r\nexport const multiplyStats = (stats: tStats, modifier: number): tStats => ({\r\n  vigor: stats.vigor * modifier,\r\n  strength: stats.strength * modifier,\r\n  intelligence: stats.intelligence * modifier,\r\n  dexterity: stats.dexterity * modifier,\r\n  charisma: stats.charisma * modifier,\r\n  agility: stats.agility * modifier,\r\n  luck: stats.luck * modifier,\r\n\r\n  armor: stats.armor * modifier,\r\n  resistance: stats.resistance * modifier,\r\n  evasion: stats.evasion * modifier,\r\n\r\n  maxHealthOffset: stats.maxHealthOffset * modifier,\r\n  healthRegeneration: stats.healthRegeneration * modifier,\r\n  damageTakenModifier: stats.damageTakenModifier * modifier,\r\n  damageReflection: {\r\n    melee: stats.damageReflection.melee * modifier,\r\n    ranged: stats.damageReflection.ranged * modifier,\r\n  },\r\n\r\n  attackDamageOffset: stats.attackDamageOffset * modifier,\r\n  attackDamageModifier: stats.attackDamageModifier * modifier,\r\n  criticalChance: stats.criticalChance * modifier,\r\n  damageModifiers: {\r\n    flying: stats.damageModifiers.flying * modifier,\r\n    undead: stats.damageModifiers.undead * modifier,\r\n  },\r\n\r\n  queueConsolidationModifier: stats.queueConsolidationModifier * modifier,\r\n  queueValueSet: stats.queueValueSet,\r\n\r\n  goldModifier: stats.goldModifier * modifier,\r\n  maxInspirationOffset: stats.maxInspirationOffset * modifier,\r\n  consumableHealthGainOffset: stats.consumableHealthGainOffset * modifier,\r\n  minHealthOffset: stats.minHealthOffset * modifier,\r\n})\r\n","import { tStatusType, tStatusConfig } from './type'\r\nimport { ZERO_STATS } from '../Stats/constants'\r\n\r\nexport const STATUS_CONFIG: Record<tStatusType, tStatusConfig> = {\r\n  bleeding: {\r\n    name: 'Bleeding',\r\n    description: '-10 HP on your turn.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      healthRegeneration: -6,\r\n    },\r\n  },\r\n  burning: {\r\n    name: 'Burning',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      healthRegeneration: -6,\r\n    },\r\n  },\r\n  // TODO: Different cursed status' for different stats\r\n  cursed: {\r\n    name: 'Cursed',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n  },\r\n  frozen: {\r\n    name: 'Frozen',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      damageTakenModifier: 25,\r\n    },\r\n  },\r\n  poisoned: {\r\n    name: 'Poisoned',\r\n    description: '-5 HP on your turn and -5 to each stat.',\r\n    canStack: true,\r\n    isTemporary: false,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      vigor: -5,\r\n      strength: -5,\r\n      intelligence: -5,\r\n      dexterity: -5,\r\n      charisma: -5,\r\n      healthRegeneration: -3,\r\n    },\r\n  },\r\n  // TODO: Shocked status\r\n  shocked: {\r\n    name: 'Shocked',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n  },\r\n  stunned: {\r\n    name: 'Stunned',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 4,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueConsolidationModifier: -1,\r\n    },\r\n  },\r\n  // TODO: Wet Status\r\n  wet: {\r\n    name: 'Wet',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n  },\r\n  'armor-up': {\r\n    name: 'Armor Up',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      armor: 5,\r\n    },\r\n  },\r\n  'attack-up': {\r\n    name: 'Attack Up',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      attackDamageOffset: 5,\r\n    },\r\n  },\r\n  'evade-up': {\r\n    name: 'Evade Up',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      evasion: 15,\r\n    },\r\n  },\r\n  'resistance-up': {\r\n    name: 'Resistance Up',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      resistance: 5,\r\n    },\r\n  },\r\n  'speed-up': {\r\n    name: 'Speed Up',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      agility: 15,\r\n    },\r\n  },\r\n  'armor-down': {\r\n    name: 'Armor Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      armor: -5,\r\n    },\r\n  },\r\n  'attack-down': {\r\n    name: 'Attack Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      attackDamageOffset: -5,\r\n    },\r\n  },\r\n  'evade-down': {\r\n    name: 'Evade Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      evasion: -15,\r\n    },\r\n  },\r\n  'resistance-down': {\r\n    name: 'Resistance Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      resistance: -5,\r\n    },\r\n  },\r\n  'speed-down': {\r\n    name: 'Speed Down',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      agility: -15,\r\n    },\r\n  },\r\n  rushed: {\r\n    name: 'Rushed',\r\n    description: 'Bring to front of queue.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 0,\r\n    },\r\n  },\r\n  interrupted: {\r\n    name: 'Interrupted',\r\n    description: 'Set back 70 unites.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 70,\r\n    },\r\n  },\r\n  reset: {\r\n    name: 'Reset',\r\n    description: 'Set back 100 units.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n      queueValueSet: 100,\r\n    },\r\n  },\r\n  evasive: {\r\n    name: 'Evasive',\r\n    description: 'Non-perfect attacks will miss when targeting this character.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n  },\r\n  resilient: {\r\n    name: 'Resilient',\r\n    description: '',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n  },\r\n  protected: {\r\n    name: 'Protected',\r\n    description: 'Negate the next bit of damage.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: -1,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n  },\r\n  targeted: {\r\n    name: 'Targeted',\r\n    description: 'All enemies will attack this player.',\r\n    canStack: false,\r\n    isTemporary: true,\r\n    duration: 6,\r\n    stats: {\r\n      ...ZERO_STATS,\r\n    },\r\n  },\r\n}\r\n","export const noneg = (value: number) => (value > 0 ? value : 0)\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const SMASH: tSkill = {\r\n  id: v4(),\r\n  name: 'Smash',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const SHOCKWAVE: tSkill = {\r\n  id: v4(),\r\n  name: 'Shockwave',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0.5,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 4,\r\n  offset: -10,\r\n  perfectSplash: true,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { tWeapon } from '../../type'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\nimport { SMASH } from '../../../Skill/objects/smash'\r\nimport { SHOCKWAVE } from '../../../Skill/objects/shockwave'\r\n\r\nexport const BLACKSMITHS_HAMMER = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Blacksmith's Hammer`,\r\n  itemType: 'weapon',\r\n  type: 'blunt',\r\n  rarity: 'common',\r\n  stat: 'strength',\r\n  twoHand: false,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'melee', value: 10 },\r\n  skills: [SMASH, SHOCKWAVE],\r\n  immunities: [],\r\n  stats: ZERO_STATS,\r\n})\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const SHOT: tSkill = {\r\n  id: v4(),\r\n  name: 'Shot',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const SNIPE_SHOT: tSkill = {\r\n  id: v4(),\r\n  name: 'Snipe Shot',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: -10,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const SURGE: tSkill = {\r\n  id: v4(),\r\n  name: 'Surge',\r\n  damageModifier: 0.8,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const AREA_BLAST: tSkill = {\r\n  id: v4(),\r\n  name: 'Area Blast',\r\n  damageModifier: 0.5,\r\n  splashDamageModifier: 0,\r\n  targetType: 'group',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: -5,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const ALTO: tSkill = {\r\n  id: v4(),\r\n  name: 'Alto',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { tSkill } from '../type'\r\n\r\nexport const DAZZLE: tSkill = {\r\n  id: v4(),\r\n  name: 'Dazzle',\r\n  damageModifier: 0.5,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: -5,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['stunned'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const STUN_ATTACK: tSkill = {\r\n  id: v4(),\r\n  name: 'Stun Attack',\r\n  damageModifier: 0.5,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: -10,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['stunned'],\r\n}\r\n\r\nexport const DAZE = {\r\n  ...STUN_ATTACK,\r\n  name: 'Daze',\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const PIERCING_BLOW: tSkill = {\r\n  id: v4(),\r\n  name: 'Piercing Blow',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const SPREAD_SHOT: tSkill = {\r\n  id: v4(),\r\n  name: 'Spread Shot',\r\n  damageModifier: 0.5,\r\n  splashDamageModifier: 0,\r\n  targetType: 'group',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: -5,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const PIN_DOWN: tSkill = {\r\n  id: v4(),\r\n  name: 'Pin Down',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: -10,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['speed-down'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const RITARDANDO: tSkill = {\r\n  id: v4(),\r\n  name: 'Ritardando',\r\n  damageModifier: 0.5,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 4,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['speed-down'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const SYMPHONY: tSkill = {\r\n  id: v4(),\r\n  name: 'Ritardando',\r\n  damageModifier: 0.5,\r\n  splashDamageModifier: 0,\r\n  targetType: 'group',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 4,\r\n  offset: -5,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const RUBATO: tSkill = {\r\n  id: v4(),\r\n  name: 'Rubato',\r\n  damageModifier: 0.5,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: false,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: -10,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['reset'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const PROTECT: tSkill = {\r\n  id: v4(),\r\n  name: 'Protect',\r\n  damageModifier: 0,\r\n  splashDamageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['protected'],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const TIME_JUMP: tSkill = {\r\n  id: v4(),\r\n  name: 'Time Jump',\r\n  damageModifier: 0,\r\n  splashDamageModifier: 0,\r\n  targetType: 'ally',\r\n  damage: false,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: -5,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['rushed'],\r\n}\r\n","import { tCharacterClass } from '../Character/type'\r\nimport { tWeapon } from './type'\r\nimport { BLACKSMITHS_HAMMER } from './objects/blunt/blacksmiths_hammer'\r\nimport { HUNTING_BOW } from './objects/bow/hunting_bow'\r\nimport { SCHOLARS_BOOK } from './objects/tome/scholars_book'\r\nimport { SIMPLE_LUTE } from './objects/lute/simple_lute'\r\nimport { ALL_BLUNT } from './objects/blunt'\r\nimport { ALL_BOWS } from './objects/bow'\r\nimport { ALL_LUTES } from './objects/lute'\r\nimport { ALL_TOMES } from './objects/tome'\r\n\r\nexport const CLASS_WEAPONS: Record<tCharacterClass, tWeapon> = {\r\n  blacksmith: BLACKSMITHS_HAMMER(),\r\n  hunter: HUNTING_BOW(),\r\n  scholar: SCHOLARS_BOOK(),\r\n  bard: SIMPLE_LUTE(),\r\n  enemy: BLACKSMITHS_HAMMER(),\r\n}\r\nexport const ALL_WEAPONS = () => [\r\n  ...ALL_BLUNT(),\r\n  ...ALL_BOWS(),\r\n  ...ALL_LUTES(),\r\n  ...ALL_TOMES(),\r\n]\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { SHOT } from '../../../Skill/objects/shot'\r\nimport { SNIPE_SHOT } from '../../../Skill/objects/snipe_shot'\r\n\r\nexport const HUNTING_BOW = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Hunting Bow`,\r\n  itemType: 'weapon',\r\n  type: 'bow',\r\n  rarity: 'common',\r\n  stat: 'dexterity',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'ranged', value: 6 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    evasion: 3,\r\n  },\r\n  skills: [SHOT, SNIPE_SHOT],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { SURGE } from '../../../Skill/objects/surge'\r\nimport { AREA_BLAST } from '../../../Skill/objects/area_blast'\r\n\r\nexport const SCHOLARS_BOOK = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Scholar's Book`,\r\n  itemType: 'weapon',\r\n  type: 'tome',\r\n  rarity: 'common',\r\n  stat: 'intelligence',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'magic', range: 'ranged', value: 6 },\r\n  stats: { ...ZERO_STATS },\r\n  skills: [SURGE, AREA_BLAST],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { ALTO } from '../../../Skill/objects/alto'\r\nimport { DAZZLE } from '../../../Skill/objects/dazzle'\r\n\r\nexport const SIMPLE_LUTE = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Simple Lute`,\r\n  itemType: 'weapon',\r\n  type: 'lute',\r\n  rarity: 'common',\r\n  stat: 'charisma',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'magic', range: 'ranged', value: 6 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    goldModifier: 12,\r\n  },\r\n  skills: [ALTO, DAZZLE],\r\n  immunities: [],\r\n})\r\n","import { MACE } from './mace'\r\nimport { WAR_PICK } from './war_pick'\r\nimport { CRUDE_CLUB } from './crude_club'\r\nimport { tWeapon } from '../../type'\r\n\r\nexport const ALL_BLUNT = (): tWeapon[] => [MACE(), WAR_PICK(), CRUDE_CLUB()]\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { SMASH } from '../../../Skill/objects/smash'\r\nimport { STUN_ATTACK } from '../../../Skill/objects/stun_attack'\r\n\r\nexport const MACE = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Mace`,\r\n  itemType: 'weapon',\r\n  type: 'blunt',\r\n  rarity: 'common',\r\n  stat: 'strength',\r\n  twoHand: false,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'melee', value: 21 },\r\n  stats: ZERO_STATS,\r\n  skills: [SMASH, STUN_ATTACK],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { PIERCING_BLOW } from '../../../Skill/objects/piercing_blow'\r\n\r\nexport const WAR_PICK = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `War Pick`,\r\n  itemType: 'weapon',\r\n  type: 'blunt',\r\n  rarity: 'common',\r\n  stat: 'strength',\r\n  twoHand: false,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'melee', value: 14 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    agility: 5,\r\n    criticalChance: 5,\r\n  },\r\n  skills: [PIERCING_BLOW],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\nimport { SMASH } from '../../../Skill/objects/smash'\r\nimport { DAZE } from '../../../Skill/objects/stun_attack'\r\n\r\nexport const CRUDE_CLUB = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Crude Club`,\r\n  itemType: 'weapon',\r\n  type: 'blunt',\r\n  rarity: 'common',\r\n  stat: 'strength',\r\n  twoHand: false,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'melee', value: 12 },\r\n  skills: [SMASH, DAZE],\r\n  immunities: [],\r\n  stats: ZERO_STATS,\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { COMPOSITE_BOW } from './composite_bow'\r\nimport { CURVED_BOW } from './curved_bow'\r\n\r\nexport const ALL_BOWS = (): tWeapon[] => [COMPOSITE_BOW(), CURVED_BOW()]\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { SHOT } from '../../../Skill/objects/shot'\r\nimport { SPREAD_SHOT } from '../../../Skill/objects/spread_shot'\r\nimport { PIN_DOWN } from '../../../Skill/objects/pin_down'\r\n\r\nexport const COMPOSITE_BOW = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Composite Bow`,\r\n  itemType: 'weapon',\r\n  type: 'bow',\r\n  rarity: 'common',\r\n  stat: 'dexterity',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'ranged', value: 11 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    evasion: 4,\r\n  },\r\n  skills: [SHOT, SPREAD_SHOT, PIN_DOWN],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { SPREAD_SHOT } from '../../../Skill/objects/spread_shot'\r\nimport { SNIPE_SHOT } from '../../../Skill/objects/snipe_shot'\r\n\r\nexport const CURVED_BOW = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Curved Bow`,\r\n  itemType: 'weapon',\r\n  type: 'bow',\r\n  rarity: 'common',\r\n  stat: 'dexterity',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'physical', range: 'ranged', value: 11 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    evasion: 4,\r\n  },\r\n  skills: [SPREAD_SHOT, SNIPE_SHOT],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { ARCHLUTE } from './archlute'\r\nimport { BARBAT } from './barbat'\r\n\r\nexport const ALL_LUTES = (): tWeapon[] => [ARCHLUTE(), BARBAT()]\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { RITARDANDO } from '../../../Skill/objects/ritardando'\r\nimport { SYMPHONY } from '../../../Skill/objects/symphony'\r\nimport { RUBATO } from '../../../Skill/objects/rubato'\r\n\r\nexport const ARCHLUTE = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Archlute`,\r\n  itemType: 'weapon',\r\n  type: 'lute',\r\n  rarity: 'common',\r\n  stat: 'charisma',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'magic', range: 'ranged', value: 13 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    goldModifier: 10,\r\n  },\r\n  skills: [RITARDANDO, SYMPHONY, RUBATO],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { RITARDANDO } from '../../../Skill/objects/ritardando'\r\nimport { SYMPHONY } from '../../../Skill/objects/symphony'\r\nimport { DAZZLE } from '../../../Skill/objects/dazzle'\r\n\r\nexport const BARBAT = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Barbat`,\r\n  itemType: 'weapon',\r\n  type: 'lute',\r\n  rarity: 'common',\r\n  stat: 'charisma',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'magic', range: 'ranged', value: 9 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    goldModifier: 10,\r\n  },\r\n  skills: [RITARDANDO, SYMPHONY, DAZZLE],\r\n  immunities: [],\r\n})\r\n","import { APPRENTICES_TOME } from './apprentices_tome'\r\nimport { DUSTY_BOOK } from './dusty_book'\r\nimport { MAGES_TOME } from './mages_tome'\r\nimport { tWeapon } from '../../type'\r\n\r\nexport const ALL_TOMES = (): tWeapon[] => [\r\n  MAGES_TOME(),\r\n  APPRENTICES_TOME(),\r\n  DUSTY_BOOK(),\r\n]\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { SURGE } from '../../../Skill/objects/surge'\r\nimport { AREA_BLAST } from '../../../Skill/objects/area_blast'\r\nimport { PROTECT } from '../../../Skill/objects/protect'\r\nimport { TIME_JUMP } from '../../../Skill/objects/time_jump'\r\n\r\nexport const MAGES_TOME = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Mage's Tome`,\r\n  itemType: 'weapon',\r\n  type: 'tome',\r\n  rarity: 'common',\r\n  stat: 'intelligence',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'magic', range: 'ranged', value: 18 },\r\n  stats: { ...ZERO_STATS },\r\n  skills: [SURGE, AREA_BLAST, PROTECT, TIME_JUMP],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { SURGE } from '../../../Skill/objects/surge'\r\nimport { AREA_BLAST } from '../../../Skill/objects/area_blast'\r\nimport { PROTECT } from '../../../Skill/objects/protect'\r\nimport { TIME_JUMP } from '../../../Skill/objects/time_jump'\r\n\r\nexport const APPRENTICES_TOME = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Apprentice's Tome`,\r\n  itemType: 'weapon',\r\n  type: 'tome',\r\n  rarity: 'common',\r\n  stat: 'intelligence',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'magic', range: 'ranged', value: 13 },\r\n  stats: {\r\n    ...ZERO_STATS,\r\n  },\r\n  skills: [SURGE, AREA_BLAST, PROTECT, TIME_JUMP],\r\n  immunities: [],\r\n})\r\n","import { tWeapon } from '../../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../../Stats/constants'\r\nimport { SURGE } from '../../../Skill/objects/surge'\r\nimport { AREA_BLAST } from '../../../Skill/objects/area_blast'\r\nimport { PROTECT } from '../../../Skill/objects/protect'\r\n\r\nexport const DUSTY_BOOK = (): tWeapon => ({\r\n  id: v4(),\r\n  name: `Dusty Book`,\r\n  itemType: 'weapon',\r\n  type: 'tome',\r\n  rarity: 'common',\r\n  stat: 'intelligence',\r\n  twoHand: true,\r\n  breakable: false,\r\n  damage: { type: 'magic', range: 'ranged', value: 9 },\r\n  stats: { ...ZERO_STATS },\r\n  skills: [SURGE, AREA_BLAST, PROTECT],\r\n  immunities: [],\r\n})\r\n","import { tProcessedCharacter } from '../Character/type'\r\nimport { tBaseStats } from '../Stats/type'\r\nimport { getBaseStatValue } from '../Character/util'\r\nimport { DiceRoll } from 'rpg-dice-roller'\r\n\r\nexport const resolveCheck = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n  offset: number = 0,\r\n): boolean => {\r\n  const statValue = getBaseStatValue(character, key, offset)\r\n  const roll = new DiceRoll('1d100')\r\n  return roll.total <= statValue\r\n}\r\n\r\nexport const getChecksProbability = (\r\n  character: tProcessedCharacter,\r\n  checks: { key: keyof tBaseStats; offset: number }[],\r\n): number => {\r\n  const statValues = checks.map(({ key, offset }) =>\r\n    getBaseStatValue(character, key, offset),\r\n  )\r\n  const result = statValues.reduce((p, c) => {\r\n    return p * (c / 100)\r\n  }, 1)\r\n  return result\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const TAUNT: tSkill = {\r\n  id: v4(),\r\n  name: 'Taunt',\r\n  weaponStatOverride: 'vigor',\r\n  damageModifier: 0,\r\n  splashDamageModifier: 0,\r\n  targetType: 'self',\r\n  damage: false,\r\n  healing: false,\r\n  rolls: 2,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['targeted'],\r\n}\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { TAUNT } from '../../Skill/objects/taunt'\r\n\r\nexport const SIMPLE_IRON_SHIELD = (): tArmor => ({\r\n  id: v4(),\r\n  name: 'Simple Iron Shield',\r\n  itemType: 'armor',\r\n  resource: 'offhand',\r\n  rarity: 'common',\r\n  type: 'shield',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 1,\r\n  },\r\n  skills: [TAUNT],\r\n  immunities: [],\r\n})\r\n","import { tCharacterClass } from '../Character/type'\r\nimport { tArmor } from './type'\r\nimport { SIMPLE_IRON_SHIELD } from './objects/simple_iron_shield'\r\n\r\nexport const CLASS_ARMOR: Record<tCharacterClass, tArmor[]> = {\r\n  blacksmith: [SIMPLE_IRON_SHIELD()],\r\n  hunter: [],\r\n  scholar: [],\r\n  bard: [],\r\n  enemy: [],\r\n}\r\n","import { tSkill } from '../type'\r\nimport { v4 } from 'uuid'\r\n\r\nconst id = v4()\r\nexport const HEAL = (consumableId: string): tSkill => ({\r\n  id,\r\n  name: 'Heal',\r\n  damageModifier: 0,\r\n  splashDamageModifier: 0,\r\n  targetType: 'self',\r\n  rolls: 0,\r\n  offset: 0,\r\n  damage: false,\r\n  healing: true,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n  consumableId,\r\n})\r\n","import { tConsumable } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { HEAL } from '../../Skill/objects/heal'\r\n\r\nconst cid = v4()\r\nconst healingId = v4()\r\nexport const GODSBEARD = (): tConsumable => {\r\n  const id = v4()\r\n  return {\r\n    id,\r\n    cid,\r\n    name: 'Godsbeard',\r\n    itemType: 'consumable',\r\n    rarity: 'common',\r\n    skill: HEAL(id),\r\n  }\r\n}\r\n","import { GODSBEARD } from './objects/godsbeard'\r\nimport { tCharacterClass } from '../Character/type'\r\nimport { tConsumable } from './type'\r\n\r\nexport const CLASS_CONSUMABLES: Record<tCharacterClass, tConsumable[]> = {\r\n  blacksmith: [GODSBEARD()],\r\n  hunter: [GODSBEARD()],\r\n  scholar: [GODSBEARD()],\r\n  bard: [GODSBEARD()],\r\n  enemy: [],\r\n}\r\n","import { tConsumable, tConsumableStack } from './type'\r\n\r\nexport const considateConsumableListToStack = (\r\n  consumables: tConsumable[],\r\n): tConsumableStack[] => {\r\n  let stack: tConsumableStack[] = []\r\n  const updateStackItem = (cid: string) =>\r\n    stack.map((s) =>\r\n      s.consumable.cid === cid ? { ...s, count: s.count + 1 } : s,\r\n    )\r\n  const containsId = (cid: string) =>\r\n    stack.map((s) => s.consumable.cid).includes(cid)\r\n  consumables.forEach((c) => {\r\n    if (containsId(c.cid)) {\r\n      stack = updateStackItem(c.cid)\r\n    } else {\r\n      stack = [...stack, { consumable: c, count: 1 }]\r\n    }\r\n  })\r\n  return stack\r\n}\r\n","import { tCharacter, tProcessedCharacter, tCharacterClass } from './type'\r\nimport { tStats, tBaseStats } from '../Stats/type'\r\nimport { combineStats } from '../Stats/util'\r\nimport { tSkill } from '../Skill/type'\r\nimport { CLASS_STATS } from '../Stats/constants'\r\nimport { tStatusType } from '../Status/type'\r\nimport { STATUS_CONFIG } from '../Status/constants'\r\nimport { v4 } from 'uuid'\r\nimport { tDamage } from '../Damage/type'\r\nimport { noneg } from '../../util/noneg'\r\nimport { CLASS_WEAPONS } from '../Weapon/constants'\r\nimport { tWeapon } from '../Weapon/type'\r\nimport { tArmorResourceType, tArmor } from '../Armor/type'\r\nimport { resolveCheck } from '../Roll/util'\r\nimport { CLASS_ARMOR } from '../Armor/constants'\r\nimport { tCombatReward } from '../Other/types'\r\nimport { CLASS_CONSUMABLES } from '../Consumable/constants'\r\nimport { considateConsumableListToStack } from '../Consumable/util'\r\n\r\nexport const isCharacter = (obj: any): boolean =>\r\n  obj !== undefined && obj.isCharacter !== undefined\r\n\r\nexport const checkForProcessedCharacter = (character: tCharacter) => {\r\n  if ((character as tProcessedCharacter).processed) {\r\n    throw new Error('No Processed Characters Allowed')\r\n  }\r\n}\r\n\r\nexport const makeCharacter = (characterClass: tCharacterClass): tCharacter => {\r\n  return {\r\n    isCharacter: true,\r\n    id: v4(),\r\n    name: '',\r\n    partyId: '',\r\n    level: 0,\r\n    experience: 0,\r\n    class: characterClass,\r\n\r\n    stats: CLASS_STATS[characterClass],\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n\r\n    tags: [],\r\n\r\n    weapon: CLASS_WEAPONS[characterClass],\r\n    armor: CLASS_ARMOR[characterClass],\r\n    consumables: CLASS_CONSUMABLES[characterClass],\r\n\r\n    status: [],\r\n    immunities: [],\r\n    possibleRewards: [],\r\n  }\r\n}\r\n\r\nexport const getSkills = (character: tCharacter): tSkill[] => {\r\n  return [\r\n    ...character.weapon.skills,\r\n    ...character.armor.reduce((r, a) => [...r, ...a.skills], [] as tSkill[]),\r\n    ...considateConsumableListToStack(character.consumables).reduce(\r\n      (r, s) => [...r, s.consumable.skill],\r\n      [] as tSkill[],\r\n    ),\r\n  ]\r\n}\r\n\r\nexport const processCharacter = (\r\n  character: tCharacter,\r\n): tProcessedCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const stats: tStats = combineStats(\r\n    character.stats,\r\n    character.weapon.stats,\r\n    ...character.armor.map((a) => a.stats),\r\n    ...character.status.map((s) => s.stats),\r\n  )\r\n  const skills = getSkills(character)\r\n  const baseVigor = CLASS_STATS[character.class].vigor || character.stats.vigor\r\n  const startingHealth = 25 + Math.floor(0.1 * baseVigor)\r\n  const maxHealth =\r\n    Math.floor(\r\n      startingHealth + character.level + 0.1 * character.level * stats.vigor,\r\n    ) + stats.maxHealthOffset\r\n  const health = maxHealth - character.healthOffset\r\n  const maxInspiration = 3 + stats.maxInspirationOffset\r\n  const inspiration = maxInspiration + character.inspirationOffset\r\n\r\n  return {\r\n    processed: true,\r\n    ...character,\r\n\r\n    health,\r\n    maxHealth,\r\n    inspiration,\r\n    maxInspiration,\r\n\r\n    stats,\r\n    rawStats: character.stats,\r\n    skills,\r\n  }\r\n}\r\n\r\nexport const getBaseStatValue = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n  offset: number = 0,\r\n) => {\r\n  return character.stats[key] + offset\r\n}\r\n\r\nexport const getDamageResistance = (\r\n  character: tProcessedCharacter,\r\n  damage: tDamage,\r\n) => {\r\n  if (damage.type === 'physical') return character.stats.armor\r\n  if (damage.type === 'magic') return character.stats.resistance\r\n  return 0\r\n}\r\nexport const hasStatus = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.status.map((s) => s.type).includes(statusType)\r\n}\r\nexport const findStatus = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.status.find((s) => s.type === statusType)\r\n}\r\nexport const hasImmunity = (character: tCharacter, statusType: tStatusType) => {\r\n  return character.immunities.includes(statusType)\r\n}\r\nexport const getReflectedDamage = (target: tCharacter, rawDamage: tDamage) => {\r\n  return {\r\n    ...rawDamage,\r\n    value: target.stats.damageReflection[rawDamage.range],\r\n  }\r\n}\r\nexport const getRawDamage = (\r\n  source: tProcessedCharacter,\r\n  target: tProcessedCharacter,\r\n  rawDamage: tDamage,\r\n): tDamage => {\r\n  let damageModifier = 1\r\n  target.tags.forEach((tag) => {\r\n    if (source.stats.damageModifiers[tag]) {\r\n      damageModifier += source.stats.damageModifiers[tag]\r\n    }\r\n  })\r\n  return {\r\n    ...rawDamage,\r\n    value: rawDamage.value * damageModifier,\r\n  }\r\n}\r\n\r\nexport const commitDamage = (\r\n  character: tCharacter,\r\n  damage: tDamage,\r\n  ignoreResistance: boolean,\r\n): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const pc = processCharacter(character)\r\n  const resistance = ignoreResistance ? 0 : getDamageResistance(pc, damage)\r\n  const damageTakenModifier = pc.stats.damageTakenModifier\r\n  const rawDamageValue = damage.value * damageTakenModifier\r\n  if (hasStatus(character, 'protected')) {\r\n    return {\r\n      ...character,\r\n      status: character.status.filter((s) => s.type !== 'protected'),\r\n    }\r\n  }\r\n  return {\r\n    ...character,\r\n    healthOffset: character.healthOffset + noneg(rawDamageValue - resistance),\r\n  }\r\n}\r\n\r\nexport const decrementStatusDurations = (character: tCharacter): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    status: character.status\r\n      .map((status) => ({ ...status, duration: status.duration - 1 }))\r\n      .filter((status) => status.duration !== 0),\r\n  }\r\n}\r\nexport const addStatus = (\r\n  character: tCharacter,\r\n  type: tStatusType,\r\n): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  const statusConfig = STATUS_CONFIG[type]\r\n  const existingStatus = findStatus(character, type)\r\n  if (hasImmunity(character, type)) {\r\n    return character\r\n  }\r\n  if (existingStatus && !statusConfig.canStack) {\r\n    return character\r\n  }\r\n  if (existingStatus && statusConfig.canStack) {\r\n    return {\r\n      ...character,\r\n      status: [\r\n        ...character.status.filter((s) => s.type !== type),\r\n        { ...existingStatus, stack: existingStatus.stack + 1 },\r\n      ],\r\n    }\r\n  }\r\n  return {\r\n    ...character,\r\n    status: [\r\n      ...character.status,\r\n      {\r\n        type,\r\n        stats: statusConfig.stats,\r\n        duration: statusConfig.duration,\r\n        stack: 1,\r\n      },\r\n    ],\r\n  }\r\n}\r\n\r\nexport const addMultipleStatus = (\r\n  character: tCharacter,\r\n  types: tStatusType[],\r\n): tCharacter => {\r\n  return types.reduce((result, type) => {\r\n    return addStatus(result, type)\r\n  }, character)\r\n}\r\n\r\nexport const removeTemporaryStatus = (character: tCharacter): tCharacter => {\r\n  checkForProcessedCharacter(character)\r\n  return {\r\n    ...character,\r\n    status: character.status.filter((s) => {\r\n      const config = STATUS_CONFIG[s.type]\r\n      return !config.isTemporary\r\n    }),\r\n  }\r\n}\r\n\r\nexport const equipArmor = (\r\n  character: tCharacter,\r\n  armor: tArmor,\r\n): { character: tCharacter; armor: tArmor | undefined } => {\r\n  checkForProcessedCharacter(character)\r\n  const existingArmor = character.armor.find(\r\n    (a) => a.resource === armor.resource,\r\n  )\r\n  return {\r\n    character: {\r\n      ...character,\r\n      armor: existingArmor\r\n        ? [...character.armor.filter((a) => a.id !== existingArmor.id), armor]\r\n        : [...character.armor, armor],\r\n    },\r\n    armor: existingArmor,\r\n  }\r\n}\r\n\r\nexport const unequipArmor = (\r\n  character: tCharacter,\r\n  resource: tArmorResourceType,\r\n): { character: tCharacter; armor: tArmor | undefined } => {\r\n  checkForProcessedCharacter(character)\r\n  const armor = character.armor.find((a) => a.resource === resource)\r\n  return {\r\n    character: {\r\n      ...character,\r\n      armor: character.armor.filter((a) => a.resource !== resource),\r\n    },\r\n    armor,\r\n  }\r\n}\r\n\r\nexport const equipWeapon = (\r\n  character: tCharacter,\r\n  weapon: tWeapon,\r\n): { character: tCharacter; weapon: tWeapon | undefined } => {\r\n  const existingWeapon = character.weapon\r\n  return {\r\n    character: {\r\n      ...character,\r\n      weapon,\r\n    },\r\n    weapon: existingWeapon,\r\n  }\r\n}\r\n\r\n// DO NOT USE\r\nexport const unequipWeapon = (\r\n  character: tCharacter,\r\n): { character: tCharacter; weapon: tWeapon | undefined } => {\r\n  const existingWeapon = character.weapon\r\n  return {\r\n    character: {\r\n      ...character,\r\n      // weapon: undefined\r\n    },\r\n    weapon: existingWeapon,\r\n  }\r\n}\r\n\r\nexport const getRewardsFromCharacter = (\r\n  character: tProcessedCharacter,\r\n  checkedCharacter: tProcessedCharacter,\r\n): tCombatReward[] => {\r\n  let index: number | undefined = undefined\r\n  character.possibleRewards.forEach((rewards, i) => {\r\n    const luckReslt = resolveCheck(checkedCharacter, 'luck')\r\n    if (luckReslt) {\r\n      index = i\r\n    }\r\n  })\r\n  if (index !== undefined) {\r\n    return character.possibleRewards[index]\r\n      ? [character.possibleRewards[index]]\r\n      : []\r\n  }\r\n  return []\r\n}\r\n","export const getRandom = <T>(items: T[]) =>\r\n  items[Math.floor(Math.random() * items.length)]\r\n","import { tSkill } from '../../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const BITE: tSkill = {\r\n  id: v4(),\r\n  name: 'Bite',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const ADVENTURE_BOOTS = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Adventure Boots`,\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 3,\r\n    evasion: 4,\r\n    agility: 3,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const EXPLORERS_BOOTS = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Explorer's Boots`,\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  stat: 'vigor',\r\n\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 2,\r\n    evasion: 3,\r\n    agility: 2,\r\n  },\r\n\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const EXPLORERS_HAT = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Explorer's Hat`,\r\n  itemType: 'armor',\r\n  resource: 'head',\r\n  rarity: 'common',\r\n  type: 'hat',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    resistance: 3,\r\n    evasion: 3,\r\n    dexterity: 2,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const FUR_BOOTS = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Fur Boots`,\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 2,\r\n    resistance: 2,\r\n    healthRegeneration: 1,\r\n    vigor: 4,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { ADVENTURE_BOOTS } from './adventure_boots'\r\nimport { ADVENTURE_CLOAK } from './adventure_cloak'\r\nimport { EXPLORERS_BOOTS } from './explorers_boots'\r\nimport { EXPLORERS_CLOAK } from './explorers_cloak'\r\nimport { EXPLORERS_HAT } from './explorers_hat'\r\nimport { FUR_ARMOR } from './fur_armor'\r\nimport { FUR_BOOTS } from './fur_boots'\r\nimport { PERFORMERS_BOOTS } from './performers_boots'\r\nimport { PERFORMERS_VEST } from './performers_vest'\r\nimport { SIMPLE_IRON_SHIELD } from './simple_iron_shield'\r\nimport { tArmor } from '../type'\r\n\r\nexport const ALL_ARMOR = (): tArmor[] => [\r\n  ADVENTURE_BOOTS(),\r\n  ADVENTURE_CLOAK(),\r\n\r\n  EXPLORERS_BOOTS(),\r\n  EXPLORERS_CLOAK(),\r\n  EXPLORERS_HAT(),\r\n\r\n  FUR_ARMOR(),\r\n  FUR_BOOTS(),\r\n\r\n  PERFORMERS_BOOTS(),\r\n  PERFORMERS_VEST(),\r\n\r\n  SIMPLE_IRON_SHIELD(),\r\n]\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const ADVENTURE_CLOAK = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Adventure Cloak`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'magic-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 5,\r\n    resistance: 5,\r\n    dexterity: 4,\r\n    charisma: -3,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const EXPLORERS_CLOAK = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Explorer's Cloak`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'magic-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 3,\r\n    resistance: 6,\r\n    evasion: 6,\r\n    dexterity: 3,\r\n    charisma: -3,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const FUR_ARMOR = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Fur Armor`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'cloth-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 5,\r\n    resistance: 5,\r\n    maxHealthOffset: 5,\r\n    healthRegeneration: 2,\r\n    vigor: 4,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const PERFORMERS_BOOTS = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Performer's Boots`,\r\n  itemType: 'armor',\r\n  resource: 'feet',\r\n  rarity: 'common',\r\n  type: 'footwear',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 2,\r\n    resistance: 3,\r\n    dexterity: -3,\r\n    charisma: 3,\r\n    luck: 3,\r\n  },\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import { tArmor } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS } from '../../Stats/constants'\r\n\r\nexport const PERFORMERS_VEST = (): tArmor => ({\r\n  id: v4(),\r\n  name: `Performer's Vest`,\r\n  itemType: 'armor',\r\n  resource: 'body',\r\n  rarity: 'uncommon',\r\n  type: 'cloth-armor',\r\n  stat: 'vigor',\r\n  stats: {\r\n    ...ZERO_STATS,\r\n    armor: 6,\r\n    resistance: 6,\r\n    dexterity: -4,\r\n    charisma: 4,\r\n    luck: 4,\r\n  },\r\n\r\n  skills: [],\r\n  immunities: [],\r\n})\r\n","import Wolf from '../../../icons/svg/lorc/wolf-head.svg'\r\nimport { tCharacter } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS, BASE_C_STATS } from '../../Stats/constants'\r\nimport { BITE } from '../../Skill/objects/enemy/bite'\r\nimport { getRandom } from '../../../util'\r\nimport { ALL_WEAPONS } from '../../Weapon/constants'\r\nimport { ALL_ARMOR } from '../../Armor/objects'\r\n\r\nexport const TIMBERWOLF = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: 'Timberwolf',\r\n    isCharacter: true,\r\n    icon: Wolf,\r\n    partyId: '',\r\n    level: 1,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      vigor: -80,\r\n      strength: 52,\r\n      intelligence: 40,\r\n      dexterity: 52,\r\n      charisma: 30,\r\n      agility: 65,\r\n      luck: 50,\r\n      armor: 0,\r\n      resistance: 0,\r\n      evasion: 10,\r\n      maxHealthOffset: -1,\r\n    },\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      id: v4(),\r\n      name: 'Wolf Fangs',\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'enemy',\r\n      stat: 'dexterity',\r\n      twoHand: true,\r\n      breakable: false,\r\n      damage: {\r\n        value: 7,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      stats: ZERO_STATS,\r\n      skills: [BITE],\r\n      immunities: [],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 4,\r\n        xp: 10,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 4,\r\n        xp: 10,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 19,\r\n        xp: 20,\r\n        items: [getRandom([...ALL_WEAPONS(), ...ALL_ARMOR()])],\r\n        consumables: [],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { tSkill } from '../../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const IMPALE: tSkill = {\r\n  id: v4(),\r\n  name: 'Impale',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 5,\r\n  offset: -5,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: ['bleeding'],\r\n}\r\n","import BeastMan from '../../../icons/svg/delapouite/orc-head.svg'\r\nimport { tCharacter } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS, BASE_C_STATS } from '../../Stats/constants'\r\nimport { IMPALE } from '../../Skill/objects/enemy/impale'\r\nimport { getRandom } from '../../../util'\r\nimport { ALL_WEAPONS } from '../../Weapon/constants'\r\nimport { ALL_ARMOR } from '../../Armor/objects'\r\n\r\nexport const BEASTMAN = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: 'Beastman',\r\n    isCharacter: true,\r\n    icon: BeastMan,\r\n    partyId: '',\r\n    level: 1,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      vigor: -80,\r\n      strength: 52,\r\n      intelligence: 40,\r\n      dexterity: 52,\r\n      charisma: 30,\r\n      agility: 60,\r\n      luck: 50,\r\n      armor: 2,\r\n      resistance: 0,\r\n      evasion: 10,\r\n    },\r\n    armor: [],\r\n    status: [],\r\n    consumables: [],\r\n    immunities: [],\r\n    weapon: {\r\n      id: v4(),\r\n      name: 'Beastman Spear',\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'spear',\r\n      stat: 'strength',\r\n      twoHand: true,\r\n      breakable: false,\r\n      damage: {\r\n        value: 8,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      stats: ZERO_STATS,\r\n      skills: [IMPALE],\r\n      immunities: [],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 6,\r\n        xp: 15,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 6,\r\n        xp: 15,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 1,\r\n        xp: 12,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 6,\r\n        xp: 15,\r\n        items: [getRandom(ALL_WEAPONS())],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 19,\r\n        xp: 20,\r\n        items: [getRandom([...ALL_WEAPONS(), ...ALL_ARMOR()])],\r\n        consumables: [],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { tSkill } from '../../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const SLAP: tSkill = {\r\n  id: v4(),\r\n  name: 'Slap',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: [],\r\n}\r\n","import Imp from '../../../icons/svg/lorc/imp-laugh.svg'\r\nimport { tCharacter } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS, BASE_C_STATS } from '../../Stats/constants'\r\nimport { SLAP } from '../../Skill/objects/enemy/slap'\r\nimport { getRandom } from '../../../util'\r\nimport { ALL_WEAPONS } from '../../Weapon/constants'\r\nimport { ALL_ARMOR } from '../../Armor/objects'\r\n\r\nexport const VALE_IMP = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: 'Vale Imp',\r\n    isCharacter: true,\r\n    icon: Imp,\r\n    partyId: '',\r\n    level: 1,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      vigor: -80,\r\n      strength: 40,\r\n      intelligence: 40,\r\n      dexterity: 52,\r\n      charisma: 30,\r\n      agility: 76,\r\n      luck: 50,\r\n      armor: 0,\r\n      resistance: 0,\r\n      evasion: 10,\r\n    },\r\n    armor: [],\r\n    consumables: [],\r\n    status: [\r\n      {\r\n        duration: -1,\r\n        type: 'evasive',\r\n        stats: ZERO_STATS,\r\n        stack: 0,\r\n      },\r\n    ],\r\n    immunities: [],\r\n    weapon: {\r\n      id: v4(),\r\n      name: 'Imp Fists',\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'enemy',\r\n      stat: 'dexterity',\r\n      twoHand: true,\r\n      breakable: false,\r\n      damage: {\r\n        value: 6,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      stats: ZERO_STATS,\r\n      skills: [SLAP],\r\n      immunities: [],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 0,\r\n        xp: 15,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 1,\r\n        xp: 12,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 0,\r\n        xp: 15,\r\n        items: [getRandom(ALL_ARMOR())],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 0,\r\n        xp: 15,\r\n        items: [getRandom(ALL_WEAPONS())],\r\n        consumables: [],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { tSkill } from '../../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const STING: tSkill = {\r\n  id: v4(),\r\n  name: 'Sting',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: [],\r\n}\r\n\r\nexport const INFECTIOUS_STING: tSkill = {\r\n  id: v4(),\r\n  name: 'Infectious Sting',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: -10,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['poisoned'],\r\n}\r\n","import Bee from '../../../icons/svg/lorc/bee.svg'\r\nimport { v4 } from 'uuid'\r\nimport { tCharacter } from '../type'\r\nimport { ZERO_STATS, BASE_C_STATS } from '../../Stats/constants'\r\nimport { STING, INFECTIOUS_STING } from '../../Skill/objects/enemy/sting'\r\nimport { getRandom } from '../../../util'\r\nimport { ALL_ARMOR } from '../../Armor/objects'\r\nimport { GODSBEARD } from '../../Consumable/objects/godsbeard'\r\n\r\nexport const BEE = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: 'Bee',\r\n    isCharacter: true,\r\n    icon: Bee,\r\n    partyId: '',\r\n    level: 1,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      vigor: -80,\r\n      strength: 30,\r\n      intelligence: 30,\r\n      dexterity: 52,\r\n      charisma: 30,\r\n      agility: 80,\r\n      luck: 0,\r\n      armor: 0,\r\n      resistance: 0,\r\n      evasion: 17,\r\n      maxHealthOffset: -4,\r\n    },\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      id: v4(),\r\n      name: 'Bee Stinger',\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'enemy',\r\n      stat: 'dexterity',\r\n      twoHand: true,\r\n      breakable: false,\r\n      damage: {\r\n        value: 12,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      stats: ZERO_STATS,\r\n      skills: [STING, INFECTIOUS_STING],\r\n      immunities: [],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 1,\r\n        xp: 12,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 1,\r\n        xp: 12,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 1,\r\n        xp: 12,\r\n        items: [getRandom(ALL_ARMOR())],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 1,\r\n        xp: 12,\r\n        items: [],\r\n        consumables: [GODSBEARD()],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { tSkill } from '../../type'\r\nimport { v4 } from 'uuid'\r\n\r\nexport const STAB: tSkill = {\r\n  id: v4(),\r\n  name: 'Stab',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 3,\r\n  offset: 0,\r\n  perfectSplash: false,\r\n  perfectPierce: true,\r\n  perfectStatus: ['bleeding'],\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Bandit from '../../../icons/svg/delapouite/bandit.svg'\r\nimport { tCharacter } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS, BASE_C_STATS } from '../../Stats/constants'\r\nimport { EXPLORERS_BOOTS } from '../../Armor/objects/explorers_boots'\r\nimport { EXPLORERS_HAT } from '../../Armor/objects/explorers_hat'\r\nimport { ALL_ARMOR } from '../../Armor/objects'\r\nimport { ALL_WEAPONS } from '../../Weapon/constants'\r\nimport { STAB } from '../../Skill/objects/enemy/stab'\r\n\r\nexport const BANDIT = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: 'Bandit',\r\n    isCharacter: true,\r\n    icon: Bandit,\r\n    partyId: '',\r\n    level: 2,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      strength: 76,\r\n      vigor: 50,\r\n      intelligence: 40,\r\n      dexterity: 52,\r\n      charisma: 72,\r\n      agility: 61,\r\n      luck: 50,\r\n      armor: 4,\r\n      resistance: 0,\r\n      evasion: 10,\r\n      maxHealthOffset: -20,\r\n    },\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      id: v4(),\r\n      name: 'Buccaneer Dagger',\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'dagger',\r\n      stat: 'strength',\r\n      twoHand: false,\r\n      breakable: false,\r\n      damage: {\r\n        value: 12,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      stats: ZERO_STATS,\r\n      skills: [STAB],\r\n      immunities: [],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 1,\r\n        xp: 12,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [EXPLORERS_BOOTS()],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [EXPLORERS_HAT()],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 80,\r\n        xp: 20,\r\n        items: [getRandom(ALL_ARMOR())],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 80,\r\n        xp: 20,\r\n        items: [getRandom(ALL_ARMOR()), getRandom(ALL_WEAPONS())],\r\n        consumables: [],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import Icon from '../../../icons/svg/delapouite/pirate-captain.svg'\r\nimport { tCharacter } from '../type'\r\nimport { ZERO_STATS, BASE_C_STATS } from '../../Stats/constants'\r\nimport { v4 } from 'uuid'\r\nimport { STAB } from '../../Skill/objects/enemy/stab'\r\nimport { ADVENTURE_BOOTS } from '../../Armor/objects/adventure_boots'\r\nimport { FUR_BOOTS } from '../../Armor/objects/fur_boots'\r\nimport { getRandom } from '../../../util'\r\nimport { ALL_ARMOR } from '../../Armor/objects'\r\nimport { ALL_WEAPONS } from '../../Weapon/constants'\r\n\r\nexport const BUCCANEER = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: 'Buccaneer',\r\n    isCharacter: true,\r\n    icon: Icon,\r\n    partyId: '',\r\n    level: 4,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      strength: 52,\r\n      vigor: 66,\r\n      intelligence: 46,\r\n      dexterity: 78,\r\n      charisma: 64,\r\n      agility: 78,\r\n      luck: 50,\r\n      armor: 1,\r\n      resistance: 0,\r\n      evasion: 20,\r\n      maxHealthOffset: -31,\r\n    },\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      id: v4(),\r\n      name: 'Buccaneer Dagger',\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'dagger',\r\n      stat: 'strength',\r\n      twoHand: false,\r\n      breakable: false,\r\n      damage: {\r\n        value: 12,\r\n        range: 'melee',\r\n        type: 'physical',\r\n      },\r\n      stats: ZERO_STATS,\r\n      skills: [STAB],\r\n      immunities: [],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [ADVENTURE_BOOTS()],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [FUR_BOOTS()],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 80,\r\n        xp: 20,\r\n        items: [getRandom(ALL_ARMOR()), getRandom(ALL_WEAPONS())],\r\n        consumables: [],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { tSkill } from '../../type'\r\n\r\nexport const TORCH: tSkill = {\r\n  id: v4(),\r\n  name: 'Torch',\r\n  damageModifier: 1,\r\n  splashDamageModifier: 0,\r\n  targetType: 'single',\r\n  damage: true,\r\n  healing: false,\r\n  rolls: 4,\r\n  offset: -10,\r\n  perfectSplash: false,\r\n  perfectPierce: false,\r\n  perfectStatus: ['burning'],\r\n}\r\n","import { getRandom } from '../../../util'\r\nimport Cultist from '../../../icons/svg/lorc/cowled.svg'\r\nimport { tCharacter } from '../type'\r\nimport { v4 } from 'uuid'\r\nimport { ZERO_STATS, BASE_C_STATS } from '../../Stats/constants'\r\nimport { EXPLORERS_BOOTS } from '../../Armor/objects/explorers_boots'\r\nimport { EXPLORERS_HAT } from '../../Armor/objects/explorers_hat'\r\nimport { ALL_ARMOR } from '../../Armor/objects'\r\nimport { ALL_WEAPONS } from '../../Weapon/constants'\r\nimport { TORCH } from '../../Skill/objects/enemy/torch'\r\nimport { IMPALE } from '../../Skill/objects/enemy/impale'\r\n\r\nexport const CULTIST = (): tCharacter => {\r\n  return {\r\n    id: v4(),\r\n    name: 'Cultist',\r\n    isCharacter: true,\r\n    icon: Cultist,\r\n    partyId: '',\r\n    level: 1,\r\n    experience: 0,\r\n    class: 'enemy',\r\n    healthOffset: 0,\r\n    inspirationOffset: 0,\r\n    tags: [],\r\n    stats: {\r\n      ...BASE_C_STATS,\r\n      strength: 50,\r\n      vigor: 50,\r\n      intelligence: 75,\r\n      dexterity: 52,\r\n      charisma: 72,\r\n      agility: 70,\r\n      luck: 50,\r\n      armor: 1,\r\n      resistance: 4,\r\n      evasion: 15,\r\n      maxHealthOffset: -19,\r\n    },\r\n    armor: [],\r\n    consumables: [],\r\n    status: [],\r\n    immunities: [],\r\n    weapon: {\r\n      id: v4(),\r\n      name: 'Cultist Torch',\r\n      itemType: 'weapon',\r\n      rarity: 'common',\r\n      type: 'magic-staff',\r\n      stat: 'intelligence',\r\n      twoHand: true,\r\n      breakable: false,\r\n      damage: {\r\n        value: 14,\r\n        range: 'melee',\r\n        type: 'magic',\r\n      },\r\n      stats: ZERO_STATS,\r\n      skills: [TORCH, IMPALE],\r\n      immunities: [],\r\n    },\r\n    possibleRewards: [\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 1,\r\n        xp: 12,\r\n        items: [],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [EXPLORERS_BOOTS()],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 20,\r\n        xp: 20,\r\n        items: [EXPLORERS_HAT()],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 80,\r\n        xp: 20,\r\n        items: [getRandom(ALL_ARMOR())],\r\n        consumables: [],\r\n      },\r\n      {\r\n        gold: 80,\r\n        xp: 20,\r\n        items: [getRandom(ALL_ARMOR()), getRandom(ALL_WEAPONS())],\r\n        consumables: [],\r\n      },\r\n    ],\r\n  }\r\n}\r\n","import { v4 } from 'uuid'\r\nimport { tCharacter } from '../Character/type'\r\nimport { TIMBERWOLF } from '../Character/enemies/timberwolf'\r\nimport { BEASTMAN } from '../Character/enemies/beastman'\r\nimport { VALE_IMP } from '../Character/enemies/vale_imp'\r\nimport { BEE } from '../Character/enemies/bee'\r\nimport { BANDIT } from '../Character/enemies/bandit'\r\nimport { BUCCANEER } from '../Character/enemies/buccaneer'\r\nimport { CULTIST } from '../Character/enemies/cultist'\r\n\r\nexport const PLAYER_PARTY_ID = v4()\r\n\r\nexport const ENEMY_COMBOS_BY_LEVEL: Record<number, tCharacter[][]> = {\r\n  0: [\r\n    [TIMBERWOLF(), TIMBERWOLF(), TIMBERWOLF()],\r\n    [TIMBERWOLF(), BEASTMAN()],\r\n    [BEASTMAN(), BEASTMAN()],\r\n    [VALE_IMP(), TIMBERWOLF()],\r\n    [VALE_IMP()],\r\n    [BEE()],\r\n    [BEE(), BEASTMAN()],\r\n    [BEE(), TIMBERWOLF()],\r\n    [CULTIST()],\r\n  ],\r\n  1: [\r\n    [VALE_IMP(), TIMBERWOLF(), BEASTMAN()],\r\n    [BEASTMAN(), BEASTMAN(), BEASTMAN()],\r\n    [BEE(), BEE(), BEE()],\r\n    [VALE_IMP(), BEE(), BEASTMAN()],\r\n    [CULTIST()],\r\n  ],\r\n  2: [\r\n    [BEE(), BEE(), BEE()],\r\n    [VALE_IMP(), BEE(), BEE()],\r\n    [VALE_IMP(), VALE_IMP(), VALE_IMP()],\r\n    [BANDIT(), TIMBERWOLF()],\r\n    [BANDIT(), TIMBERWOLF(), TIMBERWOLF()],\r\n    [CULTIST()],\r\n  ],\r\n  3: [\r\n    [CULTIST(), CULTIST()],\r\n    [CULTIST(), BANDIT()],\r\n    [BANDIT(), BANDIT()],\r\n    [BUCCANEER()],\r\n    [BANDIT(), BEE(), BEE()],\r\n    [CULTIST(), BEE(), BEE()],\r\n    [CULTIST(), BANDIT(), BEE()],\r\n    [BANDIT(), VALE_IMP(), VALE_IMP()],\r\n    [CULTIST(), CULTIST(), VALE_IMP()],\r\n    [VALE_IMP(), CULTIST(), VALE_IMP()],\r\n    [BANDIT(), VALE_IMP(), BEE()],\r\n    [BUCCANEER(), VALE_IMP()],\r\n  ],\r\n  4: [\r\n    [CULTIST(), BANDIT(), VALE_IMP()],\r\n    [CULTIST(), CULTIST(), BEE()],\r\n    [CULTIST(), VALE_IMP(), CULTIST()],\r\n    [CULTIST(), CULTIST(), CULTIST()],\r\n    [BANDIT(), BANDIT(), VALE_IMP()],\r\n    [BANDIT(), BANDIT(), BEE()],\r\n    [BANDIT(), BANDIT(), BANDIT()],\r\n    [BUCCANEER(), BUCCANEER()],\r\n    [BUCCANEER(), VALE_IMP(), VALE_IMP()],\r\n  ],\r\n  5: [\r\n    [BANDIT(), BANDIT(), BANDIT()],\r\n    [BANDIT(), VALE_IMP(), BUCCANEER()],\r\n    [BUCCANEER(), VALE_IMP(), VALE_IMP()],\r\n    [BUCCANEER(), BUCCANEER(), BANDIT()],\r\n    [CULTIST(), CULTIST(), CULTIST()],\r\n    [BUCCANEER(), BUCCANEER(), BUCCANEER()],\r\n  ],\r\n}\r\n","import { tParty, tProcessedParty } from './type'\r\nimport {\r\n  checkForProcessedCharacter,\r\n  processCharacter,\r\n  getRewardsFromCharacter,\r\n} from '../Character/util'\r\nimport { tCharacter, tProcessedCharacter } from '../Character/type'\r\nimport { v4 } from 'uuid'\r\nimport { tCombatReward } from '../Other/types'\r\nimport { getRandom } from '../../util'\r\nimport { ENEMY_COMBOS_BY_LEVEL } from './constants'\r\n\r\nexport const isParty = (obj: any): boolean =>\r\n  obj !== undefined && obj.isParty !== undefined\r\n\r\nexport const checkForProcessedParty = (party: tParty) => {\r\n  if ((party as tProcessedParty).processed) {\r\n    throw new Error('No Processed Parties Allowed')\r\n  }\r\n  party.characters.forEach((character) => {\r\n    checkForProcessedCharacter(character)\r\n  })\r\n}\r\n\r\nexport const findCharacterInParty = <\r\n  T extends tParty = tParty,\r\n  R extends tCharacter = tCharacter\r\n>(\r\n  party: T,\r\n  id: string,\r\n): R | undefined => {\r\n  return (party.characters as R[]).find((c) => c.id === id)\r\n}\r\n\r\nexport const getOtherCharacters = (\r\n  party: tParty,\r\n  characterId: string,\r\n): tCharacter[] => party.characters.filter((c) => c.id !== characterId)\r\n\r\nexport const processParty = (party: tParty): tProcessedParty => {\r\n  checkForProcessedParty(party)\r\n  return {\r\n    ...party,\r\n    processed: true,\r\n    characters: party.characters.map((c) => ({\r\n      ...processCharacter(c),\r\n      partyId: party.id,\r\n    })),\r\n  }\r\n}\r\n\r\nexport const updateCharacter = (\r\n  party: tParty,\r\n  characterId: string,\r\n  updater: (character: tCharacter) => tCharacter,\r\n): tParty => {\r\n  checkForProcessedParty(party)\r\n  return {\r\n    ...party,\r\n    characters: party.characters.map((c) =>\r\n      c.id === characterId ? updater(c) : c,\r\n    ),\r\n  }\r\n}\r\n\r\nexport const makeParty = (level: number = 0): tParty => {\r\n  level = level > 4 ? 4 : level\r\n  return {\r\n    isParty: true,\r\n    id: v4(),\r\n    gold: 0,\r\n    items: [],\r\n    characters: getRandom(ENEMY_COMBOS_BY_LEVEL[level]),\r\n  }\r\n}\r\n\r\nexport const getRolledRewards = (\r\n  party: tProcessedParty,\r\n  checkedCharacter: tProcessedCharacter,\r\n): tCombatReward[] => {\r\n  return party.characters.reduce((r, character) => {\r\n    return [...r, ...getRewardsFromCharacter(character, checkedCharacter)]\r\n  }, [] as tCombatReward[])\r\n}\r\n\r\nexport const commitRewards = (\r\n  party: tParty,\r\n  rewards: tCombatReward,\r\n): tParty => {\r\n  checkForProcessedParty(party)\r\n  const goldMultiplier =\r\n    1 +\r\n    processParty(party).characters.reduce(\r\n      (r, c) => (r > c.stats.goldModifier ? r : c.stats.goldModifier),\r\n      0,\r\n    ) /\r\n      100\r\n  return {\r\n    ...party,\r\n    gold: party.gold + Math.floor(rewards.gold * goldMultiplier),\r\n    items: [...party.items, ...rewards.items],\r\n    characters: party.characters.map((c) => ({\r\n      ...c,\r\n      consumables: [...c.consumables, ...rewards.consumables],\r\n      experience: c.experience + rewards.xp,\r\n    })),\r\n  }\r\n}\r\n","import { useSelector } from 'react-redux'\r\nimport { StateCoreT, StateActionT, StateT } from '../types'\r\nimport { Dispatch } from 'redux'\r\nimport { makeReducer } from '../util'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { checkForProcessedParty, updateCharacter } from '../../game/Party/util'\r\nimport { tCharacter } from '../../game/Character/type'\r\nimport { makeCharacter } from '../../game/Character/util'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\n\r\nexport const UPDATE_PARTY = '@actions/parties/set-party'\r\nexport const UPSERT_CHARACTER = '@actions/parties/upsert-character'\r\nexport const DELETE_CHARACTER = '@actions/parties/delete-character'\r\nexport const UPSERT_ITEM = '@actions/parties/upsert-item'\r\nexport const DELETE_ITEM = '@actions/parties/delete-item'\r\nexport const UPSERT_MOD = '@actions/parties/upsert-mod'\r\nexport const DELETE_MOD = '@actions/parties/delete-mod'\r\n\r\nexport const actionCreators = {\r\n  updateParty: (party: tParty): StateActionT => {\r\n    return {\r\n      type: UPDATE_PARTY,\r\n      payload: {\r\n        party,\r\n      },\r\n    }\r\n  },\r\n  upsertCharacter: (character: tCharacter): StateActionT => {\r\n    return {\r\n      type: UPSERT_CHARACTER,\r\n      payload: {\r\n        character,\r\n      },\r\n    }\r\n  },\r\n  deleteCharacter: (characterId: string): StateActionT => {\r\n    return {\r\n      type: DELETE_CHARACTER,\r\n      payload: {\r\n        characterId,\r\n      },\r\n    }\r\n  },\r\n}\r\n\r\nexport const actions = {\r\n  updateParty: (party: tParty) => (dispatch: Dispatch) => {\r\n    checkForProcessedParty(party)\r\n    dispatch(actionCreators.updateParty(party))\r\n  },\r\n  upsertCharacter: (character: tCharacter) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.upsertCharacter(character))\r\n  },\r\n  deleteCharacter: (characterId: string) => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.deleteCharacter(characterId))\r\n  },\r\n}\r\n\r\nexport const core: StateCoreT<tParty> = {\r\n  [UPDATE_PARTY]: (state, action) => {\r\n    return {\r\n      ...action.payload.party,\r\n    }\r\n  },\r\n  [UPSERT_CHARACTER]: (state, action) => {\r\n    return updateCharacter(\r\n      state,\r\n      action.payload.character.id,\r\n      (c) => action.payload.character,\r\n    )\r\n  },\r\n  [DELETE_CHARACTER]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      characters: state.characters.filter(\r\n        (c) => c.id !== action.payload.characterId,\r\n      ),\r\n    }\r\n  },\r\n}\r\nconst jack = { ...makeCharacter('blacksmith'), name: 'Jack' }\r\nconst jim = { ...makeCharacter('bard'), name: 'Jim' }\r\nconst john = { ...makeCharacter('scholar'), name: 'Johnny' }\r\nexport const INITIAL_STATE: tParty = {\r\n  isParty: true,\r\n  id: PLAYER_PARTY_ID,\r\n  items: [],\r\n  gold: 0,\r\n  characters: [\r\n    {\r\n      ...jack,\r\n      // healthOffset: 30,\r\n    },\r\n    {\r\n      ...jim,\r\n      //healthOffset: 30\r\n    },\r\n    {\r\n      ...john,\r\n      //healthOffset: 30\r\n    },\r\n  ],\r\n}\r\nexport default makeReducer(core, INITIAL_STATE)\r\nexport const useParty = () => useSelector((state: StateT) => state.party)\r\nexport const usePartyActions = () =>\r\n  useActions(actions) as {\r\n    updateParty: (party: tParty) => void\r\n    upsertCharacter: (character: tCharacter) => void\r\n    deleteCharacter: (characterId: string) => void\r\n  }\r\n","import React, { useMemo, useContext, useState } from 'react'\r\nimport { usePartyActions, useParty } from '../../state/party'\r\nimport { tProcessedParty, tParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter, tCharacter } from '../../game/Character/type'\r\nimport {\r\n  processParty,\r\n  makeParty,\r\n  findCharacterInParty,\r\n} from '../../game/Party/util'\r\nimport {\r\n  checkForProcessedCharacter,\r\n  processCharacter,\r\n  makeCharacter,\r\n  equipArmor,\r\n  equipWeapon,\r\n  unequipArmor,\r\n} from '../../game/Character/util'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\n\r\nexport interface PartyContextT {\r\n  party: tProcessedParty\r\n  rawParty: tParty\r\n  activeCharacter: tProcessedCharacter\r\n  updateParty: (party: tParty) => void\r\n  upsertCharacter: (character: tCharacter) => void\r\n  deleteCharacter: (characterId: string) => void\r\n  findCharacter: (characterId: string) => tProcessedCharacter | undefined\r\n  findRawCharacter: (characterId: string) => tCharacter | undefined\r\n  setActiveCharacter: (character: tProcessedCharacter) => void\r\n  equipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n  unequipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n}\r\nconst defaultContextValue: PartyContextT = {\r\n  rawParty: makeParty(),\r\n  party: processParty(makeParty()),\r\n  activeCharacter: processCharacter(makeCharacter('blacksmith')),\r\n  updateParty: (party) => {},\r\n  upsertCharacter: (character) => {},\r\n  deleteCharacter: (characterId) => {},\r\n  findCharacter: (characterId) => undefined,\r\n  findRawCharacter: (characterId) => undefined,\r\n  setActiveCharacter: (character) => {},\r\n  equipItem: (characterId, item) => {},\r\n  unequipItem: (characterId, item) => {},\r\n}\r\nexport const PartyContext = React.createContext<PartyContextT>(\r\n  defaultContextValue,\r\n)\r\n\r\nexport interface PartyContextProviderPropsT {\r\n  children: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const PartyContextProvider = (props: PartyContextProviderPropsT) => {\r\n  const { children } = props\r\n  const actions = usePartyActions()\r\n  const rawParty = useParty()\r\n  const party = useMemo(() => processParty(rawParty), [rawParty])\r\n  const [activeCharacterId, setActiveCharacterId] = useState<string>(\r\n    party.characters[0].id,\r\n  )\r\n  const activeCharacter = useMemo(() => {\r\n    return party.characters.find(\r\n      (c) => c.id === activeCharacterId,\r\n    ) as tProcessedCharacter\r\n  }, [activeCharacterId, party.characters])\r\n  const setActiveCharacter = (character: tProcessedCharacter) =>\r\n    setActiveCharacterId(character.id)\r\n  const updateParty = (party: tParty) => {\r\n    actions.updateParty(party)\r\n  }\r\n  const upsertCharacter = (character: tCharacter) => {\r\n    if (!character) return\r\n    checkForProcessedCharacter(character)\r\n    actions.upsertCharacter(character)\r\n  }\r\n  const deleteCharacter = (characterId: string) => {\r\n    actions.deleteCharacter(characterId)\r\n  }\r\n  const findCharacter = (characterId: string) => {\r\n    return findCharacterInParty<tProcessedParty, tProcessedCharacter>(\r\n      party,\r\n      characterId,\r\n    )\r\n  }\r\n  const findRawCharacter = (characterId: string) => {\r\n    return findCharacterInParty(rawParty, characterId)\r\n  }\r\n\r\n  const equipItem = (characterId: string, item: tWeapon | tArmor) => {\r\n    const character = findRawCharacter(characterId)\r\n    if (!character) return\r\n    if (item.itemType === 'armor') {\r\n      const armor = item as tArmor\r\n      if (armor.resource === 'offhand' && character.weapon.twoHand) return\r\n      const result = equipArmor(character, armor)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.armor ? [result.armor] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n    if (item.itemType === 'weapon') {\r\n      const weapon = item as tWeapon\r\n      if (character.weapon.twoHand) {\r\n        if (character.armor.find((a) => a.resource === 'offhand')) {\r\n          return\r\n        }\r\n      }\r\n      const result = equipWeapon(character, weapon)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.weapon ? [result.weapon] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n  }\r\n  const unequipItem = (characterId: string, item: tWeapon | tArmor) => {\r\n    const character = findRawCharacter(characterId)\r\n    if (!character) return\r\n    if (item.itemType === 'armor') {\r\n      const armor = item as tArmor\r\n      const result = unequipArmor(character, armor.resource)\r\n      updateParty({\r\n        ...rawParty,\r\n        items: [\r\n          ...rawParty.items.filter((i) => i.id !== item.id),\r\n          ...(result.armor ? [result.armor] : []),\r\n        ],\r\n        characters: rawParty.characters.map((c) =>\r\n          c.id === result.character.id ? result.character : c,\r\n        ),\r\n      })\r\n    }\r\n    if (item.itemType === 'weapon') {\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PartyContext.Provider\r\n      value={{\r\n        party,\r\n        rawParty,\r\n        activeCharacter,\r\n        updateParty,\r\n        upsertCharacter,\r\n        deleteCharacter,\r\n        findCharacter,\r\n        findRawCharacter,\r\n        setActiveCharacter,\r\n        equipItem,\r\n        unequipItem,\r\n      }}\r\n    >\r\n      {children}\r\n    </PartyContext.Provider>\r\n  )\r\n}\r\n\r\nexport const usePartyContext = () => useContext(PartyContext)\r\n","import { ModalStylesT } from '.'\r\n\r\nexport interface ModalContextStateT {\r\n  isOpen: boolean\r\n  contents: JSX.Element | null\r\n  callback: ((payload?: any) => void) | null\r\n  payload: any | null\r\n  blocking: boolean\r\n  styles: ModalStylesT\r\n}\r\nexport const initialState: ModalContextStateT = {\r\n  isOpen: false,\r\n  contents: null,\r\n  callback: null,\r\n  payload: null,\r\n  blocking: false,\r\n  styles: {},\r\n}\r\n\r\nexport const OPEN = 'modalContext/OPEN'\r\nexport const CLOSE = 'modalContext/CLOSE'\r\nexport const SET_CONTENTS = 'modalContext/SET_CONTENTS'\r\nexport const SET_CALLBACK = 'modalContext/SET_CALLBACK'\r\nexport const SET_PAYLOAD = 'modalContext/SET_PAYLOAD'\r\nexport const SET_BLOCKING = 'modalContext/SET_BLOCKING'\r\nexport const SET_STYLE = 'modalContext/SET_STYLE'\r\n\r\nexport const actions = {\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => ({\r\n    type: OPEN,\r\n    contents,\r\n    styles,\r\n    blocking,\r\n    callback,\r\n  }),\r\n  close: () => ({ type: CLOSE }),\r\n  setPayload: (payload: any) => ({ type: SET_PAYLOAD, payload }),\r\n  setContents: (contents: JSX.Element | null) => ({\r\n    type: SET_CONTENTS,\r\n    contents,\r\n  }),\r\n  setCallback: (callback: (() => void) | null) => ({\r\n    type: SET_CALLBACK,\r\n    callback,\r\n  }),\r\n  setBlocking: (blocking: boolean) => ({ type: SET_BLOCKING, blocking }),\r\n  setStyles: (styles: ModalStylesT) => ({ type: SET_STYLE, styles }),\r\n}\r\n\r\nconst core: Record<\r\n  string,\r\n  (state: ModalContextStateT, action: any) => ModalContextStateT\r\n> = {\r\n  [OPEN]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    isOpen: true,\r\n    contents: action.contents ? action.contents : state.contents,\r\n    styles: action.styles ? action.styles : state.styles || {},\r\n    blocking: action.blocking || false,\r\n    callback: action.callback ? action.callback : state.callback,\r\n  }),\r\n  [CLOSE]: (state: ModalContextStateT) => ({\r\n    ...state,\r\n    isOpen: false,\r\n  }),\r\n  [SET_PAYLOAD]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    payload: action.payload,\r\n  }),\r\n  [SET_CONTENTS]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: null,\r\n    payload: null,\r\n    contents: action.contents,\r\n    blocking: false,\r\n    style: {},\r\n  }),\r\n  [SET_CALLBACK]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    callback: action.callback,\r\n  }),\r\n  [SET_BLOCKING]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    blocking: action.blocking,\r\n  }),\r\n  [SET_STYLE]: (state: ModalContextStateT, action: any) => ({\r\n    ...state,\r\n    styles: action.styles,\r\n  }),\r\n}\r\n\r\nexport const reducer = (\r\n  state: ModalContextStateT = initialState,\r\n  action: any,\r\n) => {\r\n  const coreFunction = core[action.type]\r\n  return coreFunction ? coreFunction(state, action) : state\r\n}\r\n","import React, { useContext, useReducer, useMemo, CSSProperties } from 'react'\r\nimport Modal from 'react-modal'\r\nimport { actions, reducer, initialState, ModalContextStateT } from './reducer'\r\n\r\nexport interface ModalContextT {\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => void\r\n  close: (payload?: any) => void\r\n  setPayload: (payload: any) => void\r\n  setBlocking: (blocking: boolean) => void\r\n  setContents: (contents: JSX.Element) => void\r\n  setCallback: (callback: (payload?: any) => void) => void\r\n  setStyles: (styles: ModalStylesT) => void\r\n}\r\nconst defaultContext: ModalContextT = {\r\n  open: () => null,\r\n  close: () => null,\r\n  setBlocking: () => null,\r\n  setPayload: () => null,\r\n  setContents: () => null,\r\n  setCallback: () => null,\r\n  setStyles: () => null,\r\n}\r\nexport const ModalContext = React.createContext<ModalContextT>(defaultContext)\r\nexport const useModalContext = () => useContext(ModalContext)\r\n\r\nexport interface ModalStylesT {\r\n  modal?: CSSProperties\r\n  overlay?: CSSProperties\r\n}\r\n\r\nconst getContextValue = (\r\n  state: ModalContextStateT,\r\n  dispatch: React.Dispatch<any>,\r\n) => ({\r\n  isOpen: state.isOpen,\r\n  open: (\r\n    contents?: JSX.Element,\r\n    styles?: ModalStylesT,\r\n    blocking?: boolean,\r\n    callback?: (payload?: any) => void,\r\n  ) => {\r\n    dispatch(actions.open(contents, styles, blocking, callback))\r\n  },\r\n  close: (payload?: any) => {\r\n    if (state.callback) state.callback(payload || state.payload)\r\n    dispatch(actions.close())\r\n  },\r\n  setPayload: (payload: any) => dispatch(actions.setPayload(payload)),\r\n  setContents: (contents: JSX.Element) =>\r\n    dispatch(actions.setContents(contents)),\r\n  setCallback: (callback: (payload?: any) => void) =>\r\n    dispatch(actions.setCallback(callback)),\r\n  setBlocking: (blocking: boolean) => dispatch(actions.setBlocking(blocking)),\r\n  setStyles: (styles: ModalStylesT) => dispatch(actions.setStyles(styles)),\r\n})\r\nModal.setAppElement('#root')\r\nexport interface ModalContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const ModalContextProvider = (props: ModalContextProviderPropsT) => {\r\n  const { children } = props\r\n  const reducerValue = useReducer(reducer, initialState)\r\n  const [state] = reducerValue\r\n  const context = useMemo(() => getContextValue(...reducerValue), [\r\n    reducerValue,\r\n  ])\r\n\r\n  return (\r\n    <ModalContext.Provider value={context}>\r\n      {children}\r\n      <Modal\r\n        isOpen={state.isOpen}\r\n        onRequestClose={() => {\r\n          if (!state.blocking) context.close()\r\n        }}\r\n        style={{\r\n          content: {\r\n            backgroundColor: '#111',\r\n            color: 'white',\r\n            width: 400,\r\n            margin: '0 auto',\r\n            bottom: 'unset',\r\n            borderColor: '#555',\r\n            ...state.styles.modal,\r\n          },\r\n          overlay: {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n            zIndex: 900,\r\n            ...state.styles.overlay,\r\n          },\r\n        }}\r\n      >\r\n        {state.contents || <div />}\r\n      </Modal>\r\n    </ModalContext.Provider>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport interface FlexContainerPropsT {\r\n  $direction?: 'row' | 'column' | 'column-reverse'\r\n  $full?: boolean\r\n}\r\nexport const FlexContainer = styled('div', (props: FlexContainerPropsT) => ({\r\n  display: 'flex',\r\n  flexDirection: props.$direction || 'row',\r\n  flex: props.$full ? 1 : 'default',\r\n}))\r\nexport const FullContainer = styled('div', () => ({\r\n  flex: 1,\r\n}))\r\n","import React from 'react'\r\nimport { styled, withStyle } from 'styletron-react'\r\nimport { animated, useSpring } from 'react-spring'\r\n\r\nexport interface ButtonPropsT {\r\n  $direction?: 'up' | 'down'\r\n}\r\nexport const Button = styled('button', (props: ButtonPropsT) => {\r\n  return {\r\n    cursor: 'pointer',\r\n    background: '#222',\r\n    boxShadow: 'inset 0px 0px 3px black',\r\n    textShadow: '0px 1px 3px black',\r\n    border: '1px solid rgba(255,255,255,0.2)',\r\n    color: 'rgba(255,255,255,1)',\r\n    ':hover': {\r\n      border: '1px solid rgba(255,255,255,0.4)',\r\n    },\r\n    ':active': {\r\n      outline: 'none',\r\n      border: '1px solid rgba(255,255,255,0.7)',\r\n    },\r\n    ':focus': {\r\n      outline: 'none',\r\n    },\r\n    padding: '10px 30px',\r\n  }\r\n})\r\n\r\nexport const RedButton = withStyle(Button, (props: ButtonPropsT) => {\r\n  return {\r\n    background:\r\n      'linear-gradient(0deg, rgba(157,0,0,1) 0%, rgba(110,0,0,1) 100%)',\r\n  }\r\n})\r\n\r\nexport const ConfirmButton = withStyle(Button, (props: ButtonPropsT) => {\r\n  const { $direction } = props\r\n  return {\r\n    // background: 'linear-gradient(0deg, rgba(157,0,0,1) 0%, rgba(110,0,0,1) 100%)',\r\n    // fontWeight: 'bold',\r\n    borderTop: $direction === 'down' ? 'none' : undefined,\r\n    borderBottom: $direction === 'up' ? 'none' : undefined,\r\n    padding: '10px 30px',\r\n    boxShadow: 'inset 0px 2px 8px black',\r\n    ':hover': {\r\n      borderTop: $direction === 'down' ? 'none' : undefined,\r\n      borderBottom: $direction === 'up' ? 'none' : undefined,\r\n    },\r\n    animationDirection: '1s',\r\n    animationIterationCount: 'infinite',\r\n    animationName: `\r\n      from: {\r\n        background: 'rgba(255,255,255,0.4)',\r\n      },\r\n\r\n      to: {\r\n        background: 'rgba(255,255,255,1)',\r\n      },\r\n    `,\r\n  }\r\n})\r\n\r\nexport const ConfirmButton2 = (props: any) => {\r\n  const styles = useSpring({\r\n    from: {\r\n      border: '1px solid rgba(255,255,255,0)',\r\n    },\r\n    to: async (next: any) => {\r\n      while (1) {\r\n        await next({\r\n          border: '1px solid rgba(255,255,255,0)',\r\n        })\r\n        await next({ border: '1px solid rgba(255,255,255,1)' })\r\n      }\r\n    },\r\n  })\r\n  return (\r\n    <animated.div style={styles}>\r\n      <ConfirmButton style={{ border: 'none' }}>{props.children}</ConfirmButton>\r\n    </animated.div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nexport interface IconPropsT {\r\n  src: string\r\n  size: number\r\n  fill?: string\r\n  style?: React.CSSProperties\r\n  shadow?: boolean\r\n  onClick?: () => void\r\n}\r\nexport const Icon = ({\r\n  src,\r\n  size,\r\n  style = {},\r\n  fill = 'white',\r\n  shadow,\r\n  onClick,\r\n}: IconPropsT) => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [svg, setSvg] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (src) {\r\n      fetch(src)\r\n        .then((res) => res.text())\r\n        .then((text) => setSvg(text))\r\n        .then(() => setLoading(false))\r\n    }\r\n  }, [src])\r\n\r\n  return !loading ? (\r\n    <div\r\n      className={`icon ${shadow ? 'shadow' : ''}`}\r\n      onClick={() => {\r\n        if (onClick) onClick()\r\n      }}\r\n      style={{ ...style, height: size, width: size, fill }}\r\n      dangerouslySetInnerHTML={{ __html: svg }}\r\n    />\r\n  ) : (\r\n    <div />\r\n  )\r\n}\r\n","import React, { useState, useLayoutEffect } from 'react'\r\nimport { v4 } from 'uuid'\r\n\r\nexport interface HoverChildrenT {\r\n  isHovering: boolean\r\n}\r\nexport interface HoverPropsT {\r\n  delay?: number\r\n  children: (props: HoverChildrenT) => JSX.Element\r\n}\r\nexport const Hover = (props: HoverPropsT) => {\r\n  const { delay = 500, children } = props\r\n  const [internalHovering, setInternalHovering] = useState<boolean>(false)\r\n  const [isHovering, setIsHovering] = useState<boolean>(false)\r\n  const [guid, setGuid] = useState<string>(v4())\r\n  useLayoutEffect(() => {\r\n    const action = async () => {\r\n      if (internalHovering) {\r\n        setTimeout(() => {\r\n          setGuid(v4())\r\n        }, delay)\r\n      }\r\n    }\r\n    action()\r\n  }, [internalHovering])\r\n  useLayoutEffect(() => {\r\n    if (internalHovering) {\r\n      setIsHovering(true)\r\n    }\r\n  }, [guid])\r\n  const onMouseEnter = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(true)\r\n  }\r\n  const onMouseLeave = (e: React.MouseEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setInternalHovering(false)\r\n    setIsHovering(false)\r\n  }\r\n  return (\r\n    <div onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\r\n      {children({ isHovering })}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Hover } from '../components/Hover'\r\n\r\nexport interface BoxContainerPropsT extends React.HTMLProps<HTMLDivElement> {\r\n  substyle?: React.CSSProperties\r\n  tag?: any\r\n  to?: string\r\n}\r\nexport const BoxContainer = (props: BoxContainerPropsT) => {\r\n  const {\r\n    style = {},\r\n    substyle = {},\r\n    children,\r\n    tag: Element = 'div',\r\n    ...rest\r\n  } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        border: '1px solid #000',\r\n        display: 'flex',\r\n        boxSizing: 'border-box',\r\n        ...style,\r\n      }}\r\n    >\r\n      <Element\r\n        style={{\r\n          border: substyle.border || '1px solid #555',\r\n          background: 'linear-gradient(0deg, #222222 0%, #2a2a2a 100%)',\r\n          padding: 10,\r\n          color: '#ccc',\r\n          flex: 1,\r\n          boxShadow: 'inset 0px 0px 2px black',\r\n          ...substyle,\r\n        }}\r\n        {...rest}\r\n      >\r\n        {children}\r\n      </Element>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const SmallBox = (props: BoxContainerPropsT) => (\r\n  <BoxContainer\r\n    {...props}\r\n    style={{\r\n      height: 40,\r\n      width: 40,\r\n      ...props.style,\r\n    }}\r\n    substyle={{\r\n      display: 'flex',\r\n      padding: 0,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      background: '#111',\r\n      ...props.substyle,\r\n    }}\r\n  >\r\n    {props.children}\r\n  </BoxContainer>\r\n)\r\n\r\nexport const BoxButton = (props: BoxContainerPropsT) => {\r\n  return (\r\n    <Hover delay={0}>\r\n      {({ isHovering }) => (\r\n        <BoxContainer\r\n          {...props}\r\n          tag='button'\r\n          style={{\r\n            margin: 0,\r\n            ...(props.style || {}),\r\n          }}\r\n          substyle={{\r\n            borderColor: isHovering && !props.disabled ? '#999' : '#555',\r\n            padding: '4px',\r\n            cursor: props.disabled ? 'default' : 'pointer',\r\n            background: props.disabled ? '#444' : '#111',\r\n            boxShadow: props.disabled ? 'none' : undefined,\r\n            ...(props.substyle || {}),\r\n          }}\r\n        />\r\n      )}\r\n    </Hover>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { tStats } from '../../game/Stats/type'\r\nimport {\r\n  DEFENSE_BONUS_KEYS,\r\n  STAT_KEY_LABELS,\r\n  DAMAGE_BONUS_KEYS,\r\n  STAT_BONUS_KEYS,\r\n} from '../../game/Stats/constants'\r\n\r\nexport interface StatsPreviewPropsT {\r\n  stats: tStats\r\n}\r\n\r\nconst defense_key_colors: any = {\r\n  armor: 'lightblue',\r\n  resistance: 'plum',\r\n}\r\n\r\nexport const StatsPreview = (props: StatsPreviewPropsT) => {\r\n  const { stats } = props\r\n  return (\r\n    <FlexContainer $direction='column' style={{ fontSize: 14 }}>\r\n      {DEFENSE_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: defense_key_colors[key],\r\n              }}\r\n            >\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {DAMAGE_BONUS_KEYS.map(\r\n        (key) =>\r\n          (stats[key] as number) > 0 && (\r\n            <span style={{ textTransform: 'capitalize' }}>\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {STAT_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] > 0 && (\r\n            <span\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: 'lightgreen',\r\n              }}\r\n            >\r\n              +{stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n      {STAT_BONUS_KEYS.map(\r\n        (key) =>\r\n          stats[key] < 0 && (\r\n            <span\r\n              style={{\r\n                textTransform: 'capitalize',\r\n                color: 'lightcoral',\r\n              }}\r\n            >\r\n              {stats[key]}\r\n              {STAT_KEY_LABELS[key]}\r\n            </span>\r\n          ),\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import Vigor from './svg/delapouite/heart-beats.svg'\r\nimport Strength from './svg/delapouite/biceps.svg'\r\nimport Brain from './svg/lorc/brain.svg'\r\nimport Awareness from './svg/delapouite/eye-target.svg'\r\nimport Juggler from './svg/lorc/juggler.svg'\r\nimport Agility from './svg/lorc/sprint.svg'\r\nimport Clover from './svg/lorc/clover.svg'\r\nimport Accuracy from './svg/delapouite/convergence-target.svg'\r\n\r\nimport Dazed from './svg/lorc/star-swirl.svg'\r\nimport Targeted from './svg/sbed/targeted.svg'\r\nimport Evasive from './svg/lorc/dodging.svg'\r\nimport SpeedDown from './svg/delapouite/sticky-boot.svg'\r\nimport Poisoned from './svg/lorc/biohazard.svg'\r\nimport Burning from './svg/carl-olsen/flame.svg'\r\nimport Bleeding from './svg/lorc/bleeding-wound.svg'\r\n\r\nimport Shot from './svg/lorc/high-shot.svg'\r\nimport SnipeShot from './svg/delapouite/shield-impact.svg'\r\nimport Surge from './svg/lorc/fire-zone.svg'\r\nimport AreaBast from './svg/lorc/heavy-timer.svg'\r\nimport Dazzle from './svg/lorc/ubisoft-sun.svg'\r\nimport Smash from './svg/lorc/flat-hammer.svg'\r\nimport Shockwave from './svg/lorc/hammer-drop.svg'\r\nimport Taunt from './svg/lorc/bordered-shield.svg'\r\nimport Alto from './svg/delapouite/g-clef.svg'\r\nimport Protect from './svg/lorc/shieldcomb.svg'\r\nimport PinDown from './svg/lorc/energy-arrow.svg'\r\nimport Reset from './svg/delapouite/backward-time.svg'\r\nimport SpreadShot from './svg/lorc/double-shot.svg'\r\nimport TimeJump from './svg/delapouite/extra-time.svg'\r\nimport Heal from './svg/sbed/health-normal.svg'\r\n\r\nimport MagicArmor from './svg/lorc/robe.svg'\r\nimport ClothArmor from './svg/lorc/scale-mail.svg'\r\nimport Armor from './svg/delapouite/chest-armor.svg'\r\nimport Shield from './svg/delapouite/viking-shield.svg'\r\nimport MagicShield from './svg/lorc/lightning-shield.svg'\r\nimport Footwear from './svg/lorc/leather-boot.svg'\r\nimport Hat from './svg/delapouite/robin-hood-hat.svg'\r\nimport MagicHat from './svg/lorc/pointy-hat.svg'\r\nimport Helmet from './svg/lorc/visored-helm.svg'\r\nimport Weapon from './svg/lorc/broadsword.svg'\r\n\r\nimport Godsbeard from './svg/delapouite/herbs-bundle.svg'\r\nimport { tBaseStats } from '../game/Stats/type'\r\nimport { tStatusType } from '../game/Status/type'\r\nimport { SHOT } from '../game/Skill/objects/shot'\r\nimport { SNIPE_SHOT } from '../game/Skill/objects/snipe_shot'\r\nimport { PIERCING_BLOW } from '../game/Skill/objects/piercing_blow'\r\nimport { PIN_DOWN } from '../game/Skill/objects/pin_down'\r\nimport { SURGE } from '../game/Skill/objects/surge'\r\nimport { AREA_BLAST } from '../game/Skill/objects/area_blast'\r\nimport { SYMPHONY } from '../game/Skill/objects/symphony'\r\nimport { DAZZLE } from '../game/Skill/objects/dazzle'\r\nimport { RUBATO } from '../game/Skill/objects/rubato'\r\nimport { SMASH } from '../game/Skill/objects/smash'\r\nimport { SHOCKWAVE } from '../game/Skill/objects/shockwave'\r\nimport { TAUNT } from '../game/Skill/objects/taunt'\r\nimport { ALTO } from '../game/Skill/objects/alto'\r\nimport { RITARDANDO } from '../game/Skill/objects/ritardando'\r\nimport { PROTECT } from '../game/Skill/objects/protect'\r\nimport { SPREAD_SHOT } from '../game/Skill/objects/spread_shot'\r\nimport { STUN_ATTACK } from '../game/Skill/objects/stun_attack'\r\nimport { TIME_JUMP } from '../game/Skill/objects/time_jump'\r\nimport { GODSBEARD } from '../game/Consumable/objects/godsbeard'\r\nimport { tArmorResourceType, tArmorType } from '../game/Armor/type'\r\nimport { HEAL } from '../game/Skill/objects/heal'\r\n\r\nexport const STAT_ICONS: Record<keyof tBaseStats, string> = {\r\n  vigor: Vigor,\r\n  strength: Strength,\r\n  intelligence: Brain,\r\n  dexterity: Awareness,\r\n  charisma: Juggler,\r\n  agility: Agility,\r\n  luck: Clover,\r\n  evasion: '',\r\n  criticalChance: '',\r\n}\r\n\r\nexport const STATUS_ICONS: Partial<Record<tStatusType, string>> = {\r\n  stunned: Dazed,\r\n  targeted: Targeted,\r\n  evasive: Evasive,\r\n  protected: Protect,\r\n  ['speed-down']: SpeedDown,\r\n  poisoned: Poisoned,\r\n  burning: Burning,\r\n  bleeding: Bleeding,\r\n}\r\n\r\nexport const SKILL_ICONS: Record<string, string> = {\r\n  [SHOT.id]: Shot,\r\n  [SNIPE_SHOT.id]: SnipeShot,\r\n  [PIERCING_BLOW.id]: SnipeShot,\r\n  [PIN_DOWN.id]: PinDown,\r\n  [SURGE.id]: Surge,\r\n  [AREA_BLAST.id]: AreaBast,\r\n  [SYMPHONY.id]: AreaBast,\r\n  [DAZZLE.id]: Dazzle,\r\n  [RUBATO.id]: Reset,\r\n  [SMASH.id]: Smash,\r\n  [SHOCKWAVE.id]: Shockwave,\r\n  [TAUNT.id]: Taunt,\r\n  [ALTO.id]: Alto,\r\n  [RITARDANDO.id]: Alto,\r\n  [PROTECT.id]: Protect,\r\n  [SPREAD_SHOT.id]: SpreadShot,\r\n  [STUN_ATTACK.id]: Dazzle,\r\n  [TIME_JUMP.id]: TimeJump,\r\n  [HEAL('').id]: Heal,\r\n}\r\n\r\nexport const ARMOR_TYPE_ICONS: Record<tArmorType, string> = {\r\n  ['magic-armor']: MagicArmor,\r\n  ['cloth-armor']: ClothArmor,\r\n  armor: Armor,\r\n  shield: Shield,\r\n  ['magic-shield']: MagicShield,\r\n  footwear: Footwear,\r\n  hat: Hat,\r\n  ['magic-hat']: MagicHat,\r\n  helmet: Helmet,\r\n  charm: '',\r\n  ring: '',\r\n}\r\n\r\nexport const RESOURCE_ICONS: Record<tArmorResourceType | 'weapon', string> = {\r\n  weapon: Weapon,\r\n  offhand: Shield,\r\n  body: Armor,\r\n  head: Helmet,\r\n  feet: Footwear,\r\n}\r\n\r\nexport const CONSUMABLE_ITEM_ICONS: Record<string, string> = {\r\n  [GODSBEARD().cid]: Godsbeard,\r\n}\r\nexport const CONSUMABLE_ITEM_COLORS: Record<string, string> = {\r\n  [GODSBEARD().cid]: '#84a397',\r\n}\r\n","import { tItemRarity } from './type'\r\nimport { tCharacterClass } from '../Character/type'\r\nimport { tConsumable } from '../Consumable/type'\r\nimport { tArmorResourceType } from '../Armor/type'\r\nimport { GODSBEARD } from '../Consumable/objects/godsbeard'\r\n\r\nexport const ITEM_RARITY_COLORS: Record<tItemRarity, string> = {\r\n  common: 'rgba(255,255,255,0.8)',\r\n  uncommon: 'rgba(173,216,230,1)',\r\n  rare: 'rgba(221,160,221,1)',\r\n  mythic: 'rgb(255,160,122,1)',\r\n}\r\n\r\nexport const CLASS_STARTING_CONSUMABLES: Record<\r\n  tCharacterClass,\r\n  tConsumable[]\r\n> = {\r\n  blacksmith: [GODSBEARD()],\r\n  hunter: [GODSBEARD()],\r\n  scholar: [GODSBEARD()],\r\n  bard: [GODSBEARD()],\r\n  enemy: [],\r\n}\r\n\r\nexport const CHARACTER_RESOURCES: tArmorResourceType[] = [\r\n  'offhand',\r\n  'body',\r\n  'head',\r\n  'feet',\r\n]\r\n","import React from 'react'\r\nimport Color from 'color'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { StatsPreview } from '../StatsPreview'\r\nimport { Icon } from '../Icon'\r\nimport { ARMOR_TYPE_ICONS } from '../../icons/maps'\r\nimport { Button } from '../../elements/button'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\n\r\nexport interface ArmorPreviewPropsT {\r\n  armor: tArmor\r\n  showEquipButton?: boolean\r\n  onEquipClick?: () => void\r\n}\r\nexport const ArmorPreview = (props: ArmorPreviewPropsT) => {\r\n  const { armor, showEquipButton, onEquipClick } = props\r\n  const rarityColor = ITEM_RARITY_COLORS[armor.rarity]\r\n  const from = Color(rarityColor).darken(0.5).rgb().toString()\r\n  const to = Color(rarityColor).darken(0.7).rgb().toString()\r\n  const gradient = `linear-gradient(180deg, ${from} 0%, ${to} 100%)`\r\n  return (\r\n    <BoxContainer style={{ minWidth: 200 }} substyle={{ background: gradient }}>\r\n      <FlexContainer $direction='column'>\r\n        <FlexContainer style={{ marginBottom: 8 }}>\r\n          <Icon\r\n            src={ARMOR_TYPE_ICONS[armor.type]}\r\n            size={32}\r\n            style={{ marginRight: 10 }}\r\n            shadow\r\n          />\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              textShadow: '1px 1px 2px rgba(0,0,0,0.8)',\r\n            }}\r\n          >\r\n            <span style={{ fontWeight: 600 }}>{armor.name}</span>\r\n            <span style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n              {armor.rarity}\r\n            </span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n          {showEquipButton && (\r\n            <div style={{ marginLeft: 10 }}>\r\n              <Button onClick={onEquipClick} style={{ padding: 4 }}>\r\n                Equip\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </FlexContainer>\r\n        <BoxContainer\r\n          substyle={{\r\n            background: 'rgba(0,0,0,0.7)',\r\n            minHeight: 120,\r\n            textAlign: 'left',\r\n          }}\r\n        >\r\n          <FlexContainer $direction='column'>\r\n            {armor.skills.length > 0 && (\r\n              <span style={{ color: 'plum', marginBottom: 8 }}>\r\n                {armor.skills.map(\r\n                  (skill, i) => `${i > 0 ? ', ' : ''}${skill.name}`,\r\n                )}\r\n              </span>\r\n            )}\r\n            <StatsPreview stats={armor.stats} />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React, { useState, useRef } from 'react'\r\nimport BaseTooltip, { TooltipProps } from 'react-tooltip-lite'\r\nimport { Hover } from '../Hover'\r\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\r\n\r\nexport interface ClickToolTipChildrenT {\r\n  onClick: (value?: boolean) => void\r\n  ref: React.MutableRefObject<HTMLElement | undefined>\r\n}\r\ninterface PropsT extends TooltipProps {\r\n  children: JSX.Element | ((props: ClickToolTipChildrenT) => JSX.Element)\r\n  content: JSX.Element | ((props: ClickToolTipChildrenT) => JSX.Element)\r\n}\r\nexport const Tooltip = (props: PropsT) => {\r\n  const { ...rest } = props\r\n  return (\r\n    <BaseTooltip\r\n      direction='up'\r\n      tagName='div'\r\n      padding='0'\r\n      arrow={false}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nexport const HoverToolTip = (props: PropsT) => {\r\n  return (\r\n    <Hover>\r\n      {({ isHovering }) => <Tooltip {...props} isOpen={isHovering} />}\r\n    </Hover>\r\n  )\r\n}\r\n\r\nexport const ClickToolTip = (props: PropsT) => {\r\n  const { children, content, ...rest } = props\r\n  const [isOpen, setIsOpen] = useState<boolean>(false)\r\n  const ref = useRef<HTMLElement>()\r\n  useOnClickOutside(ref, () => {\r\n    setIsOpen(false)\r\n  })\r\n  if (typeof children !== 'function') return null\r\n  if (typeof content !== 'function') return null\r\n  const p = {\r\n    onClick: (value?: boolean) => {\r\n      setIsOpen((v) => (value !== undefined ? value : !v))\r\n    },\r\n    ref,\r\n  }\r\n  return (\r\n    <Tooltip content={content(p)} {...rest} isOpen={isOpen}>\r\n      {children(p)}\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport const useOnClickOutside = (\r\n  ref: React.MutableRefObject<HTMLElement | undefined>,\r\n  handler: Function,\r\n) => {\r\n  useEffect(() => {\r\n    const listener = (event: any) => {\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return\r\n      }\r\n\r\n      setTimeout(() => handler(event), 150)\r\n    }\r\n\r\n    document.addEventListener('mousedown', listener)\r\n    document.addEventListener('touchstart', listener)\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', listener)\r\n      document.removeEventListener('touchstart', listener)\r\n    }\r\n  }, [ref, handler])\r\n}\r\n","import React from 'react'\r\nimport { styled, withWrapper } from 'styletron-react'\r\nimport { HoverToolTip } from '../components/Tooltip'\r\n\r\nconst Div = styled('div', {\r\n  transform: 'rotateY(0deg) rotate(-45deg)',\r\n})\r\nexport const Badge = withWrapper(Div, (Element) => (props: any) => {\r\n  const { onClick, ...rest } = props\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      style={{\r\n        position: props.$absolute === false ? 'relative' : 'absolute',\r\n        background: '#111',\r\n        padding: '4px',\r\n        border: '1px solid rgba(255,255,255,0.5)',\r\n        boxShadow: '1px 1px 0px black',\r\n        height: props.$size || '20px',\r\n        width: props.$size || '20px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        lineHeight: '20px',\r\n        fontWeight: 'bolder',\r\n        borderRadius: '30%',\r\n        transform: 'rotateY(0deg) rotate(45deg)',\r\n        color: props.$color || 'white',\r\n        cursor: 'pointer',\r\n        top: props.$top,\r\n        bottom: props.$bottom,\r\n        right: props.$right,\r\n        left: props.$left,\r\n        zIndex: 2,\r\n      }}\r\n    >\r\n      <Element {...rest} />\r\n    </div>\r\n  )\r\n})\r\n\r\nexport interface HoverBadgePropsT {\r\n  children: JSX.Element\r\n  content: JSX.Element\r\n  badgeProps: any\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n}\r\nexport const HoverBadge = (props: HoverBadgePropsT) => {\r\n  const { children, content, badgeProps, direction } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        top: badgeProps.$top,\r\n        bottom: badgeProps.$bottom,\r\n        left: badgeProps.$left,\r\n        right: badgeProps.$right,\r\n      }}\r\n    >\r\n      <HoverToolTip\r\n        distance={2}\r\n        direction={direction || 'right'}\r\n        // styles={{ position: 'absolute' }}\r\n        content={content || <div />}\r\n      >\r\n        <Badge\r\n          $absolute={false}\r\n          $size={badgeProps.$size}\r\n          $color={badgeProps.$color}\r\n          style={badgeProps.style}\r\n        >\r\n          {children}\r\n        </Badge>\r\n      </HoverToolTip>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Badge } from '../../elements/badge'\r\nimport { CheckKVT } from '../RoundResultRenderer'\r\nimport X from '../../icons/svg/lorc/split-cross.svg'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tStats, tBaseStats } from '../../game/Stats/type'\r\n\r\nexport interface SkillChecksPropsT {\r\n  stat: keyof tBaseStats\r\n  skill: tSkill\r\n}\r\nexport const SkillChecks = (props: SkillChecksPropsT) => {\r\n  const { stat, skill } = props\r\n  return (\r\n    <FlexContainer\r\n      style={{ justifyContent: 'center', padding: '0px 0 24px 0' }}\r\n    >\r\n      {Array(skill.rolls)\r\n        .fill(null)\r\n        .map((_, i) => (\r\n          <SkillCheck key={i} check={{ label: stat, result: undefined }} />\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface SkillCheckT {\r\n  check: CheckKVT\r\n  size?: number\r\n  padding?: number\r\n}\r\nexport const SkillCheck = (props: SkillCheckT) => {\r\n  const { check, size = 36, padding = 12 } = props\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: `0px ${padding}px`,\r\n        opacity: check.result === undefined ? 0.5 : 1,\r\n      }}\r\n    >\r\n      <Badge $absolute={false} $size={size}>\r\n        <Icon\r\n          src={STAT_ICONS[check.label as keyof tBaseStats]}\r\n          fill={getColor(check.result)}\r\n          size={size - 4}\r\n        />\r\n        {check.result === false && (\r\n          <Icon\r\n            src={X}\r\n            fill={'lightcoral'}\r\n            size={size - 4}\r\n            style={{ position: 'absolute', top: 0 }}\r\n          />\r\n        )}\r\n      </Badge>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst getColor = (result: boolean | undefined) => {\r\n  if (result === true) return 'white'\r\n  if (result === false) return 'rgba(255,255,255,0.6)'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n","import React from 'react'\r\nimport Color from 'color'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { StatsPreview } from '../StatsPreview'\r\nimport { Button } from '../../elements/button'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\n\r\nexport const getDamageColor = (weapon: tWeapon) => {\r\n  if (weapon.damage.type === 'physical') return 'lightblue'\r\n  if (weapon.damage.type === 'magic') return 'plum'\r\n  return 'white'\r\n}\r\n\r\nexport interface WeaponPreviewPropsT {\r\n  weapon: tWeapon\r\n  showEquipButton?: boolean\r\n  onEquipClick?: () => void\r\n}\r\nexport const WeaponPreview = (props: WeaponPreviewPropsT) => {\r\n  const { weapon, showEquipButton, onEquipClick } = props\r\n  const basicAttack = weapon.skills[0]\r\n  const rarityColor = ITEM_RARITY_COLORS[weapon.rarity]\r\n  const from = Color(rarityColor).darken(0.5).rgb().toString()\r\n  const to = Color(rarityColor).darken(0.7).rgb().toString()\r\n  const gradient = `linear-gradient(180deg, ${from} 0%, ${to} 100%)`\r\n  return (\r\n    <BoxContainer style={{ width: 240 }} substyle={{ background: gradient }}>\r\n      <FlexContainer $direction='column'>\r\n        {basicAttack && (\r\n          <FlexContainer style={{ justifyContent: 'center', marginBottom: 10 }}>\r\n            {Array(basicAttack.rolls)\r\n              .fill(null)\r\n              .map((_, i) => (\r\n                <SkillCheck\r\n                  check={{ label: weapon.stat, result: true }}\r\n                  size={18}\r\n                  padding={4}\r\n                />\r\n              ))}\r\n          </FlexContainer>\r\n        )}\r\n        <FlexContainer>\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              margin: '8px 0',\r\n              textShadow: '1px 1px 2px rgba(0,0,0,0.8)',\r\n            }}\r\n          >\r\n            <span style={{ fontWeight: 600 }}>{weapon.name}</span>\r\n            <span style={{ color: 'rgba(255,255,255,0.6)' }}>\r\n              {weapon.rarity} {weapon.type}\r\n            </span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n          {showEquipButton && (\r\n            <div style={{ marginLeft: 10 }}>\r\n              <Button onClick={onEquipClick} style={{ padding: 4 }}>\r\n                Equip\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </FlexContainer>\r\n        <BoxContainer\r\n          substyle={{\r\n            background: 'rgba(0,0,0,0.7)',\r\n            minHeight: 120,\r\n            textAlign: 'left',\r\n          }}\r\n        >\r\n          <FlexContainer $direction='column'>\r\n            <FlexContainer style={{ lineHeight: '24px', marginBottom: 4 }}>\r\n              <span\r\n                style={{\r\n                  color: getDamageColor(weapon),\r\n                  fontWeight: 'bolder',\r\n                  marginRight: 8,\r\n                  fontSize: 24,\r\n                }}\r\n              >\r\n                {weapon.damage.value}\r\n              </span>\r\n              <span style={{ textTransform: 'capitalize' }}>\r\n                {weapon.damage.type} Damage\r\n              </span>\r\n            </FlexContainer>\r\n            <span style={{ color: 'plum', marginBottom: 8 }}>\r\n              {weapon.skills.map(\r\n                (skill, i) => `${i > 0 ? ', ' : ''}${skill.name}`,\r\n              )}\r\n            </span>\r\n            <StatsPreview stats={weapon.stats} />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ArmorPreview } from '../ArmorPreview'\r\nimport { WeaponPreview } from '../WeaponPreview'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\n\r\nexport interface ItemPreviewPropsT {\r\n  item: tWeapon | tArmor\r\n}\r\n\r\nexport const ItemPreivew = (props: ItemPreviewPropsT) => {\r\n  const { item } = props\r\n\r\n  if (item.itemType === 'armor') return <ArmorPreview armor={item as tArmor} />\r\n  if (item.itemType === 'weapon')\r\n    return <WeaponPreview weapon={item as tWeapon} />\r\n  return <div />\r\n}\r\n","import { v4 } from 'uuid'\r\nimport {\r\n  tEncounterReward,\r\n  tEncounter,\r\n  tEncounterType,\r\n  tCombatEncounter,\r\n  tEncounterChoice,\r\n} from './type'\r\nimport { getRandom, noneg } from '../../util'\r\nimport { makeParty } from '../Party/util'\r\n\r\nconst ZERO_REWARD: tEncounterReward = {\r\n  gold: 0,\r\n  xp: 0,\r\n  items: [],\r\n  consumables: [],\r\n  status: [],\r\n}\r\n\r\nexport const makeRandomEncounter = (depth: number) => {\r\n  const encounterType: tEncounterType = getRandom([\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    'combat',\r\n    //'shop',\r\n    //'shrine',\r\n  ])\r\n  let encounter: tEncounter = {\r\n    id: v4(),\r\n    name: `Encounter ${depth}`,\r\n    type: encounterType,\r\n    reward: ZERO_REWARD,\r\n  }\r\n\r\n  if (encounter.type === 'combat') {\r\n    encounter = {\r\n      ...encounter,\r\n      party: makeParty(noneg(depth - 1)),\r\n    } as tCombatEncounter\r\n  }\r\n\r\n  return encounter\r\n}\r\n\r\nexport const makeEncounterList = (depth: number): tEncounterChoice[] => {\r\n  return Array(depth)\r\n    .fill(undefined)\r\n    .map((_, index) => {\r\n      return {\r\n        depth: index,\r\n        value: undefined,\r\n        left: makeRandomEncounter(index),\r\n        right: makeRandomEncounter(index),\r\n      }\r\n    })\r\n}\r\n","import { StateCoreT, StateT, StateActionT } from '../types'\r\nimport { makeReducer } from '../util'\r\nimport { useSelector } from 'react-redux'\r\nimport { useActions } from '../../hooks/useActions'\r\nimport { Dispatch } from 'redux'\r\nimport { tEncounterChoice } from '../../game/Encounter/type'\r\nimport { makeEncounterList } from '../../game/Encounter/util'\r\n\r\nexport interface GameStateT {\r\n  encounters: tEncounterChoice[]\r\n  level: number\r\n}\r\n\r\nexport const RESET = '@action/game/reset'\r\nexport const CHOOSE_CURRENT = '@action/game/choose-current'\r\nexport const NEXT_LEVEL = '@action/game/next-level'\r\n\r\nexport const actionCreators = {\r\n  reset: (): StateActionT => ({\r\n    type: RESET,\r\n    payload: {},\r\n  }),\r\n  chooseCurrent: (value: 'left' | 'right'): StateActionT => ({\r\n    type: CHOOSE_CURRENT,\r\n    payload: {\r\n      value,\r\n    },\r\n  }),\r\n  nextLevel: (): StateActionT => ({\r\n    type: NEXT_LEVEL,\r\n    payload: {},\r\n  }),\r\n}\r\n\r\nexport const actions = {\r\n  reset: () => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.reset())\r\n  },\r\n  chooseCurrent: (value: 'left' | 'right') => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.chooseCurrent(value))\r\n  },\r\n  nextLevel: () => (dispatch: Dispatch) => {\r\n    dispatch(actionCreators.nextLevel())\r\n  },\r\n}\r\n\r\nexport const core: StateCoreT<GameStateT> = {\r\n  [RESET]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      level: 0,\r\n      encounters: makeEncounterList(10),\r\n    }\r\n  },\r\n  [CHOOSE_CURRENT]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      encounters: state.encounters.map((e, i) => {\r\n        if (i === state.level) {\r\n          return {\r\n            ...e,\r\n            value: action.payload.value,\r\n          }\r\n        }\r\n        return e\r\n      }),\r\n    }\r\n  },\r\n  [NEXT_LEVEL]: (state, action) => {\r\n    return {\r\n      ...state,\r\n      level: state.level + 1,\r\n    }\r\n  },\r\n}\r\n\r\nexport const INITIAL_STATE: GameStateT = {\r\n  encounters: makeEncounterList(10),\r\n  level: 0,\r\n}\r\n\r\nexport default makeReducer(core, INITIAL_STATE)\r\nexport const useGameState = () => useSelector((state: StateT) => state.game)\r\nexport const useGameStateActions = () =>\r\n  useActions(actions) as {\r\n    reset: () => void\r\n    chooseCurrent: (value: 'left' | 'right') => void\r\n    nextLevel: () => void\r\n  }\r\n","import React, { useContext, useMemo } from 'react'\r\nimport { useGameState, useGameStateActions } from '../../state/game'\r\nimport { tEncounterChoice, tEncounter } from '../../game/Encounter/type'\r\n\r\nexport interface GameStateContextT {\r\n  encounters: tEncounterChoice[]\r\n  level: number\r\n  currentChoice: tEncounterChoice | undefined\r\n  currentEncounter: tEncounter | undefined\r\n  chooseCurrent: (value: 'left' | 'right') => void\r\n  nextLevel: () => void\r\n  reset: () => void\r\n}\r\n\r\nexport const defaultValue: GameStateContextT = {\r\n  encounters: [],\r\n  level: 0,\r\n  currentChoice: undefined,\r\n  currentEncounter: undefined,\r\n  chooseCurrent: (value) => {},\r\n  nextLevel: () => {},\r\n  reset: () => {},\r\n}\r\nexport const GameStateContext = React.createContext<GameStateContextT>(\r\n  defaultValue,\r\n)\r\nexport const useGameStateContext = () => useContext(GameStateContext)\r\n\r\nexport interface GameStateProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const GameStateContextProvider = (props: GameStateProviderPropsT) => {\r\n  const { children } = props\r\n  const { encounters, level } = useGameState()\r\n  const gsc = useGameStateActions()\r\n  const { nextLevel, chooseCurrent } = gsc\r\n  const currentChoice = useMemo(() => {\r\n    return encounters[level]\r\n  }, [encounters, level])\r\n  const currentEncounter = useMemo(() => {\r\n    const choice = encounters[level]\r\n    if (choice && choice.value) {\r\n      return choice[choice.value]\r\n    }\r\n  }, [encounters, level])\r\n\r\n  const reset = () => {\r\n    gsc.reset()\r\n  }\r\n\r\n  return (\r\n    <GameStateContext.Provider\r\n      value={{\r\n        encounters,\r\n        level,\r\n        currentChoice,\r\n        currentEncounter,\r\n        reset,\r\n        nextLevel,\r\n        chooseCurrent,\r\n      }}\r\n    >\r\n      {children}\r\n    </GameStateContext.Provider>\r\n  )\r\n}\r\n","import React, { useMemo, useEffect, useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport Gold from '../../icons/svg/delapouite/coins.svg'\r\nimport XP from '../../icons/svg/lorc/laurel-crown.svg'\r\nimport { Icon } from '../Icon'\r\nimport { ItemPreivew } from '../ItemPreview'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { tCombatReward } from '../../game/Other/types'\r\nimport { consolidateRewards } from '../../game/Other/util'\r\nimport { commitRewards } from '../../game/Party/util'\r\n\r\nexport interface CombatVictoryModalPropsT {\r\n  rewards: tCombatReward[]\r\n}\r\n\r\nexport const CombatVictoryModal = (props: CombatVictoryModalPropsT) => {\r\n  const { rewards } = props\r\n  const { rawParty, updateParty } = usePartyContext()\r\n  const { nextLevel } = useGameStateContext()\r\n  const { close } = useModalContext()\r\n  const consolidatedRewards = useMemo(() => consolidateRewards(rewards), [\r\n    rewards,\r\n  ])\r\n\r\n  const [items, setItems] = useState(consolidatedRewards.items)\r\n  const first = items[0]\r\n  const next = () => {\r\n    if (items.length === 0) {\r\n      close()\r\n      nextLevel()\r\n    } else {\r\n      setItems((i) => {\r\n        const [first, ...rest] = i\r\n        return rest\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateParty(commitRewards(rawParty, consolidatedRewards))\r\n  }, [])\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <h1>You Win!</h1>\r\n      <FlexContainer $direction='column' style={{ color: 'white' }}>\r\n        <FlexContainer style={{ marginBottom: 16 }}>\r\n          <FlexContainer>\r\n            <Icon src={Gold} size={18} style={{ marginRight: 8 }} />\r\n            <span>{consolidatedRewards.gold} Gold</span>\r\n          </FlexContainer>\r\n          <FullContainer />\r\n          <FlexContainer>\r\n            <Icon src={XP} size={18} style={{ marginRight: 8 }} />\r\n            <span>{consolidatedRewards.xp} XP</span>\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n        {first && (\r\n          <FlexContainer style={{ marginBottom: 16 }}>\r\n            <FullContainer />\r\n            <FlexContainer $direction='column'>\r\n              <ItemPreivew item={first} />\r\n              <span\r\n                style={{\r\n                  marginTop: 8,\r\n                  color: 'rgba(255,255,255,0.3)',\r\n                  fontWeight: 'bold',\r\n                  fontSize: 12,\r\n                }}\r\n              >\r\n                1 of {items.length}\r\n              </span>\r\n            </FlexContainer>\r\n            <FullContainer />\r\n          </FlexContainer>\r\n        )}\r\n      </FlexContainer>\r\n      <Button\r\n        onClick={() => {\r\n          next()\r\n        }}\r\n      >\r\n        {items.length === 0 ? 'Close' : 'Next'}\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n","import { tCombatReward } from './types'\r\n\r\nexport const consolidateRewards = (rewards: tCombatReward[]): tCombatReward => {\r\n  return rewards.reduce(\r\n    (res, reward) => {\r\n      return {\r\n        gold: res.gold + reward.gold,\r\n        xp: res.xp + reward.xp,\r\n        items: [...res.items, ...reward.items],\r\n        consumables: [...res.consumables, ...reward.consumables],\r\n      }\r\n    },\r\n    {\r\n      gold: 0,\r\n      xp: 0,\r\n      items: [],\r\n      consumables: [],\r\n    },\r\n  )\r\n}\r\n","import { tQueue } from './type'\r\nimport { tProcessedCharacter, tCharacter } from '../Character/type'\r\nimport { processCharacter } from '../Character/util'\r\n\r\nconst AGILITY_OFFSET = 200\r\n\r\nexport const makeCombatQueue = (characters: tProcessedCharacter[]): tQueue => {\r\n  const sortedCharacters = characters.sort(\r\n    (a, b) => b.stats.agility - a.stats.agility,\r\n  )\r\n  return sortedCharacters.reduce(\r\n    (r, c, i) => ({\r\n      ...r,\r\n      [c.id]: AGILITY_OFFSET / 2 - c.stats.agility,\r\n    }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const getMax = (queue: tQueue): number => {\r\n  return Object.keys(queue).reduce((r: number, id: string) => {\r\n    if (r < queue[id]) return queue[id]\r\n    return r\r\n  }, Number.NEGATIVE_INFINITY)\r\n}\r\n\r\nexport const getMin = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): number => {\r\n  if (characters.length === 0) throw new Error('track this call down')\r\n  return Object.keys(queue).reduce((min: number, id: string) => {\r\n    if (queue[id] < min) {\r\n      const c = characters.find((c) => c.id === id) as tProcessedCharacter\r\n      if (c.stats.queueConsolidationModifier > 0) {\r\n        return queue[id]\r\n      } else {\r\n        return min\r\n      }\r\n    }\r\n    return min\r\n  }, Number.POSITIVE_INFINITY)\r\n}\r\n\r\nexport const consolidateQueue = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  let min = getMin(queue, characters)\r\n  return Object.keys(queue).reduce((r, id) => {\r\n    const character = characters.find((c) => c.id === id) as tCharacter\r\n    const offset = character.stats.queueConsolidationModifier * min\r\n    return {\r\n      ...r,\r\n      [id]: queue[id] - offset,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const shiftQueue = (\r\n  queue: tQueue,\r\n  character: tProcessedCharacter,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  const ret = consolidateQueue(\r\n    {\r\n      ...queue,\r\n      [character.id]: AGILITY_OFFSET - character.stats.agility,\r\n    },\r\n    characters,\r\n  )\r\n  return ret\r\n}\r\n\r\nexport const getFirst = (queue: tQueue): string => {\r\n  let min = Number.POSITIVE_INFINITY\r\n  let key = Object.keys(queue)[0]\r\n  Object.keys(queue).forEach((id) => {\r\n    if (min > queue[id]) {\r\n      min = queue[id]\r\n      key = id\r\n    }\r\n  })\r\n  return key\r\n}\r\n\r\nexport const validateQueue = (\r\n  queue: tQueue,\r\n  characters: tProcessedCharacter[],\r\n): tQueue => {\r\n  return consolidateQueue(\r\n    characters.reduce((r, c) => {\r\n      return c.health <= 0 ? r : { ...r, [c.id]: queue[c.id] }\r\n    }, {}),\r\n    characters,\r\n  )\r\n}\r\n\r\nexport const getSortedIds = (queue: tQueue): string[] => {\r\n  return Object.keys(queue).sort((a, b) => queue[a] - queue[b])\r\n}\r\n\r\nexport const commitQueueUpdates = (\r\n  queue: tQueue,\r\n  source: tProcessedCharacter,\r\n  characters: tCharacter[],\r\n): tQueue => {\r\n  const pcs = characters.map((c) => processCharacter(c))\r\n  const shiftedQueue = shiftQueue(queue, source, pcs)\r\n  const ret = validateQueue(\r\n    Object.keys(shiftedQueue).reduce((q, id) => {\r\n      const character = pcs.find((c) => c.id === id)\r\n      return {\r\n        ...q,\r\n        [id]:\r\n          character?.stats?.queueValueSet !== undefined\r\n            ? character?.stats?.queueValueSet\r\n            : shiftedQueue[id],\r\n      }\r\n    }, {}),\r\n    pcs,\r\n  )\r\n  return ret\r\n}\r\n","import { tStatusType } from '../Status/type'\r\n\r\nexport type tPerfectKey = tStatusType | 'splash' | 'pierce' | 'heal'\r\nexport const PERFECT_DISPLAY_INFO: Partial<Record<tPerfectKey, string>> = {\r\n  splash: 'Splash Damage',\r\n  pierce: 'Ignore Resistances',\r\n  bleeding: 'Bleed',\r\n  burning: 'Burn',\r\n  frozen: 'Freeze',\r\n  poisoned: 'Poison',\r\n  targeted: 'Taunt Enemies',\r\n  stunned: 'Stun',\r\n  evasive: 'Become Evasive',\r\n  heal: 'Heal',\r\n  protected: 'Protect',\r\n  ['speed-down']: 'Speed Down',\r\n  rushed: 'Rush Character',\r\n}\r\n","import { tProcessedCharacter } from '../Character/type'\r\nimport {\r\n  tSkill,\r\n  tSourceSkillResult,\r\n  tTargetSkillResult,\r\n  tSkillResult,\r\n  tSkillTarget,\r\n  tSkillTargetType,\r\n} from './type'\r\nimport { resolveCheck } from '../Roll/util'\r\nimport {\r\n  getRawDamage,\r\n  getReflectedDamage,\r\n  isCharacter,\r\n  hasStatus,\r\n  getDamageResistance,\r\n} from '../Character/util'\r\nimport { tProcessedParty } from '../Party/type'\r\nimport { isParty } from '../Party/util'\r\nimport { tDamage } from '../Damage/type'\r\nimport { tPerfectKey, PERFECT_DISPLAY_INFO } from './constants'\r\n\r\nexport const getSourceSkillResult = (\r\n  source: tProcessedCharacter,\r\n  skill: tSkill,\r\n): tSourceSkillResult => {\r\n  const rollResults = Array(skill.rolls)\r\n    .fill(null)\r\n    .map((_, i) =>\r\n      resolveCheck(\r\n        source,\r\n        skill.weaponStatOverride || source.weapon.stat,\r\n        skill.offset,\r\n      ),\r\n    )\r\n  const passedCount = rollResults.filter((r) => r).length\r\n  const perfect = passedCount === skill.rolls\r\n  const criticalHitSuccess = resolveCheck(source, 'criticalChance')\r\n  const rollDamageModifier = passedCount / skill.rolls\r\n  const rawDamage = {\r\n    ...source.weapon.damage,\r\n    value: Math.round(\r\n      (source.weapon.damage.value + source.stats.attackDamageOffset) *\r\n        source.stats.attackDamageModifier *\r\n        skill.damageModifier *\r\n        rollDamageModifier *\r\n        (perfect && criticalHitSuccess ? 1.2 : 1),\r\n    ),\r\n    range: skill.weaponRangeOverride || source.weapon.damage.range,\r\n  }\r\n  return {\r\n    source,\r\n    skill,\r\n    rollResults,\r\n    passedCount,\r\n    perfect,\r\n    criticalHitSuccess: perfect && criticalHitSuccess,\r\n    rawDamage,\r\n    splashDamage: {\r\n      ...source.weapon.damage,\r\n      value:\r\n        perfect && skill.perfectSplash\r\n          ? Math.round(rawDamage.value * skill.splashDamageModifier)\r\n          : 0,\r\n      range: skill.weaponRangeOverride || source.weapon.damage.range,\r\n    },\r\n    ignoreResistance: perfect && skill.perfectPierce,\r\n    addedStatus: perfect ? skill.perfectStatus : [],\r\n  }\r\n}\r\n\r\nexport const getTargetSkillResult = (\r\n  target: tProcessedCharacter,\r\n  sourceResult: tSourceSkillResult,\r\n): tTargetSkillResult => {\r\n  const dodgeResult = resolveCheck(target, 'evasion')\r\n  const dodgeSuccess = hasStatus(target, 'evasive')\r\n    ? !sourceResult.perfect\r\n    : !sourceResult.perfect && dodgeResult\r\n  const damage = getRawDamage(\r\n    sourceResult.source,\r\n    target,\r\n    sourceResult.rawDamage,\r\n  )\r\n  return {\r\n    ...sourceResult,\r\n    target,\r\n    dodgeSuccess,\r\n    totalDamage: {\r\n      ...damage,\r\n      value: dodgeSuccess ? 0 : damage.value,\r\n    },\r\n    reflectedDamage: getReflectedDamage(target, damage),\r\n    loggedDamgge: {\r\n      ...damage,\r\n      value: dodgeSuccess\r\n        ? 0\r\n        : damage.value - getDamageResistance(target, damage),\r\n    },\r\n  }\r\n}\r\n\r\nexport const getSkillResult = (\r\n  source: tProcessedCharacter,\r\n  targets: tProcessedCharacter[],\r\n  skill: tSkill,\r\n): tSkillResult => {\r\n  const sourceResult = getSourceSkillResult(source, skill)\r\n  return {\r\n    sourceResult,\r\n    targetResults: targets.map((target) =>\r\n      getTargetSkillResult(target, sourceResult),\r\n    ),\r\n  }\r\n}\r\n\r\nexport const resolveSkillTarget = (\r\n  target: tSkillTarget,\r\n): tProcessedCharacter[] => {\r\n  switch (target.type) {\r\n    case 'single':\r\n      return target.character ? [target.character] : []\r\n    case 'ally':\r\n      return target.character ? [target.character] : []\r\n    case 'self':\r\n      return target.character ? [target.character] : []\r\n    case 'party':\r\n      return target.party?.characters || []\r\n    case 'group':\r\n      return target.party?.characters || []\r\n    default:\r\n      return []\r\n  }\r\n}\r\n\r\nexport const makeSkillTarget = (\r\n  type: tSkillTargetType,\r\n  target: tProcessedCharacter | tProcessedParty,\r\n): tSkillTarget => {\r\n  return {\r\n    type,\r\n    character: isCharacter(target)\r\n      ? (target as tProcessedCharacter)\r\n      : undefined,\r\n    party: isParty(target) ? (target as tProcessedParty) : undefined,\r\n  }\r\n}\r\n\r\nexport const getSkillTargetOptions = (\r\n  source: tProcessedCharacter,\r\n  sourceParty: tProcessedParty,\r\n  targetParty: tProcessedParty,\r\n  skill: tSkill,\r\n): tProcessedCharacter[] | tProcessedParty[] => {\r\n  switch (skill.targetType) {\r\n    case 'single':\r\n      return targetParty.characters.filter((c) => c.health > 0)\r\n    case 'ally':\r\n      return sourceParty.characters.filter((c) => c.health > 0)\r\n    case 'group':\r\n      return [targetParty]\r\n    case 'party':\r\n      return [sourceParty]\r\n    case 'self':\r\n      return [source]\r\n    default:\r\n      return []\r\n  }\r\n}\r\n\r\nexport const getSkillDamage = (\r\n  skill: tSkill,\r\n  source: tProcessedCharacter,\r\n): tDamage => {\r\n  return {\r\n    ...source.weapon.damage,\r\n    value:\r\n      (source.weapon.damage.value + source.stats.attackDamageOffset) *\r\n      (skill.damageModifier + source.stats.attackDamageModifier / 100),\r\n  }\r\n}\r\n\r\nexport const getPerfectKeys = (skill: tSkill): tPerfectKey[] => {\r\n  let base: tPerfectKey[] = [...skill.perfectStatus]\r\n  if (skill.perfectSplash) base = [...base, 'splash']\r\n  if (skill.perfectPierce) base = [...base, 'pierce']\r\n  if (skill.healing) base = [...base, 'heal']\r\n  return base\r\n}\r\n\r\nexport const getPerfectText = (\r\n  skill: tSkill,\r\n  character: tProcessedCharacter,\r\n): string => {\r\n  const perfectKeys = getPerfectKeys(skill)\r\n  const rawDamage = getSkillDamage(skill, character)\r\n\r\n  return perfectKeys.reduce((res, key, i) => {\r\n    let pre = `${res}${i > 0 ? ',' : ''}`\r\n    const text = PERFECT_DISPLAY_INFO[key]\r\n    switch (key) {\r\n      case 'splash':\r\n        return `${pre} ${Math.floor(skill.splashDamageModifier * 100)}% ${text}`\r\n      case 'heal':\r\n        return `${pre} ${text} ${character.stats.consumableHealthGainOffset} HP`\r\n      default:\r\n        return `${pre} ${text}`\r\n    }\r\n  }, '')\r\n}\r\n","import { tParty } from '../Party/type'\r\nimport { tCharacter } from '../Character/type'\r\nimport { updateCharacter, getOtherCharacters } from '../Party/util'\r\nimport { tQueue } from '../Queue/type'\r\nimport { tSkillResult, tSkillCommiterResult } from './type'\r\nimport {\r\n  commitDamage,\r\n  addMultipleStatus,\r\n  decrementStatusDurations,\r\n  processCharacter,\r\n} from '../Character/util'\r\nimport { noneg } from '../../util/noneg'\r\nimport { commitQueueUpdates } from '../Queue/util'\r\nimport { PLAYER_PARTY_ID } from '../Party/constants'\r\n\r\nconst partyUpdater = (\r\n  party: tParty,\r\n  characterId: string,\r\n  updater: (c: tCharacter) => tCharacter,\r\n): tParty => {\r\n  return updateCharacter(party, characterId, updater)\r\n}\r\n\r\nexport const commitSkillResults = (\r\n  playerParty: tParty,\r\n  enemyParty: tParty,\r\n  queue: tQueue,\r\n) => (result: tSkillResult): tSkillCommiterResult => {\r\n  const { source } = result.sourceResult\r\n  result.targetResults.forEach((targetResult, index) => {\r\n    const { target } = targetResult\r\n    let sourceParty = [playerParty, enemyParty].find(\r\n      (p) => p.id === source.partyId,\r\n    ) as tParty\r\n    let targetParty = [playerParty, enemyParty].find(\r\n      (p) => p.id === target.partyId,\r\n    ) as tParty\r\n    const localUpdate = (\r\n      p: tParty,\r\n      id: string,\r\n      updater: (c: tCharacter) => tCharacter,\r\n    ) => {\r\n      if (p.id === sourceParty.id) {\r\n        sourceParty = partyUpdater(p, id, updater)\r\n        return\r\n      }\r\n      if (p.id === targetParty.id) {\r\n        targetParty = partyUpdater(p, id, updater)\r\n        return\r\n      }\r\n      throw new Error('bad party id')\r\n    }\r\n\r\n    // commit main damage\r\n    localUpdate(targetParty, target.id, (c) => {\r\n      return commitDamage(\r\n        c,\r\n        targetResult.totalDamage,\r\n        targetResult.ignoreResistance,\r\n      )\r\n    })\r\n\r\n    // commit main status\r\n    localUpdate(targetParty, target.id, (c) => {\r\n      return addMultipleStatus(c, targetResult.addedStatus)\r\n    })\r\n\r\n    // comit main heal\r\n    if (targetResult.skill.healing) {\r\n      localUpdate(targetParty, target.id, (c) => {\r\n        return {\r\n          ...c,\r\n          healthOffset: c.healthOffset - c.stats.consumableHealthGainOffset,\r\n          consumables: c.consumables.filter(\r\n            (i) => i.id !== targetResult.skill.consumableId,\r\n          ),\r\n        }\r\n      })\r\n    }\r\n\r\n    // commit splash damage\r\n    if (targetResult.splashDamage.value > 0) {\r\n      getOtherCharacters(targetParty, target.id).forEach((character) => {\r\n        localUpdate(targetParty, character.id, (c) => {\r\n          return commitDamage(c, targetResult.splashDamage, false)\r\n        })\r\n      })\r\n    }\r\n\r\n    // commit reflected damage\r\n    if (targetResult.reflectedDamage.value > 0) {\r\n      localUpdate(sourceParty, source.id, (c) => {\r\n        return commitDamage(c, targetResult.reflectedDamage, false)\r\n      })\r\n    }\r\n\r\n    // commet end-of-round actions\r\n    if (index === result.targetResults.length - 1) {\r\n      // source health regen\r\n      localUpdate(sourceParty, source.id, (c) => {\r\n        const pc = processCharacter(c)\r\n        return {\r\n          ...c,\r\n          healthOffset: noneg(c.healthOffset - pc.stats.healthRegeneration),\r\n        }\r\n      })\r\n    }\r\n\r\n    if (sourceParty.id === PLAYER_PARTY_ID) {\r\n      playerParty = sourceParty\r\n    } else {\r\n      enemyParty = sourceParty\r\n    }\r\n    if (targetParty.id === PLAYER_PARTY_ID) {\r\n      if (sourceParty.id !== targetParty.id) {\r\n        playerParty = targetParty\r\n      }\r\n    } else {\r\n      enemyParty = targetParty\r\n    }\r\n  })\r\n\r\n  return {\r\n    playerParty: {\r\n      ...playerParty,\r\n      characters: playerParty.characters.map((c) =>\r\n        decrementStatusDurations(c),\r\n      ),\r\n    },\r\n    enemyParty: {\r\n      ...enemyParty,\r\n      characters: enemyParty.characters.map((c) => decrementStatusDurations(c)),\r\n    },\r\n    queue: commitQueueUpdates(queue, source, [\r\n      ...playerParty.characters,\r\n      ...enemyParty.characters,\r\n    ]),\r\n  }\r\n}\r\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n} from 'react'\r\nimport { usePartyContext } from '../PartyContext'\r\nimport { v4 } from 'uuid'\r\nimport { useHistory } from 'react-router'\r\nimport { useModalContext } from '../ModalContext'\r\nimport { CombatVictoryModal } from '../../components/CombatVictoryModal'\r\nimport { tProcessedParty, tParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tSkill, tSkillResult, tSkillTarget } from '../../game/Skill/type'\r\nimport { tQueue } from '../../game/Queue/type'\r\nimport {\r\n  processParty,\r\n  makeParty,\r\n  getRolledRewards,\r\n} from '../../game/Party/util'\r\nimport {\r\n  processCharacter,\r\n  makeCharacter,\r\n  removeTemporaryStatus,\r\n} from '../../game/Character/util'\r\nimport { makeCombatQueue, getFirst } from '../../game/Queue/util'\r\nimport {\r\n  makeSkillTarget,\r\n  resolveSkillTarget,\r\n  getSkillResult,\r\n} from '../../game/Skill/util'\r\nimport { commitSkillResults } from '../../game/Skill/committer'\r\nimport { getAIAction } from '../../game/AI/util'\r\n\r\nexport interface CombatContextT {\r\n  party: tProcessedParty\r\n  enemyParty: tProcessedParty\r\n  activeCharacter: tProcessedCharacter\r\n  characters: tProcessedCharacter[]\r\n  queue: tQueue\r\n  selectedSkill: tSkill | undefined\r\n  selectedTargets: tProcessedCharacter[]\r\n  selectedConsumableIndex: number | undefined\r\n  roundResults: tSkillResult[]\r\n  activeRound: tSkillResult | undefined\r\n  isRunning: boolean\r\n  isRenderingResult: boolean\r\n  onSkillSelect: (skill: tSkill, consumableIndex?: number) => void\r\n  onTargetsSelect: (target: tProcessedCharacter | tProcessedParty) => void\r\n  onConsumableSelect: (consumableIndex: number | undefined) => void\r\n  reset: () => void\r\n  start: () => void\r\n  next: (nextTarget?: tProcessedCharacter | tProcessedParty) => void\r\n  commit: () => void\r\n}\r\nconst defaultValue: CombatContextT = {\r\n  party: processParty(makeParty()),\r\n  enemyParty: processParty(makeParty()),\r\n  activeCharacter: processCharacter(makeCharacter('blacksmith')),\r\n  characters: [],\r\n  queue: {},\r\n  selectedSkill: undefined,\r\n  selectedTargets: [],\r\n  selectedConsumableIndex: undefined,\r\n  roundResults: [],\r\n  activeRound: undefined,\r\n  isRunning: false,\r\n  isRenderingResult: false,\r\n  onSkillSelect: (skill: tSkill) => {},\r\n  onTargetsSelect: (target: tProcessedCharacter | tProcessedParty) => {},\r\n  onConsumableSelect: (consumableIndex) => {},\r\n  reset: () => {},\r\n  start: () => {},\r\n  next: () => {},\r\n  commit: () => {},\r\n}\r\nexport const CombatContext = createContext<CombatContextT>(defaultValue)\r\nexport const useCombatContext = () => useContext(CombatContext)\r\n\r\nexport interface CombatContextProviderPropsT {\r\n  children: JSX.Element\r\n  enemyParty: tParty\r\n  setEnemyParty: (party: tParty) => void\r\n  onRequestNewParty: () => void\r\n}\r\nexport const CombatContextProvider = (props: CombatContextProviderPropsT) => {\r\n  const { children, setEnemyParty, onRequestNewParty } = props\r\n  const { party, rawParty, updateParty } = usePartyContext()\r\n  const { open } = useModalContext()\r\n  const history = useHistory()\r\n  const enemyParty = useMemo(() => processParty(props.enemyParty), [\r\n    props.enemyParty,\r\n  ])\r\n  const [isRunning, setIsRunning] = useState<boolean>(false)\r\n  const [isRenderingResult, setIsRenderingResult] = useState<boolean>(false)\r\n  const characters = useMemo(\r\n    () => [...party.characters, ...enemyParty.characters],\r\n    [party, enemyParty],\r\n  )\r\n  const [queue, setQueue] = useState<tQueue>(\r\n    makeCombatQueue([...party.characters, ...enemyParty.characters]),\r\n  )\r\n  const resultCommitter = useMemo(\r\n    () => commitSkillResults(rawParty, props.enemyParty, queue),\r\n    [rawParty, props.enemyParty, queue],\r\n  )\r\n  const [roundId, setRoundId] = useState<string>(v4())\r\n  const [roundResults, setRoundResults] = useState<tSkillResult[]>([])\r\n  const [activeRound, setActiveRound] = useState<tSkillResult | undefined>()\r\n  const [selectedTarget, setSelectedTarget] = useState<\r\n    tSkillTarget | undefined\r\n  >()\r\n  const [selectedSkill, setSelectedSkill] = useState<tSkill | undefined>()\r\n  const [selectedConsumableIndex, setSelectedConsumableIndex] = useState<\r\n    number | undefined\r\n  >()\r\n  const activeCharacter = useMemo(\r\n    () =>\r\n      characters.find(\r\n        (c) => c.health > 0 && c.id === getFirst(queue),\r\n      ) as tProcessedCharacter,\r\n    [queue, characters],\r\n  )\r\n\r\n  const start = () => {\r\n    setIsRunning(true)\r\n    setQueue(makeCombatQueue([...party.characters, ...enemyParty.characters]))\r\n    setRoundId(v4())\r\n    setActiveRound(undefined)\r\n    setIsRenderingResult(false)\r\n  }\r\n\r\n  const reset = () => {\r\n    onRequestNewParty()\r\n    setIsRunning(false)\r\n    setActiveRound(undefined)\r\n    setSelectedSkill(undefined)\r\n    setSelectedTarget(undefined)\r\n    setSelectedConsumableIndex(undefined)\r\n    setIsRenderingResult(false)\r\n    setQueue({})\r\n  }\r\n\r\n  const next = (nextTarget?: tProcessedCharacter | tProcessedParty) => {\r\n    if (!selectedSkill) return\r\n    const roundTarget = nextTarget\r\n      ? makeSkillTarget(selectedSkill.targetType, nextTarget)\r\n      : selectedTarget\r\n    if (!selectedSkill || !roundTarget) return\r\n    const results = getSkillResult(\r\n      activeCharacter,\r\n      resolveSkillTarget(roundTarget).filter((c) => c.health > 0),\r\n      selectedSkill,\r\n    )\r\n    setActiveRound(results)\r\n    setSelectedSkill(undefined)\r\n    setSelectedTarget(undefined)\r\n    setSelectedConsumableIndex(undefined)\r\n    setIsRenderingResult(true)\r\n  }\r\n\r\n  const onSkillSelect = (skill: tSkill, consumableIndex?: number) => {\r\n    setSelectedSkill(skill)\r\n    if (consumableIndex !== undefined) {\r\n      setSelectedConsumableIndex(consumableIndex)\r\n    }\r\n    if (skill.targetType !== selectedSkill?.targetType) {\r\n      setSelectedTarget(undefined)\r\n    }\r\n  }\r\n\r\n  const onTargetsSelect = (target: tProcessedCharacter | tProcessedParty) => {\r\n    if (!selectedSkill) return\r\n    setSelectedTarget(makeSkillTarget(selectedSkill.targetType, target))\r\n  }\r\n\r\n  const completeRound = () => {\r\n    setRoundId(v4())\r\n    setActiveRound(undefined)\r\n    setIsRenderingResult(false)\r\n  }\r\n\r\n  const commit = useCallback(() => {\r\n    if (!activeRound) return\r\n    const result = resultCommitter(activeRound)\r\n    setRoundResults((r) => [...r, activeRound])\r\n    setEnemyParty(result.enemyParty)\r\n    updateParty(result.playerParty)\r\n    setQueue(result.queue)\r\n\r\n    completeRound()\r\n  }, [activeRound, queue])\r\n\r\n  const execEnemyTurn = (skill: tSkill, target: tSkillTarget) => {\r\n    const result = getSkillResult(\r\n      activeCharacter,\r\n      resolveSkillTarget(target),\r\n      skill,\r\n    )\r\n    setActiveRound(result)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activeCharacter && isRunning) {\r\n      if (activeCharacter.partyId === enemyParty.id) {\r\n        const { skill, target } = getAIAction(\r\n          activeCharacter,\r\n          party,\r\n          enemyParty,\r\n        )\r\n        execEnemyTurn(skill, makeSkillTarget(skill.targetType, target))\r\n      } else {\r\n        setSelectedSkill(activeCharacter.skills[0])\r\n      }\r\n    }\r\n  }, [roundId])\r\n\r\n  useEffect(() => {\r\n    if (!isRunning) return\r\n    if (enemyParty.characters.every((c) => c.health <= 0)) {\r\n      setIsRunning(false)\r\n      const rewards = getRolledRewards(\r\n        enemyParty,\r\n        party.characters.reduce((p, c) =>\r\n          p.stats.luck > c.stats.luck ? p : c,\r\n        ),\r\n      )\r\n      updateParty({\r\n        ...rawParty,\r\n        characters: rawParty.characters.map((c) => removeTemporaryStatus(c)),\r\n      })\r\n      open(<CombatVictoryModal rewards={rewards} />, {}, true)\r\n      return\r\n    }\r\n    if (party.characters.every((c) => c.health <= 0)) {\r\n      setIsRunning(false)\r\n      alert('you lose')\r\n      history.push('/JSFTK_combat/')\r\n      return\r\n    }\r\n  }, [party, enemyParty])\r\n\r\n  return (\r\n    <CombatContext.Provider\r\n      value={{\r\n        party,\r\n        enemyParty,\r\n        characters,\r\n        queue,\r\n        activeCharacter,\r\n        activeRound,\r\n        selectedSkill,\r\n        selectedTargets: selectedTarget\r\n          ? resolveSkillTarget(selectedTarget)\r\n          : [],\r\n        selectedConsumableIndex,\r\n        roundResults,\r\n        isRunning,\r\n        isRenderingResult,\r\n        onSkillSelect,\r\n        onTargetsSelect,\r\n        onConsumableSelect: setSelectedConsumableIndex,\r\n        start,\r\n        next,\r\n        commit,\r\n        reset,\r\n      }}\r\n    >\r\n      {children}\r\n    </CombatContext.Provider>\r\n  )\r\n}\r\n","import { tSkill } from '../Skill/type'\r\nimport { tProcessedCharacter } from '../Character/type'\r\nimport { tProcessedParty } from '../Party/type'\r\nimport { getRandom } from '../../util'\r\nimport { getSkillTargetOptions } from '../Skill/util'\r\n\r\nexport interface tAIAction {\r\n  skill: tSkill\r\n  target: tProcessedCharacter | tProcessedParty\r\n}\r\nexport const getAIAction = (\r\n  source: tProcessedCharacter,\r\n  playerParty: tProcessedParty,\r\n  enemyParty: tProcessedParty,\r\n): tAIAction => {\r\n  const skill = getRandom(source.skills)\r\n  const targetedCharacters = playerParty.characters.filter(\r\n    (c) => c.status.map((t) => t.type).includes('targeted') && c.health > 0,\r\n  )\r\n  const target =\r\n    skill.targetType === 'single'\r\n      ? targetedCharacters.length > 0\r\n        ? getRandom(targetedCharacters)\r\n        : getRandom(playerParty.characters.filter((c) => c.health > 0))\r\n      : getRandom<tProcessedParty | tProcessedCharacter>(\r\n          getSkillTargetOptions(source, enemyParty, playerParty, skill),\r\n        )\r\n\r\n  return { skill, target }\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { useModalContext } from '../../contexts/ModalContext'\r\nimport { NameSpanBuilder } from '../../contexts/CombatLogContext/util'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport Kefir from 'kefir'\r\nimport { SkillCheck } from '../SkillChecks'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { BoxContainer } from '../../elements/box'\r\n\r\nexport interface RoundResultRendererPropsT {\r\n  isModal?: boolean\r\n}\r\nexport const RoundResultRenderer = (props: RoundResultRendererPropsT) => {\r\n  const { isModal = true } = props\r\n  const { activeRound, isRunning, commit } = useCombatContext()\r\n  const { open, close } = useModalContext()\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (activeRound && !isOpen && isRunning) {\r\n      setIsOpen(true)\r\n      if (isModal) {\r\n        open(\r\n          <RoundResult\r\n            close={() => {\r\n              close(true)\r\n              setIsOpen(false)\r\n              commit()\r\n            }}\r\n          />,\r\n          {\r\n            overlay: {\r\n              background: 'transparent',\r\n            },\r\n          },\r\n          true,\r\n        )\r\n      }\r\n    }\r\n  }, [isRunning, isModal, isOpen, activeRound, open, close, commit])\r\n\r\n  if (!isModal && activeRound && isRunning) {\r\n    return (\r\n      <FlexContainer style={{ height: 269 }}>\r\n        <RoundResult\r\n          close={() => {\r\n            setIsOpen(false)\r\n            commit()\r\n          }}\r\n        />\r\n      </FlexContainer>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport interface RoundResultPropsT {\r\n  close: () => void\r\n}\r\nexport interface CheckKVT {\r\n  label: string\r\n  result: boolean | undefined\r\n}\r\nexport const RoundResult = (props: RoundResultPropsT) => {\r\n  const { close } = props\r\n  const { activeRound } = useCombatContext()\r\n  const [isDone, setIsDone] = useState(false)\r\n  const round = activeRound?.sourceResult\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n  const [roundResults, setRoundResults] = useState<CheckKVT[]>(\r\n    !round\r\n      ? []\r\n      : round.rollResults.map((result, i) => ({\r\n          label: round.skill.weaponStatOverride || round.source.weapon.stat,\r\n          result: undefined,\r\n        })),\r\n  )\r\n\r\n  const updateRoundResult = (value: CheckKVT, index: number) => {\r\n    setActiveIndex(index)\r\n    setRoundResults((r) => r.map((r, i) => (i === index ? value : r)))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!round) return\r\n    const stream = Kefir.sequentially(\r\n      200,\r\n      roundResults.map((r, i) => ({ ...r, index: i })),\r\n    )\r\n    stream.onValue((result) => {\r\n      updateRoundResult(\r\n        {\r\n          label: result.label,\r\n          result: round.rollResults[result.index],\r\n        },\r\n        result.index,\r\n      )\r\n    })\r\n    stream.onEnd(() => {\r\n      Kefir.later(round.perfect ? 900 : 600, undefined).onValue(() => {\r\n        setIsDone(true)\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (isDone) {\r\n      close()\r\n    }\r\n  }, [isDone, close])\r\n\r\n  const showPerfect = activeIndex === roundResults.length - 1 && round?.perfect\r\n  const style = useSpring({ opacity: showPerfect ? 1 : 0 })\r\n  const isPlayer = (partyId: string) => partyId === PLAYER_PARTY_ID\r\n  const targetResult = activeRound?.targetResults[0]\r\n  const showTarget =\r\n    round && targetResult && targetResult.target.id !== round.source.id\r\n  if (!round) return null\r\n  return (\r\n    <FlexContainer $direction='column' style={{ textAlign: 'center' }}>\r\n      <FlexContainer style={{ justifyContent: 'space-evenly' }}>\r\n        {roundResults.map((result, i) => (\r\n          <SkillCheck key={i} check={result} />\r\n        ))}\r\n      </FlexContainer>\r\n      <FlexContainer style={{ justifyContent: 'center' }}>\r\n        <BoxContainer style={{ marginTop: 40 }}>\r\n          <span\r\n            style={{\r\n              color: isPlayer(round.source.partyId)\r\n                ? 'lightblue'\r\n                : 'lightsalmon',\r\n            }}\r\n          >\r\n            {round.source.name}\r\n          </span>{' '}\r\n          uses <span style={{ color: 'plum' }}>{round.skill.name}</span>\r\n          {showTarget && (\r\n            <span>\r\n              {' '}\r\n              on{' '}\r\n              <span\r\n                style={{\r\n                  color: isPlayer(targetResult?.target.partyId || '')\r\n                    ? 'lightblue'\r\n                    : 'lightsalmon',\r\n                }}\r\n              >\r\n                {targetResult?.target.name}\r\n              </span>\r\n            </span>\r\n          )}\r\n        </BoxContainer>\r\n      </FlexContainer>\r\n      {showPerfect && (\r\n        <animated.div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            marginTop: 30,\r\n            fontSize: 32,\r\n            color:\r\n              round.source.partyId === PLAYER_PARTY_ID ? '#d6c740' : '#c95738',\r\n            textShadow: '4px 4px 4px black',\r\n            fontFamily: 'Bangers',\r\n            ...style,\r\n          }}\r\n        >\r\n          Perfect!\r\n        </animated.div>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { getSkillDamage, getPerfectText } from '../../game/Skill/util'\r\nimport { getChecksProbability } from '../../game/Roll/util'\r\n\r\nexport interface SkillPreviewPropsT {\r\n  skill: tSkill\r\n  source: tProcessedCharacter\r\n  targets: tProcessedCharacter[]\r\n}\r\nexport const SkillPreview = (props: SkillPreviewPropsT) => {\r\n  const { skill, source, targets } = props\r\n  const perfectChance = getChecksProbability(\r\n    source,\r\n    Array(skill.rolls)\r\n      .fill(null)\r\n      .map((_, i) => ({ key: source.weapon.stat, offset: skill.offset })),\r\n  )\r\n  const stat = skill.weaponStatOverride || source.weapon.stat\r\n  const damage = getSkillDamage(skill, source)\r\n  const perfectKeys = getPerfectText(skill, source)\r\n  return (\r\n    <BoxContainer\r\n      style={{ marginTop: 30, position: 'relative' }}\r\n      substyle={{ background: '#111' }}\r\n    >\r\n      <FlexContainer $direction='column' style={{ alignItems: 'center' }}>\r\n        <FlexContainer style={{ marginTop: -27 }}>\r\n          <FullContainer />\r\n          <BoxContainer\r\n            substyle={{\r\n              padding: '4px 12px',\r\n              background: '#555',\r\n              fontWeight: 'bolder',\r\n            }}\r\n          >\r\n            {skill.name}\r\n          </BoxContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n        <span\r\n          style={{\r\n            color: 'rgba(255,255,255,0.4)',\r\n            marginTop: 8,\r\n            marginBottom: 8,\r\n          }}\r\n        >\r\n          Perfect ({Math.floor(perfectChance * 100)}%){' '}\r\n          {perfectKeys.length > 0 && '='} {perfectKeys}\r\n        </span>\r\n        <FlexContainer $full style={{ width: '100%', marginBottom: 8 }}>\r\n          {damage.value > 0 && skill.damage && (\r\n            <FlexContainer\r\n              $full\r\n              $direction='column'\r\n              style={{ alignItems: 'center', marginRight: 10 }}\r\n            >\r\n              <span\r\n                style={{\r\n                  color: damage.type === 'physical' ? 'lightblue' : 'plum',\r\n                  fontWeight: 'bolder',\r\n                  fontSize: 32,\r\n                }}\r\n              >\r\n                {`${Math.floor(damage.value)}`}\r\n              </span>\r\n              <span style={{ color: 'rgba(255,255,255,0.2)' }}>Max DMG</span>\r\n            </FlexContainer>\r\n          )}\r\n          {skill.rolls > 0 && (\r\n            <FlexContainer\r\n              $full\r\n              $direction='column'\r\n              style={{ alignItems: 'center' }}\r\n            >\r\n              <span\r\n                style={{\r\n                  fontWeight: 'bolder',\r\n                  fontSize: 32,\r\n                }}\r\n              >\r\n                {source.stats[stat] + skill.offset}%\r\n              </span>\r\n              <span style={{ color: 'rgba(255,255,255,0.2)' }}>\r\n                Per Check ACC\r\n              </span>\r\n            </FlexContainer>\r\n          )}\r\n        </FlexContainer>\r\n        <FlexContainer style={{ marginBottom: -18 }}>\r\n          <FullContainer />\r\n          <BoxContainer\r\n            substyle={{ padding: '0px 12px', background: '#555', fontSize: 10 }}\r\n          >\r\n            {skill.targetType}\r\n          </BoxContainer>\r\n          <FullContainer />\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { Button } from '../../elements/button'\r\nimport { SkillPreview } from '../SkillPreview'\r\nimport { SkillChecks } from '../SkillChecks'\r\nimport { SKILL_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { Hover } from '../Hover'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\nimport { HEAL } from '../../game/Skill/objects/heal'\r\n\r\nexport const CombatActions = () => {\r\n  const {\r\n    activeCharacter,\r\n    selectedSkill,\r\n    selectedTargets,\r\n    onSkillSelect,\r\n  } = useCombatContext()\r\n\r\n  if (!activeCharacter || activeCharacter.partyId !== PLAYER_PARTY_ID)\r\n    return null\r\n\r\n  const stat = selectedSkill?.weaponStatOverride || activeCharacter.weapon.stat\r\n  const skills = activeCharacter.skills.filter((skill) => {\r\n    if (activeCharacter.healthOffset === 0 && skill.id === HEAL('').id) {\r\n      return false\r\n    } else {\r\n      return true\r\n    }\r\n  })\r\n  return (\r\n    <FlexContainer $direction='column' style={{ minWidth: 340 }}>\r\n      {selectedSkill && <SkillChecks stat={stat} skill={selectedSkill} />}\r\n      <FlexContainer style={{ justifyContent: 'center', minHeight: 42 }}>\r\n        {skills.map((skill) => (\r\n          <React.Fragment key={skill.id}>\r\n            {SKILL_ICONS[skill.id] ? (\r\n              <Hover delay={0}>\r\n                {({ isHovering }) => (\r\n                  <Icon\r\n                    src={SKILL_ICONS[skill.id]}\r\n                    size={42}\r\n                    shadow={true}\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      padding: '0 12px',\r\n                    }}\r\n                    onClick={() => onSkillSelect(skill)}\r\n                    fill={\r\n                      skill.id === selectedSkill?.id\r\n                        ? 'lightsalmon'\r\n                        : isHovering\r\n                        ? 'white'\r\n                        : 'rgba(255,255,255,0.8)'\r\n                    }\r\n                  />\r\n                )}\r\n              </Hover>\r\n            ) : (\r\n              <Button\r\n                key={skill.id}\r\n                onClick={() => onSkillSelect(skill)}\r\n                style={{\r\n                  background: '#111',\r\n                  borderColor:\r\n                    selectedSkill && skill.id === selectedSkill.id\r\n                      ? 'white'\r\n                      : undefined,\r\n                }}\r\n              >\r\n                {skill.name}\r\n              </Button>\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && (\r\n        <SkillPreview\r\n          skill={selectedSkill}\r\n          source={activeCharacter}\r\n          targets={selectedTargets}\r\n        />\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import { styled } from 'styletron-react'\r\n\r\nexport const Monospace = styled('span', () => ({\r\n  fontFamily: 'Inconsolata, monospace',\r\n  fontWeight: 600,\r\n}))\r\nexport const Monodiv = styled('div', () => ({\r\n  fontFamily: 'Inconsolata, monospace',\r\n  fontWeight: 600,\r\n}))\r\n","import { useState, useEffect, useRef } from 'react'\r\n\r\nexport const usePrevious = <T = any>(value: T) => {\r\n  const ref = useRef<T>()\r\n\r\n  useEffect(() => {\r\n    ref.current = value\r\n  }, [value])\r\n\r\n  return ref.current\r\n}\r\n","export const CHARACTER_XP_MAX: Record<number, number> = {\r\n  0: 100,\r\n  1: 120,\r\n  2: 400,\r\n  3: 900,\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FullContainer } from '../../elements/flex'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { Monodiv } from '../../elements/monospace'\r\nimport { noneg } from '../../util'\r\nimport { usePrevious } from '../../hooks/usePrevious'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { CHARACTER_XP_MAX } from '../../game/Character/constants'\r\n\r\nexport interface GaugePropsT {\r\n  name?: string\r\n  color: string\r\n  height?: number\r\n  max: number\r\n  value: number\r\n  style?: CSSProperties\r\n  children?: React.ReactNode | React.ReactNode[]\r\n}\r\nexport const Gauge = (props: GaugePropsT) => {\r\n  const { name = '', value, color, height = 30, children } = props\r\n  const max = props.max < 1 ? 1 : props.max\r\n  const p = (value / max) * 100\r\n  const percentage = p > 100 ? 100 : p\r\n  const oldPercentage = usePrevious(percentage)\r\n  return (\r\n    <HoverToolTip\r\n      direction='right'\r\n      content={<BoxContainer>{`${name} (${value} / ${max})`}</BoxContainer>}\r\n    >\r\n      <BoxContainer\r\n        style={{ borderLeft: 'none' }}\r\n        substyle={{\r\n          padding: 0,\r\n          background: '#555',\r\n          height: height - 2,\r\n          position: 'relative',\r\n          borderColor: '1px rgba(255,255,255,0.3)',\r\n        }}\r\n      >\r\n        <Spring\r\n          from={{ value: oldPercentage || 0 }}\r\n          to={{ value: percentage }}\r\n          config={{ friction: 70, mass: 5, tension: 300 }}\r\n        >\r\n          {(p) => (\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                left: 0,\r\n                boxSizing: 'border-box',\r\n                height: height - 2,\r\n                maxWidth: `${p.value}%`,\r\n                minWidth: `${p.value}%`,\r\n                boxShadow: 'inset 0px 0px 1px rgba(0,0,0,0.5)',\r\n                textShadow: '1px 1px 1px black',\r\n                backgroundColor: color,\r\n                color: 'white',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n            ></div>\r\n          )}\r\n        </Spring>\r\n        <FullContainer\r\n          style={{\r\n            position: 'absolute',\r\n            height,\r\n            lineHeight: `${height - 2}px`,\r\n            right: 4,\r\n            top: 0,\r\n            fontSize: 10,\r\n            fontWeight: 'bold',\r\n            overflow: 'hidden',\r\n            textShadow: '0px 0px 3px black',\r\n          }}\r\n        >\r\n          <Monodiv>{children}</Monodiv>\r\n        </FullContainer>\r\n      </BoxContainer>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface HealthGaugePropsT {\r\n  character: tProcessedCharacter\r\n  height?: number\r\n}\r\nexport const HealthGauge = (props: HealthGaugePropsT) => {\r\n  const { character, height = 12 } = props\r\n  const health = noneg(character.health)\r\n  return (\r\n    <Gauge\r\n      name='Health'\r\n      color='#8f4e4d'\r\n      max={character.maxHealth}\r\n      value={health}\r\n      height={height}\r\n    >\r\n      {health}/{character.maxHealth}\r\n    </Gauge>\r\n  )\r\n}\r\nexport interface XPGaugePropsT {\r\n  character: tProcessedCharacter\r\n}\r\nexport const XPGauge = (props: HealthGaugePropsT) => {\r\n  const { character } = props\r\n  const value = character.experience\r\n  const max = CHARACTER_XP_MAX[character.level]\r\n  return (\r\n    <Gauge name='XP' color='#5e8575' max={max} value={value} height={12}>\r\n      {value}/{max}\r\n    </Gauge>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Tooltip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STATUS_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { tStatus } from '../../game/Status/type'\r\nimport { STATUS_CONFIG } from '../../game/Status/constants'\r\n\r\nexport interface TagPreviewPropsT {\r\n  status: tStatus\r\n  direction?: 'up' | 'down' | 'left' | 'right'\r\n}\r\nexport const TagPreview = (props: TagPreviewPropsT) => {\r\n  const { status, direction } = props\r\n  const statusConfig = STATUS_CONFIG[status.type]\r\n  return (\r\n    <Tooltip\r\n      direction={direction || 'bottom'}\r\n      content={\r\n        <BoxContainer style={{ maxWidth: 200 }}>\r\n          <FlexContainer $direction='column'>\r\n            <strong style={{ marginBottom: 8 }}>\r\n              {status.type} {status.duration > 0 ? `(${status.duration})` : ''}\r\n            </strong>\r\n            {statusConfig.description && (\r\n              <span>{statusConfig.description}</span>\r\n            )}\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n      }\r\n    >\r\n      <Icon shadow src={STATUS_ICONS[status.type] || ''} size={20} />\r\n    </Tooltip>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { noneg } from '../../util'\r\n\r\nexport interface HealthPropsT {\r\n  character: tProcessedCharacter\r\n  push: (content: JSX.Element, type?: string) => void\r\n}\r\nexport const Health = (props: HealthPropsT) => {\r\n  const { character, push } = props\r\n  const health = noneg(character.health)\r\n  const [previousHealth, setPreviousHealth] = useState(character.health)\r\n  useEffect(() => {\r\n    const diff = previousHealth - health\r\n    if (diff > 0) {\r\n      push(<span>- {diff} HP</span>)\r\n    }\r\n    if (diff < 0) {\r\n      push(<span>+ {Math.abs(diff)} HP</span>, 'good')\r\n    }\r\n  }, [health])\r\n  return (\r\n    <span\r\n      style={{\r\n        fontSize: 52,\r\n        height: 52,\r\n        width: 60,\r\n        textShadow: '1px 1px 10px black',\r\n        color: '#b55553',\r\n        fontFamily: 'Bangers',\r\n      }}\r\n    >\r\n      <Spring\r\n        from={{ hp: previousHealth || 0 }}\r\n        to={{ hp: health }}\r\n        config={{ friction: 70, mass: 5, tension: 300, clamp: true }}\r\n      >\r\n        {(hpp) => <span>{Math.floor(hpp.hp)}</span>}\r\n      </Spring>\r\n    </span>\r\n  )\r\n}\r\n","import React, {\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useMemo,\r\n  CSSProperties,\r\n} from 'react'\r\nimport { useSpring, animated, useTransition } from 'react-spring'\r\nimport { FullContainer } from '../../elements/flex'\r\nimport { v4 } from 'uuid'\r\n\r\nexport interface LocalToastContextT {\r\n  push: (content: JSX.Element) => void\r\n}\r\nexport const defaultValue: LocalToastContextT = {\r\n  push: (content) => {},\r\n}\r\nexport const LocalToastContext = React.createContext<LocalToastContextT>(\r\n  defaultValue,\r\n)\r\nexport const useLocalToast = () => useContext(LocalToastContext)\r\n\r\nexport interface LocalToastProviderProps {\r\n  children: JSX.Element\r\n}\r\nexport const LocalToastProvider = (props: LocalToastProviderProps) => {\r\n  const { children } = props\r\n  const [queue, setQueue] = useState<\r\n    {\r\n      id: string\r\n      content: JSX.Element\r\n    }[]\r\n  >([])\r\n\r\n  useEffect(() => {\r\n    const i = setInterval(() => {\r\n      setQueue((q) => {\r\n        const [f, ...rest] = q\r\n        return rest || []\r\n      })\r\n    }, 3000)\r\n    return () => {\r\n      clearInterval(i)\r\n    }\r\n  }, [])\r\n\r\n  const push = (c: JSX.Element, type?: string) => {\r\n    setQueue((q) => [\r\n      ...q,\r\n      {\r\n        id: v4(),\r\n        content: c,\r\n        type,\r\n      },\r\n    ])\r\n  }\r\n\r\n  return (\r\n    <LocalToastContext.Provider value={{ push }}>\r\n      <>\r\n        <div style={{ position: 'relative' }}>\r\n          <Toast queue={queue} />\r\n        </div>\r\n        {children}\r\n      </>\r\n    </LocalToastContext.Provider>\r\n  )\r\n}\r\n\r\ninterface ToastQT {\r\n  id: string\r\n  type?: string\r\n  content: JSX.Element\r\n}\r\nexport interface ToastPropsT {\r\n  queue: ToastQT[]\r\n  style?: CSSProperties\r\n}\r\nexport const Toast = (props: ToastPropsT) => {\r\n  const { queue, style } = props\r\n  const hasChildren = queue.length > 0\r\n  const rootStyle = useSpring({\r\n    top: hasChildren ? -40 : 0,\r\n    opacity: hasChildren ? 1 : 0,\r\n  })\r\n  const animation = useTransition(queue, (q) => q.id, {\r\n    from: { transform: 'translate3d(0,40px,0)', maxWidth: 0, opacity: 0 },\r\n    enter: { transform: 'translate3d(0,0px,0)', maxWidth: 120, opacity: 1 },\r\n    leave: { transform: 'translate3d(0,-80px,0)', maxWidth: 0, opacity: 0 },\r\n  })\r\n  return (\r\n    <animated.div\r\n      style={{\r\n        ...rootStyle,\r\n        position: 'absolute',\r\n        width: '100%',\r\n        display: 'flex',\r\n        height: 40,\r\n        ...(style || {}),\r\n      }}\r\n    >\r\n      {animation.map((item) => (\r\n        <animated.div\r\n          key={item.key}\r\n          style={{\r\n            display: 'flex',\r\n            ...item.props,\r\n          }}\r\n        >\r\n          <FullContainer />\r\n          <div\r\n            style={{\r\n              padding: 8,\r\n              color: item.item.type === 'good' ? '#aae6bf' : 'red',\r\n              fontWeight: 'bolder',\r\n              marginBottom: 4,\r\n              marginRight: 4,\r\n              fontSize: 20,\r\n              whiteSpace: 'nowrap',\r\n              textShadow: '1px 1px 1px black',\r\n            }}\r\n          >\r\n            {item.item.content}\r\n          </div>\r\n          <FullContainer />\r\n        </animated.div>\r\n      ))}\r\n    </animated.div>\r\n  )\r\n}\r\n\r\nexport interface LocalToastRpPropsT {\r\n  children: (props: LocalToastContextT) => JSX.Element\r\n  style?: CSSProperties\r\n}\r\nexport const LocalToastRp = (props: LocalToastRpPropsT) => {\r\n  const { children, style } = props\r\n  const [queue, setQueue] = useState<ToastQT[]>([])\r\n\r\n  const push = (c: JSX.Element, type?: string) => {\r\n    setQueue((q) => [\r\n      ...q,\r\n      {\r\n        id: v4(),\r\n        content: c,\r\n        type,\r\n      },\r\n    ])\r\n    setTimeout(() => {\r\n      setQueue((q) => {\r\n        const [f, ...rest] = q\r\n        return rest || []\r\n      })\r\n    }, 4000)\r\n  }\r\n  return (\r\n    <>\r\n      <div style={{ position: 'relative' }}>\r\n        <Toast queue={queue} style={style} />\r\n      </div>\r\n      {children({ push })}\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { HealthGauge } from '../Gauge'\r\nimport { styled } from 'styletron-react'\r\nimport { Badge, HoverBadge } from '../../elements/badge'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { TagPreview } from '../TagPreview'\r\nimport { CharacterImage } from '../CharacterImage'\r\nimport { usePrevious } from '../../hooks/usePrevious'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { noneg } from '../../util'\r\nimport { Icon } from '../Icon'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { Health } from './Health'\r\nimport { LocalToastRp } from '../../contexts/LocalToastContext'\r\n\r\nexport interface EnemyCharacterPropsT {\r\n  character: tProcessedCharacter\r\n  activeCharacter: tProcessedCharacter\r\n  hoverable?: boolean\r\n  selected?: boolean\r\n  isHovering?: boolean\r\n  onClick?: () => void\r\n}\r\nconst Wrapper = styled('div', (props: any) => {\r\n  const { $selected, $active } = props\r\n  return {\r\n    margin: 10,\r\n    boxShadow: $active ? '0px 0px 20px white' : 'none',\r\n    transition: 'all 0.1s',\r\n  }\r\n})\r\nexport const EnemyCharacter = (props: EnemyCharacterPropsT) => {\r\n  const { character, activeCharacter, onClick } = props\r\n  const health = noneg(character.health)\r\n  const previousHealth = usePrevious<number>(health)\r\n  return (\r\n    <div\r\n      onClick={() => (onClick && character.health > 0 ? onClick() : null)}\r\n      style={{\r\n        borderWidth: 2,\r\n        width: 320,\r\n        position: 'relative',\r\n        cursor: onClick ? 'pointer' : 'default',\r\n        color: 'rgba(255,255,255,0.8)',\r\n        opacity: character.health <= 0 ? 0.5 : 1,\r\n      }}\r\n    >\r\n      <FlexContainer style={{ alignItems: 'center' }}>\r\n        <FlexContainer>\r\n          <Icon\r\n            src={character.icon || ''}\r\n            shadow\r\n            fill={\r\n              activeCharacter && character.id === activeCharacter.id\r\n                ? 'lightsalmon'\r\n                : 'white'\r\n            }\r\n            size={64}\r\n            style={{ zIndex: 1, position: 'relative', marginRight: -24 }}\r\n          />\r\n        </FlexContainer>\r\n        <FlexContainer $full $direction='column'>\r\n          <FlexContainer\r\n            style={{\r\n              justifyContent: 'flex-end',\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                padding: '2px 4px',\r\n                textAlign: 'right',\r\n                fontSize: 18,\r\n                lineHeight: '18px',\r\n                background: 'rgba(0,0,0,0.4)',\r\n                textShadow: '1px 1px 2px black',\r\n              }}\r\n            >\r\n              {character.name}\r\n            </span>\r\n          </FlexContainer>\r\n          <div style={{ boxShadow: '0px 4px 15px rgba(0,0,0,1)' }}>\r\n            <HealthGauge character={character} height={20} />\r\n          </div>\r\n          <HoverBadge\r\n            direction='down'\r\n            content={<BoxContainer>Enemy Level</BoxContainer>}\r\n            badgeProps={{\r\n              $left: '-6px',\r\n              $bottom: '-6px',\r\n              $size: '20px',\r\n              $color: 'lightcoral',\r\n            }}\r\n          >\r\n            <span>{character.level}</span>\r\n          </HoverBadge>\r\n          <FlexContainer\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: '-12px',\r\n              left: '40px',\r\n            }}\r\n          >\r\n            {character.status.map((status, i) => (\r\n              <TagPreview key={i} status={status} />\r\n            ))}\r\n          </FlexContainer>\r\n          <FlexContainer\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: '-8px',\r\n              right: '16px',\r\n              width: 52,\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <FullContainer />\r\n            {character.stats.armor > 0 && (\r\n              <Badge\r\n                $absolute={false}\r\n                $right='4px'\r\n                $size='12px'\r\n                $color='lightblue'\r\n              >\r\n                {character.stats.armor}\r\n              </Badge>\r\n            )}\r\n            {character.stats.resistance > 0 && (\r\n              <Badge $absolute={false} $size='12px' $color='plum'>\r\n                {character.stats.resistance}\r\n              </Badge>\r\n            )}\r\n            <FullContainer />\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n        <LocalToastRp style={{ top: -20, right: -30, flexDirection: 'column' }}>\r\n          {({ push }) => <Health character={character} push={push} />}\r\n        </LocalToastRp>\r\n      </FlexContainer>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { ConfirmButton2, ConfirmButton, RedButton } from '../../elements/button'\r\nimport { EnemyCharacter } from '../EnemyCharacter'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\n\r\nexport interface CombatPartyPropsT {\r\n  party: tProcessedParty\r\n}\r\nexport const CombatParty = (props: CombatPartyPropsT) => {\r\n  const { party } = props\r\n  const {\r\n    activeCharacter,\r\n    selectedSkill,\r\n    onTargetsSelect,\r\n    next,\r\n  } = useCombatContext()\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          padding: '0 120px',\r\n          cursor: selectedSkill?.targetType === 'group' ? 'pointer' : 'default',\r\n        }}\r\n        onClick={() => {\r\n          if (selectedSkill && selectedSkill.targetType === 'group') {\r\n            onTargetsSelect(party)\r\n          }\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <div key={c.id}>\r\n            <EnemyCharacter activeCharacter={activeCharacter} character={c} />\r\n            {selectedSkill &&\r\n              selectedSkill.targetType === 'single' &&\r\n              c.health > 0 &&\r\n              activeCharacter.partyId === PLAYER_PARTY_ID && (\r\n                <FlexContainer\r\n                  style={{ justifyContent: 'center', marginTop: -11 }}\r\n                >\r\n                  <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n                    <RedButton onClick={() => next(c)} $direction='down'>\r\n                      Attack\r\n                    </RedButton>\r\n                  </div>\r\n                </FlexContainer>\r\n              )}\r\n          </div>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && selectedSkill.targetType === 'group' && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n            <RedButton onClick={() => next(party)}>Attack Group</RedButton>\r\n          </div>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\n\r\nexport interface AppHeaderPropsT {\r\n  children?: JSX.Element\r\n  left?: JSX.Element\r\n  right?: JSX.Element\r\n}\r\n\r\nexport const AppHeader = (props: AppHeaderPropsT) => {\r\n  const { children, left, right } = props\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'center',\r\n          background: '#111',\r\n          height: 52,\r\n          borderBottom: '2px solid rgba(255,255,255,0.3)',\r\n          boxShadow: '1px 1px 1px black',\r\n        }}\r\n      >\r\n        <FlexContainer $full>{left}</FlexContainer>\r\n        <FlexContainer $full>{children}</FlexContainer>\r\n        <FlexContainer $full>{right}</FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport Gold from '../../icons/svg/delapouite/coins.svg'\r\nimport { Icon } from '../Icon'\r\n\r\nexport const PartyResources = () => {\r\n  const { party } = usePartyContext()\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{ alignItems: 'center', color: 'white', paddingRight: 20 }}\r\n    >\r\n      <Icon src={Gold} size={18} style={{ marginRight: 8 }} />\r\n      {party.gold}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button, RedButton } from '../../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { AppHeader } from '../AppHeader'\r\nimport { PartyResources } from '../PartyResources'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { Icon } from '../Icon'\r\nimport { useGameStateContext } from '../../contexts/GameStateContext'\r\nimport { tQueue } from '../../game/Queue/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { getMax, getFirst, getSortedIds } from '../../game/Queue/util'\r\nimport { PLAYER_PARTY_ID } from '../../game/Party/constants'\r\n\r\nconst size = 40\r\nexport interface CombatQueuePropsT {\r\n  queue: tQueue\r\n  characters: tProcessedCharacter[]\r\n}\r\nexport const CombatQueue = (props: CombatQueuePropsT) => {\r\n  const { queue, characters } = props\r\n  const { isRunning } = useCombatContext()\r\n  const history = useHistory()\r\n  const { level, nextLevel } = useGameStateContext()\r\n  const first = characters.find(\r\n    (c) => c.id === getFirst(queue),\r\n  ) as tProcessedCharacter\r\n  const sortedIds = getSortedIds(queue)\r\n  const bigList = [\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n    ...sortedIds,\r\n  ]\r\n  const count = Math.floor((800 - 52) / size)\r\n  const [f, ...list] = Array(count)\r\n    .fill(null)\r\n    .map((_, i) => bigList[i])\r\n    .map((id) => characters.find((c) => c.id === id))\r\n    .filter((c) => c !== undefined)\r\n  const max = getMax(queue)\r\n  const min = 50\r\n  const widthCoef = max > min ? 100 / max : 100 / min\r\n  return (\r\n    <AppHeader\r\n      left={\r\n        <>\r\n          {/*<RedButton onClick={gotoParty}>Edit Party</RedButton>*/}\r\n          <Button onClick={() => history.push('/JSFTK_combat')}>\r\n            Restart ({level})\r\n          </Button>\r\n        </>\r\n      }\r\n      right={\r\n        <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n          <PartyResources />\r\n        </FlexContainer>\r\n      }\r\n    >\r\n      <>\r\n        {first && isRunning && (\r\n          <FlexContainer\r\n            style={{\r\n              width: 800,\r\n              flexDirection: 'row-reverse',\r\n              boxShadow: '0px 0px 3px black',\r\n              borderLeft: '1px solid rgba(255,255,255,0.3)',\r\n              background: '#222',\r\n            }}\r\n          >\r\n            <FlexContainer style={{ position: 'relative', marginLeft: 22 }}>\r\n              {first?.partyId === PLAYER_PARTY_ID ? (\r\n                <img\r\n                  alt='profile'\r\n                  height='64'\r\n                  width='64'\r\n                  src={`https://picsum.photos/seed/${first?.name}/115/115`}\r\n                  style={{\r\n                    height: 64,\r\n                    width: 64,\r\n                    border: '2px solid rgba(255,255,255,0.8)',\r\n                    borderTop: 'none',\r\n                    boxShadow: '1px 1px 1px black',\r\n                    zIndex: 2,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <FlexContainer\r\n                  style={{\r\n                    background: 'lightsalmon',\r\n                    border: '2px solid rgba(255,255,255,0.8)',\r\n                    height: 64,\r\n                    width: 64,\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    zIndex: 2,\r\n                  }}\r\n                >\r\n                  <Icon\r\n                    src={first?.icon || ''}\r\n                    shadow\r\n                    fill={'white'}\r\n                    size={52}\r\n                    style={{ zIndex: 2, position: 'relative' }}\r\n                  />\r\n                </FlexContainer>\r\n              )}\r\n              <FlexContainer\r\n                $direction='column'\r\n                style={{\r\n                  position: 'absolute',\r\n                  background: 'rgba(255,255,255,0.8)',\r\n                  color: '#111',\r\n                  zIndex: 2,\r\n                  width: 120,\r\n                  top: 16,\r\n                  paddingLeft: 4,\r\n                  right: '-124px',\r\n                }}\r\n              >\r\n                {first && <span>{first.name}'s Turn</span>}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n            <FlexContainer $full $direction='column'>\r\n              <FullContainer />\r\n              <FlexContainer $full style={{ position: 'relative' }}>\r\n                {characters\r\n                  .filter((c) => c.id !== first?.id && c.health > 0)\r\n                  .map((c, i) => (\r\n                    <div\r\n                      key={`${c?.id}-${i}`}\r\n                      style={{\r\n                        height: size - 10,\r\n                        width: size - 7,\r\n                        position: 'absolute',\r\n                        bottom: '0px',\r\n                        right: `calc(${queue[c.id] * widthCoef}% - ${\r\n                          size - 6\r\n                        }px)`,\r\n                        transition: 'all 0.3s',\r\n                      }}\r\n                    >\r\n                      {c.partyId === PLAYER_PARTY_ID ? (\r\n                        <img\r\n                          alt={`${queue[c?.id || '']}`}\r\n                          height={size}\r\n                          width={size}\r\n                          src={`https://picsum.photos/seed/${c?.name}/115/115`}\r\n                          style={{\r\n                            height: size - 10,\r\n                            width: size - 7,\r\n                            border: `1px solid ${\r\n                              c.partyId === PLAYER_PARTY_ID\r\n                                ? 'lightblue'\r\n                                : 'lightsalmon'\r\n                            }`,\r\n                            borderBottom: 'none',\r\n                          }}\r\n                        />\r\n                      ) : (\r\n                        <FlexContainer\r\n                          style={{\r\n                            background: 'lightsalmon',\r\n                            border: '2px solid rgba(255,255,255,0.8)',\r\n                            height: size - 10,\r\n                            width: size - 7,\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                          }}\r\n                        >\r\n                          <Icon\r\n                            src={c.icon || ''}\r\n                            shadow\r\n                            fill={'white'}\r\n                            size={size - 13}\r\n                            style={{ zIndex: 1, position: 'relative' }}\r\n                          />\r\n                        </FlexContainer>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n          </FlexContainer>\r\n        )}\r\n      </>\r\n    </AppHeader>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { tSkill } from '../../game/Skill/type'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { tCharacter } from '../../game/Character/type'\r\n\r\nexport const Span = (color: string, text: JSX.Element | string) => (\r\n  <span style={{ color, fontWeight: 'bold' }}>{text}</span>\r\n)\r\nexport const SkillSpan = (skill: tSkill) => Span('plum', skill.name)\r\n\r\nexport const NameSpanBuilder = (party: tParty, enemyParty: tParty) => (\r\n  character: tCharacter,\r\n) => {\r\n  const isUserParty = character.partyId === party.id\r\n  const isEnemyParty = character.partyId === enemyParty.id\r\n  const color = isUserParty\r\n    ? 'lightgreen'\r\n    : isEnemyParty\r\n    ? 'lightsalmon'\r\n    : 'white'\r\n\r\n  return Span(color, character.name)\r\n}\r\n","import React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport { useCombatContext } from '../CombatContext'\r\nimport { Monospace } from '../../elements/monospace'\r\nimport { NameSpanBuilder, SkillSpan, Span } from './util'\r\nimport { noneg } from '../../util'\r\nimport { getDamageResistance } from '../../game/Character/util'\r\nimport { STATUS_CONFIG } from '../../game/Status/constants'\r\n\r\nexport interface CombatLogContextT {\r\n  combatLog: JSX.Element[]\r\n  clear: () => void\r\n}\r\nconst defualtValue: CombatLogContextT = {\r\n  combatLog: [],\r\n  clear: () => {},\r\n}\r\nexport const CombatLogContext = createContext<CombatLogContextT>(defualtValue)\r\nexport const useCombatLogContext = () => useContext(CombatLogContext)\r\n\r\ntype DeadLogT = Record<string, boolean | undefined>\r\n\r\nexport interface CombatLogContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const CombatLogContextProvider = (\r\n  props: CombatLogContextProviderPropsT,\r\n) => {\r\n  const { children } = props\r\n  const { activeRound, roundResults, enemyParty, party } = useCombatContext()\r\n  const [combatLog, setCombatLog] = useState<JSX.Element[]>([])\r\n  const clear = () => setCombatLog([])\r\n  const [deadLog, setDeadLog] = useState<DeadLogT>({})\r\n  const NameSpan = NameSpanBuilder(party, enemyParty)\r\n  const log = (line: JSX.Element) =>\r\n    setCombatLog((log) => [\r\n      ...log,\r\n      <Monospace style={{ display: 'inline-block', fontWeight: 'normal' }}>\r\n        {line}\r\n      </Monospace>,\r\n    ])\r\n\r\n  useEffect(() => {\r\n    const characters = [...enemyParty.characters, ...party.characters]\r\n    setTimeout(() => {\r\n      characters.forEach((character) => {\r\n        if (character.health <= 0 && !deadLog[character.id]) {\r\n          setDeadLog((dLog) => ({ ...dLog, [character.id]: true }))\r\n          log(<span>{Span('lightcoral', `${character.name} died.`)}</span>)\r\n        }\r\n      })\r\n    }, 5)\r\n  }, [enemyParty, party])\r\n\r\n  useEffect(() => {\r\n    if (activeRound && activeRound) {\r\n      log(\r\n        <span>\r\n          {NameSpan(activeRound.sourceResult.source)} uses{' '}\r\n          {SkillSpan(activeRound.sourceResult.skill)}.\r\n        </span>,\r\n      )\r\n    }\r\n  }, [activeRound])\r\n\r\n  useEffect(() => {\r\n    if (roundResults.length === 0) return\r\n    const latestRounds = roundResults[roundResults.length - 1]\r\n    const baseRound = latestRounds.sourceResult\r\n    if (!baseRound) return\r\n\r\n    if (baseRound.skill.damage && baseRound.passedCount === 0) {\r\n      log(<span>{baseRound.source.name}'s attack missed.</span>)\r\n    }\r\n    if (!baseRound.skill.damage && !baseRound.perfect) {\r\n      log(<span>{SkillSpan(baseRound.skill)} failed.</span>)\r\n    }\r\n    if (baseRound.criticalHitSuccess) {\r\n      log(<span>{Span('gold', 'Critical Hit!')}</span>)\r\n    }\r\n    if (baseRound.perfect && baseRound.rollResults.length > 0) {\r\n      log(<span>{Span('gold', 'Perfect!')}</span>)\r\n    }\r\n    latestRounds.targetResults.forEach((round) => {\r\n      const targetParty = party.id === round.source.partyId ? enemyParty : party\r\n      if (round.passedCount > 0) {\r\n        if (round.dodgeSuccess) {\r\n          log(<span>{NameSpan(round.target)} dodged the attack.</span>)\r\n        } else if (round.totalDamage.value > 0) {\r\n          log(\r\n            <span>\r\n              {SkillSpan(round.skill)} deals{' '}\r\n              {Span('white', `${round.loggedDamgge.value} damage`)} to{' '}\r\n              {NameSpan(round.target)}.\r\n            </span>,\r\n          )\r\n        } else if (round.skill.damage) {\r\n          log(\r\n            <span>\r\n              {SkillSpan(round.skill)} did no damage to {NameSpan(round.target)}\r\n              .\r\n            </span>,\r\n          )\r\n        }\r\n        if (round.splashDamage.value > 0) {\r\n          targetParty.characters\r\n            .filter((c) => c.id !== round.target.id && c.health > 0)\r\n            .forEach((subTarget) => {\r\n              const splashDamageResistance = getDamageResistance(\r\n                subTarget,\r\n                round.splashDamage,\r\n              )\r\n              log(\r\n                <span>\r\n                  {SkillSpan(round.skill)} deals{' '}\r\n                  {Span(\r\n                    'white',\r\n                    `${\r\n                      round.splashDamage.value - splashDamageResistance\r\n                    } splash damage`,\r\n                  )}{' '}\r\n                  to {NameSpan(subTarget)}.\r\n                </span>,\r\n              )\r\n            })\r\n        }\r\n\r\n        if (round.reflectedDamage.value > 0) {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} reflected{' '}\r\n              {Span('white', `${round.reflectedDamage.value} damage`)}\r\n            </span>,\r\n          )\r\n        }\r\n\r\n        /* TODO\r\n        if (round.healing > 0) {\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} gained{' '}\r\n              {Span('white', `${round.healing} HP`)} from{' '}\r\n              {SkillSpan(round.skill)}\r\n            </span>,\r\n          )\r\n        }\r\n        */\r\n\r\n        round.addedStatus.forEach((status) => {\r\n          const statusConfig = STATUS_CONFIG[status]\r\n          log(\r\n            <span>\r\n              {NameSpan(round.target)} became {status}\r\n              {statusConfig.duration > 0\r\n                ? ` (${statusConfig.duration} turns)`\r\n                : ''}\r\n              .\r\n            </span>,\r\n          )\r\n        })\r\n      }\r\n    })\r\n  }, [roundResults.length])\r\n\r\n  return (\r\n    <CombatLogContext.Provider value={{ combatLog, clear }}>\r\n      {children}\r\n    </CombatLogContext.Provider>\r\n  )\r\n}\r\n","import React, { useRef, useEffect, useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { useCombatLogContext } from '../../contexts/CombatLogContext'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport { Button } from '../../elements/button'\r\n\r\nexport const CombatLog = () => {\r\n  const { combatLog } = useCombatLogContext()\r\n  const scrollRef = useRef<HTMLDivElement>(null)\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n  useEffect(() => {\r\n    if (scrollRef.current && isExpanded) {\r\n      scrollRef.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n  }, [combatLog])\r\n  const style = useSpring({\r\n    minHeight: isExpanded ? 263 : 0,\r\n    maxHeight: isExpanded ? 263 : 0,\r\n    padding: isExpanded ? 8 : 0,\r\n  })\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{\r\n        minWidth: 300,\r\n        overflow: 'auto',\r\n        background: 'rgba(0,0,0,0.7)',\r\n        fontSize: 12,\r\n        color: 'rgba(255,255,255,0.8)',\r\n      }}\r\n    >\r\n      <FlexContainer\r\n        style={{\r\n          background: '#111',\r\n          padding: 8,\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <FullContainer>Combat Log</FullContainer>\r\n        <Button\r\n          onClick={() => setIsExpanded((v) => !v)}\r\n          style={{ padding: '2px 8px' }}\r\n        >\r\n          {isExpanded ? '_' : '+'}\r\n        </Button>\r\n      </FlexContainer>\r\n      <animated.div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          overflow: 'auto',\r\n          ...style,\r\n        }}\r\n      >\r\n        {combatLog.map((line, i) => (\r\n          <span key={i}>{line}</span>\r\n        ))}\r\n        <div ref={scrollRef} />\r\n      </animated.div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\n\r\nexport interface UIContextT {\r\n  playerCanEquipItem: boolean\r\n  openCharacterInventoryId: string | undefined\r\n  onCharacterConsumableClick: (\r\n    c: tProcessedCharacter,\r\n    index: number,\r\n    item: tConsumable,\r\n  ) => void\r\n  setPlayerCanEquipItem: (v: boolean) => void\r\n  setOpenCharacterInventoryId: (id: string | undefined) => void\r\n  setOnCharacterConsumableClick: (\r\n    fn: (c: tProcessedCharacter, index: number, item: tConsumable) => void,\r\n  ) => void\r\n}\r\n\r\nconst defaultValue: UIContextT = {\r\n  playerCanEquipItem: false,\r\n  openCharacterInventoryId: undefined,\r\n  onCharacterConsumableClick: (c, i, item) => {},\r\n  setPlayerCanEquipItem: (v) => {},\r\n  setOpenCharacterInventoryId: (id) => {},\r\n  setOnCharacterConsumableClick: (fn) => {},\r\n}\r\n\r\nexport const UIContext = React.createContext<UIContextT>(defaultValue)\r\nexport const useUIContext = () => useContext(UIContext)\r\n\r\nexport interface UIContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const UIContextProvider = (props: UIContextProviderPropsT) => {\r\n  const { children } = props\r\n  const [playerCanEquipItem, setPlayerCanEquipItem] = useState(false)\r\n  const [openCharacterInventoryId, setOpenCharacterInventoryId] = useState<\r\n    string | undefined\r\n  >()\r\n  const [onCharacterConsumableClick, _setOnCharacterConsumableClick] = useState<\r\n    (c: tProcessedCharacter, i: number, item: tConsumable) => void\r\n  >((c, i, item) => {})\r\n\r\n  const setOnCharacterConsumableClick = (\r\n    fn: (c: tProcessedCharacter, index: number, item: tConsumable) => void,\r\n  ) => {\r\n    _setOnCharacterConsumableClick(() => fn)\r\n  }\r\n  return (\r\n    <UIContext.Provider\r\n      value={{\r\n        playerCanEquipItem,\r\n        openCharacterInventoryId,\r\n        onCharacterConsumableClick,\r\n        setPlayerCanEquipItem,\r\n        setOpenCharacterInventoryId,\r\n        setOnCharacterConsumableClick,\r\n      }}\r\n    >\r\n      {children}\r\n    </UIContext.Provider>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { FlexContainer, FullContainer } from '../elements/flex'\r\nimport { RoundResultRenderer } from '../components/RoundResultRenderer'\r\nimport { CombatActions } from '../components/CombatActions'\r\nimport { CombatParty } from '../components/CombatParty'\r\nimport { CombatQueue } from '../components/CombatQueue'\r\nimport { CombatLog } from '../components/CombatLog'\r\nimport { useUIContext } from '../contexts/UIContext'\r\nimport { useCombatStart } from '../hooks/useCombatStart'\r\n\r\nexport const Combat = () => {\r\n  const {\r\n    enemyParty,\r\n    activeCharacter,\r\n    characters,\r\n    queue,\r\n    isRunning,\r\n    isRenderingResult,\r\n    onSkillSelect,\r\n  } = useCombatContext()\r\n\r\n  const { setOnCharacterConsumableClick } = useUIContext()\r\n  useCombatStart()\r\n  useEffect(() => {\r\n    setOnCharacterConsumableClick((c, index, item) => {\r\n      if (!c) return\r\n      if (c.id === activeCharacter.id) {\r\n        onSkillSelect(item.skill, index)\r\n      }\r\n    })\r\n  }, [onSkillSelect, activeCharacter])\r\n\r\n  return (\r\n    <FlexContainer $full style={{ height: '100%' }}>\r\n      <FlexContainer $full $direction='column'>\r\n        <CombatQueue queue={queue} characters={characters} />\r\n        <FlexContainer\r\n          $direction='column'\r\n          $full\r\n          style={{ padding: '30px 10px 0 10px' }}\r\n        >\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{ marginBottom: 40, minHeight: 90 }}\r\n          >\r\n            <CombatParty party={enemyParty} />\r\n          </FlexContainer>\r\n          <FlexContainer $full>\r\n            {isRunning && activeCharacter && (\r\n              <>\r\n                <FullContainer />\r\n                <FlexContainer $direction='column'>\r\n                  <FullContainer />\r\n                  <>\r\n                    {!isRenderingResult && <CombatActions />}\r\n                    <RoundResultRenderer isModal={false} />\r\n                  </>\r\n                  <FullContainer />\r\n                </FlexContainer>\r\n                <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n                  <FlexContainer\r\n                    $direction='column'\r\n                    // style={{ justifyContent: 'center' }}\r\n                  >\r\n                    <CombatLog />\r\n                  </FlexContainer>\r\n                </FlexContainer>\r\n              </>\r\n            )}\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useModalContext } from '../contexts/ModalContext'\r\nimport { useCombatLogContext } from '../contexts/CombatLogContext'\r\nimport { useCombatContext } from '../contexts/CombatContext'\r\nimport { FlexContainer } from '../elements/flex'\r\nimport { Icon } from '../components/Icon'\r\n\r\nexport const useCombatStart = (delay: number = 1000) => {\r\n  const { open, close } = useModalContext()\r\n  const { clear } = useCombatLogContext()\r\n  const { enemyParty, start, reset } = useCombatContext()\r\n  useEffect(() => {\r\n    clear()\r\n    open(\r\n      <div style={{ textAlign: 'center' }}>\r\n        <h1>Combat Start!</h1>\r\n        <FlexContainer\r\n          style={{ justifyContent: 'space-around', marginBottom: 40 }}\r\n        >\r\n          {enemyParty.characters.map((c) => (\r\n            <FlexContainer\r\n              style={{\r\n                background: 'lightsalmon',\r\n                border: '2px solid rgba(255,255,255,0.8)',\r\n                height: 60,\r\n                width: 60,\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              <Icon\r\n                src={c.icon || ''}\r\n                shadow\r\n                fill={'white'}\r\n                size={60}\r\n                style={{ zIndex: 1, position: 'relative' }}\r\n              />\r\n            </FlexContainer>\r\n          ))}\r\n        </FlexContainer>\r\n      </div>,\r\n    )\r\n    setTimeout(() => {\r\n      close()\r\n      start()\r\n    }, 1500)\r\n    return () => {\r\n      reset()\r\n      clear()\r\n    }\r\n  }, [])\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Route, useHistory } from 'react-router-dom'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport { useModalContext } from '../contexts/ModalContext'\r\n\r\nexport const makeRoute = (path: string, Component: React.FC) => (\r\n  <Route path={`/JSFTK_combat${path}`}>\r\n    <Component />\r\n  </Route>\r\n)\r\n\r\nexport const RouteController = () => {\r\n  const { encounters, currentEncounter, level } = useGameStateContext()\r\n  const history = useHistory()\r\n  const { open } = useModalContext()\r\n  useEffect(() => {\r\n    if (level > encounters.length - 1) {\r\n      open(\r\n        <div>\r\n          <h1>You Win!!!!!!!!!!!</h1>\r\n        </div>,\r\n      )\r\n      history.push('/JSFTK_combat')\r\n    } else if (currentEncounter && currentEncounter.type === 'combat') {\r\n      history.push('/JSFTK_combat/combat')\r\n    } else if (!currentEncounter && level > 0) {\r\n      history.push('/JSFTK_combat/party')\r\n    }\r\n  }, [currentEncounter, level])\r\n  return null\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { usePartyContext } from '../contexts/PartyContext'\r\nimport { FlexContainer, FullContainer } from '../elements/flex'\r\nimport { Button } from '../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { AppHeader } from '../components/AppHeader'\r\nimport { PartyResources } from '../components/PartyResources'\r\nimport { useUIContext } from '../contexts/UIContext'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport { BoxContainer } from '../elements/box'\r\nimport { getSkillResult } from '../game/Skill/util'\r\nimport { commitSkillResults } from '../game/Skill/committer'\r\n\r\nexport const Party = () => {\r\n  const { party, rawParty, updateParty } = usePartyContext()\r\n  const {\r\n    currentEncounter,\r\n    currentChoice,\r\n    level,\r\n    chooseCurrent,\r\n    nextLevel,\r\n  } = useGameStateContext()\r\n  const history = useHistory()\r\n  const {\r\n    setPlayerCanEquipItem,\r\n    setOnCharacterConsumableClick,\r\n  } = useUIContext()\r\n\r\n  useEffect(() => {\r\n    setPlayerCanEquipItem(true)\r\n    setOnCharacterConsumableClick((character, consumableIndex) => {\r\n      if (!character) return\r\n      const consumable = character.consumables[consumableIndex]\r\n      const targets =\r\n        consumable.skill.targetType === 'self'\r\n          ? [character]\r\n          : consumable.skill.targetType === 'party'\r\n          ? party.characters\r\n          : []\r\n      const result = getSkillResult(character, targets, consumable.skill)\r\n      const parties = commitSkillResults(rawParty, rawParty, {})(result)\r\n      updateParty(parties.playerParty)\r\n    })\r\n    return () => {\r\n      setPlayerCanEquipItem(false)\r\n      setOnCharacterConsumableClick((c, i, item) => {})\r\n    }\r\n  }, [party, rawParty, updateParty])\r\n\r\n  return (\r\n    <FlexContainer $full $direction='column' style={{ height: '100%' }}>\r\n      <AppHeader\r\n        left={\r\n          <>\r\n            {/*<RedButton onClick={enterCombat}>Enter Combat</RedButton>*/}\r\n            <Button onClick={() => history.push('/JSFTK_combat')}>\r\n              Restart\r\n            </Button>\r\n            <FullContainer />\r\n          </>\r\n        }\r\n        right={\r\n          <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n            <PartyResources />\r\n          </FlexContainer>\r\n        }\r\n      >\r\n        <FlexContainer\r\n          $full\r\n          style={{\r\n            color: 'white',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          Level {level}\r\n        </FlexContainer>\r\n      </AppHeader>\r\n      <FlexContainer $full $direction='column'>\r\n        <FlexContainer $full>\r\n          <FlexContainer $direction='column' $full>\r\n            {currentEncounter && currentEncounter.type !== 'combat' && (\r\n              <FlexContainer>\r\n                <BoxContainer>\r\n                  <pre>{JSON.stringify(currentEncounter, null, 2)}</pre>\r\n                </BoxContainer>\r\n              </FlexContainer>\r\n            )}\r\n          </FlexContainer>\r\n          <FlexContainer\r\n            $direction='column'\r\n            style={{\r\n              background:\r\n                'linear-gradient(0deg, rgba(0,0,0,0) 0%, rgba(8,8,8,0.6811099439775911) 10%, rgba(17,17,17,1) 35%)',\r\n              marginRight: '10%',\r\n              padding: '16px 8px',\r\n              width: 300,\r\n            }}\r\n          >\r\n            {currentChoice && !currentEncounter && (\r\n              <FlexContainer $direction='column'>\r\n                <h3\r\n                  style={{\r\n                    margin: '0 0 16px 0',\r\n                    color: 'white',\r\n                    textAlign: 'center',\r\n                  }}\r\n                >\r\n                  You have a choice.\r\n                </h3>\r\n                <span\r\n                  style={{ color: 'rgba(255,255,255,0.7)', marginBottom: 24 }}\r\n                >\r\n                  You arrive at a split path, you must make a choice on which\r\n                  way to proceed.\r\n                </span>\r\n                <FlexContainer style={{ justifyContent: 'center' }}>\r\n                  <Button onClick={() => chooseCurrent('left')}>Go Left</Button>\r\n                  <Button onClick={() => chooseCurrent('right')}>\r\n                    Go Right\r\n                  </Button>\r\n                </FlexContainer>\r\n              </FlexContainer>\r\n            )}\r\n            {currentEncounter && (\r\n              <FlexContainer style={{ justifyContent: 'center' }}>\r\n                <Button onClick={() => nextLevel()}>Travel Deeper</Button>\r\n              </FlexContainer>\r\n            )}\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { FullContainer, FlexContainer } from '../elements/flex'\r\nimport { BoxContainer } from '../elements/box'\r\nimport { usePartyContext } from '../contexts/PartyContext'\r\nimport { Gauge } from '../components/Gauge'\r\nimport { RedButton } from '../elements/button'\r\nimport { useHistory } from 'react-router'\r\nimport { INITIAL_STATE } from '../state/party'\r\nimport { Monospace } from '../elements/monospace'\r\nimport { useGameStateContext } from '../contexts/GameStateContext'\r\nimport {\r\n  tProcessedCharacter,\r\n  tCharacter,\r\n  tCharacterClass,\r\n} from '../game/Character/type'\r\nimport { makeCharacter } from '../game/Character/util'\r\nimport { STAT_BONUS_KEYS } from '../game/Stats/constants'\r\n\r\nexport const Start = () => {\r\n  const {\r\n    party,\r\n    updateParty,\r\n    upsertCharacter,\r\n    findRawCharacter,\r\n  } = usePartyContext()\r\n  const history = useHistory()\r\n  const { reset } = useGameStateContext()\r\n  useEffect(() => {\r\n    updateParty(INITIAL_STATE)\r\n    reset()\r\n  }, [])\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{ height: '100%', overflow: 'hidden' }}\r\n    >\r\n      <FullContainer />\r\n      <FlexContainer $full>\r\n        <FullContainer />\r\n        <BoxContainer>\r\n          <h1 style={{ marginTop: 0, textAlign: 'center' }}>\r\n            Choose your Party!\r\n          </h1>\r\n          <FlexContainer>\r\n            {party.characters.map((character) => (\r\n              <BoxContainer\r\n                key={character.id}\r\n                substyle={{ background: '#111' }}\r\n              >\r\n                <StartCharacterCard\r\n                  character={character}\r\n                  onChange={(characterId, updater) => {\r\n                    const rc = findRawCharacter(characterId)\r\n                    if (rc) {\r\n                      upsertCharacter(updater(rc))\r\n                    }\r\n                  }}\r\n                />\r\n              </BoxContainer>\r\n            ))}\r\n          </FlexContainer>\r\n          <FlexContainer>\r\n            <FullContainer />\r\n            <RedButton\r\n              style={{ marginTop: 16 }}\r\n              onClick={() => {\r\n                history.push('/JSFTK_combat/party')\r\n              }}\r\n            >\r\n              Begin Adventure\r\n            </RedButton>\r\n            <FullContainer />\r\n          </FlexContainer>\r\n        </BoxContainer>\r\n        <FullContainer />\r\n      </FlexContainer>\r\n      <FullContainer />\r\n      <Monospace\r\n        style={{\r\n          fontWeight: 'normal',\r\n          color: 'rgba(255,255,255,0.5)',\r\n          fontSize: 12,\r\n        }}\r\n      >\r\n        pre-pre-pre-pre alpha v0.0.1.9\r\n      </Monospace>\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface StartCharacterCardPropsT {\r\n  character: tProcessedCharacter\r\n  onChange: (\r\n    characterId: string,\r\n    updater: (c: tCharacter) => tCharacter,\r\n  ) => void\r\n}\r\nexport const StartCharacterCard = (props: StartCharacterCardPropsT) => {\r\n  const { character, onChange } = props\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <input\r\n        style={{\r\n          background: '#333',\r\n          border: '1px solid rgba(255,255,255,0.4)',\r\n          padding: 8,\r\n          color: 'white',\r\n          marginBottom: 8,\r\n        }}\r\n        value={character.name}\r\n        onChange={(e) => {\r\n          onChange(character.id, (c) => ({\r\n            ...c,\r\n            name: e.target.value,\r\n          }))\r\n        }}\r\n      />\r\n      <select\r\n        style={{\r\n          background: '#333',\r\n          border: '1px solid rgba(255,255,255,0.4)',\r\n          padding: 8,\r\n          color: 'white',\r\n          marginBottom: 8,\r\n        }}\r\n        value={character.class}\r\n        onChange={(e) => {\r\n          onChange(character.id, (c) => ({\r\n            ...makeCharacter(e.target.value as tCharacterClass),\r\n            id: character.id,\r\n            name: character.name,\r\n          }))\r\n        }}\r\n      >\r\n        <option value='blacksmith'>blacksmith</option>\r\n        <option value='hunter'>hunter</option>\r\n        <option value='scholar'>scholar</option>\r\n        <option value='bard'>bard</option>\r\n      </select>\r\n      <BoxContainer>\r\n        {STAT_BONUS_KEYS.map((key) => (\r\n          <FlexContainer key={key} style={{ height: 20 }}>\r\n            <div\r\n              style={{ width: 60, fontSize: 12, textTransform: 'capitalize' }}\r\n            >\r\n              {key}\r\n            </div>\r\n            <FullContainer>\r\n              <Gauge\r\n                max={100}\r\n                value={character.stats[key]}\r\n                color='white'\r\n                height={15}\r\n              />\r\n            </FullContainer>\r\n          </FlexContainer>\r\n        ))}\r\n      </BoxContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { tCharacter } from '../../game/Character/type'\r\n\r\nexport interface CharacterImagePropsT {\r\n  character: tCharacter\r\n  size: number\r\n}\r\nexport const CharacterImage = (props: CharacterImagePropsT) => {\r\n  const { character, size } = props\r\n  return (\r\n    <img\r\n      alt='profile'\r\n      height={size}\r\n      width={size}\r\n      src={`https://picsum.photos/seed/${character.name}/94/94`}\r\n      style={{\r\n        height: size,\r\n        width: size,\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { CONSUMABLE_ITEM_ICONS, CONSUMABLE_ITEM_COLORS } from '../../icons/maps'\r\nimport { HoverToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport { considateConsumableListToStack } from '../../game/Consumable/util'\r\n\r\nconst HEIGHT = 70\r\nexport interface PartyCharacterConsumablesPropsT {\r\n  character: tProcessedCharacter\r\n  consumables: tConsumable[]\r\n  onClick?: (consumable: tConsumable, index: number) => void\r\n}\r\nexport const PartyCharacterConsumables = (\r\n  props: PartyCharacterConsumablesPropsT,\r\n) => {\r\n  const { character, consumables, onClick } = props\r\n  const stack = useMemo(() => considateConsumableListToStack(consumables), [\r\n    consumables,\r\n  ])\r\n  const onStackClick = (consumable: tConsumable) => {\r\n    let index = undefined\r\n    consumables.forEach((c, i) => {\r\n      if (c.id === consumable.id) index = i\r\n    })\r\n    if (consumable.skill.healing && !(character.healthOffset === 0))\r\n      return onClick && onClick(consumable, index || 0)\r\n  }\r\n  const filler = Array(10 - stack.length).fill(null)\r\n\r\n  return (\r\n    <FlexContainer\r\n      $direction='column'\r\n      style={{ flexWrap: 'wrap', height: HEIGHT }}\r\n    >\r\n      {stack.map((s) => (\r\n        <PartyCharacterConsumable\r\n          key={s.consumable.id}\r\n          character={character}\r\n          consumable={s.consumable}\r\n          count={s.count}\r\n          onClick={onStackClick}\r\n        />\r\n      ))}\r\n      {filler.map((f, i) => (\r\n        <ConsumableBox key={i} />\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\ninterface ConsumableBoxPropsT {\r\n  children?: JSX.Element\r\n  onClick?: () => void\r\n}\r\nconst ConsumableBox = (props: ConsumableBoxPropsT) => {\r\n  const { children, onClick } = props\r\n  return (\r\n    <FlexContainer\r\n      onClick={() => onClick && onClick()}\r\n      style={{\r\n        height: HEIGHT / 2,\r\n        width: HEIGHT / 2,\r\n        boxSizing: 'border-box',\r\n        border: '1px solid rgba(0,0,0,0.5)',\r\n        background: '#333',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        cursor: onClick ? 'pointer' : 'default',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      {children}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface PartyCharacterConsumablePropsT {\r\n  consumable: tConsumable\r\n  character: tProcessedCharacter\r\n  count: number\r\n  onClick?: (consumable: tConsumable) => void\r\n}\r\nexport const PartyCharacterConsumable = (\r\n  props: PartyCharacterConsumablePropsT,\r\n) => {\r\n  const { character, consumable, count, onClick } = props\r\n  return (\r\n    <HoverToolTip\r\n      content={\r\n        <PartyCharacterConsumableTooltip\r\n          character={character}\r\n          consumable={consumable}\r\n        />\r\n      }\r\n    >\r\n      <ConsumableBox onClick={() => onClick && onClick(consumable)}>\r\n        <>\r\n          <Icon\r\n            src={CONSUMABLE_ITEM_ICONS[consumable.cid]}\r\n            fill={CONSUMABLE_ITEM_COLORS[consumable.cid]}\r\n            size={24}\r\n          />\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: -2,\r\n              right: 1,\r\n            }}\r\n          >\r\n            {count}\r\n          </div>\r\n        </>\r\n      </ConsumableBox>\r\n    </HoverToolTip>\r\n  )\r\n}\r\n\r\nexport interface PartyCharacterConsumableTooltipProps {\r\n  character: tProcessedCharacter\r\n  consumable: tConsumable\r\n}\r\nexport const PartyCharacterConsumableTooltip = (\r\n  props: PartyCharacterConsumableTooltipProps,\r\n) => {\r\n  const { character, consumable } = props\r\n  return (\r\n    <BoxContainer>\r\n      <strong>{consumable.name}</strong>\r\n      {consumable.skill.healing && (\r\n        <div>Heal for {character.stats.consumableHealthGainOffset} HP</div>\r\n      )}\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { withStyle } from 'styletron-react'\r\nimport { Monodiv } from '../../elements/monospace'\r\nimport { Icon } from '../Icon'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tStats, tBaseStats } from '../../game/Stats/type'\r\n\r\ninterface CharacterStatPropsT {\r\n  statKey: keyof tBaseStats\r\n  character: tProcessedCharacter\r\n}\r\nconst CharacterStat = (props: CharacterStatPropsT) => {\r\n  const { statKey, character } = props\r\n  return (\r\n    <ResourceE $color={getStatColor(character, statKey)}>\r\n      <Icon\r\n        src={STAT_ICONS[statKey] || ''}\r\n        fill={getStatColor(character, statKey)}\r\n        size={14}\r\n        style={{ marginRight: 4 }}\r\n      />\r\n      {character.stats[statKey]}\r\n    </ResourceE>\r\n  )\r\n}\r\n\r\nexport interface StatsProps {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Stats = (props: StatsProps) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer>\r\n      <CharacterStat statKey='strength' character={character} />\r\n      <CharacterStat statKey='vigor' character={character} />\r\n      <CharacterStat statKey='intelligence' character={character} />\r\n      <CharacterStat statKey='dexterity' character={character} />\r\n      <CharacterStat statKey='charisma' character={character} />\r\n      <CharacterStat statKey='agility' character={character} />\r\n      <CharacterStat statKey='luck' character={character} />\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nconst ResourceE = withStyle(Monodiv, (props: any) => ({\r\n  height: 15,\r\n  color: props.$color,\r\n  fontSize: '12px',\r\n  fontWeight: 'bolder',\r\n  padding: '0px 4px',\r\n  lineHeight: '15px',\r\n  flex: 1,\r\n  textAlign: 'center',\r\n  background: '#111',\r\n  display: 'flex',\r\n}))\r\n\r\nconst getStatColor = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tBaseStats,\r\n): string => {\r\n  const a = character.stats[key]\r\n  const b = character.rawStats[key]\r\n  if (a > b) return 'lightgreen'\r\n  if (b > a) return 'lightcoral'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\n\r\nexport interface NamePropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Name = (props: NamePropsT) => {\r\n  const { character } = props\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        marginTop: -3,\r\n        marginRight: -3,\r\n        padding: '0 4px',\r\n        paddingLeft: 8,\r\n        background: '#555',\r\n        height: 20,\r\n        lineHeight: '24px',\r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n        boxShadow: '0px 4px 5px black',\r\n        zIndex: 2,\r\n      }}\r\n    >\r\n      <FullContainer\r\n        style={{\r\n          fontWeight: 'bolder',\r\n          textShadow: '0px 0px 2px black',\r\n          flex: 1,\r\n        }}\r\n      >\r\n        {character.name}\r\n      </FullContainer>\r\n      <div\r\n        style={{\r\n          fontSize: 12,\r\n          color: 'rgba(255,255,255,0.3)',\r\n        }}\r\n      >\r\n        {character.class}\r\n      </div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { STAT_ICONS } from '../../icons/maps'\r\nimport { Icon } from '../Icon'\r\nimport { tStats } from '../../game/Stats/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { STAT_BONUS_KEYS } from '../../game/Stats/constants'\r\n\r\nconst getStatColor = (\r\n  character: tProcessedCharacter,\r\n  key: keyof tStats,\r\n): string => {\r\n  const a = character.stats[key]\r\n  const b = character.rawStats[key]\r\n  if (a === undefined || b === undefined) return 'rgba(255,255,255,0.6)'\r\n  if (a > b) return 'lightgreen'\r\n  if (b > a) return 'lightcoral'\r\n  return 'rgba(255,255,255,0.6)'\r\n}\r\n\r\nexport interface StatBarPropsT {\r\n  character: tProcessedCharacter\r\n}\r\nexport const StatBar = (props: StatBarPropsT) => {\r\n  const { character } = props\r\n\r\n  return (\r\n    <BoxContainer>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-between',\r\n          width: 360,\r\n          paddingTop: 10,\r\n          paddingBottom: 6,\r\n        }}\r\n      >\r\n        {STAT_BONUS_KEYS.map((key) => (\r\n          <FlexContainer\r\n            key={key}\r\n            style={{\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Icon\r\n              src={STAT_ICONS[key] || ''}\r\n              size={20}\r\n              fill={getStatColor(character, key)}\r\n              style={{ marginRight: 4 }}\r\n            />\r\n            <span style={{ color: getStatColor(character, key) }}>\r\n              {character.stats[key]}\r\n            </span>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n    </BoxContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Icon } from '../Icon'\r\nimport { RESOURCE_ICONS } from '../../icons/maps'\r\nimport { styled } from 'styletron-react'\r\nimport { ClickToolTip } from '../Tooltip'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { Button } from '../../elements/button'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tArmor, tArmorResourceType } from '../../game/Armor/type'\r\nimport { CHARACTER_RESOURCES } from '../../game/Item/constants'\r\n\r\nconst ItemRow = styled(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    marginBottom: '4px',\r\n    textShadow: '1px 1px 1px black',\r\n    background:\r\n      'linear-gradient(90deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 100%)',\r\n    paddingLeft: '8px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n  }\r\n})\r\n\r\nexport interface ItemPropsT {\r\n  character: tProcessedCharacter\r\n  setActiveItem: (item: tWeapon | tArmor | undefined) => void\r\n}\r\nexport const Items = (props: ItemPropsT) => {\r\n  const { character, setActiveItem } = props\r\n  const { playerCanEquipItem } = useUIContext()\r\n  return (\r\n    <FlexContainer $full $direction='column'>\r\n      <ItemRow onMouseEnter={() => setActiveItem(character.weapon)}>\r\n        <Icon\r\n          src={RESOURCE_ICONS.weapon || ''}\r\n          size={16}\r\n          style={{ marginRight: 6 }}\r\n        />\r\n        {character.weapon.name}\r\n      </ItemRow>\r\n      {CHARACTER_RESOURCES.map((res) => (\r\n        <ArmorItem\r\n          character={character}\r\n          resource={res}\r\n          onHover={setActiveItem}\r\n          canUnequip={playerCanEquipItem}\r\n        />\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n\r\nexport interface ArmorItemProps {\r\n  character: tProcessedCharacter\r\n  resource: tArmorResourceType\r\n  canUnequip?: boolean\r\n  onHover: (item: tArmor | tWeapon | undefined) => void\r\n}\r\nexport const ArmorItem = (props: ArmorItemProps) => {\r\n  const { character, resource, canUnequip = true, onHover } = props\r\n  const { unequipItem } = usePartyContext()\r\n  const item = character.armor.find((a) => a.resource === resource)\r\n  return (\r\n    <ClickToolTip\r\n      direction='down'\r\n      distance={-2}\r\n      content={() => (\r\n        <>\r\n          {canUnequip && (\r\n            <BoxContainer\r\n              substyle={{\r\n                padding: 4,\r\n                width: 190,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                background: '#333',\r\n              }}\r\n            >\r\n              <Button\r\n                style={{ padding: '4px 8px' }}\r\n                onClick={() => {\r\n                  if (item) {\r\n                    unequipItem(character.id, item)\r\n                  }\r\n                }}\r\n              >\r\n                Unequip\r\n              </Button>\r\n              <Button style={{ padding: '4px 8px' }}>Cancel</Button>\r\n            </BoxContainer>\r\n          )}\r\n        </>\r\n      )}\r\n    >\r\n      {({ onClick, ref }) => (\r\n        <ItemRow\r\n          ref={ref}\r\n          onMouseEnter={() => onHover(item)}\r\n          onClick={() => item && onClick()}\r\n        >\r\n          <Icon\r\n            src={RESOURCE_ICONS[resource] || ''}\r\n            size={16}\r\n            style={{ marginRight: 6 }}\r\n          />\r\n          {item?.name}\r\n        </ItemRow>\r\n      )}\r\n    </ClickToolTip>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\n\r\nexport interface NamePropsT {\r\n  name: string\r\n}\r\n\r\nexport const Name = (props: NamePropsT) => {\r\n  const { name } = props\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        width: '100%',\r\n        height: 40,\r\n        marginBottom: -20,\r\n        marginTop: -20,\r\n      }}\r\n    >\r\n      <FullContainer />\r\n      <BoxContainer style={{ zIndex: 2 }} substyle={{ background: '#444' }}>\r\n        {name}\r\n      </BoxContainer>\r\n      <FullContainer />\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { CharacterImage } from '../CharacterImage'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\n\r\nconst SIZE = 100\r\nexport interface ImagePropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Image = (props: ImagePropsT) => {\r\n  const { character } = props\r\n  return (\r\n    <FlexContainer $full style={{ justifyContent: 'flex-end' }}>\r\n      <div>\r\n        <BoxContainer\r\n          style={{ marginRight: 20, marginBottom: 10 }}\r\n          substyle={{ padding: 0, height: SIZE, width: SIZE }}\r\n        >\r\n          <CharacterImage character={character} size={100} />\r\n        </BoxContainer>\r\n      </div>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { withStyle } from 'styletron-react'\r\nimport { Icon } from '../Icon'\r\nimport { ARMOR_TYPE_ICONS } from '../../icons/maps'\r\nimport { ClickToolTip } from '../Tooltip'\r\nimport { Button } from '../../elements/button'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\n\r\nexport interface ArmorListPropsT {\r\n  party: tProcessedParty\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n  equipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n  setActiveItem: (item: tWeapon | tArmor) => void\r\n}\r\n\r\nconst ArmorItem = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    marginBottom: '4px',\r\n    textShadow: '1px 1px 1px black',\r\n    background: props.$active ? 'rgba(255,255,255,0.2)' : undefined,\r\n    paddingLeft: '8px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    cursor: 'pointer',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n  }\r\n})\r\n\r\nexport const ArmorList = (props: ArmorListPropsT) => {\r\n  const { party, character, canEquip, equipItem, setActiveItem } = props\r\n  const [activeItemId, setActiveItemId] = useState<string | undefined>()\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {party.items\r\n        .filter((i) => i.itemType === 'armor')\r\n        .map((i) => i as tArmor)\r\n        .sort((a, b) => a.name.localeCompare(b.name))\r\n        .map((armor) => (\r\n          <ClickToolTip\r\n            direction='down'\r\n            distance={-2}\r\n            content={() => (\r\n              <>\r\n                {canEquip && (\r\n                  <BoxContainer\r\n                    substyle={{\r\n                      padding: 4,\r\n                      width: 346,\r\n                      display: 'flex',\r\n                      justifyContent: 'center',\r\n                      background: '#333',\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      style={{ padding: '4px 8px' }}\r\n                      onClick={() => {\r\n                        equipItem(character.id, armor)\r\n                        setActiveItemId(undefined)\r\n                      }}\r\n                    >\r\n                      Equip\r\n                    </Button>\r\n                    <Button\r\n                      style={{ padding: '4px 8px' }}\r\n                      onClick={() => {\r\n                        setActiveItemId(undefined)\r\n                      }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </BoxContainer>\r\n                )}\r\n              </>\r\n            )}\r\n          >\r\n            {({ onClick, ref }) => (\r\n              <ArmorItem\r\n                $active={armor.id === activeItemId}\r\n                onMouseEnter={() => setActiveItem(armor)}\r\n                ref={ref}\r\n                onClick={(e: MouseEvent) => {\r\n                  e.stopPropagation()\r\n                  e.preventDefault()\r\n                  setActiveItemId(armor.id)\r\n                  onClick()\r\n                }}\r\n              >\r\n                <Icon\r\n                  src={ARMOR_TYPE_ICONS[armor.type]}\r\n                  size={14}\r\n                  style={{ marginRight: 10 }}\r\n                  fill={ITEM_RARITY_COLORS[armor.rarity]}\r\n                  shadow\r\n                />\r\n                <span style={{ color: ITEM_RARITY_COLORS[armor.rarity] }}>\r\n                  {armor.name}\r\n                </span>\r\n              </ArmorItem>\r\n            )}\r\n          </ClickToolTip>\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { withStyle } from 'styletron-react'\r\nimport { ClickToolTip } from '../Tooltip'\r\nimport { Button } from '../../elements/button'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { ITEM_RARITY_COLORS } from '../../game/Item/constants'\r\n\r\nexport interface WeaponListPropsT {\r\n  party: tProcessedParty\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n  equipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n  setActiveItem: (item: tWeapon | tArmor) => void\r\n}\r\n\r\nconst WeaponItem = withStyle(FlexContainer, (props: any) => {\r\n  return {\r\n    alignItems: 'center',\r\n    marginBottom: '4px',\r\n    textShadow: '1px 1px 1px black',\r\n    background: props.$active ? 'rgba(255,255,255,0.2)' : undefined,\r\n    paddingLeft: '8px',\r\n    transition: 'all 0.2s',\r\n    userSelect: 'none',\r\n    cursor: 'pointer',\r\n    ':hover': {\r\n      background: 'rgba(255,255,255,0.2)',\r\n    },\r\n  }\r\n})\r\n\r\nexport const WeaponList = (props: WeaponListPropsT) => {\r\n  const { party, character, canEquip, equipItem, setActiveItem } = props\r\n  const [activeItemId, setActiveItemId] = useState<string | undefined>()\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      {party.items\r\n        .filter((i) => i.itemType === 'weapon')\r\n        .map((i) => i as tArmor)\r\n        .sort((a, b) => a.name.localeCompare(b.name))\r\n        .map((weapon) => (\r\n          <ClickToolTip\r\n            direction='down'\r\n            distance={-2}\r\n            content={() => (\r\n              <>\r\n                {canEquip && (\r\n                  <BoxContainer\r\n                    substyle={{\r\n                      padding: 4,\r\n                      width: 346,\r\n                      display: 'flex',\r\n                      justifyContent: 'center',\r\n                      background: '#333',\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      style={{ padding: '4px 8px' }}\r\n                      onClick={() => {\r\n                        equipItem(character.id, weapon)\r\n                        setActiveItemId(undefined)\r\n                      }}\r\n                    >\r\n                      Equip\r\n                    </Button>\r\n                  </BoxContainer>\r\n                )}\r\n              </>\r\n            )}\r\n          >\r\n            {({ onClick, ref }) => (\r\n              <WeaponItem\r\n                $active={weapon.id === activeItemId}\r\n                onMouseEnter={() => setActiveItem(weapon)}\r\n                ref={ref}\r\n                onClick={(e: MouseEvent) => {\r\n                  e.stopPropagation()\r\n                  e.preventDefault()\r\n                  setActiveItemId(weapon.id)\r\n                  onClick()\r\n                }}\r\n              >\r\n                <span style={{ color: ITEM_RARITY_COLORS[weapon.rarity] }}>\r\n                  {weapon.name}\r\n                </span>\r\n              </WeaponItem>\r\n            )}\r\n          </ClickToolTip>\r\n        ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { Button } from '../../elements/button'\r\nimport Items from '../../icons/svg/delapouite/light-backpack.svg'\r\nimport Weapons from '../../icons/svg/lorc/broadsword.svg'\r\nimport Armor from '../../icons/svg/delapouite/leather-armor.svg'\r\nimport { Icon } from '../Icon'\r\nimport { ArmorList } from './ArmorList'\r\nimport { WeaponList } from './WeaponList'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\n\r\nexport interface MenuOptionT {\r\n  key: string\r\n  icon: string\r\n  count: (character: tProcessedCharacter, party: tProcessedParty) => number\r\n  render: (\r\n    character: tProcessedCharacter,\r\n    party: tProcessedParty,\r\n    canEquip: boolean,\r\n    equipItem: (characterId: string, item: tWeapon | tArmor) => void,\r\n    setActiveItem: (item: tWeapon | tArmor) => void,\r\n  ) => JSX.Element\r\n}\r\nexport const ACTIVE_CHARACTER_MENU_KEYS: MenuOptionT[] = [\r\n  {\r\n    key: 'items',\r\n    icon: Items,\r\n    count: (c) => c.consumables.length,\r\n    render: (character) => <div>items</div>,\r\n  },\r\n  {\r\n    key: 'weapons',\r\n    icon: Weapons,\r\n    count: (c, p) => p.items.filter((i) => i.itemType === 'weapon').length,\r\n    render: (character, party, canEquip, equipItem, setActiveItem) => (\r\n      <WeaponList\r\n        character={character}\r\n        party={party}\r\n        canEquip={canEquip}\r\n        equipItem={equipItem}\r\n        setActiveItem={setActiveItem}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    key: 'armor',\r\n    icon: Armor,\r\n    count: (c, p) => p.items.filter((i) => i.itemType === 'armor').length,\r\n    render: (character, party, canEquip, equipItem, setActiveItem) => (\r\n      <ArmorList\r\n        character={character}\r\n        party={party}\r\n        canEquip={canEquip}\r\n        equipItem={equipItem}\r\n        setActiveItem={setActiveItem}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    key: 'ot1',\r\n    icon: '',\r\n    count: (c) => 0,\r\n    render: (character) => <div>ot1</div>,\r\n  },\r\n  {\r\n    key: 'ot2',\r\n    icon: '',\r\n    count: (c) => 0,\r\n    render: (character) => <div>ot2</div>,\r\n  },\r\n  {\r\n    key: 'ot3',\r\n    icon: '',\r\n    count: (c) => 0,\r\n    render: (character) => <div>ot3</div>,\r\n  },\r\n]\r\n\r\nexport interface MenuSelectPropsT {\r\n  character: tProcessedCharacter\r\n  party: tProcessedParty\r\n  activeKey: string\r\n  onActiveKeyChange: (key: string) => void\r\n}\r\n\r\nexport const MenuSelect = (props: MenuSelectPropsT) => {\r\n  const { character, party, activeKey, onActiveKeyChange } = props\r\n\r\n  return (\r\n    <FlexContainer style={{ justifyContent: 'center', marginTop: 8 }}>\r\n      {ACTIVE_CHARACTER_MENU_KEYS.map((option) => (\r\n        <Button\r\n          style={{\r\n            padding: '4px 0',\r\n            width: 56,\r\n            fontSize: 12,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            background: option.key === activeKey ? '#444' : undefined,\r\n          }}\r\n          onClick={() => {\r\n            onActiveKeyChange(option.key)\r\n          }}\r\n        >\r\n          <FullContainer />\r\n          <FullContainer>\r\n            <Icon src={option.icon} size={14} />\r\n          </FullContainer>\r\n          <FullContainer style={{ paddingRight: 2 }}>\r\n            {option.count(character, party)}\r\n          </FullContainer>\r\n        </Button>\r\n      ))}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { ArmorPreview } from '../ArmorPreview'\r\nimport { WeaponPreview } from '../WeaponPreview'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\n\r\nexport interface HoverAreaPropsT {\r\n  character: tProcessedCharacter\r\n  activeItem: tWeapon | tArmor\r\n}\r\n\r\nexport const HoverArea = (props: HoverAreaPropsT) => {\r\n  const { character, activeItem } = props\r\n  const foundArmor = character.armor.find(\r\n    (a) => a.resource === (activeItem as tArmor).resource,\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {activeItem.itemType === 'armor' && (\r\n        <FlexContainer>\r\n          {foundArmor && (\r\n            <ArmorPreview armor={foundArmor} showEquipButton={false} />\r\n          )}\r\n          {foundArmor?.id !== activeItem.id && (\r\n            <ArmorPreview\r\n              armor={activeItem as tArmor}\r\n              showEquipButton={false}\r\n            />\r\n          )}\r\n        </FlexContainer>\r\n      )}\r\n      {activeItem.itemType === 'weapon' && (\r\n        <FlexContainer>\r\n          <WeaponPreview weapon={character.weapon} showEquipButton={false} />\r\n          {character.weapon.id !== activeItem.id && (\r\n            <WeaponPreview\r\n              weapon={activeItem as tWeapon}\r\n              showEquipButton={false}\r\n            />\r\n          )}\r\n        </FlexContainer>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { StatBar } from './StatBar'\r\nimport { Items } from './Items'\r\nimport { Name } from './Name'\r\nimport { Image } from './Image'\r\nimport { MenuSelect, ACTIVE_CHARACTER_MENU_KEYS } from './MenuSelect'\r\nimport { HoverArea } from './HoverArea'\r\nimport { Badge } from '../../elements/badge'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tWeapon } from '../../game/Weapon/type'\r\nimport { tArmor } from '../../game/Armor/type'\r\n\r\nexport interface PartyActiveCharacterPropsT {\r\n  character: tProcessedCharacter\r\n  party: tProcessedParty\r\n  equipItem: (characterId: string, item: tWeapon | tArmor) => void\r\n  canEquip: boolean\r\n  onRequestClose: () => void\r\n}\r\n\r\nexport const PartyActiveCharacter = (props: PartyActiveCharacterPropsT) => {\r\n  const { character, party, canEquip, equipItem, onRequestClose } = props\r\n  const [activeMenuKey, setActiveMenuKey] = useState('armor')\r\n  const [activeItem, setActiveItem] = useState<tArmor | tWeapon | undefined>()\r\n  const activeOption = ACTIVE_CHARACTER_MENU_KEYS.find(\r\n    (o) => o.key === activeMenuKey,\r\n  )\r\n\r\n  return (\r\n    <FlexContainer\r\n      style={{\r\n        justifyContent: 'flex-end',\r\n      }}\r\n    >\r\n      <Badge\r\n        onClick={onRequestClose}\r\n        $top={-10}\r\n        $right={-2}\r\n        style={{ cursor: 'pointer', userSelect: 'none' }}\r\n      >\r\n        X\r\n      </Badge>\r\n      <FlexContainer\r\n        style={{\r\n          maxHeight: 440,\r\n          padding: 10,\r\n          position: 'absolute',\r\n          left: '-6px',\r\n          width: 486,\r\n          justifyContent: 'flex-end',\r\n        }}\r\n      >\r\n        {activeItem && (\r\n          <HoverArea character={character} activeItem={activeItem} />\r\n        )}\r\n      </FlexContainer>\r\n      <BoxContainer substyle={{ background: '#111', padding: 0 }}>\r\n        <FlexContainer $direction='column'>\r\n          <Name name={character.name} />\r\n          <StatBar character={character} />\r\n          <BoxContainer\r\n            substyle={{ background: '#111', padding: '16px 0 2px 0' }}\r\n          >\r\n            <FlexContainer>\r\n              <Items character={character} setActiveItem={setActiveItem} />\r\n              <Image character={character} />\r\n            </FlexContainer>\r\n            <MenuSelect\r\n              character={character}\r\n              party={party}\r\n              activeKey={activeMenuKey}\r\n              onActiveKeyChange={setActiveMenuKey}\r\n            />\r\n          </BoxContainer>\r\n          <BoxContainer\r\n            substyle={{\r\n              background: '#111',\r\n              padding: '4px 0',\r\n              height: 200,\r\n              overflow: 'auto',\r\n            }}\r\n          >\r\n            {activeOption &&\r\n              activeOption.render(\r\n                character,\r\n                party,\r\n                canEquip,\r\n                equipItem,\r\n                setActiveItem,\r\n              )}\r\n          </BoxContainer>\r\n        </FlexContainer>\r\n      </BoxContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Details from '../../icons/svg/delapouite/skills.svg'\r\nimport Inventory from '../../icons/svg/lorc/knapsack.svg'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { Tooltip } from '../Tooltip'\r\nimport { PartyActiveCharacter } from '../PartyActiveCharacter'\r\nimport { usePartyContext } from '../../contexts/PartyContext'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { Hover } from '../Hover'\r\nimport { Icon } from '../Icon'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { animated, useSpring } from 'react-spring'\r\n\r\nexport interface ActionsPropsT {\r\n  character: tProcessedCharacter\r\n  canEquip: boolean\r\n}\r\n\r\nexport const Actions = (props: ActionsPropsT) => {\r\n  const { character, canEquip } = props\r\n  const { party, equipItem } = usePartyContext()\r\n  const {\r\n    openCharacterInventoryId,\r\n    setOpenCharacterInventoryId,\r\n  } = useUIContext()\r\n  const inventoryOpen = character.id === openCharacterInventoryId\r\n  const inventoryStyle = useSpring({\r\n    opacity: inventoryOpen ? 1 : 0,\r\n    config: { tension: 500 },\r\n  })\r\n  return (\r\n    <FlexContainer\r\n      $full\r\n      $direction='column'\r\n      style={{ justifyContent: 'center' }}\r\n    >\r\n      <FlexContainer\r\n        $full\r\n        style={{ alignItems: 'center', justifyContent: 'center' }}\r\n      >\r\n        <Tooltip\r\n          isOpen={inventoryOpen}\r\n          direction='up'\r\n          distance={40}\r\n          background='rgba(0,0,0,0.5)'\r\n          arrow\r\n          content={\r\n            <animated.div\r\n              style={{ minWidth: 887, minHeight: 444, ...inventoryStyle }}\r\n            >\r\n              {inventoryOpen && (\r\n                <PartyActiveCharacter\r\n                  character={character}\r\n                  party={party}\r\n                  equipItem={equipItem}\r\n                  canEquip={canEquip}\r\n                  onRequestClose={() => {\r\n                    setOpenCharacterInventoryId(undefined)\r\n                  }}\r\n                />\r\n              )}\r\n            </animated.div>\r\n          }\r\n        >\r\n          <Hover delay={0}>\r\n            {({ isHovering }) => (\r\n              <Icon\r\n                src={Inventory}\r\n                fill={\r\n                  isHovering ? 'rgba(255,255,255,1)' : 'rgba(255,255,255,0.7)'\r\n                }\r\n                size={18}\r\n                shadow\r\n                onClick={() => {\r\n                  if (character.id === openCharacterInventoryId) {\r\n                    return setOpenCharacterInventoryId(undefined)\r\n                  }\r\n                  setOpenCharacterInventoryId(character.id)\r\n                }}\r\n                style={{ padding: 6, cursor: 'pointer' }}\r\n              />\r\n            )}\r\n          </Hover>\r\n        </Tooltip>\r\n      </FlexContainer>\r\n      <FlexContainer\r\n        $full\r\n        style={{ alignItems: 'center', justifyContent: 'center' }}\r\n      >\r\n        <Icon\r\n          src={Details}\r\n          fill={'rgba(255,255,255,0.7)'}\r\n          size={18}\r\n          shadow\r\n          style={{ padding: 6, cursor: 'pointer' }}\r\n        />\r\n      </FlexContainer>\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { noneg } from '../../util'\r\nimport { usePrevious } from '../../hooks/usePrevious'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\n\r\nexport interface HealthPropsT {\r\n  character: tProcessedCharacter\r\n}\r\n\r\nexport const Health = (props: HealthPropsT) => {\r\n  const { character } = props\r\n  const health = noneg(character.health)\r\n  const previousHealth = usePrevious<number>(health) || 0\r\n  const [storedHealth, setStoredHealth] = useState(0)\r\n\r\n  useEffect(() => {\r\n    setStoredHealth(health)\r\n    // toast(`${character.name} -${storedHealth - health} HP`)\r\n  }, [health])\r\n\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <span\r\n        style={{\r\n          padding: 4,\r\n          paddingLeft: 2,\r\n          fontSize: 42,\r\n          height: 62,\r\n          lineHeight: '72px',\r\n          color: '#b55553',\r\n          fontFamily: 'Bangers',\r\n          minWidth: 44,\r\n          display: 'inline-block',\r\n          textAlign: 'center',\r\n        }}\r\n      >\r\n        <Spring\r\n          from={{ hp: previousHealth || 0 }}\r\n          to={{ hp: health }}\r\n          config={{ friction: 70, mass: 5, tension: 300, clamp: true }}\r\n        >\r\n          {(hpp) => <span style={{}}>{Math.floor(hpp.hp)}</span>}\r\n        </Spring>\r\n      </span>\r\n      <ToastContainer />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { FlexContainer, FullContainer } from '../../elements/flex'\r\nimport { XPGauge, HealthGauge } from '../Gauge'\r\nimport { BoxContainer } from '../../elements/box'\r\nimport { styled } from 'styletron-react'\r\nimport { HoverBadge } from '../../elements/badge'\r\nimport { TagPreview } from '../TagPreview'\r\nimport { CharacterImage } from '../CharacterImage'\r\n\r\nimport { PartyCharacterConsumables } from '../PartyCharacterConsumables'\r\nimport { Stats } from './Stats'\r\nimport { Name } from './Name'\r\nimport { Actions } from './Actions'\r\nimport { Health } from './Health'\r\nimport { useUIContext } from '../../contexts/UIContext'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\n\r\nexport interface PartyCharacterProps {\r\n  character: tProcessedCharacter\r\n  selected?: boolean\r\n  showActions?: boolean\r\n  onClick?: () => void\r\n  onConsumableClick?: (consumable: tConsumable, index: number) => void\r\n  push: (contents: JSX.Element, type?: string) => void\r\n}\r\nconst Wrapper = styled('div', (props: any) => {\r\n  const { $active } = props\r\n  return {\r\n    margin: 10,\r\n    position: 'relative',\r\n    boxShadow: $active ? '0px 0px 20px white' : 'none',\r\n    transition: 'all 0.4s',\r\n    userSelect: 'none',\r\n  }\r\n})\r\n\r\nexport const PartyCharacter = (props: PartyCharacterProps) => {\r\n  const {\r\n    character,\r\n    selected,\r\n    showActions = true,\r\n    onConsumableClick,\r\n    push,\r\n  } = props\r\n  const { playerCanEquipItem } = useUIContext()\r\n  const health = character.health\r\n  const status = character.status.map((s) => s.type)\r\n  const [previousHealth, setPreviousHealth] = useState(health)\r\n  const [previousStatus, setPreviousStatus] = useState(status)\r\n  useEffect(() => {\r\n    const diff = previousHealth - health\r\n    if (diff > 0) {\r\n      push(<span>- {diff} HP</span>)\r\n    }\r\n    if (diff < 0) {\r\n      push(<span>+ {Math.abs(diff)} HP</span>, 'good')\r\n    }\r\n    if (status.length > previousStatus.length) {\r\n      const added = status[0]\r\n      push(<span>became {added}</span>)\r\n    }\r\n    setPreviousHealth(health)\r\n    setPreviousStatus(status)\r\n  }, [health])\r\n  return (\r\n    <Wrapper\r\n      $active={selected}\r\n      style={{\r\n        opacity: character.health <= 0 ? 0.5 : 1,\r\n      }}\r\n    >\r\n      <BoxContainer\r\n        style={{\r\n          borderWidth: 2,\r\n          transition: 'all 1s',\r\n          boxShadow: selected ? '0px 0px 20px white' : 'none',\r\n        }}\r\n        substyle={{ padding: 0, minWidth: 396 }}\r\n      >\r\n        <FlexContainer style={{ border: '2px solid black' }}>\r\n          <FlexContainer\r\n            style={{ borderRight: '2px solid black', background: '#111' }}\r\n          >\r\n            <CharacterImage character={character} size={115} />\r\n          </FlexContainer>\r\n          <FlexContainer $full $direction='column'>\r\n            <Name character={character} />\r\n            <FlexContainer>\r\n              <Health character={character} />\r\n              <FlexContainer $full style={{ maxWidth: 175, minWidth: 175 }}>\r\n                <PartyCharacterConsumables\r\n                  character={character}\r\n                  consumables={character.consumables}\r\n                  onClick={onConsumableClick}\r\n                />\r\n              </FlexContainer>\r\n              <FlexContainer $full $direction='column'>\r\n                {showActions && (\r\n                  <Actions\r\n                    character={character}\r\n                    canEquip={playerCanEquipItem}\r\n                  />\r\n                )}\r\n              </FlexContainer>\r\n            </FlexContainer>\r\n            <FullContainer />\r\n            <HealthGauge character={character} />\r\n            <XPGauge character={character} />\r\n            <HoverBadge\r\n              badgeProps={{ $bottom: '18px', $left: '105px' }}\r\n              content={<BoxContainer>Character Level</BoxContainer>}\r\n            >\r\n              <span>{character.level}</span>\r\n            </HoverBadge>\r\n            <Stats character={character} />\r\n          </FlexContainer>\r\n        </FlexContainer>\r\n      </BoxContainer>\r\n      <FlexContainer\r\n        style={{\r\n          position: 'absolute',\r\n          top: '-24px',\r\n          right: '4px',\r\n        }}\r\n      >\r\n        {character.status.map((status) => (\r\n          <TagPreview direction='up' status={status} />\r\n        ))}\r\n      </FlexContainer>\r\n      <HoverBadge\r\n        badgeProps={{ $bottom: '64px', $left: '-12px', $color: 'lightblue' }}\r\n        content={<BoxContainer>Armor</BoxContainer>}\r\n      >\r\n        <span>{character.stats.armor}</span>\r\n      </HoverBadge>\r\n      <HoverBadge\r\n        badgeProps={{ $bottom: '26px', $left: '-12px', $color: 'plum' }}\r\n        content={<BoxContainer>Magic Resistance</BoxContainer>}\r\n      >\r\n        <span>{character.stats.resistance}</span>\r\n      </HoverBadge>\r\n      <HoverBadge\r\n        badgeProps={{ $bottom: '-10px', $left: '-12px', $color: 'lightgreen' }}\r\n        content={<BoxContainer>Evasion</BoxContainer>}\r\n      >\r\n        <span>{character.stats.evasion}</span>\r\n      </HoverBadge>\r\n      <HoverBadge\r\n        direction='up'\r\n        content={<BoxContainer>Weapon Damage</BoxContainer>}\r\n        badgeProps={{\r\n          $bottom: '-12px',\r\n          $left: '40px',\r\n          $size: '35px',\r\n          $color:\r\n            character.weapon.damage.type === 'physical'\r\n              ? 'rgba(255,255,255,0.8)'\r\n              : 'plum',\r\n          style: { fontSize: 24 },\r\n        }}\r\n      >\r\n        <span>\r\n          {(character.weapon.damage.value +\r\n            character.stats.attackDamageOffset) *\r\n            character.stats.attackDamageModifier}\r\n        </span>\r\n      </HoverBadge>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { FlexContainer } from '../../elements/flex'\r\nimport { PartyCharacter } from '../PartyCharacter'\r\nimport { useCombatContext } from '../../contexts/CombatContext'\r\nimport { ConfirmButton } from '../../elements/button'\r\nimport { tProcessedParty } from '../../game/Party/type'\r\nimport { tProcessedCharacter } from '../../game/Character/type'\r\nimport { tConsumable } from '../../game/Consumable/type'\r\nimport {\r\n  LocalToastProvider,\r\n  LocalToastRp,\r\n} from '../../contexts/LocalToastContext'\r\n\r\nexport interface PlayerPartyPropsT {\r\n  party: tProcessedParty\r\n  onCharacterClick?: (character: tProcessedCharacter) => void\r\n  onConsumableClick?: (\r\n    character: tProcessedCharacter,\r\n    consumableIndex: number,\r\n    consumable: tConsumable,\r\n  ) => void\r\n}\r\nexport const PlayerParty = (props: PlayerPartyPropsT) => {\r\n  const { party, onCharacterClick, onConsumableClick } = props\r\n  const {\r\n    activeCharacter,\r\n    selectedSkill,\r\n    next,\r\n    onSkillSelect,\r\n  } = useCombatContext()\r\n\r\n  const showConfirmButton = (c: tProcessedCharacter) =>\r\n    selectedSkill &&\r\n    activeCharacter &&\r\n    c.health > 0 &&\r\n    ((selectedSkill.targetType === 'self' && c.id === activeCharacter.id) ||\r\n      selectedSkill.targetType === 'ally')\r\n\r\n  return (\r\n    <FlexContainer $direction='column'>\r\n      <FlexContainer\r\n        style={{\r\n          justifyContent: 'space-around',\r\n          alignItems: 'flex-end',\r\n          cursor: selectedSkill?.targetType === 'party' ? 'pointer' : 'default',\r\n        }}\r\n      >\r\n        {party.characters.map((c) => (\r\n          <FlexContainer\r\n            $direction='column'\r\n            key={c.id}\r\n            style={{ height: 177, justifyContent: 'flex-end' }}\r\n          >\r\n            {showConfirmButton(c) && (\r\n              <FlexContainer style={{ justifyContent: 'center' }}>\r\n                <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n                  <ConfirmButton onClick={() => next(c)} $direction='up'>\r\n                    Confirm Target\r\n                  </ConfirmButton>\r\n                </div>\r\n              </FlexContainer>\r\n            )}\r\n            <LocalToastRp>\r\n              {({ push }) => (\r\n                <PartyCharacter\r\n                  push={push}\r\n                  selected={activeCharacter && c && c.id === activeCharacter.id}\r\n                  character={c}\r\n                  onClick={() => onCharacterClick && onCharacterClick(c)}\r\n                  onConsumableClick={(consumable, index) => {\r\n                    try {\r\n                      if (!c || !consumable || index === undefined) return\r\n                      if (onConsumableClick) {\r\n                        onConsumableClick(c, index, consumable)\r\n                      }\r\n                      if (c && c.id === activeCharacter.id) {\r\n                        onSkillSelect(consumable.skill, index)\r\n                      }\r\n                    } catch (e) {}\r\n                  }}\r\n                />\r\n              )}\r\n            </LocalToastRp>\r\n          </FlexContainer>\r\n        ))}\r\n      </FlexContainer>\r\n      {selectedSkill && selectedSkill.targetType === 'party' && (\r\n        <FlexContainer style={{ justifyContent: 'center' }}>\r\n          <div style={{ boxShadow: '0px 2px 5px black' }}>\r\n            <ConfirmButton onClick={() => next(party)}>\r\n              Confirm Group Target\r\n            </ConfirmButton>\r\n          </div>\r\n        </FlexContainer>\r\n      )}\r\n    </FlexContainer>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useGameStateContext } from '../GameStateContext'\r\nimport { tParty } from '../../game/Party/type'\r\nimport { makeParty } from '../../game/Party/util'\r\nimport { tCombatEncounter } from '../../game/Encounter/type'\r\nimport { CombatContextProvider } from '.'\r\n\r\nexport interface LinkedCombatContextProviderPropsT {\r\n  children: JSX.Element\r\n}\r\nexport const LinkedCombatContext = (\r\n  props: LinkedCombatContextProviderPropsT,\r\n) => {\r\n  const { children } = props\r\n  const { currentEncounter } = useGameStateContext()\r\n  const [combatParty, setCombatParty] = useState<tParty>(makeParty(0))\r\n  useEffect(() => {\r\n    if (currentEncounter && (currentEncounter as tCombatEncounter).party)\r\n      setCombatParty((currentEncounter as tCombatEncounter).party)\r\n  }, [currentEncounter])\r\n\r\n  return (\r\n    <CombatContextProvider\r\n      enemyParty={combatParty}\r\n      setEnemyParty={setCombatParty}\r\n      onRequestNewParty={() => {}}\r\n    >\r\n      {children}\r\n    </CombatContextProvider>\r\n  )\r\n}\r\n","import React from 'react'\nimport ForestBg from './assets/img/flat-forestred.jpg'\nimport { Switch } from 'react-router-dom'\nimport { Combat } from './domain/Combat'\nimport { CombatLogContextProvider } from './contexts/CombatLogContext'\nimport { ModalContextProvider } from './contexts/ModalContext'\nimport { makeRoute, RouteController } from './routes'\nimport { Party } from './domain/Party'\nimport { Start } from './domain/Start'\nimport { UIContextProvider, useUIContext } from './contexts/UIContext'\nimport { usePartyContext } from './contexts/PartyContext'\nimport { PlayerParty } from './components/PlayerParty'\nimport { FlexContainer, FullContainer } from './elements/flex'\nimport { LinkedCombatContext } from './contexts/CombatContext/context'\n\nconst CombatDomain = () => {\n  return (\n    <CombatLogContextProvider>\n      <Combat />\n    </CombatLogContextProvider>\n  )\n}\n\nconst GlobalCharacters = () => {\n  const { party } = usePartyContext()\n  const { onCharacterConsumableClick } = useUIContext()\n  return (\n    <div style={{ marginBottom: 30 }}>\n      <PlayerParty\n        party={party}\n        onConsumableClick={(c, i, item) => {\n          if (onCharacterConsumableClick) {\n            onCharacterConsumableClick(c, i, item)\n          }\n        }}\n      />\n    </div>\n  )\n}\n\nexport const App = () => {\n  return (\n    <ModalContextProvider>\n      <LinkedCombatContext>\n        <UIContextProvider>\n          <FlexContainer\n            $full\n            $direction='column'\n            style={{\n              height: '100%',\n              overflow: 'hidden',\n              background: `url(${ForestBg}) center center fixed no-repeat`,\n              backgroundSize: 'cover',\n            }}\n          >\n            <RouteController />\n            <FullContainer>\n              <Switch>\n                {makeRoute('/party', Party)}\n                {makeRoute('/combat', CombatDomain)}\n                {makeRoute('/', Start)}\n              </Switch>\n            </FullContainer>\n            <GlobalCharacters />\n          </FlexContainer>\n        </UIContextProvider>\n      </LinkedCombatContext>\n    </ModalContextProvider>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './index.css'\n\nimport { Provider as StyletronProvider, DebugEngine } from 'styletron-react'\nimport { Client as Styletron } from 'styletron-engine-atomic'\nimport { Provider as ReduxProvider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { makeStore } from './state'\nimport { PartyContextProvider } from './contexts/PartyContext'\nimport { GameStateContextProvider } from './contexts/GameStateContext'\n\nconst debug = process.env.NODE_ENV === 'production' ? void 0 : new DebugEngine()\nconst engine: Styletron = new Styletron()\nconst store = makeStore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n        <PartyContextProvider>\n          <GameStateContextProvider>\n            <Router>\n              <App />\n            </Router>\n          </GameStateContextProvider>\n        </PartyContextProvider>\n      </StyletronProvider>\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport party from './party'\r\nimport game from './game'\r\n\r\nexport const makeStore = () =>\r\n  createStore(combineReducers({ party, game }), compose(applyMiddleware(thunk)))\r\n","module.exports = __webpack_public_path__ + \"static/media/coins.97dc8c40.svg\";","module.exports = __webpack_public_path__ + \"static/media/broadsword.47ecfebc.svg\";","module.exports = __webpack_public_path__ + \"static/media/shield-impact.54fdc5c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/heavy-timer.1072a406.svg\";","module.exports = __webpack_public_path__ + \"static/media/ubisoft-sun.30335592.svg\";","module.exports = __webpack_public_path__ + \"static/media/g-clef.77d209b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/shieldcomb.802f20f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/chest-armor.f1f52a3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/viking-shield.a61f8230.svg\";","module.exports = __webpack_public_path__ + \"static/media/leather-boot.89b85474.svg\";","module.exports = __webpack_public_path__ + \"static/media/visored-helm.1f2ced7f.svg\";"],"sourceRoot":""}